; ModuleID = './workdir/totd_constprop.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.generic_list = type { %struct.generic_list*, %struct.generic_list*, i8* }
%struct.anon = type { %union.anon.79, i16, i16, i64 }
%union.anon.79 = type { %struct.sockaddr }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.qset = type { %struct.gqueue*, %struct.gqueue* }
%struct.gqueue = type { %struct.gqueue*, i8* }
%struct.anon.124 = type { i32, void (i32)*, void ()* }
%struct.ifconf = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.in6_addr = type { %union.anon.1 }
%union.anon.1 = type { [4 x i32] }
%struct.ToT = type { i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [30 x [25 x i8]], %struct.generic_list*, %struct.generic_list*, i32, [31 x i8*], i32, [30 x %struct.in6_addr], [30 x %struct.in6_addr], [30 x i32] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.context = type { %struct.context*, %struct.context*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data*, i32 (%struct.context*)*, i32 (%struct.context*)*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.ev_to_data = type { i64, i32 (%struct.ev_to_data*)*, i32, %union.anon }
%union.anon.0 = type { %struct.mesg_hdr* }
%struct.mesg_hdr = type { i16, i16, i16, i16, i16, i16 }
%struct.nia = type { %struct.sockaddr*, i32, i32 }
%struct.rr_set = type { i32, i64, %union.u_key, i64, %union.u_data }
%union.u_key = type { %struct.key_info* }
%struct.key_info = type { i16, i16, i16 }
%union.u_data = type { %struct.data_data* }
%struct.data_data = type { i16 }
%struct.rr = type { i32, i16 }
%struct.ev_to_data.14 = type { i64, {}*, i32, %union.anon }
%struct.context.19 = type { %struct.context.19*, %struct.context.19*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data.14*, i32 (%struct.context.19*)*, i32 (%struct.context.19*)*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.RRset_Couple = type { %struct.rr_set*, %struct.rr_list* }
%struct.rr_list = type { %struct.rr_list*, i32, i32, %struct.rr* }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.ev_tcp_common_data = type { i32, %struct.context* }
%struct.fd_set = type { [16 x i64] }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.fwd = type { [257 x i8], i32, %struct.sockaddr*, i32, i64, i32 }
%struct.context.69 = type { %struct.context.69*, %struct.context.69*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data*, {}*, {}*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.context.107 = type { %struct.context.107*, %struct.context.107*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data*, {}*, {}*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.ev_sig_data = type { void ()* }
%struct.ev_udp_in_data = type { %struct.context*, %struct.sockaddr*, i16 }
%struct.ifreq = type { %union.anon.1.154, %union.anon.2 }
%union.anon.1.154 = type { [16 x i8] }
%union.anon.2 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.context.165 = type { %struct.context.165*, %struct.context.165*, i32, i32, %struct.generic_list*, %struct.generic_list*, %struct.ev_to_data*, {}*, {}*, [256 x i8], i32, i16, i16, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*, %union.anon.0, i32, i8*, %struct.nia*, i16, i16, %struct.sockaddr*, i32 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [16 x i8] c"request_start()\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"%s: malformed question\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Query name: %s type: %s\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%s: converted new ptr name: %s\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"%s: converted ptr name: %s\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"%s: converted scoped qname: %s\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"%s: no forwarders available!\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"Selected forwarder: %s\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"do_forward()\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"%s: constructing query\00", align 1
@do_forward.buf = internal global [65535 x i8] zeroinitializer, align 16, !track !0
@.str.11 = private unnamed_addr constant [38 x i8] c"%s: failed to keep query in %zd bytes\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"Forward %s query for %s over UDP\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"Forward %s query for %s over TCP\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"Exceeded retry limit\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"Cycled through list of nameservers\00", align 1
@.str.17 = private unnamed_addr constant [40 x i8] c"Retrying query for %s to nameserver: %s\00", align 1
@.str.18 = private unnamed_addr constant [46 x i8] c"Retry %d of %d+%d will time out in %d seconds\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"recursive_process()\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"%s: malformed message\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"%s: child died\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"%s: work state: %d\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%s: Truncated Message\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"%s: Switch to TCP\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"%s: TCP message too big\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"AAAA\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"A6\00", align 1
@.str.26 = private unnamed_addr constant [34 x i8] c"%s: %s query changed into A query\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%s: converted PTR response %s\00", align 1
@.str.30 = private unnamed_addr constant [35 x i8] c"%s: converted new PTR response: %s\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"Changed target to A\00", align 1
@.str.32 = private unnamed_addr constant [27 x i8] c"%s: current work state: %d\00", align 1
@.str.33 = private unnamed_addr constant [66 x i8] c"%s: exceeded max number of CNAME links: depth %d. A loop perhaps?\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"Changed target to CNAME name\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"Selected nameserver: %s\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"Add IPv6 addresses to answers\00", align 1
@.str.37 = private unnamed_addr constant [41 x i8] c"Add IPv6 addresses to additional section\00", align 1
@.str.38 = private unnamed_addr constant [58 x i8] c"%s: checked whether to rewrite global into scoped address\00", align 1
@.str.39 = private unnamed_addr constant [25 x i8] c"Converted query name: %s\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"%s: finish\00", align 1
@.str.45 = private unnamed_addr constant [24 x i8] c"cname_without_crecord()\00", align 1
@.str.46 = private unnamed_addr constant [35 x i8] c"%s: Searching for CNAME in answers\00", align 1
@.str.47 = private unnamed_addr constant [44 x i8] c"%s: Problem: CNAME without canonical record\00", align 1
@.str.41 = private unnamed_addr constant [17 x i8] c"request_finish()\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"%s: can't parse answer data\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"%s: process parent context\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%s: return success\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"response_abort()\00", align 1
@.str.1.49 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2.50 = private unnamed_addr constant [18 x i8] c"assemble_answer()\00", align 1
@.str.3.51 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@assemble_response.buf = internal global [65535 x i8] zeroinitializer, align 16, !track !1
@.str.52 = private unnamed_addr constant [27 x i8] c"context_timeout_register()\00", align 1
@.str.1.53 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.54 = private unnamed_addr constant [32 x i8] c"%s: duplicate timeout. ignoring\00", align 1
@.str.3.55 = private unnamed_addr constant [20 x i8] c"%s: scheduled in %d\00", align 1
@.str.4.58 = private unnamed_addr constant [17 x i8] c"context_create()\00", align 1
@.str.5.59 = private unnamed_addr constant [7 x i8] c"%s: %p\00", align 1
@.str.6.62 = private unnamed_addr constant [18 x i8] c"context_destroy()\00", align 1
@permutation = internal global [32768 x i16] zeroinitializer, align 16
@mesg_id.range = internal global i32 0, align 4
@mesg_id.index = internal global i32 0, align 4
@.str.65 = private unnamed_addr constant [15 x i8] c"mesg_id() = %d\00", align 1
@.str.1.68 = private unnamed_addr constant [18 x i8] c"mesg_make_query()\00", align 1
@.str.2.71 = private unnamed_addr constant [31 x i8] c"%s: (qtype: %s, id: %d): start\00", align 1
@.str.3.72 = private unnamed_addr constant [23 x i8] c"%s: qname offset = %zd\00", align 1
@.str.4.73 = private unnamed_addr constant [30 x i8] c"%s: qtype/qclass offset = %zd\00", align 1
@.str.31.74 = private unnamed_addr constant [7 x i8] c"(void)\00", align 1
@.str.32.75 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.33.76 = private unnamed_addr constant [3 x i8] c"NS\00", align 1
@.str.34.77 = private unnamed_addr constant [3 x i8] c"MD\00", align 1
@.str.35.78 = private unnamed_addr constant [3 x i8] c"MF\00", align 1
@.str.36.79 = private unnamed_addr constant [6 x i8] c"CNAME\00", align 1
@.str.37.80 = private unnamed_addr constant [4 x i8] c"SOA\00", align 1
@.str.38.81 = private unnamed_addr constant [3 x i8] c"MB\00", align 1
@.str.39.82 = private unnamed_addr constant [3 x i8] c"MG\00", align 1
@.str.40.83 = private unnamed_addr constant [3 x i8] c"MR\00", align 1
@.str.41.84 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@.str.42.85 = private unnamed_addr constant [4 x i8] c"WKS\00", align 1
@.str.43.86 = private unnamed_addr constant [4 x i8] c"PTR\00", align 1
@.str.44.87 = private unnamed_addr constant [6 x i8] c"HINFO\00", align 1
@.str.45.88 = private unnamed_addr constant [6 x i8] c"MINFO\00", align 1
@.str.46.89 = private unnamed_addr constant [3 x i8] c"MX\00", align 1
@.str.47.90 = private unnamed_addr constant [4 x i8] c"TXT\00", align 1
@.str.48.91 = private unnamed_addr constant [3 x i8] c"RP\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"AAAA\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"SRV\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"A6\00", align 1
@.str.52.92 = private unnamed_addr constant [6 x i8] c"UINFO\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"TSIG\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"IXFR\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"AXFR\00", align 1
@.str.28.93 = private unnamed_addr constant [4 x i8] c"ANY\00", align 1
@.str.56 = private unnamed_addr constant [26 x i8] c"Unknown resource type(%d)\00", align 1
@.str.30.94 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.5.99 = private unnamed_addr constant [24 x i8] c"mesg_write_rrset_list()\00", align 1
@.str.6.100 = private unnamed_addr constant [11 x i8] c"%s: start.\00", align 1
@.str.7.101 = private unnamed_addr constant [19 x i8] c"%s: write a record\00", align 1
@.str.8.102 = private unnamed_addr constant [23 x i8] c"write ownername failed\00", align 1
@.str.9.103 = private unnamed_addr constant [19 x i8] c"write rdata failed\00", align 1
@.str.10.104 = private unnamed_addr constant [22 x i8] c"%s: now counter = %zd\00", align 1
@.str.11.105 = private unnamed_addr constant [14 x i8] c"%s: return %d\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"write_dname()\00", align 1
@.str.21.106 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.58 = private unnamed_addr constant [30 x i8] c"%s: return (written_len = %d)\00", align 1
@.str.12.109 = private unnamed_addr constant [22 x i8] c"query message overrun\00", align 1
@.str.13.112 = private unnamed_addr constant [21 x i8] c"record invalid -- %s\00", align 1
@.str.14.113 = private unnamed_addr constant [28 x i8] c"record invalid -- SOA MNAME\00", align 1
@.str.15.114 = private unnamed_addr constant [28 x i8] c"record invalid -- SOA RNAME\00", align 1
@.str.16.115 = private unnamed_addr constant [30 x i8] c"record invalid -- MX EXCHANGE\00", align 1
@.str.17.116 = private unnamed_addr constant [32 x i8] c"record invalid -- RP MBOX-DNAME\00", align 1
@.str.18.117 = private unnamed_addr constant [31 x i8] c"record invalid -- RP TXT-DNAME\00", align 1
@.str.19.118 = private unnamed_addr constant [25 x i8] c"unknown resource type %d\00", align 1
@.str.22.119 = private unnamed_addr constant [14 x i8] c"token_len: %d\00", align 1
@.str.23.120 = private unnamed_addr constant [4 x i8] c"\5C[x\00", align 1
@.str.24.121 = private unnamed_addr constant [5 x i8] c"%c%c\00", align 1
@.str.25.122 = private unnamed_addr constant [6 x i8] c"/%u].\00", align 1
@.str.20.125 = private unnamed_addr constant [13 x i8] c"mesg_parse()\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"mesg_read_sec()\00", align 1
@.str.60 = private unnamed_addr constant [55 x i8] c"%s: matching record found rrs->dname = %s / rname = %s\00", align 1
@.str.61 = private unnamed_addr constant [31 x i8] c"%s: make each RRset from list.\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"%s: end\00", align 1
@.str.63 = private unnamed_addr constant [30 x i8] c"%s: message extraction failed\00", align 1
@.str.26.126 = private unnamed_addr constant [3 x i8] c"IN\00", align 1
@.str.27.127 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.29.128 = private unnamed_addr constant [27 x i8] c"Unknown resource class(%d)\00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"conv_trick_list()\00", align 1
@.str.1.132 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.133 = private unnamed_addr constant [17 x i8] c"%s: duplicate %s\00", align 1
@.str.3.134 = private unnamed_addr constant [19 x i8] c"%s: converting: %s\00", align 1
@.str.4.135 = private unnamed_addr constant [28 x i8] c"%s: Can't convert A to AAAA\00", align 1
@.str.6.136 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.7.137 = private unnamed_addr constant [11 x i8] c"replace by\00", align 1
@.str.5.138 = private unnamed_addr constant [10 x i8] c"%s: %s %s\00", align 1
@.str.27.139 = private unnamed_addr constant [19 x i8] c"conv_trick_rrset()\00", align 1
@.str.26.140 = private unnamed_addr constant [14 x i8] c"search_name()\00", align 1
@.str.8.143 = private unnamed_addr constant [17 x i8] c"conv_trick_ptr()\00", align 1
@.str.9.144 = private unnamed_addr constant [23 x i8] c"Cannot allocate memory\00", align 1
@.str.10.147 = private unnamed_addr constant [20 x i8] c"conv_trick_newptr()\00", align 1
@.str.11.148 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@.str.12.149 = private unnamed_addr constant [18 x i8] c"conv_trick_conf()\00", align 1
@.str.13.150 = private unnamed_addr constant [39 x i8] c"%s: max number of %d prefixes exceeded\00", align 1
@.str.14.151 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.15.152 = private unnamed_addr constant [28 x i8] c"%s: invalid IPv6 prefix: %s\00", align 1
@.str.16.155 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.17.156 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.18.157 = private unnamed_addr constant [4 x i8] c"IP6\00", align 1
@.str.19.158 = private unnamed_addr constant [4 x i8] c"ip6\00", align 1
@.str.20.159 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.21.162 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.22.163 = private unnamed_addr constant [14 x i8] c"\07in-addr\04arpa\00", align 1
@.str.23.166 = private unnamed_addr constant [5 x i8] c"ARPA\00", align 1
@.str.24.167 = private unnamed_addr constant [5 x i8] c"arpa\00", align 1
@.str.25.170 = private unnamed_addr constant [15 x i8] c"\07in-addr\04arpa\00\00", align 1
@.str.171 = private unnamed_addr constant [31 x i8] c"ev_tcp_srv_accept(): sock = %d\00", align 1
@.str.1.172 = private unnamed_addr constant [11 x i8] c"accept: %m\00", align 1
@.str.2.173 = private unnamed_addr constant [25 x i8] c"ev_tcp_common_register()\00", align 1
@.str.3.174 = private unnamed_addr constant [14 x i8] c"%s: sock = %d\00", align 1
@.str.4.175 = private unnamed_addr constant [23 x i8] c"ev_tcp_common_remove()\00", align 1
@.str.5.176 = private unnamed_addr constant [30 x i8] c"ev_tcp_common_fds: FD_SET(%d)\00", align 1
@ConnL_head = internal global %struct.generic_list* null, align 8, !track !2
@.str.6.177 = private unnamed_addr constant [33 x i8] c"ev_tcp_conn_in_register(): start\00", align 1
@.str.7.180 = private unnamed_addr constant [31 x i8] c"ev_tcp_conn_in_remove(): start\00", align 1
@.str.8.181 = private unnamed_addr constant [28 x i8] c"ev_tcp_conn_in_fds(): start\00", align 1
@.str.9.182 = private unnamed_addr constant [33 x i8] c"ev_tcp_conn_in_fd_check(): start\00", align 1
@ETOL_head = internal global %struct.generic_list* null, align 8, !track !3
@.str.10.183 = private unnamed_addr constant [29 x i8] c"ev_tcp_out_register(): start\00", align 1
@.str.11.186 = private unnamed_addr constant [27 x i8] c"ev_tcp_out_remove(): start\00", align 1
@.str.12.187 = private unnamed_addr constant [24 x i8] c"ev_tcp_out_fds(): start\00", align 1
@.str.13.188 = private unnamed_addr constant [29 x i8] c"ev_tcp_out_fd_check(): start\00", align 1
@.str.191 = private unnamed_addr constant [8 x i8] c"[%s]:%d\00", align 1
@.str.1.192 = private unnamed_addr constant [8 x i8] c"::ffff:\00", align 1
@.str.2.193 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.3.194 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.4.195 = private unnamed_addr constant [12 x i8] c"fwd_alloc()\00", align 1
@.str.5.196 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.6.197 = private unnamed_addr constant [33 x i8] c"Forwarder %s configured, port %d\00", align 1
@.str.7.198 = private unnamed_addr constant [38 x i8] c"Can't configure forwarder %s, port %d\00", align 1
@.str.8.199 = private unnamed_addr constant [17 x i8] c"fwd_add(): start\00", align 1
@.str.9.200 = private unnamed_addr constant [11 x i8] c"fwd_select\00", align 1
@.str.10.201 = private unnamed_addr constant [12 x i8] c"%s: start()\00", align 1
@.str.11.202 = private unnamed_addr constant [25 x i8] c"No forwarder configured!\00", align 1
@.str.12.203 = private unnamed_addr constant [25 x i8] c"Use initial forwarder %s\00", align 1
@.str.13.204 = private unnamed_addr constant [26 x i8] c"Enable forwarder %s again\00", align 1
@.str.14.205 = private unnamed_addr constant [21 x i8] c"Current forwarder %s\00", align 1
@.str.15.206 = private unnamed_addr constant [10 x i8] c"%s: end()\00", align 1
@.str.16.209 = private unnamed_addr constant [9 x i8] c"fwd_mark\00", align 1
@.str.17.210 = private unnamed_addr constant [28 x i8] c"Mark forwarder with %d: %s \00", align 1
@.str.18.211 = private unnamed_addr constant [33 x i8] c"Disabling forwarder %s (next %s)\00", align 1
@.str.19.214 = private unnamed_addr constant [15 x i8] c"fwd_socketlist\00", align 1
@.str.215 = private unnamed_addr constant [15 x i8] c"queue_create()\00", align 1
@.str.1.216 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.2.217 = private unnamed_addr constant [10 x i8] c"enqueue()\00", align 1
@.str.218 = private unnamed_addr constant [16 x i8] c"config file: %s\00", align 1
@.str.1.219 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2.220 = private unnamed_addr constant [27 x i8] c"can't open config file: %s\00", align 1
@.str.3.221 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.4.222 = private unnamed_addr constant [10 x i8] c"forwarder\00", align 1
@.str.5.223 = private unnamed_addr constant [58 x i8] c"line %d: invalid format: forwarder <IPaddr> [port <port>]\00", align 1
@.str.6.224 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.7.225 = private unnamed_addr constant [61 x i8] c"line %d: invalid format, missing <port> after port attribute\00", align 1
@.str.8.226 = private unnamed_addr constant [60 x i8] c"line %d: invalid format, cannot parse unknown attribute: %s\00", align 1
@.str.9.227 = private unnamed_addr constant [7 x i8] c"prefix\00", align 1
@.str.10.228 = private unnamed_addr constant [45 x i8] c"line %d: invalid format: prefix <IPv6prefix>\00", align 1
@.str.11.229 = private unnamed_addr constant [26 x i8] c"can not add prefix %d: %s\00", align 1
@.str.12.230 = private unnamed_addr constant [20 x i8] c"prefix %d added: %s\00", align 1
@.str.13.231 = private unnamed_addr constant [6 x i8] c"allow\00", align 1
@.str.14.232 = private unnamed_addr constant [44 x i8] c"line %d: invalid format: allow <IP address>\00", align 1
@.str.15.233 = private unnamed_addr constant [34 x i8] c"NOTE: http support not enabled!!!\00", align 1
@.str.16.234 = private unnamed_addr constant [6 x i8] c"retry\00", align 1
@.str.17.235 = private unnamed_addr constant [41 x i8] c"line %d: invalid format: retry <seconds>\00", align 1
@.str.18.236 = private unnamed_addr constant [8 x i8] c"pidfile\00", align 1
@.str.19.237 = private unnamed_addr constant [44 x i8] c"line %d: invalid format: pidfile <filename>\00", align 1
@.str.20.238 = private unnamed_addr constant [11 x i8] c"interfaces\00", align 1
@.str.21.239 = private unnamed_addr constant [52 x i8] c"line %d: invalid format: interfaces <ifa> <ifb> ...\00", align 1
@.str.22.240 = private unnamed_addr constant [42 x i8] c"line %d: to many interfaces, more than %d\00", align 1
@.str.23.241 = private unnamed_addr constant [50 x i8] c"line %d: %d interfaces listed, no wildcard socket\00", align 1
@.str.24.242 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.25.243 = private unnamed_addr constant [40 x i8] c"line %d: invalid format: port <portnum>\00", align 1
@.str.26.244 = private unnamed_addr constant [7 x i8] c"scoped\00", align 1
@.str.27.245 = private unnamed_addr constant [51 x i8] c"line %d: invalid format: scoped <from> <to> <plen>\00", align 1
@.str.28.246 = private unnamed_addr constant [32 x i8] c"can not add scoped %d: %s %s %s\00", align 1
@.str.29.247 = private unnamed_addr constant [26 x i8] c"scoped %d added: %s %s %d\00", align 1
@.str.30.248 = private unnamed_addr constant [44 x i8] c"line %d: unknown keyword in config file: %s\00", align 1
@.str.31.249 = private unnamed_addr constant [41 x i8] c"errors found in config file. errcnt = %d\00", align 1
@.str.32.250 = private unnamed_addr constant [27 x i8] c"configuration file loaded.\00", align 1
@.str.253 = private unnamed_addr constant [20 x i8] c"tcp_request_start()\00", align 1
@.str.1.254 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.255 = private unnamed_addr constant [26 x i8] c"%s: can't open socket: %m\00", align 1
@.str.3.256 = private unnamed_addr constant [22 x i8] c"%s: can't connect: %m\00", align 1
@.str.4.257 = private unnamed_addr constant [39 x i8] c"%s: Query will time out in %d seconds.\00", align 1
@.str.10.258 = private unnamed_addr constant [31 x i8] c"tcp_request_wait_connect_retry\00", align 1
@.str.11.259 = private unnamed_addr constant [26 x i8] c"%s: can't TCP connect: %m\00", align 1
@.str.12.260 = private unnamed_addr constant [32 x i8] c"%s: force retry at zero timeout\00", align 1
@.str.5.261 = private unnamed_addr constant [35 x i8] c"tcp_request_wait_connect_process()\00", align 1
@.str.6.262 = private unnamed_addr constant [26 x i8] c"%s: TCP connect succeeded\00", align 1
@.str.7.263 = private unnamed_addr constant [36 x i8] c"%s: TCP forwarder connect timed out\00", align 1
@.str.8.264 = private unnamed_addr constant [33 x i8] c"Forwarder refused TCP connection\00", align 1
@.str.9.265 = private unnamed_addr constant [26 x i8] c"TCP forwarder unreachable\00", align 1
@.str.15.266 = private unnamed_addr constant [41 x i8] c"tcp connection not responding.... closed\00", align 1
@.str.13.267 = private unnamed_addr constant [28 x i8] c"tcp_request_writing_process\00", align 1
@.str.14.268 = private unnamed_addr constant [29 x i8] c"%s: return, continue writing\00", align 1
@.str.20.269 = private unnamed_addr constant [28 x i8] c"tcp_request_readlen_retry()\00", align 1
@.str.21.270 = private unnamed_addr constant [38 x i8] c"TCP connection not respond.... closed\00", align 1
@.str.22.271 = private unnamed_addr constant [41 x i8] c"Giving up quickly on IPv6 address record\00", align 1
@.str.23.272 = private unnamed_addr constant [27 x i8] c"%s: process parent context\00", align 1
@.str.16.273 = private unnamed_addr constant [30 x i8] c"tcp_request_readlen_process()\00", align 1
@.str.17.274 = private unnamed_addr constant [38 x i8] c"cannot read length on TCP connection.\00", align 1
@.str.18.275 = private unnamed_addr constant [21 x i8] c"%s: data length = %d\00", align 1
@.str.19.276 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.26.277 = private unnamed_addr constant [36 x i8] c"connection not responding... closed\00", align 1
@.str.24.278 = private unnamed_addr constant [30 x i8] c"tcp_request_reading_process()\00", align 1
@.str.25.279 = private unnamed_addr constant [27 x i8] c"%s: Read failed on TCP: %m\00", align 1
@.str.27.280 = private unnamed_addr constant [16 x i8] c"tcp_writemesg()\00", align 1
@.str.28.281 = private unnamed_addr constant [28 x i8] c"%s: write length failed: %m\00", align 1
@.str.29.282 = private unnamed_addr constant [21 x i8] c"%s: write failed: %m\00", align 1
@.str.285 = private unnamed_addr constant [21 x i8] c"tcp_response_start()\00", align 1
@.str.1.286 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.5.287 = private unnamed_addr constant [29 x i8] c"tcp_response_readlen_retry()\00", align 1
@.str.6.288 = private unnamed_addr constant [42 x i8] c"%s: connection does not respond. closing.\00", align 1
@.str.2.289 = private unnamed_addr constant [31 x i8] c"tcp_response_readlen_process()\00", align 1
@.str.3.290 = private unnamed_addr constant [35 x i8] c"%s: cannot read length TCP message\00", align 1
@.str.4.291 = private unnamed_addr constant [21 x i8] c"%s: data length = %d\00", align 1
@.str.7.292 = private unnamed_addr constant [31 x i8] c"tcp_response_reading_process()\00", align 1
@.str.8.293 = private unnamed_addr constant [32 x i8] c"%s: left %zd bytes -- continue.\00", align 1
@.str.9.294 = private unnamed_addr constant [19 x i8] c"%s: Request failed\00", align 1
@.str.10.295 = private unnamed_addr constant [16 x i8] c"%s: Totd failed\00", align 1
@.str.11.296 = private unnamed_addr constant [19 x i8] c"%s: end (writing:)\00", align 1
@.str.16.297 = private unnamed_addr constant [31 x i8] c"tcp_response_writing_process()\00", align 1
@.str.13.298 = private unnamed_addr constant [21 x i8] c"%s: return, continue\00", align 1
@.str.15.299 = private unnamed_addr constant [19 x i8] c"%s: return, finish\00", align 1
@.str.17.300 = private unnamed_addr constant [44 x i8] c"tcp_response_waiting_client_close_process()\00", align 1
@.str.18.301 = private unnamed_addr constant [15 x i8] c"%s: read(): %m\00", align 1
@.str.19.302 = private unnamed_addr constant [23 x i8] c"%s: incoming length %d\00", align 1
@.str.20.303 = private unnamed_addr constant [29 x i8] c"%s: return, continue reading\00", align 1
@.str.21.304 = private unnamed_addr constant [22 x i8] c"tcp_response_finish()\00", align 1
@.str.12.305 = private unnamed_addr constant [33 x i8] c"tcp_response_recursive_process()\00", align 1
@.str.14.306 = private unnamed_addr constant [25 x i8] c"response message too big\00", align 1
@Ev_dup_table = internal global [1000 x %struct.anon] zeroinitializer, align 16, !track !4
@.str.307 = private unnamed_addr constant [21 x i8] c"ev_dup(): index = %d\00", align 1
@.str.1.308 = private unnamed_addr constant [29 x i8] c"ev_dup(): duplicate detected\00", align 1
@.str.311 = private unnamed_addr constant [12 x i8] c"list_init()\00", align 1
@.str.1.312 = private unnamed_addr constant [17 x i8] c"%s: new list: %p\00", align 1
@.str.325 = private unnamed_addr constant [40 x i8] c"rr_alloc(): start ttl = %d, rd_len = %d\00", align 1
@.str.1.328 = private unnamed_addr constant [27 x i8] c"start: rr_list_alloc(void)\00", align 1
@.str.2.331 = private unnamed_addr constant [15 x i8] c"rr_list_free()\00", align 1
@.str.3.332 = private unnamed_addr constant [33 x i8] c"%s start: NULL: immediate return\00", align 1
@.str.4.333 = private unnamed_addr constant [15 x i8] c"%s start: (%p)\00", align 1
@.str.5.334 = private unnamed_addr constant [12 x i8] c"%s: free %p\00", align 1
@.str.6.337 = private unnamed_addr constant [45 x i8] c"start: rr_list_add(....,ttl=%d,rd_len=%d...)\00", align 1
@.str.7.340 = private unnamed_addr constant [28 x i8] c"rrset_alloc(): allocated %p\00", align 1
@.str.8.343 = private unnamed_addr constant [32 x i8] c"start: rrset_create(%s,%s,....)\00", align 1
@.str.9.346 = private unnamed_addr constant [30 x i8] c"rrset_create: final length %d\00", align 1
@.str.10.347 = private unnamed_addr constant [37 x i8] c"rrset_free(%p): link %d -> destroyed\00", align 1
@.str.11.348 = private unnamed_addr constant [30 x i8] c"rrset_free(%p): link %d -> %d\00", align 1
@.str.12.353 = private unnamed_addr constant [30 x i8] c"rrset_copy(%p): link %d -> %d\00", align 1
@.str.360 = private unnamed_addr constant [20 x i8] c"udp_request_start()\00", align 1
@.str.1.361 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.362 = private unnamed_addr constant [31 x i8] c"Query to big for UDP datagram.\00", align 1
@.str.3.363 = private unnamed_addr constant [16 x i8] c"send failed: %m\00", align 1
@.str.4.364 = private unnamed_addr constant [32 x i8] c"%s: force retry at zero timeout\00", align 1
@.str.5.365 = private unnamed_addr constant [30 x i8] c"Query times out in %d seconds\00", align 1
@.str.6.366 = private unnamed_addr constant [8 x i8] c"%s: end\00", align 1
@.str.8.367 = private unnamed_addr constant [20 x i8] c"udp_request_retry()\00", align 1
@.str.9.368 = private unnamed_addr constant [41 x i8] c"Giving up quickly on IPv6 address record\00", align 1
@.str.10.369 = private unnamed_addr constant [27 x i8] c"%s: process parent context\00", align 1
@.str.11.370 = private unnamed_addr constant [19 x i8] c"%s: return success\00", align 1
@.str.12.371 = private unnamed_addr constant [33 x i8] c"retry failed(default socket): %m\00", align 1
@.str.13.372 = private unnamed_addr constant [26 x i8] c"can't send whole datagram\00", align 1
@.str.7.373 = private unnamed_addr constant [22 x i8] c"udp_request_process()\00", align 1
@ev_to_queue = internal global %struct.qset* null, align 8, !track !5
@.str.376 = private unnamed_addr constant [17 x i8] c"ev_to_register()\00", align 1
@.str.1.377 = private unnamed_addr constant [27 x i8] c"%s: Cannot allocate memory\00", align 1
@.str.2.378 = private unnamed_addr constant [22 x i8] c"%s: add event to head\00", align 1
@.str.3.379 = private unnamed_addr constant [16 x i8] c"%s: add to tail\00", align 1
@.str.4.380 = private unnamed_addr constant [18 x i8] c"%s: add to middle\00", align 1
@.str.5.381 = private unnamed_addr constant [21 x i8] c"ev_timeout_process()\00", align 1
@.str.6.382 = private unnamed_addr constant [25 x i8] c"%s: call timeout handler\00", align 1
@.str.7.383 = private unnamed_addr constant [25 x i8] c"%s: cancel timeout event\00", align 1
@.str.8.384 = private unnamed_addr constant [18 x i8] c"ev_to_data_free()\00", align 1
@.str.9.385 = private unnamed_addr constant [35 x i8] c"%s: unknown type for timeout event\00", align 1
@.str.10.386 = private unnamed_addr constant [25 x i8] c"ev_to_register_ifcheck()\00", align 1
@.str.11.387 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.12.388 = private unnamed_addr constant [29 x i8] c"%s: can't allocate new event\00", align 1
@.str.13.389 = private unnamed_addr constant [24 x i8] c"ev_to_handler_ifcheck()\00", align 1
@.str.14.390 = private unnamed_addr constant [31 x i8] c"%s: Socket List still the same\00", align 1
@.str.15.391 = private unnamed_addr constant [24 x i8] c"%s: Socket List updated\00", align 1
@.str.16.392 = private unnamed_addr constant [31 x i8] c"%s: Can't get new socket list!\00", align 1
@.str.393 = private unnamed_addr constant [21 x i8] c"udp_response_start()\00", align 1
@.str.1.394 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.395 = private unnamed_addr constant [22 x i8] c"%s: OPCODE = OP_QUERY\00", align 1
@.str.3.396 = private unnamed_addr constant [23 x i8] c"%s: OPCODE unknown(%d)\00", align 1
@.str.5.397 = private unnamed_addr constant [22 x i8] c"udp_response_finish()\00", align 1
@.str.6.398 = private unnamed_addr constant [40 x i8] c"Overweight, dropping additional section\00", align 1
@.str.7.399 = private unnamed_addr constant [39 x i8] c"Overweight, dropping authority section\00", align 1
@.str.8.400 = private unnamed_addr constant [31 x i8] c"Obese, answers too big for UDP\00", align 1
@.str.9.401 = private unnamed_addr constant [34 x i8] c"Even error msg is too big for UDP\00", align 1
@.str.10.402 = private unnamed_addr constant [24 x i8] c"failed to send message.\00", align 1
@.str.4.403 = private unnamed_addr constant [51 x i8] c"udp_response_recursive_retry should not be called.\00", align 1
@Ev_matrix = dso_local constant [6 x %struct.anon.124] [%struct.anon.124 { i32 2, void (i32)* @ev_signal_initiator_generic, void ()* @ev_handler_cleanup }, %struct.anon.124 { i32 1, void (i32)* inttoptr (i64 1 to void (i32)*), void ()* null }, %struct.anon.124 { i32 15, void (i32)* @ev_signal_initiator_generic, void ()* @ev_handler_cleanup }, %struct.anon.124 { i32 10, void (i32)* @ev_signal_initiator_generic, void ()* @ev_handler_sigusr1 }, %struct.anon.124 { i32 12, void (i32)* @ev_signal_initiator_generic, void ()* @ev_handler_sigusr2 }, %struct.anon.124 { i32 -1, void (i32)* null, void ()* null }], align 16, !track !6
@.str.6.404 = private unnamed_addr constant [41 x i8] c"ev_handler_sigusr2(): processing SIGUSR2\00", align 1
@.str.5.405 = private unnamed_addr constant [41 x i8] c"ev_handler_sigusr1(): processing SIGUSR1\00", align 1
@.str.1.406 = private unnamed_addr constant [38 x i8] c"ev_signal_initiator_generic(): start.\00", align 1
@Ev_signal_queue = internal global %struct.qset* null, align 8, !track !7
@.str.2.407 = private unnamed_addr constant [52 x i8] c"ev_signal_initiator_generic(): no queue to process.\00", align 1
@.str.3.408 = private unnamed_addr constant [48 x i8] c"ev_signal_initiator_generic(): memory exhausted\00", align 1
@.str.4.409 = private unnamed_addr constant [50 x i8] c"ev_signal_initiator_generic(): signal queue full?\00", align 1
@.str.410 = private unnamed_addr constant [42 x i8] c"ev_signal_process(): no queue to process.\00", align 1
@UDPL_head = internal global %struct.generic_list* null, align 8, !track !8
@UDPL_tail = internal global %struct.generic_list* null, align 8, !track !9
@.str.413 = private unnamed_addr constant [21 x i8] c"ev_udp_in_register()\00", align 1
@.str.1.414 = private unnamed_addr constant [10 x i8] c"%s: id=%d\00", align 1
@.str.2.415 = private unnamed_addr constant [7 x i8] c"%s: %p\00", align 1
@.str.3.418 = private unnamed_addr constant [17 x i8] c"ev_udp_in_read()\00", align 1
@.str.4.419 = private unnamed_addr constant [13 x i8] c"recvfrom: %m\00", align 1
@.str.5.420 = private unnamed_addr constant [33 x i8] c"%s: read from sockid %d, len %d.\00", align 1
@.str.6.421 = private unnamed_addr constant [27 x i8] c"ignoring too short message\00", align 1
@.str.7.422 = private unnamed_addr constant [30 x i8] c"%s: duplicate request ignored\00", align 1
@.str.8.423 = private unnamed_addr constant [33 x i8] c"%s: unknown UDP response ignored\00", align 1
@.str.9.424 = private unnamed_addr constant [27 x i8] c"%s: Create new transaction\00", align 1
@.str.10.425 = private unnamed_addr constant [24 x i8] c"no socket for interface\00", align 1
@.str.11.426 = private unnamed_addr constant [23 x i8] c"%s: resume transaction\00", align 1
@.str.429 = private unnamed_addr constant [11 x i8] c"nia_free()\00", align 1
@.str.1.430 = private unnamed_addr constant [26 x i8] c"%s: socket close(fd = %d)\00", align 1
@NI_head = internal global %struct.generic_list* null, align 8, !track !10
@.str.2.435 = private unnamed_addr constant [14 x i8] c"nia_fds_set()\00", align 1
@.str.3.436 = private unnamed_addr constant [15 x i8] c"%s: FD_SET(%d)\00", align 1
@.str.4.437 = private unnamed_addr constant [16 x i8] c"nia_fds_isset()\00", align 1
@.str.5.438 = private unnamed_addr constant [16 x i8] c"%s: %d FD_ISSET\00", align 1
@.str.19.439 = private unnamed_addr constant [18 x i8] c"net_get_ifaddrs()\00", align 1
@.str.20.440 = private unnamed_addr constant [25 x i8] c"%s: get iflist error: %m\00", align 1
@net_get_ifaddrs.ifc_old = internal global %struct.ifconf zeroinitializer, align 8, !track !11
@.str.21.441 = private unnamed_addr constant [30 x i8] c"%s: checked interface data %d\00", align 1
@.str.22.442 = private unnamed_addr constant [26 x i8] c"Found address %s on if %s\00", align 1
@.str.23.443 = private unnamed_addr constant [29 x i8] c"Ignoring address %s on if %s\00", align 1
@.str.26.444 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.27.445 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.24.446 = private unnamed_addr constant [30 x i8] c"net_ifc_cmp(): lengths differ\00", align 1
@.str.25.447 = private unnamed_addr constant [66 x i8] c"net_ifc_cmp(): if1 %s, if2 %s, af1 %d, af2 %d, addr1 %s, addr2 %s\00", align 1
@NI_wildcard = internal global %struct.generic_list* null, align 8, !track !12
@in6addr_any = external dso_local constant %struct.in6_addr, align 4
@NI_wildcard6 = internal global %struct.generic_list* null, align 8, !track !13
@.str.14.450 = private unnamed_addr constant [20 x i8] c"net_stream_socket()\00", align 1
@.str.9.451 = private unnamed_addr constant [27 x i8] c"%s: socket open failed: %m\00", align 1
@.str.10.452 = private unnamed_addr constant [25 x i8] c"%s: socket open(fd = %d)\00", align 1
@.str.11.453 = private unnamed_addr constant [15 x i8] c"setsockopt: %m\00", align 1
@.str.15.454 = private unnamed_addr constant [26 x i8] c"Can't bind TCP socket: %m\00", align 1
@.str.16.455 = private unnamed_addr constant [34 x i8] c"Can't ioctl on service socket: %m\00", align 1
@.str.17.456 = private unnamed_addr constant [18 x i8] c"Listen failed: %m\00", align 1
@.str.18.457 = private unnamed_addr constant [24 x i8] c"Listening on %s for TCP\00", align 1
@.str.8.458 = private unnamed_addr constant [18 x i8] c"net_mesg_socket()\00", align 1
@.str.12.459 = private unnamed_addr constant [33 x i8] c"Can not bind datagram socket: %m\00", align 1
@.str.13.460 = private unnamed_addr constant [24 x i8] c"Listening on %s for UDP\00", align 1
@.str.6.465 = private unnamed_addr constant [16 x i8] c"net_mesg_send()\00", align 1
@.str.7.466 = private unnamed_addr constant [35 x i8] c"%s: no socket to send message over\00", align 1
@.str.469 = private unnamed_addr constant [27 x i8] c"conv_scoped_query(): start\00", align 1
@conv_scoped_query.warned = internal global i32 0, align 4
@.str.1.470 = private unnamed_addr constant [54 x i8] c"Scoped rewriting not implemented for wildcard sockets\00", align 1
@.str.2.471 = private unnamed_addr constant [53 x i8] c"Need hack around your sin6_scope_id for SIOCGIFCONF!\00", align 1
@.str.3.474 = private unnamed_addr constant [19 x i8] c"conv_scoped_list()\00", align 1
@.str.4.475 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.5.476 = private unnamed_addr constant [25 x i8] c"Can't add scoped address\00", align 1
@.str.6.477 = private unnamed_addr constant [11 x i8] c"%s: return\00", align 1
@.str.21.478 = private unnamed_addr constant [25 x i8] c"conv_scoped_rrset: start\00", align 1
@.str.22.479 = private unnamed_addr constant [26 x i8] c"conv_scoped_rrset: return\00", align 1
@.str.7.482 = private unnamed_addr constant [19 x i8] c"conv_scoped_conf()\00", align 1
@.str.8.483 = private unnamed_addr constant [39 x i8] c"%s: max number of %d prefixes exceeded\00", align 1
@.str.9.484 = private unnamed_addr constant [35 x i8] c"%s: plen needs to be multiple of 8\00", align 1
@.str.10.485 = private unnamed_addr constant [24 x i8] c"invalid format: from %s\00", align 1
@.str.11.486 = private unnamed_addr constant [22 x i8] c"invalid format: to %s\00", align 1
@.str.12.487 = private unnamed_addr constant [10 x i8] c"%s: %s %s\00", align 1
@.str.13.490 = private unnamed_addr constant [24 x i8] c"conv_scoped_ptr: start.\00", align 1
@.str.14.491 = private unnamed_addr constant [29 x i8] c"No scoped prefix configured!\00", align 1
@.str.15.494 = private unnamed_addr constant [24 x i8] c"conv_scoped_ptr: return\00", align 1
@.str.16.495 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.17.496 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.18.497 = private unnamed_addr constant [4 x i8] c"IP6\00", align 1
@.str.19.498 = private unnamed_addr constant [4 x i8] c"ip6\00", align 1
@.str.20.499 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.502 = private unnamed_addr constant [23 x i8] c"conv_stf_owner_rrset()\00", align 1
@.str.1.503 = private unnamed_addr constant [10 x i8] c"%s: start\00", align 1
@.str.2.504 = private unnamed_addr constant [14 x i8] c"\07IN-ADDR\04ARPA\00", align 1
@.str.3.505 = private unnamed_addr constant [14 x i8] c"\07in-addr\04arpa\00", align 1
@.str.4.506 = private unnamed_addr constant [25 x i8] c"%s: not a v4 PTR name %s\00", align 1
@.str.5.507 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.6.508 = private unnamed_addr constant [5 x i8] c"%02x\00", align 1
@.str.7.509 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.8.510 = private unnamed_addr constant [17 x i8] c"\012\010\010\012\03ip6\03int\00", align 1
@.str.9.511 = private unnamed_addr constant [21 x i8] c"%s: converted PTR %s\00", align 1
@.str.10.512 = private unnamed_addr constant [15 x i8] c"%s: rrs_new %p\00", align 1
@.str.11.513 = private unnamed_addr constant [19 x i8] c"conv_stf_ns_list()\00", align 1
@.str.12.514 = private unnamed_addr constant [12 x i8] c"%s: type %s\00", align 1
@.str.13.515 = private unnamed_addr constant [15 x i8] c"conv_stf_ptr()\00", align 1
@.str.14.516 = private unnamed_addr constant [22 x i8] c"%s: converted name %s\00", align 1
@.str.15.517 = private unnamed_addr constant [4 x i8] c"INT\00", align 1
@.str.16.518 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.17.519 = private unnamed_addr constant [4 x i8] c"IP6\00", align 1
@.str.18.520 = private unnamed_addr constant [4 x i8] c"ip6\00", align 1
@version = dso_local global i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.525, i32 0, i32 0), align 8, !track !14
@.str.525 = private unnamed_addr constant [43 x i8] c"Trick or Treat Daemon (totd) version 1.5.3\00", align 1
@T = common dso_local global %struct.ToT zeroinitializer, align 8, !track !15
@hex = dso_local global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7.530, i32 0, i32 0), align 8
@.str.7.530 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.3.531 = private unnamed_addr constant [8 x i8] c"enabled\00", align 1
@.str.4.532 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.1.533 = private unnamed_addr constant [875 x i8] c"%s\0AUsage: totd [-6|-no6|-4|-no4|-64|-dn|-v|-q|-p <prefix>|-c <filename>]\0A\0A-[no]6      : enable[disable] IPv6 service functionality\0A-[no]4      : enable[disable] IPv4 service functionality\0A-64         : alias to -6 -4\0A-dn         : debug mode (no fork / loglevel = n)\0A-v          : verbose\0A-q          : quiet\0A-u <user>   : username or uid totd should run at, after startup\0A-g <group>  : groupname or gid totd should run at, after startup\0A-t <dir>    : put totd in <dir> chroot() cage\0A-p <prefix> : a prefix to use for totd tricks; more than one allowed\0A-http-port <port> : port we listen on for http requests (default = 6464)\0A-c <file>   : specify alternative totd configfile, default=%s\0A\0Adefault   : IPv6 is %s and IPv4 is %s\0A\0Atotd %s use IPv6 because it was compiled %s USE_INET6 option in config.h\0Atotd %s use IPv4 because it was compiled %s USE_INET4 option in config.h\0A\00", align 1
@.str.2.534 = private unnamed_addr constant [25 x i8] c"/usr/local/etc/totd.conf\00", align 1
@.str.5.535 = private unnamed_addr constant [4 x i8] c"can\00", align 1
@.str.6.536 = private unnamed_addr constant [5 x i8] c"with\00", align 1
@.str.89 = private unnamed_addr constant [22 x i8] c"terminated with error\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.90 = private unnamed_addr constant [86 x i8] c"totd terminated with error, check system logs for details or run totd in debug mode.\0A\00", align 1
@.str.8.539 = private unnamed_addr constant [18 x i8] c"/var/run/totd.pid\00", align 1
@.str.9.540 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.10.541 = private unnamed_addr constant [23 x i8] c"debug level %d enabled\00", align 1
@.str.11.542 = private unnamed_addr constant [3 x i8] c"-6\00", align 1
@.str.12.543 = private unnamed_addr constant [3 x i8] c"-4\00", align 1
@.str.13.544 = private unnamed_addr constant [4 x i8] c"-46\00", align 1
@.str.14.545 = private unnamed_addr constant [4 x i8] c"-64\00", align 1
@.str.15.546 = private unnamed_addr constant [5 x i8] c"-no4\00", align 1
@.str.16.547 = private unnamed_addr constant [5 x i8] c"-no6\00", align 1
@.str.17.548 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.18.549 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.19.550 = private unnamed_addr constant [35 x i8] c"invalid prefix on command line: %s\00", align 1
@.str.20.551 = private unnamed_addr constant [11 x i8] c"-http-port\00", align 1
@.str.21.552 = private unnamed_addr constant [22 x i8] c"invalid portnumer: %s\00", align 1
@.str.22.553 = private unnamed_addr constant [3 x i8] c"-u\00", align 1
@.str.23.554 = private unnamed_addr constant [3 x i8] c"-g\00", align 1
@.str.24.555 = private unnamed_addr constant [3 x i8] c"-t\00", align 1
@.str.25.556 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.26.557 = private unnamed_addr constant [3 x i8] c"-v\00", align 1
@.str.27.558 = private unnamed_addr constant [3 x i8] c"-q\00", align 1
@.str.28.559 = private unnamed_addr constant [18 x i8] c"unknown option %s\00", align 1
@.str.29.560 = private unnamed_addr constant [5 x i8] c"totd\00", align 1
@.str.30.561 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.31.562 = private unnamed_addr constant [41 x i8] c"Found user record of %s; uid: %d gid: %d\00", align 1
@.str.32.563 = private unnamed_addr constant [43 x i8] c"Need root privileges to change user to: %s\00", align 1
@.str.33.564 = private unnamed_addr constant [29 x i8] c"can't find user record of %s\00", align 1
@.str.34.565 = private unnamed_addr constant [19 x i8] c"group `%s' unknown\00", align 1
@.str.35.566 = private unnamed_addr constant [21 x i8] c"chroot %s failed: %m\00", align 1
@.str.36.567 = private unnamed_addr constant [15 x i8] c"chrooted to %s\00", align 1
@.str.37.568 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.38.569 = private unnamed_addr constant [22 x i8] c"chdir(\22/\22) failed: %m\00", align 1
@.str.39.570 = private unnamed_addr constant [22 x i8] c"Configuration failure\00", align 1
@.str.40.571 = private unnamed_addr constant [46 x i8] c"Check log, or try -d option for debug mode...\00", align 1
@.str.41.572 = private unnamed_addr constant [43 x i8] c"Disabling rescanning of network interfaces\00", align 1
@.str.42.573 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.43.574 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.44.575 = private unnamed_addr constant [24 x i8] c"Removing bogus lockfile\00", align 1
@.str.45.576 = private unnamed_addr constant [23 x i8] c"Removed stale lockfile\00", align 1
@.str.46.577 = private unnamed_addr constant [27 x i8] c"PID file %s already exists\00", align 1
@.str.47.578 = private unnamed_addr constant [124 x i8] c"There can be another totd running. Please make sure there's no totd already running. Then delete the file %s and try again.\00", align 1
@.str.48.579 = private unnamed_addr constant [81 x i8] c"Cannot disable IPv4 when IPv6 is enabled onthis OS, due to IPv4 mapped addresses\00", align 1
@.str.49.580 = private unnamed_addr constant [101 x i8] c"Will always accept IPv4 *and* IPv6 requests.Bailing out, so that you can explicitly tell me to do so\00", align 1
@.str.50.581 = private unnamed_addr constant [66 x i8] c"On this OS we only support wildcard binding when IPv6 is enabled.\00", align 1
@.str.51.582 = private unnamed_addr constant [62 x i8] c"Please remove `interfaces' specification in your config file.\00", align 1
@.str.52.583 = private unnamed_addr constant [78 x i8] c"IPv6 wildcard socket with IPv4 mapped, will not bind to wildcard IPv4 socket.\00", align 1
@.str.53.584 = private unnamed_addr constant [15 x i8] c"IPv4 activated\00", align 1
@.str.54.585 = private unnamed_addr constant [15 x i8] c"IPv6 activated\00", align 1
@.str.55.586 = private unnamed_addr constant [73 x i8] c"all supported protocols are deactivated; what do you want me to do then?\00", align 1
@.str.56.587 = private unnamed_addr constant [162 x i8] c"Scoped address rewriting currently not implemented when wildcard sockets are used. Please use `interfaces' keyword in your config file or remove `scoped' keyword\00", align 1
@.str.57.588 = private unnamed_addr constant [48 x i8] c"no forwarder available, what should we do then?\00", align 1
@.str.58.589 = private unnamed_addr constant [41 x i8] c"Signal event handling  initialize failed\00", align 1
@.str.59.590 = private unnamed_addr constant [41 x i8] c"Timeout event handling initialize failed\00", align 1
@.str.60.591 = private unnamed_addr constant [33 x i8] c"TCP connection initialize failed\00", align 1
@.str.61.592 = private unnamed_addr constant [28 x i8] c"Init list of sockets failed\00", align 1
@.str.62.593 = private unnamed_addr constant [27 x i8] c"Could not open any sockets\00", align 1
@.str.63.594 = private unnamed_addr constant [26 x i8] c"Maybe later??? Continuing\00", align 1
@.str.64 = private unnamed_addr constant [22 x i8] c"UDP initialize failed\00", align 1
@.str.65.595 = private unnamed_addr constant [37 x i8] c"TCP output routine initialize failed\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"setgid to %d failed\00", align 1
@.str.67 = private unnamed_addr constant [20 x i8] c"setuid to %d failed\00", align 1
@.str.68 = private unnamed_addr constant [41 x i8] c"Registering Interface Check Event failed\00", align 1
@.str.69 = private unnamed_addr constant [29 x i8] c"totd successfully daemonized\00", align 1
@.str.70 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.71 = private unnamed_addr constant [25 x i8] c"can't open pid file \22%s\22\00", align 1
@.str.72 = private unnamed_addr constant [24 x i8] c"wrote pid %d to file %s\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"totd started\00", align 1
@.str.74 = private unnamed_addr constant [17 x i8] c"totd_eventloop()\00", align 1
@.str.75 = private unnamed_addr constant [17 x i8] c"main loop: start\00", align 1
@.str.76 = private unnamed_addr constant [23 x i8] c"no timeouts at present\00", align 1
@.str.77 = private unnamed_addr constant [26 x i8] c"next timeout after %ld s.\00", align 1
@.str.78 = private unnamed_addr constant [21 x i8] c"check for UDP fds...\00", align 1
@.str.79 = private unnamed_addr constant [24 x i8] c"check for TCP-in fds...\00", align 1
@.str.80 = private unnamed_addr constant [25 x i8] c"check for TCP-out fds...\00", align 1
@.str.81 = private unnamed_addr constant [16 x i8] c"%s: max_fd = %d\00", align 1
@.str.82 = private unnamed_addr constant [18 x i8] c"main loop: select\00", align 1
@.str.83 = private unnamed_addr constant [25 x i8] c"%s: select() interrupted\00", align 1
@.str.84 = private unnamed_addr constant [17 x i8] c"%s: select(): %m\00", align 1
@.str.85 = private unnamed_addr constant [18 x i8] c"udp service error\00", align 1
@.str.86 = private unnamed_addr constant [18 x i8] c"tcp service error\00", align 1
@.str.87 = private unnamed_addr constant [18 x i8] c"tcp output failed\00", align 1
@.str.88 = private unnamed_addr constant [17 x i8] c"tcp input failed\00", align 1
@0 = private constant [4 x i8] c"totd"
@1 = private constant [2 x i8] c"-c"
@2 = private constant [13 x i8] c"totdipv4.conf"
@3 = private constant [3 x i8] c"-d2"
@__argv_new__ = global i8** null, !track !16
@4 = constant [3 x i8] c"-c\00"
@5 = constant [3 x i8] c"-d\00"
@6 = constant [3 x i8] c"-c\00"
@7 = constant [3 x i8] c"-6\00"
@8 = constant [3 x i8] c"-c\00"
@9 = constant [3 x i8] c"-4\00"
@10 = constant [3 x i8] c"-c\00"
@11 = constant [4 x i8] c"-46\00"
@12 = constant [3 x i8] c"-c\00"
@13 = constant [4 x i8] c"-64\00"
@14 = constant [3 x i8] c"-c\00"
@15 = constant [5 x i8] c"-no4\00"
@16 = constant [3 x i8] c"-c\00"
@17 = constant [5 x i8] c"-no6\00"
@18 = constant [3 x i8] c"-c\00"
@19 = constant [3 x i8] c"-c\00"
@20 = constant [4 x i8] c"-d2\00"
@21 = constant [3 x i8] c"-d\00"
@22 = constant [27 x i8] c"forwarder 8.8.8.8 port 53\0A\00", align 1
@23 = constant [10 x i8] c"forwarder\00", align 1
@24 = constant [8 x i8] c"8.8.8.8\00", align 1
@25 = constant [5 x i8] c"port\00", align 1
@26 = constant [3 x i8] c"53\00", align 1
@27 = constant [9 x i8] c"port 53\0A\00", align 1
@28 = constant [5 x i8] c"port\00", align 1
@29 = constant [3 x i8] c"53\00", align 1
@30 = constant [22 x i8] c"pidfile totd.pidfile\0A\00", align 1
@31 = constant [8 x i8] c"pidfile\00", align 1
@32 = constant [13 x i8] c"totd.pidfile\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @request_start(%struct.context*, i32) #0 {
  %3 = alloca [256 x i8], align 16, !track !19
  %4 = alloca [256 x i8], align 16, !track !20
  %5 = alloca %struct.in6_addr, align 4, !track !21
  %6 = getelementptr [10 x i8], [10 x i8]* @.str.1, i32 0, i32 0
  %7 = getelementptr [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6, i8* %7)
  %8 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %9 = bitcast %union.anon.0* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 12
  %12 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %13 = bitcast %union.anon.0* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = call i8* @mesg_skip_dname(i8* %11, i8* %18)
  %20 = icmp ne i8* %19, null
  br i1 %20, label %24, label %21

; <label>:21:                                     ; preds = %2
  %22 = getelementptr [23 x i8], [23 x i8]* @.str.2, i32 0, i32 0
  %23 = getelementptr [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %22, i8* %23)
  br label %193

; <label>:24:                                     ; preds = %2
  %25 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %26 = bitcast %union.anon.0* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 12
  %29 = ptrtoint i8* %19 to i64
  %30 = ptrtoint i8* %28 to i64
  %31 = sub i64 %29, %30
  %32 = trunc i64 %31 to i32
  %33 = icmp sge i32 %32, 256
  br i1 %33, label %34, label %37

; <label>:34:                                     ; preds = %24
  %35 = getelementptr [23 x i8], [23 x i8]* @.str.2, i32 0, i32 0
  %36 = getelementptr [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %35, i8* %36)
  br label %193

; <label>:37:                                     ; preds = %24
  %38 = getelementptr inbounds i8, i8* %19, i32 1
  %39 = load i8, i8* %19, align 1
  %40 = zext i8 %39 to i32
  %41 = shl i32 %40, 8
  %42 = trunc i32 %41 to i16
  %43 = getelementptr inbounds i8, i8* %38, i32 1
  %44 = load i8, i8* %38, align 1
  %45 = zext i8 %44 to i32
  %46 = zext i16 %42 to i32
  %47 = or i32 %46, %45
  %48 = trunc i32 %47 to i16
  %49 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 12
  store i16 %48, i16* %49, align 2
  %50 = getelementptr inbounds i8, i8* %43, i32 1
  %51 = load i8, i8* %43, align 1
  %52 = zext i8 %51 to i32
  %53 = shl i32 %52, 8
  %54 = trunc i32 %53 to i16
  %55 = getelementptr inbounds i8, i8* %50, i32 1
  %56 = load i8, i8* %50, align 1
  %57 = zext i8 %56 to i32
  %58 = zext i16 %54 to i32
  %59 = or i32 %58, %57
  %60 = trunc i32 %59 to i16
  %61 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 11
  store i16 %60, i16* %61, align 4
  %62 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 9
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* %62, i32 0, i32 0
  %64 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %65 = bitcast %union.anon.0* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 12
  %68 = sext i32 %32 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 1 %67, i64 %68, i1 false), !track !22
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %70 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %71 = bitcast %union.anon.0* %70 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 12
  %74 = sext i32 %32 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %69, i8* align 1 %73, i64 %74, i1 false), !track !23
  %75 = sext i32 %32 to i64
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %75
  store i8 0, i8* %76, align 1
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %78 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %79 = call i8* @dname_decompress(i8* %77, i32 256, i8* %78, i8* null, i8* null, i32* null)
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %81 = call i8* @string_rtype(i16 zeroext %48)
  %82 = getelementptr [24 x i8], [24 x i8]* @.str.3, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %82, i8* %80, i8* %81)
  %83 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %84 = load i8, i8* %83, align 16
  %85 = zext i8 %84 to i32
  %86 = icmp eq i32 %85, 65
  br i1 %86, label %87, label %89

; <label>:87:                                     ; preds = %37
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  store i8 0, i8* %88, align 16
  br label %97

; <label>:89:                                     ; preds = %37
  %90 = sext i32 %32 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %92 = call i64 @strlen(i8* %91) #8
  %93 = add i64 %92, 1
  %94 = icmp ne i64 %90, %93
  br i1 %94, label %95, label %97

; <label>:95:                                     ; preds = %89
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  store i8 0, i8* %96, align 16
  br label %97

; <label>:97:                                     ; preds = %89, %95, %87
  %98 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 1, i32* %98, align 8
  %99 = zext i16 %48 to i32
  %100 = icmp eq i32 %99, 12
  br i1 %100, label %101, label %121

; <label>:101:                                    ; preds = %97
  %102 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %103 = bitcast %union.anon.0* %102 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = getelementptr inbounds i8, i8* %104, i64 12
  %106 = call i32 @conv_trick_is_tot_newptr(i8* %105, %struct.in6_addr* %5)
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %108, label %121

; <label>:108:                                    ; preds = %101
  %109 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 4, i32* %109, align 8
  %110 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  call void @conv_trick_newptr_rq(i8* %110, %struct.in6_addr* %5)
  %111 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %112 = load i32, i32* %111, align 4
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %121

; <label>:114:                                    ; preds = %108
  %115 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %116 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %117 = call i8* @dname_decompress(i8* %115, i32 256, i8* %116, i8* null, i8* null, i32* null)
  %118 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %119 = getelementptr [31 x i8], [31 x i8]* @.str.4, i32 0, i32 0
  %120 = getelementptr [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %119, i8* %120, i8* %118)
  br label %121

; <label>:121:                                    ; preds = %108, %114, %101, %97
  %122 = zext i16 %48 to i32
  %123 = icmp eq i32 %122, 12
  br i1 %123, label %124, label %141

; <label>:124:                                    ; preds = %121
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %126 = call i32 @conv_trick_is_tot_ptr(i8* %125)
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %141

; <label>:128:                                    ; preds = %124
  %129 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 3, i32* %129, align 8
  %130 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  call void @conv_trick_ptr_rq(i8* %130)
  %131 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %132 = load i32, i32* %131, align 4
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %134, label %141

; <label>:134:                                    ; preds = %128
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %136 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %137 = call i8* @dname_decompress(i8* %135, i32 256, i8* %136, i8* null, i8* null, i32* null)
  %138 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %139 = getelementptr [27 x i8], [27 x i8]* @.str.5, i32 0, i32 0
  %140 = getelementptr [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %139, i8* %140, i8* %138)
  br label %141

; <label>:141:                                    ; preds = %128, %134, %124, %121
  %142 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %143 = load i32, i32* %142, align 8
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %162

; <label>:145:                                    ; preds = %141
  %146 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %147 = call i32 @conv_is_scoped_ptr(i8* %146, i32 1)
  %148 = icmp ne i32 %147, -1
  br i1 %148, label %149, label %162

; <label>:149:                                    ; preds = %145
  %150 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 5, i32* %150, align 8
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  call void @conv_scoped_ptr_rq(i8* %151)
  %152 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %153 = load i32, i32* %152, align 4
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %155, label %162

; <label>:155:                                    ; preds = %149
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %158 = call i8* @dname_decompress(i8* %156, i32 256, i8* %157, i8* null, i8* null, i32* null)
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %160 = getelementptr [31 x i8], [31 x i8]* @.str.6, i32 0, i32 0
  %161 = getelementptr [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %160, i8* %161, i8* %159)
  br label %162

; <label>:162:                                    ; preds = %149, %155, %145, %141
  %163 = call %struct.generic_list* @fwd_socketlist()
  %164 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 4
  store %struct.generic_list* %163, %struct.generic_list** %164, align 8
  %165 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 4
  %166 = load %struct.generic_list*, %struct.generic_list** %165, align 8
  %167 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %166, i32 0, i32 0
  %168 = load %struct.generic_list*, %struct.generic_list** %167, align 8
  %169 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  store %struct.generic_list* %168, %struct.generic_list** %169, align 8
  %170 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %171 = load %struct.generic_list*, %struct.generic_list** %170, align 8
  %172 = icmp ne %struct.generic_list* %171, null
  br i1 %172, label %173, label %179

; <label>:173:                                    ; preds = %162
  %174 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %175 = load %struct.generic_list*, %struct.generic_list** %174, align 8
  %176 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %175, i32 0, i32 2
  %177 = load i8*, i8** %176, align 8
  %178 = icmp ne i8* %177, null
  br i1 %178, label %182, label %179

; <label>:179:                                    ; preds = %173, %162
  %180 = getelementptr [29 x i8], [29 x i8]* @.str.7, i32 0, i32 0
  %181 = getelementptr [16 x i8], [16 x i8]* @.str, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %180, i8* %181)
  br label %193

; <label>:182:                                    ; preds = %173
  %183 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %184 = load %struct.generic_list*, %struct.generic_list** %183, align 8
  %185 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %184, i32 0, i32 2
  %186 = load i8*, i8** %185, align 8
  %187 = bitcast i8* %186 to %struct.sockaddr*
  %188 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %189 = call i8* @sprint_inet(%struct.sockaddr* %187, i8* %188)
  %190 = getelementptr [23 x i8], [23 x i8]* @.str.8, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %190, i8* %189)
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %192 = call i32 @do_forward(%struct.context* %0, i8* %191, i16 zeroext %60, i16 zeroext %48, i32 %1)
  br label %193

; <label>:193:                                    ; preds = %182, %179, %34, %21
  %.0 = phi i32 [ 1, %34 ], [ %192, %182 ], [ -1, %179 ], [ 1, %21 ]
  ret i32 %.0
}

declare dso_local void @syslog(i32, i8*, ...) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #2

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @do_forward(%struct.context*, i8*, i16 zeroext, i16 zeroext, i32) #0 {
  %6 = alloca [256 x i8], align 16, !track !24
  %7 = getelementptr [10 x i8], [10 x i8]* @.str.1, i32 0, i32 0
  %8 = getelementptr [13 x i8], [13 x i8]* @.str.9, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %7, i8* %8)
  %9 = call %struct.context* bitcast (%struct.context.19* ()* @context_create to %struct.context* ()*)()
  %10 = icmp ne %struct.context* %9, null
  br i1 %10, label %13, label %11

; <label>:11:                                     ; preds = %5
  %12 = call i32 @request_abort(%struct.context* %9, i32 -1)
  br label %107

; <label>:13:                                     ; preds = %5
  %14 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 0
  store %struct.context* %0, %struct.context** %14, align 8
  %15 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 0
  %16 = load %struct.context*, %struct.context** %15, align 8
  %17 = getelementptr inbounds %struct.context, %struct.context* %16, i32 0, i32 1
  store %struct.context* %9, %struct.context** %17, align 8
  %18 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 21
  store i16 2, i16* %18, align 2
  %19 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 0
  %20 = load %struct.context*, %struct.context** %19, align 8
  %21 = getelementptr inbounds %struct.context, %struct.context* %20, i32 0, i32 5
  %22 = load %struct.generic_list*, %struct.generic_list** %21, align 8
  %23 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 5
  store %struct.generic_list* %22, %struct.generic_list** %23, align 8
  %24 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 9
  %25 = getelementptr inbounds [256 x i8], [256 x i8]* %24, i32 0, i32 0
  %26 = call i64 @strlcpy(i8* %25, i8* %1, i64 256)
  %27 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 11
  store i16 %2, i16* %27, align 4
  %28 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 12
  store i16 %3, i16* %28, align 2
  %29 = call zeroext i16 @mesg_id()
  %30 = zext i16 %29 to i32
  %31 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 10
  store i32 %30, i32* %31, align 8
  %32 = getelementptr [23 x i8], [23 x i8]* @.str.10, i32 0, i32 0
  %33 = getelementptr [13 x i8], [13 x i8]* @.str.9, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %32, i8* %33)
  %34 = load i8, i8* %1, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %42

; <label>:37:                                     ; preds = %13
  %38 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %39 = bitcast %union.anon.0* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 12
  br label %42

; <label>:42:                                     ; preds = %37, %13
  %.02 = phi i8* [ %41, %37 ], [ %1, %13 ]
  %43 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 10
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr [65535 x i8], [65535 x i8]* @do_forward.buf, i32 0, i32 0
  %46 = call i32 @mesg_make_query(i8* %.02, i16 zeroext %3, i16 zeroext %2, i32 %44, i32 1, i8* %45, i32 65535)
  %47 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 17
  store i32 %46, i32* %47, align 8
  %48 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 17
  %49 = load i32, i32* %48, align 8
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %55

; <label>:51:                                     ; preds = %42
  %52 = getelementptr [38 x i8], [38 x i8]* @.str.11, i32 0, i32 0
  %53 = getelementptr [13 x i8], [13 x i8]* @.str.9, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %52, i8* %53, i64 65535)
  %54 = call i32 @request_abort(%struct.context* %9, i32 -1)
  br label %107

; <label>:55:                                     ; preds = %42
  %56 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 17
  %57 = load i32, i32* %56, align 8
  %58 = sext i32 %57 to i64
  %59 = call noalias i8* @malloc(i64 %58) #9, !track !25
  %60 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 16
  %61 = bitcast %union.anon.0* %60 to i8**
  store i8* %59, i8** %61, align 8
  %62 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 16
  %63 = bitcast %union.anon.0* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp ne i8* %64, null
  br i1 %65, label %70, label %66

; <label>:66:                                     ; preds = %55
  %67 = getelementptr [27 x i8], [27 x i8]* @.str.12, i32 0, i32 0
  %68 = getelementptr [13 x i8], [13 x i8]* @.str.9, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %67, i8* %68)
  %69 = call i32 @request_abort(%struct.context* %9, i32 -1)
  br label %107

; <label>:70:                                     ; preds = %55
  %71 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 16
  %72 = bitcast %union.anon.0* %71 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 17
  %75 = load i32, i32* %74, align 8
  %76 = sext i32 %75 to i64
  %77 = getelementptr [65535 x i8], [65535 x i8]* @do_forward.buf, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 16 %77, i64 %76, i1 false), !track !26
  %78 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 16
  %79 = bitcast %union.anon.0* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 18
  store i8* %80, i8** %81, align 8
  %82 = icmp eq i32 %4, 0
  br i1 %82, label %83, label %94

; <label>:83:                                     ; preds = %70
  %84 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %85 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 9
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* %85, i32 0, i32 0
  %87 = call i8* @dname_decompress(i8* %84, i32 256, i8* %86, i8* null, i8* null, i32* null)
  %88 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 12
  %89 = load i16, i16* %88, align 2
  %90 = call i8* @string_rtype(i16 zeroext %89)
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %92 = getelementptr [33 x i8], [33 x i8]* @.str.13, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %92, i8* %90, i8* %91)
  %93 = call i32 bitcast (i32 (%struct.context.107*)* @udp_request_start to i32 (%struct.context*)*)(%struct.context* %9)
  br label %94

; <label>:94:                                     ; preds = %83, %70
  %.01 = phi i32 [ %93, %83 ], [ %4, %70 ]
  %95 = icmp eq i32 %.01, 1
  br i1 %95, label %96, label %107

; <label>:96:                                     ; preds = %94
  %97 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %98 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 9
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* %98, i32 0, i32 0
  %100 = call i8* @dname_decompress(i8* %97, i32 256, i8* %99, i8* null, i8* null, i32* null)
  %101 = getelementptr inbounds %struct.context, %struct.context* %9, i32 0, i32 12
  %102 = load i16, i16* %101, align 2
  %103 = call i8* @string_rtype(i16 zeroext %102)
  %104 = getelementptr inbounds [256 x i8], [256 x i8]* %6, i32 0, i32 0
  %105 = getelementptr [33 x i8], [33 x i8]* @.str.14, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %105, i8* %103, i8* %104)
  %106 = call i32 bitcast (i32 (%struct.context.69*)* @tcp_request_start to i32 (%struct.context*)*)(%struct.context* %9)
  br label %107

; <label>:107:                                    ; preds = %94, %96, %66, %51, %11
  %.0 = phi i32 [ %54, %51 ], [ %69, %66 ], [ %12, %11 ], [ %106, %96 ], [ %.01, %94 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @request_abort(%struct.context*, i32) #0 {
  %3 = icmp ne %struct.context* %0, null
  %4 = icmp eq i32 %1, -2
  %or.cond = and i1 %3, %4
  br i1 %or.cond, label %5, label %13

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %7 = load %struct.context*, %struct.context** %6, align 8
  %8 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 1
  store %struct.context* null, %struct.context** %8, align 8
  %9 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %10 = load %struct.context*, %struct.context** %9, align 8
  %11 = call i32 @response_abort(%struct.context* %10, i32 -2)
  %12 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  store %struct.context* null, %struct.context** %12, align 8
  br label %13

; <label>:13:                                     ; preds = %5, %2
  %14 = icmp ne %struct.context* %0, null
  br i1 %14, label %15, label %31

; <label>:15:                                     ; preds = %13
  %16 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %17 = load %struct.context*, %struct.context** %16, align 8
  %18 = icmp ne %struct.context* %17, null
  br i1 %18, label %19, label %31

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %21 = load %struct.context*, %struct.context** %20, align 8
  %22 = getelementptr inbounds %struct.context, %struct.context* %21, i32 0, i32 1
  store %struct.context* null, %struct.context** %22, align 8
  %23 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %24 = load %struct.context*, %struct.context** %23, align 8
  %25 = getelementptr inbounds %struct.context, %struct.context* %24, i32 0, i32 7
  %26 = load i32 (%struct.context*)*, i32 (%struct.context*)** %25, align 8
  %27 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %28 = load %struct.context*, %struct.context** %27, align 8
  %29 = call i32 %26(%struct.context* %28)
  %30 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  store %struct.context* null, %struct.context** %30, align 8
  br label %31

; <label>:31:                                     ; preds = %19, %15, %13
  %32 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %0)
  ret i32 %1
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @request_retry(%struct.context*) #0 {
  %2 = alloca [256 x i8], align 16, !track !27
  %3 = alloca [256 x i8], align 16
  %4 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 20
  %5 = load i16, i16* %4, align 8
  %6 = add i16 %5, 1
  store i16 %6, i16* %4, align 8
  %7 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = mul nsw i32 %9, 2
  %11 = trunc i32 %10 to i16
  %12 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  store i16 %11, i16* %12, align 2
  %13 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 2
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast i8* %16 to %struct.sockaddr*
  call void @fwd_mark(%struct.sockaddr* %17, i32 1)
  %18 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 20
  %19 = load i16, i16* %18, align 8
  %20 = zext i16 %19 to i32
  %21 = icmp sgt i32 %20, 1
  br i1 %21, label %22, label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr [21 x i8], [21 x i8]* @.str.15, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %23)
  br label %67

; <label>:24:                                     ; preds = %1
  %25 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %26 = load %struct.generic_list*, %struct.generic_list** %25, align 8
  %27 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %26, i32 0, i32 0
  %28 = load %struct.generic_list*, %struct.generic_list** %27, align 8
  %29 = icmp ne %struct.generic_list* %28, null
  br i1 %29, label %30, label %38

; <label>:30:                                     ; preds = %24
  %31 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %32 = load %struct.generic_list*, %struct.generic_list** %31, align 8
  %33 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %32, i32 0, i32 0
  %34 = load %struct.generic_list*, %struct.generic_list** %33, align 8
  %35 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %34, i32 0, i32 2
  %36 = load i8*, i8** %35, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %40, label %38

; <label>:38:                                     ; preds = %30, %24
  %39 = getelementptr [35 x i8], [35 x i8]* @.str.16, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %39)
  br label %46

; <label>:40:                                     ; preds = %30
  %41 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %42 = load %struct.generic_list*, %struct.generic_list** %41, align 8
  %43 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %42, i32 0, i32 0
  %44 = load %struct.generic_list*, %struct.generic_list** %43, align 8
  %45 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  store %struct.generic_list* %44, %struct.generic_list** %45, align 8
  br label %46

; <label>:46:                                     ; preds = %40, %38
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %48 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 9
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %48, i32 0, i32 0
  %50 = call i8* @dname_decompress(i8* %47, i32 256, i8* %49, i8* null, i8* null, i32* null)
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %52 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %53 = load %struct.generic_list*, %struct.generic_list** %52, align 8
  %54 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %53, i32 0, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = bitcast i8* %55 to %struct.sockaddr*
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %58 = call i8* @sprint_inet(%struct.sockaddr* %56, i8* %57)
  %59 = getelementptr [40 x i8], [40 x i8]* @.str.17, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %59, i8* %51, i8* %58)
  %60 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 20
  %61 = load i16, i16* %60, align 8
  %62 = zext i16 %61 to i32
  %63 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  %64 = load i16, i16* %63, align 2
  %65 = zext i16 %64 to i32
  %66 = getelementptr [46 x i8], [46 x i8]* @.str.18, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %66, i32 %62, i32 1, i32 1, i32 %65)
  br label %67

; <label>:67:                                     ; preds = %46, %22
  %.0 = phi i32 [ -2, %22 ], [ 0, %46 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @recursive_process(%struct.context*) #0 {
  %2 = alloca [256 x i8], align 16, !track !28
  %3 = alloca [256 x i8], align 16, !track !29
  %4 = alloca [256 x i8], align 16
  %5 = getelementptr [10 x i8], [10 x i8]* @.str.1, i32 0, i32 0
  %6 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  %7 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %8 = load %struct.context*, %struct.context** %7, align 8
  %9 = icmp ne %struct.context* %8, null
  br i1 %9, label %10, label %130

; <label>:10:                                     ; preds = %1
  %11 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %12 = load %struct.context*, %struct.context** %11, align 8
  %13 = getelementptr inbounds %struct.context, %struct.context* %12, i32 0, i32 16
  %14 = bitcast %union.anon.0* %13 to %struct.mesg_hdr**
  %15 = load %struct.mesg_hdr*, %struct.mesg_hdr** %14, align 8
  %16 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %15, i32 0, i32 1
  %17 = load i16, i16* %16, align 2
  %18 = lshr i16 %17, 8
  %19 = and i16 %18, 15
  %20 = trunc i16 %19 to i8
  %21 = zext i8 %20 to i32
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %71

; <label>:23:                                     ; preds = %10
  %24 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %25 = load %struct.context*, %struct.context** %24, align 8
  %26 = getelementptr inbounds %struct.context, %struct.context* %25, i32 0, i32 16
  %27 = bitcast %union.anon.0* %26 to %struct.mesg_hdr**
  %28 = load %struct.mesg_hdr*, %struct.mesg_hdr** %27, align 8
  %29 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %28, i32 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = lshr i16 %30, 8
  %32 = and i16 %31, 15
  %33 = trunc i16 %32 to i8
  %34 = zext i8 %33 to i32
  %35 = icmp ne i32 %34, 3
  br i1 %35, label %36, label %71

; <label>:36:                                     ; preds = %23
  %37 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %38 = load %struct.context*, %struct.context** %37, align 8
  %39 = getelementptr inbounds %struct.context, %struct.context* %38, i32 0, i32 16
  %40 = bitcast %union.anon.0* %39 to %struct.mesg_hdr**
  %41 = load %struct.mesg_hdr*, %struct.mesg_hdr** %40, align 8
  %42 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %41, i32 0, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = lshr i16 %43, 8
  %45 = and i16 %44, 15
  %46 = trunc i16 %45 to i8
  %47 = zext i8 %46 to i32
  %48 = icmp ne i32 %47, 2
  br i1 %48, label %49, label %71

; <label>:49:                                     ; preds = %36
  %50 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %51 = load %struct.context*, %struct.context** %50, align 8
  %52 = getelementptr inbounds %struct.context, %struct.context* %51, i32 0, i32 16
  %53 = bitcast %union.anon.0* %52 to %struct.mesg_hdr**
  %54 = load %struct.mesg_hdr*, %struct.mesg_hdr** %53, align 8
  %55 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %54, i32 0, i32 1
  %56 = load i16, i16* %55, align 2
  %57 = lshr i16 %56, 8
  %58 = and i16 %57, 15
  %59 = trunc i16 %58 to i8
  %60 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %61 = bitcast %union.anon.0* %60 to %struct.mesg_hdr**
  %62 = load %struct.mesg_hdr*, %struct.mesg_hdr** %61, align 8
  %63 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %62, i32 0, i32 1
  %64 = zext i8 %59 to i16
  %65 = load i16, i16* %63, align 2
  %66 = and i16 %64, 15
  %67 = shl i16 %66, 8
  %68 = and i16 %65, -3841
  %69 = or i16 %68, %67
  store i16 %69, i16* %63, align 2
  %70 = trunc i16 %66 to i8
  br label %540

; <label>:71:                                     ; preds = %36, %23, %10
  %72 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %73 = load %struct.context*, %struct.context** %72, align 8
  %74 = getelementptr inbounds %struct.context, %struct.context* %73, i32 0, i32 16
  %75 = bitcast %union.anon.0* %74 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 12
  %78 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %79 = load %struct.context*, %struct.context** %78, align 8
  %80 = getelementptr inbounds %struct.context, %struct.context* %79, i32 0, i32 16
  %81 = bitcast %union.anon.0* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %84 = load %struct.context*, %struct.context** %83, align 8
  %85 = getelementptr inbounds %struct.context, %struct.context* %84, i32 0, i32 17
  %86 = load i32, i32* %85, align 8
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %82, i64 %87
  %89 = call i8* @mesg_skip_dname(i8* %77, i8* %88)
  %90 = icmp ne i8* %89, null
  br i1 %90, label %91, label %127

; <label>:91:                                     ; preds = %71
  %92 = getelementptr inbounds i8, i8* %89, i32 1
  %93 = load i8, i8* %89, align 1
  %94 = zext i8 %93 to i32
  %95 = shl i32 %94, 8
  %96 = trunc i32 %95 to i16
  %97 = getelementptr inbounds i8, i8* %92, i32 1
  %98 = load i8, i8* %92, align 1
  %99 = zext i8 %98 to i32
  %100 = zext i16 %96 to i32
  %101 = or i32 %100, %99
  %102 = trunc i32 %101 to i16
  %103 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 11
  %104 = load i16, i16* %103, align 4
  %105 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 12
  %106 = load i16, i16* %105, align 2
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %108 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 9
  %109 = getelementptr inbounds [256 x i8], [256 x i8]* %108, i32 0, i32 0
  %110 = call i64 @strlcpy(i8* %107, i8* %109, i64 256)
  %111 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %112 = load i32, i32* %111, align 8
  %113 = getelementptr [19 x i8], [19 x i8]* @.str.22, i32 0, i32 0
  %114 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %113, i8* %114, i32 %112)
  %115 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %116 = load %struct.context*, %struct.context** %115, align 8
  %117 = getelementptr inbounds %struct.context, %struct.context* %116, i32 0, i32 16
  %118 = bitcast %union.anon.0* %117 to %struct.mesg_hdr**
  %119 = load %struct.mesg_hdr*, %struct.mesg_hdr** %118, align 8
  %120 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %119, i32 0, i32 1
  %121 = load i16, i16* %120, align 2
  %122 = lshr i16 %121, 1
  %123 = and i16 %122, 1
  %124 = trunc i16 %123 to i8
  %125 = zext i8 %124 to i32
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %133, label %147

; <label>:127:                                    ; preds = %71
  %128 = getelementptr [22 x i8], [22 x i8]* @.str.20, i32 0, i32 0
  %129 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %128, i8* %129)
  br label %540

; <label>:130:                                    ; preds = %1
  %131 = getelementptr [15 x i8], [15 x i8]* @.str.21, i32 0, i32 0
  %132 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %131, i8* %132)
  br label %540

; <label>:133:                                    ; preds = %91
  %134 = getelementptr [22 x i8], [22 x i8]* @.str.23, i32 0, i32 0
  %135 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %134, i8* %135)
  %136 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %137 = load %struct.context*, %struct.context** %136, align 8
  %138 = getelementptr inbounds %struct.context, %struct.context* %137, i32 0, i32 23
  %139 = load i32, i32* %138, align 8
  %140 = icmp slt i32 %139, 0
  br i1 %140, label %141, label %144

; <label>:141:                                    ; preds = %133
  %142 = getelementptr [18 x i8], [18 x i8]* @.str.24, i32 0, i32 0
  %143 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %142, i8* %143)
  br label %393

; <label>:144:                                    ; preds = %133
  %145 = getelementptr [24 x i8], [24 x i8]* @.str.25, i32 0, i32 0
  %146 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %145, i8* %146)
  br label %540

; <label>:147:                                    ; preds = %91
  %148 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %149 = load %struct.context*, %struct.context** %148, align 8
  %150 = getelementptr inbounds %struct.context, %struct.context* %149, i32 0, i32 16
  %151 = bitcast %union.anon.0* %150 to %struct.mesg_hdr**
  %152 = load %struct.mesg_hdr*, %struct.mesg_hdr** %151, align 8
  %153 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %152, i32 0, i32 1
  %154 = load i16, i16* %153, align 2
  %155 = lshr i16 %154, 8
  %156 = and i16 %155, 15
  %157 = trunc i16 %156 to i8
  %158 = zext i8 %157 to i32
  %159 = icmp eq i32 %158, 2
  br i1 %159, label %160, label %201

; <label>:160:                                    ; preds = %147
  %161 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 1
  br i1 %163, label %164, label %179

; <label>:164:                                    ; preds = %160
  %165 = zext i16 %106 to i32
  %166 = icmp eq i32 %165, 28
  %167 = zext i16 %106 to i32
  %168 = icmp eq i32 %167, 38
  %or.cond = or i1 %166, %168
  br i1 %or.cond, label %169, label %179

; <label>:169:                                    ; preds = %164
  %170 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %171 = load %struct.context*, %struct.context** %170, align 8
  %172 = getelementptr inbounds %struct.context, %struct.context* %171, i32 0, i32 16
  %173 = bitcast %union.anon.0* %172 to %struct.mesg_hdr**
  %174 = load %struct.mesg_hdr*, %struct.mesg_hdr** %173, align 8
  %175 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %174, i32 0, i32 1
  %176 = load i16, i16* %175, align 2
  %177 = and i16 %176, -3841
  %178 = or i16 %177, 768
  store i16 %178, i16* %175, align 2
  br label %201

; <label>:179:                                    ; preds = %164, %160
  %180 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %181 = load %struct.context*, %struct.context** %180, align 8
  %182 = getelementptr inbounds %struct.context, %struct.context* %181, i32 0, i32 16
  %183 = bitcast %union.anon.0* %182 to %struct.mesg_hdr**
  %184 = load %struct.mesg_hdr*, %struct.mesg_hdr** %183, align 8
  %185 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %184, i32 0, i32 1
  %186 = load i16, i16* %185, align 2
  %187 = lshr i16 %186, 8
  %188 = and i16 %187, 15
  %189 = trunc i16 %188 to i8
  %190 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %191 = bitcast %union.anon.0* %190 to %struct.mesg_hdr**
  %192 = load %struct.mesg_hdr*, %struct.mesg_hdr** %191, align 8
  %193 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %192, i32 0, i32 1
  %194 = zext i8 %189 to i16
  %195 = load i16, i16* %193, align 2
  %196 = and i16 %194, 15
  %197 = shl i16 %196, 8
  %198 = and i16 %195, -3841
  %199 = or i16 %198, %197
  store i16 %199, i16* %193, align 2
  %200 = trunc i16 %196 to i8
  br label %540

; <label>:201:                                    ; preds = %169, %147
  %202 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %203 = load i32, i32* %202, align 8
  %204 = icmp eq i32 %203, 2
  br i1 %204, label %205, label %244

; <label>:205:                                    ; preds = %201
  %206 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %207 = load i32, i32* %206, align 8
  %208 = icmp ne i32 %207, 0
  %209 = zext i16 %102 to i32
  %210 = icmp eq i32 %209, 1
  %or.cond3 = and i1 %208, %210
  br i1 %or.cond3, label %211, label %242

; <label>:211:                                    ; preds = %205
  %212 = zext i16 %106 to i32
  %213 = icmp eq i32 %212, 28
  %214 = zext i16 %106 to i32
  %215 = icmp eq i32 %214, 38
  %or.cond5 = or i1 %213, %215
  br i1 %or.cond5, label %216, label %242

; <label>:216:                                    ; preds = %211
  %217 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %218 = load %struct.context*, %struct.context** %217, align 8
  %219 = getelementptr inbounds %struct.context, %struct.context* %218, i32 0, i32 13
  %220 = load %struct.generic_list*, %struct.generic_list** %219, align 8
  %221 = zext i16 %106 to i32
  call void @conv_trick_list(%struct.generic_list* %220, i32 %221, i32 0)
  %222 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %223 = load %struct.context*, %struct.context** %222, align 8
  %224 = getelementptr inbounds %struct.context, %struct.context* %223, i32 0, i32 14
  %225 = load %struct.generic_list*, %struct.generic_list** %224, align 8
  %226 = zext i16 %106 to i32
  call void @conv_trick_list(%struct.generic_list* %225, i32 %226, i32 0)
  %227 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 23
  %228 = load i32, i32* %227, align 8
  %229 = add nsw i32 %228, 1
  %230 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %231 = load i32, i32* %230, align 8
  %232 = srem i32 %229, %231
  %233 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 23
  store i32 %232, i32* %233, align 8
  %234 = zext i16 %106 to i32
  %235 = icmp eq i32 %234, 28
  %236 = zext i1 %235 to i64
  %237 = getelementptr [5 x i8], [5 x i8]* @.str.27, i32 0, i32 0
  %238 = getelementptr [3 x i8], [3 x i8]* @.str.28, i32 0, i32 0
  %239 = select i1 %235, i8* %237, i8* %238
  %240 = getelementptr [34 x i8], [34 x i8]* @.str.26, i32 0, i32 0
  %241 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %240, i8* %241, i8* %239)
  br label %242

; <label>:242:                                    ; preds = %211, %216, %205
  %243 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 0, i32* %243, align 8
  br label %244

; <label>:244:                                    ; preds = %242, %201
  %245 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %246 = load i32, i32* %245, align 8
  %247 = icmp eq i32 %246, 3
  br i1 %247, label %248, label %268

; <label>:248:                                    ; preds = %244
  %249 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %250 = load %struct.context*, %struct.context** %249, align 8
  %251 = getelementptr inbounds %struct.context, %struct.context* %250, i32 0, i32 13
  %252 = load %struct.generic_list*, %struct.generic_list** %251, align 8
  %253 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 9
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* %253, i32 0, i32 0
  call void @conv_trick_ptr(%struct.generic_list* %252, i8* %254)
  %255 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %256 = load i32, i32* %255, align 4
  %257 = icmp ne i32 %256, 0
  br i1 %257, label %258, label %266

; <label>:258:                                    ; preds = %248
  %259 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %260 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 9
  %261 = getelementptr inbounds [256 x i8], [256 x i8]* %260, i32 0, i32 0
  %262 = call i8* @dname_decompress(i8* %259, i32 256, i8* %261, i8* null, i8* null, i32* null)
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %264 = getelementptr [30 x i8], [30 x i8]* @.str.29, i32 0, i32 0
  %265 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %264, i8* %265, i8* %263)
  br label %266

; <label>:266:                                    ; preds = %258, %248
  %267 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 0, i32* %267, align 8
  br label %268

; <label>:268:                                    ; preds = %266, %244
  %269 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %270 = load i32, i32* %269, align 8
  %271 = icmp eq i32 %270, 4
  br i1 %271, label %272, label %292

; <label>:272:                                    ; preds = %268
  %273 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %274 = load %struct.context*, %struct.context** %273, align 8
  %275 = getelementptr inbounds %struct.context, %struct.context* %274, i32 0, i32 13
  %276 = load %struct.generic_list*, %struct.generic_list** %275, align 8
  %277 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 9
  %278 = getelementptr inbounds [256 x i8], [256 x i8]* %277, i32 0, i32 0
  call void @conv_trick_newptr(%struct.generic_list* %276, i8* %278)
  %279 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %280 = load i32, i32* %279, align 4
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %282, label %290

; <label>:282:                                    ; preds = %272
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %284 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 9
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* %284, i32 0, i32 0
  %286 = call i8* @dname_decompress(i8* %283, i32 256, i8* %285, i8* null, i8* null, i32* null)
  %287 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %288 = getelementptr [35 x i8], [35 x i8]* @.str.30, i32 0, i32 0
  %289 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %288, i8* %289, i8* %287)
  br label %290

; <label>:290:                                    ; preds = %282, %272
  %291 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 0, i32* %291, align 8
  br label %292

; <label>:292:                                    ; preds = %290, %268
  %293 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %294 = load i32, i32* %293, align 8
  %295 = icmp eq i32 %294, 1
  br i1 %295, label %296, label %357

; <label>:296:                                    ; preds = %292
  %297 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %298 = load i32, i32* %297, align 8
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %300, label %357

; <label>:300:                                    ; preds = %296
  %301 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %302 = load %struct.context*, %struct.context** %301, align 8
  %303 = getelementptr inbounds %struct.context, %struct.context* %302, i32 0, i32 16
  %304 = bitcast %union.anon.0* %303 to %struct.mesg_hdr**
  %305 = load %struct.mesg_hdr*, %struct.mesg_hdr** %304, align 8
  %306 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %305, i32 0, i32 1
  %307 = load i16, i16* %306, align 2
  %308 = lshr i16 %307, 8
  %309 = and i16 %308, 15
  %310 = trunc i16 %309 to i8
  %311 = zext i8 %310 to i32
  %312 = icmp eq i32 %311, 3
  br i1 %312, label %345, label %313

; <label>:313:                                    ; preds = %300
  %314 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %315 = load %struct.context*, %struct.context** %314, align 8
  %316 = getelementptr inbounds %struct.context, %struct.context* %315, i32 0, i32 16
  %317 = bitcast %union.anon.0* %316 to %struct.mesg_hdr**
  %318 = load %struct.mesg_hdr*, %struct.mesg_hdr** %317, align 8
  %319 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %318, i32 0, i32 1
  %320 = load i16, i16* %319, align 2
  %321 = lshr i16 %320, 8
  %322 = and i16 %321, 15
  %323 = trunc i16 %322 to i8
  %324 = zext i8 %323 to i32
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %357

; <label>:326:                                    ; preds = %313
  %327 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %328 = load %struct.context*, %struct.context** %327, align 8
  %329 = getelementptr inbounds %struct.context, %struct.context* %328, i32 0, i32 16
  %330 = bitcast %union.anon.0* %329 to %struct.mesg_hdr**
  %331 = load %struct.mesg_hdr*, %struct.mesg_hdr** %330, align 8
  %332 = icmp ne %struct.mesg_hdr* %331, null
  br i1 %332, label %333, label %345

; <label>:333:                                    ; preds = %326
  %334 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %335 = load %struct.context*, %struct.context** %334, align 8
  %336 = getelementptr inbounds %struct.context, %struct.context* %335, i32 0, i32 16
  %337 = bitcast %union.anon.0* %336 to %struct.mesg_hdr**
  %338 = load %struct.mesg_hdr*, %struct.mesg_hdr** %337, align 8
  %339 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %338, i32 0, i32 3
  %340 = load i16, i16* %339, align 2
  %341 = zext i16 %340 to i32
  %342 = call zeroext i16 @htons(i16 zeroext 0) #10
  %343 = zext i16 %342 to i32
  %344 = icmp eq i32 %341, %343
  br i1 %344, label %345, label %357

; <label>:345:                                    ; preds = %333, %326, %300
  %346 = zext i16 %102 to i32
  %347 = icmp eq i32 %346, 28
  %348 = zext i16 %102 to i32
  %349 = icmp eq i32 %348, 38
  %or.cond7 = or i1 %347, %349
  br i1 %or.cond7, label %350, label %357

; <label>:350:                                    ; preds = %345
  %351 = getelementptr [20 x i8], [20 x i8]* @.str.31, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %351)
  %352 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %353 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 9
  %354 = getelementptr inbounds [256 x i8], [256 x i8]* %353, i32 0, i32 0
  %355 = call i64 @strlcpy(i8* %352, i8* %354, i64 256)
  %356 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 2, i32* %356, align 8
  br label %357

; <label>:357:                                    ; preds = %296, %313, %333, %345, %350, %292
  %.2 = phi i16 [ %106, %292 ], [ %106, %333 ], [ %106, %313 ], [ %106, %296 ], [ 1, %350 ], [ %106, %345 ]
  %358 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %359 = load i32, i32* %358, align 8
  %360 = icmp eq i32 %359, 1
  br i1 %360, label %361, label %363

; <label>:361:                                    ; preds = %357
  %362 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 0, i32* %362, align 8
  br label %363

; <label>:363:                                    ; preds = %361, %357
  %364 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %365 = load i32, i32* %364, align 8
  %366 = getelementptr [27 x i8], [27 x i8]* @.str.32, i32 0, i32 0
  %367 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %366, i8* %367, i32 %365)
  %368 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %369 = load i32, i32* %368, align 8
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %393

; <label>:371:                                    ; preds = %363
  %372 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %373 = load %struct.context*, %struct.context** %372, align 8
  %374 = getelementptr inbounds %struct.context, %struct.context* %373, i32 0, i32 13
  %375 = load %struct.generic_list*, %struct.generic_list** %374, align 8
  %376 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  call void @cname_without_crecord(%struct.generic_list* %375, i8* %376)
  %377 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %378 = load i8, i8* %377, align 16
  %379 = icmp ne i8 %378, 0
  br i1 %379, label %380, label %393

; <label>:380:                                    ; preds = %371
  %381 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 3
  %382 = load i32, i32* %381, align 4
  %383 = add nsw i32 %382, 1
  store i32 %383, i32* %381, align 4
  %384 = icmp sgt i32 %382, 6
  br i1 %384, label %385, label %390

; <label>:385:                                    ; preds = %380
  %386 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 3
  %387 = load i32, i32* %386, align 4
  %388 = getelementptr [66 x i8], [66 x i8]* @.str.33, i32 0, i32 0
  %389 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %388, i8* %389, i32 %387)
  br label %540

; <label>:390:                                    ; preds = %380
  %391 = getelementptr [29 x i8], [29 x i8]* @.str.34, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %391)
  %392 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  store i32 1, i32* %392, align 8
  br label %393

; <label>:393:                                    ; preds = %363, %390, %371, %141
  %.3 = phi i16 [ %106, %141 ], [ %.2, %371 ], [ %.2, %390 ], [ %.2, %363 ]
  %.01 = phi i32 [ 1, %141 ], [ 0, %371 ], [ 0, %390 ], [ 0, %363 ]
  %394 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %395 = load i32, i32* %394, align 8
  %396 = icmp ne i32 %395, 0
  br i1 %396, label %397, label %426

; <label>:397:                                    ; preds = %393
  %398 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %399 = load %struct.context*, %struct.context** %398, align 8
  %400 = getelementptr inbounds %struct.context, %struct.context* %399, i32 0, i32 0
  store %struct.context* null, %struct.context** %400, align 8
  %401 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  store %struct.context* null, %struct.context** %401, align 8
  %402 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %403 = load %struct.generic_list*, %struct.generic_list** %402, align 8
  %404 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %403, i32 0, i32 2
  %405 = load i8*, i8** %404, align 8
  %406 = icmp ne i8* %405, null
  br i1 %406, label %407, label %416

; <label>:407:                                    ; preds = %397
  %408 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %409 = load %struct.generic_list*, %struct.generic_list** %408, align 8
  %410 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %409, i32 0, i32 2
  %411 = load i8*, i8** %410, align 8
  %412 = bitcast i8* %411 to %struct.sockaddr*
  %413 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %414 = call i8* @sprint_inet(%struct.sockaddr* %412, i8* %413)
  %415 = getelementptr [24 x i8], [24 x i8]* @.str.35, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %415, i8* %414)
  br label %416

; <label>:416:                                    ; preds = %407, %397
  %417 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %418 = load i32, i32* %417, align 8
  %419 = icmp sge i32 %418, 0
  %420 = icmp ne i32 %.01, 0
  %or.cond8 = or i1 %419, %420
  %421 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  br i1 %or.cond8, label %424, label %422

; <label>:422:                                    ; preds = %416
  %423 = call i32 @do_forward(%struct.context* %0, i8* %421, i16 zeroext %104, i16 zeroext %.3, i32 0)
  br label %540

; <label>:424:                                    ; preds = %416
  %425 = call i32 @do_forward(%struct.context* %0, i8* %421, i16 zeroext %104, i16 zeroext %.3, i32 1)
  br label %540

; <label>:426:                                    ; preds = %393
  %427 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %428 = load i32, i32* %427, align 8
  %429 = icmp ne i32 %428, 0
  br i1 %429, label %430, label %454

; <label>:430:                                    ; preds = %426
  %431 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 12
  %432 = load i16, i16* %431, align 2
  %433 = zext i16 %432 to i32
  %434 = icmp eq i32 %433, 255
  br i1 %434, label %435, label %441

; <label>:435:                                    ; preds = %430
  %436 = getelementptr [30 x i8], [30 x i8]* @.str.36, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %436)
  %437 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %438 = load %struct.context*, %struct.context** %437, align 8
  %439 = getelementptr inbounds %struct.context, %struct.context* %438, i32 0, i32 13
  %440 = load %struct.generic_list*, %struct.generic_list** %439, align 8
  call void @conv_trick_list(%struct.generic_list* %440, i32 28, i32 1)
  br label %441

; <label>:441:                                    ; preds = %435, %430
  %442 = getelementptr [41 x i8], [41 x i8]* @.str.37, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %442)
  %443 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %444 = load %struct.context*, %struct.context** %443, align 8
  %445 = getelementptr inbounds %struct.context, %struct.context* %444, i32 0, i32 15
  %446 = load %struct.generic_list*, %struct.generic_list** %445, align 8
  call void @conv_trick_list(%struct.generic_list* %446, i32 28, i32 1)
  %447 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 23
  %448 = load i32, i32* %447, align 8
  %449 = add nsw i32 %448, 1
  %450 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %451 = load i32, i32* %450, align 8
  %452 = srem i32 %449, %451
  %453 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 23
  store i32 %452, i32* %453, align 8
  br label %454

; <label>:454:                                    ; preds = %441, %426
  %455 = zext i16 %.3 to i32
  %456 = icmp eq i32 %455, 28
  br i1 %456, label %457, label %479

; <label>:457:                                    ; preds = %454
  %458 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %459 = load i32, i32* %458, align 8
  %460 = icmp ne i32 %459, 0
  br i1 %460, label %461, label %479

; <label>:461:                                    ; preds = %457
  %462 = call i32 bitcast (i32 (%struct.context.165*)* @conv_scoped_query to i32 (%struct.context*)*)(%struct.context* %0)
  %463 = icmp ne i32 %462, 0
  br i1 %463, label %464, label %479

; <label>:464:                                    ; preds = %461
  %465 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %466 = load %struct.context*, %struct.context** %465, align 8
  %467 = getelementptr inbounds %struct.context, %struct.context* %466, i32 0, i32 13
  %468 = load %struct.generic_list*, %struct.generic_list** %467, align 8
  call void @conv_scoped_list(%struct.generic_list* %468)
  %469 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %470 = load %struct.context*, %struct.context** %469, align 8
  %471 = getelementptr inbounds %struct.context, %struct.context* %470, i32 0, i32 14
  %472 = load %struct.generic_list*, %struct.generic_list** %471, align 8
  call void @conv_scoped_list(%struct.generic_list* %472)
  %473 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %474 = load %struct.context*, %struct.context** %473, align 8
  %475 = getelementptr inbounds %struct.context, %struct.context* %474, i32 0, i32 15
  %476 = load %struct.generic_list*, %struct.generic_list** %475, align 8
  call void @conv_scoped_list(%struct.generic_list* %476)
  %477 = getelementptr [58 x i8], [58 x i8]* @.str.38, i32 0, i32 0
  %478 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %477, i8* %478)
  br label %479

; <label>:479:                                    ; preds = %464, %461, %457, %454
  %480 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 2
  %481 = load i32, i32* %480, align 8
  %482 = icmp eq i32 %481, 5
  br i1 %482, label %483, label %507

; <label>:483:                                    ; preds = %479
  %484 = call i32 bitcast (i32 (%struct.context.165*)* @conv_scoped_query to i32 (%struct.context*)*)(%struct.context* %0)
  %485 = icmp ne i32 %484, 0
  br i1 %485, label %486, label %507

; <label>:486:                                    ; preds = %483
  %487 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %488 = load %struct.context*, %struct.context** %487, align 8
  %489 = getelementptr inbounds %struct.context, %struct.context* %488, i32 0, i32 13
  %490 = load %struct.generic_list*, %struct.generic_list** %489, align 8
  %491 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %492 = load %struct.context*, %struct.context** %491, align 8
  %493 = getelementptr inbounds %struct.context, %struct.context* %492, i32 0, i32 9
  %494 = getelementptr inbounds [256 x i8], [256 x i8]* %493, i32 0, i32 0
  call void @conv_scoped_ptr(%struct.generic_list* %490, i8* %494)
  %495 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %496 = load i32, i32* %495, align 4
  %497 = icmp ne i32 %496, 0
  br i1 %497, label %498, label %507

; <label>:498:                                    ; preds = %486
  %499 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %500 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %501 = load %struct.context*, %struct.context** %500, align 8
  %502 = getelementptr inbounds %struct.context, %struct.context* %501, i32 0, i32 9
  %503 = getelementptr inbounds [256 x i8], [256 x i8]* %502, i32 0, i32 0
  %504 = call i8* @dname_decompress(i8* %499, i32 256, i8* %503, i8* null, i8* null, i32* null)
  %505 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %506 = getelementptr [25 x i8], [25 x i8]* @.str.39, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %506, i8* %505)
  br label %507

; <label>:507:                                    ; preds = %483, %498, %486, %479
  %508 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  %509 = load %struct.generic_list*, %struct.generic_list** %508, align 8
  call void @list_destroy(%struct.generic_list* %509, void (i8*)* @rrset_freev)
  %510 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %511 = load %struct.context*, %struct.context** %510, align 8
  %512 = getelementptr inbounds %struct.context, %struct.context* %511, i32 0, i32 13
  %513 = load %struct.generic_list*, %struct.generic_list** %512, align 8
  %514 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  store %struct.generic_list* %513, %struct.generic_list** %514, align 8
  %515 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %516 = load %struct.context*, %struct.context** %515, align 8
  %517 = getelementptr inbounds %struct.context, %struct.context* %516, i32 0, i32 13
  store %struct.generic_list* null, %struct.generic_list** %517, align 8
  %518 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  %519 = load %struct.generic_list*, %struct.generic_list** %518, align 8
  call void @list_destroy(%struct.generic_list* %519, void (i8*)* @rrset_freev)
  %520 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %521 = load %struct.context*, %struct.context** %520, align 8
  %522 = getelementptr inbounds %struct.context, %struct.context* %521, i32 0, i32 14
  %523 = load %struct.generic_list*, %struct.generic_list** %522, align 8
  %524 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  store %struct.generic_list* %523, %struct.generic_list** %524, align 8
  %525 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %526 = load %struct.context*, %struct.context** %525, align 8
  %527 = getelementptr inbounds %struct.context, %struct.context* %526, i32 0, i32 14
  store %struct.generic_list* null, %struct.generic_list** %527, align 8
  %528 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  %529 = load %struct.generic_list*, %struct.generic_list** %528, align 8
  call void @list_destroy(%struct.generic_list* %529, void (i8*)* @rrset_freev)
  %530 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %531 = load %struct.context*, %struct.context** %530, align 8
  %532 = getelementptr inbounds %struct.context, %struct.context* %531, i32 0, i32 15
  %533 = load %struct.generic_list*, %struct.generic_list** %532, align 8
  %534 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  store %struct.generic_list* %533, %struct.generic_list** %534, align 8
  %535 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %536 = load %struct.context*, %struct.context** %535, align 8
  %537 = getelementptr inbounds %struct.context, %struct.context* %536, i32 0, i32 15
  store %struct.generic_list* null, %struct.generic_list** %537, align 8
  %538 = getelementptr [11 x i8], [11 x i8]* @.str.40, i32 0, i32 0
  %539 = getelementptr [20 x i8], [20 x i8]* @.str.19, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %538, i8* %539)
  br label %540

; <label>:540:                                    ; preds = %507, %424, %422, %385, %179, %144, %130, %127, %49
  %.0 = phi i32 [ 1, %49 ], [ %425, %424 ], [ %423, %422 ], [ 1, %507 ], [ -1, %144 ], [ -1, %385 ], [ 1, %179 ], [ -1, %127 ], [ -1, %130 ]
  ret i32 %.0
}

; Function Attrs: nounwind readnone
declare dso_local zeroext i16 @htons(i16 zeroext) #5

; Function Attrs: noinline nounwind uwtable
define internal void @cname_without_crecord(%struct.generic_list*, i8*) #0 {
  %3 = getelementptr [35 x i8], [35 x i8]* @.str.46, i32 0, i32 0
  %4 = getelementptr [24 x i8], [24 x i8]* @.str.45, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4)
  store i8 0, i8* %1, align 1
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %.lr.ph10.preheader, label %._crit_edge11

.lr.ph10.preheader:                               ; preds = %2
  br label %.lr.ph10

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %40
  %.08 = phi %struct.generic_list* [ %42, %40 ], [ %7, %.lr.ph10.preheader ]
  %.017 = phi i32 [ %.12, %40 ], [ 0, %.lr.ph10.preheader ]
  %.036 = phi i8* [ %.14, %40 ], [ null, %.lr.ph10.preheader ]
  call void @unroll_loop(i32 3)
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.08, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast i8* %12 to %struct.rr_set*
  %14 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %13, i32 0, i32 2
  %15 = bitcast %union.u_key* %14 to %struct.key_info**
  %16 = load %struct.key_info*, %struct.key_info** %15, align 8
  %17 = getelementptr inbounds %struct.key_info, %struct.key_info* %16, i32 0, i32 0
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = icmp eq i32 %19, 5
  br i1 %20, label %21, label %40

; <label>:21:                                     ; preds = %.lr.ph10
  %22 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %13, i32 0, i32 4
  %23 = bitcast %union.u_data* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %13, i32 0, i32 4
  %26 = bitcast %union.u_data* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 2
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %24, i64 %32
  %34 = bitcast i8* %33 to %struct.rr*
  %35 = bitcast %struct.rr* %34 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 6
  %37 = getelementptr inbounds %struct.rr, %struct.rr* %34, i32 0, i32 1
  %38 = load i16, i16* %37, align 4
  %39 = zext i16 %38 to i32
  br label %40

; <label>:40:                                     ; preds = %.lr.ph10, %21
  %.14 = phi i8* [ %36, %21 ], [ %.036, %.lr.ph10 ]
  %.12 = phi i32 [ %39, %21 ], [ %.017, %.lr.ph10 ]
  %41 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.08, i32 0, i32 0
  %42 = load %struct.generic_list*, %struct.generic_list** %41, align 8
  %43 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %42, i32 0, i32 2
  %44 = load i8*, i8** %43, align 8
  %45 = icmp ne i8* %44, null
  br i1 %45, label %.lr.ph10, label %._crit_edge11.loopexit

._crit_edge11.loopexit:                           ; preds = %40
  %.03.lcssa.ph = phi i8* [ %.14, %40 ]
  %.01.lcssa.ph = phi i32 [ %.12, %40 ]
  br label %._crit_edge11

._crit_edge11:                                    ; preds = %._crit_edge11.loopexit, %2
  %.03.lcssa = phi i8* [ null, %2 ], [ %.03.lcssa.ph, %._crit_edge11.loopexit ]
  %.01.lcssa = phi i32 [ 0, %2 ], [ %.01.lcssa.ph, %._crit_edge11.loopexit ]
  %46 = icmp ne i8* %.03.lcssa, null
  br i1 %46, label %47, label %.loopexit

; <label>:47:                                     ; preds = %._crit_edge11
  %48 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %48, align 8
  %49 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %50 = load %struct.generic_list*, %struct.generic_list** %49, align 8
  %51 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %50, i32 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %47
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %72
  %.15 = phi %struct.generic_list* [ %74, %72 ], [ %50, %.lr.ph.preheader ]
  call void @unroll_loop(i32 4)
  %54 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.15, i32 0, i32 2
  %55 = load i8*, i8** %54, align 8
  %56 = bitcast i8* %55 to %struct.rr_set*
  %57 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %56, i32 0, i32 2
  %58 = bitcast %union.u_key* %57 to %struct.key_info**
  %59 = load %struct.key_info*, %struct.key_info** %58, align 8
  %60 = bitcast %struct.key_info* %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 6
  %62 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %56, i32 0, i32 2
  %63 = bitcast %union.u_key* %62 to %struct.key_info**
  %64 = load %struct.key_info*, %struct.key_info** %63, align 8
  %65 = getelementptr inbounds %struct.key_info, %struct.key_info* %64, i32 0, i32 2
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = icmp eq i32 %67, %.01.lcssa
  br i1 %68, label %69, label %72

; <label>:69:                                     ; preds = %.lr.ph
  %70 = call i32 @mesg_dname_cmp(i8* null, i8* %61, i8* %.03.lcssa)
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %.loopexit.loopexit

; <label>:72:                                     ; preds = %.lr.ph, %69
  %73 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.15, i32 0, i32 0
  %74 = load %struct.generic_list*, %struct.generic_list** %73, align 8
  %75 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %74, i32 0, i32 2
  %76 = load i8*, i8** %75, align 8
  %77 = icmp ne i8* %76, null
  br i1 %77, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %72
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %47
  %78 = getelementptr [44 x i8], [44 x i8]* @.str.47, i32 0, i32 0
  %79 = getelementptr [24 x i8], [24 x i8]* @.str.45, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %78, i8* %79)
  %80 = icmp sge i32 %.01.lcssa, 256
  br i1 %80, label %81, label %84

; <label>:81:                                     ; preds = %._crit_edge
  %82 = getelementptr [22 x i8], [22 x i8]* @.str.20, i32 0, i32 0
  %83 = getelementptr [24 x i8], [24 x i8]* @.str.45, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %82, i8* %83)
  br label %.loopexit

; <label>:84:                                     ; preds = %._crit_edge
  %85 = sext i32 %.01.lcssa to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %.03.lcssa, i64 %85, i1 false), !track !30
  %86 = sext i32 %.01.lcssa to i64
  %87 = getelementptr inbounds i8, i8* %1, i64 %86
  store i8 0, i8* %87, align 1
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %69
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge11, %84, %81
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @request_finish(%struct.context*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1, i32 0, i32 0
  %3 = getelementptr [17 x i8], [17 x i8]* @.str.41, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8
  call void @list_destroy(%struct.generic_list* %5, void (i8*)* @rrset_freev)
  %6 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8
  call void @list_destroy(%struct.generic_list* %7, void (i8*)* @rrset_freev)
  %8 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  call void @list_destroy(%struct.generic_list* %9, void (i8*)* @rrset_freev)
  %10 = call %struct.generic_list* @list_init()
  %11 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  store %struct.generic_list* %10, %struct.generic_list** %11, align 8
  %12 = call %struct.generic_list* @list_init()
  %13 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  store %struct.generic_list* %12, %struct.generic_list** %13, align 8
  %14 = call %struct.generic_list* @list_init()
  %15 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  store %struct.generic_list* %14, %struct.generic_list** %15, align 8
  %16 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8
  %18 = icmp ne %struct.generic_list* %17, null
  br i1 %18, label %19, label %27

; <label>:19:                                     ; preds = %1
  %20 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  %21 = load %struct.generic_list*, %struct.generic_list** %20, align 8
  %22 = icmp ne %struct.generic_list* %21, null
  br i1 %22, label %23, label %27

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  %25 = load %struct.generic_list*, %struct.generic_list** %24, align 8
  %26 = icmp ne %struct.generic_list* %25, null
  br i1 %26, label %29, label %27

; <label>:27:                                     ; preds = %23, %19, %1
  %28 = call i32 @request_abort(%struct.context* %0, i32 -1)
  br label %81

; <label>:29:                                     ; preds = %23
  %30 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %31 = bitcast %union.anon.0* %30 to %struct.mesg_hdr**
  %32 = load %struct.mesg_hdr*, %struct.mesg_hdr** %31, align 8
  %33 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %32, i32 0, i32 1
  %34 = load i16, i16* %33, align 2
  %35 = lshr i16 %34, 1
  %36 = and i16 %35, 1
  %37 = trunc i16 %36 to i8
  %38 = zext i8 %37 to i32
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %58

; <label>:40:                                     ; preds = %29
  %41 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %42 = bitcast %union.anon.0* %41 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  %47 = load %struct.generic_list*, %struct.generic_list** %46, align 8
  %48 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  %49 = load %struct.generic_list*, %struct.generic_list** %48, align 8
  %50 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  %51 = load %struct.generic_list*, %struct.generic_list** %50, align 8
  %52 = call i32 @mesg_parse(i8* %43, i32 %45, %struct.generic_list* %47, %struct.generic_list* %49, %struct.generic_list* %51)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %58

; <label>:54:                                     ; preds = %40
  %55 = getelementptr [28 x i8], [28 x i8]* @.str.42, i32 0, i32 0
  %56 = getelementptr [17 x i8], [17 x i8]* @.str.41, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %55, i8* %56)
  %57 = call i32 @request_abort(%struct.context* %0, i32 -1)
  br label %81

; <label>:58:                                     ; preds = %40, %29
  %59 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 5
  %60 = load %struct.generic_list*, %struct.generic_list** %59, align 8
  %61 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %60, i32 0, i32 2
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast i8* %62 to %struct.sockaddr*
  call void @fwd_mark(%struct.sockaddr* %63, i32 -1)
  %64 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %65 = load %struct.context*, %struct.context** %64, align 8
  %66 = icmp ne %struct.context* %65, null
  br i1 %66, label %67, label %77

; <label>:67:                                     ; preds = %58
  %68 = getelementptr [27 x i8], [27 x i8]* @.str.43, i32 0, i32 0
  %69 = getelementptr [17 x i8], [17 x i8]* @.str.41, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %68, i8* %69)
  %70 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %71 = load %struct.context*, %struct.context** %70, align 8
  %72 = getelementptr inbounds %struct.context, %struct.context* %71, i32 0, i32 7
  %73 = load i32 (%struct.context*)*, i32 (%struct.context*)** %72, align 8
  %74 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 0
  %75 = load %struct.context*, %struct.context** %74, align 8
  %76 = call i32 %73(%struct.context* %75)
  br label %77

; <label>:77:                                     ; preds = %67, %58
  %78 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %0)
  %79 = getelementptr [19 x i8], [19 x i8]* @.str.44, i32 0, i32 0
  %80 = getelementptr [17 x i8], [17 x i8]* @.str.41, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %79, i8* %80)
  br label %81

; <label>:81:                                     ; preds = %77, %54, %27
  %.0 = phi i32 [ %57, %54 ], [ 0, %77 ], [ %28, %27 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @response_abort(%struct.context*, i32) #0 {
  %3 = getelementptr [3 x i8], [3 x i8]* @.str.1.49, i32 0, i32 0
  %4 = getelementptr [17 x i8], [17 x i8]* @.str.48, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4)
  %5 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %0)
  ret i32 %1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @assemble_response(%struct.context*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.3.51, i32 0, i32 0
  %3 = getelementptr [18 x i8], [18 x i8]* @.str.2.50, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %5 = bitcast %union.anon.0* %4 to %struct.mesg_hdr**
  %6 = load %struct.mesg_hdr*, %struct.mesg_hdr** %5, align 8
  %7 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %6, i32 0, i32 1
  %8 = load i16, i16* %7, align 2
  %9 = lshr i16 %8, 8
  %10 = and i16 %9, 15
  %11 = trunc i16 %10 to i8
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %120

; <label>:14:                                     ; preds = %1
  %15 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  %16 = load %struct.generic_list*, %struct.generic_list** %15, align 8
  %17 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  %18 = load %struct.generic_list*, %struct.generic_list** %17, align 8
  %19 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  %20 = load %struct.generic_list*, %struct.generic_list** %19, align 8
  %21 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %22 = bitcast %union.anon.0* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr [65535 x i8], [65535 x i8]* @assemble_response.buf, i32 0, i32 0
  %27 = call i32 @mesg_assemble(%struct.generic_list* %16, %struct.generic_list* %18, %struct.generic_list* %20, i8* %26, i16 zeroext -1, i8* %23, i32 %25)
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %150, label %29

; <label>:29:                                     ; preds = %14
  %30 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %31 = bitcast %union.anon.0* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %34, label %38

; <label>:34:                                     ; preds = %29
  %35 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %36 = bitcast %union.anon.0* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  call void @free(i8* %37) #9
  br label %38

; <label>:38:                                     ; preds = %34, %29
  %39 = sext i32 %27 to i64
  %40 = call noalias i8* @malloc(i64 %39) #9, !track !31
  %41 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %42 = bitcast %union.anon.0* %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %44 = bitcast %union.anon.0* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp ne i8* %45, null
  br i1 %46, label %47, label %150

; <label>:47:                                     ; preds = %38
  %48 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %49 = bitcast %union.anon.0* %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = sext i32 %27 to i64
  %52 = getelementptr [65535 x i8], [65535 x i8]* @assemble_response.buf, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 16 %52, i64 %51, i1 false), !track !32
  %53 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  store i32 %27, i32* %53, align 8
  %54 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %55 = load %struct.context*, %struct.context** %54, align 8
  %56 = icmp ne %struct.context* %55, null
  br i1 %56, label %57, label %147

; <label>:57:                                     ; preds = %47
  %58 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %59 = load %struct.context*, %struct.context** %58, align 8
  %60 = getelementptr inbounds %struct.context, %struct.context* %59, i32 0, i32 16
  %61 = bitcast %union.anon.0* %60 to %struct.mesg_hdr**
  %62 = load %struct.mesg_hdr*, %struct.mesg_hdr** %61, align 8
  %63 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %62, i32 0, i32 1
  %64 = load i16, i16* %63, align 2
  %65 = lshr i16 %64, 8
  %66 = and i16 %65, 15
  %67 = trunc i16 %66 to i8
  %68 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %69 = bitcast %union.anon.0* %68 to %struct.mesg_hdr**
  %70 = load %struct.mesg_hdr*, %struct.mesg_hdr** %69, align 8
  %71 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %70, i32 0, i32 1
  %72 = zext i8 %67 to i16
  %73 = load i16, i16* %71, align 2
  %74 = and i16 %72, 15
  %75 = shl i16 %74, 8
  %76 = and i16 %73, -3841
  %77 = or i16 %76, %75
  store i16 %77, i16* %71, align 2
  %78 = trunc i16 %74 to i8
  %79 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %80 = load %struct.context*, %struct.context** %79, align 8
  %81 = getelementptr inbounds %struct.context, %struct.context* %80, i32 0, i32 16
  %82 = bitcast %union.anon.0* %81 to %struct.mesg_hdr**
  %83 = load %struct.mesg_hdr*, %struct.mesg_hdr** %82, align 8
  %84 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %83, i32 0, i32 1
  %85 = load i16, i16* %84, align 2
  %86 = lshr i16 %85, 2
  %87 = and i16 %86, 1
  %88 = trunc i16 %87 to i8
  %89 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %90 = bitcast %union.anon.0* %89 to %struct.mesg_hdr**
  %91 = load %struct.mesg_hdr*, %struct.mesg_hdr** %90, align 8
  %92 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %91, i32 0, i32 1
  %93 = zext i8 %88 to i16
  %94 = load i16, i16* %92, align 2
  %95 = and i16 %93, 1
  %96 = shl i16 %95, 2
  %97 = and i16 %94, -5
  %98 = or i16 %97, %96
  store i16 %98, i16* %92, align 2
  %99 = trunc i16 %95 to i8
  %100 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 1
  %101 = load %struct.context*, %struct.context** %100, align 8
  %102 = getelementptr inbounds %struct.context, %struct.context* %101, i32 0, i32 16
  %103 = bitcast %union.anon.0* %102 to %struct.mesg_hdr**
  %104 = load %struct.mesg_hdr*, %struct.mesg_hdr** %103, align 8
  %105 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %104, i32 0, i32 1
  %106 = load i16, i16* %105, align 2
  %107 = lshr i16 %106, 15
  %108 = trunc i16 %107 to i8
  %109 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %110 = bitcast %union.anon.0* %109 to %struct.mesg_hdr**
  %111 = load %struct.mesg_hdr*, %struct.mesg_hdr** %110, align 8
  %112 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %111, i32 0, i32 1
  %113 = zext i8 %108 to i16
  %114 = load i16, i16* %112, align 2
  %115 = and i16 %113, 1
  %116 = shl i16 %115, 15
  %117 = and i16 %114, 32767
  %118 = or i16 %117, %116
  store i16 %118, i16* %112, align 2
  %119 = trunc i16 %115 to i8
  br label %147

; <label>:120:                                    ; preds = %1
  %121 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %122 = bitcast %union.anon.0* %121 to %struct.mesg_hdr**
  %123 = load %struct.mesg_hdr*, %struct.mesg_hdr** %122, align 8
  %124 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %123, i32 0, i32 1
  %125 = load i16, i16* %124, align 2
  %126 = and i16 %125, 32767
  %127 = or i16 %126, -32768
  store i16 %127, i16* %124, align 2
  %128 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %129 = bitcast %union.anon.0* %128 to %struct.mesg_hdr**
  %130 = load %struct.mesg_hdr*, %struct.mesg_hdr** %129, align 8
  %131 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %130, i32 0, i32 1
  %132 = load i16, i16* %131, align 2
  %133 = and i16 %132, -129
  %134 = or i16 %133, 128
  store i16 %134, i16* %131, align 2
  %135 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %136 = bitcast %union.anon.0* %135 to %struct.mesg_hdr**
  %137 = load %struct.mesg_hdr*, %struct.mesg_hdr** %136, align 8
  %138 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %137, i32 0, i32 3
  store i16 0, i16* %138, align 2
  %139 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %140 = bitcast %union.anon.0* %139 to %struct.mesg_hdr**
  %141 = load %struct.mesg_hdr*, %struct.mesg_hdr** %140, align 8
  %142 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %141, i32 0, i32 4
  store i16 0, i16* %142, align 2
  %143 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %144 = bitcast %union.anon.0* %143 to %struct.mesg_hdr**
  %145 = load %struct.mesg_hdr*, %struct.mesg_hdr** %144, align 8
  %146 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %145, i32 0, i32 5
  store i16 0, i16* %146, align 2
  br label %147

; <label>:147:                                    ; preds = %47, %57, %120
  %148 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %149 = load i32, i32* %148, align 8
  br label %150

; <label>:150:                                    ; preds = %38, %14, %147
  %.0 = phi i32 [ %149, %147 ], [ -1, %14 ], [ -1, %38 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @context_timeout_handler(%struct.ev_to_data.14*) #0 {
  %2 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 1
  br i1 %4, label %19, label %5

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 3
  %7 = bitcast %union.anon* %6 to %struct.context.19**
  %8 = load %struct.context.19*, %struct.context.19** %7, align 8
  %9 = getelementptr inbounds %struct.context.19, %struct.context.19* %8, i32 0, i32 6
  store %struct.ev_to_data.14* null, %struct.ev_to_data.14** %9, align 8
  %10 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 3
  %11 = bitcast %union.anon* %10 to %struct.context.19**
  %12 = load %struct.context.19*, %struct.context.19** %11, align 8
  %13 = getelementptr inbounds %struct.context.19, %struct.context.19* %12, i32 0, i32 8
  %14 = load i32 (%struct.context.19*)*, i32 (%struct.context.19*)** %13, align 8
  %15 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 3
  %16 = bitcast %union.anon* %15 to %struct.context.19**
  %17 = load %struct.context.19*, %struct.context.19** %16, align 8
  %18 = call i32 %14(%struct.context.19* %17)
  br label %19

; <label>:19:                                     ; preds = %1, %5
  %.0 = phi i32 [ %18, %5 ], [ -1, %1 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @context_timeout_register(%struct.context.19*, i32) #0 {
  %3 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 2
  br i1 %5, label %6, label %9

; <label>:6:                                      ; preds = %2
  %7 = getelementptr [10 x i8], [10 x i8]* @.str.1.53, i32 0, i32 0
  %8 = getelementptr [27 x i8], [27 x i8]* @.str.52, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %7, i8* %8)
  br label %9

; <label>:9:                                      ; preds = %6, %2
  %10 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 6
  %11 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %10, align 8
  %12 = icmp ne %struct.ev_to_data.14* %11, null
  br i1 %12, label %13, label %23

; <label>:13:                                     ; preds = %9
  %14 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 6
  %15 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %14, align 8
  %16 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %15, i32 0, i32 1
  %17 = bitcast {}** %16 to i32 (%struct.ev_to_data.14*)**
  %18 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %17, align 8
  %19 = icmp ne i32 (%struct.ev_to_data.14*)* %18, null
  br i1 %19, label %20, label %23

; <label>:20:                                     ; preds = %13
  %21 = getelementptr [32 x i8], [32 x i8]* @.str.2.54, i32 0, i32 0
  %22 = getelementptr [27 x i8], [27 x i8]* @.str.52, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %21, i8* %22)
  br label %52

; <label>:23:                                     ; preds = %13, %9
  %24 = call noalias i8* @malloc(i64 32) #9, !track !33
  %25 = bitcast i8* %24 to %struct.ev_to_data.14*
  %26 = icmp ne %struct.ev_to_data.14* %25, null
  br i1 %26, label %27, label %52

; <label>:27:                                     ; preds = %23
  %28 = call i64 @time(i64* null) #9
  %29 = sext i32 %1 to i64
  %30 = add nsw i64 %28, %29
  %31 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %25, i32 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %25, i32 0, i32 1
  %33 = bitcast {}** %32 to i32 (%struct.ev_to_data.14*)**
  store i32 (%struct.ev_to_data.14*)* @context_timeout_handler, i32 (%struct.ev_to_data.14*)** %33, align 8
  %34 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %25, i32 0, i32 2
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %25, i32 0, i32 3
  %36 = bitcast %union.anon* %35 to %struct.context.19**
  store %struct.context.19* %0, %struct.context.19** %36, align 8
  %37 = call i32 @ev_to_register(%struct.ev_to_data.14* %25)
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %41

; <label>:39:                                     ; preds = %27
  %40 = bitcast %struct.ev_to_data.14* %25 to i8*
  call void @free(i8* %40) #9
  br label %52

; <label>:41:                                     ; preds = %27
  %42 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 6
  store %struct.ev_to_data.14* %25, %struct.ev_to_data.14** %42, align 8
  %43 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 2
  br i1 %45, label %46, label %52

; <label>:46:                                     ; preds = %41
  %47 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %25, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = trunc i64 %48 to i32
  %50 = getelementptr [20 x i8], [20 x i8]* @.str.3.55, i32 0, i32 0
  %51 = getelementptr [27 x i8], [27 x i8]* @.str.52, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %50, i8* %51, i32 %49)
  br label %52

; <label>:52:                                     ; preds = %41, %46, %23, %39, %20
  %.0 = phi i32 [ -1, %20 ], [ -1, %39 ], [ -1, %23 ], [ 0, %46 ], [ 0, %41 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i64 @time(i64*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.context.19* @context_create() #6 {
  %1 = call noalias i8* @malloc(i64 408) #9, !track !34
  %2 = bitcast i8* %1 to %struct.context.19*
  %3 = icmp ne %struct.context.19* %2, null
  br i1 %3, label %4, label %45

; <label>:4:                                      ; preds = %0
  %5 = bitcast %struct.context.19* %2 to i8*
  %6 = getelementptr [7 x i8], [7 x i8]* @.str.5.59, i32 0, i32 0
  %7 = getelementptr [17 x i8], [17 x i8]* @.str.4.58, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6, i8* %7, i8* %5)
  %8 = bitcast %struct.context.19* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 408, i1 false)
  %9 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 5
  store %struct.generic_list* null, %struct.generic_list** %9, align 8
  %10 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 23
  store i32 -1, i32* %10, align 8
  %11 = call %struct.generic_list* @list_init()
  %12 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 13
  store %struct.generic_list* %11, %struct.generic_list** %12, align 8
  %13 = call %struct.generic_list* @list_init()
  %14 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 14
  store %struct.generic_list* %13, %struct.generic_list** %14, align 8
  %15 = call %struct.generic_list* @list_init()
  %16 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 15
  store %struct.generic_list* %15, %struct.generic_list** %16, align 8
  %17 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 13
  %18 = load %struct.generic_list*, %struct.generic_list** %17, align 8
  %19 = icmp ne %struct.generic_list* %18, null
  br i1 %19, label %20, label %28

; <label>:20:                                     ; preds = %4
  %21 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 14
  %22 = load %struct.generic_list*, %struct.generic_list** %21, align 8
  %23 = icmp ne %struct.generic_list* %22, null
  br i1 %23, label %24, label %28

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 15
  %26 = load %struct.generic_list*, %struct.generic_list** %25, align 8
  %27 = icmp ne %struct.generic_list* %26, null
  br i1 %27, label %31, label %28

; <label>:28:                                     ; preds = %24, %20, %4
  %29 = call i8* @context_destroy(%struct.context.19* %2)
  %30 = bitcast i8* %29 to %struct.context.19*
  br label %45

; <label>:31:                                     ; preds = %24
  %32 = call noalias i8* @malloc(i64 128) #9, !track !35
  %33 = bitcast i8* %32 to %struct.sockaddr*
  %34 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 22
  store %struct.sockaddr* %33, %struct.sockaddr** %34, align 8
  %35 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 22
  %36 = load %struct.sockaddr*, %struct.sockaddr** %35, align 8
  %37 = icmp ne %struct.sockaddr* %36, null
  br i1 %37, label %41, label %38

; <label>:38:                                     ; preds = %31
  %39 = call i8* @context_destroy(%struct.context.19* %2)
  %40 = bitcast i8* %39 to %struct.context.19*
  br label %45

; <label>:41:                                     ; preds = %31
  %42 = getelementptr inbounds %struct.context.19, %struct.context.19* %2, i32 0, i32 22
  %43 = load %struct.sockaddr*, %struct.sockaddr** %42, align 8
  %44 = bitcast %struct.sockaddr* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %44, i8 0, i64 128, i1 false)
  br label %45

; <label>:45:                                     ; preds = %0, %41, %38, %28
  %.0 = phi %struct.context.19* [ %2, %41 ], [ %40, %38 ], [ %30, %28 ], [ null, %0 ]
  ret %struct.context.19* %.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @context_destroy(%struct.context.19*) #6 {
  %2 = bitcast %struct.context.19* %0 to i8*
  %3 = getelementptr [7 x i8], [7 x i8]* @.str.5.59, i32 0, i32 0
  %4 = getelementptr [18 x i8], [18 x i8]* @.str.6.62, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4, i8* %2)
  %5 = icmp ne %struct.context.19* %0, null
  br i1 %5, label %6, label %123

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 0
  %8 = load %struct.context.19*, %struct.context.19** %7, align 8
  %9 = icmp ne %struct.context.19* %8, null
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 0
  %12 = load %struct.context.19*, %struct.context.19** %11, align 8
  %13 = getelementptr inbounds %struct.context.19, %struct.context.19* %12, i32 0, i32 1
  store %struct.context.19* null, %struct.context.19** %13, align 8
  br label %14

; <label>:14:                                     ; preds = %10, %6
  %15 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 1
  %16 = load %struct.context.19*, %struct.context.19** %15, align 8
  %17 = icmp ne %struct.context.19* %16, null
  br i1 %17, label %18, label %22

; <label>:18:                                     ; preds = %14
  %19 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 1
  %20 = load %struct.context.19*, %struct.context.19** %19, align 8
  %21 = getelementptr inbounds %struct.context.19, %struct.context.19* %20, i32 0, i32 0
  store %struct.context.19* null, %struct.context.19** %21, align 8
  br label %22

; <label>:22:                                     ; preds = %18, %14
  %23 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 13
  %24 = load %struct.generic_list*, %struct.generic_list** %23, align 8
  %25 = icmp ne %struct.generic_list* %24, null
  br i1 %25, label %26, label %29

; <label>:26:                                     ; preds = %22
  %27 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 13
  %28 = load %struct.generic_list*, %struct.generic_list** %27, align 8
  call void @list_destroy(%struct.generic_list* %28, void (i8*)* @rrset_freev)
  br label %29

; <label>:29:                                     ; preds = %26, %22
  %30 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 14
  %31 = load %struct.generic_list*, %struct.generic_list** %30, align 8
  %32 = icmp ne %struct.generic_list* %31, null
  br i1 %32, label %33, label %36

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 14
  %35 = load %struct.generic_list*, %struct.generic_list** %34, align 8
  call void @list_destroy(%struct.generic_list* %35, void (i8*)* @rrset_freev)
  br label %36

; <label>:36:                                     ; preds = %33, %29
  %37 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 15
  %38 = load %struct.generic_list*, %struct.generic_list** %37, align 8
  %39 = icmp ne %struct.generic_list* %38, null
  br i1 %39, label %40, label %43

; <label>:40:                                     ; preds = %36
  %41 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 15
  %42 = load %struct.generic_list*, %struct.generic_list** %41, align 8
  call void @list_destroy(%struct.generic_list* %42, void (i8*)* @rrset_freev)
  br label %43

; <label>:43:                                     ; preds = %40, %36
  %44 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 4
  %45 = load %struct.generic_list*, %struct.generic_list** %44, align 8
  %46 = icmp ne %struct.generic_list* %45, null
  br i1 %46, label %47, label %50

; <label>:47:                                     ; preds = %43
  %48 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 4
  %49 = load %struct.generic_list*, %struct.generic_list** %48, align 8
  call void @list_destroy(%struct.generic_list* %49, void (i8*)* @free)
  br label %50

; <label>:50:                                     ; preds = %47, %43
  %51 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 16
  %52 = bitcast %union.anon.0* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %59

; <label>:55:                                     ; preds = %50
  %56 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 16
  %57 = bitcast %union.anon.0* %56 to i8**
  %58 = load i8*, i8** %57, align 8
  call void @free(i8* %58) #9
  br label %59

; <label>:59:                                     ; preds = %55, %50
  %60 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 6
  %61 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %60, align 8
  %62 = icmp ne %struct.ev_to_data.14* %61, null
  br i1 %62, label %63, label %68

; <label>:63:                                     ; preds = %59
  %64 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 6
  %65 = load %struct.ev_to_data.14*, %struct.ev_to_data.14** %64, align 8
  %66 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %65, i32 0, i32 1
  %67 = bitcast {}** %66 to i32 (%struct.ev_to_data.14*)**
  store i32 (%struct.ev_to_data.14*)* null, i32 (%struct.ev_to_data.14*)** %67, align 8
  br label %68

; <label>:68:                                     ; preds = %63, %59
  %69 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 23
  %70 = load i32, i32* %69, align 8
  %71 = icmp sge i32 %70, 0
  br i1 %71, label %72, label %85

; <label>:72:                                     ; preds = %68
  %73 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 23
  %74 = load i32, i32* %73, align 8
  %75 = call i32 @shutdown(i32 %74, i32 2) #9
  %76 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 23
  %77 = load i32, i32* %76, align 8
  %78 = call i32 @close(i32 %77)
  %79 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 23
  %80 = load i32, i32* %79, align 8
  %81 = call i32 @ev_tcp_out_remove(i32 %80)
  %82 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 23
  %83 = load i32, i32* %82, align 8
  %84 = call i32 @ev_tcp_conn_in_remove(i32 %83)
  br label %85

; <label>:85:                                     ; preds = %72, %68
  %86 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 23
  %87 = load i32, i32* %86, align 8
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %89, label %106

; <label>:89:                                     ; preds = %85
  %90 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 22
  %91 = load %struct.sockaddr*, %struct.sockaddr** %90, align 8
  %92 = icmp ne %struct.sockaddr* %91, null
  br i1 %92, label %93, label %106

; <label>:93:                                     ; preds = %89
  %94 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 22
  %95 = load %struct.sockaddr*, %struct.sockaddr** %94, align 8
  %96 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %95, i32 0, i32 0
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %106

; <label>:100:                                    ; preds = %93
  %101 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 22
  %102 = load %struct.sockaddr*, %struct.sockaddr** %101, align 8
  %103 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 10
  %104 = load i32, i32* %103, align 8
  %105 = call i32 @ev_udp_in_remove(%struct.sockaddr* %102, i32 %104)
  br label %106

; <label>:106:                                    ; preds = %100, %93, %89, %85
  %107 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 22
  %108 = load %struct.sockaddr*, %struct.sockaddr** %107, align 8
  %109 = icmp ne %struct.sockaddr* %108, null
  br i1 %109, label %110, label %114

; <label>:110:                                    ; preds = %106
  %111 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 22
  %112 = load %struct.sockaddr*, %struct.sockaddr** %111, align 8
  %113 = bitcast %struct.sockaddr* %112 to i8*
  call void @free(i8* %113) #9
  br label %114

; <label>:114:                                    ; preds = %110, %106
  %115 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 19
  %116 = load %struct.nia*, %struct.nia** %115, align 8
  %117 = icmp ne %struct.nia* %116, null
  br i1 %117, label %118, label %121

; <label>:118:                                    ; preds = %114
  %119 = getelementptr inbounds %struct.context.19, %struct.context.19* %0, i32 0, i32 19
  %120 = load %struct.nia*, %struct.nia** %119, align 8
  call void @nia_free(%struct.nia* %120, i32 0)
  br label %121

; <label>:121:                                    ; preds = %118, %114
  %122 = bitcast %struct.context.19* %0 to i8*
  call void @free(i8* %122) #9
  br label %123

; <label>:123:                                    ; preds = %1, %121
  ret i8* null
}

; Function Attrs: nounwind
declare dso_local i32 @shutdown(i32, i32) #4

declare dso_local i32 @close(i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @make_random_permutation(i32) #0 {
  %2 = trunc i32 %0 to i16
  %3 = getelementptr [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 0
  store i16 %2, i16* %3, align 16
  %4 = zext i32 %0 to i64
  br label %5

; <label>:5:                                      ; preds = %1, %21
  %indvars.iv = phi i64 [ 1, %1 ], [ %indvars.iv.next, %21 ]
  %6 = call i64 @random() #9
  %7 = sitofp i64 %6 to double
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %8 = add i64 %indvars.iv, 1
  %tmp2 = trunc i64 %8 to i32
  %9 = sitofp i32 %tmp2 to double
  %10 = fmul double %7, %9
  %11 = fdiv double %10, 0x41DFFFFFFFC00000
  %12 = fptosi double %11 to i32
  %13 = zext i32 %12 to i64
  %14 = icmp ne i64 %indvars.iv, %13
  br i1 %14, label %15, label %21

; <label>:15:                                     ; preds = %5
  %16 = sext i32 %12 to i64
  %17 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = shl i64 %indvars.iv, 1
  %20 = inttoptr i64 %19 to i16*
  %uglygep = getelementptr i8, i8* bitcast ([32768 x i16]* @permutation to i8*), i64 %19
  %uglygep1 = bitcast i8* %uglygep to i16*
  store i16 %18, i16* %uglygep1, align 2
  br label %21

; <label>:21:                                     ; preds = %15, %5
  %22 = add i64 %4, %indvars.iv
  %23 = sext i32 %12 to i64
  %24 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %23
  %tmp = trunc i64 %22 to i16
  store i16 %tmp, i16* %24, align 2
  %exitcond = icmp ne i64 %indvars.iv.next, 32768
  br i1 %exitcond, label %5, label %25

; <label>:25:                                     ; preds = %21
  ret void
}

; Function Attrs: nounwind
declare dso_local i64 @random() #4

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i16 @mesg_id() #0 {
  %1 = load i32, i32* @mesg_id.range, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %6, label %3

; <label>:3:                                      ; preds = %0
  %4 = call i64 @time(i64* null) #9
  %5 = trunc i64 %4 to i32
  call void @srandom(i32 %5) #9
  store i32 1, i32* @mesg_id.range, align 4
  call void @make_random_permutation(i32 0)
  store i32 0, i32* @mesg_id.index, align 4
  br label %6

; <label>:6:                                      ; preds = %3, %0
  %7 = load i32, i32* @mesg_id.index, align 4
  %8 = icmp eq i32 %7, 16384
  br i1 %8, label %9, label %15

; <label>:9:                                      ; preds = %6
  %10 = load i32, i32* @mesg_id.range, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %9
  store i32 2, i32* @mesg_id.range, align 4
  call void @make_random_permutation(i32 32768)
  br label %14

; <label>:13:                                     ; preds = %9
  store i32 1, i32* @mesg_id.range, align 4
  call void @make_random_permutation(i32 0)
  br label %14

; <label>:14:                                     ; preds = %13, %12
  store i32 0, i32* @mesg_id.index, align 4
  br label %15

; <label>:15:                                     ; preds = %14, %6
  %16 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 4
  br i1 %18, label %19, label %26

; <label>:19:                                     ; preds = %15
  %20 = load i32, i32* @mesg_id.index, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %21
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = getelementptr [15 x i8], [15 x i8]* @.str.65, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %25, i32 %24)
  br label %26

; <label>:26:                                     ; preds = %19, %15
  %27 = load i32, i32* @mesg_id.index, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* @mesg_id.index, align 4
  %29 = sext i32 %27 to i64
  %30 = getelementptr inbounds [32768 x i16], [32768 x i16]* @permutation, i64 0, i64 %29
  %31 = load i16, i16* %30, align 2
  ret i16 %31
}

; Function Attrs: nounwind
declare dso_local void @srandom(i32) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mesg_make_query(i8*, i16 zeroext, i16 zeroext, i32, i32, i8*, i32) #0 {
  %8 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %7
  %12 = call i8* @string_rtype(i16 zeroext %1)
  %13 = getelementptr [31 x i8], [31 x i8]* @.str.2.71, i32 0, i32 0
  %14 = getelementptr [18 x i8], [18 x i8]* @.str.1.68, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %13, i8* %14, i8* %12, i32 %3)
  br label %15

; <label>:15:                                     ; preds = %11, %7
  %16 = bitcast i8* %5 to %struct.mesg_hdr*
  %17 = trunc i32 %3 to i16
  %18 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 0
  store i16 %17, i16* %18, align 2
  %19 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %20 = load i16, i16* %19, align 2
  %21 = and i16 %20, -121
  store i16 %21, i16* %19, align 2
  %22 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %23 = load i16, i16* %22, align 2
  %24 = and i16 %23, -3841
  store i16 %24, i16* %22, align 2
  %25 = trunc i32 %4 to i8
  %26 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %27 = zext i8 %25 to i16
  %28 = load i16, i16* %26, align 2
  %29 = and i16 %27, 1
  %30 = and i16 %28, -2
  %31 = or i16 %30, %29
  store i16 %31, i16* %26, align 2
  %32 = trunc i16 %29 to i8
  %33 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %34 = load i16, i16* %33, align 2
  %35 = and i16 %34, -28673
  store i16 %35, i16* %33, align 2
  %36 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %37 = load i16, i16* %36, align 2
  %38 = and i16 %37, 32767
  store i16 %38, i16* %36, align 2
  %39 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, -3
  store i16 %41, i16* %39, align 2
  %42 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = and i16 %43, -5
  store i16 %44, i16* %42, align 2
  %45 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %46 = load i16, i16* %45, align 2
  %47 = and i16 %46, -129
  store i16 %47, i16* %45, align 2
  %48 = call zeroext i16 @ntohs(i16 zeroext 1) #10
  %49 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 2
  store i16 %48, i16* %49, align 2
  %50 = call zeroext i16 @ntohs(i16 zeroext 0) #10
  %51 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 5
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 4
  store i16 %50, i16* %52, align 2
  %53 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 3
  store i16 %50, i16* %53, align 2
  %54 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i64 1
  %55 = bitcast %struct.mesg_hdr* %54 to i8*
  %56 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, 4
  br i1 %58, label %59, label %65

; <label>:59:                                     ; preds = %15
  %60 = ptrtoint i8* %55 to i64
  %61 = ptrtoint i8* %5 to i64
  %62 = sub i64 %60, %61
  %63 = getelementptr [23 x i8], [23 x i8]* @.str.3.72, i32 0, i32 0
  %64 = getelementptr [18 x i8], [18 x i8]* @.str.1.68, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %63, i8* %64, i64 %62)
  br label %65

; <label>:65:                                     ; preds = %59, %15
  %66 = sub nsw i32 %6, 12
  %67 = call i32 @dname_copy(i8* %0, i8* %55, i32 %66)
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %100, label %69

; <label>:69:                                     ; preds = %65
  %70 = add nsw i32 12, %67
  %71 = sext i32 %67 to i64
  %72 = getelementptr inbounds i8, i8* %55, i64 %71
  %73 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %74, 4
  br i1 %75, label %76, label %82

; <label>:76:                                     ; preds = %69
  %77 = ptrtoint i8* %72 to i64
  %78 = ptrtoint i8* %5 to i64
  %79 = sub i64 %77, %78
  %80 = getelementptr [30 x i8], [30 x i8]* @.str.4.73, i32 0, i32 0
  %81 = getelementptr [18 x i8], [18 x i8]* @.str.1.68, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %80, i8* %81, i64 %79)
  br label %82

; <label>:82:                                     ; preds = %76, %69
  %83 = sext i32 %70 to i64
  %84 = add i64 %83, 4
  %85 = trunc i64 %84 to i32
  %86 = icmp sgt i32 %85, %6
  br i1 %86, label %100, label %87

; <label>:87:                                     ; preds = %82
  %88 = zext i16 %1 to i32
  %89 = ashr i32 %88, 8
  %90 = trunc i32 %89 to i8
  %91 = getelementptr inbounds i8, i8* %72, i32 1
  store i8 %90, i8* %72, align 1
  %92 = trunc i16 %1 to i8
  %93 = getelementptr inbounds i8, i8* %91, i32 1
  store i8 %92, i8* %91, align 1
  %94 = zext i16 %2 to i32
  %95 = ashr i32 %94, 8
  %96 = trunc i32 %95 to i8
  %97 = getelementptr inbounds i8, i8* %93, i32 1
  store i8 %96, i8* %93, align 1
  %98 = trunc i16 %2 to i8
  %99 = getelementptr inbounds i8, i8* %97, i32 1
  store i8 %98, i8* %97, align 1
  br label %100

; <label>:100:                                    ; preds = %82, %65, %87
  %.0 = phi i32 [ %85, %87 ], [ -1, %65 ], [ -1, %82 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @string_rtype(i16 zeroext) #0 {
  %2 = zext i16 %0 to i32
  switch i32 %2, label %55 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
    i32 4, label %11
    i32 5, label %13
    i32 6, label %15
    i32 7, label %17
    i32 8, label %19
    i32 9, label %21
    i32 10, label %23
    i32 11, label %25
    i32 12, label %27
    i32 13, label %29
    i32 14, label %31
    i32 15, label %33
    i32 16, label %35
    i32 17, label %37
    i32 28, label %39
    i32 33, label %41
    i32 38, label %43
    i32 100, label %45
    i32 250, label %47
    i32 251, label %49
    i32 252, label %51
    i32 255, label %53
  ]

; <label>:3:                                      ; preds = %1
  %4 = getelementptr [7 x i8], [7 x i8]* @.str.31.74, i32 0, i32 0
  br label %59

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [2 x i8], [2 x i8]* @.str.32.75, i32 0, i32 0
  br label %59

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [3 x i8], [3 x i8]* @.str.33.76, i32 0, i32 0
  br label %59

; <label>:9:                                      ; preds = %1
  %10 = getelementptr [3 x i8], [3 x i8]* @.str.34.77, i32 0, i32 0
  br label %59

; <label>:11:                                     ; preds = %1
  %12 = getelementptr [3 x i8], [3 x i8]* @.str.35.78, i32 0, i32 0
  br label %59

; <label>:13:                                     ; preds = %1
  %14 = getelementptr [6 x i8], [6 x i8]* @.str.36.79, i32 0, i32 0
  br label %59

; <label>:15:                                     ; preds = %1
  %16 = getelementptr [4 x i8], [4 x i8]* @.str.37.80, i32 0, i32 0
  br label %59

; <label>:17:                                     ; preds = %1
  %18 = getelementptr [3 x i8], [3 x i8]* @.str.38.81, i32 0, i32 0
  br label %59

; <label>:19:                                     ; preds = %1
  %20 = getelementptr [3 x i8], [3 x i8]* @.str.39.82, i32 0, i32 0
  br label %59

; <label>:21:                                     ; preds = %1
  %22 = getelementptr [3 x i8], [3 x i8]* @.str.40.83, i32 0, i32 0
  br label %59

; <label>:23:                                     ; preds = %1
  %24 = getelementptr [5 x i8], [5 x i8]* @.str.41.84, i32 0, i32 0
  br label %59

; <label>:25:                                     ; preds = %1
  %26 = getelementptr [4 x i8], [4 x i8]* @.str.42.85, i32 0, i32 0
  br label %59

; <label>:27:                                     ; preds = %1
  %28 = getelementptr [4 x i8], [4 x i8]* @.str.43.86, i32 0, i32 0
  br label %59

; <label>:29:                                     ; preds = %1
  %30 = getelementptr [6 x i8], [6 x i8]* @.str.44.87, i32 0, i32 0
  br label %59

; <label>:31:                                     ; preds = %1
  %32 = getelementptr [6 x i8], [6 x i8]* @.str.45.88, i32 0, i32 0
  br label %59

; <label>:33:                                     ; preds = %1
  %34 = getelementptr [3 x i8], [3 x i8]* @.str.46.89, i32 0, i32 0
  br label %59

; <label>:35:                                     ; preds = %1
  %36 = getelementptr [4 x i8], [4 x i8]* @.str.47.90, i32 0, i32 0
  br label %59

; <label>:37:                                     ; preds = %1
  %38 = getelementptr [3 x i8], [3 x i8]* @.str.48.91, i32 0, i32 0
  br label %59

; <label>:39:                                     ; preds = %1
  %40 = getelementptr [5 x i8], [5 x i8]* @.str.49, i32 0, i32 0
  br label %59

; <label>:41:                                     ; preds = %1
  %42 = getelementptr [4 x i8], [4 x i8]* @.str.50, i32 0, i32 0
  br label %59

; <label>:43:                                     ; preds = %1
  %44 = getelementptr [3 x i8], [3 x i8]* @.str.51, i32 0, i32 0
  br label %59

; <label>:45:                                     ; preds = %1
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.52.92, i32 0, i32 0
  br label %59

; <label>:47:                                     ; preds = %1
  %48 = getelementptr [5 x i8], [5 x i8]* @.str.53, i32 0, i32 0
  br label %59

; <label>:49:                                     ; preds = %1
  %50 = getelementptr [5 x i8], [5 x i8]* @.str.54, i32 0, i32 0
  br label %59

; <label>:51:                                     ; preds = %1
  %52 = getelementptr [5 x i8], [5 x i8]* @.str.55, i32 0, i32 0
  br label %59

; <label>:53:                                     ; preds = %1
  %54 = getelementptr [4 x i8], [4 x i8]* @.str.28.93, i32 0, i32 0
  br label %59

; <label>:55:                                     ; preds = %1
  %56 = zext i16 %0 to i32
  %57 = getelementptr [26 x i8], [26 x i8]* @.str.56, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %57, i32 %56)
  %58 = getelementptr [8 x i8], [8 x i8]* @.str.30.94, i32 0, i32 0
  br label %59

; <label>:59:                                     ; preds = %55, %53, %51, %49, %47, %45, %43, %41, %39, %37, %35, %33, %31, %29, %27, %25, %23, %21, %19, %17, %15, %13, %11, %9, %7, %5, %3
  %.0 = phi i8* [ %58, %55 ], [ %54, %53 ], [ %52, %51 ], [ %50, %49 ], [ %48, %47 ], [ %46, %45 ], [ %44, %43 ], [ %42, %41 ], [ %40, %39 ], [ %38, %37 ], [ %36, %35 ], [ %34, %33 ], [ %32, %31 ], [ %30, %29 ], [ %28, %27 ], [ %26, %25 ], [ %24, %23 ], [ %22, %21 ], [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret i8* %.0
}

; Function Attrs: nounwind readnone
declare dso_local zeroext i16 @ntohs(i16 zeroext) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @dname_copy(i8*, i8*, i32) #0 {
  %4 = load i8, i8* %0, align 1
  %5 = icmp ne i8 %4, 0
  br i1 %5, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %12
  %.0110 = phi i8* [ %15, %12 ], [ %0, %.lr.ph.preheader ]
  %.029 = phi i8* [ %17, %12 ], [ %1, %.lr.ph.preheader ]
  %.038 = phi i32 [ %10, %12 ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 5)
  %6 = call i32 @labellen(i8* %.0110)
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %.loopexit.loopexit, label %8

; <label>:8:                                      ; preds = %.lr.ph
  %9 = add nsw i32 %6, 1
  %10 = add nsw i32 %.038, %9
  %11 = icmp sge i32 %10, %2
  br i1 %11, label %.loopexit.loopexit, label %12

; <label>:12:                                     ; preds = %8
  %13 = sext i32 %9 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.029, i8* align 1 %.0110, i64 %13, i1 false), !track !36
  %14 = sext i32 %9 to i64
  %15 = getelementptr inbounds i8, i8* %.0110, i64 %14
  %16 = sext i32 %9 to i64
  %17 = getelementptr inbounds i8, i8* %.029, i64 %16
  %18 = load i8, i8* %15, align 1
  %19 = icmp ne i8 %18, 0
  br i1 %19, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %12
  %.03.lcssa.ph = phi i32 [ %10, %12 ]
  %.02.lcssa.ph = phi i8* [ %17, %12 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  %.03.lcssa = phi i32 [ 0, %3 ], [ %.03.lcssa.ph, %._crit_edge.loopexit ]
  %.02.lcssa = phi i8* [ %1, %3 ], [ %.02.lcssa.ph, %._crit_edge.loopexit ]
  store i8 0, i8* %.02.lcssa, align 1
  %20 = add nsw i32 %.03.lcssa, 1
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph, %8
  %.0.ph = phi i32 [ -1, %.lr.ph ], [ -1, %8 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge
  %.0 = phi i32 [ %20, %._crit_edge ], [ %.0.ph, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @labellen(i8*) #0 {
  %2 = load i8, i8* %0, align 1
  %3 = zext i8 %2 to i32
  %4 = and i32 %3, 192
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %18, label %6

; <label>:6:                                      ; preds = %1
  %7 = and i32 %3, 192
  %8 = icmp ne i32 %7, 64
  %9 = icmp ne i32 %3, 65
  %or.cond = or i1 %8, %9
  br i1 %or.cond, label %18, label %10

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds i8, i8* %0, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %13, 0
  %spec.select = select i1 %14, i32 256, i32 %13
  %15 = add i32 %spec.select, 7
  %16 = udiv i32 %15, 8
  %17 = add i32 %16, 1
  br label %18

; <label>:18:                                     ; preds = %6, %1, %10
  %.0 = phi i32 [ %17, %10 ], [ %3, %1 ], [ -1, %6 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @mesg_skip_dname(i8*, i8*) #6 {
  %3 = icmp uge i8* %0, %1
  br i1 %3, label %.loopexit, label %4

; <label>:4:                                      ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = icmp ne i8 %5, 0
  br i1 %6, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %4
  br label %.lr.ph

; <label>:7:                                      ; preds = %22
  %.01 = phi i8* [ %25, %22 ]
  %8 = load i8, i8* %.01, align 1
  %9 = icmp ne i8 %8, 0
  br i1 %9, label %.lr.ph, label %._crit_edge.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %7
  %.016 = phi i8* [ %.01, %7 ], [ %0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 6)
  %10 = load i8, i8* %.016, align 1
  %11 = zext i8 %10 to i32
  %12 = and i32 %11, 192
  %13 = icmp eq i32 %12, 192
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %.lr.ph
  %.01.lcssa2 = phi i8* [ %.016, %.lr.ph ]
  %15 = getelementptr inbounds i8, i8* %.01.lcssa2, i64 2
  br label %.loopexit

; <label>:16:                                     ; preds = %.lr.ph
  %17 = getelementptr inbounds i8, i8* %.016, i64 2
  %18 = icmp ugt i8* %17, %1
  br i1 %18, label %.loopexit.loopexit, label %19

; <label>:19:                                     ; preds = %16
  %20 = call i32 @labellen(i8* %.016)
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %.loopexit.loopexit, label %22

; <label>:22:                                     ; preds = %19
  %23 = add nsw i32 %20, 1
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %.016, i64 %24
  %26 = icmp uge i8* %25, %1
  br i1 %26, label %.loopexit.loopexit, label %7

._crit_edge.loopexit:                             ; preds = %7
  %.01.lcssa.ph = phi i8* [ %.01, %7 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %4
  %.01.lcssa = phi i8* [ %0, %4 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %27 = getelementptr inbounds i8, i8* %.01.lcssa, i32 1
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %16, %19, %22
  %.0.ph = phi i8* [ null, %16 ], [ null, %19 ], [ null, %22 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %2, %._crit_edge, %14
  %.0 = phi i8* [ %15, %14 ], [ %27, %._crit_edge ], [ null, %2 ], [ %.0.ph, %.loopexit.loopexit ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mesg_dname_cmp(i8*, i8*, i8*) #0 {
  %4 = call i8* @dname_redirect(i8* %1, i8* %0)
  call void @unroll_loop(i32 7)
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %.lr.ph.preheader, label %.critedge

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %30
  %.012 = phi i8* [ %33, %30 ], [ %2, %.lr.ph.preheader ]
  %.021 = phi i8* [ %37, %30 ], [ %4, %.lr.ph.preheader ]
  %8 = load i8, i8* %.012, align 1
  %9 = zext i8 %8 to i32
  %10 = load i8, i8* %.021, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %.critedge.loopexit

; <label>:13:                                     ; preds = %.lr.ph
  %14 = call i32 @labellen(i8* %.021)
  %15 = call i32 @labellen(i8* %.012)
  %16 = icmp ne i32 %14, %15
  br i1 %16, label %.loopexit.loopexit, label %17

; <label>:17:                                     ; preds = %13
  %18 = load i8, i8* %.012, align 1
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %19, 65
  %21 = getelementptr inbounds i8, i8* %.021, i64 1
  %22 = getelementptr inbounds i8, i8* %.012, i64 1
  %23 = sext i32 %14 to i64
  br i1 %20, label %24, label %27

; <label>:24:                                     ; preds = %17
  %25 = call i32 @memcmp(i8* %21, i8* %22, i64 %23) #8
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %.loopexit.loopexit, label %30

; <label>:27:                                     ; preds = %17
  %28 = call i32 @strncasecmp(i8* %21, i8* %22, i64 %23) #8
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %.loopexit.loopexit, label %30

; <label>:30:                                     ; preds = %27, %24
  %31 = add nsw i32 %14, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %.012, i64 %32
  %34 = add nsw i32 %14, 1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %.021, i64 %35
  %37 = call i8* @dname_redirect(i8* %36, i8* %0)
  call void @unroll_loop(i32 7)
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %.lr.ph, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %30, %.lr.ph
  %.02.lcssa.ph = phi i8* [ %.021, %.lr.ph ], [ %37, %30 ]
  %.01.lcssa.ph = phi i8* [ %.012, %.lr.ph ], [ %33, %30 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %3
  %.02.lcssa = phi i8* [ %4, %3 ], [ %.02.lcssa.ph, %.critedge.loopexit ]
  %.01.lcssa = phi i8* [ %2, %3 ], [ %.01.lcssa.ph, %.critedge.loopexit ]
  %41 = load i8, i8* %.01.lcssa, align 1
  %42 = zext i8 %41 to i32
  %43 = load i8, i8* %.02.lcssa, align 1
  %44 = zext i8 %43 to i32
  %45 = icmp ne i32 %42, %44
  %. = select i1 %45, i32 -1, i32 0
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %13, %24, %27
  %.0.ph = phi i32 [ -1, %13 ], [ -1, %24 ], [ -1, %27 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.critedge
  %.0 = phi i32 [ %., %.critedge ], [ %.0.ph, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @dname_redirect(i8*, i8*) #6 {
  %3 = icmp ne i8* %1, null
  br i1 %3, label %4, label %27

; <label>:4:                                      ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = zext i8 %5 to i32
  %7 = and i32 %6, 192
  %8 = icmp eq i32 %7, 192
  br i1 %8, label %9, label %27

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i32 1
  %11 = load i8, i8* %0, align 1
  %12 = zext i8 %11 to i32
  %13 = shl i32 %12, 8
  %14 = trunc i32 %13 to i16
  %15 = getelementptr inbounds i8, i8* %10, i32 1
  %16 = load i8, i8* %10, align 1
  %17 = zext i8 %16 to i32
  %18 = zext i16 %14 to i32
  %19 = or i32 %18, %17
  %20 = trunc i32 %19 to i16
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, -49153
  %23 = trunc i32 %22 to i16
  %24 = zext i16 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  br label %27

; <label>:27:                                     ; preds = %9, %4, %2
  %.0 = phi i8* [ %26, %9 ], [ %0, %4 ], [ %0, %2 ]
  ret i8* %.0
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @strncasecmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mesg_write_rrset_list(%struct.generic_list*, i8*, i8*, i16*, i32, i8**, i16*) #0 {
  %8 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %14

; <label>:11:                                     ; preds = %7
  %12 = getelementptr [11 x i8], [11 x i8]* @.str.6.100, i32 0, i32 0
  %13 = getelementptr [24 x i8], [24 x i8]* @.str.5.99, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %12, i8* %13)
  br label %14

; <label>:14:                                     ; preds = %11, %7
  %15 = icmp ne %struct.generic_list* %0, null
  br i1 %15, label %16, label %202

; <label>:16:                                     ; preds = %14
  %17 = load i8*, i8** %5, align 8
  %18 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %19 = load %struct.generic_list*, %struct.generic_list** %18, align 8
  %20 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %19, i32 0, i32 2
  %21 = load i8*, i8** %20, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %.lr.ph7.preheader, label %._crit_edge8

.lr.ph7.preheader:                                ; preds = %16
  br label %.lr.ph7

.lr.ph7:                                          ; preds = %.lr.ph7.preheader, %._crit_edge
  %.015 = phi %struct.generic_list* [ %181, %._crit_edge ], [ %19, %.lr.ph7.preheader ]
  call void @unroll_loop(i32 8)
  %23 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %24 = icmp sgt i32 %23, 4
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %.lr.ph7
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.101, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.99, i64 0, i64 0))
  br label %26

; <label>:26:                                     ; preds = %25, %.lr.ph7
  %27 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.015, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to %struct.rr_set*
  %30 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 4
  %31 = bitcast %union.u_data* %30 to %struct.data_data**
  %32 = load %struct.data_data*, %struct.data_data** %31, align 8
  %33 = getelementptr inbounds %struct.data_data, %struct.data_data* %32, i32 0, i32 0
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = icmp slt i32 0, %35
  br i1 %36, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %26
  %37 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 2
  %38 = bitcast %union.u_key* %37 to %struct.key_info**
  %39 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 4
  %40 = bitcast %union.u_data* %39 to i8**
  %41 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 4
  %42 = bitcast %union.u_data* %41 to i8**
  %43 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 2
  %44 = bitcast %union.u_key* %43 to %struct.key_info**
  %45 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 2
  %46 = bitcast %union.u_key* %45 to %struct.key_info**
  %47 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 2
  %48 = bitcast %union.u_key* %47 to %struct.key_info**
  %49 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 2
  %50 = bitcast %union.u_key* %49 to %struct.key_info**
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %173
  %indvars.iv = phi i64 [ %indvars.iv.next, %173 ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %51 = load i8*, i8** %5, align 8
  %52 = load %struct.key_info*, %struct.key_info** %38, align 8
  %53 = bitcast %struct.key_info* %52 to i8*
  %54 = getelementptr inbounds i8, i8* %53, i64 6
  %55 = load i8*, i8** %5, align 8
  %56 = call i32 @write_dname(i8* %1, i8* %2, i16* %3, i32 %4, i8* %54, i8* %55)
  %57 = icmp slt i32 %56, 0
  br i1 %57, label %58, label %64

; <label>:58:                                     ; preds = %.lr.ph
  %.lcssa = phi i8* [ %51, %.lr.ph ]
  %59 = getelementptr [23 x i8], [23 x i8]* @.str.8.102, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %59)
  store i8* %.lcssa, i8** %5, align 8
  %60 = ptrtoint i8* %.lcssa to i64
  %61 = ptrtoint i8* %17 to i64
  %62 = sub i64 %60, %61
  %63 = trunc i64 %62 to i32
  br label %202

; <label>:64:                                     ; preds = %.lr.ph
  %65 = load i8*, i8** %5, align 8
  %66 = sext i32 %56 to i64
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  store i8* %67, i8** %5, align 8
  %68 = load i8*, i8** %40, align 8
  %69 = load i8*, i8** %42, align 8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %scevgep = getelementptr i8, i8* %69, i64 2
  %70 = shl i64 %indvars.iv, 1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %70
  %scevgep12 = bitcast i8* %scevgep1 to i16*
  %71 = load i16, i16* %scevgep12, align 2
  %72 = zext i16 %71 to i32
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %68, i64 %73
  %75 = bitcast i8* %74 to %struct.rr*
  %76 = load i8*, i8** %5, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 6
  %78 = getelementptr inbounds i8, i8* %77, i64 4
  %79 = getelementptr inbounds %struct.rr, %struct.rr* %75, i32 0, i32 1
  %80 = load i16, i16* %79, align 4
  %81 = zext i16 %80 to i32
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %78, i64 %82
  %84 = icmp ugt i8* %83, %2
  br i1 %84, label %85, label %91

; <label>:85:                                     ; preds = %64
  %.lcssa3 = phi i8* [ %51, %64 ]
  %86 = getelementptr [19 x i8], [19 x i8]* @.str.9.103, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %86)
  store i8* %.lcssa3, i8** %5, align 8
  %87 = ptrtoint i8* %.lcssa3 to i64
  %88 = ptrtoint i8* %17 to i64
  %89 = sub i64 %87, %88
  %90 = trunc i64 %89 to i32
  br label %202

; <label>:91:                                     ; preds = %64
  %92 = load %struct.key_info*, %struct.key_info** %44, align 8
  %93 = getelementptr inbounds %struct.key_info, %struct.key_info* %92, i32 0, i32 0
  %94 = load i16, i16* %93, align 2
  %95 = zext i16 %94 to i32
  %96 = ashr i32 %95, 8
  %97 = trunc i32 %96 to i8
  %98 = load i8*, i8** %5, align 8
  %99 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %99, i8** %5, align 8
  store i8 %97, i8* %98, align 1
  %100 = load %struct.key_info*, %struct.key_info** %46, align 8
  %101 = getelementptr inbounds %struct.key_info, %struct.key_info* %100, i32 0, i32 0
  %102 = load i16, i16* %101, align 2
  %103 = trunc i16 %102 to i8
  %104 = load i8*, i8** %5, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %5, align 8
  store i8 %103, i8* %104, align 1
  %106 = load %struct.key_info*, %struct.key_info** %48, align 8
  %107 = getelementptr inbounds %struct.key_info, %struct.key_info* %106, i32 0, i32 1
  %108 = load i16, i16* %107, align 2
  %109 = zext i16 %108 to i32
  %110 = ashr i32 %109, 8
  %111 = trunc i32 %110 to i8
  %112 = load i8*, i8** %5, align 8
  %113 = getelementptr inbounds i8, i8* %112, i32 1
  store i8* %113, i8** %5, align 8
  store i8 %111, i8* %112, align 1
  %114 = load %struct.key_info*, %struct.key_info** %50, align 8
  %115 = getelementptr inbounds %struct.key_info, %struct.key_info* %114, i32 0, i32 1
  %116 = load i16, i16* %115, align 2
  %117 = trunc i16 %116 to i8
  %118 = load i8*, i8** %5, align 8
  %119 = getelementptr inbounds i8, i8* %118, i32 1
  store i8* %119, i8** %5, align 8
  store i8 %117, i8* %118, align 1
  %120 = getelementptr inbounds %struct.rr, %struct.rr* %75, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = trunc i32 %121 to i8
  %123 = load i8*, i8** %5, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 3
  store i8 %122, i8* %124, align 1
  %125 = lshr i32 %121, 8
  %126 = trunc i32 %125 to i8
  %127 = load i8*, i8** %5, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 2
  store i8 %126, i8* %128, align 1
  %129 = lshr i32 %125, 8
  %130 = trunc i32 %129 to i8
  %131 = load i8*, i8** %5, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 1
  store i8 %130, i8* %132, align 1
  %133 = lshr i32 %129, 8
  %134 = trunc i32 %133 to i8
  %135 = load i8*, i8** %5, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 0
  store i8 %134, i8* %136, align 1
  %137 = load i8*, i8** %5, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 4
  store i8* %138, i8** %5, align 8
  %139 = getelementptr inbounds %struct.rr, %struct.rr* %75, i32 0, i32 1
  %140 = load i16, i16* %139, align 4
  %141 = zext i16 %140 to i32
  %142 = ashr i32 %141, 8
  %143 = trunc i32 %142 to i8
  %144 = load i8*, i8** %5, align 8
  %145 = getelementptr inbounds i8, i8* %144, i32 1
  store i8* %145, i8** %5, align 8
  store i8 %143, i8* %144, align 1
  %146 = getelementptr inbounds %struct.rr, %struct.rr* %75, i32 0, i32 1
  %147 = load i16, i16* %146, align 4
  %148 = trunc i16 %147 to i8
  %149 = load i8*, i8** %5, align 8
  %150 = getelementptr inbounds i8, i8* %149, i32 1
  store i8* %150, i8** %5, align 8
  store i8 %148, i8* %149, align 1
  %151 = load i8*, i8** %5, align 8
  %152 = bitcast %struct.rr* %75 to i8*
  %153 = getelementptr inbounds i8, i8* %152, i64 6
  %154 = getelementptr inbounds %struct.rr, %struct.rr* %75, i32 0, i32 1
  %155 = load i16, i16* %154, align 4
  %156 = zext i16 %155 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %151, i8* align 1 %153, i64 %156, i1 false), !track !37
  %157 = getelementptr inbounds %struct.rr, %struct.rr* %75, i32 0, i32 1
  %158 = load i16, i16* %157, align 4
  %159 = zext i16 %158 to i32
  %160 = load i8*, i8** %5, align 8
  %161 = sext i32 %159 to i64
  %162 = getelementptr inbounds i8, i8* %160, i64 %161
  store i8* %162, i8** %5, align 8
  %163 = load i16, i16* %6, align 2
  %164 = call zeroext i16 @ntohs(i16 zeroext %163) #10
  %165 = zext i16 %164 to i32
  %166 = add nsw i32 %165, 1
  %167 = trunc i32 %166 to i16
  %168 = call zeroext i16 @htons(i16 zeroext %167) #10
  store i16 %168, i16* %6, align 2
  %169 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %170 = icmp sgt i32 %169, 4
  br i1 %170, label %171, label %173

; <label>:171:                                    ; preds = %91
  %172 = zext i16 %167 to i64
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10.104, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.99, i64 0, i64 0), i64 %172)
  br label %173

; <label>:173:                                    ; preds = %91, %171
  %174 = load %struct.data_data*, %struct.data_data** %31, align 8
  %175 = getelementptr inbounds %struct.data_data, %struct.data_data* %174, i32 0, i32 0
  %176 = load i16, i16* %175, align 2
  %177 = zext i16 %176 to i32
  %178 = zext i32 %177 to i64
  %179 = icmp ult i64 %indvars.iv.next, %178
  br i1 %179, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %173
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %26
  %180 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.015, i32 0, i32 0
  %181 = load %struct.generic_list*, %struct.generic_list** %180, align 8
  %182 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %181, i32 0, i32 2
  %183 = load i8*, i8** %182, align 8
  %184 = icmp ne i8* %183, null
  br i1 %184, label %.lr.ph7, label %._crit_edge8.loopexit

._crit_edge8.loopexit:                            ; preds = %._crit_edge
  br label %._crit_edge8

._crit_edge8:                                     ; preds = %._crit_edge8.loopexit, %16
  %185 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %186 = load i32, i32* %185, align 4
  %187 = icmp sgt i32 %186, 4
  br i1 %187, label %188, label %196

; <label>:188:                                    ; preds = %._crit_edge8
  %189 = load i8*, i8** %5, align 8
  %190 = ptrtoint i8* %189 to i64
  %191 = ptrtoint i8* %17 to i64
  %192 = sub i64 %190, %191
  %193 = trunc i64 %192 to i32
  %194 = getelementptr [14 x i8], [14 x i8]* @.str.11.105, i32 0, i32 0
  %195 = getelementptr [24 x i8], [24 x i8]* @.str.5.99, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %194, i8* %195, i32 %193)
  br label %196

; <label>:196:                                    ; preds = %188, %._crit_edge8
  %197 = load i8*, i8** %5, align 8
  %198 = ptrtoint i8* %197 to i64
  %199 = ptrtoint i8* %17 to i64
  %200 = sub i64 %198, %199
  %201 = trunc i64 %200 to i32
  br label %202

; <label>:202:                                    ; preds = %14, %196, %85, %58
  %.0 = phi i32 [ %63, %58 ], [ %90, %85 ], [ %201, %196 ], [ 0, %14 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @write_dname(i8*, i8*, i16*, i32, i8*, i8*) #0 {
  %7 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 4
  br i1 %9, label %10, label %13

; <label>:10:                                     ; preds = %6
  %11 = getelementptr [10 x i8], [10 x i8]* @.str.21.106, i32 0, i32 0
  %12 = getelementptr [14 x i8], [14 x i8]* @.str.57, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %11, i8* %12)
  br label %13

; <label>:13:                                     ; preds = %10, %6
  %14 = sext i32 %3 to i64
  call void @unroll_loop(i32 10)
  %15 = load i8, i8* %4, align 1
  %16 = zext i8 %15 to i32
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %.preheader16.preheader, label %.critedge

.preheader16.preheader:                           ; preds = %13
  %18 = icmp slt i64 0, %14
  br label %.preheader16

.preheader16:                                     ; preds = %.preheader16.preheader, %._crit_edge55
  %.0863 = phi i8* [ %.19.lcssa, %._crit_edge55 ], [ null, %.preheader16.preheader ]
  %.01062 = phi i8* [ %.111.lcssa, %._crit_edge55 ], [ null, %.preheader16.preheader ]
  %.01461 = phi i32 [ %.115.lcssa, %._crit_edge55 ], [ 0, %.preheader16.preheader ]
  %.01859 = phi i8* [ %104, %._crit_edge55 ], [ %4, %.preheader16.preheader ]
  call void @unroll_loop(i32 11)
  %19 = load i16, i16* %2, align 2
  %20 = zext i16 %19 to i32
  %21 = icmp ne i32 %20, 0
  %spec.select49 = select i1 %21, i1 %18, i1 false
  br i1 %spec.select49, label %.lr.ph54.preheader, label %._crit_edge55

.lr.ph54.preheader:                               ; preds = %.preheader16
  br label %.lr.ph54

.lr.ph54:                                         ; preds = %.lr.ph54.preheader, %._crit_edge59
  %.1953 = phi i8* [ %.2.lcssa, %._crit_edge59 ], [ %.0863, %.lr.ph54.preheader ]
  %.11152 = phi i8* [ %.212.lcssa, %._crit_edge59 ], [ %.01062, %.lr.ph54.preheader ]
  %.11551 = phi i32 [ %.216.lcssa, %._crit_edge59 ], [ %.01461, %.lr.ph54.preheader ]
  %indvars.iv6250 = phi i64 [ %indvars.iv.next63, %._crit_edge59 ], [ 0, %.lr.ph54.preheader ]
  %22 = getelementptr inbounds i16, i16* %2, i64 %indvars.iv6250
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %0, i64 %25
  %27 = call i8* @dname_redirect(i8* %26, i8* %0)
  %28 = load i8, i8* %27, align 1
  %29 = icmp ne i8 %28, 0
  br i1 %29, label %.lr.ph58.preheader, label %._crit_edge59

.lr.ph58.preheader:                               ; preds = %.lr.ph54
  br label %.lr.ph58

.lr.ph58:                                         ; preds = %.lr.ph58.preheader, %88
  %.256 = phi i8* [ %.3, %88 ], [ %.1953, %.lr.ph58.preheader ]
  %.21255 = phi i8* [ %.313, %88 ], [ %.11152, %.lr.ph58.preheader ]
  %.21654 = phi i32 [ %.317, %88 ], [ %.11551, %.lr.ph58.preheader ]
  %.02053 = phi i8* [ %93, %88 ], [ %27, %.lr.ph58.preheader ]
  call void @unroll_loop(i32 12)
  %30 = icmp ult i8* %.02053, %0
  %31 = icmp ult i8* %1, %.02053
  %or.cond = or i1 %30, %31
  br i1 %or.cond, label %.loopexit11.loopexit3, label %.preheader

.preheader:                                       ; preds = %.lr.ph58
  call void @unroll_loop(i32 13)
  %32 = load i8, i8* %.02053, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %.lr.ph29.preheader, label %.loopexit

.lr.ph29.preheader:                               ; preds = %.preheader
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %.lr.ph29.preheader, %75
  %.0228 = phi i32 [ %76, %75 ], [ 0, %.lr.ph29.preheader ]
  %.0327 = phi i8* [ %72, %75 ], [ %.02053, %.lr.ph29.preheader ]
  %.0426 = phi i8* [ %71, %75 ], [ %.01859, %.lr.ph29.preheader ]
  %35 = load i8, i8* %.0327, align 1
  %36 = zext i8 %35 to i32
  %37 = load i8, i8* %.0426, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %.loopexit.loopexitsplit

; <label>:40:                                     ; preds = %.lr.ph29
  %41 = call i32 @labellen(i8* %.0327)
  %42 = call i32 @labellen(i8* %.0426)
  %43 = icmp ne i32 %41, %42
  br i1 %43, label %..loopexit.loopexit_crit_edge, label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8, i8* %.0327, align 1
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 65
  br i1 %47, label %48, label %54

; <label>:48:                                     ; preds = %44
  %49 = getelementptr inbounds i8, i8* %.0327, i64 1
  %50 = getelementptr inbounds i8, i8* %.0426, i64 1
  %51 = sext i32 %41 to i64
  %52 = call i32 @memcmp(i8* %49, i8* %50, i64 %51) #8
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %.loopexit.loopexitsplit, label %54

; <label>:54:                                     ; preds = %48, %44
  %55 = load i8, i8* %.0327, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp ne i32 %56, 65
  br i1 %57, label %58, label %65

; <label>:58:                                     ; preds = %54
  %59 = getelementptr inbounds i8, i8* %.0327, i64 1
  %60 = getelementptr inbounds i8, i8* %.0426, i64 1
  %61 = load i8, i8* %.0327, align 1
  %62 = zext i8 %61 to i64
  %63 = call i32 @strncasecmp(i8* %59, i8* %60, i64 %62) #8
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %.loopexit.loopexitsplit, label %65

; <label>:65:                                     ; preds = %58, %54
  %66 = add nsw i32 %41, 1
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %.0327, i64 %67
  %69 = add nsw i32 %41, 1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %.0426, i64 %70
  %72 = call i8* @dname_redirect(i8* %68, i8* %0)
  %73 = icmp ult i8* %72, %0
  %74 = icmp ult i8* %1, %72
  %or.cond1 = or i1 %73, %74
  br i1 %or.cond1, label %.loopexit11.loopexit1, label %75

; <label>:75:                                     ; preds = %65
  %76 = add nuw nsw i32 %.0228, 1
  call void @unroll_loop(i32 13)
  %77 = load i8, i8* %72, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %.lr.ph29, label %.loopexit.loopexitsplit

.loopexit.loopexitsplit:                          ; preds = %48, %58, %75, %.lr.ph29
  %.04.lcssa.ph.ph = phi i8* [ %.0426, %.lr.ph29 ], [ %71, %75 ], [ %.0426, %58 ], [ %.0426, %48 ]
  %.03.lcssa.ph.ph = phi i8* [ %.0327, %.lr.ph29 ], [ %72, %75 ], [ %.0327, %58 ], [ %.0327, %48 ]
  %.02.lcssa.ph.ph = phi i32 [ %.0228, %.lr.ph29 ], [ %76, %75 ], [ %.0228, %58 ], [ %.0228, %48 ]
  br label %.loopexit.loopexit

..loopexit.loopexit_crit_edge:                    ; preds = %40
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.loopexit.loopexitsplit, %..loopexit.loopexit_crit_edge
  %.04.lcssa.ph = phi i8* [ %.0426, %..loopexit.loopexit_crit_edge ], [ %.04.lcssa.ph.ph, %.loopexit.loopexitsplit ]
  %.03.lcssa.ph = phi i8* [ %.0327, %..loopexit.loopexit_crit_edge ], [ %.03.lcssa.ph.ph, %.loopexit.loopexitsplit ]
  %.02.lcssa.ph = phi i32 [ %.0228, %..loopexit.loopexit_crit_edge ], [ %.02.lcssa.ph.ph, %.loopexit.loopexitsplit ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader
  %.04.lcssa = phi i8* [ %.01859, %.preheader ], [ %.04.lcssa.ph, %.loopexit.loopexit ]
  %.03.lcssa = phi i8* [ %.02053, %.preheader ], [ %.03.lcssa.ph, %.loopexit.loopexit ]
  %.02.lcssa = phi i32 [ 0, %.preheader ], [ %.02.lcssa.ph, %.loopexit.loopexit ]
  %80 = load i8, i8* %.03.lcssa, align 1
  %81 = zext i8 %80 to i32
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %88

; <label>:83:                                     ; preds = %.loopexit
  %84 = load i8, i8* %.04.lcssa, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp eq i32 %85, 0
  %87 = icmp sgt i32 %.02.lcssa, %.21654
  %or.cond2 = and i1 %86, %87
  %spec.select6 = select i1 %or.cond2, i32 %.02.lcssa, i32 %.21654
  %spec.select7 = select i1 %or.cond2, i8* %.02053, i8* %.21255
  %spec.select8 = select i1 %or.cond2, i8* %.01859, i8* %.256
  br label %88

; <label>:88:                                     ; preds = %83, %.loopexit
  %.317 = phi i32 [ %.21654, %.loopexit ], [ %spec.select6, %83 ]
  %.313 = phi i8* [ %.21255, %.loopexit ], [ %spec.select7, %83 ]
  %.3 = phi i8* [ %.256, %.loopexit ], [ %spec.select8, %83 ]
  %89 = call i32 @labellen(i8* %.02053)
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %.02053, i64 %90
  %92 = getelementptr inbounds i8, i8* %91, i64 1
  %93 = call i8* @dname_redirect(i8* %92, i8* %0)
  %94 = load i8, i8* %93, align 1
  %95 = icmp ne i8 %94, 0
  br i1 %95, label %.lr.ph58, label %._crit_edge59.loopexit

._crit_edge59.loopexit:                           ; preds = %88
  %.216.lcssa.ph = phi i32 [ %.317, %88 ]
  %.212.lcssa.ph = phi i8* [ %.313, %88 ]
  %.2.lcssa.ph = phi i8* [ %.3, %88 ]
  br label %._crit_edge59

._crit_edge59:                                    ; preds = %._crit_edge59.loopexit, %.lr.ph54
  %.216.lcssa = phi i32 [ %.11551, %.lr.ph54 ], [ %.216.lcssa.ph, %._crit_edge59.loopexit ]
  %.212.lcssa = phi i8* [ %.11152, %.lr.ph54 ], [ %.212.lcssa.ph, %._crit_edge59.loopexit ]
  %.2.lcssa = phi i8* [ %.1953, %.lr.ph54 ], [ %.2.lcssa.ph, %._crit_edge59.loopexit ]
  %indvars.iv.next63 = add nuw i64 %indvars.iv6250, 1
  call void @unroll_loop(i32 11)
  %96 = getelementptr inbounds i16, i16* %2, i64 %indvars.iv.next63
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = icmp ne i32 %98, 0
  %100 = icmp slt i64 %indvars.iv.next63, %14
  %spec.select = select i1 %99, i1 %100, i1 false
  br i1 %spec.select, label %.lr.ph54, label %._crit_edge55.loopexit

._crit_edge55.loopexit:                           ; preds = %._crit_edge59
  %.115.lcssa.ph = phi i32 [ %.216.lcssa, %._crit_edge59 ]
  %.111.lcssa.ph = phi i8* [ %.212.lcssa, %._crit_edge59 ]
  %.19.lcssa.ph = phi i8* [ %.2.lcssa, %._crit_edge59 ]
  br label %._crit_edge55

._crit_edge55:                                    ; preds = %._crit_edge55.loopexit, %.preheader16
  %.01860 = phi i8* [ %.01859, %.preheader16 ], [ %.01859, %._crit_edge55.loopexit ]
  %.115.lcssa = phi i32 [ %.01461, %.preheader16 ], [ %.115.lcssa.ph, %._crit_edge55.loopexit ]
  %.111.lcssa = phi i8* [ %.01062, %.preheader16 ], [ %.111.lcssa.ph, %._crit_edge55.loopexit ]
  %.19.lcssa = phi i8* [ %.0863, %.preheader16 ], [ %.19.lcssa.ph, %._crit_edge55.loopexit ]
  %101 = call i32 @labellen(i8* %.01859)
  %102 = add nsw i32 %101, 1
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %.01860, i64 %103
  call void @unroll_loop(i32 10)
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = icmp ne i32 %106, 0
  %108 = icmp ne i32 %.115.lcssa, 0
  %109 = xor i1 %108, true
  %or.cond5 = and i1 %107, %109
  br i1 %or.cond5, label %.preheader16, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %._crit_edge55
  %.010.lcssa.ph = phi i8* [ %.111.lcssa, %._crit_edge55 ]
  %.08.lcssa.ph = phi i8* [ %.19.lcssa, %._crit_edge55 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %13
  %.010.lcssa = phi i8* [ null, %13 ], [ %.010.lcssa.ph, %.critedge.loopexit ]
  %.08.lcssa = phi i8* [ null, %13 ], [ %.08.lcssa.ph, %.critedge.loopexit ]
  %110 = icmp ne i8* %.08.lcssa, %4
  br i1 %110, label %111, label %139

; <label>:111:                                    ; preds = %.critedge
  %112 = load i16, i16* %2, align 2
  %113 = zext i16 %112 to i32
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %.lr.ph.preheader, label %119

.lr.ph.preheader:                                 ; preds = %111
  %scevgep = getelementptr i16, i16* %2, i64 1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %scevgep5 = getelementptr i16, i16* %scevgep, i64 %indvars.iv
  %115 = load i16, i16* %scevgep5, align 2
  %116 = zext i16 %115 to i32
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph
  %split.wide = phi i64 [ %indvars.iv.next, %.lr.ph ]
  %118 = trunc i64 %split.wide to i32
  br label %119

; <label>:119:                                    ; preds = %._crit_edge, %111
  %.01.lcssa = phi i32 [ %118, %._crit_edge ], [ 0, %111 ]
  %120 = add nsw i32 %.01.lcssa, 1
  %121 = icmp slt i32 %120, %3
  br i1 %121, label %122, label %139

; <label>:122:                                    ; preds = %119
  %123 = ptrtoint i8* %.010.lcssa to i64
  %124 = ptrtoint i8* %0 to i64
  %125 = sub i64 %123, %124
  %126 = trunc i64 %125 to i16
  %127 = zext i16 %126 to i32
  %128 = icmp slt i32 %127, 12287
  br i1 %128, label %129, label %139

; <label>:129:                                    ; preds = %122
  %130 = ptrtoint i8* %5 to i64
  %131 = ptrtoint i8* %0 to i64
  %132 = sub i64 %130, %131
  %133 = trunc i64 %132 to i16
  %134 = sext i32 %.01.lcssa to i64
  %135 = getelementptr inbounds i16, i16* %2, i64 %134
  store i16 %133, i16* %135, align 2
  %136 = add nsw i32 %.01.lcssa, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i16, i16* %2, i64 %137
  store i16 0, i16* %138, align 2
  br label %139

; <label>:139:                                    ; preds = %119, %129, %122, %.critedge
  call void @unroll_loop(i32 14)
  %140 = load i8, i8* %4, align 1
  %141 = zext i8 %140 to i32
  %142 = icmp ne i32 %141, 0
  %143 = icmp ne i8* %4, %.08.lcssa
  %spec.select317 = select i1 %142, i1 %143, i1 false
  br i1 %spec.select317, label %.lr.ph22.preheader, label %._crit_edge23

.lr.ph22.preheader:                               ; preds = %139
  br label %.lr.ph22

.lr.ph22:                                         ; preds = %.lr.ph22.preheader, %149
  %.0620 = phi i8* [ %155, %149 ], [ %5, %.lr.ph22.preheader ]
  %.0719 = phi i32 [ %151, %149 ], [ 0, %.lr.ph22.preheader ]
  %.11918 = phi i8* [ %153, %149 ], [ %4, %.lr.ph22.preheader ]
  %144 = call i32 @labellen(i8* %.11918)
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %.0620, i64 %146
  %148 = icmp ugt i8* %147, %1
  br i1 %148, label %.loopexit11.loopexit, label %149

; <label>:149:                                    ; preds = %.lr.ph22
  %150 = sext i32 %145 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.0620, i8* align 1 %.11918, i64 %150, i1 false), !track !38
  %151 = add nsw i32 %.0719, %145
  %152 = sext i32 %145 to i64
  %153 = getelementptr inbounds i8, i8* %.11918, i64 %152
  %154 = sext i32 %145 to i64
  %155 = getelementptr inbounds i8, i8* %.0620, i64 %154
  call void @unroll_loop(i32 14)
  %156 = load i8, i8* %153, align 1
  %157 = zext i8 %156 to i32
  %158 = icmp ne i32 %157, 0
  %159 = icmp ne i8* %153, %.08.lcssa
  %spec.select3 = select i1 %158, i1 %159, i1 false
  br i1 %spec.select3, label %.lr.ph22, label %._crit_edge23.loopexit

._crit_edge23.loopexit:                           ; preds = %149
  %.119.lcssa.ph = phi i8* [ %153, %149 ]
  %.07.lcssa.ph = phi i32 [ %151, %149 ]
  %.06.lcssa.ph = phi i8* [ %155, %149 ]
  br label %._crit_edge23

._crit_edge23:                                    ; preds = %._crit_edge23.loopexit, %139
  %.119.lcssa = phi i8* [ %4, %139 ], [ %.119.lcssa.ph, %._crit_edge23.loopexit ]
  %.07.lcssa = phi i32 [ 0, %139 ], [ %.07.lcssa.ph, %._crit_edge23.loopexit ]
  %.06.lcssa = phi i8* [ %5, %139 ], [ %.06.lcssa.ph, %._crit_edge23.loopexit ]
  %160 = icmp eq i8* %.119.lcssa, %.08.lcssa
  br i1 %160, label %161, label %181

; <label>:161:                                    ; preds = %._crit_edge23
  %162 = getelementptr inbounds i8, i8* %.06.lcssa, i64 2
  %163 = icmp ugt i8* %162, %1
  br i1 %163, label %.loopexit11, label %164

; <label>:164:                                    ; preds = %161
  %165 = ptrtoint i8* %.010.lcssa to i64
  %166 = ptrtoint i8* %0 to i64
  %167 = sub i64 %165, %166
  %168 = trunc i64 %167 to i16
  %169 = zext i16 %168 to i32
  %170 = or i32 %169, 49152
  %171 = trunc i32 %170 to i16
  %172 = zext i16 %171 to i32
  %173 = ashr i32 %172, 8
  %174 = trunc i32 %173 to i8
  %175 = getelementptr inbounds i8, i8* %.06.lcssa, i32 1
  store i8 %174, i8* %.06.lcssa, align 1
  %176 = trunc i16 %171 to i8
  %177 = getelementptr inbounds i8, i8* %175, i32 1
  store i8 %176, i8* %175, align 1
  %178 = sext i32 %.07.lcssa to i64
  %179 = add i64 %178, 2
  %180 = trunc i64 %179 to i32
  br label %183

; <label>:181:                                    ; preds = %._crit_edge23
  store i8 0, i8* %.06.lcssa, align 1
  %182 = add nsw i32 %.07.lcssa, 1
  br label %183

; <label>:183:                                    ; preds = %181, %164
  %.1 = phi i32 [ %180, %164 ], [ %182, %181 ]
  %184 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %185 = load i32, i32* %184, align 4
  %186 = icmp sgt i32 %185, 4
  br i1 %186, label %187, label %.loopexit11

; <label>:187:                                    ; preds = %183
  %188 = getelementptr [30 x i8], [30 x i8]* @.str.58, i32 0, i32 0
  %189 = getelementptr [14 x i8], [14 x i8]* @.str.57, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %188, i8* %189, i32 %.1)
  br label %.loopexit11

.loopexit11.loopexit:                             ; preds = %.lr.ph22
  %.0.ph = phi i32 [ -1, %.lr.ph22 ]
  br label %.loopexit11

.loopexit11.loopexit1:                            ; preds = %65
  %.0.ph2 = phi i32 [ -1, %65 ]
  br label %.loopexit11

.loopexit11.loopexit3:                            ; preds = %.lr.ph58
  %.0.ph4 = phi i32 [ -1, %.lr.ph58 ]
  br label %.loopexit11

.loopexit11:                                      ; preds = %.loopexit11.loopexit3, %.loopexit11.loopexit1, %.loopexit11.loopexit, %183, %187, %161
  %.0 = phi i32 [ -1, %161 ], [ %.1, %187 ], [ %.1, %183 ], [ %.0.ph, %.loopexit11.loopexit ], [ %.0.ph2, %.loopexit11.loopexit1 ], [ %.0.ph4, %.loopexit11.loopexit3 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mesg_assemble(%struct.generic_list*, %struct.generic_list*, %struct.generic_list*, i8*, i16 zeroext, i8*, i32) #0 {
  %8 = alloca [64 x i16], align 16
  %9 = alloca i8*, align 8, !track !39
  %10 = icmp ne i8* %5, null
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %7
  %12 = sext i32 %6 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* align 1 %5, i64 %12, i1 false), !track !40
  br label %15

; <label>:13:                                     ; preds = %7
  %14 = zext i16 %4 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 %14, i1 false)
  br label %15

; <label>:15:                                     ; preds = %13, %11
  %16 = bitcast i8* %3 to %struct.mesg_hdr*
  %17 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %18 = load i16, i16* %17, align 2
  %19 = and i16 %18, -129
  %20 = or i16 %19, 128
  store i16 %20, i16* %17, align 2
  %21 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 3
  store i16 0, i16* %21, align 2
  %22 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 4
  store i16 0, i16* %22, align 2
  %23 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 5
  store i16 0, i16* %23, align 2
  %24 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 2
  %25 = load i16, i16* %24, align 2
  %26 = icmp ne i16 %25, 0
  br i1 %26, label %27, label %59

; <label>:27:                                     ; preds = %15
  %28 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 2
  %29 = load i16, i16* %28, align 2
  %30 = call zeroext i16 @ntohs(i16 zeroext %29) #10
  %31 = zext i16 %30 to i32
  %32 = getelementptr inbounds [64 x i16], [64 x i16]* %8, i64 0, i64 0
  store i16 12, i16* %32, align 16
  %33 = getelementptr inbounds [64 x i16], [64 x i16]* %8, i64 0, i64 1
  store i16 0, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %3, i64 12
  store i8* %34, i8** %9, align 8
  %35 = icmp ne i32 %31, 0
  br i1 %35, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %27
  %36 = sext i32 %6 to i64
  %37 = getelementptr inbounds i8, i8* %3, i64 %36
  %38 = sext i32 %6 to i64
  %39 = getelementptr inbounds i8, i8* %3, i64 %38
  %40 = sub i32 0, %31
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %50
  %lsr.iv = phi i32 [ %40, %.lr.ph.preheader ], [ %lsr.iv.next, %50 ]
  call void @unroll_loop(i32 15)
  %41 = load i8*, i8** %9, align 8
  %42 = call i8* @mesg_skip_dname(i8* %41, i8* %37)
  store i8* %42, i8** %9, align 8
  %43 = icmp ne i8* %42, null
  br i1 %43, label %44, label %48

; <label>:44:                                     ; preds = %.lr.ph
  %45 = load i8*, i8** %9, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 4
  %47 = icmp ugt i8* %46, %39
  br i1 %47, label %48, label %50

; <label>:48:                                     ; preds = %44, %.lr.ph
  %49 = getelementptr [22 x i8], [22 x i8]* @.str.12.109, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %49)
  br label %117

; <label>:50:                                     ; preds = %44
  %51 = load i8*, i8** %9, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 4
  store i8* %52, i8** %9, align 8
  %lsr.iv.next = add nsw i32 %lsr.iv, 1
  %53 = icmp ne i32 %lsr.iv.next, 0
  br i1 %53, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %50
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %27
  %54 = load i8*, i8** %9, align 8
  %55 = ptrtoint i8* %54 to i64
  %56 = ptrtoint i8* %3 to i64
  %57 = sub i64 %55, %56
  %58 = trunc i64 %57 to i32
  br label %63

; <label>:59:                                     ; preds = %15
  %60 = sext i32 12 to i64
  %61 = getelementptr inbounds i8, i8* %3, i64 %60
  store i8* %61, i8** %9, align 8
  %62 = getelementptr inbounds [64 x i16], [64 x i16]* %8, i64 0, i64 0
  store i16 0, i16* %62, align 16
  br label %63

; <label>:63:                                     ; preds = %59, %._crit_edge
  %.02 = phi i32 [ %58, %._crit_edge ], [ 12, %59 ]
  %64 = load i8*, i8** %9, align 8
  %65 = zext i16 %4 to i32
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %3, i64 %66
  %68 = getelementptr inbounds [64 x i16], [64 x i16]* %8, i32 0, i32 0
  %69 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 3
  %70 = call i32 @mesg_write_rrset_list(%struct.generic_list* %0, i8* %3, i8* %67, i16* %68, i32 64, i8** %9, i16* %69)
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %81

; <label>:72:                                     ; preds = %63
  %73 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %74 = load i16, i16* %73, align 2
  %75 = and i16 %74, -3
  %76 = or i16 %75, 2
  store i16 %76, i16* %73, align 2
  %77 = ptrtoint i8* %64 to i64
  %78 = ptrtoint i8* %3 to i64
  %79 = sub i64 %77, %78
  %80 = trunc i64 %79 to i32
  br label %117

; <label>:81:                                     ; preds = %63
  %82 = add nsw i32 %.02, %70
  %83 = load i8*, i8** %9, align 8
  %84 = zext i16 %4 to i32
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %3, i64 %85
  %87 = getelementptr inbounds [64 x i16], [64 x i16]* %8, i32 0, i32 0
  %88 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 4
  %89 = call i32 @mesg_write_rrset_list(%struct.generic_list* %1, i8* %3, i8* %86, i16* %87, i32 64, i8** %9, i16* %88)
  %90 = icmp slt i32 %89, 0
  br i1 %90, label %91, label %100

; <label>:91:                                     ; preds = %81
  %92 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 1
  %93 = load i16, i16* %92, align 2
  %94 = and i16 %93, -3
  %95 = or i16 %94, 2
  store i16 %95, i16* %92, align 2
  %96 = ptrtoint i8* %83 to i64
  %97 = ptrtoint i8* %3 to i64
  %98 = sub i64 %96, %97
  %99 = trunc i64 %98 to i32
  br label %117

; <label>:100:                                    ; preds = %81
  %101 = add nsw i32 %82, %89
  %102 = load i8*, i8** %9, align 8
  %103 = zext i16 %4 to i32
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %3, i64 %104
  %106 = getelementptr inbounds [64 x i16], [64 x i16]* %8, i32 0, i32 0
  %107 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 5
  %108 = call i32 @mesg_write_rrset_list(%struct.generic_list* %2, i8* %3, i8* %105, i16* %106, i32 64, i8** %9, i16* %107)
  %109 = icmp slt i32 %108, 0
  br i1 %109, label %110, label %115

; <label>:110:                                    ; preds = %100
  %111 = ptrtoint i8* %102 to i64
  %112 = ptrtoint i8* %3 to i64
  %113 = sub i64 %111, %112
  %114 = trunc i64 %113 to i32
  br label %117

; <label>:115:                                    ; preds = %100
  %116 = add nsw i32 %101, %108
  br label %117

; <label>:117:                                    ; preds = %115, %110, %91, %72, %48
  %.0 = phi i32 [ -1, %48 ], [ %80, %72 ], [ %99, %91 ], [ %114, %110 ], [ %116, %115 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mesg_extract_rr(i8*, i8*, i16 zeroext, i16 zeroext, i8*, i8*, i32) #0 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 0, i32* %9, align 4
  %10 = zext i16 %2 to i32
  switch i32 %10, label %99 [
    i32 2, label %11
    i32 5, label %11
    i32 12, label %11
    i32 6, label %17
    i32 15, label %47
    i32 17, label %72
    i32 1, label %104
    i32 13, label %104
    i32 28, label %104
    i32 38, label %104
    i32 33, label %104
    i32 16, label %104
  ]

; <label>:11:                                     ; preds = %7, %7, %7
  %12 = call i8* @dname_decompress(i8* %5, i32 %6, i8* %4, i8* %0, i8* %1, i32* %9)
  %13 = icmp ne i8* %12, null
  br i1 %13, label %102, label %14

; <label>:14:                                     ; preds = %11
  %15 = call i8* @string_rtype(i16 zeroext %2)
  %16 = getelementptr [21 x i8], [21 x i8]* @.str.13.112, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %16, i8* %15)
  br label %104

; <label>:17:                                     ; preds = %7
  %18 = call i8* @dname_decompress(i8* %5, i32 %6, i8* %4, i8* %0, i8* %1, i32* %8)
  %19 = icmp ne i8* %18, null
  br i1 %19, label %22, label %20

; <label>:20:                                     ; preds = %17
  %21 = getelementptr [28 x i8], [28 x i8]* @.str.14.113, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %21)
  br label %104

; <label>:22:                                     ; preds = %17
  %23 = load i32, i32* %8, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %5, i64 %24
  %26 = sext i32 %6 to i64
  %27 = ptrtoint i8* %25 to i64
  %28 = ptrtoint i8* %5 to i64
  %29 = sub i64 %27, %28
  %30 = sub nsw i64 %26, %29
  %31 = trunc i64 %30 to i32
  %32 = call i8* @dname_decompress(i8* %25, i32 %31, i8* %18, i8* %0, i8* %1, i32* %8)
  %33 = icmp ne i8* %32, null
  br i1 %33, label %36, label %34

; <label>:34:                                     ; preds = %22
  %35 = getelementptr [28 x i8], [28 x i8]* @.str.15.114, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %35)
  br label %104

; <label>:36:                                     ; preds = %22
  %37 = load i32, i32* %8, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %25, i64 %38
  store i32 20, i32* %8, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %32, i64 20, i1 false), !track !41
  %40 = load i32, i32* %8, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  %43 = ptrtoint i8* %42 to i64
  %44 = ptrtoint i8* %5 to i64
  %45 = sub i64 %43, %44
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %9, align 4
  br label %102

; <label>:47:                                     ; preds = %7
  store i32 2, i32* %8, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %4, i64 2, i1 false), !track !42
  %48 = load i32, i32* %8, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %5, i64 %49
  %51 = load i32, i32* %8, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %4, i64 %52
  %54 = sext i32 %6 to i64
  %55 = ptrtoint i8* %50 to i64
  %56 = ptrtoint i8* %5 to i64
  %57 = sub i64 %55, %56
  %58 = sub nsw i64 %54, %57
  %59 = trunc i64 %58 to i32
  %60 = call i8* @dname_decompress(i8* %50, i32 %59, i8* %53, i8* %0, i8* %1, i32* %8)
  %61 = icmp ne i8* %60, null
  br i1 %61, label %64, label %62

; <label>:62:                                     ; preds = %47
  %63 = getelementptr [30 x i8], [30 x i8]* @.str.16.115, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %63)
  br label %104

; <label>:64:                                     ; preds = %47
  %65 = load i32, i32* %8, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %50, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = ptrtoint i8* %5 to i64
  %70 = sub i64 %68, %69
  %71 = trunc i64 %70 to i32
  store i32 %71, i32* %9, align 4
  br label %102

; <label>:72:                                     ; preds = %7
  %73 = call i8* @dname_decompress(i8* %5, i32 %6, i8* %4, i8* %0, i8* %1, i32* %8)
  %74 = icmp ne i8* %73, null
  br i1 %74, label %77, label %75

; <label>:75:                                     ; preds = %72
  %76 = getelementptr [32 x i8], [32 x i8]* @.str.17.116, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %76)
  br label %104

; <label>:77:                                     ; preds = %72
  %78 = load i32, i32* %8, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %5, i64 %79
  %81 = sext i32 %6 to i64
  %82 = ptrtoint i8* %80 to i64
  %83 = ptrtoint i8* %5 to i64
  %84 = sub i64 %82, %83
  %85 = sub nsw i64 %81, %84
  %86 = trunc i64 %85 to i32
  %87 = call i8* @dname_decompress(i8* %80, i32 %86, i8* %73, i8* %0, i8* %1, i32* %8)
  %88 = icmp ne i8* %87, null
  br i1 %88, label %91, label %89

; <label>:89:                                     ; preds = %77
  %90 = getelementptr [31 x i8], [31 x i8]* @.str.18.117, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %90)
  br label %104

; <label>:91:                                     ; preds = %77
  %92 = load i32, i32* %8, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %80, i64 %93
  %95 = ptrtoint i8* %94 to i64
  %96 = ptrtoint i8* %5 to i64
  %97 = sub i64 %95, %96
  %98 = trunc i64 %97 to i32
  store i32 %98, i32* %9, align 4
  br label %102

; <label>:99:                                     ; preds = %7
  %100 = zext i16 %2 to i32
  %101 = getelementptr [25 x i8], [25 x i8]* @.str.19.118, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %101, i32 %100)
  br label %104

; <label>:102:                                    ; preds = %11, %91, %64, %36
  %103 = load i32, i32* %9, align 4
  br label %104

; <label>:104:                                    ; preds = %7, %7, %7, %7, %7, %7, %102, %99, %89, %75, %62, %34, %20, %14
  %.0 = phi i32 [ 0, %99 ], [ %103, %102 ], [ -1, %89 ], [ -1, %75 ], [ -1, %62 ], [ -1, %34 ], [ -1, %20 ], [ -1, %14 ], [ 0, %7 ], [ 0, %7 ], [ 0, %7 ], [ 0, %7 ], [ 0, %7 ], [ 0, %7 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @dname_decompress(i8*, i32, i8*, i8*, i8*, i32*) #6 {
  %7 = ptrtoint i8* %4 to i64
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %7, %8
  %10 = trunc i64 %9 to i32
  %11 = load i8, i8* %2, align 1
  %12 = icmp ne i8 %11, 0
  br i1 %12, label %.lr.ph65.preheader, label %._crit_edge66

.lr.ph65.preheader:                               ; preds = %6
  %13 = icmp ne i8* %3, null
  %14 = icmp ne i8* %4, null
  %or.cond = and i1 %13, %14
  %15 = icmp ne i8* %4, null
  %16 = icmp ne i32* %5, null
  br label %.lr.ph65

.lr.ph65:                                         ; preds = %.lr.ph65.preheader, %140
  %.0163 = phi i8* [ %.3, %140 ], [ %0, %.lr.ph65.preheader ]
  %.0462 = phi i8* [ %.15.lcssa, %140 ], [ null, %.lr.ph65.preheader ]
  %.0761 = phi i8* [ %142, %140 ], [ %2, %.lr.ph65.preheader ]
  %.01060 = phi i32 [ %.313, %140 ], [ 0, %.lr.ph65.preheader ]
  call void @unroll_loop(i32 16)
  %17 = load i8, i8* %.0761, align 1
  %18 = zext i8 %17 to i32
  %19 = and i32 %18, 192
  %20 = icmp eq i32 %19, 192
  br i1 %20, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.lr.ph65
  br label %.lr.ph

; <label>:21:                                     ; preds = %28
  %22 = load i8, i8* %44, align 1
  %23 = zext i8 %22 to i32
  %24 = and i32 %23, 192
  %25 = icmp eq i32 %24, 192
  br i1 %25, label %.lr.ph, label %._crit_edge.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %21
  %lsr.iv = phi i32 [ -1, %.lr.ph.preheader ], [ %lsr.iv.next, %21 ]
  %.1852 = phi i8* [ %44, %21 ], [ %.0761, %.lr.ph.preheader ]
  call void @unroll_loop(i32 17)
  %lsr.iv.next = add nsw i32 %lsr.iv, 1
  %26 = icmp sge i32 %lsr.iv.next, %10
  br i1 %26, label %.loopexit.loopexit, label %27

; <label>:27:                                     ; preds = %.lr.ph
  br i1 %or.cond, label %28, label %.loopexit.loopexit

; <label>:28:                                     ; preds = %27
  %29 = getelementptr inbounds i8, i8* %.1852, i32 1
  %30 = load i8, i8* %.1852, align 1
  %31 = zext i8 %30 to i32
  %32 = shl i32 %31, 8
  %33 = trunc i32 %32 to i16
  %34 = load i8, i8* %29, align 1
  %35 = zext i8 %34 to i32
  %36 = zext i16 %33 to i32
  %37 = or i32 %36, %35
  %38 = trunc i32 %37 to i16
  %39 = zext i16 %38 to i32
  %40 = and i32 %39, -49153
  %41 = trunc i32 %40 to i16
  %42 = zext i16 %41 to i32
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %3, i64 %43
  %45 = icmp ult i8* %44, %3
  %46 = icmp ult i8* %4, %44
  %or.cond1 = or i1 %45, %46
  br i1 %or.cond1, label %.loopexit.loopexit, label %21

._crit_edge.loopexit:                             ; preds = %21
  %.1852.lcssa = phi i8* [ %.1852, %21 ]
  %.18.lcssa.ph = phi i8* [ %44, %21 ]
  %47 = getelementptr inbounds i8, i8* %.1852.lcssa, i64 2
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.lr.ph65
  %.18.lcssa = phi i8* [ %.0761, %.lr.ph65 ], [ %.18.lcssa.ph, %._crit_edge.loopexit ]
  %.15.lcssa = phi i8* [ %.0462, %.lr.ph65 ], [ %47, %._crit_edge.loopexit ]
  %48 = call i32 @labellen(i8* %.18.lcssa)
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %.loopexit.loopexit1, label %50

; <label>:50:                                     ; preds = %._crit_edge
  %51 = add nsw i32 %48, 1
  %52 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %53 = icmp sgt i32 %52, 4
  br i1 %53, label %54, label %55

; <label>:54:                                     ; preds = %50
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22.119, i64 0, i64 0), i32 %51)
  br label %55

; <label>:55:                                     ; preds = %54, %50
  %56 = add nsw i32 %.01060, %51
  %57 = icmp sge i32 %56, %1
  br i1 %57, label %.loopexit.loopexit1, label %58

; <label>:58:                                     ; preds = %55
  br i1 %15, label %59, label %63

; <label>:59:                                     ; preds = %58
  %60 = sext i32 %51 to i64
  %61 = getelementptr inbounds i8, i8* %.18.lcssa, i64 %60
  %62 = icmp ugt i8* %61, %4
  br i1 %62, label %.loopexit.loopexit1, label %63

; <label>:63:                                     ; preds = %59, %58
  br i1 %16, label %64, label %69

; <label>:64:                                     ; preds = %63
  %65 = sext i32 %51 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.0163, i8* align 1 %.18.lcssa, i64 %65, i1 false), !track !43
  %66 = add nsw i32 %.01060, %51
  %67 = sext i32 %51 to i64
  %68 = getelementptr inbounds i8, i8* %.0163, i64 %67
  br label %140

; <label>:69:                                     ; preds = %63
  %70 = load i8, i8* %.18.lcssa, align 1
  %71 = zext i8 %70 to i32
  %72 = and i32 %71, 192
  %73 = icmp ne i32 %72, 64
  br i1 %73, label %74, label %84

; <label>:74:                                     ; preds = %69
  %75 = getelementptr inbounds i8, i8* %.18.lcssa, i64 1
  %76 = sub nsw i32 %51, 1
  %77 = sext i32 %76 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %.0163, i8* align 1 %75, i64 %77, i1 false), !track !44
  %78 = sub nsw i32 %51, 1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %.0163, i64 %79
  store i8 46, i8* %80, align 1
  %81 = add nsw i32 %.01060, %51
  %82 = sext i32 %51 to i64
  %83 = getelementptr inbounds i8, i8* %.0163, i64 %82
  br label %140

; <label>:84:                                     ; preds = %69
  %85 = load i8, i8* %.18.lcssa, align 1
  %86 = zext i8 %85 to i32
  %87 = icmp eq i32 %86, 65
  br i1 %87, label %88, label %140

; <label>:88:                                     ; preds = %84
  %89 = mul nsw i32 %51, 2
  %90 = add nsw i32 %.01060, %89
  %91 = add nsw i32 %90, 7
  %92 = icmp sge i32 %91, %1
  br i1 %92, label %.loopexit.loopexit1, label %93

; <label>:93:                                     ; preds = %88
  %94 = call i32 (i8*, i8*, ...) @sprintf(i8* %.0163, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23.120, i64 0, i64 0)) #9
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %.0163, i64 %95
  %97 = sub nsw i32 %51, 1
  %98 = icmp slt i32 1, %97
  br i1 %98, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %93
  %99 = zext i32 %48 to i64
  %scevgep = getelementptr i8, i8* %.18.lcssa, i64 2
  %100 = add i64 %99, -1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader, %.lr.ph57
  %lsr.iv3 = phi i64 [ 0, %.lr.ph57.preheader ], [ %lsr.iv.next4, %.lr.ph57 ]
  %.0255 = phi i8* [ %118, %.lr.ph57 ], [ %96, %.lr.ph57.preheader ]
  call void @unroll_loop(i32 18)
  %scevgep5 = getelementptr i8, i8* %scevgep, i64 %lsr.iv3
  %101 = load i8, i8* %scevgep5, align 1
  %102 = zext i8 %101 to i32
  %103 = load i8*, i8** @hex, align 8
  %104 = lshr i32 %102, 4
  %105 = and i32 %104, 15
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %103, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = load i8*, i8** @hex, align 8
  %110 = and i32 %102, 15
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %109, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = zext i8 %108 to i32
  %115 = zext i8 %113 to i32
  %116 = call i32 (i8*, i8*, ...) @sprintf(i8* %.0255, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24.121, i64 0, i64 0), i32 %114, i32 %115) #9
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %.0255, i64 %117
  %lsr.iv.next4 = add nuw nsw i64 %lsr.iv3, 1
  %exitcond4 = icmp ne i64 %100, %lsr.iv.next4
  br i1 %exitcond4, label %.lr.ph57, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57
  %.02.lcssa.ph = phi i8* [ %118, %.lr.ph57 ]
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %93
  %.02.lcssa = phi i8* [ %96, %93 ], [ %.02.lcssa.ph, %._crit_edge58.loopexit ]
  %119 = getelementptr inbounds i8, i8* %.18.lcssa, i64 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i32
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %127

; <label>:123:                                    ; preds = %._crit_edge58
  %124 = getelementptr inbounds i8, i8* %.18.lcssa, i64 1
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  br label %127

; <label>:127:                                    ; preds = %._crit_edge58, %123
  %128 = phi i32 [ %126, %123 ], [ 256, %._crit_edge58 ]
  %129 = call i32 (i8*, i8*, ...) @sprintf(i8* %.02.lcssa, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25.122, i64 0, i64 0), i32 %128) #9
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %.02.lcssa, i64 %130
  %132 = ptrtoint i8* %131 to i64
  %133 = ptrtoint i8* %.0163 to i64
  %134 = sub i64 %132, %133
  %135 = sext i32 %.01060 to i64
  %136 = add nsw i64 %135, %134
  %137 = trunc i64 %136 to i32
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %.0163, i64 %138
  br label %140

; <label>:140:                                    ; preds = %64, %84, %127, %74
  %.1820 = phi i8* [ %.18.lcssa, %64 ], [ %.18.lcssa, %74 ], [ %.18.lcssa, %127 ], [ %.18.lcssa, %84 ]
  %.313 = phi i32 [ %66, %64 ], [ %81, %74 ], [ %137, %127 ], [ %.01060, %84 ]
  %.3 = phi i8* [ %68, %64 ], [ %83, %74 ], [ %139, %127 ], [ %.0163, %84 ]
  %141 = sext i32 %51 to i64
  %142 = getelementptr inbounds i8, i8* %.1820, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = icmp ne i8 %143, 0
  br i1 %144, label %.lr.ph65, label %._crit_edge66.loopexit

._crit_edge66.loopexit:                           ; preds = %140
  %.010.lcssa.ph = phi i32 [ %.313, %140 ]
  %.07.lcssa.ph = phi i8* [ %142, %140 ]
  %.04.lcssa.ph = phi i8* [ %.15.lcssa, %140 ]
  %.01.lcssa.ph = phi i8* [ %.3, %140 ]
  br label %._crit_edge66

._crit_edge66:                                    ; preds = %._crit_edge66.loopexit, %6
  %.010.lcssa = phi i32 [ 0, %6 ], [ %.010.lcssa.ph, %._crit_edge66.loopexit ]
  %.07.lcssa = phi i8* [ %2, %6 ], [ %.07.lcssa.ph, %._crit_edge66.loopexit ]
  %.04.lcssa = phi i8* [ null, %6 ], [ %.04.lcssa.ph, %._crit_edge66.loopexit ]
  %.01.lcssa = phi i8* [ %0, %6 ], [ %.01.lcssa.ph, %._crit_edge66.loopexit ]
  store i8 0, i8* %.01.lcssa, align 1
  %145 = icmp ne i32* %5, null
  br i1 %145, label %146, label %148

; <label>:146:                                    ; preds = %._crit_edge66
  %147 = add nsw i32 %.010.lcssa, 1
  store i32 %147, i32* %5, align 4
  br label %148

; <label>:148:                                    ; preds = %146, %._crit_edge66
  %149 = icmp ne i8* %.04.lcssa, null
  %150 = getelementptr inbounds i8, i8* %.07.lcssa, i64 1
  %spec.select = select i1 %149, i8* %.04.lcssa, i8* %150
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph, %27, %28
  %.0.ph = phi i8* [ null, %.lr.ph ], [ null, %27 ], [ null, %28 ]
  br label %.loopexit

.loopexit.loopexit1:                              ; preds = %._crit_edge, %55, %59, %88
  %.0.ph2 = phi i8* [ null, %._crit_edge ], [ null, %55 ], [ null, %59 ], [ null, %88 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit1, %.loopexit.loopexit, %148
  %.0 = phi i8* [ %spec.select, %148 ], [ %.0.ph, %.loopexit.loopexit ], [ %.0.ph2, %.loopexit.loopexit1 ]
  ret i8* %.0
}

; Function Attrs: nounwind
declare dso_local i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mesg_parse(i8*, i32, %struct.generic_list*, %struct.generic_list*, %struct.generic_list*) #0 {
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 4
  br i1 %8, label %9, label %12

; <label>:9:                                      ; preds = %5
  %10 = getelementptr [10 x i8], [10 x i8]* @.str.21.106, i32 0, i32 0
  %11 = getelementptr [13 x i8], [13 x i8]* @.str.20.125, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %10, i8* %11)
  br label %12

; <label>:12:                                     ; preds = %9, %5
  %13 = sext i32 %1 to i64
  %14 = icmp ult i64 %13, 12
  br i1 %14, label %51, label %15

; <label>:15:                                     ; preds = %12
  %16 = bitcast i8* %0 to %struct.mesg_hdr*
  %17 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i64 1
  %18 = bitcast %struct.mesg_hdr* %17 to i8*
  %19 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 2
  %20 = load i16, i16* %19, align 2
  %21 = icmp ne i16 %20, 0
  br i1 %21, label %22, label %30

; <label>:22:                                     ; preds = %15
  %23 = sext i32 %1 to i64
  %24 = getelementptr inbounds i8, i8* %0, i64 %23
  %25 = call i8* @mesg_skip_dname(i8* %18, i8* %24)
  %26 = getelementptr inbounds i8, i8* %25, i64 4
  %27 = sext i32 %1 to i64
  %28 = getelementptr inbounds i8, i8* %0, i64 %27
  %29 = icmp ugt i8* %26, %28
  br i1 %29, label %51, label %30

; <label>:30:                                     ; preds = %22, %15
  %.01 = phi i8* [ %18, %15 ], [ %26, %22 ]
  %31 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 3
  %32 = load i16, i16* %31, align 2
  %33 = call zeroext i16 @ntohs(i16 zeroext %32) #10
  %34 = zext i16 %33 to i32
  %35 = call i8* @mesg_read_sec(%struct.generic_list* %2, i8* %.01, i32 %34, i8* %0, i32 %1)
  %36 = icmp ne i8* %35, null
  br i1 %36, label %37, label %51

; <label>:37:                                     ; preds = %30
  %38 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 4
  %39 = load i16, i16* %38, align 2
  %40 = call zeroext i16 @ntohs(i16 zeroext %39) #10
  %41 = zext i16 %40 to i32
  %42 = call i8* @mesg_read_sec(%struct.generic_list* %3, i8* %35, i32 %41, i8* %0, i32 %1)
  %43 = icmp ne i8* %42, null
  br i1 %43, label %44, label %51

; <label>:44:                                     ; preds = %37
  %45 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %16, i32 0, i32 5
  %46 = load i16, i16* %45, align 2
  %47 = call zeroext i16 @ntohs(i16 zeroext %46) #10
  %48 = zext i16 %47 to i32
  %49 = call i8* @mesg_read_sec(%struct.generic_list* %4, i8* %42, i32 %48, i8* %0, i32 %1)
  %50 = icmp ne i8* %49, null
  %. = select i1 %50, i32 0, i32 -1
  br label %51

; <label>:51:                                     ; preds = %44, %37, %30, %22, %12
  %.0 = phi i32 [ -1, %12 ], [ -1, %22 ], [ -1, %30 ], [ -1, %37 ], [ %., %44 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @mesg_read_sec(%struct.generic_list*, i8*, i32, i8*, i32) #6 {
  %6 = alloca [512 x i8], align 16, !track !45
  %7 = alloca i32, align 4
  %8 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 4
  br i1 %10, label %11, label %14

; <label>:11:                                     ; preds = %5
  %12 = getelementptr [10 x i8], [10 x i8]* @.str.21.106, i32 0, i32 0
  %13 = getelementptr [16 x i8], [16 x i8]* @.str.59, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %12, i8* %13)
  br label %14

; <label>:14:                                     ; preds = %11, %5
  %15 = call %struct.generic_list* @list_init()
  %16 = icmp ne %struct.generic_list* %15, null
  br i1 %16, label %17, label %272

; <label>:17:                                     ; preds = %14
  %18 = sext i32 %4 to i64
  %19 = getelementptr inbounds i8, i8* %3, i64 %18
  %20 = icmp slt i32 0, %2
  br i1 %20, label %.lr.ph27.preheader, label %._crit_edge28

.lr.ph27.preheader:                               ; preds = %17
  %21 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i32 0, i32 0
  %25 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i32 0, i32 0
  %26 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 0
  br label %.lr.ph27

.lr.ph27:                                         ; preds = %.lr.ph27.preheader, %195
  %.0425 = phi i32 [ %200, %195 ], [ 0, %.lr.ph27.preheader ]
  %.0724 = phi i8* [ %87, %195 ], [ %1, %.lr.ph27.preheader ]
  call void @unroll_loop(i32 19)
  %27 = call i8* @mesg_skip_dname(i8* %.0724, i8* %19)
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %.loopexit1.loopexit1

; <label>:29:                                     ; preds = %.lr.ph27
  %30 = getelementptr inbounds i8, i8* %27, i64 6
  %31 = getelementptr inbounds i8, i8* %30, i64 4
  %32 = icmp ugt i8* %31, %19
  br i1 %32, label %.loopexit1.loopexit1, label %33

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds i8, i8* %27, i32 1
  %35 = load i8, i8* %27, align 1
  %36 = zext i8 %35 to i32
  %37 = shl i32 %36, 8
  %38 = trunc i32 %37 to i16
  %39 = getelementptr inbounds i8, i8* %34, i32 1
  %40 = load i8, i8* %34, align 1
  %41 = zext i8 %40 to i32
  %42 = zext i16 %38 to i32
  %43 = or i32 %42, %41
  %44 = trunc i32 %43 to i16
  %45 = getelementptr inbounds i8, i8* %39, i32 1
  %46 = load i8, i8* %39, align 1
  %47 = zext i8 %46 to i32
  %48 = shl i32 %47, 8
  %49 = trunc i32 %48 to i16
  %50 = getelementptr inbounds i8, i8* %45, i32 1
  %51 = load i8, i8* %45, align 1
  %52 = zext i8 %51 to i32
  %53 = zext i16 %49 to i32
  %54 = or i32 %53, %52
  %55 = trunc i32 %54 to i16
  %56 = getelementptr inbounds i8, i8* %50, i32 1
  %57 = load i8, i8* %50, align 1
  %58 = zext i8 %57 to i32
  %59 = shl i32 %58, 8
  %60 = getelementptr inbounds i8, i8* %56, i32 1
  %61 = load i8, i8* %56, align 1
  %62 = zext i8 %61 to i32
  %63 = or i32 %59, %62
  %64 = shl i32 %63, 8
  %65 = getelementptr inbounds i8, i8* %60, i32 1
  %66 = load i8, i8* %60, align 1
  %67 = zext i8 %66 to i32
  %68 = or i32 %64, %67
  %69 = shl i32 %68, 8
  %70 = getelementptr inbounds i8, i8* %65, i32 1
  %71 = load i8, i8* %65, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = getelementptr inbounds i8, i8* %70, i32 1
  %75 = load i8, i8* %70, align 1
  %76 = zext i8 %75 to i32
  %77 = shl i32 %76, 8
  %78 = trunc i32 %77 to i16
  %79 = getelementptr inbounds i8, i8* %74, i32 1
  %80 = load i8, i8* %74, align 1
  %81 = zext i8 %80 to i32
  %82 = zext i16 %78 to i32
  %83 = or i32 %82, %81
  %84 = trunc i32 %83 to i16
  %85 = zext i16 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %79, i64 %86
  %88 = icmp ugt i8* %87, %19
  br i1 %88, label %.loopexit1.loopexit1, label %89

; <label>:89:                                     ; preds = %33
  %90 = load %struct.generic_list*, %struct.generic_list** %21, align 8
  %91 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %90, i32 0, i32 2
  %92 = load i8*, i8** %91, align 8
  %93 = icmp ne i8* %92, null
  br i1 %93, label %.lr.ph23.preheader, label %.loopexit

.lr.ph23.preheader:                               ; preds = %89
  %94 = zext i16 %44 to i32
  %95 = zext i16 %55 to i32
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %.lr.ph23.preheader, %140
  %.0521 = phi %struct.generic_list* [ %142, %140 ], [ %90, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 20)
  %96 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.0521, i32 0, i32 2
  %97 = load i8*, i8** %96, align 8
  %98 = bitcast i8* %97 to %struct.RRset_Couple*
  %99 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %98, i32 0, i32 0
  %100 = load %struct.rr_set*, %struct.rr_set** %99, align 8
  %101 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %100, i32 0, i32 2
  %102 = bitcast %union.u_key* %101 to %struct.key_info**
  %103 = load %struct.key_info*, %struct.key_info** %102, align 8
  %104 = getelementptr inbounds %struct.key_info, %struct.key_info* %103, i32 0, i32 0
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i32
  %107 = icmp eq i32 %106, %94
  br i1 %107, label %108, label %140

; <label>:108:                                    ; preds = %.lr.ph23
  %109 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %98, i32 0, i32 0
  %110 = load %struct.rr_set*, %struct.rr_set** %109, align 8
  %111 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %110, i32 0, i32 2
  %112 = bitcast %union.u_key* %111 to %struct.key_info**
  %113 = load %struct.key_info*, %struct.key_info** %112, align 8
  %114 = getelementptr inbounds %struct.key_info, %struct.key_info* %113, i32 0, i32 1
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = icmp eq i32 %116, %95
  br i1 %117, label %118, label %140

; <label>:118:                                    ; preds = %108
  %119 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %98, i32 0, i32 0
  %120 = load %struct.rr_set*, %struct.rr_set** %119, align 8
  %121 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %120, i32 0, i32 2
  %122 = bitcast %union.u_key* %121 to %struct.key_info**
  %123 = load %struct.key_info*, %struct.key_info** %122, align 8
  %124 = bitcast %struct.key_info* %123 to i8*
  %125 = getelementptr inbounds i8, i8* %124, i64 6
  %126 = call i32 @mesg_dname_cmp(i8* %3, i8* %.0724, i8* %125)
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %140, label %128

; <label>:128:                                    ; preds = %118
  %.lcssa2 = phi i8* [ %97, %118 ]
  %.05.lcssa9 = phi %struct.generic_list* [ %.0521, %118 ]
  %129 = bitcast i8* %.lcssa2 to %struct.RRset_Couple*
  %130 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %131 = icmp sgt i32 %130, 4
  br i1 %131, label %132, label %.loopexit

; <label>:132:                                    ; preds = %128
  %133 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %129, i32 0, i32 0
  %134 = load %struct.rr_set*, %struct.rr_set** %133, align 8
  %135 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %134, i32 0, i32 2
  %136 = bitcast %union.u_key* %135 to %struct.key_info**
  %137 = load %struct.key_info*, %struct.key_info** %136, align 8
  %138 = bitcast %struct.key_info* %137 to i8*
  %139 = getelementptr inbounds i8, i8* %138, i64 6
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), i8* %139, i8* %.0724)
  br label %.loopexit

; <label>:140:                                    ; preds = %.lr.ph23, %108, %118
  %141 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.0521, i32 0, i32 0
  %142 = load %struct.generic_list*, %struct.generic_list** %141, align 8
  %143 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %142, i32 0, i32 2
  %144 = load i8*, i8** %143, align 8
  %145 = icmp ne i8* %144, null
  br i1 %145, label %.lr.ph23, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %140
  %.05.lcssa.ph = phi %struct.generic_list* [ %142, %140 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %89, %128, %132
  %.05.lcssa = phi %struct.generic_list* [ %.05.lcssa9, %132 ], [ %.05.lcssa9, %128 ], [ %90, %89 ], [ %.05.lcssa.ph, %.loopexit.loopexit ]
  %146 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.05.lcssa, i32 0, i32 2
  %147 = load i8*, i8** %146, align 8
  %148 = icmp ne i8* %147, null
  br i1 %148, label %178, label %149

; <label>:149:                                    ; preds = %.loopexit
  %150 = call i8* @dname_decompress(i8* %22, i32 512, i8* %.0724, i8* %3, i8* %19, i32* %7)
  %151 = icmp ne i8* %150, null
  br i1 %151, label %152, label %.loopexit1.loopexit1

; <label>:152:                                    ; preds = %149
  %153 = call noalias i8* @malloc(i64 16) #9, !track !46
  %154 = bitcast i8* %153 to %struct.RRset_Couple*
  %155 = icmp ne %struct.RRset_Couple* %154, null
  br i1 %155, label %156, label %.loopexit1.loopexit1

; <label>:156:                                    ; preds = %152
  %157 = call %struct.rr_list* @rr_list_alloc()
  %158 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %154, i32 0, i32 1
  store %struct.rr_list* %157, %struct.rr_list** %158, align 8
  %159 = load i32, i32* %7, align 4
  %160 = trunc i32 %159 to i16
  %161 = call %struct.rr_set* @rrset_create(i16 zeroext %44, i16 zeroext %55, i16 zeroext %160, i8* %25, %struct.rr_list* null)
  %162 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %154, i32 0, i32 0
  store %struct.rr_set* %161, %struct.rr_set** %162, align 8
  %163 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %154, i32 0, i32 1
  %164 = load %struct.rr_list*, %struct.rr_list** %163, align 8
  %165 = icmp ne %struct.rr_list* %164, null
  br i1 %165, label %166, label %174

; <label>:166:                                    ; preds = %156
  %167 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %154, i32 0, i32 0
  %168 = load %struct.rr_set*, %struct.rr_set** %167, align 8
  %169 = icmp ne %struct.rr_set* %168, null
  br i1 %169, label %170, label %174

; <label>:170:                                    ; preds = %166
  %171 = bitcast %struct.RRset_Couple* %154 to i8*
  %172 = call i32 @list_add(%struct.generic_list* %15, i8* %171)
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %176

; <label>:174:                                    ; preds = %170, %166, %156
  %.lcssa = phi i8* [ %153, %170 ], [ %153, %166 ], [ %153, %156 ]
  %175 = bitcast i8* %.lcssa to %struct.RRset_Couple*
  call void @rrset_couple_free(%struct.RRset_Couple* %175)
  br label %.loopexit1

; <label>:176:                                    ; preds = %170
  %177 = load %struct.generic_list*, %struct.generic_list** %26, align 8
  br label %178

; <label>:178:                                    ; preds = %176, %.loopexit
  %.16 = phi %struct.generic_list* [ %.05.lcssa, %.loopexit ], [ %177, %176 ]
  %179 = icmp ne i16 %84, 0
  br i1 %179, label %180, label %186

; <label>:180:                                    ; preds = %178
  %181 = call i32 @mesg_extract_rr(i8* %3, i8* %19, i16 zeroext %44, i16 zeroext %55, i8* %79, i8* %23, i32 512)
  %182 = icmp slt i32 %181, 0
  br i1 %182, label %.loopexit1.loopexit1, label %183

; <label>:183:                                    ; preds = %180
  %184 = icmp ne i32 %181, 0
  %185 = trunc i32 %181 to i16
  %.02 = select i1 %184, i8* %24, i8* %79
  %.01 = select i1 %184, i16 %185, i16 %84
  br label %186

; <label>:186:                                    ; preds = %178, %183
  %.13 = phi i8* [ %.02, %183 ], [ null, %178 ]
  %.1 = phi i16 [ %.01, %183 ], [ 0, %178 ]
  %187 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.16, i32 0, i32 2
  %188 = load i8*, i8** %187, align 8
  %189 = bitcast i8* %188 to %struct.RRset_Couple*
  %190 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %189, i32 0, i32 1
  %191 = load %struct.rr_list*, %struct.rr_list** %190, align 8
  %192 = zext i16 %.1 to i32
  %193 = call %struct.rr_list* @rr_list_add(%struct.rr_list* %191, i32 %73, i32 %192, i8* %.13)
  %194 = icmp ne %struct.rr_list* %193, null
  br i1 %194, label %195, label %.loopexit1.loopexit1

; <label>:195:                                    ; preds = %186
  %196 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.16, i32 0, i32 2
  %197 = load i8*, i8** %196, align 8
  %198 = bitcast i8* %197 to %struct.RRset_Couple*
  %199 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %198, i32 0, i32 1
  store %struct.rr_list* %193, %struct.rr_list** %199, align 8
  %200 = add nuw nsw i32 %.0425, 1
  %201 = icmp slt i32 %200, %2
  br i1 %201, label %.lr.ph27, label %._crit_edge28.loopexit

._crit_edge28.loopexit:                           ; preds = %195
  %.07.lcssa.ph = phi i8* [ %87, %195 ]
  br label %._crit_edge28

._crit_edge28:                                    ; preds = %._crit_edge28.loopexit, %17
  %.07.lcssa = phi i8* [ %1, %17 ], [ %.07.lcssa.ph, %._crit_edge28.loopexit ]
  %202 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %203 = load i32, i32* %202, align 4
  %204 = icmp sgt i32 %203, 4
  br i1 %204, label %205, label %208

; <label>:205:                                    ; preds = %._crit_edge28
  %206 = getelementptr [31 x i8], [31 x i8]* @.str.61, i32 0, i32 0
  %207 = getelementptr [16 x i8], [16 x i8]* @.str.59, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %206, i8* %207)
  br label %208

; <label>:208:                                    ; preds = %205, %._crit_edge28
  %209 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 2
  store i8* null, i8** %209, align 8
  %210 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %15, i32 0, i32 0
  %211 = load %struct.generic_list*, %struct.generic_list** %210, align 8
  %212 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %211, i32 0, i32 2
  %213 = load i8*, i8** %212, align 8
  %214 = icmp ne i8* %213, null
  br i1 %214, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %208
  %215 = icmp ne %struct.generic_list* %0, null
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %258
  %.220 = phi %struct.generic_list* [ %260, %258 ], [ %211, %.lr.ph.preheader ]
  call void @unroll_loop(i32 21)
  %216 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.220, i32 0, i32 2
  %217 = load i8*, i8** %216, align 8
  %218 = bitcast i8* %217 to %struct.RRset_Couple*
  %219 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %218, i32 0, i32 0
  %220 = load %struct.rr_set*, %struct.rr_set** %219, align 8
  %221 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %220, i32 0, i32 2
  %222 = bitcast %union.u_key* %221 to %struct.key_info**
  %223 = load %struct.key_info*, %struct.key_info** %222, align 8
  %224 = getelementptr inbounds %struct.key_info, %struct.key_info* %223, i32 0, i32 0
  %225 = load i16, i16* %224, align 2
  %226 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %218, i32 0, i32 0
  %227 = load %struct.rr_set*, %struct.rr_set** %226, align 8
  %228 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %227, i32 0, i32 2
  %229 = bitcast %union.u_key* %228 to %struct.key_info**
  %230 = load %struct.key_info*, %struct.key_info** %229, align 8
  %231 = getelementptr inbounds %struct.key_info, %struct.key_info* %230, i32 0, i32 1
  %232 = load i16, i16* %231, align 2
  %233 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %218, i32 0, i32 0
  %234 = load %struct.rr_set*, %struct.rr_set** %233, align 8
  %235 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %234, i32 0, i32 2
  %236 = bitcast %union.u_key* %235 to %struct.key_info**
  %237 = load %struct.key_info*, %struct.key_info** %236, align 8
  %238 = getelementptr inbounds %struct.key_info, %struct.key_info* %237, i32 0, i32 2
  %239 = load i16, i16* %238, align 2
  %240 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %218, i32 0, i32 0
  %241 = load %struct.rr_set*, %struct.rr_set** %240, align 8
  %242 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %241, i32 0, i32 2
  %243 = bitcast %union.u_key* %242 to %struct.key_info**
  %244 = load %struct.key_info*, %struct.key_info** %243, align 8
  %245 = bitcast %struct.key_info* %244 to i8*
  %246 = getelementptr inbounds i8, i8* %245, i64 6
  %247 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %218, i32 0, i32 1
  %248 = load %struct.rr_list*, %struct.rr_list** %247, align 8
  %249 = call %struct.rr_set* @rrset_create(i16 zeroext %225, i16 zeroext %232, i16 zeroext %239, i8* %246, %struct.rr_list* %248)
  %250 = icmp ne %struct.rr_set* %249, null
  br i1 %250, label %251, label %.loopexit1.loopexit

; <label>:251:                                    ; preds = %.lr.ph
  br i1 %215, label %252, label %258

; <label>:252:                                    ; preds = %251
  %253 = call %struct.rr_set* @rrset_copy(%struct.rr_set* %249)
  %254 = bitcast %struct.rr_set* %253 to i8*
  %255 = call i32 @list_add(%struct.generic_list* %0, i8* %254)
  %256 = icmp slt i32 %255, 0
  br i1 %256, label %257, label %258

; <label>:257:                                    ; preds = %252
  %.lcssa8 = phi %struct.rr_set* [ %249, %252 ]
  call void @rrset_free(%struct.rr_set* %.lcssa8)
  br label %.loopexit1

; <label>:258:                                    ; preds = %252, %251
  call void @rrset_free(%struct.rr_set* %249)
  %259 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.220, i32 0, i32 0
  %260 = load %struct.generic_list*, %struct.generic_list** %259, align 8
  %261 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %260, i32 0, i32 2
  %262 = load i8*, i8** %261, align 8
  %263 = icmp ne i8* %262, null
  br i1 %263, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %258
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %208
  call void @list_destroy(%struct.generic_list* %15, void (i8*)* @rrset_couple_freev)
  %264 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %265 = load i32, i32* %264, align 4
  %266 = icmp sgt i32 %265, 4
  br i1 %266, label %267, label %272

; <label>:267:                                    ; preds = %._crit_edge
  %268 = getelementptr [8 x i8], [8 x i8]* @.str.62, i32 0, i32 0
  %269 = getelementptr [16 x i8], [16 x i8]* @.str.59, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %268, i8* %269)
  br label %272

.loopexit1.loopexit:                              ; preds = %.lr.ph
  br label %.loopexit1

.loopexit1.loopexit1:                             ; preds = %.lr.ph27, %29, %33, %149, %152, %180, %186
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit1, %.loopexit1.loopexit, %257, %174
  %270 = getelementptr [30 x i8], [30 x i8]* @.str.63, i32 0, i32 0
  %271 = getelementptr [16 x i8], [16 x i8]* @.str.59, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %270, i8* %271)
  call void @list_destroy(%struct.generic_list* %15, void (i8*)* @rrset_couple_freev)
  br label %272

; <label>:272:                                    ; preds = %._crit_edge, %267, %14, %.loopexit1
  %.0 = phi i8* [ null, %.loopexit1 ], [ null, %14 ], [ %.07.lcssa, %267 ], [ %.07.lcssa, %._crit_edge ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @string_rclass(i16 zeroext) #0 {
  %2 = zext i16 %0 to i32
  switch i32 %2, label %9 [
    i32 1, label %3
    i32 254, label %5
    i32 255, label %7
  ]

; <label>:3:                                      ; preds = %1
  %4 = getelementptr [3 x i8], [3 x i8]* @.str.26.126, i32 0, i32 0
  br label %13

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [5 x i8], [5 x i8]* @.str.27.127, i32 0, i32 0
  br label %13

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [4 x i8], [4 x i8]* @.str.28.93, i32 0, i32 0
  br label %13

; <label>:9:                                      ; preds = %1
  %10 = zext i16 %0 to i32
  %11 = getelementptr [27 x i8], [27 x i8]* @.str.29.128, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %11, i32 %10)
  %12 = getelementptr [8 x i8], [8 x i8]* @.str.30.94, i32 0, i32 0
  br label %13

; <label>:13:                                     ; preds = %9, %7, %5, %3
  %.0 = phi i8* [ %12, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_trick_list(%struct.generic_list*, i32, i32) #0 {
  %4 = alloca [256 x i8], align 16, !track !47
  %5 = getelementptr [10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0
  %6 = getelementptr [18 x i8], [18 x i8]* @.str.131, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %16 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %17 = trunc i32 %1 to i16
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %19 = icmp ne i32 %2, 0
  %20 = select i1 %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6.136, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7.137, i64 0, i64 0)
  %21 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %22 = icmp ne i32 %2, 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %73
  %.01 = phi %struct.generic_list* [ %75, %73 ], [ %9, %.lr.ph.preheader ]
  call void @unroll_loop(i32 22)
  %23 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast i8* %24 to %struct.rr_set*
  %26 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %25, i32 0, i32 2
  %27 = bitcast %union.u_key* %26 to %struct.key_info**
  %28 = load %struct.key_info*, %struct.key_info** %27, align 8
  %29 = getelementptr inbounds %struct.key_info, %struct.key_info* %28, i32 0, i32 0
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = icmp ne i32 %31, 1
  br i1 %32, label %73, label %33

; <label>:33:                                     ; preds = %.lr.ph
  %34 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %25, i32 0, i32 2
  %35 = bitcast %union.u_key* %34 to %struct.key_info**
  %36 = load %struct.key_info*, %struct.key_info** %35, align 8
  %37 = bitcast %struct.key_info* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 6
  %39 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %25, i32 0, i32 2
  %40 = bitcast %union.u_key* %39 to %struct.key_info**
  %41 = load %struct.key_info*, %struct.key_info** %40, align 8
  %42 = getelementptr inbounds %struct.key_info, %struct.key_info* %41, i32 0, i32 2
  %43 = load i16, i16* %42, align 2
  %44 = zext i16 %43 to i32
  %45 = call %struct.rr_set* @search_name(%struct.generic_list* %0, i8* %38, i32 %44, i32 %1)
  %46 = icmp ne %struct.rr_set* %45, null
  %47 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %48 = icmp sgt i32 %47, 3
  br i1 %46, label %49, label %53

; <label>:49:                                     ; preds = %33
  br i1 %48, label %50, label %52

; <label>:50:                                     ; preds = %49
  %51 = call i8* @dname_decompress(i8* %13, i32 256, i8* %38, i8* null, i8* null, i32* null)
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.133, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0), i8* %14)
  br label %52

; <label>:52:                                     ; preds = %50, %49
  call void @rrset_free(%struct.rr_set* %45)
  br label %73

; <label>:53:                                     ; preds = %33
  br i1 %48, label %54, label %56

; <label>:54:                                     ; preds = %53
  %55 = call i8* @dname_decompress(i8* %15, i32 256, i8* %38, i8* null, i8* null, i32* null)
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.134, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0), i8* %16)
  br label %56

; <label>:56:                                     ; preds = %54, %53
  %57 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), align 8
  %58 = call %struct.rr_set* @conv_trick_rrset(%struct.rr_set* %25, i16 zeroext %17, i32 %57)
  %59 = icmp ne %struct.rr_set* %58, null
  br i1 %59, label %61, label %60

; <label>:60:                                     ; preds = %56
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.135, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0))
  br label %73

; <label>:61:                                     ; preds = %56
  %62 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %66

; <label>:64:                                     ; preds = %61
  %65 = call i8* @dname_decompress(i8* %18, i32 256, i8* %38, i8* null, i8* null, i32* null)
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.138, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0), i8* %20, i8* %21)
  br label %66

; <label>:66:                                     ; preds = %64, %61
  br i1 %22, label %67, label %70

; <label>:67:                                     ; preds = %66
  %68 = bitcast %struct.rr_set* %58 to i8*
  %69 = call i32 @list_add(%struct.generic_list* %0, i8* %68)
  br label %73

; <label>:70:                                     ; preds = %66
  call void @rrset_free(%struct.rr_set* %25)
  %71 = bitcast %struct.rr_set* %58 to i8*
  %72 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  store i8* %71, i8** %72, align 8
  br label %73

; <label>:73:                                     ; preds = %67, %70, %.lr.ph, %60, %52
  %74 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 0
  %75 = load %struct.generic_list*, %struct.generic_list** %74, align 8
  %76 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %75, i32 0, i32 2
  %77 = load i8*, i8** %76, align 8
  %78 = icmp ne i8* %77, null
  br i1 %78, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %73
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_set* @search_name(%struct.generic_list*, i8*, i32, i32) #6 {
  %5 = getelementptr [10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0
  %6 = getelementptr [14 x i8], [14 x i8]* @.str.26.140, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %4
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %42
  %.012 = phi %struct.generic_list* [ %44, %42 ], [ %9, %.lr.ph.preheader ]
  call void @unroll_loop(i32 23)
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to %struct.rr_set*
  %16 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %15, i32 0, i32 2
  %17 = bitcast %union.u_key* %16 to %struct.key_info**
  %18 = load %struct.key_info*, %struct.key_info** %17, align 8
  %19 = bitcast %struct.key_info* %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %15, i32 0, i32 2
  %22 = bitcast %union.u_key* %21 to %struct.key_info**
  %23 = load %struct.key_info*, %struct.key_info** %22, align 8
  %24 = getelementptr inbounds %struct.key_info, %struct.key_info* %23, i32 0, i32 0
  %25 = load i16, i16* %24, align 2
  %26 = zext i16 %25 to i32
  %27 = icmp eq i32 %26, %3
  br i1 %27, label %28, label %42

; <label>:28:                                     ; preds = %.lr.ph
  %29 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %15, i32 0, i32 2
  %30 = bitcast %union.u_key* %29 to %struct.key_info**
  %31 = load %struct.key_info*, %struct.key_info** %30, align 8
  %32 = getelementptr inbounds %struct.key_info, %struct.key_info* %31, i32 0, i32 2
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = icmp eq i32 %34, %2
  br i1 %35, label %36, label %42

; <label>:36:                                     ; preds = %28
  %37 = call i32 @mesg_dname_cmp(i8* null, i8* %20, i8* %1)
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %42, label %39

; <label>:39:                                     ; preds = %36
  %.lcssa1 = phi i8* [ %14, %36 ]
  %40 = bitcast i8* %.lcssa1 to %struct.rr_set*
  %41 = call %struct.rr_set* @rrset_copy(%struct.rr_set* %40)
  br label %._crit_edge

; <label>:42:                                     ; preds = %.lr.ph, %28, %36
  %43 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 0
  %44 = load %struct.generic_list*, %struct.generic_list** %43, align 8
  %45 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %44, i32 0, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %42
  %.0.ph = phi %struct.rr_set* [ null, %42 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %4, %39
  %.0 = phi %struct.rr_set* [ %41, %39 ], [ null, %4 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret %struct.rr_set* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rr_set* @conv_trick_rrset(%struct.rr_set*, i16 zeroext, i32) #6 {
  %4 = getelementptr [10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0
  %5 = getelementptr [19 x i8], [19 x i8]* @.str.27.139, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %4, i8* %5)
  %6 = call %struct.rr_list* @rr_list_of_rrset(%struct.rr_set* %0)
  %7 = icmp ne %struct.rr_list* %6, null
  br i1 %7, label %8, label %76

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %6, i32 0, i32 0
  %10 = load %struct.rr_list*, %struct.rr_list** %9, align 8
  %11 = icmp ne %struct.rr_list* %10, null
  br i1 %11, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %8
  %12 = zext i16 %1 to i32
  %13 = icmp eq i32 %12, 38
  %spec.select = select i1 %13, i32 17, i32 16
  %14 = sext i32 %spec.select to i64
  %15 = zext i16 %1 to i32
  %16 = icmp eq i32 %15, 28
  %17 = sext i32 %2 to i64
  %18 = getelementptr inbounds [30 x [25 x i8]], [30 x [25 x i8]]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20), i64 0, i64 %17
  %19 = getelementptr inbounds [25 x i8], [25 x i8]* %18, i32 0, i32 0
  %20 = zext i16 %1 to i32
  %21 = icmp eq i32 %20, 38
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %39
  %.0712 = phi %struct.rr_list* [ %43, %39 ], [ %6, %.lr.ph.preheader ]
  call void @unroll_loop(i32 24)
  %22 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0712, i32 0, i32 3
  %23 = load %struct.rr*, %struct.rr** %22, align 8
  %24 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0712, i32 0, i32 3
  store %struct.rr* null, %struct.rr** %24, align 8
  %25 = bitcast %struct.rr* %23 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 6
  %27 = call noalias i8* @malloc(i64 %14) #9, !track !48
  %28 = icmp ne i8* %27, null
  br i1 %28, label %29, label %.loopexit.loopexit

; <label>:29:                                     ; preds = %.lr.ph
  %30 = getelementptr inbounds i8, i8* %27, i64 1
  %31 = select i1 %16, i8* %27, i8* %30
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %19, i64 12, i1 false), !track !49
  %32 = getelementptr inbounds i8, i8* %31, i64 12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %32, i8* align 1 %26, i64 4, i1 false), !track !50
  br i1 %21, label %33, label %34

; <label>:33:                                     ; preds = %29
  store i8 0, i8* %27, align 1
  br label %34

; <label>:34:                                     ; preds = %33, %29
  %35 = getelementptr inbounds %struct.rr, %struct.rr* %23, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = call %struct.rr* @rr_alloc(i32 %36, i32 %spec.select, i8* %27)
  %38 = icmp ne %struct.rr* %37, null
  br i1 %38, label %39, label %.loopexit.loopexit

; <label>:39:                                     ; preds = %34
  call void @free(i8* %27) #9
  %40 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0712, i32 0, i32 3
  store %struct.rr* %37, %struct.rr** %40, align 8
  %41 = bitcast %struct.rr* %23 to i8*
  call void @free(i8* %41) #9
  %42 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0712, i32 0, i32 0
  %43 = load %struct.rr_list*, %struct.rr_list** %42, align 8
  %44 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %43, i32 0, i32 0
  %45 = load %struct.rr_list*, %struct.rr_list** %44, align 8
  %46 = icmp ne %struct.rr_list* %45, null
  br i1 %46, label %.lr.ph, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph, %34, %39
  %.16.ph = phi %struct.rr* [ %23, %.lr.ph ], [ %23, %34 ], [ null, %39 ]
  %.14.ph = phi %struct.rr* [ null, %.lr.ph ], [ %37, %34 ], [ null, %39 ]
  %.1.ph = phi i8* [ %27, %.lr.ph ], [ %27, %34 ], [ null, %39 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %8
  %.16 = phi %struct.rr* [ null, %8 ], [ %.16.ph, %.loopexit.loopexit ]
  %.14 = phi %struct.rr* [ null, %8 ], [ %.14.ph, %.loopexit.loopexit ]
  %.1 = phi i8* [ null, %8 ], [ %.1.ph, %.loopexit.loopexit ]
  %47 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %48 = bitcast %union.u_key* %47 to %struct.key_info**
  %49 = load %struct.key_info*, %struct.key_info** %48, align 8
  %50 = getelementptr inbounds %struct.key_info, %struct.key_info* %49, i32 0, i32 1
  %51 = load i16, i16* %50, align 2
  %52 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %53 = bitcast %union.u_key* %52 to %struct.key_info**
  %54 = load %struct.key_info*, %struct.key_info** %53, align 8
  %55 = getelementptr inbounds %struct.key_info, %struct.key_info* %54, i32 0, i32 2
  %56 = load i16, i16* %55, align 2
  %57 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %58 = bitcast %union.u_key* %57 to %struct.key_info**
  %59 = load %struct.key_info*, %struct.key_info** %58, align 8
  %60 = bitcast %struct.key_info* %59 to i8*
  %61 = getelementptr inbounds i8, i8* %60, i64 6
  %62 = call %struct.rr_set* @rrset_create(i16 zeroext %1, i16 zeroext %51, i16 zeroext %56, i8* %61, %struct.rr_list* %6)
  %63 = icmp ne %struct.rr* %.16, null
  br i1 %63, label %64, label %66

; <label>:64:                                     ; preds = %.loopexit
  %65 = bitcast %struct.rr* %.16 to i8*
  call void @free(i8* %65) #9
  br label %66

; <label>:66:                                     ; preds = %64, %.loopexit
  %67 = icmp ne %struct.rr* %.14, null
  br i1 %67, label %68, label %70

; <label>:68:                                     ; preds = %66
  %69 = bitcast %struct.rr* %.14 to i8*
  call void @free(i8* %69) #9
  br label %70

; <label>:70:                                     ; preds = %68, %66
  %71 = icmp ne %struct.rr_list* %6, null
  br i1 %71, label %72, label %73

; <label>:72:                                     ; preds = %70
  call void @rr_list_free(%struct.rr_list* %6)
  br label %73

; <label>:73:                                     ; preds = %72, %70
  %74 = icmp ne i8* %.1, null
  br i1 %74, label %75, label %76

; <label>:75:                                     ; preds = %73
  call void @free(i8* %.1) #9
  br label %76

; <label>:76:                                     ; preds = %73, %75, %3
  %.0 = phi %struct.rr_set* [ null, %3 ], [ %62, %75 ], [ %62, %73 ]
  ret %struct.rr_set* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_trick_ptr(%struct.generic_list*, i8*) #0 {
  %3 = alloca %union.u_key, align 8, !track !51
  %4 = alloca %union.u_key, align 8, !track !52
  %5 = getelementptr [10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0
  %6 = getelementptr [17 x i8], [17 x i8]* @.str.8.143, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  %7 = load i8, i8* %1, align 1
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %._crit_edge, label %10

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %13 = load %struct.generic_list*, %struct.generic_list** %12, align 8
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %10
  %17 = bitcast %union.u_key* %3 to i8*
  %18 = bitcast %union.u_key* %3 to %struct.key_info**
  %19 = bitcast %union.u_key* %4 to i8**
  %20 = bitcast %union.u_key* %4 to i8**
  %21 = bitcast %union.u_key* %4 to %struct.key_info**
  %22 = bitcast %union.u_key* %4 to %struct.key_info**
  %23 = bitcast %union.u_key* %4 to i8**
  %24 = bitcast %union.u_key* %3 to i8**
  %25 = bitcast %union.u_key* %4 to i8*
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %58
  %.01 = phi %struct.generic_list* [ %60, %58 ], [ %13, %.lr.ph.preheader ]
  call void @unroll_loop(i32 25)
  %26 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast i8* %27 to %struct.rr_set*
  %29 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %28, i32 0, i32 2
  %30 = bitcast %union.u_key* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %30, i64 8, i1 false), !track !53
  %31 = load %struct.key_info*, %struct.key_info** %18, align 8
  %32 = getelementptr inbounds %struct.key_info, %struct.key_info* %31, i32 0, i32 0
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = icmp eq i32 %34, 12
  br i1 %35, label %36, label %58

; <label>:36:                                     ; preds = %.lr.ph
  %37 = call i64 @strlen(i8* %1) #8
  %38 = add i64 6, %37
  %39 = add i64 %38, 1
  %40 = call noalias i8* @malloc(i64 %39) #9, !track !54
  store i8* %40, i8** %19, align 8
  %41 = load i8*, i8** %20, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %57

; <label>:43:                                     ; preds = %36
  %44 = load %struct.key_info*, %struct.key_info** %21, align 8
  %45 = getelementptr inbounds %struct.key_info, %struct.key_info* %44, i32 0, i32 0
  store i16 12, i16* %45, align 2
  %46 = load %struct.key_info*, %struct.key_info** %22, align 8
  %47 = getelementptr inbounds %struct.key_info, %struct.key_info* %46, i32 0, i32 1
  store i16 1, i16* %47, align 2
  %48 = load i8*, i8** %23, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 6
  %50 = call i8* @strcpy(i8* %49, i8* %1) #9, !track !55
  %51 = load i8*, i8** %24, align 8
  call void @free(i8* %51) #9
  %52 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast i8* %53 to %struct.rr_set*
  %55 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %54, i32 0, i32 2
  %56 = bitcast %union.u_key* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %25, i64 8, i1 false), !track !56
  br label %58

; <label>:57:                                     ; preds = %36
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9.144, i64 0, i64 0))
  br label %58

; <label>:58:                                     ; preds = %.lr.ph, %57, %43
  %59 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 0
  %60 = load %struct.generic_list*, %struct.generic_list** %59, align 8
  %61 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %60, i32 0, i32 2
  %62 = load i8*, i8** %61, align 8
  %63 = icmp ne i8* %62, null
  br i1 %63, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %58
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %10, %2
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_trick_newptr(%struct.generic_list*, i8*) #0 {
  %3 = alloca %union.u_key, align 8, !track !57
  %4 = alloca %union.u_key, align 8, !track !58
  %5 = getelementptr [10 x i8], [10 x i8]* @.str.1.132, i32 0, i32 0
  %6 = getelementptr [20 x i8], [20 x i8]* @.str.10.147, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  %7 = load i8, i8* %1, align 1
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %._crit_edge, label %10

; <label>:10:                                     ; preds = %2
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %13 = load %struct.generic_list*, %struct.generic_list** %12, align 8
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %10
  %17 = bitcast %union.u_key* %3 to i8*
  %18 = bitcast %union.u_key* %3 to %struct.key_info**
  %19 = bitcast %union.u_key* %4 to i8**
  %20 = bitcast %union.u_key* %4 to i8**
  %21 = bitcast %union.u_key* %4 to %struct.key_info**
  %22 = bitcast %union.u_key* %4 to %struct.key_info**
  %23 = bitcast %union.u_key* %4 to i8**
  %24 = bitcast %union.u_key* %3 to i8**
  %25 = bitcast %union.u_key* %4 to i8*
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %57
  %.01 = phi %struct.generic_list* [ %59, %57 ], [ %13, %.lr.ph.preheader ]
  call void @unroll_loop(i32 26)
  %26 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast i8* %27 to %struct.rr_set*
  %29 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %28, i32 0, i32 2
  %30 = bitcast %union.u_key* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %30, i64 8, i1 false), !track !59
  %31 = load %struct.key_info*, %struct.key_info** %18, align 8
  %32 = getelementptr inbounds %struct.key_info, %struct.key_info* %31, i32 0, i32 0
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = icmp eq i32 %34, 12
  br i1 %35, label %36, label %57

; <label>:36:                                     ; preds = %.lr.ph
  %37 = call i64 @strlen(i8* %1) #8
  %38 = add i64 %37, 1
  %39 = add i64 6, %38
  %40 = call noalias i8* @malloc(i64 %39) #9, !track !60
  store i8* %40, i8** %19, align 8
  %41 = load i8*, i8** %20, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %56

; <label>:43:                                     ; preds = %36
  %44 = load %struct.key_info*, %struct.key_info** %21, align 8
  %45 = getelementptr inbounds %struct.key_info, %struct.key_info* %44, i32 0, i32 0
  store i16 12, i16* %45, align 2
  %46 = load %struct.key_info*, %struct.key_info** %22, align 8
  %47 = getelementptr inbounds %struct.key_info, %struct.key_info* %46, i32 0, i32 1
  store i16 1, i16* %47, align 2
  %48 = load i8*, i8** %23, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %1, i64 %38, i1 false), !track !61
  %50 = load i8*, i8** %24, align 8
  call void @free(i8* %50) #9
  %51 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast i8* %52 to %struct.rr_set*
  %54 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %53, i32 0, i32 2
  %55 = bitcast %union.u_key* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %25, i64 8, i1 false), !track !62
  br label %57

; <label>:56:                                     ; preds = %36
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11.148, i64 0, i64 0))
  br label %57

; <label>:57:                                     ; preds = %.lr.ph, %56, %43
  %58 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 0
  %59 = load %struct.generic_list*, %struct.generic_list** %58, align 8
  %60 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %59, i32 0, i32 2
  %61 = load i8*, i8** %60, align 8
  %62 = icmp ne i8* %61, null
  br i1 %62, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %57
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %10, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @conv_trick_conf(i8*) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %3 = load i32, i32* %2, align 8
  %4 = icmp sge i32 %3, 30
  br i1 %4, label %5, label %8

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [39 x i8], [39 x i8]* @.str.13.150, i32 0, i32 0
  %7 = getelementptr [18 x i8], [18 x i8]* @.str.12.149, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %6, i8* %7, i32 30)
  br label %8

; <label>:8:                                      ; preds = %5, %1
  %9 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 20
  %13 = getelementptr inbounds [30 x [25 x i8]], [30 x [25 x i8]]* %12, i64 0, i64 %11
  %14 = getelementptr inbounds [25 x i8], [25 x i8]* %13, i32 0, i32 0
  %15 = call i32 @inet_pton(i32 10, i8* %0, i8* %14) #9
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %24

; <label>:17:                                     ; preds = %8
  %18 = getelementptr [7 x i8], [7 x i8]* @.str.14.151, i32 0, i32 0
  %19 = getelementptr [18 x i8], [18 x i8]* @.str.12.149, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %18, i8* %19, i8* %0)
  %20 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %21, 1
  %23 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  store i32 %22, i32* %23, align 8
  br label %27

; <label>:24:                                     ; preds = %8
  %25 = getelementptr [28 x i8], [28 x i8]* @.str.15.152, i32 0, i32 0
  %26 = getelementptr [18 x i8], [18 x i8]* @.str.12.149, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %25, i8* %26, i8* %0)
  br label %27

; <label>:27:                                     ; preds = %24, %17
  %.0 = phi i32 [ 0, %17 ], [ -1, %24 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @inet_pton(i32, i8*, i8*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @conv_trick_is_tot_ptr(i8*) #0 {
  %2 = alloca %struct.in6_addr, align 4, !track !63
  %3 = alloca [3 x i8], align 1, !track !64
  %4 = alloca i32, align 4, !track !65
  %5 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %._crit_edge

; <label>:8:                                      ; preds = %1
  %9 = load i8, i8* %0, align 1
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %._crit_edge, label %12

; <label>:12:                                     ; preds = %8
  %13 = getelementptr [4 x i8], [4 x i8]* @.str.16.155, i32 0, i32 0
  %14 = call i8* @strstr(i8* %0, i8* %13) #8, !track !66
  %15 = icmp ne i8* %14, null
  br i1 %15, label %20, label %16

; <label>:16:                                     ; preds = %12
  %17 = getelementptr [4 x i8], [4 x i8]* @.str.17.156, i32 0, i32 0
  %18 = call i8* @strstr(i8* %0, i8* %17) #8, !track !67
  %19 = icmp ne i8* %18, null
  br i1 %19, label %20, label %._crit_edge

; <label>:20:                                     ; preds = %16, %12
  %21 = getelementptr [4 x i8], [4 x i8]* @.str.18.157, i32 0, i32 0
  %22 = call i8* @strstr(i8* %0, i8* %21) #8, !track !68
  %23 = icmp ne i8* %22, null
  br i1 %23, label %27, label %24

; <label>:24:                                     ; preds = %20
  %25 = getelementptr [4 x i8], [4 x i8]* @.str.19.158, i32 0, i32 0
  %26 = call i8* @strstr(i8* %0, i8* %25) #8, !track !69
  br label %27

; <label>:27:                                     ; preds = %24, %20
  %.02 = phi i8* [ %22, %20 ], [ %26, %24 ]
  %28 = icmp ne i8* %.02, null
  br i1 %28, label %29, label %._crit_edge

; <label>:29:                                     ; preds = %27
  %30 = bitcast %struct.in6_addr* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 16, i1 false)
  %31 = getelementptr inbounds i8, i8* %.02, i32 -1
  %32 = ptrtoint i8* %31 to i64
  %33 = ptrtoint i8* %0 to i64
  %34 = sub i64 %32, %33
  %35 = icmp ne i64 %34, 64
  br i1 %35, label %._crit_edge, label %36

; <label>:36:                                     ; preds = %29
  %37 = getelementptr inbounds i8, i8* %31, i32 -1
  %38 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %2, i32 0, i32 0
  %39 = bitcast %union.anon.1* %38 to [16 x i8]*
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %39, i64 0, i64 0
  %41 = getelementptr inbounds i8, i8* %37, i64 -4
  %42 = icmp uge i8* %41, %0
  br i1 %42, label %.lr.ph9.preheader, label %._crit_edge10

.lr.ph9.preheader:                                ; preds = %36
  %43 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 1
  %45 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2
  %46 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i32 0, i32 0
  br label %.lr.ph9

.lr.ph9:                                          ; preds = %.lr.ph9.preheader, %56
  %.037 = phi i8* [ %scevgep9, %56 ], [ %37, %.lr.ph9.preheader ]
  %.046 = phi i8* [ %61, %56 ], [ %40, %.lr.ph9.preheader ]
  call void @unroll_loop(i32 27)
  %47 = load i8, i8* %.037, align 1
  store i8 %47, i8* %43, align 1
  %scevgep5 = getelementptr i8, i8* %.037, i64 -1
  %48 = load i8, i8* %scevgep5, align 1
  %49 = zext i8 %48 to i32
  %50 = icmp ne i32 %49, 1
  br i1 %50, label %._crit_edge.loopexit1, label %51

; <label>:51:                                     ; preds = %.lr.ph9
  %scevgep6 = getelementptr i8, i8* %.037, i64 -2
  %52 = load i8, i8* %scevgep6, align 1
  store i8 %52, i8* %44, align 1
  %scevgep7 = getelementptr i8, i8* %.037, i64 -3
  %53 = load i8, i8* %scevgep7, align 1
  %54 = zext i8 %53 to i32
  %55 = icmp ne i32 %54, 1
  br i1 %55, label %._crit_edge.loopexit1, label %56

; <label>:56:                                     ; preds = %51
  store i8 0, i8* %45, align 1
  %57 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.159, i64 0, i64 0), i32* %4) #9
  %58 = load i32, i32* %4, align 4
  %59 = and i32 %58, 255
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds i8, i8* %.046, i32 1
  store i8 %60, i8* %.046, align 1
  %scevgep8 = getelementptr i8, i8* %.037, i64 -8
  %62 = icmp uge i8* %scevgep8, %0
  %scevgep9 = getelementptr i8, i8* %scevgep8, i64 4
  br i1 %62, label %.lr.ph9, label %._crit_edge10.loopexit

._crit_edge10.loopexit:                           ; preds = %56
  br label %._crit_edge10

._crit_edge10:                                    ; preds = %._crit_edge10.loopexit, %36
  %63 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %64 = load i32, i32* %63, align 8
  %65 = icmp slt i32 0, %64
  br i1 %65, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge10
  %66 = bitcast %struct.in6_addr* %2 to i8*
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %69
  %lsr.iv = phi %struct.ToT* [ bitcast (i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 0, i64 0) to %struct.ToT*), %.lr.ph.preheader ], [ %72, %69 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %69 ], [ 0, %.lr.ph.preheader ]
  %lsr.iv4 = bitcast %struct.ToT* %lsr.iv to i8*
  call void @unroll_loop(i32 28)
  %67 = call i32 @memcmp(i8* %66, i8* %lsr.iv4, i64 12) #8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %._crit_edge.loopexit, label %69

; <label>:69:                                     ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %70 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %71 = sext i32 %70 to i64
  %scevgep = getelementptr %struct.ToT, %struct.ToT* %lsr.iv, i64 0, i32 3
  %scevgep3 = bitcast i8** %scevgep to i8*
  %uglygep = getelementptr i8, i8* %scevgep3, i64 1
  %72 = bitcast i8* %uglygep to %struct.ToT*
  %73 = icmp slt i64 %indvars.iv.next, %71
  br i1 %73, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph, %69
  %.0.ph = phi i32 [ 1, %.lr.ph ], [ 0, %69 ]
  br label %._crit_edge

._crit_edge.loopexit1:                            ; preds = %.lr.ph9, %51
  %.0.ph2 = phi i32 [ 0, %.lr.ph9 ], [ 0, %51 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit1, %._crit_edge.loopexit, %._crit_edge10, %29, %27, %16, %1, %8
  %.0 = phi i32 [ 0, %8 ], [ 0, %1 ], [ 0, %16 ], [ 0, %27 ], [ 0, %29 ], [ 0, %._crit_edge10 ], [ %.0.ph, %._crit_edge.loopexit ], [ %.0.ph2, %._crit_edge.loopexit1 ]
  ret i32 %.0
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_trick_ptr_rq(i8*) #0 {
  %2 = alloca [8 x i8], align 1, !track !70
  %3 = load i8, i8* %0, align 1
  %4 = zext i8 %3 to i32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %82, label %.preheader2.preheader

.preheader2.preheader:                            ; preds = %1
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* %2, i32 0, i32 0
  br label %.preheader2

.preheader2:                                      ; preds = %.preheader2.preheader, %.preheader2
  %.0110 = phi i8* [ %21, %.preheader2 ], [ %0, %.preheader2.preheader ]
  %.039 = phi i32 [ %16, %.preheader2 ], [ 0, %.preheader2.preheader ]
  call void @unroll_loop(i32 29)
  %7 = sext i32 %.039 to i64
  %8 = getelementptr inbounds i8, i8* %6, i64 %7
  %9 = getelementptr inbounds i8, i8* %.0110, i64 1
  %10 = load i8, i8* %.0110, align 1
  %11 = zext i8 %10 to i32
  %12 = sext i32 %11 to i64
  %13 = call i8* @strncpy(i8* %8, i8* %9, i64 %12) #9, !track !71
  %14 = load i8, i8* %.0110, align 1
  %15 = zext i8 %14 to i32
  %16 = add nsw i32 %.039, %15
  %17 = load i8, i8* %.0110, align 1
  %18 = zext i8 %17 to i32
  %19 = add nsw i32 %18, 1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %.0110, i64 %20
  %22 = icmp slt i32 %16, 8
  br i1 %22, label %.preheader2, label %.preheader1.preheader

.preheader1.preheader:                            ; preds = %.preheader2
  %indvars.iv7.ph = phi i64 [ 0, %.preheader2 ]
  br label %.preheader1

.preheader1:                                      ; preds = %.preheader1.preheader, %65
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %65 ], [ %indvars.iv7.ph, %.preheader1.preheader ]
  call void @unroll_loop(i32 30)
  %23 = call i16** @__ctype_b_loc() #10
  %24 = load i16*, i16** %23, align 8
  %scevgep4 = getelementptr [8 x i8], [8 x i8]* %2, i64 0, i64 %indvars.iv7
  %25 = load i8, i8* %scevgep4, align 1
  %26 = zext i8 %25 to i32
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i16, i16* %24, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = and i32 %30, 2048
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %38

; <label>:33:                                     ; preds = %.preheader1
  %scevgep5 = getelementptr [8 x i8], [8 x i8]* %2, i64 0, i64 %indvars.iv7
  %34 = load i8, i8* %scevgep5, align 1
  %35 = zext i8 %34 to i32
  %36 = sub nsw i32 %35, 48
  %37 = trunc i32 %36 to i8
  store i8 %37, i8* %scevgep5, align 1
  br label %65

; <label>:38:                                     ; preds = %.preheader1
  %39 = call i16** @__ctype_b_loc() #10
  %40 = load i16*, i16** %39, align 8
  %scevgep6 = getelementptr [8 x i8], [8 x i8]* %2, i64 0, i64 %indvars.iv7
  %41 = load i8, i8* %scevgep6, align 1
  %42 = zext i8 %41 to i32
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %40, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 1024
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %65

; <label>:49:                                     ; preds = %38
  %50 = call i16** @__ctype_b_loc() #10
  %51 = load i16*, i16** %50, align 8
  %scevgep7 = getelementptr [8 x i8], [8 x i8]* %2, i64 0, i64 %indvars.iv7
  %52 = load i8, i8* %scevgep7, align 1
  %53 = zext i8 %52 to i32
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i16, i16* %51, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  %58 = and i32 %57, 256
  %59 = icmp ne i32 %58, 0
  %60 = select i1 %59, i32 55, i32 87
  %scevgep8 = getelementptr [8 x i8], [8 x i8]* %2, i64 0, i64 %indvars.iv7
  %61 = load i8, i8* %scevgep8, align 1
  %62 = zext i8 %61 to i32
  %63 = sub nsw i32 %62, %60
  %64 = trunc i32 %63 to i8
  store i8 %64, i8* %scevgep8, align 1
  br label %65

; <label>:65:                                     ; preds = %33, %49, %38
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1
  %exitcond = icmp ne i64 %indvars.iv.next8, 8
  br i1 %exitcond, label %.preheader1, label %.preheader.preheader

.preheader.preheader:                             ; preds = %65
  %indvars.iv.ph = phi i64 [ 0, %65 ]
  %.124.ph = phi i8* [ %0, %65 ]
  %scevgep = getelementptr [8 x i8], [8 x i8]* %2, i64 0, i64 1
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %.preheader ], [ %indvars.iv.ph, %.preheader.preheader ]
  %.124 = phi i8* [ %77, %.preheader ], [ %.124.ph, %.preheader.preheader ]
  call void @unroll_loop(i32 31)
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  %scevgep2 = getelementptr i8, i8* %scevgep1, i64 -1
  %66 = load i8, i8* %scevgep2, align 1
  %67 = zext i8 %66 to i32
  %scevgep3 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  %68 = load i8, i8* %scevgep3, align 1
  %69 = zext i8 %68 to i32
  %70 = mul nsw i32 16, %69
  %71 = add nsw i32 %67, %70
  %72 = getelementptr inbounds i8, i8* %.124, i64 1
  %73 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %72, i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.162, i64 0, i64 0), i32 %71) #9
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %.124, align 1
  %75 = add nsw i32 %73, 1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %.124, i64 %76
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2
  %78 = icmp ult i64 %indvars.iv.next, 8
  br i1 %78, label %.preheader, label %79

; <label>:79:                                     ; preds = %.preheader
  %.12.lcssa = phi i8* [ %77, %.preheader ]
  store i8 0, i8* %.12.lcssa, align 1
  %80 = getelementptr [14 x i8], [14 x i8]* @.str.22.163, i32 0, i32 0
  %81 = call i64 @strlcat(i8* %0, i8* %80, i64 256)
  br label %82

; <label>:82:                                     ; preds = %1, %79
  ret void
}

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #4

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #5

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @conv_trick_is_tot_newptr(i8*, %struct.in6_addr*) #0 {
  %3 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %4 = load i32, i32* %3, align 8
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %._crit_edge

; <label>:6:                                      ; preds = %2
  %7 = load i8, i8* %0, align 1
  %8 = zext i8 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %._crit_edge, label %10

; <label>:10:                                     ; preds = %6
  %11 = load i8, i8* %0, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp ne i32 %12, 65
  br i1 %13, label %._crit_edge, label %14

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds i8, i8* %0, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = icmp ne i32 %17, 128
  br i1 %18, label %._crit_edge, label %19

; <label>:19:                                     ; preds = %14
  %20 = bitcast %struct.in6_addr* %1 to i8*
  %21 = getelementptr inbounds i8, i8* %0, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %20, i8* align 1 %21, i64 16, i1 false), !track !72
  %22 = getelementptr inbounds i8, i8* %0, i64 18
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 3
  br i1 %25, label %._crit_edge, label %26

; <label>:26:                                     ; preds = %19
  %27 = getelementptr inbounds i8, i8* %22, i64 1
  %28 = sext i32 3 to i64
  %29 = getelementptr [4 x i8], [4 x i8]* @.str.18.157, i32 0, i32 0
  %30 = call i32 @strncasecmp(i8* %27, i8* %29, i64 %28) #8
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %38

; <label>:32:                                     ; preds = %26
  %33 = getelementptr inbounds i8, i8* %22, i64 1
  %34 = sext i32 3 to i64
  %35 = getelementptr [4 x i8], [4 x i8]* @.str.19.158, i32 0, i32 0
  %36 = call i32 @strncasecmp(i8* %33, i8* %35, i64 %34) #8
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %._crit_edge, label %38

; <label>:38:                                     ; preds = %32, %26
  %39 = add nsw i32 3, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %22, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = icmp ne i32 %43, 4
  br i1 %44, label %._crit_edge, label %45

; <label>:45:                                     ; preds = %38
  %46 = getelementptr inbounds i8, i8* %41, i64 1
  %47 = sext i32 4 to i64
  %48 = getelementptr [5 x i8], [5 x i8]* @.str.23.166, i32 0, i32 0
  %49 = call i32 @strncasecmp(i8* %46, i8* %48, i64 %47) #8
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %57

; <label>:51:                                     ; preds = %45
  %52 = getelementptr inbounds i8, i8* %41, i64 1
  %53 = sext i32 4 to i64
  %54 = getelementptr [5 x i8], [5 x i8]* @.str.24.167, i32 0, i32 0
  %55 = call i32 @strncasecmp(i8* %52, i8* %54, i64 %53) #8
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %._crit_edge, label %57

; <label>:57:                                     ; preds = %51, %45
  %58 = add nsw i32 4, 1
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %41, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %._crit_edge, label %64

; <label>:64:                                     ; preds = %57
  %65 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  %66 = load i32, i32* %65, align 8
  %67 = icmp slt i32 0, %66
  br i1 %67, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %64
  %68 = bitcast %struct.in6_addr* %1 to i8*
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %71
  %lsr.iv = phi %struct.ToT* [ bitcast (i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 0, i64 0) to %struct.ToT*), %.lr.ph.preheader ], [ %74, %71 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %71 ], [ 0, %.lr.ph.preheader ]
  %lsr.iv2 = bitcast %struct.ToT* %lsr.iv to i8*
  call void @unroll_loop(i32 32)
  %69 = call i32 @memcmp(i8* %68, i8* %lsr.iv2, i64 12) #8
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %._crit_edge.loopexit

; <label>:71:                                     ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %72 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %73 = sext i32 %72 to i64
  %scevgep = getelementptr %struct.ToT, %struct.ToT* %lsr.iv, i64 0, i32 3
  %scevgep1 = bitcast i8** %scevgep to i8*
  %uglygep = getelementptr i8, i8* %scevgep1, i64 1
  %74 = bitcast i8* %uglygep to %struct.ToT*
  %75 = icmp slt i64 %indvars.iv.next, %73
  br i1 %75, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph, %71
  %.0.ph = phi i32 [ 1, %.lr.ph ], [ 0, %71 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %64, %57, %38, %51, %19, %32, %10, %14, %2, %6
  %.0 = phi i32 [ 0, %6 ], [ 0, %2 ], [ 0, %14 ], [ 0, %10 ], [ 0, %32 ], [ 0, %19 ], [ 0, %51 ], [ 0, %38 ], [ 0, %57 ], [ 0, %64 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_trick_newptr_rq(i8*, %struct.in6_addr*) #0 {
  %3 = load i8, i8* %0, align 1
  %4 = zext i8 %3 to i32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %17, label %.preheader.preheader

.preheader.preheader:                             ; preds = %2
  %scevgep = getelementptr %struct.in6_addr, %struct.in6_addr* %1, i64 0, i32 0, i32 0, i64 3
  %scevgep1 = bitcast i32* %scevgep to i8*
  %uglygep = getelementptr i8, i8* %scevgep1, i64 3
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %lsr.iv = phi i64 [ 0, %.preheader.preheader ], [ %lsr.iv.next, %.preheader ]
  %.03 = phi i8* [ %13, %.preheader ], [ %0, %.preheader.preheader ]
  call void @unroll_loop(i32 33)
  %6 = getelementptr inbounds i8, i8* %.03, i64 1
  %scevgep2 = getelementptr i8, i8* %uglygep, i64 %lsr.iv
  %7 = load i8, i8* %scevgep2, align 1
  %8 = zext i8 %7 to i32
  %9 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %6, i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21.162, i64 0, i64 0), i32 %8) #9
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %.03, align 1
  %11 = add nsw i32 %9, 1
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8, i8* %.03, i64 %12
  %lsr.iv.next = add nsw i64 %lsr.iv, -1
  %exitcond = icmp ne i64 %lsr.iv.next, -4
  br i1 %exitcond, label %.preheader, label %14

; <label>:14:                                     ; preds = %.preheader
  %.0.lcssa = phi i8* [ %13, %.preheader ]
  %15 = getelementptr [15 x i8], [15 x i8]* @.str.25.170, i32 0, i32 0
  %16 = call i8* @strcpy(i8* %.0.lcssa, i8* %15) #9, !track !73
  br label %17

; <label>:17:                                     ; preds = %2, %14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_srv_accept(i32) #0 {
  %2 = alloca %struct.sockaddr_storage, align 8, !track !74
  %3 = alloca i32, align 4, !track !75
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 2
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [31 x i8], [31 x i8]* @.str.171, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i32 %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  store i32 128, i32* %3, align 4
  %10 = bitcast %struct.sockaddr_storage* %2 to %struct.sockaddr*
  %11 = call i32 @accept(i32 %0, %struct.sockaddr* %10, i32* %3)
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [11 x i8], [11 x i8]* @.str.1.172, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14)
  br label %18

; <label>:15:                                     ; preds = %9
  %16 = bitcast %struct.sockaddr_storage* %2 to %struct.sockaddr*
  %17 = call i32 @tcp_response_start(i32 %11, %struct.sockaddr* %16)
  br label %18

; <label>:18:                                     ; preds = %15, %13
  %.0 = phi i32 [ -1, %13 ], [ %17, %15 ]
  ret i32 %.0
}

declare dso_local i32 @accept(i32, %struct.sockaddr*, i32*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_common_eq(i8*, i8*) #0 {
  %3 = bitcast i8* %0 to %struct.ev_tcp_common_data*
  %4 = bitcast i8* %1 to %struct.ev_tcp_common_data*
  %5 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %3, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %4, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  %. = select i1 %9, i32 0, i32 1
  ret i32 %.
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.generic_list* @ev_tcp_common_init() #6 {
  %1 = call %struct.generic_list* @list_init()
  %2 = icmp ne %struct.generic_list* %1, null
  br i1 %2, label %3, label %5

; <label>:3:                                      ; preds = %0
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 2
  store i8* null, i8** %4, align 8
  br label %5

; <label>:5:                                      ; preds = %0, %3
  %.0 = phi %struct.generic_list* [ %1, %3 ], [ null, %0 ]
  ret %struct.generic_list* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_common_register(%struct.generic_list*, i32, %struct.context*) #0 {
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 2
  br i1 %6, label %7, label %10

; <label>:7:                                      ; preds = %3
  %8 = getelementptr [14 x i8], [14 x i8]* @.str.3.174, i32 0, i32 0
  %9 = getelementptr [25 x i8], [25 x i8]* @.str.2.173, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %9, i32 %1)
  br label %10

; <label>:10:                                     ; preds = %7, %3
  %11 = call noalias i8* @malloc(i64 16) #9, !track !76
  %12 = bitcast i8* %11 to %struct.ev_tcp_common_data*
  %13 = icmp ne %struct.ev_tcp_common_data* %12, null
  br i1 %13, label %14, label %20

; <label>:14:                                     ; preds = %10
  %15 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %12, i32 0, i32 0
  store i32 %1, i32* %15, align 8
  %16 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %12, i32 0, i32 1
  store %struct.context* %2, %struct.context** %16, align 8
  %17 = bitcast %struct.ev_tcp_common_data* %12 to i8*
  %18 = call i32 @list_add(%struct.generic_list* %0, i8* %17)
  %19 = icmp slt i32 %18, 0
  %. = select i1 %19, i32 -1, i32 0
  br label %20

; <label>:20:                                     ; preds = %14, %10
  %.0 = phi i32 [ -1, %10 ], [ %., %14 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_common_remove(%struct.generic_list*, i32) #0 {
  %3 = alloca %struct.ev_tcp_common_data, align 8, !track !77
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 2
  br i1 %6, label %7, label %10

; <label>:7:                                      ; preds = %2
  %8 = getelementptr [14 x i8], [14 x i8]* @.str.3.174, i32 0, i32 0
  %9 = getelementptr [23 x i8], [23 x i8]* @.str.4.175, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %9, i32 %1)
  br label %10

; <label>:10:                                     ; preds = %7, %2
  %11 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %3, i32 0, i32 0
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %3, i32 0, i32 1
  store %struct.context* null, %struct.context** %12, align 8
  %13 = bitcast %struct.ev_tcp_common_data* %3 to i8*
  %14 = call %struct.generic_list* @list_search(%struct.generic_list* %0, i8* %13, i32 (i8*, i8*)* @ev_tcp_common_eq)
  %15 = icmp ne %struct.generic_list* %14, null
  br i1 %15, label %16, label %20

; <label>:16:                                     ; preds = %10
  %17 = call i8* @list_delete(%struct.generic_list* %14)
  %18 = bitcast i8* %17 to %struct.ev_tcp_common_data*
  %19 = bitcast %struct.ev_tcp_common_data* %18 to i8*
  call void @free(i8* %19) #9
  br label %20

; <label>:20:                                     ; preds = %10, %16
  %.0 = phi i32 [ 0, %16 ], [ -1, %10 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_common_fds(%struct.generic_list*, %struct.fd_set*) #0 {
  %3 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %3, align 8
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %2
  %9 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %1, i32 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %37
  %.03 = phi i32 [ %38, %37 ], [ 0, %.lr.ph.preheader ]
  %.012 = phi %struct.generic_list* [ %40, %37 ], [ %5, %.lr.ph.preheader ]
  call void @unroll_loop(i32 34)
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct.ev_tcp_common_data*
  %13 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %14 = icmp sgt i32 %13, 2
  br i1 %14, label %15, label %18

; <label>:15:                                     ; preds = %.lr.ph
  %16 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %12, i32 0, i32 0
  %17 = load i32, i32* %16, align 8
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5.176, i64 0, i64 0), i32 %17)
  br label %18

; <label>:18:                                     ; preds = %15, %.lr.ph
  %19 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %12, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = srem i32 %20, 64
  %22 = zext i32 %21 to i64
  %23 = shl i64 1, %22
  %24 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %12, i32 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = sdiv i32 %25, 64
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [16 x i64], [16 x i64]* %9, i64 0, i64 %27
  %29 = load i64, i64* %28, align 8
  %30 = or i64 %29, %23
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %12, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, %.03
  br i1 %33, label %34, label %37

; <label>:34:                                     ; preds = %18
  %35 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %12, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  br label %37

; <label>:37:                                     ; preds = %34, %18
  %38 = phi i32 [ %36, %34 ], [ %.03, %18 ]
  %39 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 0
  %40 = load %struct.generic_list*, %struct.generic_list** %39, align 8
  %41 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %40, i32 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = icmp ne i8* %42, null
  br i1 %43, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %37
  %.0.lcssa.ph = phi i32 [ %38, %37 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %2
  %.0.lcssa = phi i32 [ 0, %2 ], [ %.0.lcssa.ph, %._crit_edge.loopexit ]
  ret i32 %.0.lcssa
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_common_fd_check(%struct.generic_list*, %struct.fd_set*) #0 {
  %3 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %4 = load %struct.generic_list*, %struct.generic_list** %3, align 8
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %2
  %8 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %1, i32 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %40
  %.013 = phi %struct.generic_list* [ %42, %40 ], [ %4, %.lr.ph.preheader ]
  call void @unroll_loop(i32 35)
  %9 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.013, i32 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast i8* %10 to %struct.ev_tcp_common_data*
  %12 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = sdiv i32 %13, 64
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [16 x i64], [16 x i64]* %8, i64 0, i64 %15
  %17 = load i64, i64* %16, align 8
  %18 = srem i32 %13, 64
  %19 = zext i32 %18 to i64
  %20 = shl i64 1, %19
  %21 = and i64 %17, %20
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %23, label %40

; <label>:23:                                     ; preds = %.lr.ph
  %.lcssa1 = phi i8* [ %10, %.lr.ph ]
  %.lcssa = phi i32 [ %13, %.lr.ph ]
  %24 = bitcast i8* %.lcssa1 to %struct.ev_tcp_common_data*
  %25 = srem i32 %.lcssa, 64
  %26 = zext i32 %25 to i64
  %27 = shl i64 1, %26
  %28 = xor i64 %27, -1
  %29 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %1, i32 0, i32 0
  %30 = sdiv i32 %.lcssa, 64
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [16 x i64], [16 x i64]* %29, i64 0, i64 %31
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, %28
  store i64 %34, i64* %32, align 8
  %35 = getelementptr inbounds %struct.ev_tcp_common_data, %struct.ev_tcp_common_data* %24, i32 0, i32 1
  %36 = load %struct.context*, %struct.context** %35, align 8
  %37 = getelementptr inbounds %struct.context, %struct.context* %36, i32 0, i32 7
  %38 = load i32 (%struct.context*)*, i32 (%struct.context*)** %37, align 8
  %39 = call i32 %38(%struct.context* %36)
  br label %._crit_edge

; <label>:40:                                     ; preds = %.lr.ph
  %41 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.013, i32 0, i32 0
  %42 = load %struct.generic_list*, %struct.generic_list** %41, align 8
  %43 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %42, i32 0, i32 2
  %44 = load i8*, i8** %43, align 8
  %45 = icmp ne i8* %44, null
  br i1 %45, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %40
  %.0.ph = phi i32 [ 0, %40 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %2, %23
  %.0 = phi i32 [ %39, %23 ], [ 0, %2 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_conn_in_init() #0 {
  %1 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8
  %2 = icmp ne %struct.generic_list* %1, null
  br i1 %2, label %7, label %3

; <label>:3:                                      ; preds = %0
  %4 = call %struct.generic_list* @ev_tcp_common_init()
  store %struct.generic_list* %4, %struct.generic_list** @ConnL_head, align 8
  %5 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8
  %6 = icmp ne %struct.generic_list* %5, null
  %. = select i1 %6, i32 0, i32 -1
  br label %7

; <label>:7:                                      ; preds = %3, %0
  %.0 = phi i32 [ -1, %0 ], [ %., %3 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_tcp_conn_in_finish() #0 {
  %1 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8
  call void @list_destroy(%struct.generic_list* %1, void (i8*)* @free)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_conn_in_register(i32, %struct.context*) #0 {
  %3 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %6, label %8

; <label>:6:                                      ; preds = %2
  %7 = getelementptr [33 x i8], [33 x i8]* @.str.6.177, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %7)
  br label %8

; <label>:8:                                      ; preds = %6, %2
  %9 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8
  %10 = call i32 @ev_tcp_common_register(%struct.generic_list* %9, i32 %0, %struct.context* %1)
  ret i32 %10
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_conn_in_remove(i32) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 3
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [31 x i8], [31 x i8]* @.str.7.180, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %5, %1
  %8 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8
  %9 = call i32 @ev_tcp_common_remove(%struct.generic_list* %8, i32 %0)
  ret i32 %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_conn_in_fds(%struct.fd_set*) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 3
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [28 x i8], [28 x i8]* @.str.8.181, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %5, %1
  %8 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8
  %9 = call i32 @ev_tcp_common_fds(%struct.generic_list* %8, %struct.fd_set* %0)
  ret i32 %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_conn_in_fd_check(%struct.fd_set*) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 3
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [33 x i8], [33 x i8]* @.str.9.182, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %5, %1
  %8 = load %struct.generic_list*, %struct.generic_list** @ConnL_head, align 8
  %9 = call i32 @ev_tcp_common_fd_check(%struct.generic_list* %8, %struct.fd_set* %0)
  ret i32 %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_out_init() #0 {
  %1 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8
  %2 = icmp ne %struct.generic_list* %1, null
  br i1 %2, label %7, label %3

; <label>:3:                                      ; preds = %0
  %4 = call %struct.generic_list* @ev_tcp_common_init()
  store %struct.generic_list* %4, %struct.generic_list** @ETOL_head, align 8
  %5 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8
  %6 = icmp ne %struct.generic_list* %5, null
  %. = select i1 %6, i32 0, i32 -1
  br label %7

; <label>:7:                                      ; preds = %3, %0
  %.0 = phi i32 [ -1, %0 ], [ %., %3 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_tcp_out_finish() #0 {
  %1 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8
  call void @list_destroy(%struct.generic_list* %1, void (i8*)* @free)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_out_register(i32, %struct.context*) #0 {
  %3 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 3
  br i1 %5, label %6, label %8

; <label>:6:                                      ; preds = %2
  %7 = getelementptr [29 x i8], [29 x i8]* @.str.10.183, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %7)
  br label %8

; <label>:8:                                      ; preds = %6, %2
  %9 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8
  %10 = call i32 @ev_tcp_common_register(%struct.generic_list* %9, i32 %0, %struct.context* %1)
  ret i32 %10
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_out_remove(i32) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 3
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [27 x i8], [27 x i8]* @.str.11.186, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %5, %1
  %8 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8
  %9 = call i32 @ev_tcp_common_remove(%struct.generic_list* %8, i32 %0)
  ret i32 %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_out_fds(%struct.fd_set*) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 3
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [24 x i8], [24 x i8]* @.str.12.187, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %5, %1
  %8 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8
  %9 = call i32 @ev_tcp_common_fds(%struct.generic_list* %8, %struct.fd_set* %0)
  ret i32 %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_tcp_out_fd_check(%struct.fd_set*) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 3
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [29 x i8], [29 x i8]* @.str.13.188, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %5, %1
  %8 = load %struct.generic_list*, %struct.generic_list** @ETOL_head, align 8
  %9 = call i32 @ev_tcp_common_fd_check(%struct.generic_list* %8, %struct.fd_set* %0)
  ret i32 %9
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @sprint_inet(%struct.sockaddr*, i8*) #0 {
  %3 = alloca [256 x i8], align 16, !track !78
  %4 = getelementptr inbounds i8, i8* %1, i64 0
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %6 = load i16, i16* %5, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %25

; <label>:9:                                      ; preds = %2
  %10 = bitcast %struct.sockaddr* %0 to %struct.sockaddr_in*
  %11 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %12 = load i16, i16* %11, align 4
  %13 = zext i16 %12 to i32
  %14 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  %15 = bitcast %struct.in_addr* %14 to i8*
  %16 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %17 = call i8* @inet_ntop(i32 %13, i8* %15, i8* %16, i32 256) #9, !track !79
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  %20 = load i16, i16* %19, align 2
  %21 = call zeroext i16 @ntohs(i16 zeroext %20) #10
  %22 = zext i16 %21 to i32
  %23 = getelementptr [8 x i8], [8 x i8]* @.str.191, i32 0, i32 0
  %24 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 256, i8* %23, i8* %18, i32 %22) #9
  br label %25

; <label>:25:                                     ; preds = %9, %2
  %26 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %46

; <label>:30:                                     ; preds = %25
  %31 = bitcast %struct.sockaddr* %0 to %struct.sockaddr_in6*
  %32 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %31, i32 0, i32 0
  %33 = load i16, i16* %32, align 4
  %34 = zext i16 %33 to i32
  %35 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %31, i32 0, i32 3
  %36 = bitcast %struct.in6_addr* %35 to i8*
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %38 = call i8* @inet_ntop(i32 %34, i8* %36, i8* %37, i32 256) #9, !track !80
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %40 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %31, i32 0, i32 1
  %41 = load i16, i16* %40, align 2
  %42 = call zeroext i16 @ntohs(i16 zeroext %41) #10
  %43 = zext i16 %42 to i32
  %44 = getelementptr [8 x i8], [8 x i8]* @.str.191, i32 0, i32 0
  %45 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %1, i64 256, i8* %44, i8* %39, i32 %43) #9
  br label %46

; <label>:46:                                     ; preds = %30, %25
  ret i8* %1
}

; Function Attrs: nounwind
declare dso_local i8* @inet_ntop(i32, i8*, i8*, i32) #4

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.sockaddr* @parse_and_alloc_addr(i8*, i32, i32*) #6 {
  %4 = alloca [256 x i8], align 16, !track !81
  %5 = alloca %struct.addrinfo, align 8, !track !82
  %6 = alloca %struct.addrinfo*, align 8, !track !83
  %7 = alloca [32 x i8], align 16, !track !84
  %8 = bitcast [256 x i8]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %8, i8 0, i64 256, i1 false)
  %9 = call i8* @strchr(i8* %0, i32 58) #8, !track !85
  %10 = icmp ne i8* %9, null
  br i1 %10, label %15, label %11

; <label>:11:                                     ; preds = %3
  %12 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  %13 = load i32, i32* %12, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %11, %3
  br label %16

; <label>:16:                                     ; preds = %15, %11
  %.02 = phi i32 [ 28, %15 ], [ 16, %11 ]
  %.01 = phi i32 [ 10, %15 ], [ 2, %11 ]
  %17 = icmp ne i32 %.01, 0
  br i1 %17, label %18, label %88

; <label>:18:                                     ; preds = %16
  %19 = sext i32 %.02 to i64
  %20 = call noalias i8* @malloc(i64 %19) #9, !track !86
  %21 = bitcast i8* %20 to %struct.sockaddr*
  %22 = icmp ne %struct.sockaddr* %21, null
  br i1 %22, label %23, label %88

; <label>:23:                                     ; preds = %18
  %24 = bitcast %struct.sockaddr* %21 to i8*
  %25 = sext i32 %.02 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %24, i8 0, i64 %25, i1 false)
  %26 = trunc i32 %.01 to i16
  %27 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %21, i32 0, i32 0
  store i16 %26, i16* %27, align 2
  %28 = icmp ne i8* %9, null
  br i1 %28, label %37, label %29

; <label>:29:                                     ; preds = %23
  %30 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  %31 = load i32, i32* %30, align 4
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %37

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %35 = getelementptr [8 x i8], [8 x i8]* @.str.1.192, i32 0, i32 0
  %36 = call i8* @strcpy(i8* %34, i8* %35) #9, !track !87
  br label %37

; <label>:37:                                     ; preds = %33, %29, %23
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %39 = call i64 @strlcat(i8* %38, i8* %0, i64 256)
  %40 = icmp uge i64 %39, 256
  br i1 %40, label %88, label %41

; <label>:41:                                     ; preds = %37
  %.01.off = add i32 %.01, -2
  %switch = icmp ult i32 %.01.off, 1
  br i1 %switch, label %42, label %55

; <label>:42:                                     ; preds = %41
  %43 = bitcast %struct.sockaddr* %21 to %struct.sockaddr_in*
  %44 = trunc i32 %1 to i16
  %45 = call zeroext i16 @htons(i16 zeroext %44) #10
  %46 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %43, i32 0, i32 1
  store i16 %45, i16* %46, align 2
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %48 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %43, i32 0, i32 2
  %49 = call i32 @inet_aton(i8* %47, %struct.in_addr* %48) #9
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %53, label %51

; <label>:51:                                     ; preds = %42
  %52 = bitcast %struct.sockaddr* %21 to i8*
  call void @free(i8* %52) #9
  br label %88

; <label>:53:                                     ; preds = %42
  %54 = icmp eq i32 %.01, 10
  br i1 %54, label %55, label %85

; <label>:55:                                     ; preds = %41, %53
  %56 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  %57 = getelementptr [3 x i8], [3 x i8]* @.str.2.193, i32 0, i32 0
  %58 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %56, i64 32, i8* %57, i32 %1) #9
  %59 = bitcast %struct.addrinfo* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 48, i1 false)
  %60 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %5, i32 0, i32 1
  store i32 %.01, i32* %60, align 4
  %61 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %5, i32 0, i32 2
  store i32 1, i32* %61, align 8
  %62 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %5, i32 0, i32 0
  store i32 4, i32* %62, align 8
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %64 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i32 0, i32 0
  %65 = call i32 @getaddrinfo(i8* %63, i8* %64, %struct.addrinfo* %5, %struct.addrinfo** %6)
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %74

; <label>:67:                                     ; preds = %55
  %68 = call i8* @gai_strerror(i32 %65) #9
  %69 = getelementptr [3 x i8], [3 x i8]* @.str.3.194, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %69, i8* %68)
  %70 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8
  %71 = icmp ne %struct.addrinfo* %70, null
  br i1 %71, label %72, label %88

; <label>:72:                                     ; preds = %67
  %73 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8
  call void @freeaddrinfo(%struct.addrinfo* %73) #9
  br label %88

; <label>:74:                                     ; preds = %55
  %75 = bitcast %struct.sockaddr* %21 to i8*
  %76 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8
  %77 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %76, i32 0, i32 5
  %78 = load %struct.sockaddr*, %struct.sockaddr** %77, align 8
  %79 = bitcast %struct.sockaddr* %78 to i8*
  %80 = sext i32 %.02 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %75, i8* align 2 %79, i64 %80, i1 false), !track !88
  %81 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8
  %82 = icmp ne %struct.addrinfo* %81, null
  br i1 %82, label %83, label %85

; <label>:83:                                     ; preds = %74
  %84 = load %struct.addrinfo*, %struct.addrinfo** %6, align 8
  call void @freeaddrinfo(%struct.addrinfo* %84) #9
  br label %85

; <label>:85:                                     ; preds = %74, %83, %53
  %86 = icmp ne i32* %2, null
  br i1 %86, label %87, label %88

; <label>:87:                                     ; preds = %85
  store i32 %.02, i32* %2, align 4
  br label %88

; <label>:88:                                     ; preds = %85, %87, %67, %72, %37, %18, %16, %51
  %.0 = phi %struct.sockaddr* [ null, %51 ], [ null, %16 ], [ null, %18 ], [ null, %37 ], [ null, %72 ], [ null, %67 ], [ %21, %87 ], [ %21, %85 ]
  ret %struct.sockaddr* %.0
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #3

; Function Attrs: nounwind
declare dso_local i32 @inet_aton(i8*, %struct.in_addr*) #4

declare dso_local i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #1

; Function Attrs: nounwind
declare dso_local i8* @gai_strerror(i32) #4

; Function Attrs: nounwind
declare dso_local void @freeaddrinfo(%struct.addrinfo*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @fwd_free(%struct.fwd*) #0 {
  %2 = icmp ne %struct.fwd* %0, null
  br i1 %2, label %3, label %13

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.fwd, %struct.fwd* %0, i32 0, i32 2
  %5 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8
  %6 = icmp ne %struct.sockaddr* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.fwd, %struct.fwd* %0, i32 0, i32 2
  %9 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %10 = bitcast %struct.sockaddr* %9 to i8*
  call void @free(i8* %10) #9
  br label %11

; <label>:11:                                     ; preds = %7, %3
  %12 = bitcast %struct.fwd* %0 to i8*
  call void @free(i8* %12) #9
  br label %13

; <label>:13:                                     ; preds = %11, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fwd_freev(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.fwd*
  call void @fwd_free(%struct.fwd* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.fwd* @fwd_alloc() #6 {
  %1 = call noalias i8* @malloc(i64 296) #9, !track !89
  %2 = bitcast i8* %1 to %struct.fwd*
  %3 = icmp ne %struct.fwd* %2, null
  br i1 %3, label %7, label %4

; <label>:4:                                      ; preds = %0
  %5 = getelementptr [27 x i8], [27 x i8]* @.str.5.196, i32 0, i32 0
  %6 = getelementptr [12 x i8], [12 x i8]* @.str.4.195, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %5, i8* %6)
  br label %17

; <label>:7:                                      ; preds = %0
  %8 = call noalias i8* @malloc(i64 128) #9, !track !90
  %9 = bitcast i8* %8 to %struct.sockaddr*
  %10 = getelementptr inbounds %struct.fwd, %struct.fwd* %2, i32 0, i32 2
  store %struct.sockaddr* %9, %struct.sockaddr** %10, align 8
  %11 = getelementptr inbounds %struct.fwd, %struct.fwd* %2, i32 0, i32 2
  %12 = load %struct.sockaddr*, %struct.sockaddr** %11, align 8
  %13 = icmp ne %struct.sockaddr* %12, null
  br i1 %13, label %18, label %14

; <label>:14:                                     ; preds = %7
  %15 = getelementptr [27 x i8], [27 x i8]* @.str.5.196, i32 0, i32 0
  %16 = getelementptr [12 x i8], [12 x i8]* @.str.4.195, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %15, i8* %16)
  br label %17

; <label>:17:                                     ; preds = %14, %4
  call void @fwd_free(%struct.fwd* %2)
  br label %18

; <label>:18:                                     ; preds = %7, %17
  %.0 = phi %struct.fwd* [ null, %17 ], [ %2, %7 ]
  ret %struct.fwd* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fwd_init() #0 {
  %1 = alloca i32, align 4
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %3 = load %struct.generic_list*, %struct.generic_list** %2, align 8
  %4 = icmp ne %struct.generic_list* %3, null
  br i1 %4, label %5, label %.loopexit

; <label>:5:                                      ; preds = %0
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 0
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %48
  %.01 = phi %struct.generic_list* [ %50, %48 ], [ %9, %.lr.ph.preheader ]
  call void @unroll_loop(i32 0)
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to %struct.fwd*
  %16 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 4
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 5
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 0
  %19 = getelementptr inbounds [257 x i8], [257 x i8]* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = call %struct.sockaddr* @parse_and_alloc_addr(i8* %19, i32 %21, i32* %1)
  %23 = icmp ne %struct.sockaddr* %22, null
  %24 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 0
  %25 = getelementptr inbounds [257 x i8], [257 x i8]* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  br i1 %23, label %28, label %37

; <label>:28:                                     ; preds = %.lr.ph
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6.197, i64 0, i64 0), i8* %25, i32 %27)
  %29 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 2
  %30 = load %struct.sockaddr*, %struct.sockaddr** %29, align 8
  %31 = bitcast %struct.sockaddr* %30 to i8*
  %32 = bitcast %struct.sockaddr* %22 to i8*
  %33 = load i32, i32* %1, align 4
  %34 = sext i32 %33 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %31, i8* align 2 %32, i64 %34, i1 false), !track !91
  %35 = load i32, i32* %1, align 4
  %36 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 3
  store i32 %35, i32* %36, align 8
  br label %48

; <label>:37:                                     ; preds = %.lr.ph
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.198, i64 0, i64 0), i8* %25, i32 %27)
  %38 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 2
  %39 = load %struct.sockaddr*, %struct.sockaddr** %38, align 8
  %40 = icmp ne %struct.sockaddr* %39, null
  br i1 %40, label %41, label %45

; <label>:41:                                     ; preds = %37
  %42 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 2
  %43 = load %struct.sockaddr*, %struct.sockaddr** %42, align 8
  %44 = bitcast %struct.sockaddr* %43 to i8*
  call void @free(i8* %44) #9
  br label %45

; <label>:45:                                     ; preds = %41, %37
  %46 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 2
  store %struct.sockaddr* null, %struct.sockaddr** %46, align 8
  %47 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 3
  store i32 0, i32* %47, align 8
  br label %48

; <label>:48:                                     ; preds = %28, %45
  %49 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 0
  %50 = load %struct.generic_list*, %struct.generic_list** %49, align 8
  %51 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %50, i32 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %.lr.ph, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %48
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5, %0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fwd_add(i8*, i32) #0 {
  %3 = getelementptr [17 x i8], [17 x i8]* @.str.8.199, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3)
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8
  %6 = icmp ne %struct.generic_list* %5, null
  br i1 %6, label %7, label %21

; <label>:7:                                      ; preds = %2
  %8 = call %struct.fwd* @fwd_alloc()
  %9 = icmp ne %struct.fwd* %8, null
  br i1 %9, label %10, label %21

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct.fwd, %struct.fwd* %8, i32 0, i32 0
  %12 = getelementptr inbounds [257 x i8], [257 x i8]* %11, i32 0, i32 0
  %13 = call i64 @strlcpy(i8* %12, i8* %0, i64 256)
  %14 = getelementptr inbounds %struct.fwd, %struct.fwd* %8, i32 0, i32 1
  store i32 %1, i32* %14, align 4
  %15 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %16 = load %struct.generic_list*, %struct.generic_list** %15, align 8
  %17 = bitcast %struct.fwd* %8 to i8*
  %18 = call i32 @list_add_tail(%struct.generic_list* %16, i8* %17)
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %10
  call void @fwd_free(%struct.fwd* %8)
  br label %21

; <label>:21:                                     ; preds = %10, %7, %2, %20
  %.0 = phi i32 [ -1, %20 ], [ -1, %2 ], [ -1, %7 ], [ 0, %10 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fwd_select() #0 {
  %1 = alloca [256 x i8], align 16
  %2 = getelementptr [12 x i8], [12 x i8]* @.str.10.201, i32 0, i32 0
  %3 = getelementptr [11 x i8], [11 x i8]* @.str.9.200, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8
  %6 = icmp ne %struct.generic_list* %5, null
  br i1 %6, label %52, label %7

; <label>:7:                                      ; preds = %0
  %8 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  %10 = icmp ne %struct.generic_list* %9, null
  br i1 %10, label %11, label %114

; <label>:11:                                     ; preds = %7
  %12 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %13 = load %struct.generic_list*, %struct.generic_list** %12, align 8
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 0
  %15 = load %struct.generic_list*, %struct.generic_list** %14, align 8
  %16 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  store %struct.generic_list* %15, %struct.generic_list** %16, align 8
  %17 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %18 = load %struct.generic_list*, %struct.generic_list** %17, align 8
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %18, i32 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast i8* %20 to %struct.fwd*
  call void @unroll_loop(i32 1)
  %22 = icmp ne %struct.fwd* %21, null
  br i1 %22, label %.lr.ph2.preheader, label %.critedge

.lr.ph2.preheader:                                ; preds = %11
  %23 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  br label %.lr.ph2

.lr.ph2:                                          ; preds = %.lr.ph2.preheader, %28
  %.01 = phi %struct.fwd* [ %35, %28 ], [ %21, %.lr.ph2.preheader ]
  %24 = getelementptr inbounds %struct.fwd, %struct.fwd* %.01, i32 0, i32 2
  %25 = load %struct.sockaddr*, %struct.sockaddr** %24, align 8
  %26 = icmp ne %struct.sockaddr* %25, null
  %27 = xor i1 %26, true
  br i1 %27, label %28, label %.critedge.loopexit.split.loop.exit1

; <label>:28:                                     ; preds = %.lr.ph2
  %29 = load %struct.generic_list*, %struct.generic_list** %23, align 8
  %30 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %29, i32 0, i32 0
  %31 = load %struct.generic_list*, %struct.generic_list** %30, align 8
  store %struct.generic_list* %31, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 22), align 8
  %32 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 22), align 8
  %33 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %32, i32 0, i32 2
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast i8* %34 to %struct.fwd*
  call void @unroll_loop(i32 1)
  %36 = icmp ne %struct.fwd* %35, null
  br i1 %36, label %.lr.ph2, label %.critedge.loopexit.split.loop.exit

.critedge.loopexit.split.loop.exit:               ; preds = %28
  %.lcssa = phi i8* [ %34, %28 ]
  %37 = bitcast i8* %.lcssa to %struct.fwd*
  br label %.critedge.loopexit

.critedge.loopexit.split.loop.exit1:              ; preds = %.lr.ph2
  %.0.lcssa.ph.ph2 = phi %struct.fwd* [ %.01, %.lr.ph2 ]
  br label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %.critedge.loopexit.split.loop.exit1, %.critedge.loopexit.split.loop.exit
  %.0.lcssa.ph = phi %struct.fwd* [ %37, %.critedge.loopexit.split.loop.exit ], [ %.0.lcssa.ph.ph2, %.critedge.loopexit.split.loop.exit1 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %11
  %.0.lcssa = phi %struct.fwd* [ %21, %11 ], [ %.0.lcssa.ph, %.critedge.loopexit ]
  %38 = icmp ne %struct.fwd* %.0.lcssa, null
  br i1 %38, label %39, label %43

; <label>:39:                                     ; preds = %.critedge
  %40 = getelementptr inbounds %struct.fwd, %struct.fwd* %.0.lcssa, i32 0, i32 2
  %41 = load %struct.sockaddr*, %struct.sockaddr** %40, align 8
  %42 = icmp ne %struct.sockaddr* %41, null
  br i1 %42, label %46, label %43

; <label>:43:                                     ; preds = %39, %.critedge
  %44 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  store %struct.generic_list* null, %struct.generic_list** %44, align 8
  %45 = getelementptr [25 x i8], [25 x i8]* @.str.11.202, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %45)
  br label %114

; <label>:46:                                     ; preds = %39
  %47 = getelementptr inbounds %struct.fwd, %struct.fwd* %.0.lcssa, i32 0, i32 2
  %48 = load %struct.sockaddr*, %struct.sockaddr** %47, align 8
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 0
  %50 = call i8* @sprint_inet(%struct.sockaddr* %48, i8* %49)
  %51 = getelementptr [25 x i8], [25 x i8]* @.str.12.203, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %51, i8* %50)
  br label %.loopexit

; <label>:52:                                     ; preds = %0
  %53 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %54 = load %struct.generic_list*, %struct.generic_list** %53, align 8
  %55 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %54, i32 0, i32 1
  %56 = load %struct.generic_list*, %struct.generic_list** %55, align 8
  %57 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %56, i32 0, i32 2
  %58 = load i8*, i8** %57, align 8
  %59 = icmp ne i8* %58, null
  br i1 %59, label %60, label %.loopexit

; <label>:60:                                     ; preds = %52
  %61 = call i64 @time(i64* null) #9
  %62 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %63 = load %struct.generic_list*, %struct.generic_list** %62, align 8
  %64 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %63, i32 0, i32 1
  %65 = load %struct.generic_list*, %struct.generic_list** %64, align 8
  %66 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %65, i32 0, i32 2
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast i8* %67 to %struct.fwd*
  %69 = icmp ne %struct.fwd* %68, null
  br i1 %69, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %60
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %95
  %.15 = phi %struct.fwd* [ %100, %95 ], [ %68, %.lr.ph.preheader ]
  %.014 = phi %struct.generic_list* [ %97, %95 ], [ %65, %.lr.ph.preheader ]
  call void @unroll_loop(i32 2)
  %70 = getelementptr inbounds %struct.fwd, %struct.fwd* %.15, i32 0, i32 4
  %71 = load i64, i64* %70, align 8
  %72 = sub nsw i64 %61, %71
  %73 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.fwd, %struct.fwd* %.15, i32 0, i32 2
  %76 = load %struct.sockaddr*, %struct.sockaddr** %75, align 8
  %77 = icmp ne %struct.sockaddr* %76, null
  %78 = icmp sgt i64 %72, %74
  %or.cond = and i1 %77, %78
  br i1 %or.cond, label %79, label %95

; <label>:79:                                     ; preds = %.lr.ph
  %.15.lcssa = phi %struct.fwd* [ %.15, %.lr.ph ]
  %.014.lcssa = phi %struct.generic_list* [ %.014, %.lr.ph ]
  %80 = getelementptr inbounds %struct.fwd, %struct.fwd* %.15.lcssa, i32 0, i32 2
  %81 = load %struct.sockaddr*, %struct.sockaddr** %80, align 8
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 0
  %83 = call i8* @sprint_inet(%struct.sockaddr* %81, i8* %82)
  %84 = getelementptr [26 x i8], [26 x i8]* @.str.13.204, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %84, i8* %83)
  %85 = getelementptr inbounds %struct.fwd, %struct.fwd* %.15.lcssa, i32 0, i32 4
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %struct.fwd, %struct.fwd* %.15.lcssa, i32 0, i32 5
  %87 = load i32, i32* %86, align 8
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %93

; <label>:89:                                     ; preds = %79
  %90 = getelementptr inbounds %struct.fwd, %struct.fwd* %.15.lcssa, i32 0, i32 5
  %91 = load i32, i32* %90, align 8
  %92 = add nsw i32 %91, -1
  store i32 %92, i32* %90, align 8
  br label %93

; <label>:93:                                     ; preds = %89, %79
  %94 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  store %struct.generic_list* %.014.lcssa, %struct.generic_list** %94, align 8
  br label %.loopexit

; <label>:95:                                     ; preds = %.lr.ph
  %96 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.014, i32 0, i32 1
  %97 = load %struct.generic_list*, %struct.generic_list** %96, align 8
  %98 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %97, i32 0, i32 2
  %99 = load i8*, i8** %98, align 8
  %100 = bitcast i8* %99 to %struct.fwd*
  %101 = icmp ne %struct.fwd* %100, null
  br i1 %101, label %.lr.ph, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %95
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %52, %60, %93, %46
  %102 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %103 = load %struct.generic_list*, %struct.generic_list** %102, align 8
  %104 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %103, i32 0, i32 2
  %105 = load i8*, i8** %104, align 8
  %106 = bitcast i8* %105 to %struct.fwd*
  %107 = getelementptr inbounds %struct.fwd, %struct.fwd* %106, i32 0, i32 2
  %108 = load %struct.sockaddr*, %struct.sockaddr** %107, align 8
  %109 = getelementptr inbounds [256 x i8], [256 x i8]* %1, i32 0, i32 0
  %110 = call i8* @sprint_inet(%struct.sockaddr* %108, i8* %109)
  %111 = getelementptr [21 x i8], [21 x i8]* @.str.14.205, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %111, i8* %110)
  %112 = getelementptr [10 x i8], [10 x i8]* @.str.15.206, i32 0, i32 0
  %113 = getelementptr [11 x i8], [11 x i8]* @.str.9.200, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %112, i8* %113)
  br label %114

; <label>:114:                                    ; preds = %7, %.loopexit, %43
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @fwd_mark(%struct.sockaddr*, i32) #0 {
  %3 = alloca [256 x i8], align 16
  %4 = alloca [256 x i8], align 16
  %5 = getelementptr [12 x i8], [12 x i8]* @.str.10.201, i32 0, i32 0
  %6 = getelementptr [9 x i8], [9 x i8]* @.str.16.209, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  %7 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %8 = load %struct.generic_list*, %struct.generic_list** %7, align 8
  %9 = icmp ne %struct.generic_list* %8, null
  br i1 %9, label %10, label %._crit_edge

; <label>:10:                                     ; preds = %2
  %11 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %12 = load %struct.generic_list*, %struct.generic_list** %11, align 8
  %13 = icmp ne %struct.generic_list* %12, null
  br i1 %13, label %14, label %._crit_edge

; <label>:14:                                     ; preds = %10
  %15 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %16 = load %struct.generic_list*, %struct.generic_list** %15, align 8
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 0
  %18 = load %struct.generic_list*, %struct.generic_list** %17, align 8
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %18, i32 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %.lr.ph22.preheader, label %.loopexit11

.lr.ph22.preheader:                               ; preds = %14
  %22 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %23 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %24 = bitcast %struct.sockaddr* %0 to %struct.sockaddr_in6*
  %25 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %24, i32 0, i32 3
  %26 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %25, i32 0, i32 0
  %27 = bitcast %union.anon.1* %26 to [4 x i32]*
  %28 = getelementptr inbounds [4 x i32], [4 x i32]* %27, i64 0, i64 0
  %29 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %30 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %25, i32 0, i32 0
  %31 = bitcast %union.anon.1* %30 to [4 x i32]*
  %32 = getelementptr inbounds [4 x i32], [4 x i32]* %31, i64 0, i64 1
  %33 = bitcast %struct.sockaddr* %0 to %struct.sockaddr_in*
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %33, i32 0, i32 2
  %35 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %34, i32 0, i32 0
  %36 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %25, i32 0, i32 0
  %37 = bitcast %union.anon.1* %36 to [4 x i32]*
  %38 = getelementptr inbounds [4 x i32], [4 x i32]* %37, i64 0, i64 2
  %39 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %24, i32 0, i32 1
  %40 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %33, i32 0, i32 1
  %41 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %25, i32 0, i32 0
  %42 = bitcast %union.anon.1* %41 to [4 x i32]*
  %43 = getelementptr inbounds [4 x i32], [4 x i32]* %42, i64 0, i64 3
  br label %.lr.ph22

.lr.ph22:                                         ; preds = %.lr.ph22.preheader, %132
  %.0519 = phi %struct.generic_list* [ %134, %132 ], [ %18, %.lr.ph22.preheader ]
  call void @unroll_loop(i32 38)
  %44 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.0519, i32 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %struct.fwd*
  %47 = load i16, i16* %22, align 2
  %48 = zext i16 %47 to i32
  %49 = getelementptr inbounds %struct.fwd, %struct.fwd* %46, i32 0, i32 2
  %50 = load %struct.sockaddr*, %struct.sockaddr** %49, align 8
  %51 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %50, i32 0, i32 0
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp ne i32 %48, %53
  br i1 %54, label %132, label %55

; <label>:55:                                     ; preds = %.lr.ph22
  %56 = load i16, i16* %23, align 2
  %57 = zext i16 %56 to i32
  %58 = icmp eq i32 %57, 10
  br i1 %58, label %59, label %107

; <label>:59:                                     ; preds = %55
  %60 = getelementptr inbounds %struct.fwd, %struct.fwd* %46, i32 0, i32 2
  %61 = load %struct.sockaddr*, %struct.sockaddr** %60, align 8
  %62 = bitcast %struct.sockaddr* %61 to %struct.sockaddr_in6*
  %63 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %62, i32 0, i32 3
  %64 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %63, i32 0, i32 0
  %65 = bitcast %union.anon.1* %64 to [4 x i32]*
  %66 = getelementptr inbounds [4 x i32], [4 x i32]* %65, i64 0, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = load i32, i32* %28, align 4
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %70, label %91

; <label>:70:                                     ; preds = %59
  %71 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %63, i32 0, i32 0
  %72 = bitcast %union.anon.1* %71 to [4 x i32]*
  %73 = getelementptr inbounds [4 x i32], [4 x i32]* %72, i64 0, i64 1
  %74 = load i32, i32* %73, align 4
  %75 = load i32, i32* %32, align 4
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %91

; <label>:77:                                     ; preds = %70
  %78 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %63, i32 0, i32 0
  %79 = bitcast %union.anon.1* %78 to [4 x i32]*
  %80 = getelementptr inbounds [4 x i32], [4 x i32]* %79, i64 0, i64 2
  %81 = load i32, i32* %80, align 4
  %82 = load i32, i32* %38, align 4
  %83 = icmp eq i32 %81, %82
  br i1 %83, label %84, label %91

; <label>:84:                                     ; preds = %77
  %85 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %63, i32 0, i32 0
  %86 = bitcast %union.anon.1* %85 to [4 x i32]*
  %87 = getelementptr inbounds [4 x i32], [4 x i32]* %86, i64 0, i64 3
  %88 = load i32, i32* %87, align 4
  %89 = load i32, i32* %43, align 4
  %90 = icmp eq i32 %88, %89
  br label %91

; <label>:91:                                     ; preds = %84, %77, %70, %59
  %92 = phi i1 [ false, %77 ], [ false, %70 ], [ false, %59 ], [ %90, %84 ]
  %93 = zext i1 %92 to i32
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %107

; <label>:95:                                     ; preds = %91
  %96 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %62, i32 0, i32 1
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = load i16, i16* %39, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %102, label %107

; <label>:102:                                    ; preds = %95
  %.lcssa7 = phi i8* [ %45, %95 ]
  %.05.lcssa8 = phi %struct.generic_list* [ %.0519, %95 ]
  %103 = bitcast i8* %.lcssa7 to %struct.fwd*
  %104 = getelementptr inbounds %struct.fwd, %struct.fwd* %103, i32 0, i32 5
  %105 = load i32, i32* %104, align 8
  %106 = add nsw i32 %105, %1
  store i32 %106, i32* %104, align 8
  br label %.loopexit11

; <label>:107:                                    ; preds = %91, %95, %55
  %108 = load i16, i16* %29, align 2
  %109 = zext i16 %108 to i32
  %110 = icmp eq i32 %109, 2
  br i1 %110, label %111, label %132

; <label>:111:                                    ; preds = %107
  %112 = getelementptr inbounds %struct.fwd, %struct.fwd* %46, i32 0, i32 2
  %113 = load %struct.sockaddr*, %struct.sockaddr** %112, align 8
  %114 = bitcast %struct.sockaddr* %113 to %struct.sockaddr_in*
  %115 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %114, i32 0, i32 2
  %116 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %115, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* %35, align 4
  %119 = icmp eq i32 %117, %118
  br i1 %119, label %120, label %132

; <label>:120:                                    ; preds = %111
  %121 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %114, i32 0, i32 1
  %122 = load i16, i16* %121, align 2
  %123 = zext i16 %122 to i32
  %124 = load i16, i16* %40, align 2
  %125 = zext i16 %124 to i32
  %126 = icmp eq i32 %123, %125
  br i1 %126, label %127, label %132

; <label>:127:                                    ; preds = %120
  %.lcssa6 = phi i8* [ %45, %120 ]
  %.05.lcssa9 = phi %struct.generic_list* [ %.0519, %120 ]
  %128 = bitcast i8* %.lcssa6 to %struct.fwd*
  %129 = getelementptr inbounds %struct.fwd, %struct.fwd* %128, i32 0, i32 5
  %130 = load i32, i32* %129, align 8
  %131 = add nsw i32 %130, %1
  store i32 %131, i32* %129, align 8
  br label %.loopexit11

; <label>:132:                                    ; preds = %107, %120, %111, %.lr.ph22
  %133 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.0519, i32 0, i32 0
  %134 = load %struct.generic_list*, %struct.generic_list** %133, align 8
  %135 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %134, i32 0, i32 2
  %136 = load i8*, i8** %135, align 8
  %137 = icmp ne i8* %136, null
  br i1 %137, label %.lr.ph22, label %.loopexit11.loopexit

.loopexit11.loopexit:                             ; preds = %132
  %.lcssa5 = phi i8* [ %45, %132 ]
  %.05.lcssa.ph = phi %struct.generic_list* [ %134, %132 ]
  %138 = bitcast i8* %.lcssa5 to %struct.fwd*
  br label %.loopexit11

.loopexit11:                                      ; preds = %.loopexit11.loopexit, %14, %127, %102
  %.05.lcssa = phi %struct.generic_list* [ %.05.lcssa9, %127 ], [ %.05.lcssa8, %102 ], [ %18, %14 ], [ %.05.lcssa.ph, %.loopexit11.loopexit ]
  %.14 = phi %struct.fwd* [ %103, %102 ], [ %128, %127 ], [ null, %14 ], [ %138, %.loopexit11.loopexit ]
  %139 = icmp ne %struct.fwd* %.14, null
  br i1 %139, label %140, label %._crit_edge

; <label>:140:                                    ; preds = %.loopexit11
  %141 = getelementptr inbounds %struct.fwd, %struct.fwd* %.14, i32 0, i32 5
  %142 = load i32, i32* %141, align 8
  %143 = icmp slt i32 %142, 0
  br i1 %143, label %144, label %146

; <label>:144:                                    ; preds = %140
  %145 = getelementptr inbounds %struct.fwd, %struct.fwd* %.14, i32 0, i32 5
  store i32 0, i32* %145, align 8
  br label %146

; <label>:146:                                    ; preds = %144, %140
  %147 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.05.lcssa, i32 0, i32 2
  %148 = load i8*, i8** %147, align 8
  %149 = icmp ne i8* %148, null
  br i1 %149, label %150, label %156

; <label>:150:                                    ; preds = %146
  %151 = getelementptr inbounds %struct.fwd, %struct.fwd* %.14, i32 0, i32 5
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %154 = call i8* @sprint_inet(%struct.sockaddr* %0, i8* %153)
  %155 = getelementptr [28 x i8], [28 x i8]* @.str.17.210, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %155, i32 %152, i8* %154)
  br label %156

; <label>:156:                                    ; preds = %150, %146
  %157 = getelementptr inbounds %struct.fwd, %struct.fwd* %.14, i32 0, i32 5
  %158 = load i32, i32* %157, align 8
  %159 = icmp slt i32 %158, 3
  br i1 %159, label %._crit_edge, label %160

; <label>:160:                                    ; preds = %156
  %161 = call i64 @time(i64* null) #9
  %162 = getelementptr inbounds %struct.fwd, %struct.fwd* %.14, i32 0, i32 4
  store i64 %161, i64* %162, align 8
  %163 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %164 = load %struct.generic_list*, %struct.generic_list** %163, align 8
  %165 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %164, i32 0, i32 2
  %166 = load i8*, i8** %165, align 8
  %167 = bitcast i8* %166 to %struct.fwd*
  %168 = getelementptr inbounds %struct.fwd, %struct.fwd* %167, i32 0, i32 4
  %169 = load i64, i64* %168, align 8
  %170 = icmp ne i64 %169, 0
  br i1 %170, label %171, label %._crit_edge

; <label>:171:                                    ; preds = %160
  %172 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %173 = load %struct.generic_list*, %struct.generic_list** %172, align 8
  %174 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %173, i32 0, i32 0
  %175 = load %struct.generic_list*, %struct.generic_list** %174, align 8
  %176 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %175, i32 0, i32 2
  %177 = load i8*, i8** %176, align 8
  %178 = bitcast i8* %177 to %struct.fwd*
  %179 = icmp ne %struct.fwd* %178, null
  br i1 %179, label %.lr.ph17.preheader, label %.loopexit

.lr.ph17.preheader:                               ; preds = %171
  br label %.lr.ph17

.lr.ph17:                                         ; preds = %.lr.ph17.preheader, %187
  %.015 = phi %struct.fwd* [ %192, %187 ], [ %178, %.lr.ph17.preheader ]
  %.0114 = phi %struct.generic_list* [ %189, %187 ], [ %175, %.lr.ph17.preheader ]
  call void @unroll_loop(i32 39)
  %180 = getelementptr inbounds %struct.fwd, %struct.fwd* %.015, i32 0, i32 2
  %181 = load %struct.sockaddr*, %struct.sockaddr** %180, align 8
  %182 = icmp ne %struct.sockaddr* %181, null
  br i1 %182, label %183, label %187

; <label>:183:                                    ; preds = %.lr.ph17
  %184 = getelementptr inbounds %struct.fwd, %struct.fwd* %.015, i32 0, i32 4
  %185 = load i64, i64* %184, align 8
  %186 = icmp ne i64 %185, 0
  br i1 %186, label %187, label %.loopexit.loopexit.split.loop.exit

; <label>:187:                                    ; preds = %183, %.lr.ph17
  %188 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.0114, i32 0, i32 0
  %189 = load %struct.generic_list*, %struct.generic_list** %188, align 8
  %190 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %189, i32 0, i32 2
  %191 = load i8*, i8** %190, align 8
  %192 = bitcast i8* %191 to %struct.fwd*
  %193 = icmp ne %struct.fwd* %192, null
  br i1 %193, label %.lr.ph17, label %.loopexit.loopexit.split.loop.exit1

.loopexit.loopexit.split.loop.exit:               ; preds = %183
  %.01.lcssa.ph.ph = phi %struct.generic_list* [ %.0114, %183 ]
  %.0.lcssa.ph.ph = phi %struct.fwd* [ %.015, %183 ]
  br label %.loopexit.loopexit

.loopexit.loopexit.split.loop.exit1:              ; preds = %187
  %.lcssa4 = phi i8* [ %191, %187 ]
  %.01.lcssa.ph.ph2 = phi %struct.generic_list* [ %189, %187 ]
  %194 = bitcast i8* %.lcssa4 to %struct.fwd*
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.loopexit.loopexit.split.loop.exit1, %.loopexit.loopexit.split.loop.exit
  %.01.lcssa.ph = phi %struct.generic_list* [ %.01.lcssa.ph.ph, %.loopexit.loopexit.split.loop.exit ], [ %.01.lcssa.ph.ph2, %.loopexit.loopexit.split.loop.exit1 ]
  %.0.lcssa.ph = phi %struct.fwd* [ %.0.lcssa.ph.ph, %.loopexit.loopexit.split.loop.exit ], [ %194, %.loopexit.loopexit.split.loop.exit1 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %171
  %.01.lcssa = phi %struct.generic_list* [ %175, %171 ], [ %.01.lcssa.ph, %.loopexit.loopexit ]
  %.0.lcssa = phi %struct.fwd* [ %178, %171 ], [ %.0.lcssa.ph, %.loopexit.loopexit ]
  %195 = icmp ne %struct.fwd* %.0.lcssa, null
  br i1 %195, label %196, label %200

; <label>:196:                                    ; preds = %.loopexit
  %197 = getelementptr inbounds %struct.fwd, %struct.fwd* %.0.lcssa, i32 0, i32 2
  %198 = load %struct.sockaddr*, %struct.sockaddr** %197, align 8
  %199 = icmp ne %struct.sockaddr* %198, null
  br i1 %199, label %217, label %200

; <label>:200:                                    ; preds = %196, %.loopexit
  %201 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %202 = load %struct.generic_list*, %struct.generic_list** %201, align 8
  %203 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %202, i32 0, i32 0
  %204 = load %struct.generic_list*, %struct.generic_list** %203, align 8
  %205 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %204, i32 0, i32 2
  %206 = load i8*, i8** %205, align 8
  %207 = bitcast i8* %206 to %struct.fwd*
  %208 = icmp ne %struct.fwd* %207, null
  br i1 %208, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %200
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.113 = phi %struct.fwd* [ %215, %.lr.ph ], [ %207, %.lr.ph.preheader ]
  %.1212 = phi %struct.generic_list* [ %212, %.lr.ph ], [ %204, %.lr.ph.preheader ]
  call void @unroll_loop(i32 40)
  %209 = getelementptr inbounds %struct.fwd, %struct.fwd* %.113, i32 0, i32 5
  store i32 0, i32* %209, align 8
  %210 = getelementptr inbounds %struct.fwd, %struct.fwd* %.113, i32 0, i32 4
  store i64 0, i64* %210, align 8
  %211 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.1212, i32 0, i32 0
  %212 = load %struct.generic_list*, %struct.generic_list** %211, align 8
  %213 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %212, i32 0, i32 2
  %214 = load i8*, i8** %213, align 8
  %215 = bitcast i8* %214 to %struct.fwd*
  %216 = icmp ne %struct.fwd* %215, null
  br i1 %216, label %.lr.ph, label %._crit_edge.loopexit

; <label>:217:                                    ; preds = %196
  %218 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %219 = load %struct.generic_list*, %struct.generic_list** %218, align 8
  %220 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %219, i32 0, i32 2
  %221 = load i8*, i8** %220, align 8
  %222 = bitcast i8* %221 to %struct.fwd*
  %223 = getelementptr inbounds %struct.fwd, %struct.fwd* %222, i32 0, i32 2
  %224 = load %struct.sockaddr*, %struct.sockaddr** %223, align 8
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %226 = call i8* @sprint_inet(%struct.sockaddr* %224, i8* %225)
  %227 = getelementptr inbounds %struct.fwd, %struct.fwd* %.0.lcssa, i32 0, i32 2
  %228 = load %struct.sockaddr*, %struct.sockaddr** %227, align 8
  %229 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %230 = call i8* @sprint_inet(%struct.sockaddr* %228, i8* %229)
  %231 = getelementptr [33 x i8], [33 x i8]* @.str.18.211, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %231, i8* %226, i8* %230)
  %232 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  store %struct.generic_list* %.01.lcssa, %struct.generic_list** %232, align 8
  br label %._crit_edge

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %200, %156, %.loopexit11, %2, %10, %217, %160
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.generic_list* @fwd_socketlist() #6 {
  %1 = getelementptr [12 x i8], [12 x i8]* @.str.10.201, i32 0, i32 0
  %2 = getelementptr [15 x i8], [15 x i8]* @.str.19.214, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %1, i8* %2)
  %3 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %4 = load %struct.generic_list*, %struct.generic_list** %3, align 8
  %5 = icmp ne %struct.generic_list* %4, null
  br i1 %5, label %6, label %._crit_edge

; <label>:6:                                      ; preds = %0
  %7 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %8 = load %struct.generic_list*, %struct.generic_list** %7, align 8
  %9 = icmp ne %struct.generic_list* %8, null
  br i1 %9, label %10, label %._crit_edge

; <label>:10:                                     ; preds = %6
  %11 = call %struct.generic_list* @list_init()
  %12 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %13 = load %struct.generic_list*, %struct.generic_list** %12, align 8
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 0
  %15 = load %struct.generic_list*, %struct.generic_list** %14, align 8
  %16 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8
  %18 = icmp ne %struct.generic_list* %15, %17
  br i1 %18, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %10
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %60
  %.012 = phi %struct.generic_list* [ %62, %60 ], [ %13, %.lr.ph.preheader ]
  call void @unroll_loop(i32 41)
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 2
  %20 = load i8*, i8** %19, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %22, label %60

; <label>:22:                                     ; preds = %.lr.ph
  %23 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast i8* %24 to %struct.fwd*
  %26 = getelementptr inbounds %struct.fwd, %struct.fwd* %25, i32 0, i32 2
  %27 = load %struct.sockaddr*, %struct.sockaddr** %26, align 8
  %28 = icmp ne %struct.sockaddr* %27, null
  br i1 %28, label %29, label %60

; <label>:29:                                     ; preds = %22
  %30 = getelementptr inbounds %struct.fwd, %struct.fwd* %25, i32 0, i32 4
  %31 = load i64, i64* %30, align 8
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %60, label %33

; <label>:33:                                     ; preds = %29
  %34 = call noalias i8* @malloc(i64 128) #9, !track !92
  %35 = bitcast i8* %34 to %struct.sockaddr*
  %36 = icmp ne %struct.sockaddr* %35, null
  br i1 %36, label %37, label %._crit_edge.loopexit

; <label>:37:                                     ; preds = %33
  %38 = bitcast %struct.sockaddr* %35 to i8*
  %39 = getelementptr inbounds %struct.fwd, %struct.fwd* %25, i32 0, i32 2
  %40 = load %struct.sockaddr*, %struct.sockaddr** %39, align 8
  %41 = bitcast %struct.sockaddr* %40 to i8*
  %42 = getelementptr inbounds %struct.fwd, %struct.fwd* %25, i32 0, i32 2
  %43 = load %struct.sockaddr*, %struct.sockaddr** %42, align 8
  %44 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %43, i32 0, i32 0
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = icmp eq i32 %46, 10
  br i1 %47, label %56, label %48

; <label>:48:                                     ; preds = %37
  %49 = getelementptr inbounds %struct.fwd, %struct.fwd* %25, i32 0, i32 2
  %50 = load %struct.sockaddr*, %struct.sockaddr** %49, align 8
  %51 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %50, i32 0, i32 0
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp eq i32 %53, 2
  %55 = select i1 %54, i64 16, i64 16
  br label %56

; <label>:56:                                     ; preds = %37, %48
  %57 = phi i64 [ %55, %48 ], [ 28, %37 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %38, i8* align 2 %41, i64 %57, i1 false), !track !93
  %58 = bitcast %struct.sockaddr* %35 to i8*
  %59 = call i32 @list_add_tail(%struct.generic_list* %11, i8* %58)
  br label %60

; <label>:60:                                     ; preds = %22, %29, %56, %.lr.ph
  %61 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 0
  %62 = load %struct.generic_list*, %struct.generic_list** %61, align 8
  %63 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %62, i32 0, i32 0
  %64 = load %struct.generic_list*, %struct.generic_list** %63, align 8
  %65 = load %struct.generic_list*, %struct.generic_list** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 22), align 8
  %66 = icmp ne %struct.generic_list* %64, %65
  br i1 %66, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %33, %60
  %.0.ph = phi %struct.generic_list* [ null, %33 ], [ %11, %60 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %10, %0, %6
  %.0 = phi %struct.generic_list* [ null, %6 ], [ null, %0 ], [ %11, %10 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret %struct.generic_list* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.qset* @queue_create() #6 {
  %1 = call noalias i8* @malloc(i64 16) #9, !track !94
  %2 = bitcast i8* %1 to %struct.qset*
  %3 = icmp ne %struct.qset* %2, null
  br i1 %3, label %7, label %4

; <label>:4:                                      ; preds = %0
  %5 = getelementptr [27 x i8], [27 x i8]* @.str.1.216, i32 0, i32 0
  %6 = getelementptr [15 x i8], [15 x i8]* @.str.215, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %5, i8* %6)
  br label %24

; <label>:7:                                      ; preds = %0
  %8 = call noalias i8* @malloc(i64 16) #9, !track !95
  %9 = bitcast i8* %8 to %struct.gqueue*
  %10 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 1
  store %struct.gqueue* %9, %struct.gqueue** %10, align 8
  %11 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 0
  store %struct.gqueue* %9, %struct.gqueue** %11, align 8
  %12 = icmp ne %struct.gqueue* %9, null
  br i1 %12, label %17, label %13

; <label>:13:                                     ; preds = %7
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.1.216, i32 0, i32 0
  %15 = getelementptr [15 x i8], [15 x i8]* @.str.215, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %15)
  %16 = bitcast %struct.qset* %2 to i8*
  call void @free(i8* %16) #9
  br label %24

; <label>:17:                                     ; preds = %7
  %18 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 0
  %19 = load %struct.gqueue*, %struct.gqueue** %18, align 8
  %20 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %19, i32 0, i32 0
  store %struct.gqueue* null, %struct.gqueue** %20, align 8
  %21 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 0
  %22 = load %struct.gqueue*, %struct.gqueue** %21, align 8
  %23 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %22, i32 0, i32 1
  store i8* null, i8** %23, align 8
  br label %24

; <label>:24:                                     ; preds = %4, %13, %17
  %.0 = phi %struct.qset* [ %2, %17 ], [ null, %13 ], [ null, %4 ]
  ret %struct.qset* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @enqueue(%struct.qset*, i8*) #0 {
  %3 = call noalias i8* @malloc(i64 16) #9, !track !96
  %4 = bitcast i8* %3 to %struct.gqueue*
  %5 = icmp ne %struct.gqueue* %4, null
  br i1 %5, label %9, label %6

; <label>:6:                                      ; preds = %2
  %7 = getelementptr [27 x i8], [27 x i8]* @.str.1.216, i32 0, i32 0
  %8 = getelementptr [10 x i8], [10 x i8]* @.str.2.217, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %7, i8* %8)
  br label %19

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %4, i32 0, i32 0
  store %struct.gqueue* null, %struct.gqueue** %10, align 8
  %11 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %4, i32 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 1
  %13 = load %struct.gqueue*, %struct.gqueue** %12, align 8
  %14 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %13, i32 0, i32 1
  store i8* %1, i8** %14, align 8
  %15 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 1
  %16 = load %struct.gqueue*, %struct.gqueue** %15, align 8
  %17 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %16, i32 0, i32 0
  store %struct.gqueue* %4, %struct.gqueue** %17, align 8
  %18 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 1
  store %struct.gqueue* %4, %struct.gqueue** %18, align 8
  br label %19

; <label>:19:                                     ; preds = %6, %9
  %.0 = phi i32 [ 0, %9 ], [ -1, %6 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @dequeue(%struct.qset*) #6 {
  %2 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %3 = load %struct.gqueue*, %struct.gqueue** %2, align 8
  %4 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 0
  %5 = load %struct.gqueue*, %struct.gqueue** %4, align 8
  %6 = icmp ne %struct.gqueue* %5, null
  br i1 %6, label %.preheader, label %.critedge

.preheader:                                       ; preds = %1
  %7 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %8 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %9 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %10 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %11 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %12 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 1
  br label %13

; <label>:13:                                     ; preds = %.preheader, %23
  call void @unroll_loop(i32 42)
  %14 = load %struct.gqueue*, %struct.gqueue** %8, align 8
  %15 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %14, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = load %struct.gqueue*, %struct.gqueue** %9, align 8
  %18 = load %struct.gqueue*, %struct.gqueue** %10, align 8
  %19 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %18, i32 0, i32 0
  %20 = load %struct.gqueue*, %struct.gqueue** %19, align 8
  store %struct.gqueue* %20, %struct.gqueue** %11, align 8
  %21 = bitcast %struct.gqueue* %17 to i8*
  call void @free(i8* %21) #9
  %22 = icmp ne i8* %16, null
  br i1 %22, label %.critedge.loopexit, label %23

; <label>:23:                                     ; preds = %13
  %24 = load %struct.gqueue*, %struct.gqueue** %7, align 8
  %25 = load %struct.gqueue*, %struct.gqueue** %12, align 8
  %26 = icmp ne %struct.gqueue* %24, %25
  br i1 %26, label %13, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %23, %13
  %.0.ph = phi i8* [ %16, %23 ], [ %16, %13 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %1
  %.0 = phi i8* [ null, %1 ], [ %.0.ph, %.critedge.loopexit ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @queue_peek(%struct.qset*) #0 {
  %2 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %3 = load %struct.gqueue*, %struct.gqueue** %2, align 8
  %4 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 0
  %5 = load %struct.gqueue*, %struct.gqueue** %4, align 8
  %6 = icmp ne %struct.gqueue* %5, null
  br i1 %6, label %7, label %12

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %9 = load %struct.gqueue*, %struct.gqueue** %8, align 8
  %10 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %9, i32 0, i32 1
  %11 = load i8*, i8** %10, align 8
  br label %12

; <label>:12:                                     ; preds = %1, %7
  %.0 = phi i8* [ %11, %7 ], [ null, %1 ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @queue_disable(%struct.gqueue*) #0 {
  %2 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %0, i32 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %0, i32 0, i32 1
  store i8* null, i8** %4, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @queue_destroy(%struct.qset*, void (i8*)*) #0 {
  %3 = icmp ne %struct.qset* %0, null
  br i1 %3, label %4, label %19

; <label>:4:                                      ; preds = %2
  %5 = call i8* @dequeue(%struct.qset* %0)
  %6 = icmp ne i8* %5, null
  br i1 %6, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %4
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %7 = phi i8* [ %8, %.lr.ph ], [ %5, %.lr.ph.preheader ]
  call void @unroll_loop(i32 43)
  call void %1(i8* %7)
  %8 = call i8* @dequeue(%struct.qset* %0)
  %9 = icmp ne i8* %8, null
  br i1 %9, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %4
  %10 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %11 = load %struct.gqueue*, %struct.gqueue** %10, align 8
  %12 = icmp ne %struct.gqueue* %11, null
  br i1 %12, label %13, label %17

; <label>:13:                                     ; preds = %._crit_edge
  %14 = getelementptr inbounds %struct.qset, %struct.qset* %0, i32 0, i32 0
  %15 = load %struct.gqueue*, %struct.gqueue** %14, align 8
  %16 = bitcast %struct.gqueue* %15 to i8*
  call void @free(i8* %16) #9
  br label %17

; <label>:17:                                     ; preds = %13, %._crit_edge
  %18 = bitcast %struct.qset* %0 to i8*
  call void @free(i8* %18) #9
  br label %19

; <label>:19:                                     ; preds = %2, %17
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = call %struct._IO_FILE* @fopen(i8* %0, i8* %10), !track !99
  %12 = icmp ne %struct._IO_FILE* %11, null
  br i1 %12, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* %11), !track !100
  %18 = icmp ne i8* %17, null
  br i1 %18, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %19 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.outer.backedge
  %.03.ph20 = phi i32 [ %.03.ph.be, %.outer.backedge ], [ 0, %.lr.ph.preheader ]
  %.07.ph19 = phi i32 [ %.lcssa, %.outer.backedge ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 48)
  br label %54

; <label>:51:                                     ; preds = %._crit_edge
  %52 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* %11), !track !101
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %.outer._crit_edge.loopexit

; <label>:54:                                     ; preds = %.lr.ph, %51
  %.0712 = phi i32 [ %.07.ph19, %.lr.ph ], [ %55, %51 ]
  call void @unroll_loop(i32 44)
  %55 = add nsw i32 %.0712, 1
  %56 = call i8* @strchr(i8* %19, i32 10) #8, !track !102
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %59

; <label>:58:                                     ; preds = %54
  store i8 0, i8* %56, align 1
  br label %59

; <label>:59:                                     ; preds = %58, %54
  %60 = call i8* @strchr(i8* %20, i32 10) #8, !track !103
  %61 = icmp ne i8* %60, null
  br i1 %61, label %62, label %63

; <label>:62:                                     ; preds = %59
  store i8 0, i8* %60, align 1
  br label %63

; <label>:63:                                     ; preds = %62, %59
  %64 = call i8* @strchr(i8* %21, i32 35) #8, !track !104
  %65 = icmp ne i8* %64, null
  br i1 %65, label %66, label %67

; <label>:66:                                     ; preds = %63
  store i8 0, i8* %64, align 1
  br label %67

; <label>:67:                                     ; preds = %66, %63
  %68 = call i8* @strchr(i8* %22, i32 59) #8, !track !105
  %69 = icmp ne i8* %68, null
  br i1 %69, label %70, label %71

; <label>:70:                                     ; preds = %67
  store i8 0, i8* %68, align 1
  br label %71

; <label>:71:                                     ; preds = %70, %67
  %72 = call i8* @strtok(i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %72, i8** %24, align 16
  call void @unroll_loop(i32 45)
  %73 = load i8*, i8** %25, align 8
  %74 = icmp ne i8* %73, null
  %.14 = select i1 %74, i32 1, i32 0
  %75 = select i1 %74, i1 true, i1 false
  br i1 %75, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %71
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6.preheader, %.lr.ph6
  %.15 = phi i32 [ %.1, %.lr.ph6 ], [ %.14, %.lr.ph6.preheader ]
  %76 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %77 = sext i32 %.15 to i64
  %78 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %77
  store i8* %76, i8** %78, align 8
  call void @unroll_loop(i32 45)
  %79 = sext i32 %.15 to i64
  %80 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %79
  %81 = load i8*, i8** %80, align 8
  %82 = icmp ne i8* %81, null
  %83 = add nsw i32 %.15, 1
  %84 = icmp slt i32 %83, 30
  %.1 = select i1 %82, i32 %83, i32 %.15
  %85 = select i1 %82, i1 %84, i1 false
  br i1 %85, label %.lr.ph6, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6
  %.1.lcssa.ph = phi i32 [ %.1, %.lr.ph6 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %71
  %.1.lcssa = phi i32 [ %.14, %71 ], [ %.1.lcssa.ph, %._crit_edge.loopexit ]
  %86 = load i8*, i8** %26, align 16
  %87 = icmp ne i8* %86, null
  br i1 %87, label %88, label %51

; <label>:88:                                     ; preds = %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ %.1.lcssa, %._crit_edge ]
  %.lcssa = phi i32 [ %55, %._crit_edge ]
  %89 = load i8*, i8** %27, align 16
  %90 = call i32 @strcasecmp(i8* %89, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %117, label %92

; <label>:92:                                     ; preds = %88
  %93 = icmp slt i32 %.1.lcssa.lcssa, 2
  %94 = icmp sgt i32 %.1.lcssa.lcssa, 4
  %or.cond = or i1 %93, %94
  br i1 %or.cond, label %95, label %97

; <label>:95:                                     ; preds = %92
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa)
  %96 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:97:                                     ; preds = %92
  %98 = icmp sgt i32 %.1.lcssa.lcssa, 2
  br i1 %98, label %99, label %113

; <label>:99:                                     ; preds = %97
  %100 = load i8*, i8** %33, align 8
  %101 = call i32 @strcasecmp(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %110, label %103

; <label>:103:                                    ; preds = %99
  %104 = icmp sge i32 %.1.lcssa.lcssa, 3
  br i1 %104, label %105, label %108

; <label>:105:                                    ; preds = %103
  %106 = load i8*, i8** %39, align 8
  %107 = call i32 @atoi(i8* %106) #8
  br label %113

; <label>:108:                                    ; preds = %103
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa)
  %109 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:110:                                    ; preds = %99
  %111 = load i8*, i8** %36, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa, i8* %111)
  %112 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:113:                                    ; preds = %105, %97
  %.08 = phi i32 [ %107, %105 ], [ 53, %97 ]
  %114 = load i8*, i8** %34, align 8
  %115 = call i32 @fwd_add(i8* %114, i32 %.08)
  %116 = icmp eq i32 %115, -1
  br i1 %116, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:117:                                    ; preds = %88
  %118 = load i8*, i8** %28, align 16
  %119 = call i32 @strcasecmp(i8* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %134, label %121

; <label>:121:                                    ; preds = %117
  %122 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %122, label %123, label %125

; <label>:123:                                    ; preds = %121
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa)
  %124 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:125:                                    ; preds = %121
  %126 = load i8*, i8** %31, align 8
  %127 = call i32 @conv_trick_conf(i8* %126)
  %128 = icmp ne i32 %127, 0
  %129 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %130 = load i8*, i8** %32, align 8
  br i1 %128, label %131, label %133

; <label>:131:                                    ; preds = %125
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %129, i8* %130)
  %132 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:133:                                    ; preds = %125
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %129, i8* %130)
  br label %.outer.backedge

; <label>:134:                                    ; preds = %117
  %135 = load i8*, i8** %29, align 16
  %136 = call i32 @strcasecmp(i8* %135, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %143, label %138

; <label>:138:                                    ; preds = %134
  %139 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %139, label %140, label %142

; <label>:140:                                    ; preds = %138
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa)
  %141 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:142:                                    ; preds = %138
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:143:                                    ; preds = %134
  %144 = load i8*, i8** %30, align 16
  %145 = call i32 @strcasecmp(i8* %144, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %154, label %147

; <label>:147:                                    ; preds = %143
  %148 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %148, label %149, label %151

; <label>:149:                                    ; preds = %147
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa)
  %150 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:151:                                    ; preds = %147
  %152 = load i8*, i8** %38, align 8
  %153 = call i32 @atoi(i8* %152) #8
  store i32 %153, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:154:                                    ; preds = %143
  %155 = load i8*, i8** %35, align 16
  %156 = call i32 @strcasecmp(i8* %155, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %165, label %158

; <label>:158:                                    ; preds = %154
  %159 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %159, label %160, label %162

; <label>:160:                                    ; preds = %158
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa)
  %161 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:162:                                    ; preds = %158
  %163 = load i8*, i8** %41, align 8
  %164 = call noalias i8* @strdup(i8* %163) #9, !track !108
  store i8* %164, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:165:                                    ; preds = %154
  %166 = load i8*, i8** %37, align 16
  %167 = call i32 @strcasecmp(i8* %166, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %216, label %169

; <label>:169:                                    ; preds = %165
  %170 = icmp slt i32 %.1.lcssa.lcssa, 2
  br i1 %170, label %171, label %173

; <label>:171:                                    ; preds = %169
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa)
  %172 = add nsw i32 %.03.ph20, 1
  br label %173

; <label>:173:                                    ; preds = %171, %169
  %.7 = phi i32 [ %172, %171 ], [ %.03.ph20, %169 ]
  br label %174

; <label>:174:                                    ; preds = %174, %173
  %lsr.iv = phi i64 [ %lsr.iv.next, %174 ], [ -1, %173 ]
  %175 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %176 = shl i64 %lsr.iv, 3
  %177 = inttoptr i64 %176 to i8**
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %176
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %178 = load i8*, i8** %scevgep, align 8
  %179 = icmp ne i8* %178, null
  %180 = icmp ult i64 %175, 30
  %spec.select = select i1 %179, i1 %180, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %174, label %181

; <label>:181:                                    ; preds = %174
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %174 ]
  %182 = trunc i64 %.01.lcssa.wide to i32
  %183 = add nsw i32 %182, %.1.lcssa.lcssa
  %184 = sub nsw i32 %183, 1
  %185 = icmp sgt i32 %184, 30
  br i1 %185, label %186, label %188

; <label>:186:                                    ; preds = %181
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa, i32 30)
  %187 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:188:                                    ; preds = %181
  %189 = sub nsw i32 %.1.lcssa.lcssa, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa, i32 %189)
  %190 = add nsw i32 %.1.lcssa.lcssa, -1
  %191 = add nsw i32 %182, %.1.lcssa.lcssa
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %192
  store i8* null, i8** %193, align 8
  %194 = icmp ne i32 %190, 0
  br i1 %194, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %188
  %195 = add i32 %.1.lcssa.lcssa, -1
  %196 = sext i32 %195 to i64
  %197 = sext i32 %182 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %196
  %198 = shl i64 %196, 1
  %199 = shl i64 %197, 1
  %200 = add i64 %198, %199
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %200
  %201 = sub i32 1, %.1.lcssa.lcssa
  %202 = zext i32 %201 to i64
  br label %203

; <label>:203:                                    ; preds = %.lr.ph16, %208
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %208 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %204 = load i8*, i8** %scevgep7, align 8
  %205 = call i32 @strcmp(i8* %204, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %208, label %207

; <label>:207:                                    ; preds = %203
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:208:                                    ; preds = %203
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %209 = load i8*, i8** %scevgep8, align 8
  %210 = call noalias i8* @strdup(i8* %209) #9, !track !109
  %211 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %211
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %210, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %tmp12 = trunc i64 %202 to i32
  %212 = icmp ne i32 %tmp12, %tmp
  br i1 %212, label %203, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %208
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %188, %207
  %213 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %214 = icmp ne i8* %213, null
  br i1 %214, label %215, label %.outer.backedge

; <label>:215:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:216:                                    ; preds = %165
  %217 = load i8*, i8** %40, align 16
  %218 = call i32 @strcasecmp(i8* %217, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %219 = icmp ne i32 %218, 0
  br i1 %219, label %227, label %220

; <label>:220:                                    ; preds = %216
  %221 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %221, label %222, label %224

; <label>:222:                                    ; preds = %220
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa)
  %223 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:224:                                    ; preds = %220
  %225 = load i8*, i8** %44, align 8
  %226 = call i32 @atoi(i8* %225) #8
  store i32 %226, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:227:                                    ; preds = %216
  %228 = load i8*, i8** %42, align 16
  %229 = call i32 @strcasecmp(i8* %228, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %250, label %231

; <label>:231:                                    ; preds = %227
  %232 = icmp ne i32 %.1.lcssa.lcssa, 4
  br i1 %232, label %233, label %235

; <label>:233:                                    ; preds = %231
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa)
  %234 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:235:                                    ; preds = %231
  %236 = load i8*, i8** %45, align 8
  %237 = load i8*, i8** %46, align 16
  %238 = load i8*, i8** %47, align 8
  %239 = call i32 @atoi(i8* %238) #8
  %240 = call i32 @conv_scoped_conf(i8* %236, i8* %237, i32 %239)
  %241 = icmp ne i32 %240, 0
  %242 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %243 = load i8*, i8** %48, align 8
  %244 = load i8*, i8** %49, align 16
  %245 = load i8*, i8** %50, align 8
  br i1 %241, label %246, label %248

; <label>:246:                                    ; preds = %235
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %242, i8* %243, i8* %244, i8* %245)
  %247 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:248:                                    ; preds = %235
  %249 = call i32 @atoi(i8* %245) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %242, i8* %243, i8* %244, i32 %249)
  br label %.outer.backedge

; <label>:250:                                    ; preds = %227
  %251 = load i8*, i8** %43, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa, i8* %251)
  %252 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %113, %95, %142, %140, %162, %160, %224, %222, %233, %248, %246, %250, %186, %215, %.loopexit, %149, %151, %123, %133, %131, %110, %108
  %.03.ph.be = phi i32 [ %109, %108 ], [ %112, %110 ], [ %96, %95 ], [ %.03.ph20, %113 ], [ %124, %123 ], [ %132, %131 ], [ %.03.ph20, %133 ], [ %141, %140 ], [ %.03.ph20, %142 ], [ %150, %149 ], [ %.03.ph20, %151 ], [ %161, %160 ], [ %.03.ph20, %162 ], [ %187, %186 ], [ %.7, %215 ], [ %.7, %.loopexit ], [ %223, %222 ], [ %.03.ph20, %224 ], [ %252, %250 ], [ %234, %233 ], [ %247, %246 ], [ %.03.ph20, %248 ]
  %253 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* %11), !track !110
  %254 = icmp ne i8* %253, null
  br i1 %254, label %.lr.ph, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit:                       ; preds = %51
  %.03.lcssa.ph = phi i32 [ %.03.ph20, %51 ]
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ %.03.ph.be, %.outer.backedge ]
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.03.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %255 = call i32 @fclose(%struct._IO_FILE* %11)
  %256 = icmp ne i32 %.03.lcssa, 0
  br i1 %256, label %257, label %259

; <label>:257:                                    ; preds = %.outer._crit_edge
  %258 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %258, i32 %.03.lcssa)
  br label %.loopexit1

; <label>:259:                                    ; preds = %.outer._crit_edge
  %260 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %260)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %113
  %.0.ph = phi i32 [ -1, %113 ]
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %259, %257, %13
  %.0 = phi i32 [ -1, %257 ], [ 0, %259 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #1

declare dso_local i8* @fgets(i8*, i32, %struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local i8* @strtok(i8*, i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i32 @strcasecmp(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @atoi(i8*) #3

; Function Attrs: nounwind
declare dso_local noalias i8* @strdup(i8*) #4

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_start(%struct.context.69*) #0 {
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = getelementptr [10 x i8], [10 x i8]* @.str.1.254, i32 0, i32 0
  %4 = getelementptr [20 x i8], [20 x i8]* @.str.253, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4)
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 7
  %6 = bitcast {}** %5 to i32 (%struct.context.69*)**
  store i32 (%struct.context.69*)* @tcp_request_wait_connect_process, i32 (%struct.context.69*)** %6, align 8
  %7 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 8
  %8 = bitcast {}** %7 to i32 (%struct.context.69*)**
  store i32 (%struct.context.69*)* @tcp_request_wait_connect_retry, i32 (%struct.context.69*)** %8, align 8
  %9 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 5
  %10 = load %struct.generic_list*, %struct.generic_list** %9, align 8
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 2
  %12 = load i8*, i8** %11, align 8
  %13 = bitcast i8* %12 to %struct.sockaddr*
  %14 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %13, i32 0, i32 0
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = call i32 @socket(i32 %16, i32 1, i32 0) #9
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %23, label %19

; <label>:19:                                     ; preds = %1
  %20 = bitcast i32* %2 to i8*
  %21 = call i32 (i32, i64, ...) @ioctl(i32 %17, i64 21537, i8* %20) #9
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %27

; <label>:23:                                     ; preds = %19, %1
  %24 = getelementptr [26 x i8], [26 x i8]* @.str.2.255, i32 0, i32 0
  %25 = getelementptr [20 x i8], [20 x i8]* @.str.253, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %24, i8* %25)
  %26 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %71

; <label>:27:                                     ; preds = %19
  %28 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %13, i32 0, i32 0
  %29 = load i16, i16* %28, align 2
  %30 = zext i16 %29 to i32
  %31 = icmp eq i32 %30, 10
  br i1 %31, label %39, label %32

; <label>:32:                                     ; preds = %27
  %33 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %13, i32 0, i32 0
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = icmp eq i32 %35, 2
  %37 = zext i1 %36 to i64
  %38 = select i1 %36, i64 16, i64 16
  br label %39

; <label>:39:                                     ; preds = %27, %32
  %40 = phi i64 [ %38, %32 ], [ 28, %27 ]
  %41 = trunc i64 %40 to i32
  %42 = call i32 @connect(i32 %17, %struct.sockaddr* %13, i32 %41)
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %48

; <label>:44:                                     ; preds = %39
  %45 = call i32* @__errno_location() #10
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 115
  br i1 %47, label %48, label %57

; <label>:48:                                     ; preds = %44, %39
  %49 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  store i32 %17, i32* %49, align 8
  %50 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 21
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = call i32 bitcast (i32 (i32, %struct.context*)* @ev_tcp_out_register to i32 (i32, %struct.context.69*)*)(i32 %17, %struct.context.69* %0)
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %55, label %60

; <label>:55:                                     ; preds = %48
  %56 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %71

; <label>:57:                                     ; preds = %44
  %58 = getelementptr [22 x i8], [22 x i8]* @.str.3.256, i32 0, i32 0
  %59 = getelementptr [20 x i8], [20 x i8]* @.str.253, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %58, i8* %59)
  br label %60

; <label>:60:                                     ; preds = %48, %57
  %.01 = phi i32 [ 0, %57 ], [ %52, %48 ]
  %61 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 %.01)
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %65

; <label>:63:                                     ; preds = %60
  %64 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %71

; <label>:65:                                     ; preds = %60
  %66 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 21
  %67 = load i16, i16* %66, align 2
  %68 = zext i16 %67 to i32
  %69 = getelementptr [39 x i8], [39 x i8]* @.str.4.257, i32 0, i32 0
  %70 = getelementptr [20 x i8], [20 x i8]* @.str.253, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %69, i8* %70, i32 %68)
  br label %71

; <label>:71:                                     ; preds = %65, %63, %55, %23
  %.0 = phi i32 [ %26, %23 ], [ %56, %55 ], [ %64, %63 ], [ 0, %65 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_wait_connect_process(%struct.context.69*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = getelementptr [10 x i8], [10 x i8]* @.str.1.254, i32 0, i32 0
  %5 = getelementptr [35 x i8], [35 x i8]* @.str.5.261, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %4, i8* %5)
  %6 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %7 = load %struct.ev_to_data*, %struct.ev_to_data** %6, align 8
  %8 = icmp ne %struct.ev_to_data* %7, null
  br i1 %8, label %9, label %13

; <label>:9:                                      ; preds = %1
  %10 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %11 = load %struct.ev_to_data*, %struct.ev_to_data** %10, align 8
  %12 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %11, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %12, align 8
  br label %13

; <label>:13:                                     ; preds = %9, %1
  %14 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 21
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 %16)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %21

; <label>:19:                                     ; preds = %13
  %20 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %51

; <label>:21:                                     ; preds = %13
  store i32 4, i32* %2, align 4
  %22 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %23 = load i32, i32* %22, align 8
  %24 = bitcast i32* %3 to i8*
  %25 = call i32 @getsockopt(i32 %23, i32 1, i32 4, i8* %24, i32* %2) #9
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %29

; <label>:27:                                     ; preds = %21
  %28 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %51

; <label>:29:                                     ; preds = %21
  %30 = load i32, i32* %3, align 4
  switch i32 %30, label %49 [
    i32 0, label %31
    i32 110, label %39
    i32 111, label %43
    i32 101, label %46
  ]

; <label>:31:                                     ; preds = %29
  %32 = getelementptr [26 x i8], [26 x i8]* @.str.6.262, i32 0, i32 0
  %33 = getelementptr [35 x i8], [35 x i8]* @.str.5.261, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %32, i8* %33)
  %34 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 7
  %35 = bitcast {}** %34 to i32 (%struct.context.69*)**
  store i32 (%struct.context.69*)* @tcp_request_writing_process, i32 (%struct.context.69*)** %35, align 8
  %36 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 8
  %37 = bitcast {}** %36 to i32 (%struct.context.69*)**
  store i32 (%struct.context.69*)* @tcp_request_writing_retry, i32 (%struct.context.69*)** %37, align 8
  %38 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  store i8* null, i8** %38, align 8
  br label %51

; <label>:39:                                     ; preds = %29
  %40 = getelementptr [36 x i8], [36 x i8]* @.str.7.263, i32 0, i32 0
  %41 = getelementptr [35 x i8], [35 x i8]* @.str.5.261, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %40, i8* %41)
  %42 = call i32 @tcp_request_wait_connect_retry(%struct.context.69* %0)
  br label %51

; <label>:43:                                     ; preds = %29
  %44 = getelementptr [33 x i8], [33 x i8]* @.str.8.264, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %44)
  %45 = call i32 @tcp_request_wait_connect_retry(%struct.context.69* %0)
  br label %51

; <label>:46:                                     ; preds = %29
  %47 = getelementptr [26 x i8], [26 x i8]* @.str.9.265, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %47)
  %48 = call i32 @tcp_request_wait_connect_retry(%struct.context.69* %0)
  br label %51

; <label>:49:                                     ; preds = %29
  %50 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %51

; <label>:51:                                     ; preds = %49, %46, %43, %39, %31, %27, %19
  %.0 = phi i32 [ %20, %19 ], [ %28, %27 ], [ %50, %49 ], [ %48, %46 ], [ %45, %43 ], [ %42, %39 ], [ 0, %31 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_wait_connect_retry(%struct.context.69*) #0 {
  %2 = alloca i32, align 4
  store i32 1, i32* %2, align 4
  %3 = getelementptr [10 x i8], [10 x i8]* @.str.1.254, i32 0, i32 0
  %4 = getelementptr [31 x i8], [31 x i8]* @.str.10.258, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4)
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8
  %7 = icmp ne %struct.ev_to_data* %6, null
  br i1 %7, label %8, label %12

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %10 = load %struct.ev_to_data*, %struct.ev_to_data** %9, align 8
  %11 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %10, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %11, align 8
  br label %12

; <label>:12:                                     ; preds = %8, %1
  %13 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %14 = load i32, i32* %13, align 8
  %15 = icmp sge i32 %14, 0
  br i1 %15, label %16, label %24

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %18 = load i32, i32* %17, align 8
  %19 = call i32 @ev_tcp_out_remove(i32 %18)
  %20 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %21 = load i32, i32* %20, align 8
  %22 = call i32 @close(i32 %21)
  %23 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  store i32 -1, i32* %23, align 8
  br label %24

; <label>:24:                                     ; preds = %16, %12
  %25 = call i32 bitcast (i32 (%struct.context*)* @request_retry to i32 (%struct.context.69*)*)(%struct.context.69* %0)
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %29

; <label>:27:                                     ; preds = %24
  %28 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %98

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 5
  %31 = load %struct.generic_list*, %struct.generic_list** %30, align 8
  %32 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %31, i32 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast i8* %33 to %struct.sockaddr*
  %35 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %34, i32 0, i32 0
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = call i32 @socket(i32 %37, i32 1, i32 0) #9
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %44, label %40

; <label>:40:                                     ; preds = %29
  %41 = bitcast i32* %2 to i8*
  %42 = call i32 (i32, i64, ...) @ioctl(i32 %38, i64 21537, i8* %41) #9
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %48

; <label>:44:                                     ; preds = %40, %29
  %45 = getelementptr [26 x i8], [26 x i8]* @.str.2.255, i32 0, i32 0
  %46 = getelementptr [31 x i8], [31 x i8]* @.str.10.258, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %45, i8* %46)
  %47 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %98

; <label>:48:                                     ; preds = %40
  %49 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %34, i32 0, i32 0
  %50 = load i16, i16* %49, align 2
  %51 = zext i16 %50 to i32
  %52 = icmp eq i32 %51, 10
  br i1 %52, label %60, label %53

; <label>:53:                                     ; preds = %48
  %54 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %34, i32 0, i32 0
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = icmp eq i32 %56, 2
  %58 = zext i1 %57 to i64
  %59 = select i1 %57, i64 16, i64 16
  br label %60

; <label>:60:                                     ; preds = %48, %53
  %61 = phi i64 [ %59, %53 ], [ 28, %48 ]
  %62 = trunc i64 %61 to i32
  %63 = call i32 @connect(i32 %38, %struct.sockaddr* %34, i32 %62)
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %69

; <label>:65:                                     ; preds = %60
  %66 = call i32* @__errno_location() #10
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 115
  br i1 %68, label %69, label %80

; <label>:69:                                     ; preds = %65, %60
  %70 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  store i32 %38, i32* %70, align 8
  %71 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 21
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %75 = load i32, i32* %74, align 8
  %76 = call i32 bitcast (i32 (i32, %struct.context*)* @ev_tcp_out_register to i32 (i32, %struct.context.69*)*)(i32 %75, %struct.context.69* %0)
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %78, label %80

; <label>:78:                                     ; preds = %69
  %79 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %98

; <label>:80:                                     ; preds = %69, %65
  %.01 = phi i32 [ 0, %65 ], [ %73, %69 ]
  %81 = icmp ne i32 %.01, 0
  br i1 %81, label %87, label %82

; <label>:82:                                     ; preds = %80
  %83 = getelementptr [26 x i8], [26 x i8]* @.str.11.259, i32 0, i32 0
  %84 = getelementptr [31 x i8], [31 x i8]* @.str.10.258, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %83, i8* %84)
  %85 = getelementptr [32 x i8], [32 x i8]* @.str.12.260, i32 0, i32 0
  %86 = getelementptr [31 x i8], [31 x i8]* @.str.10.258, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %85, i8* %86)
  br label %87

; <label>:87:                                     ; preds = %82, %80
  %88 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 %.01)
  %89 = icmp slt i32 %88, 0
  br i1 %89, label %90, label %92

; <label>:90:                                     ; preds = %87
  %91 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %98

; <label>:92:                                     ; preds = %87
  %93 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 21
  %94 = load i16, i16* %93, align 2
  %95 = zext i16 %94 to i32
  %96 = getelementptr [39 x i8], [39 x i8]* @.str.4.257, i32 0, i32 0
  %97 = getelementptr [31 x i8], [31 x i8]* @.str.10.258, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %96, i8* %97, i32 %95)
  br label %98

; <label>:98:                                     ; preds = %92, %90, %78, %44, %27
  %.0 = phi i32 [ %28, %27 ], [ %47, %44 ], [ %79, %78 ], [ %91, %90 ], [ 0, %92 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @socket(i32, i32, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #4

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #5

; Function Attrs: nounwind
declare dso_local i32 @getsockopt(i32, i32, i32, i8*, i32*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_writing_process(%struct.context.69*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.254, i32 0, i32 0
  %3 = getelementptr [28 x i8], [28 x i8]* @.str.13.267, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %5 = load %struct.ev_to_data*, %struct.ev_to_data** %4, align 8
  %6 = icmp ne %struct.ev_to_data* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %9 = load %struct.ev_to_data*, %struct.ev_to_data** %8, align 8
  %10 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %9, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %10, align 8
  br label %11

; <label>:11:                                     ; preds = %7, %1
  %12 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 21
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %37, label %17

; <label>:17:                                     ; preds = %11
  %18 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %19 = load i32, i32* %18, align 8
  %20 = call i32 @tcp_writemesg(%struct.context.69* %0, i32 %19)
  switch i32 %20, label %37 [
    i32 0, label %21
    i32 1, label %24
  ]

; <label>:21:                                     ; preds = %17
  %22 = getelementptr [29 x i8], [29 x i8]* @.str.14.268, i32 0, i32 0
  %23 = getelementptr [28 x i8], [28 x i8]* @.str.13.267, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %22, i8* %23)
  br label %39

; <label>:24:                                     ; preds = %17
  %25 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %26 = load i32, i32* %25, align 8
  %27 = call i32 bitcast (i32 (i32, %struct.context*)* @ev_tcp_conn_in_register to i32 (i32, %struct.context.69*)*)(i32 %26, %struct.context.69* %0)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %37, label %29

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %31 = load i32, i32* %30, align 8
  %32 = call i32 @ev_tcp_out_remove(i32 %31)
  %33 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 7
  %34 = bitcast {}** %33 to i32 (%struct.context.69*)**
  store i32 (%struct.context.69*)* @tcp_request_readlen_process, i32 (%struct.context.69*)** %34, align 8
  %35 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 8
  %36 = bitcast {}** %35 to i32 (%struct.context.69*)**
  store i32 (%struct.context.69*)* @tcp_request_readlen_retry, i32 (%struct.context.69*)** %36, align 8
  br label %39

; <label>:37:                                     ; preds = %24, %17, %11
  %38 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %39

; <label>:39:                                     ; preds = %37, %29, %21
  %.0 = phi i32 [ %38, %37 ], [ 0, %29 ], [ 0, %21 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_writing_retry(%struct.context.69*) #0 {
  %2 = getelementptr [41 x i8], [41 x i8]* @.str.15.266, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %2)
  %3 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  ret i32 %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_writemesg(%struct.context.69*, i32) #0 {
  %3 = alloca i16, align 2
  %4 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %24, label %7

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 17
  %9 = load i32, i32* %8, align 8
  %10 = trunc i32 %9 to i16
  %11 = call zeroext i16 @htons(i16 zeroext %10) #10
  store i16 %11, i16* %3, align 2
  %12 = bitcast i16* %3 to i8*
  %13 = call i64 @write(i32 %1, i8* %12, i64 2)
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %19

; <label>:16:                                     ; preds = %7
  %17 = getelementptr [28 x i8], [28 x i8]* @.str.28.281, i32 0, i32 0
  %18 = getelementptr [16 x i8], [16 x i8]* @.str.27.280, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %17, i8* %18)
  br label %60

; <label>:19:                                     ; preds = %7
  %20 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %21 = bitcast %union.anon.0* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  store i8* %22, i8** %23, align 8
  br label %60

; <label>:24:                                     ; preds = %2
  %25 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 17
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %33 = bitcast %union.anon.0* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = ptrtoint i8* %31 to i64
  %36 = ptrtoint i8* %34 to i64
  %37 = sub i64 %35, %36
  %38 = sub nsw i64 %29, %37
  %39 = call i64 @write(i32 %1, i8* %26, i64 %38)
  %40 = trunc i64 %39 to i32
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %45

; <label>:42:                                     ; preds = %24
  %43 = getelementptr [21 x i8], [21 x i8]* @.str.29.282, i32 0, i32 0
  %44 = getelementptr [16 x i8], [16 x i8]* @.str.27.280, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %43, i8* %44)
  br label %60

; <label>:45:                                     ; preds = %24
  %46 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %47 = load i8*, i8** %46, align 8
  %48 = sext i32 %40 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8* %49, i8** %46, align 8
  %50 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %53 = bitcast %union.anon.0* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 17
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %54, i64 %57
  %59 = icmp ult i8* %51, %58
  %. = select i1 %59, i32 0, i32 1
  br label %60

; <label>:60:                                     ; preds = %45, %42, %19, %16
  %.0 = phi i32 [ -1, %42 ], [ -1, %16 ], [ 0, %19 ], [ %., %45 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_readlen_process(%struct.context.69*) #0 {
  %2 = alloca i16, align 2
  %3 = getelementptr [10 x i8], [10 x i8]* @.str.1.254, i32 0, i32 0
  %4 = getelementptr [30 x i8], [30 x i8]* @.str.16.273, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4)
  %5 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8
  %7 = icmp ne %struct.ev_to_data* %6, null
  br i1 %7, label %8, label %12

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %10 = load %struct.ev_to_data*, %struct.ev_to_data** %9, align 8
  %11 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %10, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %11, align 8
  br label %12

; <label>:12:                                     ; preds = %8, %1
  %13 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 21
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 %15)
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %20

; <label>:18:                                     ; preds = %12
  %19 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %65

; <label>:20:                                     ; preds = %12
  %21 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %22 = load i32, i32* %21, align 8
  %23 = bitcast i16* %2 to i8*
  %24 = call i64 @read(i32 %22, i8* %23, i64 2)
  %25 = icmp ult i64 %24, 2
  br i1 %25, label %26, label %29

; <label>:26:                                     ; preds = %20
  %27 = getelementptr [38 x i8], [38 x i8]* @.str.17.274, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %27)
  %28 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %65

; <label>:29:                                     ; preds = %20
  %30 = load i16, i16* %2, align 2
  %31 = call zeroext i16 @ntohs(i16 zeroext %30) #10
  store i16 %31, i16* %2, align 2
  %32 = load i16, i16* %2, align 2
  %33 = zext i16 %32 to i32
  %34 = getelementptr [21 x i8], [21 x i8]* @.str.18.275, i32 0, i32 0
  %35 = getelementptr [30 x i8], [30 x i8]* @.str.16.273, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %34, i8* %35, i32 %33)
  %36 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %37 = bitcast %union.anon.0* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  call void @free(i8* %38) #9
  %39 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 17
  store i32 0, i32* %39, align 8
  %40 = load i16, i16* %2, align 2
  %41 = zext i16 %40 to i64
  %42 = call noalias i8* @malloc(i64 %41) #9, !track !111
  %43 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %44 = bitcast %union.anon.0* %43 to i8**
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %46 = bitcast %union.anon.0* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = icmp ne i8* %47, null
  br i1 %48, label %53, label %49

; <label>:49:                                     ; preds = %29
  %50 = getelementptr [27 x i8], [27 x i8]* @.str.19.276, i32 0, i32 0
  %51 = getelementptr [30 x i8], [30 x i8]* @.str.16.273, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %50, i8* %51)
  %52 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %65

; <label>:53:                                     ; preds = %29
  %54 = load i16, i16* %2, align 2
  %55 = zext i16 %54 to i32
  %56 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 17
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %58 = bitcast %union.anon.0* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  store i8* %59, i8** %60, align 8
  %61 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 7
  %62 = bitcast {}** %61 to i32 (%struct.context.69*)**
  store i32 (%struct.context.69*)* @tcp_request_reading_process, i32 (%struct.context.69*)** %62, align 8
  %63 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 8
  %64 = bitcast {}** %63 to i32 (%struct.context.69*)**
  store i32 (%struct.context.69*)* @tcp_request_reading_retry, i32 (%struct.context.69*)** %64, align 8
  br label %65

; <label>:65:                                     ; preds = %53, %49, %26, %18
  %.0 = phi i32 [ %19, %18 ], [ %28, %26 ], [ 0, %53 ], [ %52, %49 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_readlen_retry(%struct.context.69*) #0 {
  %2 = getelementptr [38 x i8], [38 x i8]* @.str.21.270, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %2)
  %3 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 12
  %4 = load i16, i16* %3, align 2
  %5 = zext i16 %4 to i32
  %6 = icmp eq i32 %5, 28
  br i1 %6, label %12, label %7

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 12
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp eq i32 %10, 38
  br i1 %11, label %12, label %56

; <label>:12:                                     ; preds = %7, %1
  %13 = getelementptr [41 x i8], [41 x i8]* @.str.22.271, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %13)
  %14 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 13
  %15 = load %struct.generic_list*, %struct.generic_list** %14, align 8
  call void @list_destroy(%struct.generic_list* %15, void (i8*)* @rrset_freev)
  %16 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 14
  %17 = load %struct.generic_list*, %struct.generic_list** %16, align 8
  call void @list_destroy(%struct.generic_list* %17, void (i8*)* @rrset_freev)
  %18 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 15
  %19 = load %struct.generic_list*, %struct.generic_list** %18, align 8
  call void @list_destroy(%struct.generic_list* %19, void (i8*)* @rrset_freev)
  %20 = call %struct.generic_list* @list_init()
  %21 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 13
  store %struct.generic_list* %20, %struct.generic_list** %21, align 8
  %22 = call %struct.generic_list* @list_init()
  %23 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 14
  store %struct.generic_list* %22, %struct.generic_list** %23, align 8
  %24 = call %struct.generic_list* @list_init()
  %25 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 15
  store %struct.generic_list* %24, %struct.generic_list** %25, align 8
  %26 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 13
  %27 = load %struct.generic_list*, %struct.generic_list** %26, align 8
  %28 = icmp ne %struct.generic_list* %27, null
  br i1 %28, label %29, label %37

; <label>:29:                                     ; preds = %12
  %30 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 14
  %31 = load %struct.generic_list*, %struct.generic_list** %30, align 8
  %32 = icmp ne %struct.generic_list* %31, null
  br i1 %32, label %33, label %37

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 15
  %35 = load %struct.generic_list*, %struct.generic_list** %34, align 8
  %36 = icmp ne %struct.generic_list* %35, null
  br i1 %36, label %39, label %37

; <label>:37:                                     ; preds = %33, %29, %12
  %38 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %58

; <label>:39:                                     ; preds = %33
  %40 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 0
  %41 = load %struct.context.69*, %struct.context.69** %40, align 8
  %42 = icmp ne %struct.context.69* %41, null
  br i1 %42, label %43, label %54

; <label>:43:                                     ; preds = %39
  %44 = getelementptr [27 x i8], [27 x i8]* @.str.23.272, i32 0, i32 0
  %45 = getelementptr [28 x i8], [28 x i8]* @.str.20.269, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %44, i8* %45)
  %46 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 0
  %47 = load %struct.context.69*, %struct.context.69** %46, align 8
  %48 = getelementptr inbounds %struct.context.69, %struct.context.69* %47, i32 0, i32 7
  %49 = bitcast {}** %48 to i32 (%struct.context.69*)**
  %50 = load i32 (%struct.context.69*)*, i32 (%struct.context.69*)** %49, align 8
  %51 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 0
  %52 = load %struct.context.69*, %struct.context.69** %51, align 8
  %53 = call i32 %50(%struct.context.69* %52)
  br label %54

; <label>:54:                                     ; preds = %43, %39
  %55 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context.69*)*)(%struct.context.69* %0)
  br label %58

; <label>:56:                                     ; preds = %7
  %57 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %58

; <label>:58:                                     ; preds = %56, %54, %37
  %.0 = phi i32 [ 0, %54 ], [ %38, %37 ], [ %57, %56 ]
  ret i32 %.0
}

declare dso_local i64 @read(i32, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_reading_process(%struct.context.69*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.254, i32 0, i32 0
  %3 = getelementptr [30 x i8], [30 x i8]* @.str.24.278, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %5 = load %struct.ev_to_data*, %struct.ev_to_data** %4, align 8
  %6 = icmp ne %struct.ev_to_data* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 6
  %9 = load %struct.ev_to_data*, %struct.ev_to_data** %8, align 8
  %10 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %9, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %10, align 8
  br label %11

; <label>:11:                                     ; preds = %7, %1
  %12 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 21
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %57, label %17

; <label>:17:                                     ; preds = %11
  %18 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 23
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 17
  %23 = load i32, i32* %22, align 8
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %28 = bitcast %union.anon.0* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = ptrtoint i8* %26 to i64
  %31 = ptrtoint i8* %29 to i64
  %32 = sub i64 %30, %31
  %33 = sub nsw i64 %24, %32
  %34 = call i64 @read(i32 %19, i8* %21, i64 %33)
  %35 = trunc i64 %34 to i32
  %36 = icmp sle i32 %35, 0
  br i1 %36, label %37, label %40

; <label>:37:                                     ; preds = %17
  %38 = getelementptr [27 x i8], [27 x i8]* @.str.25.279, i32 0, i32 0
  %39 = getelementptr [30 x i8], [30 x i8]* @.str.24.278, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %38, i8* %39)
  br label %57

; <label>:40:                                     ; preds = %17
  %41 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %42 = load i8*, i8** %41, align 8
  %43 = sext i32 %35 to i64
  %44 = getelementptr inbounds i8, i8* %42, i64 %43
  store i8* %44, i8** %41, align 8
  %45 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 18
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 16
  %48 = bitcast %union.anon.0* %47 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %struct.context.69, %struct.context.69* %0, i32 0, i32 17
  %51 = load i32, i32* %50, align 8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  %54 = icmp ult i8* %46, %53
  br i1 %54, label %59, label %55

; <label>:55:                                     ; preds = %40
  %56 = call i32 bitcast (i32 (%struct.context*)* @request_finish to i32 (%struct.context.69*)*)(%struct.context.69* %0)
  br label %59

; <label>:57:                                     ; preds = %37, %11
  %58 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  br label %59

; <label>:59:                                     ; preds = %40, %57, %55
  %.0 = phi i32 [ %58, %57 ], [ %56, %55 ], [ 0, %40 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_request_reading_retry(%struct.context.69*) #0 {
  %2 = getelementptr [36 x i8], [36 x i8]* @.str.26.277, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %2)
  %3 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.69*, i32)*)(%struct.context.69* %0, i32 -1)
  ret i32 %3
}

declare dso_local i64 @write(i32, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_start(i32, %struct.sockaddr*) #0 {
  %3 = getelementptr [10 x i8], [10 x i8]* @.str.1.286, i32 0, i32 0
  %4 = getelementptr [21 x i8], [21 x i8]* @.str.285, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4)
  %5 = call %struct.context* bitcast (%struct.context.19* ()* @context_create to %struct.context* ()*)()
  %6 = icmp ne %struct.context* %5, null
  br i1 %6, label %9, label %7

; <label>:7:                                      ; preds = %2
  %8 = call i32 @response_abort(%struct.context* %5, i32 -1)
  br label %43

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 7
  store i32 (%struct.context*)* @tcp_response_readlen_process, i32 (%struct.context*)** %10, align 8
  %11 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 8
  store i32 (%struct.context*)* @tcp_response_readlen_retry, i32 (%struct.context*)** %11, align 8
  %12 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 22
  %13 = load %struct.sockaddr*, %struct.sockaddr** %12, align 8
  %14 = bitcast %struct.sockaddr* %13 to i8*
  %15 = bitcast %struct.sockaddr* %1 to i8*
  %16 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i32 0, i32 0
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = icmp eq i32 %18, 10
  br i1 %19, label %27, label %20

; <label>:20:                                     ; preds = %9
  %21 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %1, i32 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = icmp eq i32 %23, 2
  %25 = zext i1 %24 to i64
  %26 = select i1 %24, i64 16, i64 16
  br label %27

; <label>:27:                                     ; preds = %9, %20
  %28 = phi i64 [ %26, %20 ], [ 28, %9 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %14, i8* align 2 %15, i64 %28, i1 false), !track !112
  %29 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 23
  store i32 %0, i32* %29, align 8
  %30 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 21
  store i16 60, i16* %30, align 2
  %31 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 21
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %5, i32 %33)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %41, label %36

; <label>:36:                                     ; preds = %27
  %37 = getelementptr inbounds %struct.context, %struct.context* %5, i32 0, i32 23
  %38 = load i32, i32* %37, align 8
  %39 = call i32 @ev_tcp_conn_in_register(i32 %38, %struct.context* %5)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %43

; <label>:41:                                     ; preds = %36, %27
  %42 = call i32 @response_abort(%struct.context* %5, i32 -1)
  br label %43

; <label>:43:                                     ; preds = %36, %41, %7
  %.0 = phi i32 [ %42, %41 ], [ %8, %7 ], [ 0, %36 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_readlen_process(%struct.context*) #0 {
  %2 = alloca i16, align 2
  %3 = getelementptr [10 x i8], [10 x i8]* @.str.1.286, i32 0, i32 0
  %4 = getelementptr [31 x i8], [31 x i8]* @.str.2.289, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4)
  %5 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %6 = load %struct.ev_to_data*, %struct.ev_to_data** %5, align 8
  %7 = icmp ne %struct.ev_to_data* %6, null
  br i1 %7, label %8, label %12

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %10 = load %struct.ev_to_data*, %struct.ev_to_data** %9, align 8
  %11 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %10, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %11, align 8
  br label %12

; <label>:12:                                     ; preds = %8, %1
  %13 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %0, i32 %15)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %20

; <label>:18:                                     ; preds = %12
  %19 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %67

; <label>:20:                                     ; preds = %12
  %21 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %22 = load i32, i32* %21, align 8
  %23 = bitcast i16* %2 to i8*
  %24 = call i64 @read(i32 %22, i8* %23, i64 2)
  %25 = icmp ult i64 %24, 2
  br i1 %25, label %26, label %30

; <label>:26:                                     ; preds = %20
  %27 = getelementptr [35 x i8], [35 x i8]* @.str.3.290, i32 0, i32 0
  %28 = getelementptr [31 x i8], [31 x i8]* @.str.2.289, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %27, i8* %28)
  %29 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %67

; <label>:30:                                     ; preds = %20
  %31 = load i16, i16* %2, align 2
  %32 = call zeroext i16 @ntohs(i16 zeroext %31) #10
  store i16 %32, i16* %2, align 2
  %33 = load i16, i16* %2, align 2
  %34 = zext i16 %33 to i32
  %35 = getelementptr [21 x i8], [21 x i8]* @.str.4.291, i32 0, i32 0
  %36 = getelementptr [31 x i8], [31 x i8]* @.str.2.289, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %35, i8* %36, i32 %34)
  %37 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %38 = bitcast %union.anon.0* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp ne i8* %39, null
  br i1 %40, label %41, label %45

; <label>:41:                                     ; preds = %30
  %42 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %43 = bitcast %union.anon.0* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  call void @free(i8* %44) #9
  br label %45

; <label>:45:                                     ; preds = %41, %30
  %46 = load i16, i16* %2, align 2
  %47 = zext i16 %46 to i64
  %48 = call noalias i8* @malloc(i64 %47) #9, !track !113
  %49 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %50 = bitcast %union.anon.0* %49 to i8**
  store i8* %48, i8** %50, align 8
  %51 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %52 = bitcast %union.anon.0* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp ne i8* %53, null
  br i1 %54, label %57, label %55

; <label>:55:                                     ; preds = %45
  %56 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %67

; <label>:57:                                     ; preds = %45
  %58 = load i16, i16* %2, align 2
  %59 = zext i16 %58 to i32
  %60 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %62 = bitcast %union.anon.0* %61 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  store i8* %63, i8** %64, align 8
  %65 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 7
  store i32 (%struct.context*)* @tcp_response_reading_process, i32 (%struct.context*)** %65, align 8
  %66 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 8
  store i32 (%struct.context*)* @tcp_response_reading_retry, i32 (%struct.context*)** %66, align 8
  br label %67

; <label>:67:                                     ; preds = %57, %55, %26, %18
  %.0 = phi i32 [ %19, %18 ], [ %29, %26 ], [ 0, %57 ], [ %56, %55 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_readlen_retry(%struct.context*) #0 {
  %2 = getelementptr [42 x i8], [42 x i8]* @.str.6.288, i32 0, i32 0
  %3 = getelementptr [29 x i8], [29 x i8]* @.str.5.287, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %2, i8* %3)
  %4 = call i32 @response_abort(%struct.context* %0, i32 -1)
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_reading_process(%struct.context*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.286, i32 0, i32 0
  %3 = getelementptr [31 x i8], [31 x i8]* @.str.7.292, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %5 = load %struct.ev_to_data*, %struct.ev_to_data** %4, align 8
  %6 = icmp ne %struct.ev_to_data* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %9 = load %struct.ev_to_data*, %struct.ev_to_data** %8, align 8
  %10 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %9, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %10, align 8
  br label %11

; <label>:11:                                     ; preds = %7, %1
  %12 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %0, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %11
  %18 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %148

; <label>:19:                                     ; preds = %11
  %20 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %25 = load i32, i32* %24, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %30 = bitcast %union.anon.0* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = ptrtoint i8* %28 to i64
  %33 = ptrtoint i8* %31 to i64
  %34 = sub i64 %32, %33
  %35 = sub nsw i64 %26, %34
  %36 = call i64 @read(i32 %21, i8* %23, i64 %35)
  %37 = trunc i64 %36 to i32
  %38 = icmp sle i32 %37, 0
  br i1 %38, label %39, label %41

; <label>:39:                                     ; preds = %19
  %40 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %148

; <label>:41:                                     ; preds = %19
  %42 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  %43 = load i8*, i8** %42, align 8
  %44 = sext i32 %37 to i64
  %45 = getelementptr inbounds i8, i8* %43, i64 %44
  store i8* %45, i8** %42, align 8
  %46 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %49 = bitcast %union.anon.0* %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  %55 = icmp ult i8* %47, %54
  br i1 %55, label %56, label %71

; <label>:56:                                     ; preds = %41
  %57 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %58 = bitcast %union.anon.0* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %61 = load i32, i32* %60, align 8
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %59, i64 %62
  %64 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  %65 = load i8*, i8** %64, align 8
  %66 = ptrtoint i8* %63 to i64
  %67 = ptrtoint i8* %65 to i64
  %68 = sub i64 %66, %67
  %69 = getelementptr [32 x i8], [32 x i8]* @.str.8.293, i32 0, i32 0
  %70 = getelementptr [31 x i8], [31 x i8]* @.str.7.292, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %69, i8* %70, i64 %68)
  br label %148

; <label>:71:                                     ; preds = %41
  %72 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %73 = load i32, i32* %72, align 8
  %74 = call i32 @ev_tcp_conn_in_remove(i32 %73)
  %75 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %76 = bitcast %union.anon.0* %75 to %struct.mesg_hdr**
  %77 = load %struct.mesg_hdr*, %struct.mesg_hdr** %76, align 8
  %78 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %77, i32 0, i32 1
  %79 = load i16, i16* %78, align 2
  %80 = lshr i16 %79, 3
  %81 = and i16 %80, 15
  %82 = trunc i16 %81 to i8
  %83 = zext i8 %82 to i32
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %126

; <label>:85:                                     ; preds = %71
  %86 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %87 = load %struct.ev_to_data*, %struct.ev_to_data** %86, align 8
  %88 = icmp ne %struct.ev_to_data* %87, null
  br i1 %88, label %89, label %93

; <label>:89:                                     ; preds = %85
  %90 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %91 = load %struct.ev_to_data*, %struct.ev_to_data** %90, align 8
  %92 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %91, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %92, align 8
  br label %93

; <label>:93:                                     ; preds = %89, %85
  %94 = call i32 @request_start(%struct.context* %0, i32 0)
  switch i32 %94, label %116 [
    i32 0, label %95
    i32 1, label %106
  ]

; <label>:95:                                     ; preds = %93
  %96 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %97 = load %struct.ev_to_data*, %struct.ev_to_data** %96, align 8
  %98 = icmp ne %struct.ev_to_data* %97, null
  br i1 %98, label %99, label %103

; <label>:99:                                     ; preds = %95
  %100 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %101 = load %struct.ev_to_data*, %struct.ev_to_data** %100, align 8
  %102 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %101, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %102, align 8
  br label %103

; <label>:103:                                    ; preds = %99, %95
  %104 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 7
  store i32 (%struct.context*)* @tcp_response_recursive_process, i32 (%struct.context*)** %104, align 8
  %105 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 8
  store i32 (%struct.context*)* @tcp_response_recursive_retry, i32 (%struct.context*)** %105, align 8
  br label %148

; <label>:106:                                    ; preds = %93
  %107 = getelementptr [19 x i8], [19 x i8]* @.str.9.294, i32 0, i32 0
  %108 = getelementptr [31 x i8], [31 x i8]* @.str.7.292, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %107, i8* %108)
  %109 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %110 = bitcast %union.anon.0* %109 to %struct.mesg_hdr**
  %111 = load %struct.mesg_hdr*, %struct.mesg_hdr** %110, align 8
  %112 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %111, i32 0, i32 1
  %113 = load i16, i16* %112, align 2
  %114 = and i16 %113, -3841
  %115 = or i16 %114, 256
  store i16 %115, i16* %112, align 2
  br label %116

; <label>:116:                                    ; preds = %93, %106
  %117 = getelementptr [16 x i8], [16 x i8]* @.str.10.295, i32 0, i32 0
  %118 = getelementptr [31 x i8], [31 x i8]* @.str.7.292, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %117, i8* %118)
  %119 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %120 = bitcast %union.anon.0* %119 to %struct.mesg_hdr**
  %121 = load %struct.mesg_hdr*, %struct.mesg_hdr** %120, align 8
  %122 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %121, i32 0, i32 1
  %123 = load i16, i16* %122, align 2
  %124 = and i16 %123, -3841
  %125 = or i16 %124, 512
  store i16 %125, i16* %122, align 2
  br label %134

; <label>:126:                                    ; preds = %71
  %127 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %128 = bitcast %union.anon.0* %127 to %struct.mesg_hdr**
  %129 = load %struct.mesg_hdr*, %struct.mesg_hdr** %128, align 8
  %130 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %129, i32 0, i32 1
  %131 = load i16, i16* %130, align 2
  %132 = and i16 %131, -3841
  %133 = or i16 %132, 1024
  store i16 %133, i16* %130, align 2
  br label %134

; <label>:134:                                    ; preds = %126, %116
  %135 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %136 = load i32, i32* %135, align 8
  %137 = call i32 @ev_tcp_out_register(i32 %136, %struct.context* %0)
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %146, label %139

; <label>:139:                                    ; preds = %134
  %140 = call i32 @assemble_response(%struct.context* %0)
  %141 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 7
  store i32 (%struct.context*)* @tcp_response_writing_process, i32 (%struct.context*)** %141, align 8
  %142 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 8
  store i32 (%struct.context*)* @tcp_response_writing_retry, i32 (%struct.context*)** %142, align 8
  %143 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  store i8* null, i8** %143, align 8
  %144 = getelementptr [19 x i8], [19 x i8]* @.str.11.296, i32 0, i32 0
  %145 = getelementptr [31 x i8], [31 x i8]* @.str.7.292, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %144, i8* %145)
  br label %148

; <label>:146:                                    ; preds = %134
  %147 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %148

; <label>:148:                                    ; preds = %146, %139, %103, %56, %39, %17
  %.0 = phi i32 [ %18, %17 ], [ %40, %39 ], [ 0, %56 ], [ %147, %146 ], [ 0, %139 ], [ 0, %103 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_reading_retry(%struct.context*) #0 {
  %2 = call i32 @response_abort(%struct.context* %0, i32 -1)
  ret i32 %2
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_recursive_process(%struct.context*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.286, i32 0, i32 0
  %3 = getelementptr [33 x i8], [33 x i8]* @.str.12.305, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = call i32 @recursive_process(%struct.context* %0)
  switch i32 %4, label %49 [
    i32 0, label %5
    i32 1, label %8
  ]

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [21 x i8], [21 x i8]* @.str.13.298, i32 0, i32 0
  %7 = getelementptr [33 x i8], [33 x i8]* @.str.12.305, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6, i8* %7)
  br label %51

; <label>:8:                                      ; preds = %1
  %9 = call i32 @assemble_response(%struct.context* %0)
  %10 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %17, label %13

; <label>:13:                                     ; preds = %8
  %14 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 65535
  br i1 %16, label %17, label %20

; <label>:17:                                     ; preds = %13, %8
  %18 = getelementptr [25 x i8], [25 x i8]* @.str.14.306, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %18)
  %19 = call i32 @response_abort(%struct.context* %0, i32 1)
  br label %51

; <label>:20:                                     ; preds = %13
  %21 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %22 = load %struct.ev_to_data*, %struct.ev_to_data** %21, align 8
  %23 = icmp ne %struct.ev_to_data* %22, null
  br i1 %23, label %24, label %28

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %26 = load %struct.ev_to_data*, %struct.ev_to_data** %25, align 8
  %27 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %26, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %27, align 8
  br label %28

; <label>:28:                                     ; preds = %24, %20
  %29 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %0, i32 %31)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %36

; <label>:34:                                     ; preds = %28
  %35 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %51

; <label>:36:                                     ; preds = %28
  %37 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %38 = load i32, i32* %37, align 8
  %39 = call i32 @ev_tcp_out_register(i32 %38, %struct.context* %0)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %43

; <label>:41:                                     ; preds = %36
  %42 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %51

; <label>:43:                                     ; preds = %36
  %44 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 7
  store i32 (%struct.context*)* @tcp_response_writing_process, i32 (%struct.context*)** %44, align 8
  %45 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 8
  store i32 (%struct.context*)* @tcp_response_writing_retry, i32 (%struct.context*)** %45, align 8
  %46 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  store i8* null, i8** %46, align 8
  %47 = getelementptr [19 x i8], [19 x i8]* @.str.15.299, i32 0, i32 0
  %48 = getelementptr [33 x i8], [33 x i8]* @.str.12.305, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %47, i8* %48)
  br label %51

; <label>:49:                                     ; preds = %1
  %50 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %51

; <label>:51:                                     ; preds = %49, %43, %41, %34, %17, %5
  %.0 = phi i32 [ %50, %49 ], [ %19, %17 ], [ %35, %34 ], [ %42, %41 ], [ 0, %43 ], [ 0, %5 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_recursive_retry(%struct.context*) #0 {
  %2 = call i32 @response_abort(%struct.context* %0, i32 -1)
  ret i32 %2
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_writing_process(%struct.context*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.286, i32 0, i32 0
  %3 = getelementptr [31 x i8], [31 x i8]* @.str.16.297, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %5 = load %struct.ev_to_data*, %struct.ev_to_data** %4, align 8
  %6 = icmp ne %struct.ev_to_data* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %9 = load %struct.ev_to_data*, %struct.ev_to_data** %8, align 8
  %10 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %9, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %10, align 8
  br label %11

; <label>:11:                                     ; preds = %7, %1
  %12 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %0, i32 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %11
  %18 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %39

; <label>:19:                                     ; preds = %11
  %20 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %21 = load i32, i32* %20, align 8
  %22 = call i32 bitcast (i32 (%struct.context.69*, i32)* @tcp_writemesg to i32 (%struct.context*, i32)*)(%struct.context* %0, i32 %21)
  switch i32 %22, label %37 [
    i32 0, label %23
    i32 1, label %26
  ]

; <label>:23:                                     ; preds = %19
  %24 = getelementptr [21 x i8], [21 x i8]* @.str.13.298, i32 0, i32 0
  %25 = getelementptr [31 x i8], [31 x i8]* @.str.16.297, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %24, i8* %25)
  br label %39

; <label>:26:                                     ; preds = %19
  %27 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 7
  store i32 (%struct.context*)* @tcp_response_waiting_client_close_process, i32 (%struct.context*)** %27, align 8
  %28 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 8
  store i32 (%struct.context*)* @tcp_response_waiting_client_close_retry, i32 (%struct.context*)** %28, align 8
  %29 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %30 = load i32, i32* %29, align 8
  %31 = call i32 @ev_tcp_out_remove(i32 %30)
  %32 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %33 = load i32, i32* %32, align 8
  %34 = call i32 @ev_tcp_conn_in_register(i32 %33, %struct.context* %0)
  %35 = getelementptr [19 x i8], [19 x i8]* @.str.15.299, i32 0, i32 0
  %36 = getelementptr [31 x i8], [31 x i8]* @.str.16.297, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %35, i8* %36)
  br label %39

; <label>:37:                                     ; preds = %19
  %38 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %39

; <label>:39:                                     ; preds = %37, %26, %23, %17
  %.0 = phi i32 [ %18, %17 ], [ %38, %37 ], [ 0, %26 ], [ 0, %23 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_writing_retry(%struct.context*) #0 {
  %2 = call i32 @response_abort(%struct.context* %0, i32 -1)
  ret i32 %2
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_waiting_client_close_process(%struct.context*) #0 {
  %2 = alloca i16, align 2
  %3 = getelementptr [10 x i8], [10 x i8]* @.str.1.286, i32 0, i32 0
  %4 = getelementptr [44 x i8], [44 x i8]* @.str.17.300, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3, i8* %4)
  %5 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 23
  %6 = load i32, i32* %5, align 8
  %7 = bitcast i16* %2 to i8*
  %8 = call i64 @read(i32 %6, i8* %7, i64 2)
  %9 = trunc i64 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %13, label %11

; <label>:11:                                     ; preds = %1
  %12 = call i32 @tcp_response_finish(%struct.context* %0)
  br label %77

; <label>:13:                                     ; preds = %1
  %14 = sext i32 %9 to i64
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %16, label %20

; <label>:16:                                     ; preds = %13
  %17 = getelementptr [15 x i8], [15 x i8]* @.str.18.301, i32 0, i32 0
  %18 = getelementptr [44 x i8], [44 x i8]* @.str.17.300, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %17, i8* %18)
  %19 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %77

; <label>:20:                                     ; preds = %13
  %21 = load i16, i16* %2, align 2
  %22 = call zeroext i16 @ntohs(i16 zeroext %21) #10
  store i16 %22, i16* %2, align 2
  %23 = load i16, i16* %2, align 2
  %24 = zext i16 %23 to i32
  %25 = getelementptr [23 x i8], [23 x i8]* @.str.19.302, i32 0, i32 0
  %26 = getelementptr [44 x i8], [44 x i8]* @.str.17.300, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %25, i8* %26, i32 %24)
  %27 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %28 = bitcast %union.anon.0* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp ne i8* %29, null
  br i1 %30, label %31, label %35

; <label>:31:                                     ; preds = %20
  %32 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %33 = bitcast %union.anon.0* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  call void @free(i8* %34) #9
  br label %35

; <label>:35:                                     ; preds = %31, %20
  %36 = load i16, i16* %2, align 2
  %37 = zext i16 %36 to i64
  %38 = call noalias i8* @malloc(i64 %37) #9, !track !114
  %39 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %40 = bitcast %union.anon.0* %39 to i8**
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %42 = bitcast %union.anon.0* %41 to i8**
  %43 = load i8*, i8** %42, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %48, label %45

; <label>:45:                                     ; preds = %35
  %46 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  store i32 0, i32* %46, align 8
  %47 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %77

; <label>:48:                                     ; preds = %35
  %49 = load i16, i16* %2, align 2
  %50 = zext i16 %49 to i32
  %51 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  store i32 %50, i32* %51, align 8
  %52 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %53 = bitcast %union.anon.0* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 18
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  store i16 60, i16* %56, align 2
  %57 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %58 = load %struct.ev_to_data*, %struct.ev_to_data** %57, align 8
  %59 = icmp ne %struct.ev_to_data* %58, null
  br i1 %59, label %60, label %64

; <label>:60:                                     ; preds = %48
  %61 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 6
  %62 = load %struct.ev_to_data*, %struct.ev_to_data** %61, align 8
  %63 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %62, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %63, align 8
  br label %64

; <label>:64:                                     ; preds = %60, %48
  %65 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 21
  %66 = load i16, i16* %65, align 2
  %67 = zext i16 %66 to i32
  %68 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context*, i32)*)(%struct.context* %0, i32 %67)
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %72

; <label>:70:                                     ; preds = %64
  %71 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %77

; <label>:72:                                     ; preds = %64
  %73 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 7
  store i32 (%struct.context*)* @tcp_response_reading_process, i32 (%struct.context*)** %73, align 8
  %74 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 8
  store i32 (%struct.context*)* @tcp_response_reading_retry, i32 (%struct.context*)** %74, align 8
  %75 = getelementptr [29 x i8], [29 x i8]* @.str.20.303, i32 0, i32 0
  %76 = getelementptr [44 x i8], [44 x i8]* @.str.17.300, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %75, i8* %76)
  br label %77

; <label>:77:                                     ; preds = %72, %70, %45, %16, %11
  %.0 = phi i32 [ %19, %16 ], [ %71, %70 ], [ 0, %72 ], [ %47, %45 ], [ %12, %11 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_waiting_client_close_retry(%struct.context*) #0 {
  %2 = call i32 @response_abort(%struct.context* %0, i32 0)
  ret i32 %2
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @tcp_response_finish(%struct.context*) #0 {
  %2 = getelementptr [22 x i8], [22 x i8]* @.str.21.304, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2)
  %3 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %0)
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_dup_init() #0 {
  br label %1

; <label>:1:                                      ; preds = %0, %1
  %lsr.iv = phi i64 [ -32000, %0 ], [ %lsr.iv.next, %1 ]
  %lsr.iv2 = inttoptr i64 %lsr.iv to i16*
  %lsr.iv1 = inttoptr i64 %lsr.iv to i8*
  call void @unroll_loop(i32 49)
  %uglygep = getelementptr i8, i8* bitcast ([1000 x %struct.anon]* @Ev_dup_table to i8*), i64 %lsr.iv
  %uglygep3 = bitcast i8* %uglygep to i16*
  %scevgep = getelementptr i8, i8* %uglygep, i64 32000
  call void @llvm.memset.p0i8.i64(i8* align 16 %scevgep, i8 0, i64 16, i1 false)
  %scevgep4 = getelementptr i16, i16* %uglygep3, i64 16008
  store i16 0, i16* %scevgep4, align 16
  %uglygep5 = getelementptr i8, i8* bitcast ([1000 x %struct.anon]* @Ev_dup_table to i8*), i64 %lsr.iv
  %uglygep56 = bitcast i8* %uglygep5 to i16*
  %scevgep7 = getelementptr i16, i16* %uglygep56, i64 16009
  store i16 0, i16* %scevgep7, align 2
  %lsr.iv.next = add nsw i64 %lsr.iv, 32
  %exitcond = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond, label %1, label %2

; <label>:2:                                      ; preds = %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_dup(%struct.sockaddr*, i16 zeroext, i16 zeroext) #0 {
  %4 = call i32 @ev_dup_hashval(%struct.sockaddr* %0, i16 zeroext %1, i16 zeroext %2)
  %5 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 2
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %3
  %9 = getelementptr [21 x i8], [21 x i8]* @.str.307, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %9, i32 %4)
  br label %10

; <label>:10:                                     ; preds = %8, %3
  %11 = call i64 @time(i64* null) #9
  %12 = zext i16 %1 to i32
  %13 = icmp sgt i32 %12, 16
  %14 = zext i16 %1 to i32
  %15 = select i1 %13, i32 16, i32 %14
  %16 = trunc i32 %15 to i16
  %17 = sext i32 %4 to i64
  %18 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %17
  %19 = getelementptr inbounds %struct.anon, %struct.anon* %18, i32 0, i32 2
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = zext i16 %2 to i32
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %24, label %50

; <label>:24:                                     ; preds = %10
  %25 = sext i32 %4 to i64
  %26 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %25
  %27 = getelementptr inbounds %struct.anon, %struct.anon* %26, i32 0, i32 1
  %28 = load i16, i16* %27, align 16
  %29 = zext i16 %28 to i32
  %30 = zext i16 %16 to i32
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %32, label %50

; <label>:32:                                     ; preds = %24
  %33 = sext i32 %4 to i64
  %34 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %33
  %35 = getelementptr inbounds %struct.anon, %struct.anon* %34, i32 0, i32 0
  %36 = bitcast %union.anon.79* %35 to [16 x i8]*
  %37 = bitcast [16 x i8]* %36 to i8*
  %38 = bitcast %struct.sockaddr* %0 to i8*
  %39 = zext i16 %16 to i64
  %40 = call i32 @memcmp(i8* %37, i8* %38, i64 %39) #8
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %50, label %42

; <label>:42:                                     ; preds = %32
  %43 = sext i32 %4 to i64
  %44 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %43
  %45 = getelementptr inbounds %struct.anon, %struct.anon* %44, i32 0, i32 3
  %46 = load i64, i64* %45, align 8
  %47 = icmp slt i64 %11, %46
  br i1 %47, label %48, label %50

; <label>:48:                                     ; preds = %42
  %49 = getelementptr [29 x i8], [29 x i8]* @.str.1.308, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %49)
  br label %69

; <label>:50:                                     ; preds = %42, %32, %24, %10
  %51 = sext i32 %4 to i64
  %52 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %51
  %53 = getelementptr inbounds %struct.anon, %struct.anon* %52, i32 0, i32 2
  store i16 %2, i16* %53, align 2
  %54 = sext i32 %4 to i64
  %55 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %54
  %56 = getelementptr inbounds %struct.anon, %struct.anon* %55, i32 0, i32 1
  store i16 %16, i16* %56, align 16
  %57 = sext i32 %4 to i64
  %58 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %57
  %59 = getelementptr inbounds %struct.anon, %struct.anon* %58, i32 0, i32 0
  %60 = bitcast %union.anon.79* %59 to [16 x i8]*
  %61 = getelementptr inbounds [16 x i8], [16 x i8]* %60, i32 0, i32 0
  %62 = bitcast %struct.sockaddr* %0 to i8*
  %63 = zext i16 %16 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %61, i8* align 1 %62, i64 %63, i1 false), !track !115
  %64 = call i64 @time(i64* null) #9
  %65 = add nsw i64 %64, 60
  %66 = sext i32 %4 to i64
  %67 = getelementptr inbounds [1000 x %struct.anon], [1000 x %struct.anon]* @Ev_dup_table, i64 0, i64 %66
  %68 = getelementptr inbounds %struct.anon, %struct.anon* %67, i32 0, i32 3
  store i64 %65, i64* %68, align 8
  br label %69

; <label>:69:                                     ; preds = %50, %48
  %.0 = phi i32 [ 0, %50 ], [ -1, %48 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ev_dup_hashval(%struct.sockaddr*, i16 zeroext, i16 zeroext) #0 {
  %4 = bitcast %struct.sockaddr* %0 to i8*
  %5 = zext i16 %1 to i32
  %6 = sext i32 %5 to i64
  %7 = inttoptr i64 %6 to i8*
  %8 = getelementptr inbounds i8, i8* %4, i64 %6
  %9 = icmp ult i8* %4, %8
  br i1 %9, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %3
  br label %10

; <label>:10:                                     ; preds = %.lr.ph, %10
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %10 ]
  %.012 = phi i32 [ 0, %.lr.ph ], [ %13, %10 ]
  %uglygep = getelementptr i8, i8* %4, i64 %lsr.iv
  call void @unroll_loop(i32 50)
  %11 = load i8, i8* %uglygep, align 1
  %12 = zext i8 %11 to i32
  %13 = add nsw i32 %.012, %12
  %lsr.iv.next = add i64 %lsr.iv, 1
  %tmp = inttoptr i64 %lsr.iv.next to i8*
  %exitcond = icmp ne i8* %7, %tmp
  br i1 %exitcond, label %10, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %10
  %.01.lcssa.ph = phi i32 [ %13, %10 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  %.01.lcssa = phi i32 [ 0, %3 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %14 = zext i16 %2 to i32
  %15 = add nsw i32 %.01.lcssa, %14
  %16 = srem i32 %15, 1000
  ret i32 %16
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.generic_list* @list_init() #6 {
  %1 = call noalias i8* @malloc(i64 24) #9, !track !116
  %2 = bitcast i8* %1 to %struct.generic_list*
  %3 = icmp ne %struct.generic_list* %2, null
  br i1 %3, label %4, label %8

; <label>:4:                                      ; preds = %0
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %2, i32 0, i32 0
  store %struct.generic_list* %2, %struct.generic_list** %5, align 8
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %2, i32 0, i32 1
  store %struct.generic_list* %2, %struct.generic_list** %6, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %2, i32 0, i32 2
  store i8* null, i8** %7, align 8
  br label %8

; <label>:8:                                      ; preds = %4, %0
  %9 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 4
  br i1 %11, label %12, label %16

; <label>:12:                                     ; preds = %8
  %13 = bitcast %struct.generic_list* %2 to i8*
  %14 = getelementptr [17 x i8], [17 x i8]* @.str.1.312, i32 0, i32 0
  %15 = getelementptr [12 x i8], [12 x i8]* @.str.311, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %14, i8* %15, i8* %13)
  br label %16

; <label>:16:                                     ; preds = %12, %8
  ret %struct.generic_list* %2
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @list_add(%struct.generic_list*, i8*) #0 {
  %3 = call noalias i8* @malloc(i64 24) #9, !track !117
  %4 = bitcast i8* %3 to %struct.generic_list*
  %5 = icmp ne %struct.generic_list* %4, null
  br i1 %5, label %6, label %16

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 2
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 0
  store %struct.generic_list* %9, %struct.generic_list** %10, align 8
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 1
  store %struct.generic_list* %0, %struct.generic_list** %11, align 8
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %13 = load %struct.generic_list*, %struct.generic_list** %12, align 8
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 1
  store %struct.generic_list* %4, %struct.generic_list** %14, align 8
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  store %struct.generic_list* %4, %struct.generic_list** %15, align 8
  br label %16

; <label>:16:                                     ; preds = %2, %6
  %.0 = phi i32 [ 0, %6 ], [ -1, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @list_add_tail(%struct.generic_list*, i8*) #0 {
  %3 = call noalias i8* @malloc(i64 24) #9, !track !118
  %4 = bitcast i8* %3 to %struct.generic_list*
  %5 = icmp ne %struct.generic_list* %4, null
  br i1 %5, label %6, label %16

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 2
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 0
  store %struct.generic_list* %0, %struct.generic_list** %8, align 8
  %9 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  %10 = load %struct.generic_list*, %struct.generic_list** %9, align 8
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 1
  store %struct.generic_list* %10, %struct.generic_list** %11, align 8
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  %13 = load %struct.generic_list*, %struct.generic_list** %12, align 8
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 0
  store %struct.generic_list* %4, %struct.generic_list** %14, align 8
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  store %struct.generic_list* %4, %struct.generic_list** %15, align 8
  br label %16

; <label>:16:                                     ; preds = %2, %6
  %.0 = phi i32 [ 0, %6 ], [ -1, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.generic_list* @list_search(%struct.generic_list*, i8*, i32 (i8*, i8*)*) #6 {
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %6 = load %struct.generic_list*, %struct.generic_list** %5, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = call i32 %2(i8* %1, i8* %8)
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.012 = phi %struct.generic_list* [ %12, %.lr.ph ], [ %6, %.lr.ph.preheader ]
  call void @unroll_loop(i32 51)
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 0
  %12 = load %struct.generic_list*, %struct.generic_list** %11, align 8
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 %2(i8* %1, i8* %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.01.lcssa.ph = phi %struct.generic_list* [ %12, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  %.01.lcssa = phi %struct.generic_list* [ %6, %3 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %17, align 8
  %18 = icmp eq %struct.generic_list* %.01.lcssa, %0
  %..01.lcssa = select i1 %18, %struct.generic_list* null, %struct.generic_list* %.01.lcssa
  ret %struct.generic_list* %..01.lcssa
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @list_delete(%struct.generic_list*) #6 {
  %2 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  %3 = load %struct.generic_list*, %struct.generic_list** %2, align 8
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 1
  store %struct.generic_list* %3, %struct.generic_list** %6, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %8 = load %struct.generic_list*, %struct.generic_list** %7, align 8
  %9 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  %10 = load %struct.generic_list*, %struct.generic_list** %9, align 8
  %11 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %10, i32 0, i32 0
  store %struct.generic_list* %8, %struct.generic_list** %11, align 8
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %struct.generic_list* %0 to i8*
  call void @free(i8* %14) #9
  ret i8* %13
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @list_destroy(%struct.generic_list*, void (i8*)*) #0 {
  %3 = icmp ne %struct.generic_list* %0, null
  br i1 %3, label %4, label %20

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %6 = load %struct.generic_list*, %struct.generic_list** %5, align 8
  %7 = icmp ne %struct.generic_list* %6, %0
  br i1 %7, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %4
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %16
  %.01 = phi %struct.generic_list* [ %9, %16 ], [ %6, %.lr.ph.preheader ]
  call void @unroll_loop(i32 52)
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 0
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %16

; <label>:13:                                     ; preds = %.lr.ph
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  call void %1(i8* %15)
  br label %16

; <label>:16:                                     ; preds = %13, %.lr.ph
  %17 = bitcast %struct.generic_list* %.01 to i8*
  call void @free(i8* %17) #9
  %18 = icmp ne %struct.generic_list* %9, %0
  br i1 %18, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %16
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %4
  %19 = bitcast %struct.generic_list* %0 to i8*
  call void @free(i8* %19) #9
  br label %20

; <label>:20:                                     ; preds = %2, %._crit_edge
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.generic_list* @list_dup(%struct.generic_list*, void (i8*)*, i8* (i8*)*) #0 {
  %4 = call %struct.generic_list* @list_init()
  %5 = icmp ne %struct.generic_list* %4, null
  br i1 %5, label %6, label %._crit_edge

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %22
  %.012 = phi %struct.generic_list* [ %24, %22 ], [ %9, %.lr.ph.preheader ]
  call void @unroll_loop(i32 53)
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = call i8* %2(i8* %14)
  %16 = icmp ne i8* %15, null
  br i1 %16, label %18, label %17

; <label>:17:                                     ; preds = %.lr.ph
  call void @list_destroy(%struct.generic_list* %4, void (i8*)* %1)
  br label %._crit_edge

; <label>:18:                                     ; preds = %.lr.ph
  %19 = call i32 @list_add_tail(%struct.generic_list* %4, i8* %15)
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %18
  call void @list_destroy(%struct.generic_list* %4, void (i8*)* %1)
  br label %._crit_edge

; <label>:22:                                     ; preds = %18
  %23 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.012, i32 0, i32 0
  %24 = load %struct.generic_list*, %struct.generic_list** %23, align 8
  %25 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %24, i32 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ne i8* %26, null
  br i1 %27, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %22
  %.0.ph = phi %struct.generic_list* [ %4, %22 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %6, %3, %21, %17
  %.0 = phi %struct.generic_list* [ null, %21 ], [ null, %17 ], [ null, %3 ], [ %4, %6 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret %struct.generic_list* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @list_cat(%struct.generic_list*, %struct.generic_list*) #0 {
  %3 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 2
  store i8* null, i8** %3, align 8
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 0
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %28

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 0
  %11 = load %struct.generic_list*, %struct.generic_list** %10, align 8
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  %13 = load %struct.generic_list*, %struct.generic_list** %12, align 8
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 0
  store %struct.generic_list* %11, %struct.generic_list** %14, align 8
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  %16 = load %struct.generic_list*, %struct.generic_list** %15, align 8
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 0
  %18 = load %struct.generic_list*, %struct.generic_list** %17, align 8
  %19 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %18, i32 0, i32 1
  store %struct.generic_list* %16, %struct.generic_list** %19, align 8
  %20 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 1
  %21 = load %struct.generic_list*, %struct.generic_list** %20, align 8
  %22 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  store %struct.generic_list* %21, %struct.generic_list** %22, align 8
  %23 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 1
  %24 = load %struct.generic_list*, %struct.generic_list** %23, align 8
  %25 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %24, i32 0, i32 0
  store %struct.generic_list* %0, %struct.generic_list** %25, align 8
  %26 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 1
  store %struct.generic_list* %1, %struct.generic_list** %26, align 8
  %27 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %1, i32 0, i32 0
  store %struct.generic_list* %1, %struct.generic_list** %27, align 8
  br label %28

; <label>:28:                                     ; preds = %9, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr* @rr_alloc(i32, i32, i8*) #6 {
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 5
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %3
  %8 = getelementptr [40 x i8], [40 x i8]* @.str.325, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i32 %0, i32 %1)
  br label %9

; <label>:9:                                      ; preds = %7, %3
  %10 = sext i32 %1 to i64
  %11 = add i64 %10, 6
  %12 = call noalias i8* @malloc(i64 %11) #9, !track !119
  %13 = bitcast i8* %12 to %struct.rr*
  %14 = icmp ne %struct.rr* %13, null
  br i1 %14, label %15, label %26

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds %struct.rr, %struct.rr* %13, i32 0, i32 0
  store i32 %0, i32* %16, align 4
  %17 = trunc i32 %1 to i16
  %18 = getelementptr inbounds %struct.rr, %struct.rr* %13, i32 0, i32 1
  store i16 %17, i16* %18, align 4
  %19 = icmp ne i8* %2, null
  br i1 %19, label %20, label %26

; <label>:20:                                     ; preds = %15
  %21 = bitcast %struct.rr* %13 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 6
  %23 = getelementptr inbounds %struct.rr, %struct.rr* %13, i32 0, i32 1
  %24 = load i16, i16* %23, align 4
  %25 = zext i16 %24 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 %2, i64 %25, i1 false), !track !120
  br label %26

; <label>:26:                                     ; preds = %15, %20, %9
  %.0 = phi %struct.rr* [ null, %9 ], [ %13, %20 ], [ %13, %15 ]
  ret %struct.rr* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_list* @rr_list_alloc() #6 {
  %1 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %2 = load i32, i32* %1, align 4
  %3 = icmp sgt i32 %2, 5
  br i1 %3, label %4, label %6

; <label>:4:                                      ; preds = %0
  %5 = getelementptr [27 x i8], [27 x i8]* @.str.1.328, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5)
  br label %6

; <label>:6:                                      ; preds = %4, %0
  %7 = call noalias i8* @malloc(i64 24) #9, !track !121
  %8 = bitcast i8* %7 to %struct.rr_list*
  %9 = icmp ne %struct.rr_list* %8, null
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %8, i32 0, i32 0
  store %struct.rr_list* null, %struct.rr_list** %11, align 8
  %12 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %8, i32 0, i32 3
  store %struct.rr* null, %struct.rr** %12, align 8
  %13 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %8, i32 0, i32 1
  store i32 -1, i32* %13, align 8
  br label %14

; <label>:14:                                     ; preds = %6, %10
  %.0 = phi %struct.rr_list* [ %8, %10 ], [ null, %6 ]
  ret %struct.rr_list* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rr_list_free(%struct.rr_list*) #0 {
  %2 = icmp ne %struct.rr_list* %0, null
  %3 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 5
  br i1 %2, label %10, label %6

; <label>:6:                                      ; preds = %1
  br i1 %5, label %7, label %39

; <label>:7:                                      ; preds = %6
  %8 = getelementptr [33 x i8], [33 x i8]* @.str.3.332, i32 0, i32 0
  %9 = getelementptr [15 x i8], [15 x i8]* @.str.2.331, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %9)
  br label %39

; <label>:10:                                     ; preds = %1
  br i1 %5, label %11, label %14

; <label>:11:                                     ; preds = %10
  %12 = getelementptr [15 x i8], [15 x i8]* @.str.4.333, i32 0, i32 0
  %13 = getelementptr [15 x i8], [15 x i8]* @.str.2.331, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %12, i8* %13, %struct.rr_list* %0)
  br label %14

; <label>:14:                                     ; preds = %11, %10
  %15 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %0, i32 0, i32 0
  %16 = load %struct.rr_list*, %struct.rr_list** %15, align 8
  %17 = icmp ne %struct.rr_list* %16, null
  br i1 %17, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %14
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %31
  %.01 = phi %struct.rr_list* [ %33, %31 ], [ %0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 54)
  %18 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.01, i32 0, i32 3
  %19 = load %struct.rr*, %struct.rr** %18, align 8
  %20 = icmp ne %struct.rr* %19, null
  br i1 %20, label %21, label %31

; <label>:21:                                     ; preds = %.lr.ph
  %22 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %23 = icmp sgt i32 %22, 5
  br i1 %23, label %24, label %27

; <label>:24:                                     ; preds = %21
  %25 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.01, i32 0, i32 3
  %26 = load %struct.rr*, %struct.rr** %25, align 8
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5.334, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.331, i64 0, i64 0), %struct.rr* %26)
  br label %27

; <label>:27:                                     ; preds = %24, %21
  %28 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.01, i32 0, i32 3
  %29 = load %struct.rr*, %struct.rr** %28, align 8
  %30 = bitcast %struct.rr* %29 to i8*
  call void @free(i8* %30) #9
  br label %31

; <label>:31:                                     ; preds = %27, %.lr.ph
  %32 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.01, i32 0, i32 0
  %33 = load %struct.rr_list*, %struct.rr_list** %32, align 8
  %34 = bitcast %struct.rr_list* %.01 to i8*
  call void @free(i8* %34) #9
  %35 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %33, i32 0, i32 0
  %36 = load %struct.rr_list*, %struct.rr_list** %35, align 8
  %37 = icmp ne %struct.rr_list* %36, null
  br i1 %37, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %31
  %.0.lcssa.ph = phi %struct.rr_list* [ %33, %31 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %14
  %.0.lcssa = phi %struct.rr_list* [ %0, %14 ], [ %.0.lcssa.ph, %._crit_edge.loopexit ]
  %38 = bitcast %struct.rr_list* %.0.lcssa to i8*
  call void @free(i8* %38) #9
  br label %39

; <label>:39:                                     ; preds = %6, %7, %._crit_edge
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_list* @rr_list_add(%struct.rr_list*, i32, i32, i8*) #6 {
  %5 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 5
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %4
  %9 = getelementptr [45 x i8], [45 x i8]* @.str.6.337, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %9, i32 %1, i32 %2)
  br label %10

; <label>:10:                                     ; preds = %8, %4
  %11 = call noalias i8* @malloc(i64 24) #9, !track !122
  %12 = bitcast i8* %11 to %struct.rr_list*
  %13 = icmp ne %struct.rr_list* %12, null
  br i1 %13, label %14, label %28

; <label>:14:                                     ; preds = %10
  %15 = call %struct.rr* @rr_alloc(i32 %1, i32 %2, i8* %3)
  %16 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %12, i32 0, i32 3
  store %struct.rr* %15, %struct.rr** %16, align 8
  %17 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %12, i32 0, i32 3
  %18 = load %struct.rr*, %struct.rr** %17, align 8
  %19 = icmp ne %struct.rr* %18, null
  br i1 %19, label %22, label %20

; <label>:20:                                     ; preds = %14
  %21 = bitcast %struct.rr_list* %12 to i8*
  call void @free(i8* %21) #9
  br label %28

; <label>:22:                                     ; preds = %14
  %23 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %12, i32 0, i32 0
  store %struct.rr_list* %0, %struct.rr_list** %23, align 8
  %24 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = add nsw i32 %25, 1
  %27 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %12, i32 0, i32 1
  store i32 %26, i32* %27, align 8
  br label %28

; <label>:28:                                     ; preds = %10, %22, %20
  %.0 = phi %struct.rr_list* [ %12, %22 ], [ null, %20 ], [ null, %10 ]
  ret %struct.rr_list* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr* @rrset_get_rr_f(i32, %struct.rr_set*) #0 {
  %3 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %1, i32 0, i32 4
  %4 = bitcast %union.u_data* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 2
  %7 = sext i32 %0 to i64
  %8 = mul i64 2, %7
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = bitcast i8* %9 to i16*
  %11 = load i16, i16* %10, align 2
  %12 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %1, i32 0, i32 4
  %13 = bitcast %union.u_data* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = zext i16 %11 to i32
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = bitcast i8* %17 to %struct.rr*
  ret %struct.rr* %18
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_list* @rr_list_of_rrset(%struct.rr_set*) #6 {
  %2 = call %struct.rr_list* @rr_list_alloc()
  %3 = icmp ne %struct.rr_list* %2, null
  br i1 %3, label %4, label %._crit_edge

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 4
  %6 = bitcast %union.u_data* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %._crit_edge

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 4
  %11 = bitcast %union.u_data* %10 to %struct.data_data**
  %12 = load %struct.data_data*, %struct.data_data** %11, align 8
  %13 = getelementptr inbounds %struct.data_data, %struct.data_data* %12, i32 0, i32 0
  %14 = load i16, i16* %13, align 2
  %15 = zext i16 %14 to i32
  %16 = icmp slt i32 0, %15
  br i1 %16, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %9
  %17 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 4
  %18 = bitcast %union.u_data* %17 to i8**
  %19 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 4
  %20 = bitcast %union.u_data* %19 to %struct.data_data**
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %38
  %indvars.iv = phi i64 [ %indvars.iv.next, %38 ], [ 0, %.lr.ph.preheader ]
  %.024 = phi %struct.rr_list* [ %35, %38 ], [ %2, %.lr.ph.preheader ]
  call void @unroll_loop(i32 55)
  %21 = load i8*, i8** %18, align 8
  %22 = load %struct.data_data*, %struct.data_data** %20, align 8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %scevgep = getelementptr %struct.data_data, %struct.data_data* %22, i64 1
  %scevgep1 = getelementptr %struct.data_data, %struct.data_data* %scevgep, i64 %indvars.iv
  %scevgep12 = bitcast %struct.data_data* %scevgep1 to i16*
  %23 = load i16, i16* %scevgep12, align 2
  %24 = zext i16 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  %27 = bitcast i8* %26 to %struct.rr*
  %28 = getelementptr inbounds %struct.rr, %struct.rr* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.rr, %struct.rr* %27, i32 0, i32 1
  %31 = load i16, i16* %30, align 4
  %32 = zext i16 %31 to i32
  %33 = bitcast %struct.rr* %27 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 6
  %35 = call %struct.rr_list* @rr_list_add(%struct.rr_list* %.024, i32 %29, i32 %32, i8* %34)
  %36 = icmp ne %struct.rr_list* %35, null
  br i1 %36, label %38, label %37

; <label>:37:                                     ; preds = %.lr.ph
  %.02.lcssa3 = phi %struct.rr_list* [ %.024, %.lr.ph ]
  call void @rr_list_free(%struct.rr_list* %.02.lcssa3)
  br label %._crit_edge

; <label>:38:                                     ; preds = %.lr.ph
  %39 = load %struct.data_data*, %struct.data_data** %11, align 8
  %40 = getelementptr inbounds %struct.data_data, %struct.data_data* %39, i32 0, i32 0
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = zext i32 %42 to i64
  %44 = icmp ult i64 %indvars.iv.next, %43
  br i1 %44, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %38
  %.0.ph = phi %struct.rr_list* [ %35, %38 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %9, %4, %1, %37
  %.0 = phi %struct.rr_list* [ null, %37 ], [ null, %1 ], [ %2, %4 ], [ %2, %9 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret %struct.rr_list* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_set* @rrset_alloc() #6 {
  %1 = call noalias i8* @malloc(i64 40) #9, !track !123
  %2 = bitcast i8* %1 to %struct.rr_set*
  %3 = icmp ne %struct.rr_set* %2, null
  br i1 %3, label %4, label %17

; <label>:4:                                      ; preds = %0
  %5 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 1
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 2
  %7 = bitcast %union.u_key* %6 to i8**
  store i8* null, i8** %7, align 8
  %8 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 3
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 4
  %10 = bitcast %union.u_data* %9 to i8**
  store i8* null, i8** %10, align 8
  %11 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 0
  store i32 1, i32* %11, align 8
  %12 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 5
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %4
  %16 = getelementptr [28 x i8], [28 x i8]* @.str.7.340, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %16, %struct.rr_set* %2)
  br label %17

; <label>:17:                                     ; preds = %4, %15, %0
  %.0 = phi %struct.rr_set* [ null, %0 ], [ %2, %15 ], [ %2, %4 ]
  ret %struct.rr_set* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_set* @rrset_create(i16 zeroext, i16 zeroext, i16 zeroext, i8*, %struct.rr_list*) #6 {
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 5
  br i1 %8, label %9, label %13

; <label>:9:                                      ; preds = %5
  %10 = call i8* @string_rtype(i16 zeroext %0)
  %11 = call i8* @string_rclass(i16 zeroext %1)
  %12 = getelementptr [32 x i8], [32 x i8]* @.str.8.343, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %12, i8* %10, i8* %11)
  br label %13

; <label>:13:                                     ; preds = %9, %5
  %14 = call %struct.rr_set* @rrset_alloc()
  %15 = icmp ne %struct.rr_set* %14, null
  br i1 %15, label %16, label %._crit_edge

; <label>:16:                                     ; preds = %13
  %17 = zext i16 %2 to i64
  %18 = add i64 %17, 6
  %19 = trunc i64 %18 to i32
  %20 = sext i32 %19 to i64
  %21 = call noalias i8* @malloc(i64 %20) #9, !track !124
  %22 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 2
  %23 = bitcast %union.u_key* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 2
  %25 = bitcast %union.u_key* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ne i8* %26, null
  br i1 %27, label %29, label %28

; <label>:28:                                     ; preds = %16
  call void @rrset_free(%struct.rr_set* %14)
  br label %._crit_edge

; <label>:29:                                     ; preds = %16
  %30 = sext i32 %19 to i64
  %31 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 1
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 2
  %33 = bitcast %union.u_key* %32 to %struct.key_info**
  %34 = load %struct.key_info*, %struct.key_info** %33, align 8
  %35 = getelementptr inbounds %struct.key_info, %struct.key_info* %34, i32 0, i32 0
  store i16 %0, i16* %35, align 2
  %36 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 2
  %37 = bitcast %union.u_key* %36 to %struct.key_info**
  %38 = load %struct.key_info*, %struct.key_info** %37, align 8
  %39 = getelementptr inbounds %struct.key_info, %struct.key_info* %38, i32 0, i32 1
  store i16 %1, i16* %39, align 2
  %40 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 2
  %41 = bitcast %union.u_key* %40 to %struct.key_info**
  %42 = load %struct.key_info*, %struct.key_info** %41, align 8
  %43 = getelementptr inbounds %struct.key_info, %struct.key_info* %42, i32 0, i32 2
  store i16 %2, i16* %43, align 2
  %44 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 2
  %45 = bitcast %union.u_key* %44 to %struct.key_info**
  %46 = load %struct.key_info*, %struct.key_info** %45, align 8
  %47 = bitcast %struct.key_info* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 6
  %49 = zext i16 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %3, i64 %49, i1 false), !track !125
  %50 = icmp ne %struct.rr_list* %4, null
  br i1 %50, label %51, label %._crit_edge

; <label>:51:                                     ; preds = %29
  %52 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %4, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = add nsw i32 %53, 1
  %55 = sext i32 %54 to i64
  %56 = mul i64 %55, 2
  %57 = add i64 %56, 2
  %58 = trunc i64 %57 to i32
  %59 = srem i32 %58, 4
  %60 = icmp eq i32 %59, 0
  %61 = sub nsw i32 4, %59
  %62 = select i1 %60, i32 0, i32 %61
  %63 = add nsw i32 %58, %62
  %64 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %4, i32 0, i32 0
  %65 = load %struct.rr_list*, %struct.rr_list** %64, align 8
  %66 = icmp ne %struct.rr_list* %65, null
  br i1 %66, label %.lr.ph7.preheader, label %._crit_edge8

.lr.ph7.preheader:                                ; preds = %51
  br label %.lr.ph7

.lr.ph7:                                          ; preds = %.lr.ph7.preheader, %.lr.ph7
  %.015 = phi i32 [ %81, %.lr.ph7 ], [ %63, %.lr.ph7.preheader ]
  %.024 = phi %struct.rr_list* [ %83, %.lr.ph7 ], [ %4, %.lr.ph7.preheader ]
  call void @unroll_loop(i32 56)
  %67 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.024, i32 0, i32 2
  store i32 %.015, i32* %67, align 4
  %68 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.024, i32 0, i32 3
  %69 = load %struct.rr*, %struct.rr** %68, align 8
  %70 = getelementptr inbounds %struct.rr, %struct.rr* %69, i32 0, i32 1
  %71 = load i16, i16* %70, align 4
  %72 = zext i16 %71 to i64
  %73 = add i64 6, %72
  %74 = sext i32 %.015 to i64
  %75 = add i64 %74, %73
  %76 = trunc i64 %75 to i32
  %77 = srem i32 %76, 4
  %78 = icmp eq i32 %77, 0
  %79 = sub nsw i32 4, %77
  %80 = select i1 %78, i32 0, i32 %79
  %81 = add nsw i32 %76, %80
  %82 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.024, i32 0, i32 0
  %83 = load %struct.rr_list*, %struct.rr_list** %82, align 8
  %84 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %83, i32 0, i32 0
  %85 = load %struct.rr_list*, %struct.rr_list** %84, align 8
  %86 = icmp ne %struct.rr_list* %85, null
  br i1 %86, label %.lr.ph7, label %._crit_edge8.loopexit

._crit_edge8.loopexit:                            ; preds = %.lr.ph7
  %.01.lcssa.ph = phi i32 [ %81, %.lr.ph7 ]
  br label %._crit_edge8

._crit_edge8:                                     ; preds = %._crit_edge8.loopexit, %51
  %.01.lcssa = phi i32 [ %63, %51 ], [ %.01.lcssa.ph, %._crit_edge8.loopexit ]
  %87 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %88 = load i32, i32* %87, align 4
  %89 = icmp sgt i32 %88, 5
  br i1 %89, label %90, label %92

; <label>:90:                                     ; preds = %._crit_edge8
  %91 = getelementptr [30 x i8], [30 x i8]* @.str.9.346, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %91, i32 %.01.lcssa)
  br label %92

; <label>:92:                                     ; preds = %90, %._crit_edge8
  %93 = sext i32 %.01.lcssa to i64
  %94 = call noalias i8* @malloc(i64 %93) #9, !track !126
  %95 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 4
  %96 = bitcast %union.u_data* %95 to i8**
  store i8* %94, i8** %96, align 8
  %97 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 4
  %98 = bitcast %union.u_data* %97 to i8**
  %99 = load i8*, i8** %98, align 8
  %100 = icmp ne i8* %99, null
  br i1 %100, label %102, label %101

; <label>:101:                                    ; preds = %92
  call void @rrset_free(%struct.rr_set* %14)
  br label %._crit_edge

; <label>:102:                                    ; preds = %92
  %103 = sext i32 %.01.lcssa to i64
  %104 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 3
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %4, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = add nsw i32 %106, 1
  %108 = trunc i32 %107 to i16
  %109 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 4
  %110 = bitcast %union.u_data* %109 to %struct.data_data**
  %111 = load %struct.data_data*, %struct.data_data** %110, align 8
  %112 = getelementptr inbounds %struct.data_data, %struct.data_data* %111, i32 0, i32 0
  store i16 %108, i16* %112, align 2
  %113 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %4, i32 0, i32 0
  %114 = load %struct.rr_list*, %struct.rr_list** %113, align 8
  %115 = icmp ne %struct.rr_list* %114, null
  br i1 %115, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %102
  %116 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 4
  %117 = bitcast %union.u_data* %116 to i8**
  %118 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %14, i32 0, i32 4
  %119 = bitcast %union.u_data* %118 to i8**
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.13 = phi %struct.rr_list* [ %146, %.lr.ph ], [ %4, %.lr.ph.preheader ]
  call void @unroll_loop(i32 57)
  %120 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.13, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = trunc i32 %121 to i16
  %123 = load i8*, i8** %117, align 8
  %124 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.13, i32 0, i32 1
  %125 = load i32, i32* %124, align 8
  %126 = add nsw i32 %125, 1
  %127 = sext i32 %126 to i64
  %128 = mul i64 2, %127
  %129 = getelementptr inbounds i8, i8* %123, i64 %128
  %130 = bitcast i8* %129 to i16*
  store i16 %122, i16* %130, align 2
  %131 = load i8*, i8** %119, align 8
  %132 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.13, i32 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8, i8* %131, i64 %134
  %136 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.13, i32 0, i32 3
  %137 = load %struct.rr*, %struct.rr** %136, align 8
  %138 = bitcast %struct.rr* %137 to i8*
  %139 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.13, i32 0, i32 3
  %140 = load %struct.rr*, %struct.rr** %139, align 8
  %141 = getelementptr inbounds %struct.rr, %struct.rr* %140, i32 0, i32 1
  %142 = load i16, i16* %141, align 4
  %143 = zext i16 %142 to i64
  %144 = add i64 %143, 6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %135, i8* align 1 %138, i64 %144, i1 false), !track !127
  %145 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.13, i32 0, i32 0
  %146 = load %struct.rr_list*, %struct.rr_list** %145, align 8
  %147 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %146, i32 0, i32 0
  %148 = load %struct.rr_list*, %struct.rr_list** %147, align 8
  %149 = icmp ne %struct.rr_list* %148, null
  br i1 %149, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.0.ph = phi %struct.rr_set* [ %14, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %102, %29, %13, %101, %28
  %.0 = phi %struct.rr_set* [ null, %101 ], [ null, %28 ], [ null, %13 ], [ %14, %29 ], [ %14, %102 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret %struct.rr_set* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rrset_free(%struct.rr_set*) #0 {
  %2 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = icmp sle i32 %3, 1
  %5 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 5
  br i1 %4, label %8, label %33

; <label>:8:                                      ; preds = %1
  br i1 %7, label %9, label %13

; <label>:9:                                      ; preds = %8
  %10 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr [37 x i8], [37 x i8]* @.str.10.347, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %12, %struct.rr_set* %0, i32 %11)
  br label %13

; <label>:13:                                     ; preds = %9, %8
  %14 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %15 = bitcast %union.u_key* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %18, label %22

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %20 = bitcast %union.u_key* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  call void @free(i8* %21) #9
  br label %22

; <label>:22:                                     ; preds = %18, %13
  %23 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 4
  %24 = bitcast %union.u_data* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %27, label %31

; <label>:27:                                     ; preds = %22
  %28 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 4
  %29 = bitcast %union.u_data* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  call void @free(i8* %30) #9
  br label %31

; <label>:31:                                     ; preds = %27, %22
  %32 = bitcast %struct.rr_set* %0 to i8*
  call void @free(i8* %32) #9
  br label %45

; <label>:33:                                     ; preds = %1
  br i1 %7, label %34, label %41

; <label>:34:                                     ; preds = %33
  %35 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = sub nsw i32 %38, 1
  %40 = getelementptr [30 x i8], [30 x i8]* @.str.11.348, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %40, %struct.rr_set* %0, i32 %36, i32 %39)
  br label %41

; <label>:41:                                     ; preds = %34, %33
  %42 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, -1
  store i32 %44, i32* %42, align 8
  br label %45

; <label>:45:                                     ; preds = %41, %31
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_set* @rrset_create_single(i8*, i32, i16 zeroext, i16 zeroext, i32, i16 zeroext, i8*) #0 {
  %8 = call %struct.rr_list* @rr_list_alloc()
  %9 = icmp ne %struct.rr_list* %8, null
  br i1 %9, label %10, label %19

; <label>:10:                                     ; preds = %7
  %11 = zext i16 %5 to i32
  %12 = call %struct.rr_list* @rr_list_add(%struct.rr_list* %8, i32 %4, i32 %11, i8* %6)
  %13 = icmp ne %struct.rr_list* %12, null
  br i1 %13, label %15, label %14

; <label>:14:                                     ; preds = %10
  call void @rr_list_free(%struct.rr_list* %8)
  br label %19

; <label>:15:                                     ; preds = %10
  %16 = trunc i32 %1 to i16
  %17 = call %struct.rr_set* @rrset_create(i16 zeroext %2, i16 zeroext %3, i16 zeroext %16, i8* %0, %struct.rr_list* %12)
  %18 = icmp ne %struct.rr_set* %17, null
  call void @rr_list_free(%struct.rr_list* %12)
  %. = select i1 %18, %struct.rr_set* %17, %struct.rr_set* null
  br label %19

; <label>:19:                                     ; preds = %15, %7, %14
  %.0 = phi %struct.rr_set* [ null, %14 ], [ null, %7 ], [ %., %15 ]
  ret %struct.rr_set* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rrset_freev(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.rr_set*
  call void @rrset_free(%struct.rr_set* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_set* @rrset_copy(%struct.rr_set*) #6 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 5
  br i1 %4, label %5, label %12

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = add nsw i32 %9, 1
  %11 = getelementptr [30 x i8], [30 x i8]* @.str.12.353, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %11, %struct.rr_set* %0, i32 %7, i32 %10)
  br label %12

; <label>:12:                                     ; preds = %5, %1
  %13 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  ret %struct.rr_set* %0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @rrset_copyv(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.rr_set*
  %3 = call %struct.rr_set* @rrset_copy(%struct.rr_set* %2)
  %4 = bitcast %struct.rr_set* %3 to i8*
  ret i8* %4
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @rrset_dupv(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.rr_set*
  %3 = call %struct.rr_set* @rrset_dup(%struct.rr_set* %2)
  %4 = bitcast %struct.rr_set* %3 to i8*
  ret i8* %4
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_set* @rrset_dup(%struct.rr_set*) #0 {
  %2 = call %struct.rr_set* @rrset_alloc()
  %3 = icmp ne %struct.rr_set* %2, null
  br i1 %3, label %4, label %75

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 2
  %6 = bitcast %union.u_key* %5 to i8**
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 4
  %8 = bitcast %union.u_data* %7 to i8**
  store i8* null, i8** %8, align 8
  %9 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %10 = bitcast %union.u_key* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %37

; <label>:13:                                     ; preds = %4
  %14 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = call noalias i8* @malloc(i64 %15) #9, !track !128
  %17 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 2
  %18 = bitcast %union.u_key* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 2
  %20 = bitcast %union.u_key* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %25, label %23

; <label>:23:                                     ; preds = %13
  %24 = bitcast %struct.rr_set* %2 to i8*
  call void @free(i8* %24) #9
  br label %75

; <label>:25:                                     ; preds = %13
  %26 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 2
  %27 = bitcast %union.u_key* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %30 = bitcast %union.u_key* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %31, i64 %33, i1 false), !track !129
  %34 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 1
  store i64 %35, i64* %36, align 8
  br label %37

; <label>:37:                                     ; preds = %25, %4
  %38 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 4
  %39 = bitcast %union.u_data* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = icmp ne i8* %40, null
  br i1 %41, label %42, label %75

; <label>:42:                                     ; preds = %37
  %43 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = call noalias i8* @malloc(i64 %44) #9, !track !130
  %46 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 4
  %47 = bitcast %union.u_data* %46 to i8**
  store i8* %45, i8** %47, align 8
  %48 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 4
  %49 = bitcast %union.u_data* %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp ne i8* %50, null
  br i1 %51, label %63, label %52

; <label>:52:                                     ; preds = %42
  %53 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 2
  %54 = bitcast %union.u_key* %53 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp ne i8* %55, null
  br i1 %56, label %57, label %61

; <label>:57:                                     ; preds = %52
  %58 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 2
  %59 = bitcast %union.u_key* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  call void @free(i8* %60) #9
  br label %61

; <label>:61:                                     ; preds = %57, %52
  %62 = bitcast %struct.rr_set* %2 to i8*
  call void @free(i8* %62) #9
  br label %75

; <label>:63:                                     ; preds = %42
  %64 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 4
  %65 = bitcast %union.u_data* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 4
  %68 = bitcast %union.u_data* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 3
  %71 = load i64, i64* %70, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %69, i64 %71, i1 false), !track !131
  %72 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 3
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %2, i32 0, i32 3
  store i64 %73, i64* %74, align 8
  br label %75

; <label>:75:                                     ; preds = %37, %63, %1, %61, %23
  %.0 = phi %struct.rr_set* [ null, %61 ], [ null, %23 ], [ null, %1 ], [ %2, %63 ], [ %2, %37 ]
  ret %struct.rr_set* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rrset_couple_free(%struct.RRset_Couple*) #0 {
  %2 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %0, i32 0, i32 0
  %3 = load %struct.rr_set*, %struct.rr_set** %2, align 8
  %4 = icmp ne %struct.rr_set* %3, null
  br i1 %4, label %5, label %8

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %0, i32 0, i32 0
  %7 = load %struct.rr_set*, %struct.rr_set** %6, align 8
  call void @rrset_free(%struct.rr_set* %7)
  br label %8

; <label>:8:                                      ; preds = %5, %1
  %9 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %0, i32 0, i32 1
  %10 = load %struct.rr_list*, %struct.rr_list** %9, align 8
  %11 = icmp ne %struct.rr_list* %10, null
  br i1 %11, label %12, label %15

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.RRset_Couple, %struct.RRset_Couple* %0, i32 0, i32 1
  %14 = load %struct.rr_list*, %struct.rr_list** %13, align 8
  call void @rr_list_free(%struct.rr_list* %14)
  br label %15

; <label>:15:                                     ; preds = %12, %8
  %16 = bitcast %struct.RRset_Couple* %0 to i8*
  call void @free(i8* %16) #9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @rrset_couple_freev(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.RRset_Couple*
  call void @rrset_couple_free(%struct.RRset_Couple* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @udp_request_start(%struct.context.107*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.361, i32 0, i32 0
  %3 = getelementptr [20 x i8], [20 x i8]* @.str.360, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 7
  %5 = bitcast {}** %4 to i32 (%struct.context.107*)**
  store i32 (%struct.context.107*)* @udp_request_process, i32 (%struct.context.107*)** %5, align 8
  %6 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 8
  %7 = bitcast {}** %6 to i32 (%struct.context.107*)**
  store i32 (%struct.context.107*)* @udp_request_retry, i32 (%struct.context.107*)** %7, align 8
  %8 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 17
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 512
  br i1 %10, label %11, label %14

; <label>:11:                                     ; preds = %1
  %12 = getelementptr [31 x i8], [31 x i8]* @.str.2.362, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %12)
  %13 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 1)
  br label %66

; <label>:14:                                     ; preds = %1
  %15 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 5
  %16 = load %struct.generic_list*, %struct.generic_list** %15, align 8
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast i8* %18 to %struct.sockaddr*
  %20 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 16
  %21 = bitcast %union.anon.0* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 17
  %24 = load i32, i32* %23, align 8
  %25 = call i32 @net_mesg_send(%struct.nia* null, i8* %22, i32 %24, %struct.sockaddr* %19)
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %31

; <label>:27:                                     ; preds = %14
  %28 = getelementptr [16 x i8], [16 x i8]* @.str.3.363, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %28)
  %29 = getelementptr [32 x i8], [32 x i8]* @.str.4.364, i32 0, i32 0
  %30 = getelementptr [20 x i8], [20 x i8]* @.str.360, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %29, i8* %30)
  br label %58

; <label>:31:                                     ; preds = %14
  %32 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %19, i32 0, i32 0
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = icmp eq i32 %34, 10
  br i1 %35, label %43, label %36

; <label>:36:                                     ; preds = %31
  %37 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %19, i32 0, i32 0
  %38 = load i16, i16* %37, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp eq i32 %39, 2
  %41 = zext i1 %40 to i64
  %42 = select i1 %40, i64 16, i64 16
  br label %43

; <label>:43:                                     ; preds = %31, %36
  %44 = phi i64 [ %42, %36 ], [ 28, %31 ]
  %45 = trunc i64 %44 to i32
  %46 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 10
  %47 = load i32, i32* %46, align 8
  %48 = trunc i32 %47 to i16
  %49 = call i32 bitcast (i32 (%struct.context*, %struct.sockaddr*, i32, i16)* @ev_udp_in_register to i32 (%struct.context.107*, %struct.sockaddr*, i32, i16)*)(%struct.context.107* %0, %struct.sockaddr* %19, i32 %45, i16 zeroext %48)
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

; <label>:51:                                     ; preds = %43
  %52 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 -1)
  br label %66

; <label>:53:                                     ; preds = %43
  %54 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 21
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = getelementptr [30 x i8], [30 x i8]* @.str.5.365, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %57, i32 %56)
  br label %58

; <label>:58:                                     ; preds = %53, %27
  %.01 = phi i32 [ 0, %27 ], [ %56, %53 ]
  %59 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 %.01)
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %63

; <label>:61:                                     ; preds = %58
  %62 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 -1)
  br label %66

; <label>:63:                                     ; preds = %58
  %64 = getelementptr [8 x i8], [8 x i8]* @.str.6.366, i32 0, i32 0
  %65 = getelementptr [20 x i8], [20 x i8]* @.str.360, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %64, i8* %65)
  br label %66

; <label>:66:                                     ; preds = %63, %61, %51, %11
  %.0 = phi i32 [ %13, %11 ], [ %62, %61 ], [ 0, %63 ], [ %52, %51 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @udp_request_process(%struct.context.107*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.361, i32 0, i32 0
  %3 = getelementptr [22 x i8], [22 x i8]* @.str.7.373, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 6
  %5 = load %struct.ev_to_data*, %struct.ev_to_data** %4, align 8
  %6 = icmp ne %struct.ev_to_data* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 6
  %9 = load %struct.ev_to_data*, %struct.ev_to_data** %8, align 8
  %10 = getelementptr inbounds %struct.ev_to_data, %struct.ev_to_data* %9, i32 0, i32 1
  store i32 (%struct.ev_to_data*)* null, i32 (%struct.ev_to_data*)** %10, align 8
  br label %11

; <label>:11:                                     ; preds = %7, %1
  %12 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 5
  %13 = load %struct.generic_list*, %struct.generic_list** %12, align 8
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %13, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %struct.sockaddr*
  %17 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 10
  %18 = load i32, i32* %17, align 8
  %19 = call i32 @ev_udp_in_remove(%struct.sockaddr* %16, i32 %18)
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %11
  %22 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 -1)
  br label %25

; <label>:23:                                     ; preds = %11
  %24 = call i32 bitcast (i32 (%struct.context*)* @request_finish to i32 (%struct.context.107*)*)(%struct.context.107* %0)
  br label %25

; <label>:25:                                     ; preds = %23, %21
  %.0 = phi i32 [ %22, %21 ], [ %24, %23 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @udp_request_retry(%struct.context.107*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.361, i32 0, i32 0
  %3 = getelementptr [20 x i8], [20 x i8]* @.str.8.367, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 5
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %5, i32 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i8* %7 to %struct.sockaddr*
  %9 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 10
  %10 = load i32, i32* %9, align 8
  %11 = call i32 @ev_udp_in_remove(%struct.sockaddr* %8, i32 %10)
  %12 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 12
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = icmp eq i32 %14, 28
  br i1 %15, label %21, label %16

; <label>:16:                                     ; preds = %1
  %17 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 12
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = icmp eq i32 %19, 38
  br i1 %20, label %21, label %67

; <label>:21:                                     ; preds = %16, %1
  %22 = getelementptr [41 x i8], [41 x i8]* @.str.9.368, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %22)
  %23 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 13
  %24 = load %struct.generic_list*, %struct.generic_list** %23, align 8
  call void @list_destroy(%struct.generic_list* %24, void (i8*)* @rrset_freev)
  %25 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 14
  %26 = load %struct.generic_list*, %struct.generic_list** %25, align 8
  call void @list_destroy(%struct.generic_list* %26, void (i8*)* @rrset_freev)
  %27 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 15
  %28 = load %struct.generic_list*, %struct.generic_list** %27, align 8
  call void @list_destroy(%struct.generic_list* %28, void (i8*)* @rrset_freev)
  %29 = call %struct.generic_list* @list_init()
  %30 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 13
  store %struct.generic_list* %29, %struct.generic_list** %30, align 8
  %31 = call %struct.generic_list* @list_init()
  %32 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 14
  store %struct.generic_list* %31, %struct.generic_list** %32, align 8
  %33 = call %struct.generic_list* @list_init()
  %34 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 15
  store %struct.generic_list* %33, %struct.generic_list** %34, align 8
  %35 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 13
  %36 = load %struct.generic_list*, %struct.generic_list** %35, align 8
  %37 = icmp ne %struct.generic_list* %36, null
  br i1 %37, label %38, label %46

; <label>:38:                                     ; preds = %21
  %39 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 14
  %40 = load %struct.generic_list*, %struct.generic_list** %39, align 8
  %41 = icmp ne %struct.generic_list* %40, null
  br i1 %41, label %42, label %46

; <label>:42:                                     ; preds = %38
  %43 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 15
  %44 = load %struct.generic_list*, %struct.generic_list** %43, align 8
  %45 = icmp ne %struct.generic_list* %44, null
  br i1 %45, label %48, label %46

; <label>:46:                                     ; preds = %42, %38, %21
  %47 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 -1)
  br label %126

; <label>:48:                                     ; preds = %42
  %49 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 0
  %50 = load %struct.context.107*, %struct.context.107** %49, align 8
  %51 = icmp ne %struct.context.107* %50, null
  br i1 %51, label %52, label %63

; <label>:52:                                     ; preds = %48
  %53 = getelementptr [27 x i8], [27 x i8]* @.str.10.369, i32 0, i32 0
  %54 = getelementptr [20 x i8], [20 x i8]* @.str.8.367, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %53, i8* %54)
  %55 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 0
  %56 = load %struct.context.107*, %struct.context.107** %55, align 8
  %57 = getelementptr inbounds %struct.context.107, %struct.context.107* %56, i32 0, i32 7
  %58 = bitcast {}** %57 to i32 (%struct.context.107*)**
  %59 = load i32 (%struct.context.107*)*, i32 (%struct.context.107*)** %58, align 8
  %60 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 0
  %61 = load %struct.context.107*, %struct.context.107** %60, align 8
  %62 = call i32 %59(%struct.context.107* %61)
  br label %63

; <label>:63:                                     ; preds = %52, %48
  %64 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context.107*)*)(%struct.context.107* %0)
  %65 = getelementptr [19 x i8], [19 x i8]* @.str.11.370, i32 0, i32 0
  %66 = getelementptr [20 x i8], [20 x i8]* @.str.8.367, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %65, i8* %66)
  br label %126

; <label>:67:                                     ; preds = %16
  %68 = call i32 bitcast (i32 (%struct.context*)* @request_retry to i32 (%struct.context.107*)*)(%struct.context.107* %0)
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %70, label %72

; <label>:70:                                     ; preds = %67
  %71 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 -2)
  br label %126

; <label>:72:                                     ; preds = %67
  %73 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 5
  %74 = load %struct.generic_list*, %struct.generic_list** %73, align 8
  %75 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %74, i32 0, i32 2
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast i8* %76 to %struct.sockaddr*
  %78 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 16
  %79 = bitcast %union.anon.0* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 17
  %82 = load i32, i32* %81, align 8
  %83 = call i32 @net_mesg_send(%struct.nia* null, i8* %80, i32 %82, %struct.sockaddr* %77)
  %84 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 17
  %85 = load i32, i32* %84, align 8
  %86 = icmp slt i32 %83, %85
  br i1 %86, label %87, label %93

; <label>:87:                                     ; preds = %72
  %88 = icmp slt i32 %83, 0
  br i1 %88, label %89, label %91

; <label>:89:                                     ; preds = %87
  %90 = getelementptr [33 x i8], [33 x i8]* @.str.12.371, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %90)
  br label %118

; <label>:91:                                     ; preds = %87
  %92 = getelementptr [26 x i8], [26 x i8]* @.str.13.372, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %92)
  br label %118

; <label>:93:                                     ; preds = %72
  %94 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 21
  %95 = load i16, i16* %94, align 2
  %96 = zext i16 %95 to i32
  %97 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %77, i32 0, i32 0
  %98 = load i16, i16* %97, align 2
  %99 = zext i16 %98 to i32
  %100 = icmp eq i32 %99, 10
  br i1 %100, label %108, label %101

; <label>:101:                                    ; preds = %93
  %102 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %77, i32 0, i32 0
  %103 = load i16, i16* %102, align 2
  %104 = zext i16 %103 to i32
  %105 = icmp eq i32 %104, 2
  %106 = zext i1 %105 to i64
  %107 = select i1 %105, i64 16, i64 16
  br label %108

; <label>:108:                                    ; preds = %93, %101
  %109 = phi i64 [ %107, %101 ], [ 28, %93 ]
  %110 = trunc i64 %109 to i32
  %111 = getelementptr inbounds %struct.context.107, %struct.context.107* %0, i32 0, i32 10
  %112 = load i32, i32* %111, align 8
  %113 = trunc i32 %112 to i16
  %114 = call i32 bitcast (i32 (%struct.context*, %struct.sockaddr*, i32, i16)* @ev_udp_in_register to i32 (%struct.context.107*, %struct.sockaddr*, i32, i16)*)(%struct.context.107* %0, %struct.sockaddr* %77, i32 %110, i16 zeroext %113)
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %118

; <label>:116:                                    ; preds = %108
  %117 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 -1)
  br label %126

; <label>:118:                                    ; preds = %108, %89, %91
  %.01 = phi i32 [ 0, %91 ], [ 0, %89 ], [ %96, %108 ]
  %119 = call i32 bitcast (i32 (%struct.context.19*, i32)* @context_timeout_register to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 %.01)
  %120 = icmp slt i32 %119, 0
  br i1 %120, label %121, label %123

; <label>:121:                                    ; preds = %118
  %122 = call i32 bitcast (i32 (%struct.context*, i32)* @request_abort to i32 (%struct.context.107*, i32)*)(%struct.context.107* %0, i32 -1)
  br label %126

; <label>:123:                                    ; preds = %118
  %124 = getelementptr [8 x i8], [8 x i8]* @.str.6.366, i32 0, i32 0
  %125 = getelementptr [20 x i8], [20 x i8]* @.str.8.367, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %124, i8* %125)
  br label %126

; <label>:126:                                    ; preds = %123, %121, %116, %70, %63, %46
  %.0 = phi i32 [ 0, %63 ], [ %47, %46 ], [ %71, %70 ], [ %122, %121 ], [ 0, %123 ], [ %117, %116 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_to_init() #0 {
  %1 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %2 = icmp ne %struct.qset* %1, null
  br i1 %2, label %7, label %3

; <label>:3:                                      ; preds = %0
  %4 = call %struct.qset* @queue_create()
  store %struct.qset* %4, %struct.qset** @ev_to_queue, align 8
  %5 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %6 = icmp ne %struct.qset* %5, null
  %. = select i1 %6, i32 0, i32 -1
  br label %7

; <label>:7:                                      ; preds = %3, %0
  %.0 = phi i32 [ -1, %0 ], [ %., %3 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_to_register(%struct.ev_to_data.14*) #0 {
  %2 = call noalias i8* @malloc(i64 16) #9, !track !132
  %3 = bitcast i8* %2 to %struct.gqueue*
  %4 = icmp ne %struct.gqueue* %3, null
  br i1 %4, label %8, label %5

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [27 x i8], [27 x i8]* @.str.1.377, i32 0, i32 0
  %7 = getelementptr [17 x i8], [17 x i8]* @.str.376, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %6, i8* %7)
  br label %110

; <label>:8:                                      ; preds = %1
  %9 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %10 = getelementptr inbounds %struct.qset, %struct.qset* %9, i32 0, i32 0
  %11 = load %struct.gqueue*, %struct.gqueue** %10, align 8
  call void @unroll_loop(i32 58)
  %12 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %11, i32 0, i32 0
  %13 = load %struct.gqueue*, %struct.gqueue** %12, align 8
  %14 = icmp ne %struct.gqueue* %13, null
  br i1 %14, label %.lr.ph11.preheader, label %.critedge

.lr.ph11.preheader:                               ; preds = %8
  %15 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 0
  %16 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %11, i32 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %struct.ev_to_data.14*
  %19 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %18, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* %15, align 8
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %.lr.ph7, label %.critedge.loopexit

.lr.ph7:                                          ; preds = %.lr.ph11.preheader
  br label %30

.lr.ph11:                                         ; preds = %30
  %.029 = phi %struct.gqueue* [ %32, %30 ]
  %23 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.029, i32 0, i32 1
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast i8* %24 to %struct.ev_to_data.14*
  %26 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %25, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = load i64, i64* %15, align 8
  %29 = icmp slt i64 %27, %28
  br i1 %29, label %30, label %.lr.ph11..critedge.loopexit_crit_edge

; <label>:30:                                     ; preds = %.lr.ph7, %.lr.ph11
  %.0296 = phi %struct.gqueue* [ %11, %.lr.ph7 ], [ %.029, %.lr.ph11 ]
  %31 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.0296, i32 0, i32 0
  %32 = load %struct.gqueue*, %struct.gqueue** %31, align 8
  call void @unroll_loop(i32 58)
  %33 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %32, i32 0, i32 0
  %34 = load %struct.gqueue*, %struct.gqueue** %33, align 8
  %35 = icmp ne %struct.gqueue* %34, null
  br i1 %35, label %.lr.ph11, label %..critedge.loopexit_crit_edge

..critedge.loopexit_crit_edge:                    ; preds = %30
  %split8 = phi %struct.gqueue* [ %32, %30 ]
  %split9 = phi %struct.gqueue* [ %.0296, %30 ]
  br label %.critedge.loopexit

.lr.ph11..critedge.loopexit_crit_edge:            ; preds = %.lr.ph11
  %split10 = phi %struct.gqueue* [ %.029, %.lr.ph11 ]
  %split11 = phi %struct.gqueue* [ %.0296, %.lr.ph11 ]
  br label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %.lr.ph11..critedge.loopexit_crit_edge, %..critedge.loopexit_crit_edge, %.lr.ph11.preheader
  %.02.lcssa.ph = phi %struct.gqueue* [ %split10, %.lr.ph11..critedge.loopexit_crit_edge ], [ %split8, %..critedge.loopexit_crit_edge ], [ %11, %.lr.ph11.preheader ]
  %.01.lcssa.ph = phi %struct.gqueue* [ %split11, %.lr.ph11..critedge.loopexit_crit_edge ], [ %split9, %..critedge.loopexit_crit_edge ], [ null, %.lr.ph11.preheader ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %8
  %.02.lcssa = phi %struct.gqueue* [ %11, %8 ], [ %.02.lcssa.ph, %.critedge.loopexit ]
  %.01.lcssa = phi %struct.gqueue* [ null, %8 ], [ %.01.lcssa.ph, %.critedge.loopexit ]
  %36 = icmp ne %struct.gqueue* %.01.lcssa, null
  br i1 %36, label %.preheader, label %48

.preheader:                                       ; preds = %.critedge
  call void @unroll_loop(i32 59)
  %37 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.02.lcssa, i32 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = icmp ne i8* %38, null
  br i1 %39, label %.lr.ph.preheader, label %.critedge1

.lr.ph.preheader:                                 ; preds = %.preheader
  %40 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 0
  %41 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.02.lcssa, i32 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast i8* %42 to %struct.ev_to_data.14*
  %44 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %43, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = load i64, i64* %40, align 8
  %47 = icmp eq i64 %45, %46
  br i1 %47, label %.lr.ph2, label %.critedge1.loopexit

.lr.ph2:                                          ; preds = %.lr.ph.preheader
  br label %71

; <label>:48:                                     ; preds = %.critedge
  %49 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, 3
  br i1 %51, label %52, label %55

; <label>:52:                                     ; preds = %48
  %53 = getelementptr [22 x i8], [22 x i8]* @.str.2.378, i32 0, i32 0
  %54 = getelementptr [17 x i8], [17 x i8]* @.str.376, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %53, i8* %54)
  br label %55

; <label>:55:                                     ; preds = %52, %48
  %56 = bitcast %struct.ev_to_data.14* %0 to i8*
  %57 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 1
  store i8* %56, i8** %57, align 8
  %58 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %59 = getelementptr inbounds %struct.qset, %struct.qset* %58, i32 0, i32 0
  %60 = load %struct.gqueue*, %struct.gqueue** %59, align 8
  %61 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 0
  store %struct.gqueue* %60, %struct.gqueue** %61, align 8
  %62 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %63 = getelementptr inbounds %struct.qset, %struct.qset* %62, i32 0, i32 0
  store %struct.gqueue* %3, %struct.gqueue** %63, align 8
  br label %110

.lr.ph:                                           ; preds = %71
  %.132 = phi %struct.gqueue* [ %73, %71 ]
  %64 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.132, i32 0, i32 1
  %65 = load i8*, i8** %64, align 8
  %66 = bitcast i8* %65 to %struct.ev_to_data.14*
  %67 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %66, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = load i64, i64* %40, align 8
  %70 = icmp eq i64 %68, %69
  br i1 %70, label %71, label %.lr.ph..critedge1.loopexit_crit_edge

; <label>:71:                                     ; preds = %.lr.ph2, %.lr.ph
  %.1321 = phi %struct.gqueue* [ %.02.lcssa, %.lr.ph2 ], [ %.132, %.lr.ph ]
  %72 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.1321, i32 0, i32 0
  %73 = load %struct.gqueue*, %struct.gqueue** %72, align 8
  call void @unroll_loop(i32 59)
  %74 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %73, i32 0, i32 1
  %75 = load i8*, i8** %74, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %.lr.ph, label %..critedge1.loopexit_crit_edge

..critedge1.loopexit_crit_edge:                   ; preds = %71
  %split = phi %struct.gqueue* [ %73, %71 ]
  %split3 = phi %struct.gqueue* [ %.1321, %71 ]
  br label %.critedge1.loopexit

.lr.ph..critedge1.loopexit_crit_edge:             ; preds = %.lr.ph
  %split4 = phi %struct.gqueue* [ %.132, %.lr.ph ]
  %split5 = phi %struct.gqueue* [ %.1321, %.lr.ph ]
  br label %.critedge1.loopexit

.critedge1.loopexit:                              ; preds = %.lr.ph..critedge1.loopexit_crit_edge, %..critedge1.loopexit_crit_edge, %.lr.ph.preheader
  %.13.lcssa.ph = phi %struct.gqueue* [ %split4, %.lr.ph..critedge1.loopexit_crit_edge ], [ %split, %..critedge1.loopexit_crit_edge ], [ %.02.lcssa, %.lr.ph.preheader ]
  %.1.lcssa.ph = phi %struct.gqueue* [ %split5, %.lr.ph..critedge1.loopexit_crit_edge ], [ %split3, %..critedge1.loopexit_crit_edge ], [ %.01.lcssa, %.lr.ph.preheader ]
  br label %.critedge1

.critedge1:                                       ; preds = %.critedge1.loopexit, %.preheader
  %.13.lcssa = phi %struct.gqueue* [ %.02.lcssa, %.preheader ], [ %.13.lcssa.ph, %.critedge1.loopexit ]
  %.1.lcssa = phi %struct.gqueue* [ %.01.lcssa, %.preheader ], [ %.1.lcssa.ph, %.critedge1.loopexit ]
  %77 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.13.lcssa, i32 0, i32 1
  %78 = load i8*, i8** %77, align 8
  %79 = icmp ne i8* %78, null
  %80 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %81 = load i32, i32* %80, align 4
  %82 = icmp sgt i32 %81, 3
  br i1 %79, label %101, label %83

; <label>:83:                                     ; preds = %.critedge1
  br i1 %82, label %84, label %87

; <label>:84:                                     ; preds = %83
  %85 = getelementptr [16 x i8], [16 x i8]* @.str.3.379, i32 0, i32 0
  %86 = getelementptr [17 x i8], [17 x i8]* @.str.376, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %85, i8* %86)
  br label %87

; <label>:87:                                     ; preds = %84, %83
  %88 = bitcast %struct.ev_to_data.14* %0 to i8*
  %89 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %90 = getelementptr inbounds %struct.qset, %struct.qset* %89, i32 0, i32 1
  %91 = load %struct.gqueue*, %struct.gqueue** %90, align 8
  %92 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %91, i32 0, i32 1
  store i8* %88, i8** %92, align 8
  %93 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %94 = getelementptr inbounds %struct.qset, %struct.qset* %93, i32 0, i32 1
  %95 = load %struct.gqueue*, %struct.gqueue** %94, align 8
  %96 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %95, i32 0, i32 0
  store %struct.gqueue* %3, %struct.gqueue** %96, align 8
  %97 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 1
  store i8* null, i8** %97, align 8
  %98 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 0
  store %struct.gqueue* null, %struct.gqueue** %98, align 8
  %99 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %100 = getelementptr inbounds %struct.qset, %struct.qset* %99, i32 0, i32 1
  store %struct.gqueue* %3, %struct.gqueue** %100, align 8
  br label %110

; <label>:101:                                    ; preds = %.critedge1
  br i1 %82, label %102, label %105

; <label>:102:                                    ; preds = %101
  %103 = getelementptr [18 x i8], [18 x i8]* @.str.4.380, i32 0, i32 0
  %104 = getelementptr [17 x i8], [17 x i8]* @.str.376, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %103, i8* %104)
  br label %105

; <label>:105:                                    ; preds = %102, %101
  %106 = bitcast %struct.ev_to_data.14* %0 to i8*
  %107 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 1
  store i8* %106, i8** %107, align 8
  %108 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.1.lcssa, i32 0, i32 0
  store %struct.gqueue* %3, %struct.gqueue** %108, align 8
  %109 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 0
  store %struct.gqueue* %.13.lcssa, %struct.gqueue** %109, align 8
  br label %110

; <label>:110:                                    ; preds = %55, %105, %87, %5
  %.0 = phi i32 [ -1, %5 ], [ 0, %87 ], [ 0, %105 ], [ 0, %55 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @ev_timeout_process() #0 {
  br label %1

; <label>:1:                                      ; preds = %32, %0
  call void @unroll_loop(i32 60)
  %2 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %3 = call i8* @queue_peek(%struct.qset* %2)
  %4 = bitcast i8* %3 to %struct.ev_to_data.14*
  %5 = icmp ne %struct.ev_to_data.14* %4, null
  br i1 %5, label %6, label %11

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %4, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = call i64 @time(i64* null) #9
  %10 = icmp sle i64 %8, %9
  br label %11

; <label>:11:                                     ; preds = %6, %1
  %12 = phi i1 [ false, %1 ], [ %10, %6 ]
  %13 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  br i1 %12, label %14, label %33

; <label>:14:                                     ; preds = %11
  %15 = call i8* @dequeue(%struct.qset* %13)
  %16 = bitcast i8* %15 to %struct.ev_to_data.14*
  %17 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %16, i32 0, i32 1
  %18 = bitcast {}** %17 to i32 (%struct.ev_to_data.14*)**
  %19 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %18, align 8
  %20 = icmp ne i32 (%struct.ev_to_data.14*)* %19, null
  %21 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %22 = icmp sgt i32 %21, 3
  br i1 %20, label %23, label %30

; <label>:23:                                     ; preds = %14
  br i1 %22, label %24, label %25

; <label>:24:                                     ; preds = %23
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6.382, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.381, i64 0, i64 0))
  br label %25

; <label>:25:                                     ; preds = %24, %23
  %26 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %16, i32 0, i32 1
  %27 = bitcast {}** %26 to i32 (%struct.ev_to_data.14*)**
  %28 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %27, align 8
  %29 = call i32 %28(%struct.ev_to_data.14* %16)
  br label %32

; <label>:30:                                     ; preds = %14
  br i1 %22, label %31, label %32

; <label>:31:                                     ; preds = %30
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7.383, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.381, i64 0, i64 0))
  br label %32

; <label>:32:                                     ; preds = %30, %31, %25
  call void @ev_to_data_free(%struct.ev_to_data.14* %16)
  br label %1

; <label>:33:                                     ; preds = %11
  %.lcssa = phi %struct.qset* [ %13, %11 ]
  %34 = call i8* @queue_peek(%struct.qset* %.lcssa)
  %35 = bitcast i8* %34 to %struct.ev_to_data.14*
  %36 = icmp ne %struct.ev_to_data.14* %35, null
  br i1 %36, label %37, label %40

; <label>:37:                                     ; preds = %33
  %38 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %35, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  br label %40

; <label>:40:                                     ; preds = %33, %37
  %.0 = phi i64 [ %39, %37 ], [ 0, %33 ]
  ret i64 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_to_data_free(%struct.ev_to_data.14*) #0 {
  %2 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 2
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %13 [
    i32 0, label %4
    i32 1, label %16
  ]

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 3
  %6 = bitcast %union.anon* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %16

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 3
  %11 = bitcast %union.anon* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  call void @free(i8* %12) #9
  br label %16

; <label>:13:                                     ; preds = %1
  %14 = getelementptr [35 x i8], [35 x i8]* @.str.9.385, i32 0, i32 0
  %15 = getelementptr [18 x i8], [18 x i8]* @.str.8.384, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 2, i8* %14, i8* %15)
  br label %16

; <label>:16:                                     ; preds = %1, %4, %9, %13
  %17 = bitcast %struct.ev_to_data.14* %0 to i8*
  call void @free(i8* %17) #9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_to_data_free_v(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.ev_to_data.14*
  call void @ev_to_data_free(%struct.ev_to_data.14* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_to_finish() #0 {
  %1 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  call void @queue_destroy(%struct.qset* %1, void (i8*)* @ev_to_data_free_v)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_to_flush(i32) #0 {
  %2 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %3 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 0
  %4 = load %struct.gqueue*, %struct.gqueue** %3, align 8
  %5 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %4, i32 0, i32 0
  %6 = load %struct.gqueue*, %struct.gqueue** %5, align 8
  %7 = icmp ne %struct.gqueue* %6, null
  br i1 %7, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %31
  %.01 = phi %struct.gqueue* [ %33, %31 ], [ %4, %.lr.ph.preheader ]
  call void @unroll_loop(i32 61)
  %8 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.01, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %31

; <label>:11:                                     ; preds = %.lr.ph
  %12 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.01, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast i8* %13 to %struct.ev_to_data.14*
  %15 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %0
  br i1 %17, label %18, label %31

; <label>:18:                                     ; preds = %11
  %19 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %14, i32 0, i32 1
  %20 = bitcast {}** %19 to i32 (%struct.ev_to_data.14*)**
  %21 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %20, align 8
  %22 = icmp ne i32 (%struct.ev_to_data.14*)* %21, null
  br i1 %22, label %23, label %28

; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %14, i32 0, i32 1
  %25 = bitcast {}** %24 to i32 (%struct.ev_to_data.14*)**
  %26 = load i32 (%struct.ev_to_data.14*)*, i32 (%struct.ev_to_data.14*)** %25, align 8
  %27 = call i32 %26(%struct.ev_to_data.14* %14)
  br label %28

; <label>:28:                                     ; preds = %23, %18
  %29 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %14, i32 0, i32 1
  %30 = bitcast {}** %29 to i32 (%struct.ev_to_data.14*)**
  store i32 (%struct.ev_to_data.14*)* null, i32 (%struct.ev_to_data.14*)** %30, align 8
  br label %31

; <label>:31:                                     ; preds = %.lr.ph, %28, %11
  %32 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.01, i32 0, i32 0
  %33 = load %struct.gqueue*, %struct.gqueue** %32, align 8
  %34 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %33, i32 0, i32 0
  %35 = load %struct.gqueue*, %struct.gqueue** %34, align 8
  %36 = icmp ne %struct.gqueue* %35, null
  br i1 %36, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %31
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_to_register_ifcheck() #0 {
  %1 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %2 = load i32, i32* %1, align 4
  %3 = icmp sgt i32 %2, 2
  br i1 %3, label %4, label %7

; <label>:4:                                      ; preds = %0
  %5 = getelementptr [10 x i8], [10 x i8]* @.str.11.387, i32 0, i32 0
  %6 = getelementptr [25 x i8], [25 x i8]* @.str.10.386, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %4, %0
  %8 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %9 = icmp ne %struct.qset* %8, null
  br i1 %9, label %10, label %27

; <label>:10:                                     ; preds = %7
  %11 = call noalias i8* @malloc(i64 32) #9, !track !133
  %12 = bitcast i8* %11 to %struct.ev_to_data.14*
  %13 = icmp ne %struct.ev_to_data.14* %12, null
  br i1 %13, label %17, label %14

; <label>:14:                                     ; preds = %10
  %15 = getelementptr [29 x i8], [29 x i8]* @.str.12.388, i32 0, i32 0
  %16 = getelementptr [25 x i8], [25 x i8]* @.str.10.386, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %15, i8* %16)
  br label %27

; <label>:17:                                     ; preds = %10
  %18 = call i64 @time(i64* null) #9
  %19 = add nsw i64 %18, 10
  %20 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 1
  %22 = bitcast {}** %21 to i32 (%struct.ev_to_data.14*)**
  store i32 (%struct.ev_to_data.14*)* @ev_to_handler_ifcheck, i32 (%struct.ev_to_data.14*)** %22, align 8
  %23 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 3
  %25 = bitcast %union.anon* %24 to i8**
  store i8* null, i8** %25, align 8
  %26 = call i32 @ev_to_register(%struct.ev_to_data.14* %12)
  br label %27

; <label>:27:                                     ; preds = %7, %17, %14
  %.0 = phi i32 [ 0, %17 ], [ -1, %14 ], [ -1, %7 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_to_handler_ifcheck(%struct.ev_to_data.14*) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 2
  br i1 %4, label %5, label %8

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [10 x i8], [10 x i8]* @.str.11.387, i32 0, i32 0
  %7 = getelementptr [24 x i8], [24 x i8]* @.str.13.389, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6, i8* %7)
  br label %8

; <label>:8:                                      ; preds = %5, %1
  %9 = icmp ne %struct.ev_to_data.14* %0, null
  br i1 %9, label %10, label %23

; <label>:10:                                     ; preds = %8
  %11 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = call i32 @net_reinit_socketlist(i32 %12, i32 0)
  switch i32 %13, label %20 [
    i32 0, label %14
    i32 1, label %17
  ]

; <label>:14:                                     ; preds = %10
  %15 = getelementptr [31 x i8], [31 x i8]* @.str.14.390, i32 0, i32 0
  %16 = getelementptr [24 x i8], [24 x i8]* @.str.13.389, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %15, i8* %16)
  br label %23

; <label>:17:                                     ; preds = %10
  %18 = getelementptr [24 x i8], [24 x i8]* @.str.15.391, i32 0, i32 0
  %19 = getelementptr [24 x i8], [24 x i8]* @.str.13.389, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %18, i8* %19)
  br label %23

; <label>:20:                                     ; preds = %10
  %21 = getelementptr [31 x i8], [31 x i8]* @.str.16.392, i32 0, i32 0
  %22 = getelementptr [24 x i8], [24 x i8]* @.str.13.389, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %21, i8* %22)
  br label %23

; <label>:23:                                     ; preds = %14, %17, %20, %8
  %24 = call i32 @ev_to_register_ifcheck()
  ret i32 %24
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @udp_response_start(i8*, i32, %struct.sockaddr*, %struct.nia*) #0 {
  %5 = getelementptr [10 x i8], [10 x i8]* @.str.1.394, i32 0, i32 0
  %6 = getelementptr [21 x i8], [21 x i8]* @.str.393, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  %7 = call %struct.context* bitcast (%struct.context.19* ()* @context_create to %struct.context* ()*)()
  %8 = icmp ne %struct.context* %7, null
  br i1 %8, label %11, label %9

; <label>:9:                                      ; preds = %4
  %10 = call i32 @response_abort(%struct.context* %7, i32 -1)
  br label %98

; <label>:11:                                     ; preds = %4
  %12 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 16
  %13 = bitcast %union.anon.0* %12 to i8**
  store i8* %0, i8** %13, align 8
  %14 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 17
  store i32 %1, i32* %14, align 8
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds i8, i8* %0, i64 %15
  %17 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 18
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 16
  %19 = bitcast %union.anon.0* %18 to %struct.mesg_hdr**
  %20 = load %struct.mesg_hdr*, %struct.mesg_hdr** %19, align 8
  %21 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %20, i32 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i32
  %24 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 10
  store i32 %23, i32* %24, align 8
  %25 = call %struct.nia* @nia_copy(%struct.nia* %3)
  %26 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 19
  store %struct.nia* %25, %struct.nia** %26, align 8
  %27 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 22
  %28 = load %struct.sockaddr*, %struct.sockaddr** %27, align 8
  %29 = bitcast %struct.sockaddr* %28 to i8*
  %30 = bitcast %struct.sockaddr* %2 to i8*
  %31 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %2, i32 0, i32 0
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = icmp eq i32 %33, 10
  br i1 %34, label %42, label %35

; <label>:35:                                     ; preds = %11
  %36 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %2, i32 0, i32 0
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %38, 2
  %40 = zext i1 %39 to i64
  %41 = select i1 %39, i64 16, i64 16
  br label %42

; <label>:42:                                     ; preds = %11, %35
  %43 = phi i64 [ %41, %35 ], [ 28, %11 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %29, i8* align 2 %30, i64 %43, i1 false), !track !134
  %44 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 16
  %45 = bitcast %union.anon.0* %44 to %struct.mesg_hdr**
  %46 = load %struct.mesg_hdr*, %struct.mesg_hdr** %45, align 8
  %47 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %46, i32 0, i32 1
  %48 = load i16, i16* %47, align 2
  %49 = lshr i16 %48, 3
  %50 = and i16 %49, 15
  %51 = trunc i16 %50 to i8
  %52 = zext i8 %51 to i32
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %78

; <label>:54:                                     ; preds = %42
  %55 = getelementptr [22 x i8], [22 x i8]* @.str.2.395, i32 0, i32 0
  %56 = getelementptr [21 x i8], [21 x i8]* @.str.393, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %55, i8* %56)
  %57 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 7
  store i32 (%struct.context*)* @udp_response_recursive_process, i32 (%struct.context*)** %57, align 8
  %58 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 8
  store i32 (%struct.context*)* @udp_response_recursive_retry, i32 (%struct.context*)** %58, align 8
  %59 = call i32 @request_start(%struct.context* %7, i32 0)
  switch i32 %59, label %69 [
    i32 0, label %98
    i32 1, label %60
  ]

; <label>:60:                                     ; preds = %54
  %61 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 16
  %62 = bitcast %union.anon.0* %61 to %struct.mesg_hdr**
  %63 = load %struct.mesg_hdr*, %struct.mesg_hdr** %62, align 8
  %64 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %63, i32 0, i32 1
  %65 = load i16, i16* %64, align 2
  %66 = and i16 %65, -3841
  %67 = or i16 %66, 256
  store i16 %67, i16* %64, align 2
  %68 = call i32 @udp_response_finish(%struct.context* %7)
  br label %98

; <label>:69:                                     ; preds = %54
  %70 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 16
  %71 = bitcast %union.anon.0* %70 to %struct.mesg_hdr**
  %72 = load %struct.mesg_hdr*, %struct.mesg_hdr** %71, align 8
  %73 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %72, i32 0, i32 1
  %74 = load i16, i16* %73, align 2
  %75 = and i16 %74, -3841
  %76 = or i16 %75, 512
  store i16 %76, i16* %73, align 2
  %77 = call i32 @udp_response_finish(%struct.context* %7)
  br label %98

; <label>:78:                                     ; preds = %42
  %79 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 16
  %80 = bitcast %union.anon.0* %79 to %struct.mesg_hdr**
  %81 = load %struct.mesg_hdr*, %struct.mesg_hdr** %80, align 8
  %82 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %81, i32 0, i32 1
  %83 = load i16, i16* %82, align 2
  %84 = lshr i16 %83, 3
  %85 = and i16 %84, 15
  %86 = trunc i16 %85 to i8
  %87 = zext i8 %86 to i32
  %88 = getelementptr [23 x i8], [23 x i8]* @.str.3.396, i32 0, i32 0
  %89 = getelementptr [21 x i8], [21 x i8]* @.str.393, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %88, i8* %89, i32 %87)
  %90 = getelementptr inbounds %struct.context, %struct.context* %7, i32 0, i32 16
  %91 = bitcast %union.anon.0* %90 to %struct.mesg_hdr**
  %92 = load %struct.mesg_hdr*, %struct.mesg_hdr** %91, align 8
  %93 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %92, i32 0, i32 1
  %94 = load i16, i16* %93, align 2
  %95 = and i16 %94, -3841
  %96 = or i16 %95, 1024
  store i16 %96, i16* %93, align 2
  %97 = call i32 @udp_response_finish(%struct.context* %7)
  br label %98

; <label>:98:                                     ; preds = %54, %78, %69, %60, %9
  %.0 = phi i32 [ %77, %69 ], [ %68, %60 ], [ %97, %78 ], [ %10, %9 ], [ 0, %54 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @udp_response_recursive_process(%struct.context*) #0 {
  %2 = call i32 @recursive_process(%struct.context* %0)
  switch i32 %2, label %5 [
    i32 0, label %14
    i32 1, label %3
  ]

; <label>:3:                                      ; preds = %1
  %4 = call i32 @udp_response_finish(%struct.context* %0)
  br label %14

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %7 = bitcast %union.anon.0* %6 to %struct.mesg_hdr**
  %8 = load %struct.mesg_hdr*, %struct.mesg_hdr** %7, align 8
  %9 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %8, i32 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = and i16 %10, -3841
  %12 = or i16 %11, 512
  store i16 %12, i16* %9, align 2
  %13 = call i32 @udp_response_finish(%struct.context* %0)
  br label %14

; <label>:14:                                     ; preds = %1, %5, %3
  %.0 = phi i32 [ %13, %5 ], [ %4, %3 ], [ 0, %1 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @udp_response_recursive_retry(%struct.context*) #0 {
  %2 = getelementptr [51 x i8], [51 x i8]* @.str.4.403, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %2)
  %3 = call i32 @response_abort(%struct.context* %0, i32 0)
  ret i32 %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @udp_response_finish(%struct.context*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.394, i32 0, i32 0
  %3 = getelementptr [22 x i8], [22 x i8]* @.str.5.397, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = call i32 @assemble_response(%struct.context* %0)
  %5 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %12, label %8

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %10 = load i32, i32* %9, align 8
  %11 = icmp sgt i32 %10, 512
  br i1 %11, label %12, label %18

; <label>:12:                                     ; preds = %8, %1
  %13 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8
  call void @list_destroy(%struct.generic_list* %14, void (i8*)* @rrset_freev)
  %15 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 15
  store %struct.generic_list* null, %struct.generic_list** %15, align 8
  %16 = getelementptr [40 x i8], [40 x i8]* @.str.6.398, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %16)
  %17 = call i32 @assemble_response(%struct.context* %0)
  br label %18

; <label>:18:                                     ; preds = %12, %8
  %19 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %20 = load i32, i32* %19, align 8
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %26, label %22

; <label>:22:                                     ; preds = %18
  %23 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 512
  br i1 %25, label %26, label %32

; <label>:26:                                     ; preds = %22, %18
  %27 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  %28 = load %struct.generic_list*, %struct.generic_list** %27, align 8
  call void @list_destroy(%struct.generic_list* %28, void (i8*)* @rrset_freev)
  %29 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 14
  store %struct.generic_list* null, %struct.generic_list** %29, align 8
  %30 = getelementptr [39 x i8], [39 x i8]* @.str.7.399, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %30)
  %31 = call i32 @assemble_response(%struct.context* %0)
  br label %32

; <label>:32:                                     ; preds = %26, %22
  %33 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %40, label %36

; <label>:36:                                     ; preds = %32
  %37 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %38, 512
  br i1 %39, label %40, label %53

; <label>:40:                                     ; preds = %36, %32
  %41 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  %42 = load %struct.generic_list*, %struct.generic_list** %41, align 8
  call void @list_destroy(%struct.generic_list* %42, void (i8*)* @rrset_freev)
  %43 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 13
  store %struct.generic_list* null, %struct.generic_list** %43, align 8
  %44 = call i32 @assemble_response(%struct.context* %0)
  %45 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %46 = bitcast %union.anon.0* %45 to %struct.mesg_hdr**
  %47 = load %struct.mesg_hdr*, %struct.mesg_hdr** %46, align 8
  %48 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %47, i32 0, i32 1
  %49 = load i16, i16* %48, align 2
  %50 = and i16 %49, -3
  %51 = or i16 %50, 2
  store i16 %51, i16* %48, align 2
  %52 = getelementptr [31 x i8], [31 x i8]* @.str.8.400, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %52)
  br label %53

; <label>:53:                                     ; preds = %40, %36
  %54 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %55 = load i32, i32* %54, align 8
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %61, label %57

; <label>:57:                                     ; preds = %53
  %58 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %59 = load i32, i32* %58, align 8
  %60 = icmp sgt i32 %59, 512
  br i1 %60, label %61, label %64

; <label>:61:                                     ; preds = %57, %53
  %62 = getelementptr [34 x i8], [34 x i8]* @.str.9.401, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %62)
  %63 = call i32 @response_abort(%struct.context* %0, i32 1)
  br label %83

; <label>:64:                                     ; preds = %57
  %65 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 19
  %66 = load %struct.nia*, %struct.nia** %65, align 8
  %67 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 16
  %68 = bitcast %union.anon.0* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 22
  %73 = load %struct.sockaddr*, %struct.sockaddr** %72, align 8
  %74 = call i32 @net_mesg_send(%struct.nia* %66, i8* %69, i32 %71, %struct.sockaddr* %73)
  %75 = getelementptr inbounds %struct.context, %struct.context* %0, i32 0, i32 17
  %76 = load i32, i32* %75, align 8
  %77 = icmp slt i32 %74, %76
  br i1 %77, label %78, label %81

; <label>:78:                                     ; preds = %64
  %79 = getelementptr [24 x i8], [24 x i8]* @.str.10.402, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %79)
  %80 = call i32 @response_abort(%struct.context* %0, i32 -1)
  br label %83

; <label>:81:                                     ; preds = %64
  %82 = call i8* bitcast (i8* (%struct.context.19*)* @context_destroy to i8* (%struct.context*)*)(%struct.context* %0)
  br label %83

; <label>:83:                                     ; preds = %81, %78, %61
  %.0 = phi i32 [ %63, %61 ], [ %80, %78 ], [ 0, %81 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @ev_signal_initiator_generic(i32) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 2
  br i1 %4, label %5, label %7

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [38 x i8], [38 x i8]* @.str.1.406, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %5, %1
  %8 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  %9 = icmp ne %struct.qset* %8, null
  br i1 %9, label %.preheader, label %10

.preheader:                                       ; preds = %7
  call void @unroll_loop(i32 62)
  br label %12

; <label>:10:                                     ; preds = %7
  %11 = getelementptr [52 x i8], [52 x i8]* @.str.2.407, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %11)
  br label %37

; <label>:12:                                     ; preds = %.preheader, %15
  %lsr.iv = phi [6 x %struct.anon.124]* [ @Ev_matrix, %.preheader ], [ %18, %15 ]
  %indvars.iv1 = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %15 ]
  %lsr.iv1 = bitcast [6 x %struct.anon.124]* %lsr.iv to i32*
  %13 = load i32, i32* %lsr.iv1, align 8
  %14 = icmp ne i32 %13, %0
  br i1 %14, label %15, label %.critedgesplit

; <label>:15:                                     ; preds = %12
  %indvars.iv.next = add nuw nsw i64 %indvars.iv1, 1
  call void @unroll_loop(i32 62)
  %scevgep2 = getelementptr i32, i32* %lsr.iv1, i64 6
  %16 = load i32, i32* %scevgep2, align 8
  %17 = icmp sgt i32 %16, 0
  %scevgep = getelementptr [6 x %struct.anon.124], [6 x %struct.anon.124]* %lsr.iv, i64 0, i64 1
  %18 = bitcast %struct.anon.124* %scevgep to [6 x %struct.anon.124]*
  br i1 %17, label %12, label %..critedge_crit_edge

.critedgesplit:                                   ; preds = %12
  br label %.critedge

..critedge_crit_edge:                             ; preds = %15
  br label %.critedge

.critedge:                                        ; preds = %.critedgesplit, %..critedge_crit_edge
  %.0.lcssa.wide = phi i64 [ %indvars.iv.next, %..critedge_crit_edge ], [ %indvars.iv1, %.critedgesplit ]
  %19 = trunc i64 %.0.lcssa.wide to i32
  %20 = call noalias i8* @malloc(i64 8) #9, !track !135
  %21 = bitcast i8* %20 to %struct.ev_sig_data*
  %22 = icmp ne %struct.ev_sig_data* %21, null
  br i1 %22, label %25, label %23

; <label>:23:                                     ; preds = %.critedge
  %24 = getelementptr [48 x i8], [48 x i8]* @.str.3.408, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %24)
  br label %37

; <label>:25:                                     ; preds = %.critedge
  %26 = sext i32 %19 to i64
  %27 = getelementptr inbounds [6 x %struct.anon.124], [6 x %struct.anon.124]* @Ev_matrix, i64 0, i64 %26
  %28 = getelementptr inbounds %struct.anon.124, %struct.anon.124* %27, i32 0, i32 2
  %29 = load void ()*, void ()** %28, align 8
  %30 = getelementptr inbounds %struct.ev_sig_data, %struct.ev_sig_data* %21, i32 0, i32 0
  store void ()* %29, void ()** %30, align 8
  %31 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  %32 = bitcast %struct.ev_sig_data* %21 to i8*
  %33 = call i32 @enqueue(%struct.qset* %31, i8* %32)
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %37

; <label>:35:                                     ; preds = %25
  %36 = getelementptr [50 x i8], [50 x i8]* @.str.4.409, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %36)
  br label %37

; <label>:37:                                     ; preds = %25, %35, %23, %10
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @ev_handler_cleanup() #0 {
  %1 = call i32 @totd_exit(i32 0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @ev_handler_sigusr1() #0 {
  %1 = getelementptr [41 x i8], [41 x i8]* @.str.5.405, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @ev_handler_sigusr2() #0 {
  %1 = getelementptr [41 x i8], [41 x i8]* @.str.6.404, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_signal_init() #0 {
  br label %1

; <label>:1:                                      ; preds = %0, %1
  %lsr.iv = phi i64 [ -120, %0 ], [ %lsr.iv.next, %1 ]
  %lsr.iv3 = inttoptr i64 %lsr.iv to void (i32)**
  %lsr.iv1 = inttoptr i64 %lsr.iv to i32*
  call void @unroll_loop(i32 63)
  %uglygep = getelementptr i8, i8* bitcast ([6 x %struct.anon.124]* @Ev_matrix to i8*), i64 %lsr.iv
  %uglygep4 = bitcast i8* %uglygep to void (i32)**
  %uglygep2 = bitcast i8* %uglygep to i32*
  %scevgep = getelementptr i32, i32* %uglygep2, i64 30
  %2 = load i32, i32* %scevgep, align 8
  %scevgep5 = getelementptr void (i32)*, void (i32)** %uglygep4, i64 16
  %3 = load void (i32)*, void (i32)** %scevgep5, align 8
  %4 = call void (i32)* @signal(i32 %2, void (i32)* %3) #9, !track !136
  %lsr.iv.next = add nsw i64 %lsr.iv, 24
  %exitcond = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond, label %1, label %5

; <label>:5:                                      ; preds = %1
  %6 = call %struct.qset* @queue_create()
  store %struct.qset* %6, %struct.qset** @Ev_signal_queue, align 8
  %7 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  %8 = icmp ne %struct.qset* %7, null
  %. = select i1 %8, i32 0, i32 -1
  ret i32 %.
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_signal_process() #0 {
  %1 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  %2 = icmp ne %struct.qset* %1, null
  br i1 %2, label %3, label %16

; <label>:3:                                      ; preds = %0
  %4 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  %5 = call i8* @dequeue(%struct.qset* %4)
  %6 = bitcast i8* %5 to %struct.ev_sig_data*
  %7 = icmp ne %struct.ev_sig_data* %6, null
  br i1 %7, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %8 = phi %struct.ev_sig_data* [ %14, %.lr.ph ], [ %6, %.lr.ph.preheader ]
  call void @unroll_loop(i32 64)
  %9 = getelementptr inbounds %struct.ev_sig_data, %struct.ev_sig_data* %8, i32 0, i32 0
  %10 = load void ()*, void ()** %9, align 8
  call void %10()
  %11 = bitcast %struct.ev_sig_data* %8 to i8*
  call void @free(i8* %11) #9
  %12 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  %13 = call i8* @dequeue(%struct.qset* %12)
  %14 = bitcast i8* %13 to %struct.ev_sig_data*
  %15 = icmp ne %struct.ev_sig_data* %14, null
  br i1 %15, label %.lr.ph, label %._crit_edge.loopexit

; <label>:16:                                     ; preds = %0
  %17 = getelementptr [42 x i8], [42 x i8]* @.str.410, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %17)
  br label %._crit_edge

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3, %16
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_signal_finish() #0 {
  %1 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  call void @queue_destroy(%struct.qset* %1, void (i8*)* @free)
  store %struct.qset* null, %struct.qset** @Ev_signal_queue, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_udp_in_eq(i8*, i8*) #0 {
  %3 = bitcast i8* %0 to %struct.ev_udp_in_data*
  %4 = bitcast i8* %1 to %struct.ev_udp_in_data*
  %5 = icmp ne %struct.ev_udp_in_data* %3, null
  %6 = icmp ne %struct.ev_udp_in_data* %4, null
  %or.cond = and i1 %5, %6
  br i1 %or.cond, label %7, label %71

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %3, i32 0, i32 1
  %9 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %10 = icmp ne %struct.sockaddr* %9, null
  br i1 %10, label %11, label %71

; <label>:11:                                     ; preds = %7
  %12 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %4, i32 0, i32 1
  %13 = load %struct.sockaddr*, %struct.sockaddr** %12, align 8
  %14 = icmp ne %struct.sockaddr* %13, null
  br i1 %14, label %15, label %71

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %3, i32 0, i32 1
  %17 = load %struct.sockaddr*, %struct.sockaddr** %16, align 8
  %18 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %17, i32 0, i32 0
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = icmp eq i32 %20, 10
  br i1 %21, label %31, label %22

; <label>:22:                                     ; preds = %15
  %23 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %3, i32 0, i32 1
  %24 = load %struct.sockaddr*, %struct.sockaddr** %23, align 8
  %25 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %24, i32 0, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = icmp eq i32 %27, 2
  %29 = zext i1 %28 to i64
  %30 = select i1 %28, i64 16, i64 16
  br label %31

; <label>:31:                                     ; preds = %15, %22
  %32 = phi i64 [ %30, %22 ], [ 28, %15 ]
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %4, i32 0, i32 1
  %35 = load %struct.sockaddr*, %struct.sockaddr** %34, align 8
  %36 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %35, i32 0, i32 0
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %38, 10
  br i1 %39, label %49, label %40

; <label>:40:                                     ; preds = %31
  %41 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %4, i32 0, i32 1
  %42 = load %struct.sockaddr*, %struct.sockaddr** %41, align 8
  %43 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %42, i32 0, i32 0
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = icmp eq i32 %45, 2
  %47 = zext i1 %46 to i64
  %48 = select i1 %46, i64 16, i64 16
  br label %49

; <label>:49:                                     ; preds = %31, %40
  %50 = phi i64 [ %48, %40 ], [ 28, %31 ]
  %51 = trunc i64 %50 to i32
  %52 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %3, i32 0, i32 2
  %53 = load i16, i16* %52, align 8
  %54 = zext i16 %53 to i32
  %55 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %4, i32 0, i32 2
  %56 = load i16, i16* %55, align 8
  %57 = zext i16 %56 to i32
  %58 = icmp eq i32 %54, %57
  %59 = icmp eq i32 %33, %51
  %or.cond1 = and i1 %58, %59
  br i1 %or.cond1, label %60, label %70

; <label>:60:                                     ; preds = %49
  %61 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %3, i32 0, i32 1
  %62 = load %struct.sockaddr*, %struct.sockaddr** %61, align 8
  %63 = bitcast %struct.sockaddr* %62 to i8*
  %64 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %4, i32 0, i32 1
  %65 = load %struct.sockaddr*, %struct.sockaddr** %64, align 8
  %66 = bitcast %struct.sockaddr* %65 to i8*
  %67 = sext i32 %33 to i64
  %68 = call i32 @memcmp(i8* %63, i8* %66, i64 %67) #8
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %71

; <label>:70:                                     ; preds = %60, %49
  br label %71

; <label>:71:                                     ; preds = %60, %2, %7, %11, %70
  %.0 = phi i32 [ 1, %70 ], [ -1, %11 ], [ -1, %7 ], [ -1, %2 ], [ 0, %60 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_udp_in_data_free(%struct.ev_udp_in_data*) #0 {
  %2 = icmp ne %struct.ev_udp_in_data* %0, null
  br i1 %2, label %3, label %13

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %0, i32 0, i32 1
  %5 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8
  %6 = icmp ne %struct.sockaddr* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %3
  %8 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %0, i32 0, i32 1
  %9 = load %struct.sockaddr*, %struct.sockaddr** %8, align 8
  %10 = bitcast %struct.sockaddr* %9 to i8*
  call void @free(i8* %10) #9
  br label %11

; <label>:11:                                     ; preds = %7, %3
  %12 = bitcast %struct.ev_udp_in_data* %0 to i8*
  call void @free(i8* %12) #9
  br label %13

; <label>:13:                                     ; preds = %11, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_udp_in_data_free_v(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.ev_udp_in_data*
  call void @ev_udp_in_data_free(%struct.ev_udp_in_data* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_udp_in_init() #0 {
  %1 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8
  %2 = icmp ne %struct.generic_list* %1, null
  br i1 %2, label %11, label %3

; <label>:3:                                      ; preds = %0
  %4 = call %struct.generic_list* @list_init()
  store %struct.generic_list* %4, %struct.generic_list** @UDPL_head, align 8
  %5 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8
  %6 = icmp ne %struct.generic_list* %5, null
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %3
  %8 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8
  store %struct.generic_list* %8, %struct.generic_list** @UDPL_tail, align 8
  %9 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2
  store i8* null, i8** %10, align 8
  br label %11

; <label>:11:                                     ; preds = %3, %0, %7
  %.0 = phi i32 [ 0, %7 ], [ -1, %0 ], [ -1, %3 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ev_udp_in_finish() #0 {
  %1 = call i32 @net_delete_socketlist()
  %2 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8
  call void @list_destroy(%struct.generic_list* %2, void (i8*)* @ev_udp_in_data_free_v)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_udp_in_register(%struct.context*, %struct.sockaddr*, i32, i16 zeroext) #0 {
  %5 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 3
  br i1 %7, label %8, label %12

; <label>:8:                                      ; preds = %4
  %9 = zext i16 %3 to i32
  %10 = getelementptr [10 x i8], [10 x i8]* @.str.1.414, i32 0, i32 0
  %11 = getelementptr [21 x i8], [21 x i8]* @.str.413, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %10, i8* %11, i32 %9)
  br label %12

; <label>:12:                                     ; preds = %8, %4
  %13 = call noalias i8* @malloc(i64 24) #9, !track !137
  %14 = bitcast i8* %13 to %struct.ev_udp_in_data*
  %15 = icmp ne %struct.ev_udp_in_data* %14, null
  br i1 %15, label %16, label %46

; <label>:16:                                     ; preds = %12
  %17 = sext i32 %2 to i64
  %18 = call noalias i8* @malloc(i64 %17) #9, !track !138
  %19 = bitcast i8* %18 to %struct.sockaddr*
  %20 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %14, i32 0, i32 1
  store %struct.sockaddr* %19, %struct.sockaddr** %20, align 8
  %21 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %14, i32 0, i32 1
  %22 = load %struct.sockaddr*, %struct.sockaddr** %21, align 8
  %23 = icmp ne %struct.sockaddr* %22, null
  br i1 %23, label %26, label %24

; <label>:24:                                     ; preds = %16
  %25 = bitcast %struct.ev_udp_in_data* %14 to i8*
  call void @free(i8* %25) #9
  br label %46

; <label>:26:                                     ; preds = %16
  %27 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %14, i32 0, i32 1
  %28 = load %struct.sockaddr*, %struct.sockaddr** %27, align 8
  %29 = bitcast %struct.sockaddr* %28 to i8*
  %30 = bitcast %struct.sockaddr* %1 to i8*
  %31 = sext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %29, i8* align 2 %30, i64 %31, i1 false), !track !139
  %32 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %14, i32 0, i32 0
  store %struct.context* %0, %struct.context** %32, align 8
  %33 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %14, i32 0, i32 2
  store i16 %3, i16* %33, align 8
  %34 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8
  %35 = bitcast %struct.ev_udp_in_data* %14 to i8*
  %36 = call i32 @list_add(%struct.generic_list* %34, i8* %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %45, label %38

; <label>:38:                                     ; preds = %26
  %39 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 3
  br i1 %41, label %42, label %46

; <label>:42:                                     ; preds = %38
  %43 = getelementptr [7 x i8], [7 x i8]* @.str.2.415, i32 0, i32 0
  %44 = getelementptr [21 x i8], [21 x i8]* @.str.413, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %43, i8* %44, %struct.ev_udp_in_data* %14)
  br label %46

; <label>:45:                                     ; preds = %26
  call void @ev_udp_in_data_free(%struct.ev_udp_in_data* %14)
  br label %46

; <label>:46:                                     ; preds = %38, %42, %12, %45, %24
  %.0 = phi i32 [ -1, %45 ], [ -1, %24 ], [ -1, %12 ], [ 0, %42 ], [ 0, %38 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_udp_in_remove(%struct.sockaddr*, i32) #0 {
  %3 = alloca %struct.ev_udp_in_data, align 8, !track !140
  %4 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %3, i32 0, i32 1
  store %struct.sockaddr* %0, %struct.sockaddr** %4, align 8
  %5 = trunc i32 %1 to i16
  %6 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %3, i32 0, i32 2
  store i16 %5, i16* %6, align 8
  %7 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8
  %8 = bitcast %struct.ev_udp_in_data* %3 to i8*
  %9 = call %struct.generic_list* @list_search(%struct.generic_list* %7, i8* %8, i32 (i8*, i8*)* @ev_udp_in_eq)
  %10 = icmp ne %struct.generic_list* %9, null
  br i1 %10, label %11, label %14

; <label>:11:                                     ; preds = %2
  %12 = call i8* @list_delete(%struct.generic_list* %9)
  %13 = bitcast i8* %12 to %struct.ev_udp_in_data*
  call void @ev_udp_in_data_free(%struct.ev_udp_in_data* %13)
  br label %14

; <label>:14:                                     ; preds = %2, %11
  %.0 = phi i32 [ 0, %11 ], [ -1, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_udp_in_read(i32) #0 {
  %2 = alloca %struct.sockaddr_storage, align 8, !track !141
  %3 = alloca i32, align 4, !track !142
  %4 = alloca %struct.ev_udp_in_data, align 8, !track !143
  %5 = call noalias i8* @malloc(i64 512) #9, !track !144
  %6 = icmp ne i8* %5, null
  br i1 %6, label %7, label %123

; <label>:7:                                      ; preds = %1
  %8 = bitcast i8* %5 to %struct.mesg_hdr*
  store i32 128, i32* %3, align 4
  %9 = bitcast %struct.sockaddr_storage* %2 to i8*
  %10 = load i32, i32* %3, align 4
  %11 = zext i32 %10 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 %11, i1 false)
  %12 = bitcast %struct.sockaddr_storage* %2 to %struct.sockaddr*
  %13 = call i64 @recvfrom(i32 %0, i8* %5, i64 512, i32 0, %struct.sockaddr* %12, i32* %3)
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %20

; <label>:16:                                     ; preds = %7
  %17 = getelementptr [13 x i8], [13 x i8]* @.str.4.419, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %17)
  %18 = icmp ne i8* %5, null
  br i1 %18, label %19, label %123

; <label>:19:                                     ; preds = %16
  call void @free(i8* %5) #9
  br label %123

; <label>:20:                                     ; preds = %7
  %21 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 3
  br i1 %23, label %24, label %27

; <label>:24:                                     ; preds = %20
  %25 = getelementptr [33 x i8], [33 x i8]* @.str.5.420, i32 0, i32 0
  %26 = getelementptr [17 x i8], [17 x i8]* @.str.3.418, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %25, i8* %26, i32 %0, i32 %14)
  br label %27

; <label>:27:                                     ; preds = %24, %20
  %28 = sext i32 %14 to i64
  %29 = icmp ult i64 %28, 12
  br i1 %29, label %30, label %34

; <label>:30:                                     ; preds = %27
  %31 = getelementptr [27 x i8], [27 x i8]* @.str.6.421, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %31)
  %32 = icmp ne i8* %5, null
  br i1 %32, label %33, label %123

; <label>:33:                                     ; preds = %30
  call void @free(i8* %5) #9
  br label %123

; <label>:34:                                     ; preds = %27
  %35 = bitcast %struct.sockaddr_storage* %2 to %struct.sockaddr*
  %36 = load i32, i32* %3, align 4
  %37 = trunc i32 %36 to i16
  %38 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %8, i32 0, i32 0
  %39 = load i16, i16* %38, align 2
  %40 = call i32 @ev_dup(%struct.sockaddr* %35, i16 zeroext %37, i16 zeroext %39)
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %52

; <label>:42:                                     ; preds = %34
  %43 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 3
  br i1 %45, label %46, label %49

; <label>:46:                                     ; preds = %42
  %47 = getelementptr [30 x i8], [30 x i8]* @.str.7.422, i32 0, i32 0
  %48 = getelementptr [17 x i8], [17 x i8]* @.str.3.418, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %47, i8* %48)
  br label %49

; <label>:49:                                     ; preds = %46, %42
  %50 = icmp ne i8* %5, null
  br i1 %50, label %51, label %123

; <label>:51:                                     ; preds = %49
  call void @free(i8* %5) #9
  br label %123

; <label>:52:                                     ; preds = %34
  %53 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %8, i32 0, i32 0
  %54 = load i16, i16* %53, align 2
  %55 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %4, i32 0, i32 2
  store i16 %54, i16* %55, align 8
  %56 = bitcast %struct.sockaddr_storage* %2 to %struct.sockaddr*
  %57 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %4, i32 0, i32 1
  store %struct.sockaddr* %56, %struct.sockaddr** %57, align 8
  %58 = load %struct.generic_list*, %struct.generic_list** @UDPL_head, align 8
  %59 = bitcast %struct.ev_udp_in_data* %4 to i8*
  %60 = call %struct.generic_list* @list_search(%struct.generic_list* %58, i8* %59, i32 (i8*, i8*)* @ev_udp_in_eq)
  %61 = icmp ne %struct.generic_list* %60, null
  br i1 %61, label %94, label %62

; <label>:62:                                     ; preds = %52
  %63 = getelementptr inbounds %struct.mesg_hdr, %struct.mesg_hdr* %8, i32 0, i32 1
  %64 = load i16, i16* %63, align 2
  %65 = lshr i16 %64, 7
  %66 = and i16 %65, 1
  %67 = trunc i16 %66 to i8
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %68, 1
  %70 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %71, 3
  br i1 %69, label %73, label %80

; <label>:73:                                     ; preds = %62
  br i1 %72, label %74, label %77

; <label>:74:                                     ; preds = %73
  %75 = getelementptr [33 x i8], [33 x i8]* @.str.8.423, i32 0, i32 0
  %76 = getelementptr [17 x i8], [17 x i8]* @.str.3.418, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %75, i8* %76)
  br label %77

; <label>:77:                                     ; preds = %74, %73
  %78 = icmp ne i8* %5, null
  br i1 %78, label %79, label %123

; <label>:79:                                     ; preds = %77
  call void @free(i8* %5) #9
  br label %123

; <label>:80:                                     ; preds = %62
  br i1 %72, label %81, label %84

; <label>:81:                                     ; preds = %80
  %82 = getelementptr [27 x i8], [27 x i8]* @.str.9.424, i32 0, i32 0
  %83 = getelementptr [17 x i8], [17 x i8]* @.str.3.418, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %82, i8* %83)
  br label %84

; <label>:84:                                     ; preds = %81, %80
  %85 = call %struct.nia* @nia_find_by_sock(i32 %0)
  %86 = icmp ne %struct.nia* %85, null
  br i1 %86, label %91, label %87

; <label>:87:                                     ; preds = %84
  %88 = getelementptr [24 x i8], [24 x i8]* @.str.10.425, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %88)
  %89 = icmp ne i8* %5, null
  br i1 %89, label %90, label %123

; <label>:90:                                     ; preds = %87
  call void @free(i8* %5) #9
  br label %123

; <label>:91:                                     ; preds = %84
  %92 = bitcast %struct.sockaddr_storage* %2 to %struct.sockaddr*
  %93 = call i32 @udp_response_start(i8* %5, i32 %14, %struct.sockaddr* %92, %struct.nia* %85)
  br label %123

; <label>:94:                                     ; preds = %52
  %95 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, 3
  br i1 %97, label %98, label %101

; <label>:98:                                     ; preds = %94
  %99 = getelementptr [23 x i8], [23 x i8]* @.str.11.426, i32 0, i32 0
  %100 = getelementptr [17 x i8], [17 x i8]* @.str.3.418, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %99, i8* %100)
  br label %101

; <label>:101:                                    ; preds = %98, %94
  %102 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %60, i32 0, i32 2
  %103 = load i8*, i8** %102, align 8
  %104 = bitcast i8* %103 to %struct.ev_udp_in_data*
  %105 = getelementptr inbounds %struct.ev_udp_in_data, %struct.ev_udp_in_data* %104, i32 0, i32 0
  %106 = load %struct.context*, %struct.context** %105, align 8
  %107 = getelementptr inbounds %struct.context, %struct.context* %106, i32 0, i32 16
  %108 = bitcast %union.anon.0* %107 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = icmp ne i8* %109, null
  br i1 %110, label %111, label %115

; <label>:111:                                    ; preds = %101
  %112 = getelementptr inbounds %struct.context, %struct.context* %106, i32 0, i32 16
  %113 = bitcast %union.anon.0* %112 to i8**
  %114 = load i8*, i8** %113, align 8
  call void @free(i8* %114) #9
  br label %115

; <label>:115:                                    ; preds = %111, %101
  %116 = getelementptr inbounds %struct.context, %struct.context* %106, i32 0, i32 16
  %117 = bitcast %union.anon.0* %116 to i8**
  store i8* %5, i8** %117, align 8
  %118 = getelementptr inbounds %struct.context, %struct.context* %106, i32 0, i32 17
  store i32 %14, i32* %118, align 8
  %119 = getelementptr inbounds %struct.context, %struct.context* %106, i32 0, i32 18
  store i8* null, i8** %119, align 8
  %120 = getelementptr inbounds %struct.context, %struct.context* %106, i32 0, i32 7
  %121 = load i32 (%struct.context*)*, i32 (%struct.context*)** %120, align 8
  %122 = call i32 %121(%struct.context* %106)
  br label %123

; <label>:123:                                    ; preds = %87, %90, %77, %79, %49, %51, %30, %33, %16, %19, %1, %115, %91
  %.0 = phi i32 [ %122, %115 ], [ %93, %91 ], [ -1, %1 ], [ -1, %19 ], [ -1, %16 ], [ -1, %33 ], [ -1, %30 ], [ 0, %51 ], [ 0, %49 ], [ 0, %79 ], [ 0, %77 ], [ -1, %90 ], [ -1, %87 ]
  ret i32 %.0
}

declare dso_local i64 @recvfrom(i32, i8*, i64, i32, %struct.sockaddr*, i32*) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @nia_free_closev(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.nia*
  call void @nia_free(%struct.nia* %2, i32 1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nia_free(%struct.nia*, i32) #0 {
  %3 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %4 = load %struct.sockaddr*, %struct.sockaddr** %3, align 8
  %5 = icmp ne %struct.sockaddr* %4, null
  br i1 %5, label %6, label %10

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %8 = load %struct.sockaddr*, %struct.sockaddr** %7, align 8
  %9 = bitcast %struct.sockaddr* %8 to i8*
  call void @free(i8* %9) #9
  br label %10

; <label>:10:                                     ; preds = %6, %2
  %11 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sge i32 %12, 0
  %14 = icmp ne i32 %1, 0
  %or.cond = and i1 %13, %14
  br i1 %or.cond, label %15, label %28

; <label>:15:                                     ; preds = %10
  %16 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 4
  br i1 %18, label %19, label %24

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr [26 x i8], [26 x i8]* @.str.1.430, i32 0, i32 0
  %23 = getelementptr [11 x i8], [11 x i8]* @.str.429, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %22, i8* %23, i32 %21)
  br label %24

; <label>:24:                                     ; preds = %19, %15
  %25 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = call i32 @close(i32 %26)
  br label %28

; <label>:28:                                     ; preds = %24, %10
  %29 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp sge i32 %30, 0
  %32 = icmp ne i32 %1, 0
  %or.cond1 = and i1 %31, %32
  br i1 %or.cond1, label %33, label %46

; <label>:33:                                     ; preds = %28
  %34 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 4
  br i1 %36, label %37, label %42

; <label>:37:                                     ; preds = %33
  %38 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr [26 x i8], [26 x i8]* @.str.1.430, i32 0, i32 0
  %41 = getelementptr [11 x i8], [11 x i8]* @.str.429, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %40, i8* %41, i32 %39)
  br label %42

; <label>:42:                                     ; preds = %37, %33
  %43 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = call i32 @close(i32 %44)
  br label %46

; <label>:46:                                     ; preds = %42, %28
  %47 = bitcast %struct.nia* %0 to i8*
  call void @free(i8* %47) #9
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.nia* @nia_copy(%struct.nia*) #6 {
  %2 = icmp ne %struct.nia* %0, null
  br i1 %2, label %3, label %11

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %5 = load %struct.sockaddr*, %struct.sockaddr** %4, align 8
  %6 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = call %struct.nia* @nia_alloc(%struct.sockaddr* %5, i32 %7, i32 %9)
  br label %11

; <label>:11:                                     ; preds = %1, %3
  %.0 = phi %struct.nia* [ %10, %3 ], [ null, %1 ]
  ret %struct.nia* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.nia* @nia_alloc(%struct.sockaddr*, i32, i32) #6 {
  %4 = call noalias i8* @malloc(i64 16) #9, !track !145
  %5 = bitcast i8* %4 to %struct.nia*
  %6 = icmp ne %struct.nia* %5, null
  br i1 %6, label %7, label %54

; <label>:7:                                      ; preds = %3
  %8 = icmp ne %struct.sockaddr* %0, null
  br i1 %8, label %9, label %49

; <label>:9:                                      ; preds = %7
  %10 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = zext i16 %11 to i32
  %13 = icmp eq i32 %12, 10
  br i1 %13, label %21, label %14

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = zext i16 %16 to i32
  %18 = icmp eq i32 %17, 2
  %19 = zext i1 %18 to i64
  %20 = select i1 %18, i64 16, i64 16
  br label %21

; <label>:21:                                     ; preds = %9, %14
  %22 = phi i64 [ %20, %14 ], [ 28, %9 ]
  %23 = call noalias i8* @malloc(i64 %22) #9, !track !146
  %24 = bitcast i8* %23 to %struct.sockaddr*
  %25 = getelementptr inbounds %struct.nia, %struct.nia* %5, i32 0, i32 0
  store %struct.sockaddr* %24, %struct.sockaddr** %25, align 8
  %26 = getelementptr inbounds %struct.nia, %struct.nia* %5, i32 0, i32 0
  %27 = load %struct.sockaddr*, %struct.sockaddr** %26, align 8
  %28 = icmp ne %struct.sockaddr* %27, null
  br i1 %28, label %31, label %29

; <label>:29:                                     ; preds = %21
  %30 = bitcast %struct.nia* %5 to i8*
  call void @free(i8* %30) #9
  br label %54

; <label>:31:                                     ; preds = %21
  %32 = getelementptr inbounds %struct.nia, %struct.nia* %5, i32 0, i32 0
  %33 = load %struct.sockaddr*, %struct.sockaddr** %32, align 8
  %34 = bitcast %struct.sockaddr* %33 to i8*
  %35 = bitcast %struct.sockaddr* %0 to i8*
  %36 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  %39 = icmp eq i32 %38, 10
  br i1 %39, label %47, label %40

; <label>:40:                                     ; preds = %31
  %41 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %0, i32 0, i32 0
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = icmp eq i32 %43, 2
  %45 = zext i1 %44 to i64
  %46 = select i1 %44, i64 16, i64 16
  br label %47

; <label>:47:                                     ; preds = %31, %40
  %48 = phi i64 [ %46, %40 ], [ 28, %31 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %34, i8* align 2 %35, i64 %48, i1 false), !track !147
  br label %51

; <label>:49:                                     ; preds = %7
  %50 = getelementptr inbounds %struct.nia, %struct.nia* %5, i32 0, i32 0
  store %struct.sockaddr* null, %struct.sockaddr** %50, align 8
  br label %51

; <label>:51:                                     ; preds = %49, %47
  %52 = getelementptr inbounds %struct.nia, %struct.nia* %5, i32 0, i32 1
  store i32 %1, i32* %52, align 8
  %53 = getelementptr inbounds %struct.nia, %struct.nia* %5, i32 0, i32 2
  store i32 %2, i32* %53, align 4
  br label %54

; <label>:54:                                     ; preds = %3, %51, %29
  %.0 = phi %struct.nia* [ %5, %51 ], [ null, %29 ], [ null, %3 ]
  ret %struct.nia* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.nia* @nia_find_by_sock(i32) #6 {
  %2 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %3 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %2, i32 0, i32 0
  %4 = load %struct.generic_list*, %struct.generic_list** %3, align 8
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %22
  %.013 = phi %struct.generic_list* [ %24, %22 ], [ %4, %.lr.ph.preheader ]
  call void @unroll_loop(i32 65)
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.013, i32 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast i8* %9 to %struct.nia*
  %11 = getelementptr inbounds %struct.nia, %struct.nia* %10, i32 0, i32 0
  %12 = load %struct.sockaddr*, %struct.sockaddr** %11, align 8
  %13 = icmp ne %struct.sockaddr* %12, null
  br i1 %13, label %14, label %22

; <label>:14:                                     ; preds = %.lr.ph
  %15 = getelementptr inbounds %struct.nia, %struct.nia* %10, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, %0
  br i1 %17, label %._crit_edge.loopexit.split.loop.exit, label %18

; <label>:18:                                     ; preds = %14
  %19 = getelementptr inbounds %struct.nia, %struct.nia* %10, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, %0
  br i1 %21, label %._crit_edge.loopexit.split.loop.exit1, label %22

; <label>:22:                                     ; preds = %18, %.lr.ph
  %23 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.013, i32 0, i32 0
  %24 = load %struct.generic_list*, %struct.generic_list** %23, align 8
  %25 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %24, i32 0, i32 2
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ne i8* %26, null
  br i1 %27, label %.lr.ph, label %._crit_edge.loopexit.split.loop.exit3

._crit_edge.loopexit.split.loop.exit:             ; preds = %14
  %.lcssa5 = phi i8* [ %9, %14 ]
  %28 = bitcast i8* %.lcssa5 to %struct.nia*
  br label %._crit_edge.loopexit

._crit_edge.loopexit.split.loop.exit1:            ; preds = %18
  %.lcssa = phi i8* [ %9, %18 ]
  %29 = bitcast i8* %.lcssa to %struct.nia*
  br label %._crit_edge.loopexit

._crit_edge.loopexit.split.loop.exit3:            ; preds = %22
  %.0.ph.ph4 = phi %struct.nia* [ null, %22 ]
  br label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %._crit_edge.loopexit.split.loop.exit3, %._crit_edge.loopexit.split.loop.exit1, %._crit_edge.loopexit.split.loop.exit
  %.0.ph = phi %struct.nia* [ %28, %._crit_edge.loopexit.split.loop.exit ], [ %29, %._crit_edge.loopexit.split.loop.exit1 ], [ %.0.ph.ph4, %._crit_edge.loopexit.split.loop.exit3 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %.0 = phi %struct.nia* [ null, %1 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret %struct.nia* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @nia_fds_set(%struct.fd_set*, i32*) #0 {
  %3 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %4 = icmp ne %struct.generic_list* %3, null
  br i1 %4, label %5, label %._crit_edge

; <label>:5:                                      ; preds = %2
  %6 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 0
  %8 = load %struct.generic_list*, %struct.generic_list** %7, align 8
  %9 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %8, i32 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %5
  %12 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %0, i32 0, i32 0
  %13 = icmp ne i32* %1, null
  %14 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %0, i32 0, i32 0
  %15 = icmp ne i32* %1, null
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %92
  %.01 = phi %struct.generic_list* [ %94, %92 ], [ %8, %.lr.ph.preheader ]
  call void @unroll_loop(i32 66)
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast i8* %17 to %struct.nia*
  %19 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 0
  %20 = load %struct.sockaddr*, %struct.sockaddr** %19, align 8
  %21 = icmp ne %struct.sockaddr* %20, null
  br i1 %21, label %22, label %92

; <label>:22:                                     ; preds = %.lr.ph
  %23 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp sge i32 %24, 0
  br i1 %25, label %26, label %57

; <label>:26:                                     ; preds = %22
  %27 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %28 = icmp sgt i32 %27, 4
  br i1 %28, label %29, label %32

; <label>:29:                                     ; preds = %26
  %30 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.436, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.435, i64 0, i64 0), i32 %31)
  br label %32

; <label>:32:                                     ; preds = %29, %26
  %33 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = srem i32 %34, 64
  %36 = zext i32 %35 to i64
  %37 = shl i64 1, %36
  %38 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = sdiv i32 %39, 64
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [16 x i64], [16 x i64]* %12, i64 0, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = or i64 %43, %37
  store i64 %44, i64* %42, align 8
  br i1 %13, label %45, label %57

; <label>:45:                                     ; preds = %32
  %46 = load i32, i32* %1, align 4
  %47 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp sgt i32 %46, %48
  br i1 %49, label %50, label %52

; <label>:50:                                     ; preds = %45
  %51 = load i32, i32* %1, align 4
  br label %55

; <label>:52:                                     ; preds = %45
  %53 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 1
  %54 = load i32, i32* %53, align 8
  br label %55

; <label>:55:                                     ; preds = %52, %50
  %56 = phi i32 [ %51, %50 ], [ %54, %52 ]
  store i32 %56, i32* %1, align 4
  br label %57

; <label>:57:                                     ; preds = %32, %55, %22
  %58 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp sge i32 %59, 0
  br i1 %60, label %61, label %92

; <label>:61:                                     ; preds = %57
  %62 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %63 = icmp sgt i32 %62, 4
  br i1 %63, label %64, label %67

; <label>:64:                                     ; preds = %61
  %65 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.436, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.435, i64 0, i64 0), i32 %66)
  br label %67

; <label>:67:                                     ; preds = %64, %61
  %68 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = srem i32 %69, 64
  %71 = zext i32 %70 to i64
  %72 = shl i64 1, %71
  %73 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = sdiv i32 %74, 64
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [16 x i64], [16 x i64]* %14, i64 0, i64 %76
  %78 = load i64, i64* %77, align 8
  %79 = or i64 %78, %72
  store i64 %79, i64* %77, align 8
  br i1 %15, label %80, label %92

; <label>:80:                                     ; preds = %67
  %81 = load i32, i32* %1, align 4
  %82 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %81, %83
  br i1 %84, label %85, label %87

; <label>:85:                                     ; preds = %80
  %86 = load i32, i32* %1, align 4
  br label %90

; <label>:87:                                     ; preds = %80
  %88 = getelementptr inbounds %struct.nia, %struct.nia* %18, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  br label %90

; <label>:90:                                     ; preds = %87, %85
  %91 = phi i32 [ %86, %85 ], [ %89, %87 ]
  store i32 %91, i32* %1, align 4
  br label %92

; <label>:92:                                     ; preds = %57, %90, %67, %.lr.ph
  %93 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 0
  %94 = load %struct.generic_list*, %struct.generic_list** %93, align 8
  %95 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %94, i32 0, i32 2
  %96 = load i8*, i8** %95, align 8
  %97 = icmp ne i8* %96, null
  br i1 %97, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %92
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @nia_fds_isset(%struct.fd_set*, i32*) #0 {
  store i32 -1, i32* %1, align 4
  %3 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %4 = icmp ne %struct.generic_list* %3, null
  br i1 %4, label %5, label %._crit_edge

; <label>:5:                                      ; preds = %2
  %6 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 0
  %8 = load %struct.generic_list*, %struct.generic_list** %7, align 8
  %9 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %8, i32 0, i32 2
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %5
  %12 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %0, i32 0, i32 0
  %13 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %0, i32 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %110
  %.013 = phi %struct.generic_list* [ %112, %110 ], [ %8, %.lr.ph.preheader ]
  call void @unroll_loop(i32 67)
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.013, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %struct.nia*
  %17 = getelementptr inbounds %struct.nia, %struct.nia* %16, i32 0, i32 0
  %18 = load %struct.sockaddr*, %struct.sockaddr** %17, align 8
  %19 = icmp ne %struct.sockaddr* %18, null
  br i1 %19, label %20, label %110

; <label>:20:                                     ; preds = %.lr.ph
  %21 = getelementptr inbounds %struct.nia, %struct.nia* %16, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp sge i32 %22, 0
  br i1 %23, label %24, label %65

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.nia, %struct.nia* %16, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = sdiv i32 %26, 64
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [16 x i64], [16 x i64]* %12, i64 0, i64 %28
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.nia, %struct.nia* %16, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = srem i32 %32, 64
  %34 = zext i32 %33 to i64
  %35 = shl i64 1, %34
  %36 = and i64 %30, %35
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %65

; <label>:38:                                     ; preds = %24
  %.lcssa2 = phi i8* [ %15, %24 ]
  %39 = bitcast i8* %.lcssa2 to %struct.nia*
  %40 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 4
  br i1 %42, label %43, label %48

; <label>:43:                                     ; preds = %38
  %44 = getelementptr inbounds %struct.nia, %struct.nia* %39, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr [16 x i8], [16 x i8]* @.str.5.438, i32 0, i32 0
  %47 = getelementptr [16 x i8], [16 x i8]* @.str.4.437, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %46, i8* %47, i32 %45)
  br label %48

; <label>:48:                                     ; preds = %43, %38
  %49 = getelementptr inbounds %struct.nia, %struct.nia* %39, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = srem i32 %50, 64
  %52 = zext i32 %51 to i64
  %53 = shl i64 1, %52
  %54 = xor i64 %53, -1
  %55 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %0, i32 0, i32 0
  %56 = getelementptr inbounds %struct.nia, %struct.nia* %39, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = sdiv i32 %57, 64
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [16 x i64], [16 x i64]* %55, i64 0, i64 %59
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, %54
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %struct.nia, %struct.nia* %39, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %1, align 4
  br label %._crit_edge

; <label>:65:                                     ; preds = %24, %20
  %66 = getelementptr inbounds %struct.nia, %struct.nia* %16, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp sge i32 %67, 0
  br i1 %68, label %69, label %110

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %struct.nia, %struct.nia* %16, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = sdiv i32 %71, 64
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [16 x i64], [16 x i64]* %13, i64 0, i64 %73
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %struct.nia, %struct.nia* %16, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = srem i32 %77, 64
  %79 = zext i32 %78 to i64
  %80 = shl i64 1, %79
  %81 = and i64 %75, %80
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %83, label %110

; <label>:83:                                     ; preds = %69
  %.lcssa1 = phi i8* [ %15, %69 ]
  %84 = bitcast i8* %.lcssa1 to %struct.nia*
  %85 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %86, 4
  br i1 %87, label %88, label %93

; <label>:88:                                     ; preds = %83
  %89 = getelementptr inbounds %struct.nia, %struct.nia* %84, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr [16 x i8], [16 x i8]* @.str.5.438, i32 0, i32 0
  %92 = getelementptr [16 x i8], [16 x i8]* @.str.4.437, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %91, i8* %92, i32 %90)
  br label %93

; <label>:93:                                     ; preds = %88, %83
  %94 = getelementptr inbounds %struct.nia, %struct.nia* %84, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = srem i32 %95, 64
  %97 = zext i32 %96 to i64
  %98 = shl i64 1, %97
  %99 = xor i64 %98, -1
  %100 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %0, i32 0, i32 0
  %101 = getelementptr inbounds %struct.nia, %struct.nia* %84, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = sdiv i32 %102, 64
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [16 x i64], [16 x i64]* %100, i64 0, i64 %104
  %106 = load i64, i64* %105, align 8
  %107 = and i64 %106, %99
  store i64 %107, i64* %105, align 8
  %108 = getelementptr inbounds %struct.nia, %struct.nia* %84, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  store i32 %109, i32* %1, align 4
  br label %._crit_edge

; <label>:110:                                    ; preds = %65, %69, %.lr.ph
  %111 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.013, i32 0, i32 0
  %112 = load %struct.generic_list*, %struct.generic_list** %111, align 8
  %113 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %112, i32 0, i32 2
  %114 = load i8*, i8** %113, align 8
  %115 = icmp ne i8* %114, null
  br i1 %115, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %110
  %.0.ph = phi i32 [ -1, %110 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %5, %2, %93, %48
  %.0 = phi i32 [ 0, %48 ], [ 1, %93 ], [ -1, %2 ], [ -1, %5 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @net_init_socketlist(i32) #0 {
  %2 = call %struct.generic_list* @list_init()
  store %struct.generic_list* %2, %struct.generic_list** @NI_head, align 8
  %3 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %4 = icmp ne %struct.generic_list* %3, null
  br i1 %4, label %5, label %20

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  %9 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  br i1 %8, label %10, label %14

; <label>:10:                                     ; preds = %5
  %11 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = call i32 @nia_set_wildsock(%struct.generic_list* %9, i32 %12)
  br label %19

; <label>:14:                                     ; preds = %5
  %15 = call i32 @nia_set_wildsock(%struct.generic_list* %9, i32 0)
  %16 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %17 = call i32 @net_get_ifaddrs(%struct.generic_list* %16, i32 %0)
  %18 = icmp ne i32 %17, 1
  br i1 %18, label %20, label %19

; <label>:19:                                     ; preds = %14, %10
  br label %20

; <label>:20:                                     ; preds = %14, %1, %19
  %.0 = phi i32 [ 0, %19 ], [ -1, %1 ], [ -1, %14 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @nia_set_wildsock(%struct.generic_list*, i32) #0 {
  %3 = alloca %struct.sockaddr_in, align 4, !track !148
  %4 = alloca %struct.sockaddr_in6, align 4, !track !149
  %5 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  %6 = load i32, i32* %5, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %27, label %8

; <label>:8:                                      ; preds = %2
  %9 = bitcast %struct.sockaddr_in* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 16, i1 false)
  %10 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 0
  store i16 2, i16* %10, align 4
  %11 = trunc i32 %1 to i16
  %12 = call zeroext i16 @htons(i16 zeroext %11) #10
  %13 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 1
  store i16 %12, i16* %13, align 2
  %14 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 2
  %15 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %14, i32 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = bitcast %struct.sockaddr_in* %3 to %struct.sockaddr*
  %17 = call %struct.nia* @nia_alloc(%struct.sockaddr* %16, i32 -1, i32 -1)
  %18 = icmp ne %struct.nia* %17, null
  br i1 %18, label %19, label %46

; <label>:19:                                     ; preds = %8
  %20 = bitcast %struct.nia* %17 to i8*
  %21 = call i32 @list_add(%struct.generic_list* %0, i8* %20)
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %19
  call void @nia_free(%struct.nia* %17, i32 0)
  br label %46

; <label>:24:                                     ; preds = %19
  %25 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %26 = load %struct.generic_list*, %struct.generic_list** %25, align 8
  store %struct.generic_list* %26, %struct.generic_list** @NI_wildcard, align 8
  br label %27

; <label>:27:                                     ; preds = %24, %2
  %28 = bitcast %struct.sockaddr_in6* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 28, i1 false)
  %29 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %4, i32 0, i32 0
  store i16 10, i16* %29, align 4
  %30 = trunc i32 %1 to i16
  %31 = call zeroext i16 @htons(i16 zeroext %30) #10
  %32 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %4, i32 0, i32 1
  store i16 %31, i16* %32, align 2
  %33 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %4, i32 0, i32 3
  %34 = bitcast %struct.in6_addr* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 bitcast (%struct.in6_addr* @in6addr_any to i8*), i64 16, i1 false), !track !150
  %35 = bitcast %struct.sockaddr_in6* %4 to %struct.sockaddr*
  %36 = call %struct.nia* @nia_alloc(%struct.sockaddr* %35, i32 -1, i32 -1)
  %37 = icmp ne %struct.nia* %36, null
  br i1 %37, label %38, label %46

; <label>:38:                                     ; preds = %27
  %39 = bitcast %struct.nia* %36 to i8*
  %40 = call i32 @list_add(%struct.generic_list* %0, i8* %39)
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %38
  call void @nia_free(%struct.nia* %36, i32 0)
  br label %46

; <label>:43:                                     ; preds = %38
  %44 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %45 = load %struct.generic_list*, %struct.generic_list** %44, align 8
  store %struct.generic_list* %45, %struct.generic_list** @NI_wildcard6, align 8
  br label %46

; <label>:46:                                     ; preds = %27, %8, %43, %42, %23
  %.0 = phi i32 [ -1, %42 ], [ 0, %43 ], [ -1, %23 ], [ -1, %8 ], [ -1, %27 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @net_get_ifaddrs(%struct.generic_list*, i32) #0 {
  %3 = alloca %struct.ifconf, align 8, !track !151
  %4 = alloca [8192 x i8], align 16, !track !152
  %5 = alloca [256 x i8], align 16, !track !153
  %6 = getelementptr inbounds [8192 x i8], [8192 x i8]* %4, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 16 %6, i8 0, i64 8192, i1 false)
  %7 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %3, i32 0, i32 0
  store i32 8192, i32* %7, align 8
  %8 = getelementptr inbounds [8192 x i8], [8192 x i8]* %4, i32 0, i32 0
  %9 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %3, i32 0, i32 1
  %10 = bitcast %union.anon* %9 to i8**
  store i8* %8, i8** %10, align 8
  %11 = icmp slt i32 -1, 0
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %2
  %13 = call i32 @socket(i32 10, i32 1, i32 0) #9
  br label %14

; <label>:14:                                     ; preds = %12, %2
  %.04 = phi i32 [ %13, %12 ], [ -1, %2 ]
  %15 = icmp slt i32 %.04, 0
  br i1 %15, label %16, label %18

; <label>:16:                                     ; preds = %14
  %17 = call i32 @socket(i32 2, i32 1, i32 0) #9
  br label %18

; <label>:18:                                     ; preds = %16, %14
  %.15 = phi i32 [ %17, %16 ], [ %.04, %14 ]
  %19 = icmp slt i32 %.15, 0
  br i1 %19, label %.loopexit, label %20

; <label>:20:                                     ; preds = %18
  %21 = bitcast %struct.ifconf* %3 to i8*
  %22 = call i32 (i32, i64, ...) @ioctl(i32 %.15, i64 35090, i8* %21) #9
  %23 = icmp slt i32 %22, 0
  %24 = call i32 @close(i32 %.15)
  br i1 %23, label %25, label %28

; <label>:25:                                     ; preds = %20
  %26 = getelementptr [25 x i8], [25 x i8]* @.str.20.440, i32 0, i32 0
  %27 = getelementptr [18 x i8], [18 x i8]* @.str.19.439, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %26, i8* %27)
  br label %.loopexit

; <label>:28:                                     ; preds = %20
  %29 = getelementptr %struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %30, null
  br i1 %31, label %32, label %36

; <label>:32:                                     ; preds = %28
  %33 = call i32 @net_ifc_cmp(%struct.ifconf* @net_get_ifaddrs.ifc_old, %struct.ifconf* %3)
  %34 = getelementptr [30 x i8], [30 x i8]* @.str.21.441, i32 0, i32 0
  %35 = getelementptr [18 x i8], [18 x i8]* @.str.19.439, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %34, i8* %35, i32 %33)
  br label %36

; <label>:36:                                     ; preds = %32, %28
  %.03 = phi i32 [ %33, %32 ], [ 1, %28 ]
  %37 = getelementptr inbounds [8192 x i8], [8192 x i8]* %4, i32 0, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp ne i8 %38, 0
  br i1 %39, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %36
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0
  %43 = trunc i32 %1 to i16
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0
  %45 = trunc i32 %1 to i16
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i32 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %166
  %.026 = phi i8* [ %168, %166 ], [ %37, %.lr.ph.preheader ]
  call void @unroll_loop(i32 36)
  %47 = bitcast i8* %.026 to %struct.ifreq*
  %48 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 1
  %49 = bitcast %union.anon.2* %48 to %struct.sockaddr*
  %50 = call i8* @sprint_inet(%struct.sockaddr* %49, i8* %40)
  %51 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %66

; <label>:53:                                     ; preds = %.lr.ph
  %54 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 1
  %55 = bitcast %union.anon.2* %54 to %struct.sockaddr*
  %56 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %55, i32 0, i32 0
  %57 = load i16, i16* %56, align 8
  %58 = zext i16 %57 to i32
  %59 = icmp eq i32 %58, 10
  br i1 %59, label %60, label %66

; <label>:60:                                     ; preds = %53
  %61 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 0
  %62 = bitcast %union.anon.1.154* %61 to [16 x i8]*
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %62, i32 0, i32 0
  %64 = call i32 @nia_is_in_totd_iflist(i8* %63)
  %65 = icmp ne i32 %64, 0
  %spec.select = select i1 %65, i32 1, i32 0
  br label %66

; <label>:66:                                     ; preds = %60, %53, %.lr.ph
  %.1 = phi i32 [ %spec.select, %60 ], [ 0, %53 ], [ 0, %.lr.ph ]
  %67 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %85

; <label>:69:                                     ; preds = %66
  %70 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 1
  %71 = bitcast %union.anon.2* %70 to %struct.sockaddr*
  %72 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %71, i32 0, i32 0
  %73 = load i16, i16* %72, align 8
  %74 = zext i16 %73 to i32
  %75 = icmp eq i32 %74, 2
  br i1 %75, label %76, label %85

; <label>:76:                                     ; preds = %69
  %77 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %79, label %85

; <label>:79:                                     ; preds = %76
  %80 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 0
  %81 = bitcast %union.anon.1.154* %80 to [16 x i8]*
  %82 = getelementptr inbounds [16 x i8], [16 x i8]* %81, i32 0, i32 0
  %83 = call i32 @nia_is_in_totd_iflist(i8* %82)
  %84 = icmp ne i32 %83, 0
  %spec.select1 = select i1 %84, i32 1, i32 %.1
  br label %85

; <label>:85:                                     ; preds = %79, %76, %69, %66
  %.3 = phi i32 [ %.1, %69 ], [ %.1, %66 ], [ %.1, %76 ], [ %spec.select1, %79 ]
  %86 = icmp ne i32 %.3, 0
  br i1 %86, label %87, label %139

; <label>:87:                                     ; preds = %85
  %88 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 1
  %89 = bitcast %union.anon.2* %88 to %struct.sockaddr*
  %90 = call %struct.nia* @nia_alloc(%struct.sockaddr* %89, i32 -1, i32 -1)
  %91 = icmp ne %struct.nia* %90, null
  br i1 %91, label %92, label %.loopexit.loopexit

; <label>:92:                                     ; preds = %87
  %93 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %108

; <label>:95:                                     ; preds = %92
  %96 = getelementptr inbounds %struct.nia, %struct.nia* %90, i32 0, i32 0
  %97 = load %struct.sockaddr*, %struct.sockaddr** %96, align 8
  %98 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %97, i32 0, i32 0
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = icmp eq i32 %100, 10
  br i1 %101, label %102, label %108

; <label>:102:                                    ; preds = %95
  %103 = getelementptr inbounds %struct.nia, %struct.nia* %90, i32 0, i32 0
  %104 = load %struct.sockaddr*, %struct.sockaddr** %103, align 8
  %105 = bitcast %struct.sockaddr* %104 to %struct.sockaddr_in6*
  %106 = call zeroext i16 @htons(i16 zeroext %43) #10
  %107 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %105, i32 0, i32 1
  store i16 %106, i16* %107, align 2
  br label %108

; <label>:108:                                    ; preds = %102, %95, %92
  %109 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %124

; <label>:111:                                    ; preds = %108
  %112 = getelementptr inbounds %struct.nia, %struct.nia* %90, i32 0, i32 0
  %113 = load %struct.sockaddr*, %struct.sockaddr** %112, align 8
  %114 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %113, i32 0, i32 0
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = icmp eq i32 %116, 2
  br i1 %117, label %118, label %124

; <label>:118:                                    ; preds = %111
  %119 = getelementptr inbounds %struct.nia, %struct.nia* %90, i32 0, i32 0
  %120 = load %struct.sockaddr*, %struct.sockaddr** %119, align 8
  %121 = bitcast %struct.sockaddr* %120 to %struct.sockaddr_in*
  %122 = call zeroext i16 @htons(i16 zeroext %45) #10
  %123 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %121, i32 0, i32 1
  store i16 %122, i16* %123, align 2
  br label %124

; <label>:124:                                    ; preds = %118, %111, %108
  %125 = load i8, i8* %44, align 16
  %126 = sext i8 %125 to i32
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %135

; <label>:128:                                    ; preds = %124
  %129 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %130 = icmp sgt i32 %129, 3
  br i1 %130, label %131, label %135

; <label>:131:                                    ; preds = %128
  %132 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 0
  %133 = bitcast %union.anon.1.154* %132 to [16 x i8]*
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %133, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22.442, i64 0, i64 0), i8* %46, i8* %134)
  br label %135

; <label>:135:                                    ; preds = %131, %128, %124
  %136 = bitcast %struct.nia* %90 to i8*
  %137 = call i32 @list_add(%struct.generic_list* %0, i8* %136)
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %.loopexit.loopexit, label %150

; <label>:139:                                    ; preds = %85
  %140 = load i8, i8* %41, align 16
  %141 = sext i8 %140 to i32
  %142 = icmp ne i32 %141, 0
  br i1 %142, label %143, label %150

; <label>:143:                                    ; preds = %139
  %144 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %145 = icmp sgt i32 %144, 3
  br i1 %145, label %146, label %150

; <label>:146:                                    ; preds = %143
  %147 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 0
  %148 = bitcast %union.anon.1.154* %147 to [16 x i8]*
  %149 = getelementptr inbounds [16 x i8], [16 x i8]* %148, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23.443, i64 0, i64 0), i8* %42, i8* %149)
  br label %150

; <label>:150:                                    ; preds = %139, %143, %146, %135
  %151 = getelementptr inbounds i8, i8* %.026, i64 16
  %152 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 1
  %153 = bitcast %union.anon.2* %152 to %struct.sockaddr*
  %154 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %153, i32 0, i32 0
  %155 = load i16, i16* %154, align 8
  %156 = zext i16 %155 to i32
  %157 = icmp eq i32 %156, 10
  br i1 %157, label %166, label %158

; <label>:158:                                    ; preds = %150
  %159 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %47, i32 0, i32 1
  %160 = bitcast %union.anon.2* %159 to %struct.sockaddr*
  %161 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %160, i32 0, i32 0
  %162 = load i16, i16* %161, align 8
  %163 = zext i16 %162 to i32
  %164 = icmp eq i32 %163, 2
  %165 = select i1 %164, i64 16, i64 16
  br label %166

; <label>:166:                                    ; preds = %150, %158
  %167 = phi i64 [ %165, %158 ], [ 28, %150 ]
  %168 = getelementptr inbounds i8, i8* %151, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = icmp ne i8 %169, 0
  br i1 %170, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %166
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %36
  %171 = getelementptr %struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0
  %172 = load i8*, i8** %171, align 8
  %173 = icmp ne i8* %172, null
  br i1 %173, label %174, label %177

; <label>:174:                                    ; preds = %._crit_edge
  %175 = getelementptr %struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0
  %176 = load i8*, i8** %175, align 8
  call void @free(i8* %176) #9
  br label %177

; <label>:177:                                    ; preds = %174, %._crit_edge
  %178 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %3, i32 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = sext i32 %179 to i64
  %181 = call noalias i8* @malloc(i64 %180) #9, !track !154
  %182 = getelementptr %struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0
  store i8* %181, i8** %182, align 8
  %183 = getelementptr %struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0
  %184 = load i8*, i8** %183, align 8
  %185 = icmp ne i8* %184, null
  br i1 %185, label %186, label %.loopexit

; <label>:186:                                    ; preds = %177
  %187 = getelementptr %struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 1, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = getelementptr inbounds [8192 x i8], [8192 x i8]* %4, i32 0, i32 0
  %190 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %3, i32 0, i32 0
  %191 = load i32, i32* %190, align 8
  %192 = sext i32 %191 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %188, i8* align 16 %189, i64 %192, i1 false), !track !155
  %193 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %3, i32 0, i32 0
  %194 = load i32, i32* %193, align 8
  %195 = getelementptr %struct.ifconf, %struct.ifconf* @net_get_ifaddrs.ifc_old, i32 0, i32 0
  store i32 %194, i32* %195, align 8
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %87, %135
  %.0.ph = phi i32 [ -1, %87 ], [ -1, %135 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %177, %186, %18, %25
  %.0 = phi i32 [ -1, %25 ], [ -1, %18 ], [ %.03, %186 ], [ %.03, %177 ], [ %.0.ph, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @net_ifc_cmp(%struct.ifconf*, %struct.ifconf*) #0 {
  %3 = alloca [256 x i8], align 16, !track !156
  %4 = alloca [256 x i8], align 16, !track !157
  %5 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %1, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %6, %8
  br i1 %9, label %10, label %16

; <label>:10:                                     ; preds = %2
  %11 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 4
  br i1 %13, label %14, label %.critedge

; <label>:14:                                     ; preds = %10
  %15 = getelementptr [30 x i8], [30 x i8]* @.str.24.446, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %15)
  br label %.critedge

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %0, i32 0, i32 1
  %18 = bitcast %union.anon* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %struct.ifconf, %struct.ifconf* %1, i32 0, i32 1
  %21 = bitcast %union.anon* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @unroll_loop(i32 37)
  %23 = load i8, i8* %19, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %.lr.ph.preheader, label %.critedge

.lr.ph.preheader:                                 ; preds = %16
  %26 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i32 0, i32 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.backedge
  %.012 = phi i8* [ %71, %.backedge ], [ %22, %.lr.ph.preheader ]
  %.021 = phi i8* [ %53, %.backedge ], [ %19, %.lr.ph.preheader ]
  %30 = load i8, i8* %.012, align 1
  %31 = zext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %.critedge.loopexit

; <label>:33:                                     ; preds = %.lr.ph
  %34 = bitcast i8* %.021 to %struct.ifreq*
  %35 = bitcast i8* %.012 to %struct.ifreq*
  %36 = getelementptr inbounds i8, i8* %.021, i64 16
  %37 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %38 = bitcast %union.anon.2* %37 to %struct.sockaddr*
  %39 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %38, i32 0, i32 0
  %40 = load i16, i16* %39, align 8
  %41 = zext i16 %40 to i32
  %42 = icmp eq i32 %41, 10
  br i1 %42, label %51, label %43

; <label>:43:                                     ; preds = %33
  %44 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %45 = bitcast %union.anon.2* %44 to %struct.sockaddr*
  %46 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %45, i32 0, i32 0
  %47 = load i16, i16* %46, align 8
  %48 = zext i16 %47 to i32
  %49 = icmp eq i32 %48, 2
  %50 = select i1 %49, i64 16, i64 16
  br label %51

; <label>:51:                                     ; preds = %33, %43
  %52 = phi i64 [ %50, %43 ], [ 28, %33 ]
  %53 = getelementptr inbounds i8, i8* %36, i64 %52
  %54 = getelementptr inbounds i8, i8* %.012, i64 16
  %55 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 1
  %56 = bitcast %union.anon.2* %55 to %struct.sockaddr*
  %57 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %56, i32 0, i32 0
  %58 = load i16, i16* %57, align 8
  %59 = zext i16 %58 to i32
  %60 = icmp eq i32 %59, 10
  br i1 %60, label %69, label %61

; <label>:61:                                     ; preds = %51
  %62 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 1
  %63 = bitcast %union.anon.2* %62 to %struct.sockaddr*
  %64 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %63, i32 0, i32 0
  %65 = load i16, i16* %64, align 8
  %66 = zext i16 %65 to i32
  %67 = icmp eq i32 %66, 2
  %68 = select i1 %67, i64 16, i64 16
  br label %69

; <label>:69:                                     ; preds = %51, %61
  %70 = phi i64 [ %68, %61 ], [ 28, %51 ]
  %71 = getelementptr inbounds i8, i8* %54, i64 %70
  %72 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %73 = icmp sgt i32 %72, 4
  br i1 %73, label %74, label %97

; <label>:74:                                     ; preds = %69
  %75 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %76 = bitcast %union.anon.2* %75 to %struct.sockaddr*
  %77 = call i8* @sprint_inet(%struct.sockaddr* %76, i8* %26)
  %78 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 1
  %79 = bitcast %union.anon.2* %78 to %struct.sockaddr*
  %80 = call i8* @sprint_inet(%struct.sockaddr* %79, i8* %27)
  %81 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 0
  %82 = bitcast %union.anon.1.154* %81 to [16 x i8]*
  %83 = getelementptr inbounds [16 x i8], [16 x i8]* %82, i32 0, i32 0
  %84 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 0
  %85 = bitcast %union.anon.1.154* %84 to [16 x i8]*
  %86 = getelementptr inbounds [16 x i8], [16 x i8]* %85, i32 0, i32 0
  %87 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %88 = bitcast %union.anon.2* %87 to %struct.sockaddr*
  %89 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %88, i32 0, i32 0
  %90 = load i16, i16* %89, align 8
  %91 = zext i16 %90 to i32
  %92 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %93 = bitcast %union.anon.2* %92 to %struct.sockaddr*
  %94 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %93, i32 0, i32 0
  %95 = load i16, i16* %94, align 8
  %96 = zext i16 %95 to i32
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.25.447, i64 0, i64 0), i8* %83, i8* %86, i32 %91, i32 %96, i8* %28, i8* %29)
  br label %97

; <label>:97:                                     ; preds = %74, %69
  %98 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %99 = bitcast %union.anon.2* %98 to %struct.sockaddr*
  %100 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %99, i32 0, i32 0
  %101 = load i16, i16* %100, align 8
  %102 = zext i16 %101 to i32
  %103 = icmp ne i32 %102, 2
  br i1 %103, label %104, label %128

; <label>:104:                                    ; preds = %97
  %105 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 1
  %106 = bitcast %union.anon.2* %105 to %struct.sockaddr*
  %107 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %106, i32 0, i32 0
  %108 = load i16, i16* %107, align 8
  %109 = zext i16 %108 to i32
  %110 = icmp ne i32 %109, 2
  br i1 %110, label %111, label %128

; <label>:111:                                    ; preds = %104
  %112 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %113 = bitcast %union.anon.2* %112 to %struct.sockaddr*
  %114 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %113, i32 0, i32 0
  %115 = load i16, i16* %114, align 8
  %116 = zext i16 %115 to i32
  %117 = icmp ne i32 %116, 10
  br i1 %117, label %118, label %128

; <label>:118:                                    ; preds = %111
  %119 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 1
  %120 = bitcast %union.anon.2* %119 to %struct.sockaddr*
  %121 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %120, i32 0, i32 0
  %122 = load i16, i16* %121, align 8
  %123 = zext i16 %122 to i32
  %124 = icmp ne i32 %123, 10
  br i1 %124, label %.backedge, label %128

.backedge:                                        ; preds = %170, %118
  call void @unroll_loop(i32 37)
  %125 = load i8, i8* %53, align 1
  %126 = zext i8 %125 to i32
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %.lr.ph, label %.critedge.loopexit

; <label>:128:                                    ; preds = %111, %118, %104, %97
  %129 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %130 = bitcast %union.anon.2* %129 to %struct.sockaddr*
  %131 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %130, i32 0, i32 0
  %132 = load i16, i16* %131, align 8
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 1
  %135 = bitcast %union.anon.2* %134 to %struct.sockaddr*
  %136 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %135, i32 0, i32 0
  %137 = load i16, i16* %136, align 8
  %138 = zext i16 %137 to i32
  %139 = icmp ne i32 %133, %138
  br i1 %139, label %.critedge.loopexit, label %140

; <label>:140:                                    ; preds = %128
  %141 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 0
  %142 = bitcast %union.anon.1.154* %141 to [16 x i8]*
  %143 = getelementptr inbounds [16 x i8], [16 x i8]* %142, i32 0, i32 0
  %144 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 0
  %145 = bitcast %union.anon.1.154* %144 to [16 x i8]*
  %146 = getelementptr inbounds [16 x i8], [16 x i8]* %145, i32 0, i32 0
  %147 = call i32 @strcmp(i8* %143, i8* %146) #8
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %.critedge.loopexit, label %149

; <label>:149:                                    ; preds = %140
  %150 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %151 = bitcast %union.anon.2* %150 to %struct.sockaddr*
  %152 = bitcast %struct.sockaddr* %151 to i8*
  %153 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %35, i32 0, i32 1
  %154 = bitcast %union.anon.2* %153 to %struct.sockaddr*
  %155 = bitcast %struct.sockaddr* %154 to i8*
  %156 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %157 = bitcast %union.anon.2* %156 to %struct.sockaddr*
  %158 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %157, i32 0, i32 0
  %159 = load i16, i16* %158, align 8
  %160 = zext i16 %159 to i32
  %161 = icmp eq i32 %160, 10
  br i1 %161, label %170, label %162

; <label>:162:                                    ; preds = %149
  %163 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %34, i32 0, i32 1
  %164 = bitcast %union.anon.2* %163 to %struct.sockaddr*
  %165 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %164, i32 0, i32 0
  %166 = load i16, i16* %165, align 8
  %167 = zext i16 %166 to i32
  %168 = icmp eq i32 %167, 2
  %169 = select i1 %168, i64 16, i64 16
  br label %170

; <label>:170:                                    ; preds = %149, %162
  %171 = phi i64 [ %169, %162 ], [ 28, %149 ]
  %172 = call i32 @memcmp(i8* %152, i8* %155, i64 %171) #8
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %.critedge.loopexit, label %.backedge

.critedge.loopexit:                               ; preds = %.lr.ph, %.backedge, %170, %140, %128
  %.0.ph = phi i32 [ 0, %.lr.ph ], [ 0, %.backedge ], [ 1, %170 ], [ 1, %140 ], [ 1, %128 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %16, %10, %14
  %.0 = phi i32 [ 1, %14 ], [ 1, %10 ], [ 0, %16 ], [ %.0.ph, %.critedge.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @nia_is_in_totd_iflist(i8*) #0 {
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 24, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %1
  %5 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 24, i32 0
  br label %9

; <label>:6:                                      ; preds = %17
  %7 = load i8*, i8** %scevgep, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %._crit_edge.loopexit

; <label>:9:                                      ; preds = %.lr.ph, %6
  %.012 = phi i8** [ %5, %.lr.ph ], [ %21, %6 ]
  call void @unroll_loop(i32 68)
  %10 = load i8*, i8** %.012, align 8
  %11 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26.444, i64 0, i64 0), i8* %10) #8
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %._crit_edge.loopexit

; <label>:13:                                     ; preds = %9
  %14 = load i8*, i8** %.012, align 8
  %15 = call i32 @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.445, i64 0, i64 0), i8* %14) #8
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %._crit_edge.loopexit

; <label>:17:                                     ; preds = %13
  %18 = load i8*, i8** %.012, align 8
  %19 = call i32 @strcmp(i8* %0, i8* %18) #8
  %20 = icmp ne i32 %19, 0
  %21 = getelementptr inbounds i8*, i8** %.012, i32 1
  %scevgep = getelementptr i8*, i8** %.012, i64 1
  br i1 %20, label %6, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %9, %13, %17, %6
  %.0.ph = phi i32 [ 1, %9 ], [ 1, %13 ], [ 1, %17 ], [ 0, %6 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %.0 = phi i32 [ 0, %1 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @net_reinit_socketlist(i32, i32) #0 {
  %3 = call %struct.generic_list* @list_init()
  %4 = icmp ne %struct.generic_list* %3, null
  br i1 %4, label %5, label %28

; <label>:5:                                      ; preds = %2
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %18

; <label>:9:                                      ; preds = %5
  %10 = icmp ne i32 %1, 0
  br i1 %10, label %11, label %17

; <label>:11:                                     ; preds = %9
  %12 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  call void @nia_list_destroy(%struct.generic_list* %12)
  %13 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %14 = load i32, i32* %13, align 8
  %15 = call i32 @nia_set_wildsock(%struct.generic_list* %3, i32 %14)
  store %struct.generic_list* %3, %struct.generic_list** @NI_head, align 8
  %16 = call i32 @net_bind_socketlist()
  br label %28

; <label>:17:                                     ; preds = %9
  call void @nia_list_destroy(%struct.generic_list* %3)
  br label %28

; <label>:18:                                     ; preds = %5
  %19 = call i32 @net_get_ifaddrs(%struct.generic_list* %3, i32 %0)
  switch i32 %19, label %27 [
    i32 0, label %20
    i32 1, label %23
  ]

; <label>:20:                                     ; preds = %18
  %21 = icmp ne i32 %1, 0
  br i1 %21, label %23, label %22

; <label>:22:                                     ; preds = %20
  call void @nia_list_destroy(%struct.generic_list* %3)
  br label %28

; <label>:23:                                     ; preds = %20, %18
  %24 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  call void @nia_list_destroy(%struct.generic_list* %24)
  %25 = call i32 @nia_set_wildsock(%struct.generic_list* %3, i32 0)
  store %struct.generic_list* %3, %struct.generic_list** @NI_head, align 8
  %26 = call i32 @net_bind_socketlist()
  br label %28

; <label>:27:                                     ; preds = %18
  call void @nia_list_destroy(%struct.generic_list* %3)
  br label %28

; <label>:28:                                     ; preds = %2, %27, %23, %22, %17, %11
  %.0 = phi i32 [ 1, %11 ], [ 0, %17 ], [ -1, %27 ], [ 1, %23 ], [ 0, %22 ], [ -1, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @nia_list_destroy(%struct.generic_list*) #0 {
  call void @list_destroy(%struct.generic_list* %0, void (i8*)* @nia_free_closev)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @net_bind_socketlist() #0 {
  %1 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %2 = icmp ne %struct.generic_list* %1, null
  br i1 %2, label %3, label %._crit_edge

; <label>:3:                                      ; preds = %0
  %4 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 0
  %6 = load %struct.generic_list*, %struct.generic_list** %5, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %23
  %.014 = phi %struct.generic_list* [ %25, %23 ], [ %6, %.lr.ph.preheader ]
  %.023 = phi i32 [ %.3, %23 ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 69)
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.014, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct.nia*
  %13 = getelementptr inbounds %struct.nia, %struct.nia* %12, i32 0, i32 0
  %14 = load %struct.sockaddr*, %struct.sockaddr** %13, align 8
  %15 = icmp ne %struct.sockaddr* %14, null
  br i1 %15, label %16, label %23

; <label>:16:                                     ; preds = %.lr.ph
  %17 = call i32 @net_mesg_socket(%struct.nia* %12)
  %18 = icmp sge i32 %17, 0
  %19 = add nsw i32 %.023, 1
  %spec.select = select i1 %18, i32 %19, i32 %.023
  %20 = call i32 @net_stream_socket(%struct.nia* %12)
  %21 = icmp sge i32 %20, 0
  %22 = add nsw i32 %spec.select, 1
  %.2 = select i1 %21, i32 %22, i32 %spec.select
  br label %23

; <label>:23:                                     ; preds = %16, %.lr.ph
  %.3 = phi i32 [ %.023, %.lr.ph ], [ %.2, %16 ]
  %24 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.014, i32 0, i32 0
  %25 = load %struct.generic_list*, %struct.generic_list** %24, align 8
  %26 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %25, i32 0, i32 2
  %27 = load i8*, i8** %26, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %23
  %.0.ph = phi i32 [ %.3, %23 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3, %0
  %.0 = phi i32 [ -1, %0 ], [ 0, %3 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @net_mesg_socket(%struct.nia*) #0 {
  %2 = alloca [256 x i8], align 16
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 1
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %6 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8
  %7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %6, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = call i32 @socket(i32 %9, i32 2, i32 0) #9
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %15

; <label>:12:                                     ; preds = %1
  %13 = getelementptr [27 x i8], [27 x i8]* @.str.9.451, i32 0, i32 0
  %14 = getelementptr [18 x i8], [18 x i8]* @.str.8.458, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %13, i8* %14)
  br label %70

; <label>:15:                                     ; preds = %1
  %16 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 4
  br i1 %18, label %19, label %22

; <label>:19:                                     ; preds = %15
  %20 = getelementptr [25 x i8], [25 x i8]* @.str.10.452, i32 0, i32 0
  %21 = getelementptr [18 x i8], [18 x i8]* @.str.8.458, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %20, i8* %21, i32 %10)
  br label %22

; <label>:22:                                     ; preds = %19, %15
  %23 = bitcast i32* %3 to i8*
  %24 = call i32 @setsockopt(i32 %10, i32 1, i32 2, i8* %23, i32 4) #9
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %28

; <label>:26:                                     ; preds = %22
  %27 = getelementptr [15 x i8], [15 x i8]* @.str.11.453, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %27)
  br label %28

; <label>:28:                                     ; preds = %26, %22
  %29 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %30 = load %struct.sockaddr*, %struct.sockaddr** %29, align 8
  %31 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %32 = load %struct.sockaddr*, %struct.sockaddr** %31, align 8
  %33 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %32, i32 0, i32 0
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = icmp eq i32 %35, 10
  br i1 %36, label %46, label %37

; <label>:37:                                     ; preds = %28
  %38 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %39 = load %struct.sockaddr*, %struct.sockaddr** %38, align 8
  %40 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %39, i32 0, i32 0
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp eq i32 %42, 2
  %44 = zext i1 %43 to i64
  %45 = select i1 %43, i64 16, i64 16
  br label %46

; <label>:46:                                     ; preds = %28, %37
  %47 = phi i64 [ %45, %37 ], [ 28, %28 ]
  %48 = trunc i64 %47 to i32
  %49 = call i32 @bind(i32 %10, %struct.sockaddr* %30, i32 %48) #9
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %54

; <label>:51:                                     ; preds = %46
  %52 = getelementptr [33 x i8], [33 x i8]* @.str.12.459, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %52)
  %53 = call i32 @close(i32 %10)
  br label %70

; <label>:54:                                     ; preds = %46
  %55 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %56 = load %struct.sockaddr*, %struct.sockaddr** %55, align 8
  %57 = bitcast %struct.sockaddr* %56 to %struct.sockaddr_in*
  %58 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %57, i32 0, i32 1
  %59 = load i16, i16* %58, align 2
  %60 = icmp ne i16 %59, 0
  br i1 %60, label %61, label %68

; <label>:61:                                     ; preds = %54
  %62 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %63 = load %struct.sockaddr*, %struct.sockaddr** %62, align 8
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %65 = call i8* @sprint_inet(%struct.sockaddr* %63, i8* %64)
  %66 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %67 = getelementptr [24 x i8], [24 x i8]* @.str.13.460, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %67, i8* %66)
  br label %68

; <label>:68:                                     ; preds = %61, %54
  %69 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 1
  store i32 %10, i32* %69, align 8
  br label %70

; <label>:70:                                     ; preds = %68, %51, %12
  %.0 = phi i32 [ -1, %12 ], [ -1, %51 ], [ %10, %68 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @net_stream_socket(%struct.nia*) #0 {
  %2 = alloca [256 x i8], align 16
  %3 = alloca i32, align 4
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 2
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %6 = load %struct.sockaddr*, %struct.sockaddr** %5, align 8
  %7 = bitcast %struct.sockaddr* %6 to %struct.sockaddr_in*
  %8 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  %9 = load i16, i16* %8, align 2
  %10 = icmp ne i16 %9, 0
  br i1 %10, label %11, label %81

; <label>:11:                                     ; preds = %1
  %12 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %13 = load %struct.sockaddr*, %struct.sockaddr** %12, align 8
  %14 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %13, i32 0, i32 0
  %15 = load i16, i16* %14, align 2
  %16 = zext i16 %15 to i32
  %17 = call i32 @socket(i32 %16, i32 1, i32 0) #9
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %22

; <label>:19:                                     ; preds = %11
  %20 = getelementptr [27 x i8], [27 x i8]* @.str.9.451, i32 0, i32 0
  %21 = getelementptr [20 x i8], [20 x i8]* @.str.14.450, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %20, i8* %21)
  br label %81

; <label>:22:                                     ; preds = %11
  %23 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 4
  br i1 %25, label %26, label %29

; <label>:26:                                     ; preds = %22
  %27 = getelementptr [25 x i8], [25 x i8]* @.str.10.452, i32 0, i32 0
  %28 = getelementptr [20 x i8], [20 x i8]* @.str.14.450, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %27, i8* %28, i32 %17)
  br label %29

; <label>:29:                                     ; preds = %26, %22
  %30 = bitcast i32* %3 to i8*
  %31 = call i32 @setsockopt(i32 %17, i32 1, i32 2, i8* %30, i32 4) #9
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %35

; <label>:33:                                     ; preds = %29
  %34 = getelementptr [15 x i8], [15 x i8]* @.str.11.453, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %34)
  br label %35

; <label>:35:                                     ; preds = %33, %29
  %36 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %37 = load %struct.sockaddr*, %struct.sockaddr** %36, align 8
  %38 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %39 = load %struct.sockaddr*, %struct.sockaddr** %38, align 8
  %40 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %39, i32 0, i32 0
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = icmp eq i32 %42, 10
  br i1 %43, label %53, label %44

; <label>:44:                                     ; preds = %35
  %45 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %46 = load %struct.sockaddr*, %struct.sockaddr** %45, align 8
  %47 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %46, i32 0, i32 0
  %48 = load i16, i16* %47, align 2
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %49, 2
  %51 = zext i1 %50 to i64
  %52 = select i1 %50, i64 16, i64 16
  br label %53

; <label>:53:                                     ; preds = %35, %44
  %54 = phi i64 [ %52, %44 ], [ 28, %35 ]
  %55 = trunc i64 %54 to i32
  %56 = call i32 @bind(i32 %17, %struct.sockaddr* %37, i32 %55) #9
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %58, label %61

; <label>:58:                                     ; preds = %53
  %59 = getelementptr [26 x i8], [26 x i8]* @.str.15.454, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %59)
  %60 = call i32 @close(i32 %17)
  br label %81

; <label>:61:                                     ; preds = %53
  %62 = bitcast i32* %3 to i8*
  %63 = call i32 (i32, i64, ...) @ioctl(i32 %17, i64 21537, i8* %62) #9
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %65, label %67

; <label>:65:                                     ; preds = %61
  %66 = getelementptr [34 x i8], [34 x i8]* @.str.16.455, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %66)
  br label %81

; <label>:67:                                     ; preds = %61
  %68 = call i32 @listen(i32 %17, i32 5) #9
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %73

; <label>:70:                                     ; preds = %67
  %71 = getelementptr [18 x i8], [18 x i8]* @.str.17.456, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %71)
  %72 = call i32 @close(i32 %17)
  br label %81

; <label>:73:                                     ; preds = %67
  %74 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 0
  %75 = load %struct.sockaddr*, %struct.sockaddr** %74, align 8
  %76 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %77 = call i8* @sprint_inet(%struct.sockaddr* %75, i8* %76)
  %78 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %79 = getelementptr [24 x i8], [24 x i8]* @.str.18.457, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %79, i8* %78)
  %80 = getelementptr inbounds %struct.nia, %struct.nia* %0, i32 0, i32 2
  store i32 %17, i32* %80, align 4
  br label %81

; <label>:81:                                     ; preds = %1, %73, %70, %65, %58, %19
  %.0 = phi i32 [ -1, %19 ], [ -1, %58 ], [ -1, %65 ], [ -1, %70 ], [ %17, %73 ], [ -1, %1 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @setsockopt(i32, i32, i32, i8*, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @bind(i32, %struct.sockaddr*, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @listen(i32, i32) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @net_delete_socketlist() #0 {
  %1 = load %struct.generic_list*, %struct.generic_list** @NI_head, align 8
  call void @nia_list_destroy(%struct.generic_list* %1)
  store %struct.generic_list* null, %struct.generic_list** @NI_wildcard6, align 8
  store %struct.generic_list* null, %struct.generic_list** @NI_wildcard, align 8
  store %struct.generic_list* null, %struct.generic_list** @NI_head, align 8
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @net_mesg_send(%struct.nia*, i8*, i32, %struct.sockaddr*) #0 {
  %5 = icmp ne %struct.nia* %0, null
  br i1 %5, label %26, label %6

; <label>:6:                                      ; preds = %4
  %7 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %8 = load i16, i16* %7, align 2
  %9 = zext i16 %8 to i32
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %11, label %16

; <label>:11:                                     ; preds = %6
  %12 = load %struct.generic_list*, %struct.generic_list** @NI_wildcard, align 8
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %12, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to %struct.nia*
  br label %16

; <label>:16:                                     ; preds = %11, %6
  %.01 = phi %struct.nia* [ %15, %11 ], [ %0, %6 ]
  %17 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = icmp eq i32 %19, 10
  br i1 %20, label %21, label %26

; <label>:21:                                     ; preds = %16
  %22 = load %struct.generic_list*, %struct.generic_list** @NI_wildcard6, align 8
  %23 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %22, i32 0, i32 2
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast i8* %24 to %struct.nia*
  br label %26

; <label>:26:                                     ; preds = %16, %21, %4
  %.2 = phi %struct.nia* [ %0, %4 ], [ %25, %21 ], [ %.01, %16 ]
  %27 = icmp ne %struct.nia* %.2, null
  br i1 %27, label %28, label %32

; <label>:28:                                     ; preds = %26
  %29 = getelementptr inbounds %struct.nia, %struct.nia* %.2, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %35

; <label>:32:                                     ; preds = %28, %26
  %33 = getelementptr [35 x i8], [35 x i8]* @.str.7.466, i32 0, i32 0
  %34 = getelementptr [16 x i8], [16 x i8]* @.str.6.465, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %33, i8* %34)
  br label %99

; <label>:35:                                     ; preds = %28
  %36 = getelementptr inbounds %struct.nia, %struct.nia* %.2, i32 0, i32 0
  %37 = load %struct.sockaddr*, %struct.sockaddr** %36, align 8
  %38 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %37, i32 0, i32 0
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %42, label %67

; <label>:42:                                     ; preds = %35
  %43 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = icmp eq i32 %45, 2
  br i1 %46, label %47, label %67

; <label>:47:                                     ; preds = %42
  %48 = getelementptr inbounds %struct.nia, %struct.nia* %.2, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %2 to i64
  %51 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %52 = load i16, i16* %51, align 2
  %53 = zext i16 %52 to i32
  %54 = icmp eq i32 %53, 10
  br i1 %54, label %62, label %55

; <label>:55:                                     ; preds = %47
  %56 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = icmp eq i32 %58, 2
  %60 = zext i1 %59 to i64
  %61 = select i1 %59, i64 16, i64 16
  br label %62

; <label>:62:                                     ; preds = %47, %55
  %63 = phi i64 [ %61, %55 ], [ 28, %47 ]
  %64 = trunc i64 %63 to i32
  %65 = call i64 @sendto(i32 %49, i8* %1, i64 %50, i32 0, %struct.sockaddr* %3, i32 %64)
  %66 = trunc i64 %65 to i32
  br label %99

; <label>:67:                                     ; preds = %42, %35
  %68 = getelementptr inbounds %struct.nia, %struct.nia* %.2, i32 0, i32 0
  %69 = load %struct.sockaddr*, %struct.sockaddr** %68, align 8
  %70 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %69, i32 0, i32 0
  %71 = load i16, i16* %70, align 2
  %72 = zext i16 %71 to i32
  %73 = icmp eq i32 %72, 10
  br i1 %73, label %74, label %99

; <label>:74:                                     ; preds = %67
  %75 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %76 = load i16, i16* %75, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %77, 10
  br i1 %78, label %79, label %99

; <label>:79:                                     ; preds = %74
  %80 = getelementptr inbounds %struct.nia, %struct.nia* %.2, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = sext i32 %2 to i64
  %83 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = icmp eq i32 %85, 10
  br i1 %86, label %94, label %87

; <label>:87:                                     ; preds = %79
  %88 = getelementptr inbounds %struct.sockaddr, %struct.sockaddr* %3, i32 0, i32 0
  %89 = load i16, i16* %88, align 2
  %90 = zext i16 %89 to i32
  %91 = icmp eq i32 %90, 2
  %92 = zext i1 %91 to i64
  %93 = select i1 %91, i64 16, i64 16
  br label %94

; <label>:94:                                     ; preds = %79, %87
  %95 = phi i64 [ %93, %87 ], [ 28, %79 ]
  %96 = trunc i64 %95 to i32
  %97 = call i64 @sendto(i32 %81, i8* %1, i64 %82, i32 0, %struct.sockaddr* %3, i32 %96)
  %98 = trunc i64 %97 to i32
  br label %99

; <label>:99:                                     ; preds = %67, %74, %94, %62, %32
  %.0 = phi i32 [ -1, %32 ], [ %66, %62 ], [ %98, %94 ], [ -1, %74 ], [ -1, %67 ]
  ret i32 %.0
}

declare dso_local i64 @sendto(i32, i8*, i64, i32, %struct.sockaddr*, i32) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @conv_scoped_query(%struct.context.165*) #0 {
  %2 = getelementptr [27 x i8], [27 x i8]* @.str.469, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2)
  %3 = getelementptr inbounds %struct.context.165, %struct.context.165* %0, i32 0, i32 19
  %4 = load %struct.nia*, %struct.nia** %3, align 8
  %5 = icmp ne %struct.nia* %4, null
  br i1 %5, label %6, label %175

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.nia, %struct.nia* %4, i32 0, i32 0
  %8 = load %struct.sockaddr*, %struct.sockaddr** %7, align 8
  %9 = icmp ne %struct.sockaddr* %8, null
  br i1 %9, label %10, label %175

; <label>:10:                                     ; preds = %6
  %11 = getelementptr inbounds %struct.nia, %struct.nia* %4, i32 0, i32 0
  %12 = load %struct.sockaddr*, %struct.sockaddr** %11, align 8
  %13 = bitcast %struct.sockaddr* %12 to %struct.sockaddr_in6*
  %14 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 0
  %15 = load i16, i16* %14, align 4
  %16 = zext i16 %15 to i32
  %17 = icmp ne i32 %16, 10
  br i1 %17, label %175, label %18

; <label>:18:                                     ; preds = %10
  %19 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 3
  %20 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %19, i32 0, i32 0
  %21 = bitcast %union.anon.1* %20 to [4 x i32]*
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %21, i64 0, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* @in6addr_any, i32 0, i32 0
  %25 = bitcast %union.anon.1* %24 to [4 x i32]*
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* %25, i64 0, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %23, %27
  br i1 %28, label %29, label %59

; <label>:29:                                     ; preds = %18
  %30 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %19, i32 0, i32 0
  %31 = bitcast %union.anon.1* %30 to [4 x i32]*
  %32 = getelementptr inbounds [4 x i32], [4 x i32]* %31, i64 0, i64 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* @in6addr_any, i32 0, i32 0
  %35 = bitcast %union.anon.1* %34 to [4 x i32]*
  %36 = getelementptr inbounds [4 x i32], [4 x i32]* %35, i64 0, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %33, %37
  br i1 %38, label %39, label %59

; <label>:39:                                     ; preds = %29
  %40 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %19, i32 0, i32 0
  %41 = bitcast %union.anon.1* %40 to [4 x i32]*
  %42 = getelementptr inbounds [4 x i32], [4 x i32]* %41, i64 0, i64 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* @in6addr_any, i32 0, i32 0
  %45 = bitcast %union.anon.1* %44 to [4 x i32]*
  %46 = getelementptr inbounds [4 x i32], [4 x i32]* %45, i64 0, i64 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %43, %47
  br i1 %48, label %49, label %59

; <label>:49:                                     ; preds = %39
  %50 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %19, i32 0, i32 0
  %51 = bitcast %union.anon.1* %50 to [4 x i32]*
  %52 = getelementptr inbounds [4 x i32], [4 x i32]* %51, i64 0, i64 3
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* @in6addr_any, i32 0, i32 0
  %55 = bitcast %union.anon.1* %54 to [4 x i32]*
  %56 = getelementptr inbounds [4 x i32], [4 x i32]* %55, i64 0, i64 3
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %53, %57
  br label %59

; <label>:59:                                     ; preds = %49, %39, %29, %18
  %60 = phi i1 [ false, %39 ], [ false, %29 ], [ false, %18 ], [ %58, %49 ]
  %61 = zext i1 %60 to i32
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %69

; <label>:63:                                     ; preds = %59
  %64 = load i32, i32* @conv_scoped_query.warned, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %68, label %66

; <label>:66:                                     ; preds = %63
  %67 = getelementptr [54 x i8], [54 x i8]* @.str.1.470, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %67)
  br label %68

; <label>:68:                                     ; preds = %66, %63
  store i32 1, i32* @conv_scoped_query.warned, align 4
  br label %175

; <label>:69:                                     ; preds = %59
  %70 = getelementptr inbounds %struct.context.165, %struct.context.165* %0, i32 0, i32 22
  %71 = load %struct.sockaddr*, %struct.sockaddr** %70, align 8
  %72 = bitcast %struct.sockaddr* %71 to %struct.sockaddr_in6*
  %73 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 0
  %74 = load i16, i16* %73, align 4
  %75 = zext i16 %74 to i32
  %76 = icmp ne i32 %75, 10
  br i1 %76, label %175, label %77

; <label>:77:                                     ; preds = %69
  %78 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 3
  %79 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %78, i32 0, i32 0
  %80 = bitcast %union.anon.1* %79 to [4 x i32]*
  %81 = getelementptr inbounds [4 x i32], [4 x i32]* %80, i64 0, i64 0
  %82 = load i32, i32* %81, align 4
  %83 = call i32 @htonl(i32 -4194304) #10
  %84 = and i32 %82, %83
  %85 = call i32 @htonl(i32 -25165824) #10
  %86 = icmp eq i32 %84, %85
  %87 = zext i1 %86 to i32
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %89, label %126

; <label>:89:                                     ; preds = %77
  %90 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 3
  %91 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %90, i32 0, i32 0
  %92 = bitcast %union.anon.1* %91 to [4 x i32]*
  %93 = getelementptr inbounds [4 x i32], [4 x i32]* %92, i64 0, i64 0
  %94 = load i32, i32* %93, align 4
  %95 = call i32 @htonl(i32 -4194304) #10
  %96 = and i32 %94, %95
  %97 = call i32 @htonl(i32 -25165824) #10
  %98 = icmp eq i32 %96, %97
  %99 = zext i1 %98 to i32
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %101, label %126

; <label>:101:                                    ; preds = %89
  %102 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 4
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 4
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %103, %105
  br i1 %106, label %175, label %107

; <label>:107:                                    ; preds = %101
  %108 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 4
  %109 = load i32, i32* %108, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %175, label %111

; <label>:111:                                    ; preds = %107
  %112 = load i32, i32* @conv_scoped_query.warned, align 4
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %116, label %114

; <label>:114:                                    ; preds = %111
  %115 = getelementptr [53 x i8], [53 x i8]* @.str.2.471, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %115)
  br label %116

; <label>:116:                                    ; preds = %114, %111
  store i32 1, i32* @conv_scoped_query.warned, align 4
  %117 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 3
  %118 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %117, i32 0, i32 0
  %119 = bitcast %union.anon.1* %118 to [16 x i8]*
  %120 = getelementptr inbounds [16 x i8], [16 x i8]* %119, i64 0, i64 3
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 4
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %122, %124
  %. = select i1 %125, i32 1, i32 0
  br label %175

; <label>:126:                                    ; preds = %89, %77
  %127 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 3
  %128 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %127, i32 0, i32 0
  %129 = bitcast %union.anon.1* %128 to [4 x i32]*
  %130 = getelementptr inbounds [4 x i32], [4 x i32]* %129, i64 0, i64 0
  %131 = load i32, i32* %130, align 4
  %132 = call i32 @htonl(i32 -4194304) #10
  %133 = and i32 %131, %132
  %134 = call i32 @htonl(i32 -20971520) #10
  %135 = icmp eq i32 %133, %134
  %136 = zext i1 %135 to i32
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %175

; <label>:138:                                    ; preds = %126
  %139 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 3
  %140 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %139, i32 0, i32 0
  %141 = bitcast %union.anon.1* %140 to [4 x i32]*
  %142 = getelementptr inbounds [4 x i32], [4 x i32]* %141, i64 0, i64 0
  %143 = load i32, i32* %142, align 4
  %144 = call i32 @htonl(i32 -4194304) #10
  %145 = and i32 %143, %144
  %146 = call i32 @htonl(i32 -20971520) #10
  %147 = icmp eq i32 %145, %146
  %148 = zext i1 %147 to i32
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %175

; <label>:150:                                    ; preds = %138
  %151 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 4
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 4
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %152, %154
  br i1 %155, label %175, label %156

; <label>:156:                                    ; preds = %150
  %157 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 4
  %158 = load i32, i32* %157, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %175, label %160

; <label>:160:                                    ; preds = %156
  %161 = load i32, i32* @conv_scoped_query.warned, align 4
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %165, label %163

; <label>:163:                                    ; preds = %160
  %164 = getelementptr [53 x i8], [53 x i8]* @.str.2.471, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %164)
  br label %165

; <label>:165:                                    ; preds = %163, %160
  store i32 1, i32* @conv_scoped_query.warned, align 4
  %166 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %13, i32 0, i32 3
  %167 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %166, i32 0, i32 0
  %168 = bitcast %union.anon.1* %167 to [16 x i8]*
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %168, i64 0, i64 3
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds %struct.sockaddr_in6, %struct.sockaddr_in6* %72, i32 0, i32 4
  %173 = load i32, i32* %172, align 4
  %174 = icmp eq i32 %171, %173
  %.1 = select i1 %174, i32 1, i32 0
  br label %175

; <label>:175:                                    ; preds = %126, %138, %165, %156, %150, %116, %107, %101, %69, %10, %1, %6, %68
  %.0 = phi i32 [ 0, %68 ], [ 0, %6 ], [ 0, %1 ], [ 0, %10 ], [ 0, %69 ], [ 1, %101 ], [ 0, %107 ], [ %., %116 ], [ 1, %150 ], [ 0, %156 ], [ %.1, %165 ], [ 0, %138 ], [ 0, %126 ]
  ret i32 %.0
}

; Function Attrs: nounwind readnone
declare dso_local i32 @htonl(i32) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_scoped_list(%struct.generic_list*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.4.475, i32 0, i32 0
  %3 = getelementptr [19 x i8], [19 x i8]* @.str.3.474, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %6 = load %struct.generic_list*, %struct.generic_list** %5, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %27
  %.01 = phi %struct.generic_list* [ %29, %27 ], [ %6, %.lr.ph.preheader ]
  call void @unroll_loop(i32 70)
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct.rr_set*
  %13 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %12, i32 0, i32 2
  %14 = bitcast %union.u_key* %13 to %struct.key_info**
  %15 = load %struct.key_info*, %struct.key_info** %14, align 8
  %16 = getelementptr inbounds %struct.key_info, %struct.key_info* %15, i32 0, i32 0
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = icmp ne i32 %18, 28
  br i1 %19, label %27, label %20

; <label>:20:                                     ; preds = %.lr.ph
  %21 = call %struct.rr_set* @conv_scoped_rrset(%struct.rr_set* %12)
  %22 = icmp ne %struct.rr_set* %21, null
  br i1 %22, label %24, label %23

; <label>:23:                                     ; preds = %20
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5.476, i64 0, i64 0))
  br label %27

; <label>:24:                                     ; preds = %20
  call void @rrset_free(%struct.rr_set* %12)
  %25 = bitcast %struct.rr_set* %21 to i8*
  %26 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  store i8* %25, i8** %26, align 8
  br label %27

; <label>:27:                                     ; preds = %23, %24, %.lr.ph
  %28 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 0
  %29 = load %struct.generic_list*, %struct.generic_list** %28, align 8
  %30 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %29, i32 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = icmp ne i8* %31, null
  br i1 %32, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %27
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %33 = getelementptr [11 x i8], [11 x i8]* @.str.6.477, i32 0, i32 0
  %34 = getelementptr [19 x i8], [19 x i8]* @.str.3.474, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %33, i8* %34)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rr_set* @conv_scoped_rrset(%struct.rr_set*) #6 {
  %2 = alloca %struct.rr_list, align 8, !track !158
  %3 = getelementptr [25 x i8], [25 x i8]* @.str.21.478, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3)
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %158

; <label>:7:                                      ; preds = %1
  %8 = bitcast %struct.rr_list* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  %9 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %10 = bitcast %union.u_key* %9 to %struct.key_info**
  %11 = load %struct.key_info*, %struct.key_info** %10, align 8
  %12 = getelementptr inbounds %struct.key_info, %struct.key_info* %11, i32 0, i32 0
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = icmp ne i32 %14, 28
  br i1 %15, label %158, label %16

; <label>:16:                                     ; preds = %7
  %17 = call %struct.rr_list* @rr_list_of_rrset(%struct.rr_set* %0)
  %18 = icmp ne %struct.rr_list* %17, null
  br i1 %18, label %19, label %158

; <label>:19:                                     ; preds = %16
  %20 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %17, i32 0, i32 0
  %21 = load %struct.rr_list*, %struct.rr_list** %20, align 8
  %22 = icmp ne %struct.rr_list* %21, null
  br i1 %22, label %.lr.ph26.preheader, label %._crit_edge27

.lr.ph26.preheader:                               ; preds = %19
  br label %.lr.ph26

.lr.ph26:                                         ; preds = %.lr.ph26.preheader, %.critedge
  %.0124 = phi %struct.rr_list* [ %118, %.critedge ], [ %17, %.lr.ph26.preheader ]
  %.0423 = phi i8* [ %.15, %.critedge ], [ null, %.lr.ph26.preheader ]
  %.0722 = phi %struct.rr_list* [ %.29, %.critedge ], [ %2, %.lr.ph26.preheader ]
  call void @unroll_loop(i32 71)
  %23 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0124, i32 0, i32 3
  %24 = load %struct.rr*, %struct.rr** %23, align 8
  %25 = bitcast %struct.rr* %24 to i8*
  %26 = getelementptr inbounds i8, i8* %25, i64 6
  %27 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %28 = icmp slt i32 0, %27
  br i1 %28, label %.lr.ph20.preheader, label %.loopexit

.lr.ph20.preheader:                               ; preds = %.lr.ph26
  br label %.lr.ph20

.lr.ph20:                                         ; preds = %.lr.ph20.preheader, %38
  %lsr.iv = phi %struct.ToT* [ bitcast (%struct.in6_addr* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 26, i64 0) to %struct.ToT*), %.lr.ph20.preheader ], [ %41, %38 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %38 ], [ 0, %.lr.ph20.preheader ]
  %lsr.iv1 = bitcast %struct.ToT* %lsr.iv to i8*
  call void @unroll_loop(i32 72)
  %29 = shl i64 %indvars.iv, 2
  %30 = inttoptr i64 %29 to i32*
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %29
  %uglygep2 = bitcast i8* %uglygep to i32*
  %scevgep3 = getelementptr i32, i32* %uglygep2, i64 523
  %31 = load i32, i32* %scevgep3, align 4
  %32 = sdiv i32 %31, 8
  %33 = sext i32 %32 to i64
  %34 = call i32 @memcmp(i8* %26, i8* %lsr.iv1, i64 %33) #8
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %38, label %36

; <label>:36:                                     ; preds = %.lr.ph20
  %.0.lcssa10.wide = phi i64 [ %indvars.iv, %.lr.ph20 ]
  %37 = trunc i64 %.0.lcssa10.wide to i32
  br label %.loopexit

; <label>:38:                                     ; preds = %.lr.ph20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %39 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %40 = sext i32 %39 to i64
  %scevgep = getelementptr %struct.ToT, %struct.ToT* %lsr.iv, i64 0, i32 2
  %41 = bitcast i8** %scevgep to %struct.ToT*
  %42 = icmp slt i64 %indvars.iv.next, %40
  br i1 %42, label %.lr.ph20, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %38
  %split21.wide = phi i64 [ %indvars.iv.next, %38 ]
  %43 = trunc i64 %split21.wide to i32
  br label %.loopexit

.loopexit:                                        ; preds = %.lr.ph26, %..loopexit_crit_edge, %36
  %.0.lcssa = phi i32 [ %37, %36 ], [ %43, %..loopexit_crit_edge ], [ 0, %.lr.ph26 ]
  %44 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %45 = icmp sge i32 %.0.lcssa, %44
  br i1 %45, label %.critedge, label %46

; <label>:46:                                     ; preds = %.loopexit
  %47 = call %struct.rr_list* @rr_list_alloc()
  %48 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  store %struct.rr_list* %47, %struct.rr_list** %48, align 8
  %49 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  %50 = load %struct.rr_list*, %struct.rr_list** %49, align 8
  %51 = bitcast %struct.rr_list* %50 to i8*
  %52 = bitcast %struct.rr_list* %.0124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %52, i64 24, i1 false), !track !159
  %53 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  %54 = load %struct.rr_list*, %struct.rr_list** %53, align 8
  %55 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %54, i32 0, i32 3
  store %struct.rr* null, %struct.rr** %55, align 8
  %56 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  %57 = load %struct.rr_list*, %struct.rr_list** %56, align 8
  %58 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %57, i32 0, i32 0
  store %struct.rr_list* null, %struct.rr_list** %58, align 8
  %59 = call noalias i8* @malloc(i64 16) #9, !track !160
  %60 = icmp ne i8* %59, null
  br i1 %60, label %65, label %61

; <label>:61:                                     ; preds = %46
  %62 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  %63 = load %struct.rr_list*, %struct.rr_list** %62, align 8
  call void @rr_list_free(%struct.rr_list* %63)
  %64 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  store %struct.rr_list* null, %struct.rr_list** %64, align 8
  br label %.critedge

; <label>:65:                                     ; preds = %46
  %66 = sext i32 %.0.lcssa to i64
  %67 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 27), i64 0, i64 %66
  %68 = bitcast %struct.in6_addr* %67 to i8*
  %69 = sext i32 %.0.lcssa to i64
  %70 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 28), i64 0, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = sdiv i32 %71, 8
  %73 = sext i32 %72 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 4 %68, i64 %73, i1 false), !track !161
  %74 = sext i32 %.0.lcssa to i64
  %75 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 28), i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = sdiv i32 %76, 8
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %59, i64 %78
  %80 = sext i32 %.0.lcssa to i64
  %81 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 28), i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = sdiv i32 %82, 8
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %26, i64 %84
  %86 = sext i32 %.0.lcssa to i64
  %87 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 28), i64 0, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = sdiv i32 %88, 8
  %90 = sext i32 %89 to i64
  %91 = sub i64 16, %90
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %79, i8* align 1 %85, i64 %91, i1 false), !track !162
  %92 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0124, i32 0, i32 3
  %93 = load %struct.rr*, %struct.rr** %92, align 8
  %94 = getelementptr inbounds %struct.rr, %struct.rr* %93, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = call %struct.rr* @rr_alloc(i32 %95, i32 16, i8* %59)
  %97 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  %98 = load %struct.rr_list*, %struct.rr_list** %97, align 8
  %99 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %98, i32 0, i32 3
  store %struct.rr* %96, %struct.rr** %99, align 8
  call void @free(i8* %59) #9
  %100 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  %101 = load %struct.rr_list*, %struct.rr_list** %100, align 8
  %102 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %101, i32 0, i32 3
  %103 = load %struct.rr*, %struct.rr** %102, align 8
  %104 = icmp ne %struct.rr* %103, null
  br i1 %104, label %.preheader, label %106

.preheader:                                       ; preds = %65
  call void @unroll_loop(i32 73)
  %105 = icmp ne %struct.rr_list* %.0722, null
  br i1 %105, label %.lr.ph3.preheader, label %.critedge

.lr.ph3.preheader:                                ; preds = %.preheader
  br label %.lr.ph3

; <label>:106:                                    ; preds = %65
  %107 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  %108 = load %struct.rr_list*, %struct.rr_list** %107, align 8
  call void @rr_list_free(%struct.rr_list* %108)
  %109 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0722, i32 0, i32 0
  store %struct.rr_list* null, %struct.rr_list** %109, align 8
  br label %.critedge

.lr.ph3:                                          ; preds = %.lr.ph3.preheader, %113
  %.182 = phi %struct.rr_list* [ %115, %113 ], [ %.0722, %.lr.ph3.preheader ]
  %110 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.182, i32 0, i32 0
  %111 = load %struct.rr_list*, %struct.rr_list** %110, align 8
  %112 = icmp ne %struct.rr_list* %111, null
  br i1 %112, label %113, label %.critedge.loopexit

; <label>:113:                                    ; preds = %.lr.ph3
  %114 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.182, i32 0, i32 0
  %115 = load %struct.rr_list*, %struct.rr_list** %114, align 8
  call void @unroll_loop(i32 73)
  %116 = icmp ne %struct.rr_list* %115, null
  br i1 %116, label %.lr.ph3, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %.lr.ph3, %113
  %.29.ph = phi %struct.rr_list* [ %.182, %.lr.ph3 ], [ %115, %113 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %.preheader, %.loopexit, %106, %61
  %.29 = phi %struct.rr_list* [ %.0722, %106 ], [ %.0722, %61 ], [ %.0722, %.loopexit ], [ %.0722, %.preheader ], [ %.29.ph, %.critedge.loopexit ]
  %.15 = phi i8* [ null, %106 ], [ %59, %61 ], [ %.0423, %.loopexit ], [ null, %.preheader ], [ null, %.critedge.loopexit ]
  %117 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.0124, i32 0, i32 0
  %118 = load %struct.rr_list*, %struct.rr_list** %117, align 8
  %119 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %118, i32 0, i32 0
  %120 = load %struct.rr_list*, %struct.rr_list** %119, align 8
  %121 = icmp ne %struct.rr_list* %120, null
  br i1 %121, label %.lr.ph26, label %._crit_edge27.loopexit

._crit_edge27.loopexit:                           ; preds = %.critedge
  %.07.lcssa.ph = phi %struct.rr_list* [ %.29, %.critedge ]
  %.04.lcssa.ph = phi i8* [ %.15, %.critedge ]
  br label %._crit_edge27

._crit_edge27:                                    ; preds = %._crit_edge27.loopexit, %19
  %.07.lcssa = phi %struct.rr_list* [ %2, %19 ], [ %.07.lcssa.ph, %._crit_edge27.loopexit ]
  %.04.lcssa = phi i8* [ null, %19 ], [ %.04.lcssa.ph, %._crit_edge27.loopexit ]
  %122 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.07.lcssa, i32 0, i32 0
  store %struct.rr_list* %17, %struct.rr_list** %122, align 8
  %123 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %2, i32 0, i32 0
  %124 = load %struct.rr_list*, %struct.rr_list** %123, align 8
  %125 = icmp ne %struct.rr_list* %124, null
  br i1 %125, label %.lr.ph16.preheader, label %._crit_edge17

.lr.ph16.preheader:                               ; preds = %._crit_edge27
  br label %.lr.ph16

.lr.ph16:                                         ; preds = %.lr.ph16.preheader, %.lr.ph16
  %.114 = phi i32 [ %126, %.lr.ph16 ], [ 0, %.lr.ph16.preheader ]
  %.313 = phi %struct.rr_list* [ %128, %.lr.ph16 ], [ %124, %.lr.ph16.preheader ]
  call void @unroll_loop(i32 74)
  %126 = add nuw nsw i32 %.114, 1
  %127 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.313, i32 0, i32 0
  %128 = load %struct.rr_list*, %struct.rr_list** %127, align 8
  %129 = icmp ne %struct.rr_list* %128, null
  br i1 %129, label %.lr.ph16, label %._crit_edge17.loopexit

._crit_edge17.loopexit:                           ; preds = %.lr.ph16
  %.1.lcssa.ph = phi i32 [ %126, %.lr.ph16 ]
  br label %._crit_edge17

._crit_edge17:                                    ; preds = %._crit_edge17.loopexit, %._crit_edge27
  %.1.lcssa = phi i32 [ 0, %._crit_edge27 ], [ %.1.lcssa.ph, %._crit_edge17.loopexit ]
  %130 = sub nsw i32 %.1.lcssa, 2
  %131 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %2, i32 0, i32 0
  %132 = load %struct.rr_list*, %struct.rr_list** %131, align 8
  %133 = icmp ne %struct.rr_list* %132, null
  br i1 %133, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge17
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.212 = phi i32 [ %134, %.lr.ph ], [ %130, %.lr.ph.preheader ]
  %.411 = phi %struct.rr_list* [ %137, %.lr.ph ], [ %132, %.lr.ph.preheader ]
  call void @unroll_loop(i32 75)
  %134 = add nsw i32 %.212, -1
  %135 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.411, i32 0, i32 1
  store i32 %.212, i32* %135, align 8
  %136 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %.411, i32 0, i32 0
  %137 = load %struct.rr_list*, %struct.rr_list** %136, align 8
  %138 = icmp ne %struct.rr_list* %137, null
  br i1 %138, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge17
  %139 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %140 = bitcast %union.u_key* %139 to %struct.key_info**
  %141 = load %struct.key_info*, %struct.key_info** %140, align 8
  %142 = getelementptr inbounds %struct.key_info, %struct.key_info* %141, i32 0, i32 1
  %143 = load i16, i16* %142, align 2
  %144 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %145 = bitcast %union.u_key* %144 to %struct.key_info**
  %146 = load %struct.key_info*, %struct.key_info** %145, align 8
  %147 = getelementptr inbounds %struct.key_info, %struct.key_info* %146, i32 0, i32 2
  %148 = load i16, i16* %147, align 2
  %149 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %150 = bitcast %union.u_key* %149 to %struct.key_info**
  %151 = load %struct.key_info*, %struct.key_info** %150, align 8
  %152 = bitcast %struct.key_info* %151 to i8*
  %153 = getelementptr inbounds i8, i8* %152, i64 6
  %154 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %2, i32 0, i32 0
  %155 = load %struct.rr_list*, %struct.rr_list** %154, align 8
  %156 = call %struct.rr_set* @rrset_create(i16 zeroext 28, i16 zeroext %143, i16 zeroext %148, i8* %153, %struct.rr_list* %155)
  %157 = icmp ne %struct.rr_set* %156, null
  %. = select i1 %157, %struct.rr_set* null, %struct.rr_set* %156
  %.1 = select i1 %157, %struct.rr_set* %156, %struct.rr_set* null
  br label %158

; <label>:158:                                    ; preds = %._crit_edge, %16, %7, %1
  %.26 = phi i8* [ null, %1 ], [ null, %7 ], [ null, %16 ], [ %.04.lcssa, %._crit_edge ]
  %.03 = phi %struct.rr_set* [ null, %1 ], [ null, %7 ], [ null, %16 ], [ %., %._crit_edge ]
  %.02 = phi %struct.rr_set* [ null, %1 ], [ null, %7 ], [ null, %16 ], [ %.1, %._crit_edge ]
  %159 = icmp ne %struct.rr_set* %.03, null
  br i1 %159, label %160, label %161

; <label>:160:                                    ; preds = %158
  call void @rrset_free(%struct.rr_set* %.03)
  br label %161

; <label>:161:                                    ; preds = %160, %158
  %162 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %2, i32 0, i32 0
  %163 = load %struct.rr_list*, %struct.rr_list** %162, align 8
  %164 = icmp ne %struct.rr_list* %163, null
  br i1 %164, label %165, label %168

; <label>:165:                                    ; preds = %161
  %166 = getelementptr inbounds %struct.rr_list, %struct.rr_list* %2, i32 0, i32 0
  %167 = load %struct.rr_list*, %struct.rr_list** %166, align 8
  call void @rr_list_free(%struct.rr_list* %167)
  br label %168

; <label>:168:                                    ; preds = %165, %161
  %169 = icmp ne i8* %.26, null
  br i1 %169, label %170, label %171

; <label>:170:                                    ; preds = %168
  call void @free(i8* %.26) #9
  br label %171

; <label>:171:                                    ; preds = %170, %168
  %172 = getelementptr [26 x i8], [26 x i8]* @.str.22.479, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %172)
  ret %struct.rr_set* %.02
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @conv_scoped_conf(i8*, i8*, i32) #0 {
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %5 = load i32, i32* %4, align 8
  %6 = icmp sge i32 %5, 30
  br i1 %6, label %7, label %10

; <label>:7:                                      ; preds = %3
  %8 = getelementptr [39 x i8], [39 x i8]* @.str.8.483, i32 0, i32 0
  %9 = getelementptr [19 x i8], [19 x i8]* @.str.7.482, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %8, i8* %9, i32 30)
  br label %50

; <label>:10:                                     ; preds = %3
  %11 = srem i32 %2, 8
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %16

; <label>:13:                                     ; preds = %10
  %14 = getelementptr [35 x i8], [35 x i8]* @.str.9.484, i32 0, i32 0
  %15 = getelementptr [19 x i8], [19 x i8]* @.str.7.482, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %15)
  br label %50

; <label>:16:                                     ; preds = %10
  %17 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %18 = load i32, i32* %17, align 8
  %19 = sext i32 %18 to i64
  %20 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 26
  %21 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* %20, i64 0, i64 %19
  %22 = bitcast %struct.in6_addr* %21 to i8*
  %23 = call i32 @inet_pton(i32 10, i8* %0, i8* %22) #9
  %24 = icmp ne i32 %23, 1
  br i1 %24, label %25, label %27

; <label>:25:                                     ; preds = %16
  %26 = getelementptr [24 x i8], [24 x i8]* @.str.10.485, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %26, i8* %0)
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 27
  %32 = getelementptr inbounds [30 x %struct.in6_addr], [30 x %struct.in6_addr]* %31, i64 0, i64 %30
  %33 = bitcast %struct.in6_addr* %32 to i8*
  %34 = call i32 @inet_pton(i32 10, i8* %1, i8* %33) #9
  %35 = icmp ne i32 %34, 1
  br i1 %35, label %36, label %38

; <label>:36:                                     ; preds = %27
  %37 = getelementptr [22 x i8], [22 x i8]* @.str.11.486, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %37, i8* %1)
  br label %50

; <label>:38:                                     ; preds = %27
  %39 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %40 = load i32, i32* %39, align 8
  %41 = sext i32 %40 to i64
  %42 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 28
  %43 = getelementptr inbounds [30 x i32], [30 x i32]* %42, i64 0, i64 %41
  store i32 %2, i32* %43, align 4
  %44 = getelementptr [10 x i8], [10 x i8]* @.str.12.487, i32 0, i32 0
  %45 = getelementptr [19 x i8], [19 x i8]* @.str.7.482, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %44, i8* %45, i8* %0, i8* %1)
  %46 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, 1
  %49 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  store i32 %48, i32* %49, align 8
  br label %50

; <label>:50:                                     ; preds = %38, %36, %25, %13, %7
  %.0 = phi i32 [ -1, %7 ], [ -1, %13 ], [ -1, %25 ], [ -1, %36 ], [ 0, %38 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_scoped_ptr(%struct.generic_list*, i8*) #0 {
  %3 = alloca %union.u_key, align 8, !track !163
  %4 = getelementptr [24 x i8], [24 x i8]* @.str.13.490, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %4)
  %5 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %10, label %8

; <label>:8:                                      ; preds = %2
  %9 = getelementptr [29 x i8], [29 x i8]* @.str.14.491, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %9)
  br label %67

; <label>:10:                                     ; preds = %2
  %11 = call i32 @conv_is_scoped_ptr(i8* %1, i32 1)
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %67, label %13

; <label>:13:                                     ; preds = %10
  %14 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %16 = load %struct.generic_list*, %struct.generic_list** %15, align 8
  %17 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %16, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = icmp ne i8* %18, null
  br i1 %19, label %.lr.ph5.preheader, label %._crit_edge6

.lr.ph5.preheader:                                ; preds = %13
  %20 = bitcast %union.u_key* %3 to i8*
  %21 = bitcast %union.u_key* %3 to %struct.key_info**
  %22 = bitcast %union.u_key* %3 to i8**
  %23 = sext i32 %11 to i64
  %24 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 28), i64 0, i64 %23
  %25 = shl i64 %23, 4
  %26 = add i64 %25, 1612
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %26
  br label %.lr.ph5

.lr.ph5:                                          ; preds = %.lr.ph5.preheader, %._crit_edge
  %.013 = phi %struct.generic_list* [ %62, %._crit_edge ], [ %16, %.lr.ph5.preheader ]
  call void @unroll_loop(i32 76)
  %27 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.013, i32 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to %struct.rr_set*
  %30 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %29, i32 0, i32 2
  %31 = bitcast %union.u_key* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %31, i64 8, i1 false), !track !164
  %32 = load %struct.key_info*, %struct.key_info** %21, align 8
  %33 = getelementptr inbounds %struct.key_info, %struct.key_info* %32, i32 0, i32 0
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = icmp ne i32 %35, 12
  br i1 %36, label %._crit_edge, label %37

; <label>:37:                                     ; preds = %.lr.ph5
  %38 = load i8*, i8** %22, align 8
  %39 = load i32, i32* %24, align 4
  %40 = sdiv i32 %39, 8
  %41 = icmp slt i32 0, %40
  br i1 %41, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %37
  %scevgep2 = getelementptr i8, i8* %38, i64 69
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %lsr.iv = phi i8* [ %scevgep2, %.lr.ph.preheader ], [ %scevgep3, %.lr.ph ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 77)
  %42 = load i8*, i8** @hex, align 8
  %scevgep = getelementptr i8, i8* %uglygep, i64 %indvars.iv
  %43 = load i8, i8* %scevgep, align 1
  %44 = zext i8 %43 to i32
  %45 = ashr i32 %44, 4
  %46 = and i32 %45, 15
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %42, i64 %47
  %49 = load i8, i8* %48, align 1
  store i8 %49, i8* %lsr.iv, align 1
  %50 = load i8*, i8** @hex, align 8
  %scevgep1 = getelementptr i8, i8* %uglygep, i64 %indvars.iv
  %51 = load i8, i8* %scevgep1, align 1
  %52 = zext i8 %51 to i32
  %53 = and i32 %52, 15
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %50, i64 %54
  %56 = load i8, i8* %55, align 1
  %scevgep4 = getelementptr i8, i8* %lsr.iv, i64 -2
  store i8 %56, i8* %scevgep4, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %57 = load i32, i32* %24, align 4
  %58 = sdiv i32 %57, 8
  %59 = sext i32 %58 to i64
  %scevgep3 = getelementptr i8, i8* %lsr.iv, i64 -4
  %60 = icmp slt i64 %indvars.iv.next, %59
  br i1 %60, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %37, %.lr.ph5
  %61 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.013, i32 0, i32 0
  %62 = load %struct.generic_list*, %struct.generic_list** %61, align 8
  %63 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %62, i32 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = icmp ne i8* %64, null
  br i1 %65, label %.lr.ph5, label %._crit_edge6.loopexit

._crit_edge6.loopexit:                            ; preds = %._crit_edge
  br label %._crit_edge6

._crit_edge6:                                     ; preds = %._crit_edge6.loopexit, %13
  %66 = getelementptr [24 x i8], [24 x i8]* @.str.15.494, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %66)
  br label %67

; <label>:67:                                     ; preds = %10, %._crit_edge6, %8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @conv_is_scoped_ptr(i8*, i32) #0 {
  %3 = alloca %struct.in6_addr, align 4, !track !165
  %4 = alloca i32, align 4, !track !166
  %5 = alloca [3 x i8], align 1, !track !167
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %9, label %._crit_edge

; <label>:9:                                      ; preds = %2
  %10 = load i8, i8* %0, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %._crit_edge, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [4 x i8], [4 x i8]* @.str.16.495, i32 0, i32 0
  %15 = call i8* @strstr(i8* %0, i8* %14) #8, !track !168
  %16 = icmp ne i8* %15, null
  br i1 %16, label %21, label %17

; <label>:17:                                     ; preds = %13
  %18 = getelementptr [4 x i8], [4 x i8]* @.str.17.496, i32 0, i32 0
  %19 = call i8* @strstr(i8* %0, i8* %18) #8, !track !169
  %20 = icmp ne i8* %19, null
  br i1 %20, label %21, label %._crit_edge

; <label>:21:                                     ; preds = %17, %13
  %22 = getelementptr [4 x i8], [4 x i8]* @.str.18.497, i32 0, i32 0
  %23 = call i8* @strstr(i8* %0, i8* %22) #8, !track !170
  %24 = icmp ne i8* %23, null
  br i1 %24, label %28, label %25

; <label>:25:                                     ; preds = %21
  %26 = getelementptr [4 x i8], [4 x i8]* @.str.19.498, i32 0, i32 0
  %27 = call i8* @strstr(i8* %0, i8* %26) #8, !track !171
  br label %28

; <label>:28:                                     ; preds = %25, %21
  %.03 = phi i8* [ %23, %21 ], [ %27, %25 ]
  %29 = icmp ne i8* %.03, null
  br i1 %29, label %30, label %._crit_edge

; <label>:30:                                     ; preds = %28
  %31 = bitcast %struct.in6_addr* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 16, i1 false)
  %32 = getelementptr inbounds i8, i8* %.03, i32 -1
  %33 = ptrtoint i8* %32 to i64
  %34 = ptrtoint i8* %0 to i64
  %35 = sub i64 %33, %34
  %36 = icmp ne i64 %35, 64
  br i1 %36, label %._crit_edge, label %37

; <label>:37:                                     ; preds = %30
  %38 = getelementptr inbounds i8, i8* %32, i32 -1
  %39 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %3, i32 0, i32 0
  %40 = bitcast %union.anon.1* %39 to [16 x i8]*
  %41 = getelementptr inbounds [16 x i8], [16 x i8]* %40, i64 0, i64 0
  %42 = getelementptr inbounds i8, i8* %38, i64 -3
  %43 = icmp uge i8* %42, %0
  br i1 %43, label %.lr.ph10.preheader, label %._crit_edge11

.lr.ph10.preheader:                               ; preds = %37
  %44 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 0, i64 0
  %45 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 0, i64 1
  %46 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i64 0, i64 2
  %47 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0
  br label %.lr.ph10

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %57
  %.028 = phi i8* [ %62, %57 ], [ %41, %.lr.ph10.preheader ]
  %.047 = phi i8* [ %scevgep11, %57 ], [ %38, %.lr.ph10.preheader ]
  call void @unroll_loop(i32 78)
  %48 = load i8, i8* %.047, align 1
  store i8 %48, i8* %44, align 1
  %scevgep7 = getelementptr i8, i8* %.047, i64 -1
  %49 = load i8, i8* %scevgep7, align 1
  %50 = zext i8 %49 to i32
  %51 = icmp ne i32 %50, 1
  br i1 %51, label %._crit_edge.loopexit1, label %52

; <label>:52:                                     ; preds = %.lr.ph10
  %scevgep8 = getelementptr i8, i8* %.047, i64 -2
  %53 = load i8, i8* %scevgep8, align 1
  store i8 %53, i8* %45, align 1
  %scevgep9 = getelementptr i8, i8* %.047, i64 -3
  %54 = load i8, i8* %scevgep9, align 1
  %55 = zext i8 %54 to i32
  %56 = icmp ne i32 %55, 1
  br i1 %56, label %._crit_edge.loopexit1, label %57

; <label>:57:                                     ; preds = %52
  store i8 0, i8* %46, align 1
  %58 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20.499, i64 0, i64 0), i32* %4) #9
  %59 = load i32, i32* %4, align 4
  %60 = and i32 %59, 255
  %61 = trunc i32 %60 to i8
  store i8 %61, i8* %.028, align 1
  %62 = getelementptr inbounds i8, i8* %.028, i32 1
  %scevgep10 = getelementptr i8, i8* %.047, i64 -7
  %63 = icmp uge i8* %scevgep10, %0
  %scevgep11 = getelementptr i8, i8* %scevgep10, i64 3
  br i1 %63, label %.lr.ph10, label %._crit_edge11.loopexit

._crit_edge11.loopexit:                           ; preds = %57
  br label %._crit_edge11

._crit_edge11:                                    ; preds = %._crit_edge11.loopexit, %37
  %64 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %65 = load i32, i32* %64, align 8
  %66 = icmp slt i32 0, %65
  br i1 %66, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge11
  %67 = bitcast %struct.in6_addr* %3 to i8*
  %68 = icmp ne i32 %1, 0
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %80
  %lsr.iv = phi %struct.ToT* [ bitcast (%struct.in6_addr* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 27, i64 0) to %struct.ToT*), %.lr.ph.preheader ], [ %83, %80 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %80 ], [ 0, %.lr.ph.preheader ]
  %lsr.iv3 = bitcast %struct.ToT* %lsr.iv to %struct.in6_addr*
  call void @unroll_loop(i32 79)
  %scevgep6 = getelementptr %struct.in6_addr, %struct.in6_addr* %lsr.iv3, i64 -30
  %69 = select i1 %68, %struct.in6_addr* %lsr.iv3, %struct.in6_addr* %scevgep6
  %70 = bitcast %struct.in6_addr* %69 to i8*
  %71 = shl i64 %indvars.iv, 2
  %72 = inttoptr i64 %71 to i32*
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %71
  %uglygep4 = bitcast i8* %uglygep to i32*
  %scevgep5 = getelementptr i32, i32* %uglygep4, i64 523
  %73 = load i32, i32* %scevgep5, align 4
  %74 = sdiv i32 %73, 8
  %75 = sext i32 %74 to i64
  %76 = call i32 @memcmp(i8* %67, i8* %70, i64 %75) #8
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %80, label %78

; <label>:78:                                     ; preds = %.lr.ph
  %.01.lcssa5.wide = phi i64 [ %indvars.iv, %.lr.ph ]
  %79 = trunc i64 %.01.lcssa5.wide to i32
  br label %._crit_edge

; <label>:80:                                     ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %81 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %82 = sext i32 %81 to i64
  %scevgep = getelementptr %struct.ToT, %struct.ToT* %lsr.iv, i64 0, i32 2
  %83 = bitcast i8** %scevgep to %struct.ToT*
  %84 = icmp slt i64 %indvars.iv.next, %82
  br i1 %84, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %80
  %.0.ph = phi i32 [ -1, %80 ]
  br label %._crit_edge

._crit_edge.loopexit1:                            ; preds = %.lr.ph10, %52
  %.0.ph2 = phi i32 [ -1, %.lr.ph10 ], [ -1, %52 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit1, %._crit_edge.loopexit, %._crit_edge11, %30, %28, %17, %2, %9, %78
  %.0 = phi i32 [ %79, %78 ], [ -1, %9 ], [ -1, %2 ], [ -1, %17 ], [ -1, %28 ], [ -1, %30 ], [ -1, %._crit_edge11 ], [ %.0.ph, %._crit_edge.loopexit ], [ %.0.ph2, %._crit_edge.loopexit1 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_scoped_ptr_rq(i8*) #0 {
  %2 = call i32 @conv_is_scoped_ptr(i8* %0, i32 1)
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %.loopexit, label %4

; <label>:4:                                      ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 28
  %7 = getelementptr inbounds [30 x i32], [30 x i32]* %6, i64 0, i64 %5
  %8 = load i32, i32* %7, align 4
  %9 = sdiv i32 %8, 8
  %10 = icmp slt i32 0, %9
  br i1 %10, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %4
  %11 = shl i64 %5, 4
  %12 = add i64 %11, 1132
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %12
  %scevgep2 = getelementptr i8, i8* %0, i64 63
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %lsr.iv = phi i8* [ %scevgep2, %.lr.ph.preheader ], [ %scevgep3, %.lr.ph ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 80)
  %13 = load i8*, i8** @hex, align 8
  %scevgep = getelementptr i8, i8* %uglygep, i64 %indvars.iv
  %14 = load i8, i8* %scevgep, align 1
  %15 = zext i8 %14 to i32
  %16 = ashr i32 %15, 4
  %17 = and i32 %16, 15
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %13, i64 %18
  %20 = load i8, i8* %19, align 1
  store i8 %20, i8* %lsr.iv, align 1
  %21 = load i8*, i8** @hex, align 8
  %scevgep1 = getelementptr i8, i8* %uglygep, i64 %indvars.iv
  %22 = load i8, i8* %scevgep1, align 1
  %23 = zext i8 %22 to i32
  %24 = and i32 %23, 15
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  %27 = load i8, i8* %26, align 1
  %scevgep4 = getelementptr i8, i8* %lsr.iv, i64 -2
  store i8 %27, i8* %scevgep4, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %28 = load i32, i32* %7, align 4
  %29 = sdiv i32 %28, 8
  %30 = sext i32 %29 to i64
  %scevgep3 = getelementptr i8, i8* %lsr.iv, i64 -4
  %31 = icmp slt i64 %indvars.iv.next, %30
  br i1 %31, label %.lr.ph, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %4, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rr_set* @conv_stf_owner_rrset(%struct.rr_set*) #6 {
  %2 = alloca [256 x i8], align 16, !track !172
  %3 = alloca [256 x i8], align 16, !track !173
  %4 = alloca i32, align 4
  %5 = alloca [4 x i8], align 1
  %6 = getelementptr [10 x i8], [10 x i8]* @.str.1.503, i32 0, i32 0
  %7 = getelementptr [23 x i8], [23 x i8]* @.str.502, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %6, i8* %7)
  %8 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %9 = bitcast %union.u_key* %8 to %struct.key_info**
  %10 = load %struct.key_info*, %struct.key_info** %9, align 8
  %11 = getelementptr inbounds %struct.key_info, %struct.key_info* %10, i32 0, i32 0
  %12 = load i16, i16* %11, align 2
  %13 = zext i16 %12 to i32
  %14 = icmp ne i32 %13, 6
  br i1 %14, label %130, label %15

; <label>:15:                                     ; preds = %1
  %16 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %17 = bitcast %union.u_key* %16 to %struct.key_info**
  %18 = load %struct.key_info*, %struct.key_info** %17, align 8
  %19 = getelementptr inbounds %struct.key_info, %struct.key_info* %18, i32 0, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = icmp ne i32 %21, 2
  br i1 %22, label %130, label %23

; <label>:23:                                     ; preds = %15
  %24 = call %struct.rr_list* @rr_list_of_rrset(%struct.rr_set* %0)
  %25 = icmp ne %struct.rr_list* %24, null
  br i1 %25, label %26, label %130

; <label>:26:                                     ; preds = %23
  %27 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %28 = bitcast %union.u_key* %27 to %struct.key_info**
  %29 = load %struct.key_info*, %struct.key_info** %28, align 8
  %30 = bitcast %struct.key_info* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 6
  %32 = getelementptr [14 x i8], [14 x i8]* @.str.2.504, i32 0, i32 0
  %33 = call i8* @strstr(i8* %31, i8* %32) #8
  %34 = icmp ne i8* %33, null
  br i1 %34, label %38, label %35

; <label>:35:                                     ; preds = %26
  %36 = getelementptr [14 x i8], [14 x i8]* @.str.3.505, i32 0, i32 0
  %37 = call i8* @strstr(i8* %31, i8* %36) #8
  br label %38

; <label>:38:                                     ; preds = %35, %26
  %.03 = phi i8* [ %33, %26 ], [ %37, %35 ]
  %39 = icmp ne i8* %.03, null
  br i1 %39, label %59, label %40

; <label>:40:                                     ; preds = %38
  %41 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %42 = bitcast %union.u_key* %41 to %struct.key_info**
  %43 = load %struct.key_info*, %struct.key_info** %42, align 8
  %44 = getelementptr inbounds %struct.key_info, %struct.key_info* %43, i32 0, i32 2
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %48 = sext i32 %46 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %47, i8* align 1 %31, i64 %48, i1 false), !track !174
  %49 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %50 = load i32, i32* %49, align 4
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %52, label %113

; <label>:52:                                     ; preds = %40
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %54 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %55 = call i8* @dname_decompress(i8* %53, i32 256, i8* %54, i8* null, i8* null, i32* null)
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %57 = getelementptr [25 x i8], [25 x i8]* @.str.4.506, i32 0, i32 0
  %58 = getelementptr [23 x i8], [23 x i8]* @.str.502, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %57, i8* %58, i8* %56)
  br label %113

; <label>:59:                                     ; preds = %38
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %61 = icmp ult i8* %31, %.03
  br i1 %61, label %.lr.ph10.preheader, label %._crit_edge11

.lr.ph10.preheader:                               ; preds = %59
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i32 0, i32 0
  %63 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i32 0, i32 0
  %64 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 1
  %65 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 0
  br label %.lr.ph10

.lr.ph10:                                         ; preds = %.lr.ph10.preheader, %75
  %.028 = phi i8* [ %92, %75 ], [ %31, %.lr.ph10.preheader ]
  %.047 = phi i8* [ %87, %75 ], [ %60, %.lr.ph10.preheader ]
  call void @unroll_loop(i32 81)
  %66 = load i8, i8* %.028, align 1
  %67 = zext i8 %66 to i32
  %68 = icmp slt i32 0, %67
  br i1 %68, label %.lr.ph.preheader, label %75

.lr.ph.preheader:                                 ; preds = %.lr.ph10
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  %scevgep = getelementptr i8, i8* %.028, i64 %indvars.iv
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 1
  %69 = load i8, i8* %scevgep1, align 1
  %scevgep2 = getelementptr [4 x i8], [4 x i8]* %5, i64 0, i64 %indvars.iv
  store i8 %69, i8* %scevgep2, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %70 = load i8, i8* %.028, align 1
  %71 = zext i8 %70 to i32
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %indvars.iv.next, %72
  br i1 %73, label %.lr.ph, label %._crit_edge

._crit_edge:                                      ; preds = %.lr.ph
  %split.wide = phi i64 [ %indvars.iv.next, %.lr.ph ]
  %74 = trunc i64 %split.wide to i32
  br label %75

; <label>:75:                                     ; preds = %._crit_edge, %.lr.ph10
  %.01.lcssa = phi i32 [ %74, %._crit_edge ], [ 0, %.lr.ph10 ]
  %76 = sext i32 %.01.lcssa to i64
  %77 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 %76
  store i8 0, i8* %77, align 1
  %78 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.507, i64 0, i64 0), i32* %4) #9
  %79 = load i32, i32* %4, align 4
  %80 = and i32 %79, 255
  %81 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %63, i64 4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.508, i64 0, i64 0), i32 %80) #9
  %82 = getelementptr inbounds i8, i8* %.047, i64 2
  store i8 1, i8* %82, align 1
  store i8 1, i8* %.047, align 1
  %83 = load i8, i8* %64, align 1
  %84 = getelementptr inbounds i8, i8* %.047, i64 1
  store i8 %83, i8* %84, align 1
  %85 = load i8, i8* %65, align 1
  %86 = getelementptr inbounds i8, i8* %.047, i64 3
  store i8 %85, i8* %86, align 1
  %87 = getelementptr inbounds i8, i8* %.047, i64 4
  %88 = load i8, i8* %.028, align 1
  %89 = zext i8 %88 to i32
  %90 = add nsw i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %.028, i64 %91
  %93 = icmp ult i8* %92, %.03
  br i1 %93, label %.lr.ph10, label %._crit_edge11.loopexit

._crit_edge11.loopexit:                           ; preds = %75
  %.04.lcssa.ph = phi i8* [ %87, %75 ]
  br label %._crit_edge11

._crit_edge11:                                    ; preds = %._crit_edge11.loopexit, %59
  %.04.lcssa = phi i8* [ %60, %59 ], [ %.04.lcssa.ph, %._crit_edge11.loopexit ]
  %94 = getelementptr [3 x i8], [3 x i8]* @.str.7.509, i32 0, i32 0
  %95 = getelementptr [17 x i8], [17 x i8]* @.str.8.510, i32 0, i32 0
  %96 = call i32 (i8*, i8*, ...) @sprintf(i8* %.04.lcssa, i8* %94, i8* %95) #9
  %97 = getelementptr inbounds i8, i8* %.04.lcssa, i64 17
  %98 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %99 = ptrtoint i8* %97 to i64
  %100 = ptrtoint i8* %98 to i64
  %101 = sub i64 %99, %100
  %102 = trunc i64 %101 to i32
  %103 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %104 = load i32, i32* %103, align 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %106, label %113

; <label>:106:                                    ; preds = %._crit_edge11
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %108 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %109 = call i8* @dname_decompress(i8* %107, i32 256, i8* %108, i8* null, i8* null, i32* null)
  %110 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %111 = getelementptr [21 x i8], [21 x i8]* @.str.9.511, i32 0, i32 0
  %112 = getelementptr [23 x i8], [23 x i8]* @.str.502, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %111, i8* %112, i8* %110)
  br label %113

; <label>:113:                                    ; preds = %._crit_edge11, %106, %40, %52
  %.05 = phi i32 [ %46, %52 ], [ %46, %40 ], [ %102, %106 ], [ %102, %._crit_edge11 ]
  %114 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %115 = bitcast %union.u_key* %114 to %struct.key_info**
  %116 = load %struct.key_info*, %struct.key_info** %115, align 8
  %117 = getelementptr inbounds %struct.key_info, %struct.key_info* %116, i32 0, i32 0
  %118 = load i16, i16* %117, align 2
  %119 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %0, i32 0, i32 2
  %120 = bitcast %union.u_key* %119 to %struct.key_info**
  %121 = load %struct.key_info*, %struct.key_info** %120, align 8
  %122 = getelementptr inbounds %struct.key_info, %struct.key_info* %121, i32 0, i32 1
  %123 = load i16, i16* %122, align 2
  %124 = trunc i32 %.05 to i16
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %126 = call %struct.rr_set* @rrset_create(i16 zeroext %118, i16 zeroext %123, i16 zeroext %124, i8* %125, %struct.rr_list* %24)
  call void @rr_list_free(%struct.rr_list* %24)
  %127 = bitcast %struct.rr_set* %126 to i8*
  %128 = getelementptr [15 x i8], [15 x i8]* @.str.10.512, i32 0, i32 0
  %129 = getelementptr [23 x i8], [23 x i8]* @.str.502, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %128, i8* %129, i8* %127)
  br label %130

; <label>:130:                                    ; preds = %23, %1, %15, %113
  %.0 = phi %struct.rr_set* [ %126, %113 ], [ null, %15 ], [ null, %1 ], [ null, %23 ]
  ret %struct.rr_set* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @conv_stf_ns_list(%struct.generic_list*) #0 {
  %2 = getelementptr [10 x i8], [10 x i8]* @.str.1.503, i32 0, i32 0
  %3 = getelementptr [19 x i8], [19 x i8]* @.str.11.513, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %2, i8* %3)
  %4 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 2
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 0
  %6 = load %struct.generic_list*, %struct.generic_list** %5, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %6, i32 0, i32 2
  %8 = load i8*, i8** %7, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %43
  %.03 = phi %struct.generic_list* [ %45, %43 ], [ %6, %.lr.ph.preheader ]
  %.012 = phi %struct.rr_set* [ %.3, %43 ], [ null, %.lr.ph.preheader ]
  call void @unroll_loop(i32 82)
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.03, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i8* %11 to %struct.rr_set*
  %13 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %12, i32 0, i32 2
  %14 = bitcast %union.u_key* %13 to %struct.key_info**
  %15 = load %struct.key_info*, %struct.key_info** %14, align 8
  %16 = getelementptr inbounds %struct.key_info, %struct.key_info* %15, i32 0, i32 0
  %17 = load i16, i16* %16, align 2
  %18 = call i8* @string_rtype(i16 zeroext %17)
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.514, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11.513, i64 0, i64 0), i8* %18)
  %19 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %12, i32 0, i32 2
  %20 = bitcast %union.u_key* %19 to %struct.key_info**
  %21 = load %struct.key_info*, %struct.key_info** %20, align 8
  %22 = getelementptr inbounds %struct.key_info, %struct.key_info* %21, i32 0, i32 0
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = icmp eq i32 %24, 6
  br i1 %25, label %26, label %28

; <label>:26:                                     ; preds = %.lr.ph
  %27 = call %struct.rr_set* @conv_stf_owner_rrset(%struct.rr_set* %12)
  br label %28

; <label>:28:                                     ; preds = %26, %.lr.ph
  %.1 = phi %struct.rr_set* [ %27, %26 ], [ %.012, %.lr.ph ]
  %29 = getelementptr inbounds %struct.rr_set, %struct.rr_set* %12, i32 0, i32 2
  %30 = bitcast %union.u_key* %29 to %struct.key_info**
  %31 = load %struct.key_info*, %struct.key_info** %30, align 8
  %32 = getelementptr inbounds %struct.key_info, %struct.key_info* %31, i32 0, i32 0
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %36, label %38

; <label>:36:                                     ; preds = %28
  %37 = call %struct.rr_set* @conv_stf_owner_rrset(%struct.rr_set* %12)
  br label %38

; <label>:38:                                     ; preds = %36, %28
  %.2 = phi %struct.rr_set* [ %37, %36 ], [ %.1, %28 ]
  %39 = icmp ne %struct.rr_set* %.2, null
  br i1 %39, label %40, label %43

; <label>:40:                                     ; preds = %38
  call void @rrset_free(%struct.rr_set* %12)
  %41 = bitcast %struct.rr_set* %.2 to i8*
  %42 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.03, i32 0, i32 2
  store i8* %41, i8** %42, align 8
  br label %43

; <label>:43:                                     ; preds = %38, %40
  %.3 = phi %struct.rr_set* [ null, %40 ], [ %.2, %38 ]
  %44 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.03, i32 0, i32 0
  %45 = load %struct.generic_list*, %struct.generic_list** %44, align 8
  %46 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %45, i32 0, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = icmp ne i8* %47, null
  br i1 %48, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %43
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @conv_stf_ptr(i8*) #0 {
  %2 = alloca [256 x i8], align 16
  %3 = alloca [256 x i8], align 16, !track !175
  %4 = getelementptr [10 x i8], [10 x i8]* @.str.1.503, i32 0, i32 0
  %5 = getelementptr [15 x i8], [15 x i8]* @.str.13.515, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %4, i8* %5)
  %6 = call i64 @strlen(i8* %0) #8
  %7 = icmp ult i64 %6, 8
  br i1 %7, label %.loopexit, label %8

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %10 = call i64 @strlen(i8* %0) #8
  %11 = add i64 %10, 1
  %12 = trunc i64 %11 to i32
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %0, i64 %13
  %15 = getelementptr inbounds i8, i8* %14, i64 -24
  %16 = getelementptr inbounds i8, i8* %15, i64 -8
  %17 = icmp ult i8* %16, %0
  %18 = getelementptr inbounds i8, i8* %0, i64 1
  %spec.select = select i1 %17, i8* %18, i8* %16
  %19 = sext i32 %12 to i64
  %20 = getelementptr inbounds i8, i8* %0, i64 %19
  %21 = getelementptr inbounds i8, i8* %20, i64 -8
  %22 = getelementptr inbounds i8, i8* %21, i64 -8
  %23 = icmp ult i8* %spec.select, %22
  br i1 %23, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %8
  %24 = call i16** @__ctype_b_loc() #10
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %120
  %.028 = phi i8* [ %130, %120 ], [ %9, %.lr.ph.preheader ]
  %.147 = phi i8* [ %121, %120 ], [ %spec.select, %.lr.ph.preheader ]
  %25 = load i16*, i16** %24, align 8
  %26 = load i8, i8* %.147, align 1
  %27 = zext i8 %26 to i32
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i16, i16* %25, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = and i32 %31, 2048
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %38

; <label>:34:                                     ; preds = %.lr.ph
  %35 = load i8, i8* %.147, align 1
  %36 = zext i8 %35 to i32
  %37 = sub nsw i32 %36, 48
  br label %64

; <label>:38:                                     ; preds = %.lr.ph
  %39 = call i16** @__ctype_b_loc() #10
  %40 = load i16*, i16** %39, align 8
  %41 = load i8, i8* %.147, align 1
  %42 = zext i8 %41 to i32
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i16, i16* %40, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 1024
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %64

; <label>:49:                                     ; preds = %38
  %50 = load i8, i8* %.147, align 1
  %51 = zext i8 %50 to i32
  %52 = call i16** @__ctype_b_loc() #10
  %53 = load i16*, i16** %52, align 8
  %54 = load i8, i8* %.147, align 1
  %55 = zext i8 %54 to i32
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i16, i16* %53, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  %60 = and i32 %59, 256
  %61 = icmp ne i32 %60, 0
  %62 = select i1 %61, i32 55, i32 87
  %63 = sub nsw i32 %51, %62
  br label %64

; <label>:64:                                     ; preds = %38, %49, %34
  %.1 = phi i32 [ %37, %34 ], [ %63, %49 ], [ 0, %38 ]
  %65 = getelementptr inbounds i8, i8* %.147, i32 1
  %scevgep2 = getelementptr i8, i8* %.147, i64 1
  %66 = load i8, i8* %scevgep2, align 1
  %67 = zext i8 %66 to i32
  %68 = icmp ne i32 %67, 1
  br i1 %68, label %.loopexit.loopexit, label %69

; <label>:69:                                     ; preds = %64
  %70 = getelementptr inbounds i8, i8* %65, i32 1
  %scevgep = getelementptr i8, i8* %.147, i64 2
  %71 = call i16** @__ctype_b_loc() #10
  %72 = load i16*, i16** %71, align 8
  %73 = load i8, i8* %scevgep, align 1
  %74 = zext i8 %73 to i32
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %72, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = zext i16 %77 to i32
  %79 = and i32 %78, 2048
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %87

; <label>:81:                                     ; preds = %69
  %82 = load i8, i8* %scevgep, align 1
  %83 = zext i8 %82 to i32
  %84 = sub nsw i32 %83, 48
  %85 = mul nsw i32 16, %84
  %86 = add nsw i32 %.1, %85
  br label %115

; <label>:87:                                     ; preds = %69
  %88 = call i16** @__ctype_b_loc() #10
  %89 = load i16*, i16** %88, align 8
  %90 = load i8, i8* %scevgep, align 1
  %91 = zext i8 %90 to i32
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %89, i64 %92
  %94 = load i16, i16* %93, align 2
  %95 = zext i16 %94 to i32
  %96 = and i32 %95, 1024
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %98, label %115

; <label>:98:                                     ; preds = %87
  %99 = load i8, i8* %scevgep, align 1
  %100 = zext i8 %99 to i32
  %101 = call i16** @__ctype_b_loc() #10
  %102 = load i16*, i16** %101, align 8
  %103 = load i8, i8* %scevgep, align 1
  %104 = zext i8 %103 to i32
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i16, i16* %102, i64 %105
  %107 = load i16, i16* %106, align 2
  %108 = zext i16 %107 to i32
  %109 = and i32 %108, 256
  %110 = icmp ne i32 %109, 0
  %111 = select i1 %110, i32 55, i32 87
  %112 = sub nsw i32 %100, %111
  %113 = mul nsw i32 16, %112
  %114 = add nsw i32 %.1, %113
  br label %115

; <label>:115:                                    ; preds = %87, %98, %81
  %.3 = phi i32 [ %86, %81 ], [ %114, %98 ], [ %.1, %87 ]
  %116 = getelementptr inbounds i8, i8* %70, i32 1
  %scevgep1 = getelementptr i8, i8* %.147, i64 3
  %117 = load i8, i8* %scevgep1, align 1
  %118 = zext i8 %117 to i32
  %119 = icmp ne i32 %118, 1
  br i1 %119, label %.loopexit.loopexit, label %120

; <label>:120:                                    ; preds = %115
  %121 = getelementptr inbounds i8, i8* %116, i32 1
  %122 = getelementptr inbounds i8, i8* %.028, i64 1
  %123 = and i32 %.3, 255
  %124 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %122, i64 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.507, i64 0, i64 0), i32 %123) #9
  %125 = trunc i32 %124 to i8
  store i8 %125, i8* %.028, align 1
  %126 = load i8, i8* %.028, align 1
  %127 = zext i8 %126 to i32
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %.028, i64 %128
  %130 = getelementptr inbounds i8, i8* %129, i64 1
  %131 = icmp ult i8* %121, %22
  br i1 %131, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %120
  %.02.lcssa.ph = phi i8* [ %130, %120 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %8
  %.02.lcssa = phi i8* [ %9, %8 ], [ %.02.lcssa.ph, %._crit_edge.loopexit ]
  %132 = getelementptr [3 x i8], [3 x i8]* @.str.7.509, i32 0, i32 0
  %133 = getelementptr [14 x i8], [14 x i8]* @.str.3.505, i32 0, i32 0
  %134 = call i32 (i8*, i8*, ...) @sprintf(i8* %.02.lcssa, i8* %132, i8* %133) #9
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i32 0, i32 0
  %136 = call i64 @strlcpy(i8* %0, i8* %135, i64 256)
  %137 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %138 = load i32, i32* %137, align 4
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %140, label %.loopexit

; <label>:140:                                    ; preds = %._crit_edge
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %142 = call i8* @dname_decompress(i8* %141, i32 256, i8* %0, i8* null, i8* null, i32* null)
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i32 0, i32 0
  %144 = getelementptr [22 x i8], [22 x i8]* @.str.14.516, i32 0, i32 0
  %145 = getelementptr [15 x i8], [15 x i8]* @.str.13.515, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %144, i8* %145, i8* %143)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %64, %115
  %.0.ph = phi i32 [ -1, %64 ], [ -1, %115 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge, %140, %1
  %.0 = phi i32 [ -1, %1 ], [ 0, %140 ], [ 0, %._crit_edge ], [ %.0.ph, %.loopexit.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @conv_stf_is_stf_ptr(i8*) #0 {
  %2 = getelementptr [4 x i8], [4 x i8]* @.str.15.517, i32 0, i32 0
  %3 = call i8* @strstr(i8* %0, i8* %2) #8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %9, label %5

; <label>:5:                                      ; preds = %1
  %6 = getelementptr [4 x i8], [4 x i8]* @.str.16.518, i32 0, i32 0
  %7 = call i8* @strstr(i8* %0, i8* %6) #8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %9, label %59

; <label>:9:                                      ; preds = %5, %1
  %10 = getelementptr [4 x i8], [4 x i8]* @.str.17.519, i32 0, i32 0
  %11 = call i8* @strstr(i8* %0, i8* %10) #8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %16, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [4 x i8], [4 x i8]* @.str.18.520, i32 0, i32 0
  %15 = call i8* @strstr(i8* %0, i8* %14) #8
  br label %16

; <label>:16:                                     ; preds = %13, %9
  %.01 = phi i8* [ %11, %9 ], [ %15, %13 ]
  %17 = icmp ne i8* %.01, null
  br i1 %17, label %18, label %59

; <label>:18:                                     ; preds = %16
  %19 = getelementptr inbounds i8, i8* %.01, i64 -2
  %20 = getelementptr inbounds i8, i8* %19, i32 -1
  %21 = load i8, i8* %19, align 1
  %22 = zext i8 %21 to i32
  %23 = icmp ne i32 %22, 50
  br i1 %23, label %59, label %24

; <label>:24:                                     ; preds = %18
  %25 = getelementptr inbounds i8, i8* %20, i32 -1
  %26 = load i8, i8* %20, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp ne i32 %27, 1
  br i1 %28, label %59, label %29

; <label>:29:                                     ; preds = %24
  %30 = getelementptr inbounds i8, i8* %25, i32 -1
  %31 = load i8, i8* %25, align 1
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %32, 48
  br i1 %33, label %59, label %34

; <label>:34:                                     ; preds = %29
  %35 = getelementptr inbounds i8, i8* %30, i32 -1
  %36 = load i8, i8* %30, align 1
  %37 = zext i8 %36 to i32
  %38 = icmp ne i32 %37, 1
  br i1 %38, label %59, label %39

; <label>:39:                                     ; preds = %34
  %40 = getelementptr inbounds i8, i8* %35, i32 -1
  %41 = load i8, i8* %35, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp ne i32 %42, 48
  br i1 %43, label %59, label %44

; <label>:44:                                     ; preds = %39
  %45 = getelementptr inbounds i8, i8* %40, i32 -1
  %46 = load i8, i8* %40, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp ne i32 %47, 1
  br i1 %48, label %59, label %49

; <label>:49:                                     ; preds = %44
  %50 = getelementptr inbounds i8, i8* %45, i32 -1
  %51 = load i8, i8* %45, align 1
  %52 = zext i8 %51 to i32
  %53 = icmp ne i32 %52, 50
  br i1 %53, label %59, label %54

; <label>:54:                                     ; preds = %49
  %55 = getelementptr inbounds i8, i8* %50, i32 -1
  %56 = load i8, i8* %50, align 1
  %57 = zext i8 %56 to i32
  %58 = icmp ne i32 %57, 1
  %. = select i1 %58, i32 0, i32 1
  br label %59

; <label>:59:                                     ; preds = %54, %49, %44, %39, %34, %29, %24, %18, %16, %5
  %.0 = phi i32 [ 0, %5 ], [ 0, %16 ], [ 0, %18 ], [ 0, %24 ], [ 0, %29 ], [ 0, %34 ], [ 0, %39 ], [ 0, %44 ], [ 0, %49 ], [ %., %54 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @strlcpy(i8*, i8*, i64) #0 {
  %4 = icmp ne i64 %2, 0
  br i1 %4, label %5, label %.loopexit

; <label>:5:                                      ; preds = %3
  %6 = add i64 %2, -1
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %5
  %scevgep = getelementptr i8, i8* %0, i64 1
  %scevgep3 = getelementptr i8, i8* %1, i64 1
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %11
  %lsr.iv4 = phi i8* [ %scevgep3, %.preheader.preheader ], [ %scevgep5, %11 ]
  %lsr.iv = phi i8* [ %scevgep, %.preheader.preheader ], [ %scevgep1, %11 ]
  %.0 = phi i64 [ %12, %11 ], [ %6, %.preheader.preheader ]
  %scevgep2 = getelementptr i8, i8* %lsr.iv, i64 -1
  %scevgep6 = getelementptr i8, i8* %lsr.iv4, i64 -1
  call void @unroll_loop(i32 83)
  %8 = load i8, i8* %scevgep6, align 1
  store i8 %8, i8* %scevgep2, align 1
  %9 = sext i8 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %.preheader..loopexit.loopexit_crit_edge, label %11

; <label>:11:                                     ; preds = %.preheader
  %12 = add i64 %.0, -1
  %scevgep1 = getelementptr i8, i8* %lsr.iv, i64 1
  %scevgep5 = getelementptr i8, i8* %lsr.iv4, i64 1
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %.preheader, label %.loopexit.loopexitsplit

.loopexit.loopexitsplit:                          ; preds = %11
  br label %.loopexit.loopexit

.preheader..loopexit.loopexit_crit_edge:          ; preds = %.preheader
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.loopexit.loopexitsplit, %.preheader..loopexit.loopexit_crit_edge
  %.15.ph = phi i8* [ %lsr.iv, %.preheader..loopexit.loopexit_crit_edge ], [ %lsr.iv, %.loopexit.loopexitsplit ]
  %.12.ph = phi i8* [ %lsr.iv4, %.preheader..loopexit.loopexit_crit_edge ], [ %lsr.iv4, %.loopexit.loopexitsplit ]
  %.2.ph = phi i64 [ %.0, %.preheader..loopexit.loopexit_crit_edge ], [ %12, %.loopexit.loopexitsplit ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5, %3
  %.15 = phi i8* [ %0, %5 ], [ %0, %3 ], [ %.15.ph, %.loopexit.loopexit ]
  %.12 = phi i8* [ %1, %5 ], [ %1, %3 ], [ %.12.ph, %.loopexit.loopexit ]
  %.2 = phi i64 [ %6, %5 ], [ %2, %3 ], [ %.2.ph, %.loopexit.loopexit ]
  %14 = icmp eq i64 %.2, 0
  br i1 %14, label %15, label %.loopexit1

; <label>:15:                                     ; preds = %.loopexit
  %16 = icmp ne i64 %2, 0
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %15
  store i8 0, i8* %.15, align 1
  br label %18

; <label>:18:                                     ; preds = %17, %15
  br label %19

; <label>:19:                                     ; preds = %19, %18
  %.23 = phi i8* [ %.12, %18 ], [ %20, %19 ]
  call void @unroll_loop(i32 84)
  %20 = getelementptr inbounds i8, i8* %.23, i32 1
  %21 = load i8, i8* %.23, align 1
  %22 = icmp ne i8 %21, 0
  br i1 %22, label %19, label %.loopexit1.loopexit

.loopexit1.loopexit:                              ; preds = %19
  %.3.ph = phi i8* [ %20, %19 ]
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %.loopexit
  %.3 = phi i8* [ %.12, %.loopexit ], [ %.3.ph, %.loopexit1.loopexit ]
  %23 = ptrtoint i8* %.3 to i64
  %24 = ptrtoint i8* %1 to i64
  %25 = sub i64 %23, %24
  %26 = sub nsw i64 %25, 1
  ret i64 %26
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @strlcat(i8*, i8*, i64) #0 {
  %scevgep1 = getelementptr i8, i8* %0, i64 -1
  br label %4

; <label>:4:                                      ; preds = %11, %3
  %lsr.iv = phi i8* [ %scevgep2, %11 ], [ %scevgep1, %3 ]
  %.01 = phi i64 [ %2, %3 ], [ %5, %11 ]
  %scevgep3 = getelementptr i8, i8* %lsr.iv, i64 1
  call void @unroll_loop(i32 85)
  %5 = add i64 %.01, -1
  %6 = icmp ne i64 %.01, 0
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %4
  %8 = load i8, i8* %scevgep3, align 1
  %9 = sext i8 %8 to i32
  %10 = icmp ne i32 %9, 0
  br label %11

; <label>:11:                                     ; preds = %7, %4
  %12 = phi i1 [ false, %4 ], [ %10, %7 ]
  %scevgep2 = getelementptr i8, i8* %lsr.iv, i64 1
  br i1 %12, label %4, label %13

; <label>:13:                                     ; preds = %11
  %.03.lcssa = phi i8* [ %scevgep2, %11 ]
  %14 = ptrtoint i8* %.03.lcssa to i64
  %15 = ptrtoint i8* %0 to i64
  %16 = sub i64 %14, %15
  %17 = sub i64 %2, %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %22

; <label>:19:                                     ; preds = %13
  %20 = call i64 @strlen(i8* %1) #8
  %21 = add i64 %16, %20
  br label %40

; <label>:22:                                     ; preds = %13
  %23 = load i8, i8* %1, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %22
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %31
  %.18 = phi i64 [ %.2, %31 ], [ %17, %.lr.ph.preheader ]
  %.027 = phi i8* [ %32, %31 ], [ %1, %.lr.ph.preheader ]
  %.146 = phi i8* [ %.25, %31 ], [ %.03.lcssa, %.lr.ph.preheader ]
  call void @unroll_loop(i32 86)
  %26 = icmp ne i64 %.18, 1
  br i1 %26, label %27, label %31

; <label>:27:                                     ; preds = %.lr.ph
  %28 = load i8, i8* %.027, align 1
  %29 = getelementptr inbounds i8, i8* %.146, i32 1
  store i8 %28, i8* %.146, align 1
  %30 = add i64 %.18, -1
  br label %31

; <label>:31:                                     ; preds = %27, %.lr.ph
  %.25 = phi i8* [ %29, %27 ], [ %.146, %.lr.ph ]
  %.2 = phi i64 [ %30, %27 ], [ %.18, %.lr.ph ]
  %32 = getelementptr inbounds i8, i8* %.027, i32 1
  %scevgep = getelementptr i8, i8* %.027, i64 1
  %33 = load i8, i8* %scevgep, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %31
  %.14.lcssa.ph = phi i8* [ %.25, %31 ]
  %.02.lcssa.ph = phi i8* [ %32, %31 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %22
  %.14.lcssa = phi i8* [ %.03.lcssa, %22 ], [ %.14.lcssa.ph, %._crit_edge.loopexit ]
  %.02.lcssa = phi i8* [ %1, %22 ], [ %.02.lcssa.ph, %._crit_edge.loopexit ]
  store i8 0, i8* %.14.lcssa, align 1
  %36 = ptrtoint i8* %.02.lcssa to i64
  %37 = ptrtoint i8* %1 to i64
  %38 = sub i64 %36, %37
  %39 = add i64 %16, %38
  br label %40

; <label>:40:                                     ; preds = %._crit_edge, %19
  %.0 = phi i64 [ %21, %19 ], [ %39, %._crit_edge ]
  ret i64 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @usage() #0 {
  %1 = load i8*, i8** @version, align 8
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  %5 = zext i1 %4 to i64
  %6 = getelementptr [8 x i8], [8 x i8]* @.str.3.531, i32 0, i32 0
  %7 = getelementptr [9 x i8], [9 x i8]* @.str.4.532, i32 0, i32 0
  %8 = select i1 %4, i8* %6, i8* %7
  %9 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i64
  %13 = getelementptr [8 x i8], [8 x i8]* @.str.3.531, i32 0, i32 0
  %14 = getelementptr [9 x i8], [9 x i8]* @.str.4.532, i32 0, i32 0
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr [875 x i8], [875 x i8]* @.str.1.533, i32 0, i32 0
  %17 = getelementptr [25 x i8], [25 x i8]* @.str.2.534, i32 0, i32 0
  %18 = getelementptr [4 x i8], [4 x i8]* @.str.5.535, i32 0, i32 0
  %19 = getelementptr [5 x i8], [5 x i8]* @.str.6.536, i32 0, i32 0
  %20 = call i32 (i8*, ...) @printf(i8* %16, i8* %1, i8* %17, i8* %8, i8* %15, i8* %18, i8* %19, i8* %18, i8* %19)
  %21 = call i32 @totd_exit(i32 1)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @totd_exit(i32) #0 {
  call void @ev_tcp_out_finish()
  call void @ev_udp_in_finish()
  call void @ev_tcp_conn_in_finish()
  call void @ev_to_finish()
  call void @ev_signal_finish()
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %3 = load %struct.generic_list*, %struct.generic_list** %2, align 8
  %4 = icmp ne %struct.generic_list* %3, null
  br i1 %4, label %5, label %8

; <label>:5:                                      ; preds = %1
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8
  call void @list_destroy(%struct.generic_list* %7, void (i8*)* @fwd_freev)
  br label %8

; <label>:8:                                      ; preds = %5, %1
  %9 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %12, label %16

; <label>:12:                                     ; preds = %8
  %13 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 @unlink(i8* %14) #9
  br label %16

; <label>:16:                                     ; preds = %12, %8
  %17 = icmp ne i32 %0, 0
  br i1 %17, label %18, label %23

; <label>:18:                                     ; preds = %16
  %19 = getelementptr [22 x i8], [22 x i8]* @.str.89, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %19)
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = getelementptr [86 x i8], [86 x i8]* @.str.90, i32 0, i32 0
  %22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* %21)
  br label %23

; <label>:23:                                     ; preds = %18, %16
  call void @exit(i32 %0) #11
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #4

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #7

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 40)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 4
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 2
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 13
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  %22 = call i8* @malloc(i64 100)
  store i8* %22, i8** %21
  %23 = load i8*, i8** %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0), i64 100, i1 false)
  %24 = getelementptr i8, i8* %23, i32 3
  store i8 0, i8* %24
  %25 = load i8**, i8*** @__argv_new__
  %26 = getelementptr i8*, i8** %25, i32 4
  store i8* null, i8** %26
  %27 = alloca i32, align 4, !track !176
  %28 = call i32 @getuid() #9
  %29 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 0, i32* %29, align 8
  %30 = call i32 @getgid() #9
  %31 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 0, i32* %31, align 4
  %32 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  store i8* null, i8** %32, align 8
  %33 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  store i8* null, i8** %33, align 8
  %34 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  store i8* null, i8** %34, align 8
  %35 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  store i32 1, i32* %35, align 4
  %36 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  store i32 1, i32* %36, align 8
  %37 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  store i32 0, i32* %37, align 4
  %38 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  store i32 0, i32* %38, align 8
  %39 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  store i32 0, i32* %39, align 4
  %40 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  store i32 0, i32* %40, align 8
  %41 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  store i32 1, i32* %41, align 4
  %42 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 16
  store i32 0, i32* %42, align 4
  %43 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 10
  store i32 300, i32* %43, align 4
  %44 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  store i32 53, i32* %44, align 8
  %45 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 11
  store i32 0, i32* %45, align 8
  %46 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  store i32 1, i32* %46, align 8
  %47 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  store %struct.generic_list* null, %struct.generic_list** %47, align 8
  %48 = getelementptr [18 x i8], [18 x i8]* @.str.8.539, i32 0, i32 0
  %49 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  store i8* %48, i8** %49, align 8
  %50 = getelementptr [25 x i8], [25 x i8]* @.str.2.534, i32 0, i32 0
  %51 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  store %struct.generic_list* null, %struct.generic_list** %52, align 8
  br label %53

; <label>:53:                                     ; preds = %2, %53
  %lsr.iv = phi i64 [ -750, %2 ], [ %lsr.iv.next, %53 ]
  %lsr.iv1 = inttoptr i64 %lsr.iv to i8*
  call void @unroll_loop(i32 88)
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %lsr.iv
  %scevgep = getelementptr i8, i8* %uglygep, i64 850
  store i8 0, i8* %scevgep, align 1
  %lsr.iv.next = add nsw i64 %lsr.iv, 25
  %exitcond = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond, label %53, label %54

; <label>:54:                                     ; preds = %53
  %55 = call %struct.generic_list* @list_init()
  %56 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  store %struct.generic_list* %55, %struct.generic_list** %56, align 8
  %57 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %58 = load %struct.generic_list*, %struct.generic_list** %57, align 8
  %59 = icmp ne %struct.generic_list* %58, null
  br i1 %59, label %61, label %60

; <label>:60:                                     ; preds = %54
  call void @exit(i32 1) #11
  unreachable

; <label>:61:                                     ; preds = %54
  %62 = icmp slt i32 1, 4, !track_argc !177
  br i1 %62, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %61
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %223
  %.17 = phi i32 [ %224, %223 ], [ 1, %.lr.ph.preheader ]
  call void @unroll_loop(i32 89)
  %63 = sext i32 %.17 to i64
  %64 = getelementptr inbounds i8*, i8** %25, i64 %63
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @strncmp(i8* %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %67 = icmp ne i32 %66, 0
  %68 = sext i32 %.17 to i64
  %69 = getelementptr inbounds i8*, i8** %25, i64 %68
  %70 = load i8*, i8** %69, align 8
  br i1 %67, label %75, label %71

; <label>:71:                                     ; preds = %.lr.ph
  %72 = getelementptr inbounds i8, i8* %70, i64 2
  %73 = call i32 @atoi(i8* %72) #8
  store i32 %73, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %74 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %74)
  br label %223

; <label>:75:                                     ; preds = %.lr.ph
  %76 = call i32 @strcmp(i8* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %79, label %78

; <label>:78:                                     ; preds = %75
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %223

; <label>:79:                                     ; preds = %75
  %80 = sext i32 %.17 to i64
  %81 = getelementptr inbounds i8*, i8** %25, i64 %80
  %82 = load i8*, i8** %81, align 8
  %83 = call i32 @strcmp(i8* %82, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %86, label %85

; <label>:85:                                     ; preds = %79
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %223

; <label>:86:                                     ; preds = %79
  %87 = sext i32 %.17 to i64
  %88 = getelementptr inbounds i8*, i8** %25, i64 %87
  %89 = load i8*, i8** %88, align 8
  %90 = call i32 @strcmp(i8* %89, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %98

; <label>:92:                                     ; preds = %86
  %93 = sext i32 %.17 to i64
  %94 = getelementptr inbounds i8*, i8** %25, i64 %93
  %95 = load i8*, i8** %94, align 8
  %96 = call i32 @strcmp(i8* %95, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %99, label %98

; <label>:98:                                     ; preds = %92, %86
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %223

; <label>:99:                                     ; preds = %92
  %100 = sext i32 %.17 to i64
  %101 = getelementptr inbounds i8*, i8** %25, i64 %100
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 @strcmp(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %106, label %105

; <label>:105:                                    ; preds = %99
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %223

; <label>:106:                                    ; preds = %99
  %107 = sext i32 %.17 to i64
  %108 = getelementptr inbounds i8*, i8** %25, i64 %107
  %109 = load i8*, i8** %108, align 8
  %110 = call i32 @strcmp(i8* %109, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %113, label %112

; <label>:112:                                    ; preds = %106
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %223

; <label>:113:                                    ; preds = %106
  %114 = sext i32 %.17 to i64
  %115 = getelementptr inbounds i8*, i8** %25, i64 %114
  %116 = load i8*, i8** %115, align 8
  %117 = call i32 @strcmp(i8* %116, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %125, label %119

; <label>:119:                                    ; preds = %113
  %120 = add nsw i32 %.17, 1
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8*, i8** %25, i64 %121
  %123 = load i8*, i8** %122, align 8
  %124 = call noalias i8* @strdup(i8* %123) #9, !track !178
  store i8* %124, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %223

; <label>:125:                                    ; preds = %113
  %126 = sext i32 %.17 to i64
  %127 = getelementptr inbounds i8*, i8** %25, i64 %126
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 @strcmp(i8* %128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %143, label %131

; <label>:131:                                    ; preds = %125
  %132 = add nsw i32 %.17, 1
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8*, i8** %25, i64 %133
  %135 = load i8*, i8** %134, align 8
  %136 = call i32 @conv_trick_conf(i8* %135)
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %223

; <label>:138:                                    ; preds = %131
  %139 = add nsw i32 %132, 1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8*, i8** %25, i64 %140
  %142 = load i8*, i8** %141, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %142)
  call void @usage()
  br label %223

; <label>:143:                                    ; preds = %125
  %144 = sext i32 %.17 to i64
  %145 = getelementptr inbounds i8*, i8** %25, i64 %144
  %146 = load i8*, i8** %145, align 8
  %147 = call i32 @strcmp(i8* %146, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %162, label %149

; <label>:149:                                    ; preds = %143
  %150 = add nsw i32 %.17, 1
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8*, i8** %25, i64 %151
  %153 = load i8*, i8** %152, align 8
  %154 = call i32 @atoi(i8* %153) #8
  store i32 %154, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %155 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %223, label %157

; <label>:157:                                    ; preds = %149
  %158 = add nsw i32 %150, 1
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8*, i8** %25, i64 %159
  %161 = load i8*, i8** %160, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %161)
  call void @usage()
  br label %223

; <label>:162:                                    ; preds = %143
  %163 = sext i32 %.17 to i64
  %164 = getelementptr inbounds i8*, i8** %25, i64 %163
  %165 = load i8*, i8** %164, align 8
  %166 = call i32 @strcmp(i8* %165, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %174, label %168

; <label>:168:                                    ; preds = %162
  %169 = add nsw i32 %.17, 1
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8*, i8** %25, i64 %170
  %172 = load i8*, i8** %171, align 8
  %173 = call noalias i8* @strdup(i8* %172) #9, !track !179
  store i8* %173, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %223

; <label>:174:                                    ; preds = %162
  %175 = sext i32 %.17 to i64
  %176 = getelementptr inbounds i8*, i8** %25, i64 %175
  %177 = load i8*, i8** %176, align 8
  %178 = call i32 @strcmp(i8* %177, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %186, label %180

; <label>:180:                                    ; preds = %174
  %181 = add nsw i32 %.17, 1
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8*, i8** %25, i64 %182
  %184 = load i8*, i8** %183, align 8
  %185 = call noalias i8* @strdup(i8* %184) #9, !track !180
  store i8* %185, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %223

; <label>:186:                                    ; preds = %174
  %187 = sext i32 %.17 to i64
  %188 = getelementptr inbounds i8*, i8** %25, i64 %187
  %189 = load i8*, i8** %188, align 8
  %190 = call i32 @strcmp(i8* %189, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %191 = icmp ne i32 %190, 0
  br i1 %191, label %198, label %192

; <label>:192:                                    ; preds = %186
  %193 = add nsw i32 %.17, 1
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds i8*, i8** %25, i64 %194
  %196 = load i8*, i8** %195, align 8
  %197 = call noalias i8* @strdup(i8* %196) #9, !track !181
  store i8* %197, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %223

; <label>:198:                                    ; preds = %186
  %199 = sext i32 %.17 to i64
  %200 = getelementptr inbounds i8*, i8** %25, i64 %199
  %201 = load i8*, i8** %200, align 8
  %202 = call i32 @strcmp(i8* %201, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %203 = icmp ne i32 %202, 0
  br i1 %203, label %205, label %204

; <label>:204:                                    ; preds = %198
  call void @usage()
  br label %223

; <label>:205:                                    ; preds = %198
  %206 = sext i32 %.17 to i64
  %207 = getelementptr inbounds i8*, i8** %25, i64 %206
  %208 = load i8*, i8** %207, align 8
  %209 = call i32 @strcmp(i8* %208, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %212, label %211

; <label>:211:                                    ; preds = %205
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %223

; <label>:212:                                    ; preds = %205
  %213 = sext i32 %.17 to i64
  %214 = getelementptr inbounds i8*, i8** %25, i64 %213
  %215 = load i8*, i8** %214, align 8
  %216 = call i32 @strcmp(i8* %215, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %219, label %218

; <label>:218:                                    ; preds = %212
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %223

; <label>:219:                                    ; preds = %212
  %220 = sext i32 %.17 to i64
  %221 = getelementptr inbounds i8*, i8** %25, i64 %220
  %222 = load i8*, i8** %221, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %222)
  call void @usage()
  br label %223

; <label>:223:                                    ; preds = %71, %85, %105, %119, %157, %149, %180, %204, %218, %219, %211, %192, %168, %131, %138, %112, %98, %78
  %.15 = phi i32 [ %.17, %71 ], [ %.17, %78 ], [ %.17, %85 ], [ %.17, %98 ], [ %.17, %105 ], [ %.17, %112 ], [ %120, %119 ], [ %139, %138 ], [ %132, %131 ], [ %150, %149 ], [ %158, %157 ], [ %169, %168 ], [ %181, %180 ], [ %193, %192 ], [ %.17, %211 ], [ %.17, %219 ], [ %.17, %218 ], [ %.17, %204 ]
  %224 = add nsw i32 %.15, 1
  %225 = icmp slt i32 %224, 4, !track_argc !177
  br i1 %225, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %223
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %61
  %226 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %227 = load i32, i32* %226, align 4
  %228 = icmp sgt i32 %227, 0
  %229 = getelementptr [5 x i8], [5 x i8]* @.str.29.560, i32 0, i32 0
  br i1 %228, label %230, label %231

; <label>:230:                                    ; preds = %._crit_edge
  call void @openlog(i8* %229, i32 43, i32 24)
  br label %232

; <label>:231:                                    ; preds = %._crit_edge
  call void @openlog(i8* %229, i32 11, i32 24)
  br label %232

; <label>:232:                                    ; preds = %231, %230
  %233 = load i8*, i8** @version, align 8
  %234 = getelementptr [3 x i8], [3 x i8]* @.str.30.561, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %234, i8* %233)
  %235 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %236 = load i32, i32* %235, align 4
  %237 = icmp ne i32 %236, 0
  %238 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %239 = load i32, i32* %238, align 8
  %240 = icmp sgt i32 %239, 0
  br i1 %237, label %241, label %252

; <label>:241:                                    ; preds = %232
  br i1 %240, label %242, label %244

; <label>:242:                                    ; preds = %241
  %243 = call i32 @setlogmask(i32 15) #9
  br label %267

; <label>:244:                                    ; preds = %241
  %245 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %246 = load i32, i32* %245, align 8
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %250, label %248

; <label>:248:                                    ; preds = %244
  %249 = call i32 @setlogmask(i32 127) #9
  br label %267

; <label>:250:                                    ; preds = %244
  %251 = call i32 @setlogmask(i32 255) #9
  br label %267

; <label>:252:                                    ; preds = %232
  br i1 %240, label %253, label %255

; <label>:253:                                    ; preds = %252
  %254 = call i32 @setlogmask(i32 15) #9
  br label %267

; <label>:255:                                    ; preds = %252
  %256 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %257 = load i32, i32* %256, align 8
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %261, label %259

; <label>:259:                                    ; preds = %255
  %260 = call i32 @setlogmask(i32 31) #9
  br label %267

; <label>:261:                                    ; preds = %255
  %262 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %263 = load i32, i32* %262, align 8
  %264 = icmp slt i32 %263, 0
  br i1 %264, label %265, label %267

; <label>:265:                                    ; preds = %261
  %266 = call i32 @setlogmask(i32 127) #9
  br label %267

; <label>:267:                                    ; preds = %253, %261, %265, %259, %242, %250, %248
  %268 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %269 = load i8*, i8** %268, align 8
  %270 = icmp ne i8* %269, null
  br i1 %270, label %271, label %292

; <label>:271:                                    ; preds = %267
  %272 = call i16** @__ctype_b_loc() #10
  %273 = load i16*, i16** %272, align 8
  %274 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %275 = load i8*, i8** %274, align 8
  %276 = getelementptr inbounds i8, i8* %275, i64 0
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i32
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i16, i16* %273, i64 %279
  %281 = load i16, i16* %280, align 2
  %282 = zext i16 %281 to i32
  %283 = and i32 %282, 2048
  %284 = icmp ne i32 %283, 0
  %285 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %286 = load i8*, i8** %285, align 8
  br i1 %284, label %287, label %290

; <label>:287:                                    ; preds = %271
  %288 = call i32 @atoi(i8* %286) #8
  %289 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 %288, i32* %289, align 8
  br label %296

; <label>:290:                                    ; preds = %271
  %291 = call %struct.passwd* @getpwnam(i8* %286), !track !182
  br label %296

; <label>:292:                                    ; preds = %267
  %293 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %294 = load i32, i32* %293, align 8
  %295 = call %struct.passwd* @getpwuid(i32 %294), !track !183
  br label %296

; <label>:296:                                    ; preds = %287, %290, %292
  %.16 = phi %struct.passwd* [ %295, %292 ], [ null, %287 ], [ %291, %290 ]
  %297 = icmp ne %struct.passwd* %.16, null
  br i1 %297, label %298, label %324

; <label>:298:                                    ; preds = %296
  %299 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %302 = load i32, i32* %301, align 8
  %303 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 3
  %304 = load i32, i32* %303, align 4
  %305 = getelementptr [41 x i8], [41 x i8]* @.str.31.562, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %305, i8* %300, i32 %302, i32 %304)
  %306 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %307 = load i32, i32* %306, align 8
  %308 = icmp ne i32 %307, 0
  br i1 %308, label %309, label %320

; <label>:309:                                    ; preds = %298
  %310 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %311 = load i32, i32* %310, align 8
  %312 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %313 = load i32, i32* %312, align 8
  %314 = icmp ne i32 %311, %313
  br i1 %314, label %315, label %320

; <label>:315:                                    ; preds = %309
  %316 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %317 = load i8*, i8** %316, align 8
  %318 = getelementptr [43 x i8], [43 x i8]* @.str.32.563, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %318, i8* %317)
  %319 = call i32 @totd_exit(i32 1)
  br label %328

; <label>:320:                                    ; preds = %309, %298
  %321 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %322 = load i32, i32* %321, align 8
  %323 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 %322, i32* %323, align 8
  br label %328

; <label>:324:                                    ; preds = %296
  %325 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %326 = load i8*, i8** %325, align 8
  %327 = getelementptr [29 x i8], [29 x i8]* @.str.33.564, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %327, i8* %326)
  br label %328

; <label>:328:                                    ; preds = %315, %320, %324
  %329 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %330 = load i8*, i8** %329, align 8
  %331 = icmp ne i8* %330, null
  br i1 %331, label %332, label %363

; <label>:332:                                    ; preds = %328
  %333 = call i16** @__ctype_b_loc() #10
  %334 = load i16*, i16** %333, align 8
  %335 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %336 = load i8*, i8** %335, align 8
  %337 = getelementptr inbounds i8, i8* %336, i64 0
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i32
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i16, i16* %334, i64 %340
  %342 = load i16, i16* %341, align 2
  %343 = zext i16 %342 to i32
  %344 = and i32 %343, 2048
  %345 = icmp ne i32 %344, 0
  %346 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %347 = load i8*, i8** %346, align 8
  br i1 %345, label %348, label %351

; <label>:348:                                    ; preds = %332
  %349 = call i32 @atoi(i8* %347) #8
  %350 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %349, i32* %350, align 4
  br label %372

; <label>:351:                                    ; preds = %332
  %352 = call %struct.group* @getgrnam(i8* %347), !track !184
  %353 = icmp ne %struct.group* %352, null
  br i1 %353, label %359, label %354

; <label>:354:                                    ; preds = %351
  %355 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %356 = load i8*, i8** %355, align 8
  %357 = getelementptr [19 x i8], [19 x i8]* @.str.34.565, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %357, i8* %356)
  %358 = call i32 @totd_exit(i32 1)
  br label %359

; <label>:359:                                    ; preds = %354, %351
  %360 = getelementptr inbounds %struct.group, %struct.group* %352, i32 0, i32 2
  %361 = load i32, i32* %360, align 8
  %362 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %361, i32* %362, align 4
  br label %372

; <label>:363:                                    ; preds = %328
  %364 = icmp ne %struct.passwd* %.16, null
  br i1 %364, label %365, label %369

; <label>:365:                                    ; preds = %363
  %366 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 3
  %367 = load i32, i32* %366, align 4
  %368 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %367, i32* %368, align 4
  br label %372

; <label>:369:                                    ; preds = %363
  %370 = call i32 @getgid() #9
  %371 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %370, i32* %371, align 4
  br label %372

; <label>:372:                                    ; preds = %365, %369, %348, %359
  call void @endpwent()
  call void @endgrent()
  %373 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %374 = load i8*, i8** %373, align 8
  %375 = icmp ne i8* %374, null
  br i1 %375, label %376, label %396

; <label>:376:                                    ; preds = %372
  %377 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %378 = load i8*, i8** %377, align 8
  %379 = call i32 @chroot(i8* %378) #9
  %380 = icmp slt i32 %379, 0
  br i1 %380, label %381, label %386

; <label>:381:                                    ; preds = %376
  %382 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %383 = load i8*, i8** %382, align 8
  %384 = getelementptr [21 x i8], [21 x i8]* @.str.35.566, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %384, i8* %383)
  %385 = call i32 @totd_exit(i32 1)
  br label %386

; <label>:386:                                    ; preds = %381, %376
  %387 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %388 = load i8*, i8** %387, align 8
  %389 = getelementptr [15 x i8], [15 x i8]* @.str.36.567, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %389, i8* %388)
  %390 = getelementptr [2 x i8], [2 x i8]* @.str.37.568, i32 0, i32 0
  %391 = call i32 @chdir(i8* %390) #9
  %392 = icmp slt i32 %391, 0
  br i1 %392, label %393, label %396

; <label>:393:                                    ; preds = %386
  %394 = getelementptr [22 x i8], [22 x i8]* @.str.38.569, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %394)
  %395 = call i32 @totd_exit(i32 1)
  br label %396

; <label>:396:                                    ; preds = %386, %393, %372
  %397 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 0
  %398 = load i8*, i8** %397, align 8
  %399 = call i32 @read_config(i8* %398)
  %400 = icmp ne i32 %399, 0
  br i1 %400, label %401, label %405

; <label>:401:                                    ; preds = %396
  %402 = getelementptr [22 x i8], [22 x i8]* @.str.39.570, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %402)
  %403 = getelementptr [46 x i8], [46 x i8]* @.str.40.571, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %403)
  %404 = call i32 @totd_exit(i32 1)
  br label %405

; <label>:405:                                    ; preds = %401, %396
  %406 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %407 = load i32, i32* %406, align 4
  %408 = icmp eq i32 %407, 1
  br i1 %408, label %409, label %420

; <label>:409:                                    ; preds = %405
  %410 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %411 = load i32, i32* %410, align 8
  %412 = icmp ne i32 %411, 0
  br i1 %412, label %413, label %420

; <label>:413:                                    ; preds = %409
  %414 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %415 = load i32, i32* %414, align 8
  %416 = icmp slt i32 %415, 1024
  br i1 %416, label %417, label %420

; <label>:417:                                    ; preds = %413
  %418 = getelementptr [43 x i8], [43 x i8]* @.str.41.572, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %418)
  %419 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  store i32 0, i32* %419, align 4
  br label %420

; <label>:420:                                    ; preds = %417, %413, %409, %405
  %421 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %422 = load i8*, i8** %421, align 8
  %423 = icmp ne i8* %422, null
  br i1 %423, label %424, label %461

; <label>:424:                                    ; preds = %420
  %425 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %426 = load i8*, i8** %425, align 8
  %427 = getelementptr [2 x i8], [2 x i8]* @.str.42.573, i32 0, i32 0
  %428 = call %struct._IO_FILE* @fopen(i8* %426, i8* %427), !track !185
  %429 = icmp ne %struct._IO_FILE* %428, null
  br i1 %429, label %430, label %461

; <label>:430:                                    ; preds = %424
  %431 = getelementptr [3 x i8], [3 x i8]* @.str.43.574, i32 0, i32 0
  %432 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %428, i8* %431, i32* %27)
  %433 = icmp ne i32 %432, 1
  br i1 %433, label %434, label %439

; <label>:434:                                    ; preds = %430
  %435 = getelementptr [24 x i8], [24 x i8]* @.str.44.575, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %435)
  %436 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %437 = load i8*, i8** %436, align 8
  %438 = call i32 @unlink(i8* %437) #9
  br label %459

; <label>:439:                                    ; preds = %430
  %440 = load i32, i32* %27, align 4
  %441 = call i32 @kill(i32 %440, i32 0) #9
  %442 = icmp eq i32 %441, -1
  br i1 %442, label %443, label %450

; <label>:443:                                    ; preds = %439
  %444 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %445 = load i8*, i8** %444, align 8
  %446 = call i32 @unlink(i8* %445) #9
  %447 = icmp ne i32 %446, 0
  br i1 %447, label %450, label %448

; <label>:448:                                    ; preds = %443
  %449 = getelementptr [23 x i8], [23 x i8]* @.str.45.576, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %449)
  br label %459

; <label>:450:                                    ; preds = %443, %439
  %451 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %452 = load i8*, i8** %451, align 8
  %453 = getelementptr [27 x i8], [27 x i8]* @.str.46.577, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %453, i8* %452)
  %454 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %455 = load i8*, i8** %454, align 8
  %456 = getelementptr [124 x i8], [124 x i8]* @.str.47.578, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %456, i8* %455)
  %457 = call i32 @fclose(%struct._IO_FILE* %428)
  %458 = call i32 @totd_exit(i32 1)
  br label %459

; <label>:459:                                    ; preds = %448, %450, %434
  %460 = call i32 @fclose(%struct._IO_FILE* %428)
  br label %461

; <label>:461:                                    ; preds = %424, %459, %420
  %462 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %463 = load i32, i32* %462, align 4
  %464 = icmp ne i32 %463, 0
  br i1 %464, label %473, label %465

; <label>:465:                                    ; preds = %461
  %466 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %467 = load i32, i32* %466, align 8
  %468 = icmp ne i32 %467, 0
  br i1 %468, label %469, label %473

; <label>:469:                                    ; preds = %465
  %470 = getelementptr [81 x i8], [81 x i8]* @.str.48.579, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %470)
  %471 = getelementptr [101 x i8], [101 x i8]* @.str.49.580, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %471)
  %472 = call i32 @totd_exit(i32 1)
  br label %473

; <label>:473:                                    ; preds = %469, %465, %461
  %474 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %475 = load i32, i32* %474, align 4
  %476 = icmp ne i32 %475, 0
  br i1 %476, label %477, label %492

; <label>:477:                                    ; preds = %473
  %478 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %479 = load i32, i32* %478, align 8
  %480 = icmp ne i32 %479, 0
  br i1 %480, label %481, label %492

; <label>:481:                                    ; preds = %477
  %482 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  %483 = load i32, i32* %482, align 8
  %484 = icmp ne i32 %483, 0
  br i1 %484, label %489, label %485

; <label>:485:                                    ; preds = %481
  %486 = getelementptr [66 x i8], [66 x i8]* @.str.50.581, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %486)
  %487 = getelementptr [62 x i8], [62 x i8]* @.str.51.582, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %487)
  %488 = call i32 @totd_exit(i32 1)
  br label %489

; <label>:489:                                    ; preds = %485, %481
  %490 = getelementptr [78 x i8], [78 x i8]* @.str.52.583, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %490)
  %491 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  store i32 1, i32* %491, align 4
  br label %492

; <label>:492:                                    ; preds = %489, %477, %473
  %493 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %494 = load i32, i32* %493, align 4
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %496, label %498

; <label>:496:                                    ; preds = %492
  %497 = getelementptr [15 x i8], [15 x i8]* @.str.53.584, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %497)
  br label %498

; <label>:498:                                    ; preds = %496, %492
  %499 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %500 = load i32, i32* %499, align 8
  %501 = icmp ne i32 %500, 0
  br i1 %501, label %502, label %504

; <label>:502:                                    ; preds = %498
  %503 = getelementptr [15 x i8], [15 x i8]* @.str.54.585, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %503)
  br label %504

; <label>:504:                                    ; preds = %502, %498
  %505 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %506 = load i32, i32* %505, align 4
  %507 = icmp ne i32 %506, 0
  br i1 %507, label %515, label %508

; <label>:508:                                    ; preds = %504
  %509 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %510 = load i32, i32* %509, align 8
  %511 = icmp ne i32 %510, 0
  br i1 %511, label %515, label %512

; <label>:512:                                    ; preds = %508
  %513 = getelementptr [73 x i8], [73 x i8]* @.str.55.586, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %513)
  %514 = call i32 @totd_exit(i32 1)
  br label %515

; <label>:515:                                    ; preds = %512, %508, %504
  %516 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  %517 = load i32, i32* %516, align 8
  %518 = icmp ne i32 %517, 0
  br i1 %518, label %519, label %526

; <label>:519:                                    ; preds = %515
  %520 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %521 = load i32, i32* %520, align 8
  %522 = icmp ne i32 %521, 0
  br i1 %522, label %523, label %526

; <label>:523:                                    ; preds = %519
  %524 = getelementptr [162 x i8], [162 x i8]* @.str.56.587, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %524)
  %525 = call i32 @totd_exit(i32 1)
  br label %526

; <label>:526:                                    ; preds = %523, %519, %515
  call void @fwd_init()
  call void @fwd_select()
  %527 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %528 = load %struct.generic_list*, %struct.generic_list** %527, align 8
  %529 = icmp ne %struct.generic_list* %528, null
  br i1 %529, label %532, label %530

; <label>:530:                                    ; preds = %526
  %531 = getelementptr [48 x i8], [48 x i8]* @.str.57.588, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %531)
  br label %650

; <label>:532:                                    ; preds = %526
  call void @ev_dup_init()
  %533 = call i32 @ev_signal_init()
  %534 = icmp slt i32 %533, 0
  br i1 %534, label %535, label %538

; <label>:535:                                    ; preds = %532
  %536 = getelementptr [41 x i8], [41 x i8]* @.str.58.589, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %536)
  %537 = call i32 @totd_exit(i32 1)
  br label %538

; <label>:538:                                    ; preds = %535, %532
  %539 = call i32 @ev_to_init()
  %540 = icmp slt i32 %539, 0
  br i1 %540, label %541, label %544

; <label>:541:                                    ; preds = %538
  %542 = getelementptr [41 x i8], [41 x i8]* @.str.59.590, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %542)
  %543 = call i32 @totd_exit(i32 1)
  br label %544

; <label>:544:                                    ; preds = %541, %538
  %545 = call i32 @ev_tcp_conn_in_init()
  %546 = icmp slt i32 %545, 0
  br i1 %546, label %547, label %550

; <label>:547:                                    ; preds = %544
  %548 = getelementptr [33 x i8], [33 x i8]* @.str.60.591, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %548)
  %549 = call i32 @totd_exit(i32 1)
  br label %550

; <label>:550:                                    ; preds = %547, %544
  %551 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %552 = load i32, i32* %551, align 8
  %553 = call i32 @net_init_socketlist(i32 %552)
  %554 = icmp slt i32 %553, 0
  br i1 %554, label %555, label %558

; <label>:555:                                    ; preds = %550
  %556 = getelementptr [28 x i8], [28 x i8]* @.str.61.592, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %556)
  %557 = call i32 @totd_exit(i32 1)
  br label %558

; <label>:558:                                    ; preds = %555, %550
  %559 = call i32 @net_bind_socketlist()
  %560 = icmp sle i32 %559, 0
  br i1 %560, label %561, label %570

; <label>:561:                                    ; preds = %558
  %562 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %563 = load i32, i32* %562, align 4
  %564 = icmp ne i32 %563, 0
  %565 = getelementptr [27 x i8], [27 x i8]* @.str.62.593, i32 0, i32 0
  br i1 %564, label %568, label %566

; <label>:566:                                    ; preds = %561
  call void (i32, i8*, ...) @syslog(i32 3, i8* %565)
  %567 = call i32 @totd_exit(i32 1)
  br label %570

; <label>:568:                                    ; preds = %561
  call void (i32, i8*, ...) @syslog(i32 4, i8* %565)
  %569 = getelementptr [26 x i8], [26 x i8]* @.str.63.594, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %569)
  br label %570

; <label>:570:                                    ; preds = %566, %568, %558
  %571 = call i32 @ev_udp_in_init()
  %572 = icmp slt i32 %571, 0
  br i1 %572, label %573, label %576

; <label>:573:                                    ; preds = %570
  %574 = getelementptr [22 x i8], [22 x i8]* @.str.64, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %574)
  %575 = call i32 @totd_exit(i32 1)
  br label %576

; <label>:576:                                    ; preds = %573, %570
  %577 = call i32 @ev_tcp_out_init()
  %578 = icmp slt i32 %577, 0
  br i1 %578, label %579, label %582

; <label>:579:                                    ; preds = %576
  %580 = getelementptr [37 x i8], [37 x i8]* @.str.65.595, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %580)
  %581 = call i32 @totd_exit(i32 1)
  br label %582

; <label>:582:                                    ; preds = %579, %576
  %583 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  %584 = load i32, i32* %583, align 4
  %585 = call i32 @setgid(i32 %584) #9
  %586 = icmp slt i32 %585, 0
  br i1 %586, label %587, label %592

; <label>:587:                                    ; preds = %582
  %588 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  %589 = load i32, i32* %588, align 4
  %590 = getelementptr [20 x i8], [20 x i8]* @.str.66, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %590, i32 %589)
  %591 = call i32 @totd_exit(i32 1)
  br label %592

; <label>:592:                                    ; preds = %587, %582
  %593 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %594 = load i32, i32* %593, align 8
  %595 = call i32 @setuid(i32 %594) #9
  %596 = icmp slt i32 %595, 0
  br i1 %596, label %597, label %602

; <label>:597:                                    ; preds = %592
  %598 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %599 = load i32, i32* %598, align 8
  %600 = getelementptr [20 x i8], [20 x i8]* @.str.67, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %600, i32 %599)
  %601 = call i32 @totd_exit(i32 1)
  br label %602

; <label>:602:                                    ; preds = %597, %592
  %603 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %604 = load i32, i32* %603, align 4
  %605 = icmp ne i32 %604, 0
  br i1 %605, label %606, label %612

; <label>:606:                                    ; preds = %602
  %607 = call i32 @ev_to_register_ifcheck()
  %608 = icmp slt i32 %607, 0
  br i1 %608, label %609, label %612

; <label>:609:                                    ; preds = %606
  %610 = getelementptr [41 x i8], [41 x i8]* @.str.68, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %610)
  %611 = call i32 @totd_exit(i32 1)
  br label %612

; <label>:612:                                    ; preds = %606, %609, %602
  %613 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %614 = load i32, i32* %613, align 4
  %615 = icmp ne i32 %614, 0
  br i1 %615, label %623, label %616

; <label>:616:                                    ; preds = %612
  %617 = call i32 @daemon(i32 0, i32 0) #9
  %618 = icmp ne i32 %617, 0
  br i1 %618, label %619, label %621

; <label>:619:                                    ; preds = %616
  %620 = call i32 @totd_exit(i32 1)
  br label %623

; <label>:621:                                    ; preds = %616
  %622 = getelementptr [29 x i8], [29 x i8]* @.str.69, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %622)
  br label %623

; <label>:623:                                    ; preds = %619, %621, %612
  %624 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %625 = load i8*, i8** %624, align 8
  %626 = icmp ne i8* %625, null
  br i1 %626, label %627, label %647

; <label>:627:                                    ; preds = %623
  %628 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %629 = load i8*, i8** %628, align 8
  %630 = getelementptr [2 x i8], [2 x i8]* @.str.70, i32 0, i32 0
  %631 = call %struct._IO_FILE* @fopen(i8* %629, i8* %630), !track !186
  %632 = icmp ne %struct._IO_FILE* %631, null
  br i1 %632, label %638, label %633

; <label>:633:                                    ; preds = %627
  %634 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %635 = load i8*, i8** %634, align 8
  %636 = getelementptr [25 x i8], [25 x i8]* @.str.71, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %636, i8* %635)
  %637 = call i32 @totd_exit(i32 1)
  br label %638

; <label>:638:                                    ; preds = %633, %627
  %639 = call i32 @getpid() #9
  %640 = getelementptr [3 x i8], [3 x i8]* @.str.43.574, i32 0, i32 0
  %641 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %631, i8* %640, i32 %639)
  %642 = call i32 @getpid() #9
  %643 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %644 = load i8*, i8** %643, align 8
  %645 = getelementptr [24 x i8], [24 x i8]* @.str.72, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %645, i32 %642, i8* %644)
  %646 = call i32 @fclose(%struct._IO_FILE* %631)
  br label %647

; <label>:647:                                    ; preds = %638, %623
  %648 = getelementptr [13 x i8], [13 x i8]* @.str.73, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %648)
  call void @totd_eventloop()
  %649 = call i32 @totd_exit(i32 0)
  br label %650

; <label>:650:                                    ; preds = %647, %530
  %.0 = phi i32 [ %649, %647 ], [ -1, %530 ]
  ret i32 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @getuid() #4

; Function Attrs: nounwind
declare dso_local i32 @getgid() #4

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

declare dso_local void @openlog(i8*, i32, i32) #1

; Function Attrs: nounwind
declare dso_local i32 @setlogmask(i32) #4

declare dso_local %struct.passwd* @getpwnam(i8*) #1

declare dso_local %struct.passwd* @getpwuid(i32) #1

declare dso_local %struct.group* @getgrnam(i8*) #1

declare dso_local void @endpwent() #1

declare dso_local void @endgrent() #1

; Function Attrs: nounwind
declare dso_local i32 @chroot(i8*) #4

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #4

declare dso_local i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind
declare dso_local i32 @kill(i32, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @setgid(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @setuid(i32) #4

; Function Attrs: nounwind
declare dso_local i32 @daemon(i32, i32) #4

; Function Attrs: nounwind
declare dso_local i32 @getpid() #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @totd_eventloop() #0 {
  %1 = alloca %struct.timeval, align 8
  %2 = alloca %struct.fd_set, align 8, !track !187
  %3 = alloca %struct.fd_set, align 8, !track !188
  %4 = alloca i32, align 4, !track !189
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 1
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0
  %8 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %2, i32 0, i32 0
  %9 = getelementptr inbounds [16 x i64], [16 x i64]* %8, i64 0, i64 0
  %10 = getelementptr inbounds %struct.fd_set, %struct.fd_set* %3, i32 0, i32 0
  %11 = getelementptr inbounds [16 x i64], [16 x i64]* %10, i64 0, i64 0
  %12 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i32 0, i32 0
  br label %13

; <label>:13:                                     ; preds = %.backedge, %0
  call void @unroll_loop(i32 87)
  %14 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %15 = icmp sgt i32 %14, 2
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %13
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.75, i64 0, i64 0))
  br label %17

; <label>:17:                                     ; preds = %16, %13
  call void @fwd_select()
  call void @ev_signal_process()
  %18 = call i64 @ev_timeout_process()
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %24, label %20

; <label>:20:                                     ; preds = %17
  %21 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %22 = icmp sgt i32 %21, 2
  br i1 %22, label %23, label %31

; <label>:23:                                     ; preds = %20
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i64 0, i64 0))
  br label %31

; <label>:24:                                     ; preds = %17
  store i64 0, i64* %6, align 8
  %25 = call i64 @time(i64* null) #9
  %26 = sub nsw i64 %18, %25
  store i64 %26, i64* %7, align 8
  %27 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %28 = icmp sgt i32 %27, 2
  br i1 %28, label %29, label %31

; <label>:29:                                     ; preds = %24
  %30 = load i64, i64* %12, align 8
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.77, i64 0, i64 0), i64 %30)
  br label %31

; <label>:31:                                     ; preds = %24, %29, %20, %23
  %.0 = phi %struct.timeval* [ null, %23 ], [ null, %20 ], [ %1, %29 ], [ %1, %24 ]
  store i32 0, i32* %4, align 4
  %32 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %9) #9, !srcloc !190
  %33 = call { i64, i64* } asm sideeffect "cld; rep; stosq", "={cx},={di},{ax},0,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 0, i64 16, i64* %11) #9, !srcloc !191
  %34 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %35 = icmp sgt i32 %34, 3
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %31
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.78, i64 0, i64 0))
  br label %37

; <label>:37:                                     ; preds = %36, %31
  call void @nia_fds_set(%struct.fd_set* %2, i32* %4)
  %38 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %39 = icmp sgt i32 %38, 3
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %37
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.79, i64 0, i64 0))
  br label %41

; <label>:41:                                     ; preds = %40, %37
  %42 = call i32 @ev_tcp_conn_in_fds(%struct.fd_set* %2)
  %43 = load i32, i32* %4, align 4
  %44 = icmp sgt i32 %42, %43
  %45 = load i32, i32* %4, align 4
  %46 = select i1 %44, i32 %42, i32 %45
  store i32 %46, i32* %4, align 4
  %47 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %48 = icmp sgt i32 %47, 3
  br i1 %48, label %49, label %50

; <label>:49:                                     ; preds = %41
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.80, i64 0, i64 0))
  br label %50

; <label>:50:                                     ; preds = %49, %41
  %51 = call i32 @ev_tcp_out_fds(%struct.fd_set* %3)
  %52 = load i32, i32* %4, align 4
  %53 = icmp sgt i32 %51, %52
  %54 = load i32, i32* %4, align 4
  %55 = select i1 %53, i32 %51, i32 %54
  store i32 %55, i32* %4, align 4
  %56 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %57 = icmp sgt i32 %56, 3
  br i1 %57, label %58, label %60

; <label>:58:                                     ; preds = %50
  %59 = load i32, i32* %4, align 4
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i64 0, i64 0), i32 %59)
  br label %60

; <label>:60:                                     ; preds = %58, %50
  %61 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %62 = icmp sgt i32 %61, 2
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %60
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i64 0, i64 0))
  br label %64

; <label>:64:                                     ; preds = %63, %60
  %65 = load i32, i32* %4, align 4
  %66 = add nsw i32 %65, 1
  %67 = call i32 @select(i32 %66, %struct.fd_set* %2, %struct.fd_set* %3, %struct.fd_set* null, %struct.timeval* %.0)
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %69, label %82

; <label>:69:                                     ; preds = %64
  %70 = call i32* @__errno_location() #10
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 4
  br i1 %72, label %73, label %74

; <label>:73:                                     ; preds = %69
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i64 0, i64 0))
  br label %.backedge

; <label>:74:                                     ; preds = %69
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.74, i64 0, i64 0))
  %75 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  %76 = call i32 @net_reinit_socketlist(i32 %75, i32 1)
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %78, label %80

; <label>:78:                                     ; preds = %74
  %79 = call i32 @totd_exit(i32 1)
  br label %80

; <label>:80:                                     ; preds = %78, %74
  %81 = call i32 @sleep(i32 1)
  br label %.backedge

; <label>:82:                                     ; preds = %64
  %83 = call i32 @nia_fds_isset(%struct.fd_set* %2, i32* %5)
  switch i32 %83, label %94 [
    i32 0, label %84
    i32 1, label %89
  ]

; <label>:84:                                     ; preds = %82
  %85 = load i32, i32* %5, align 4
  %86 = call i32 @ev_udp_in_read(i32 %85)
  %87 = icmp slt i32 %86, 0
  br i1 %87, label %88, label %.backedge

; <label>:88:                                     ; preds = %84
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.85, i64 0, i64 0))
  br label %.backedge

; <label>:89:                                     ; preds = %82
  %90 = load i32, i32* %5, align 4
  %91 = call i32 @ev_tcp_srv_accept(i32 %90)
  %92 = icmp slt i32 %91, 0
  br i1 %92, label %93, label %.backedge

; <label>:93:                                     ; preds = %89
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.86, i64 0, i64 0))
  br label %.backedge

; <label>:94:                                     ; preds = %82
  %95 = call i32 @ev_tcp_out_fd_check(%struct.fd_set* %3)
  %96 = icmp slt i32 %95, 0
  br i1 %96, label %97, label %98

; <label>:97:                                     ; preds = %94
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.87, i64 0, i64 0))
  br label %98

; <label>:98:                                     ; preds = %97, %94
  %99 = call i32 @ev_tcp_conn_in_fd_check(%struct.fd_set* %2)
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %101, label %.backedge

; <label>:101:                                    ; preds = %98
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i64 0, i64 0))
  br label %.backedge

.backedge:                                        ; preds = %80, %98, %101, %89, %93, %84, %88, %73
  br label %13
}

declare dso_local i32 @select(i32, %struct.fd_set*, %struct.fd_set*, %struct.fd_set*, %struct.timeval*) #1

declare dso_local i32 @sleep(i32) #1

declare void @unroll_loop(i32)

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old.4(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 40)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 4
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 2
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 13
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  %22 = call i8* @malloc(i64 100)
  store i8* %22, i8** %21
  %23 = load i8*, i8** %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0), i64 100, i1 false)
  %24 = getelementptr i8, i8* %23, i32 3
  store i8 0, i8* %24
  %25 = load i8**, i8*** @__argv_new__
  %26 = getelementptr i8*, i8** %25, i32 4
  store i8* null, i8** %26
  %27 = alloca i32, align 4, !track !176
  %28 = call i32 @getuid() #9
  %29 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 0, i32* %29, align 8
  %30 = call i32 @getgid() #9
  %31 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 0, i32* %31, align 4
  %32 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  store i8* null, i8** %32, align 8
  %33 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  store i8* null, i8** %33, align 8
  %34 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  store i8* null, i8** %34, align 8
  %35 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  store i32 1, i32* %35, align 4
  %36 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  store i32 1, i32* %36, align 8
  %37 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  store i32 0, i32* %37, align 4
  %38 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  store i32 0, i32* %38, align 8
  %39 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  store i32 0, i32* %39, align 4
  %40 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  store i32 0, i32* %40, align 8
  %41 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  store i32 1, i32* %41, align 4
  %42 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 16
  store i32 0, i32* %42, align 4
  %43 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 10
  store i32 300, i32* %43, align 4
  %44 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  store i32 53, i32* %44, align 8
  %45 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 11
  store i32 0, i32* %45, align 8
  %46 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  store i32 1, i32* %46, align 8
  %47 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  store %struct.generic_list* null, %struct.generic_list** %47, align 8
  %48 = getelementptr [18 x i8], [18 x i8]* @.str.8.539, i32 0, i32 0
  %49 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  store i8* %48, i8** %49, align 8
  %50 = getelementptr [25 x i8], [25 x i8]* @.str.2.534, i32 0, i32 0
  %51 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  store %struct.generic_list* null, %struct.generic_list** %52, align 8
  br label %53

; <label>:53:                                     ; preds = %2
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 0, i64 0), align 1
  br i1 true, label %652, label %54

; <label>:54:                                     ; preds = %680, %679, %678, %677, %676, %675, %674, %673, %672, %671, %670, %669, %668, %667, %666, %665, %664, %663, %662, %661, %660, %659, %658, %657, %656, %655, %654, %653, %652, %53
  call void @__loop_termination_test___0()
  %55 = call %struct.generic_list* @list_init_clone()
  %56 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  store %struct.generic_list* %55, %struct.generic_list** %56, align 8
  %57 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %58 = load %struct.generic_list*, %struct.generic_list** %57, align 8
  %59 = icmp ne i64 10000508, 0
  %60 = icmp ne %struct.generic_list* %58, null
  br i1 true, label %62, label %61

; <label>:61:                                     ; preds = %54
  call void @exit(i32 1) #11
  unreachable

; <label>:62:                                     ; preds = %54
  %63 = icmp slt i32 1, 4, !track_argc !177
  br i1 true, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %62
  br label %.lr.ph

.lr.ph:                                           ; preds = %224, %.lr.ph.preheader
  %.17 = phi i32 [ %225, %224 ], [ 1, %.lr.ph.preheader ]
  call void @unroll_loop(i32 89)
  %64 = sext i32 %.17 to i64
  %65 = getelementptr inbounds i8*, i8** %25, i64 %64
  %66 = load i8*, i8** %65, align 8
  %67 = call i32 @strncmp(i8* %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %68 = icmp ne i32 %67, 0
  %69 = sext i32 %.17 to i64
  %70 = getelementptr inbounds i8*, i8** %25, i64 %69
  %71 = load i8*, i8** %70, align 8
  br i1 %68, label %76, label %72

; <label>:72:                                     ; preds = %.lr.ph
  %73 = getelementptr inbounds i8, i8* %71, i64 2
  %74 = call i32 @atoi(i8* %73) #8
  store i32 %74, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %75 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %75)
  br label %224

; <label>:76:                                     ; preds = %.lr.ph
  %77 = call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %80, label %79

; <label>:79:                                     ; preds = %76
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %224

; <label>:80:                                     ; preds = %76
  %81 = sext i32 %.17 to i64
  %82 = getelementptr inbounds i8*, i8** %25, i64 %81
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 @strcmp(i8* %83, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %87, label %86

; <label>:86:                                     ; preds = %80
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %224

; <label>:87:                                     ; preds = %80
  %88 = sext i32 %.17 to i64
  %89 = getelementptr inbounds i8*, i8** %25, i64 %88
  %90 = load i8*, i8** %89, align 8
  %91 = call i32 @strcmp(i8* %90, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %99

; <label>:93:                                     ; preds = %87
  %94 = sext i32 %.17 to i64
  %95 = getelementptr inbounds i8*, i8** %25, i64 %94
  %96 = load i8*, i8** %95, align 8
  %97 = call i32 @strcmp(i8* %96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %100, label %99

; <label>:99:                                     ; preds = %93, %87
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %224

; <label>:100:                                    ; preds = %93
  %101 = sext i32 %.17 to i64
  %102 = getelementptr inbounds i8*, i8** %25, i64 %101
  %103 = load i8*, i8** %102, align 8
  %104 = call i32 @strcmp(i8* %103, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %107, label %106

; <label>:106:                                    ; preds = %100
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %224

; <label>:107:                                    ; preds = %100
  %108 = sext i32 %.17 to i64
  %109 = getelementptr inbounds i8*, i8** %25, i64 %108
  %110 = load i8*, i8** %109, align 8
  %111 = call i32 @strcmp(i8* %110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %114, label %113

; <label>:113:                                    ; preds = %107
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %224

; <label>:114:                                    ; preds = %107
  %115 = sext i32 %.17 to i64
  %116 = getelementptr inbounds i8*, i8** %25, i64 %115
  %117 = load i8*, i8** %116, align 8
  %118 = call i32 @strcmp(i8* %117, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %126, label %120

; <label>:120:                                    ; preds = %114
  %121 = add nsw i32 %.17, 1
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8*, i8** %25, i64 %122
  %124 = load i8*, i8** %123, align 8
  %125 = call noalias i8* @strdup(i8* %124) #9, !track !178
  store i8* %125, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %224

; <label>:126:                                    ; preds = %114
  %127 = sext i32 %.17 to i64
  %128 = getelementptr inbounds i8*, i8** %25, i64 %127
  %129 = load i8*, i8** %128, align 8
  %130 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %131 = icmp ne i32 %130, 0
  br i1 %131, label %144, label %132

; <label>:132:                                    ; preds = %126
  %133 = add nsw i32 %.17, 1
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds i8*, i8** %25, i64 %134
  %136 = load i8*, i8** %135, align 8
  %137 = call i32 @conv_trick_conf(i8* %136)
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %139, label %224

; <label>:139:                                    ; preds = %132
  %140 = add nsw i32 %133, 1
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8*, i8** %25, i64 %141
  %143 = load i8*, i8** %142, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %143)
  call void @usage()
  br label %224

; <label>:144:                                    ; preds = %126
  %145 = sext i32 %.17 to i64
  %146 = getelementptr inbounds i8*, i8** %25, i64 %145
  %147 = load i8*, i8** %146, align 8
  %148 = call i32 @strcmp(i8* %147, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %163, label %150

; <label>:150:                                    ; preds = %144
  %151 = add nsw i32 %.17, 1
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8*, i8** %25, i64 %152
  %154 = load i8*, i8** %153, align 8
  %155 = call i32 @atoi(i8* %154) #8
  store i32 %155, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %156 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %224, label %158

; <label>:158:                                    ; preds = %150
  %159 = add nsw i32 %151, 1
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i8*, i8** %25, i64 %160
  %162 = load i8*, i8** %161, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %162)
  call void @usage()
  br label %224

; <label>:163:                                    ; preds = %144
  %164 = sext i32 %.17 to i64
  %165 = getelementptr inbounds i8*, i8** %25, i64 %164
  %166 = load i8*, i8** %165, align 8
  %167 = call i32 @strcmp(i8* %166, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %175, label %169

; <label>:169:                                    ; preds = %163
  %170 = add nsw i32 %.17, 1
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8*, i8** %25, i64 %171
  %173 = load i8*, i8** %172, align 8
  %174 = call noalias i8* @strdup(i8* %173) #9, !track !179
  store i8* %174, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %224

; <label>:175:                                    ; preds = %163
  %176 = sext i32 %.17 to i64
  %177 = getelementptr inbounds i8*, i8** %25, i64 %176
  %178 = load i8*, i8** %177, align 8
  %179 = call i32 @strcmp(i8* %178, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %187, label %181

; <label>:181:                                    ; preds = %175
  %182 = add nsw i32 %.17, 1
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8*, i8** %25, i64 %183
  %185 = load i8*, i8** %184, align 8
  %186 = call noalias i8* @strdup(i8* %185) #9, !track !180
  store i8* %186, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %224

; <label>:187:                                    ; preds = %175
  %188 = sext i32 %.17 to i64
  %189 = getelementptr inbounds i8*, i8** %25, i64 %188
  %190 = load i8*, i8** %189, align 8
  %191 = call i32 @strcmp(i8* %190, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %199, label %193

; <label>:193:                                    ; preds = %187
  %194 = add nsw i32 %.17, 1
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8*, i8** %25, i64 %195
  %197 = load i8*, i8** %196, align 8
  %198 = call noalias i8* @strdup(i8* %197) #9, !track !181
  store i8* %198, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %224

; <label>:199:                                    ; preds = %187
  %200 = sext i32 %.17 to i64
  %201 = getelementptr inbounds i8*, i8** %25, i64 %200
  %202 = load i8*, i8** %201, align 8
  %203 = call i32 @strcmp(i8* %202, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %204 = icmp ne i32 %203, 0
  br i1 %204, label %206, label %205

; <label>:205:                                    ; preds = %199
  call void @usage()
  br label %224

; <label>:206:                                    ; preds = %199
  %207 = sext i32 %.17 to i64
  %208 = getelementptr inbounds i8*, i8** %25, i64 %207
  %209 = load i8*, i8** %208, align 8
  %210 = call i32 @strcmp(i8* %209, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %211 = icmp ne i32 %210, 0
  br i1 %211, label %213, label %212

; <label>:212:                                    ; preds = %206
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %224

; <label>:213:                                    ; preds = %206
  %214 = sext i32 %.17 to i64
  %215 = getelementptr inbounds i8*, i8** %25, i64 %214
  %216 = load i8*, i8** %215, align 8
  %217 = call i32 @strcmp(i8* %216, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %218 = icmp ne i32 %217, 0
  br i1 %218, label %220, label %219

; <label>:219:                                    ; preds = %213
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %224

; <label>:220:                                    ; preds = %213
  %221 = sext i32 %.17 to i64
  %222 = getelementptr inbounds i8*, i8** %25, i64 %221
  %223 = load i8*, i8** %222, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %223)
  call void @usage()
  br label %224

; <label>:224:                                    ; preds = %220, %219, %212, %205, %193, %181, %169, %158, %150, %139, %132, %120, %113, %106, %99, %86, %79, %72
  %.15 = phi i32 [ %.17, %72 ], [ %.17, %79 ], [ %.17, %86 ], [ %.17, %99 ], [ %.17, %106 ], [ %.17, %113 ], [ %121, %120 ], [ %140, %139 ], [ %133, %132 ], [ %151, %150 ], [ %159, %158 ], [ %170, %169 ], [ %182, %181 ], [ %194, %193 ], [ %.17, %212 ], [ %.17, %220 ], [ %.17, %219 ], [ %.17, %205 ]
  %225 = add nsw i32 %.15, 1
  %226 = icmp slt i32 %225, 4, !track_argc !177
  br i1 %226, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %224
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %62
  %227 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %228 = load i32, i32* %227, align 4
  %229 = icmp sgt i32 %228, 0
  %230 = getelementptr [5 x i8], [5 x i8]* @.str.29.560, i32 0, i32 0
  br i1 %229, label %231, label %232

; <label>:231:                                    ; preds = %._crit_edge
  call void @openlog(i8* %230, i32 43, i32 24)
  br label %233

; <label>:232:                                    ; preds = %._crit_edge
  call void @openlog(i8* %230, i32 11, i32 24)
  br label %233

; <label>:233:                                    ; preds = %232, %231
  %234 = load i8*, i8** @version, align 8
  %235 = getelementptr [3 x i8], [3 x i8]* @.str.30.561, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %235, i8* %234)
  %236 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %237 = load i32, i32* %236, align 4
  %238 = icmp ne i32 %237, 0
  %239 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %240 = load i32, i32* %239, align 8
  %241 = icmp sgt i32 %240, 0
  br i1 %238, label %242, label %253

; <label>:242:                                    ; preds = %233
  br i1 %241, label %243, label %245

; <label>:243:                                    ; preds = %242
  %244 = call i32 @setlogmask(i32 15) #9
  br label %268

; <label>:245:                                    ; preds = %242
  %246 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %247 = load i32, i32* %246, align 8
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %251, label %249

; <label>:249:                                    ; preds = %245
  %250 = call i32 @setlogmask(i32 127) #9
  br label %268

; <label>:251:                                    ; preds = %245
  %252 = call i32 @setlogmask(i32 255) #9
  br label %268

; <label>:253:                                    ; preds = %233
  br i1 %241, label %254, label %256

; <label>:254:                                    ; preds = %253
  %255 = call i32 @setlogmask(i32 15) #9
  br label %268

; <label>:256:                                    ; preds = %253
  %257 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %258 = load i32, i32* %257, align 8
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %262, label %260

; <label>:260:                                    ; preds = %256
  %261 = call i32 @setlogmask(i32 31) #9
  br label %268

; <label>:262:                                    ; preds = %256
  %263 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %264 = load i32, i32* %263, align 8
  %265 = icmp slt i32 %264, 0
  br i1 %265, label %266, label %268

; <label>:266:                                    ; preds = %262
  %267 = call i32 @setlogmask(i32 127) #9
  br label %268

; <label>:268:                                    ; preds = %266, %262, %260, %254, %251, %249, %243
  %269 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %270 = load i8*, i8** %269, align 8
  %271 = icmp ne i8* %270, null
  br i1 %271, label %272, label %293

; <label>:272:                                    ; preds = %268
  %273 = call i16** @__ctype_b_loc() #10
  %274 = load i16*, i16** %273, align 8
  %275 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %276 = load i8*, i8** %275, align 8
  %277 = getelementptr inbounds i8, i8* %276, i64 0
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i16, i16* %274, i64 %280
  %282 = load i16, i16* %281, align 2
  %283 = zext i16 %282 to i32
  %284 = and i32 %283, 2048
  %285 = icmp ne i32 %284, 0
  %286 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %287 = load i8*, i8** %286, align 8
  br i1 %285, label %288, label %291

; <label>:288:                                    ; preds = %272
  %289 = call i32 @atoi(i8* %287) #8
  %290 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 %289, i32* %290, align 8
  br label %297

; <label>:291:                                    ; preds = %272
  %292 = call %struct.passwd* @getpwnam(i8* %287), !track !182
  br label %297

; <label>:293:                                    ; preds = %268
  %294 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %295 = load i32, i32* %294, align 8
  %296 = call %struct.passwd* @getpwuid(i32 %295), !track !183
  br label %297

; <label>:297:                                    ; preds = %293, %291, %288
  %.16 = phi %struct.passwd* [ %296, %293 ], [ null, %288 ], [ %292, %291 ]
  %298 = icmp ne %struct.passwd* %.16, null
  br i1 %298, label %299, label %325

; <label>:299:                                    ; preds = %297
  %300 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 0
  %301 = load i8*, i8** %300, align 8
  %302 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %303 = load i32, i32* %302, align 8
  %304 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 3
  %305 = load i32, i32* %304, align 4
  %306 = getelementptr [41 x i8], [41 x i8]* @.str.31.562, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %306, i8* %301, i32 %303, i32 %305)
  %307 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %308 = load i32, i32* %307, align 8
  %309 = icmp ne i32 %308, 0
  br i1 %309, label %310, label %321

; <label>:310:                                    ; preds = %299
  %311 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %312 = load i32, i32* %311, align 8
  %313 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %314 = load i32, i32* %313, align 8
  %315 = icmp ne i32 %312, %314
  br i1 %315, label %316, label %321

; <label>:316:                                    ; preds = %310
  %317 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %318 = load i8*, i8** %317, align 8
  %319 = getelementptr [43 x i8], [43 x i8]* @.str.32.563, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %319, i8* %318)
  %320 = call i32 @totd_exit(i32 1)
  br label %329

; <label>:321:                                    ; preds = %310, %299
  %322 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %323 = load i32, i32* %322, align 8
  %324 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 %323, i32* %324, align 8
  br label %329

; <label>:325:                                    ; preds = %297
  %326 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %327 = load i8*, i8** %326, align 8
  %328 = getelementptr [29 x i8], [29 x i8]* @.str.33.564, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %328, i8* %327)
  br label %329

; <label>:329:                                    ; preds = %325, %321, %316
  %330 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %331 = load i8*, i8** %330, align 8
  %332 = icmp ne i8* %331, null
  br i1 %332, label %333, label %364

; <label>:333:                                    ; preds = %329
  %334 = call i16** @__ctype_b_loc() #10
  %335 = load i16*, i16** %334, align 8
  %336 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %337 = load i8*, i8** %336, align 8
  %338 = getelementptr inbounds i8, i8* %337, i64 0
  %339 = load i8, i8* %338, align 1
  %340 = zext i8 %339 to i32
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i16, i16* %335, i64 %341
  %343 = load i16, i16* %342, align 2
  %344 = zext i16 %343 to i32
  %345 = and i32 %344, 2048
  %346 = icmp ne i32 %345, 0
  %347 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %348 = load i8*, i8** %347, align 8
  br i1 %346, label %349, label %352

; <label>:349:                                    ; preds = %333
  %350 = call i32 @atoi(i8* %348) #8
  %351 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %350, i32* %351, align 4
  br label %373

; <label>:352:                                    ; preds = %333
  %353 = call %struct.group* @getgrnam(i8* %348), !track !184
  %354 = icmp ne %struct.group* %353, null
  br i1 %354, label %360, label %355

; <label>:355:                                    ; preds = %352
  %356 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %357 = load i8*, i8** %356, align 8
  %358 = getelementptr [19 x i8], [19 x i8]* @.str.34.565, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %358, i8* %357)
  %359 = call i32 @totd_exit(i32 1)
  br label %360

; <label>:360:                                    ; preds = %355, %352
  %361 = getelementptr inbounds %struct.group, %struct.group* %353, i32 0, i32 2
  %362 = load i32, i32* %361, align 8
  %363 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %362, i32* %363, align 4
  br label %373

; <label>:364:                                    ; preds = %329
  %365 = icmp ne %struct.passwd* %.16, null
  br i1 %365, label %366, label %370

; <label>:366:                                    ; preds = %364
  %367 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 3
  %368 = load i32, i32* %367, align 4
  %369 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %368, i32* %369, align 4
  br label %373

; <label>:370:                                    ; preds = %364
  %371 = call i32 @getgid() #9
  %372 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %371, i32* %372, align 4
  br label %373

; <label>:373:                                    ; preds = %370, %366, %360, %349
  call void @endpwent()
  call void @endgrent()
  %374 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %375 = load i8*, i8** %374, align 8
  %376 = icmp ne i8* %375, null
  br i1 %376, label %377, label %397

; <label>:377:                                    ; preds = %373
  %378 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %379 = load i8*, i8** %378, align 8
  %380 = call i32 @chroot(i8* %379) #9
  %381 = icmp slt i32 %380, 0
  br i1 %381, label %382, label %387

; <label>:382:                                    ; preds = %377
  %383 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %384 = load i8*, i8** %383, align 8
  %385 = getelementptr [21 x i8], [21 x i8]* @.str.35.566, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %385, i8* %384)
  %386 = call i32 @totd_exit(i32 1)
  br label %387

; <label>:387:                                    ; preds = %382, %377
  %388 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %389 = load i8*, i8** %388, align 8
  %390 = getelementptr [15 x i8], [15 x i8]* @.str.36.567, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %390, i8* %389)
  %391 = getelementptr [2 x i8], [2 x i8]* @.str.37.568, i32 0, i32 0
  %392 = call i32 @chdir(i8* %391) #9
  %393 = icmp slt i32 %392, 0
  br i1 %393, label %394, label %397

; <label>:394:                                    ; preds = %387
  %395 = getelementptr [22 x i8], [22 x i8]* @.str.38.569, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %395)
  %396 = call i32 @totd_exit(i32 1)
  br label %397

; <label>:397:                                    ; preds = %394, %387, %373
  %398 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 0
  %399 = load i8*, i8** %398, align 8
  %400 = call i32 @read_config(i8* %399)
  %401 = icmp ne i32 %400, 0
  br i1 %401, label %402, label %406

; <label>:402:                                    ; preds = %397
  %403 = getelementptr [22 x i8], [22 x i8]* @.str.39.570, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %403)
  %404 = getelementptr [46 x i8], [46 x i8]* @.str.40.571, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %404)
  %405 = call i32 @totd_exit(i32 1)
  br label %406

; <label>:406:                                    ; preds = %402, %397
  %407 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %408 = load i32, i32* %407, align 4
  %409 = icmp eq i32 %408, 1
  br i1 %409, label %410, label %421

; <label>:410:                                    ; preds = %406
  %411 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %412 = load i32, i32* %411, align 8
  %413 = icmp ne i32 %412, 0
  br i1 %413, label %414, label %421

; <label>:414:                                    ; preds = %410
  %415 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %416 = load i32, i32* %415, align 8
  %417 = icmp slt i32 %416, 1024
  br i1 %417, label %418, label %421

; <label>:418:                                    ; preds = %414
  %419 = getelementptr [43 x i8], [43 x i8]* @.str.41.572, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %419)
  %420 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  store i32 0, i32* %420, align 4
  br label %421

; <label>:421:                                    ; preds = %418, %414, %410, %406
  %422 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %423 = load i8*, i8** %422, align 8
  %424 = icmp ne i8* %423, null
  br i1 %424, label %425, label %462

; <label>:425:                                    ; preds = %421
  %426 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %427 = load i8*, i8** %426, align 8
  %428 = getelementptr [2 x i8], [2 x i8]* @.str.42.573, i32 0, i32 0
  %429 = call %struct._IO_FILE* @fopen(i8* %427, i8* %428), !track !185
  %430 = icmp ne %struct._IO_FILE* %429, null
  br i1 %430, label %431, label %462

; <label>:431:                                    ; preds = %425
  %432 = getelementptr [3 x i8], [3 x i8]* @.str.43.574, i32 0, i32 0
  %433 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %429, i8* %432, i32* %27)
  %434 = icmp ne i32 %433, 1
  br i1 %434, label %435, label %440

; <label>:435:                                    ; preds = %431
  %436 = getelementptr [24 x i8], [24 x i8]* @.str.44.575, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %436)
  %437 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %438 = load i8*, i8** %437, align 8
  %439 = call i32 @unlink(i8* %438) #9
  br label %460

; <label>:440:                                    ; preds = %431
  %441 = load i32, i32* %27, align 4
  %442 = call i32 @kill(i32 %441, i32 0) #9
  %443 = icmp eq i32 %442, -1
  br i1 %443, label %444, label %451

; <label>:444:                                    ; preds = %440
  %445 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %446 = load i8*, i8** %445, align 8
  %447 = call i32 @unlink(i8* %446) #9
  %448 = icmp ne i32 %447, 0
  br i1 %448, label %451, label %449

; <label>:449:                                    ; preds = %444
  %450 = getelementptr [23 x i8], [23 x i8]* @.str.45.576, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %450)
  br label %460

; <label>:451:                                    ; preds = %444, %440
  %452 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %453 = load i8*, i8** %452, align 8
  %454 = getelementptr [27 x i8], [27 x i8]* @.str.46.577, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %454, i8* %453)
  %455 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %456 = load i8*, i8** %455, align 8
  %457 = getelementptr [124 x i8], [124 x i8]* @.str.47.578, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %457, i8* %456)
  %458 = call i32 @fclose(%struct._IO_FILE* %429)
  %459 = call i32 @totd_exit(i32 1)
  br label %460

; <label>:460:                                    ; preds = %451, %449, %435
  %461 = call i32 @fclose(%struct._IO_FILE* %429)
  br label %462

; <label>:462:                                    ; preds = %460, %425, %421
  %463 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %464 = load i32, i32* %463, align 4
  %465 = icmp ne i32 %464, 0
  br i1 %465, label %474, label %466

; <label>:466:                                    ; preds = %462
  %467 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %468 = load i32, i32* %467, align 8
  %469 = icmp ne i32 %468, 0
  br i1 %469, label %470, label %474

; <label>:470:                                    ; preds = %466
  %471 = getelementptr [81 x i8], [81 x i8]* @.str.48.579, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %471)
  %472 = getelementptr [101 x i8], [101 x i8]* @.str.49.580, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %472)
  %473 = call i32 @totd_exit(i32 1)
  br label %474

; <label>:474:                                    ; preds = %470, %466, %462
  %475 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %476 = load i32, i32* %475, align 4
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %478, label %493

; <label>:478:                                    ; preds = %474
  %479 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %480 = load i32, i32* %479, align 8
  %481 = icmp ne i32 %480, 0
  br i1 %481, label %482, label %493

; <label>:482:                                    ; preds = %478
  %483 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  %484 = load i32, i32* %483, align 8
  %485 = icmp ne i32 %484, 0
  br i1 %485, label %490, label %486

; <label>:486:                                    ; preds = %482
  %487 = getelementptr [66 x i8], [66 x i8]* @.str.50.581, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %487)
  %488 = getelementptr [62 x i8], [62 x i8]* @.str.51.582, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %488)
  %489 = call i32 @totd_exit(i32 1)
  br label %490

; <label>:490:                                    ; preds = %486, %482
  %491 = getelementptr [78 x i8], [78 x i8]* @.str.52.583, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %491)
  %492 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  store i32 1, i32* %492, align 4
  br label %493

; <label>:493:                                    ; preds = %490, %478, %474
  %494 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %495 = load i32, i32* %494, align 4
  %496 = icmp ne i32 %495, 0
  br i1 %496, label %497, label %499

; <label>:497:                                    ; preds = %493
  %498 = getelementptr [15 x i8], [15 x i8]* @.str.53.584, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %498)
  br label %499

; <label>:499:                                    ; preds = %497, %493
  %500 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %501 = load i32, i32* %500, align 8
  %502 = icmp ne i32 %501, 0
  br i1 %502, label %503, label %505

; <label>:503:                                    ; preds = %499
  %504 = getelementptr [15 x i8], [15 x i8]* @.str.54.585, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %504)
  br label %505

; <label>:505:                                    ; preds = %503, %499
  %506 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %507 = load i32, i32* %506, align 4
  %508 = icmp ne i32 %507, 0
  br i1 %508, label %516, label %509

; <label>:509:                                    ; preds = %505
  %510 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %511 = load i32, i32* %510, align 8
  %512 = icmp ne i32 %511, 0
  br i1 %512, label %516, label %513

; <label>:513:                                    ; preds = %509
  %514 = getelementptr [73 x i8], [73 x i8]* @.str.55.586, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %514)
  %515 = call i32 @totd_exit(i32 1)
  br label %516

; <label>:516:                                    ; preds = %513, %509, %505
  %517 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  %518 = load i32, i32* %517, align 8
  %519 = icmp ne i32 %518, 0
  br i1 %519, label %520, label %527

; <label>:520:                                    ; preds = %516
  %521 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %522 = load i32, i32* %521, align 8
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %524, label %527

; <label>:524:                                    ; preds = %520
  %525 = getelementptr [162 x i8], [162 x i8]* @.str.56.587, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %525)
  %526 = call i32 @totd_exit(i32 1)
  br label %527

; <label>:527:                                    ; preds = %524, %520, %516
  call void @fwd_init()
  call void @fwd_select()
  %528 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %529 = load %struct.generic_list*, %struct.generic_list** %528, align 8
  %530 = icmp ne %struct.generic_list* %529, null
  br i1 %530, label %533, label %531

; <label>:531:                                    ; preds = %527
  %532 = getelementptr [48 x i8], [48 x i8]* @.str.57.588, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %532)
  br label %651

; <label>:533:                                    ; preds = %527
  call void @ev_dup_init()
  %534 = call i32 @ev_signal_init()
  %535 = icmp slt i32 %534, 0
  br i1 %535, label %536, label %539

; <label>:536:                                    ; preds = %533
  %537 = getelementptr [41 x i8], [41 x i8]* @.str.58.589, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %537)
  %538 = call i32 @totd_exit(i32 1)
  br label %539

; <label>:539:                                    ; preds = %536, %533
  %540 = call i32 @ev_to_init()
  %541 = icmp slt i32 %540, 0
  br i1 %541, label %542, label %545

; <label>:542:                                    ; preds = %539
  %543 = getelementptr [41 x i8], [41 x i8]* @.str.59.590, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %543)
  %544 = call i32 @totd_exit(i32 1)
  br label %545

; <label>:545:                                    ; preds = %542, %539
  %546 = call i32 @ev_tcp_conn_in_init()
  %547 = icmp slt i32 %546, 0
  br i1 %547, label %548, label %551

; <label>:548:                                    ; preds = %545
  %549 = getelementptr [33 x i8], [33 x i8]* @.str.60.591, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %549)
  %550 = call i32 @totd_exit(i32 1)
  br label %551

; <label>:551:                                    ; preds = %548, %545
  %552 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %553 = load i32, i32* %552, align 8
  %554 = call i32 @net_init_socketlist(i32 %553)
  %555 = icmp slt i32 %554, 0
  br i1 %555, label %556, label %559

; <label>:556:                                    ; preds = %551
  %557 = getelementptr [28 x i8], [28 x i8]* @.str.61.592, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %557)
  %558 = call i32 @totd_exit(i32 1)
  br label %559

; <label>:559:                                    ; preds = %556, %551
  %560 = call i32 @net_bind_socketlist()
  %561 = icmp sle i32 %560, 0
  br i1 %561, label %562, label %571

; <label>:562:                                    ; preds = %559
  %563 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %564 = load i32, i32* %563, align 4
  %565 = icmp ne i32 %564, 0
  %566 = getelementptr [27 x i8], [27 x i8]* @.str.62.593, i32 0, i32 0
  br i1 %565, label %569, label %567

; <label>:567:                                    ; preds = %562
  call void (i32, i8*, ...) @syslog(i32 3, i8* %566)
  %568 = call i32 @totd_exit(i32 1)
  br label %571

; <label>:569:                                    ; preds = %562
  call void (i32, i8*, ...) @syslog(i32 4, i8* %566)
  %570 = getelementptr [26 x i8], [26 x i8]* @.str.63.594, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %570)
  br label %571

; <label>:571:                                    ; preds = %569, %567, %559
  %572 = call i32 @ev_udp_in_init()
  %573 = icmp slt i32 %572, 0
  br i1 %573, label %574, label %577

; <label>:574:                                    ; preds = %571
  %575 = getelementptr [22 x i8], [22 x i8]* @.str.64, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %575)
  %576 = call i32 @totd_exit(i32 1)
  br label %577

; <label>:577:                                    ; preds = %574, %571
  %578 = call i32 @ev_tcp_out_init()
  %579 = icmp slt i32 %578, 0
  br i1 %579, label %580, label %583

; <label>:580:                                    ; preds = %577
  %581 = getelementptr [37 x i8], [37 x i8]* @.str.65.595, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %581)
  %582 = call i32 @totd_exit(i32 1)
  br label %583

; <label>:583:                                    ; preds = %580, %577
  %584 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  %585 = load i32, i32* %584, align 4
  %586 = call i32 @setgid(i32 %585) #9
  %587 = icmp slt i32 %586, 0
  br i1 %587, label %588, label %593

; <label>:588:                                    ; preds = %583
  %589 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  %590 = load i32, i32* %589, align 4
  %591 = getelementptr [20 x i8], [20 x i8]* @.str.66, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %591, i32 %590)
  %592 = call i32 @totd_exit(i32 1)
  br label %593

; <label>:593:                                    ; preds = %588, %583
  %594 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %595 = load i32, i32* %594, align 8
  %596 = call i32 @setuid(i32 %595) #9
  %597 = icmp slt i32 %596, 0
  br i1 %597, label %598, label %603

; <label>:598:                                    ; preds = %593
  %599 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %600 = load i32, i32* %599, align 8
  %601 = getelementptr [20 x i8], [20 x i8]* @.str.67, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %601, i32 %600)
  %602 = call i32 @totd_exit(i32 1)
  br label %603

; <label>:603:                                    ; preds = %598, %593
  %604 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %605 = load i32, i32* %604, align 4
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %607, label %613

; <label>:607:                                    ; preds = %603
  %608 = call i32 @ev_to_register_ifcheck()
  %609 = icmp slt i32 %608, 0
  br i1 %609, label %610, label %613

; <label>:610:                                    ; preds = %607
  %611 = getelementptr [41 x i8], [41 x i8]* @.str.68, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %611)
  %612 = call i32 @totd_exit(i32 1)
  br label %613

; <label>:613:                                    ; preds = %610, %607, %603
  %614 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %615 = load i32, i32* %614, align 4
  %616 = icmp ne i32 %615, 0
  br i1 %616, label %624, label %617

; <label>:617:                                    ; preds = %613
  %618 = call i32 @daemon(i32 0, i32 0) #9
  %619 = icmp ne i32 %618, 0
  br i1 %619, label %620, label %622

; <label>:620:                                    ; preds = %617
  %621 = call i32 @totd_exit(i32 1)
  br label %624

; <label>:622:                                    ; preds = %617
  %623 = getelementptr [29 x i8], [29 x i8]* @.str.69, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %623)
  br label %624

; <label>:624:                                    ; preds = %622, %620, %613
  %625 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %626 = load i8*, i8** %625, align 8
  %627 = icmp ne i8* %626, null
  br i1 %627, label %628, label %648

; <label>:628:                                    ; preds = %624
  %629 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %630 = load i8*, i8** %629, align 8
  %631 = getelementptr [2 x i8], [2 x i8]* @.str.70, i32 0, i32 0
  %632 = call %struct._IO_FILE* @fopen(i8* %630, i8* %631), !track !186
  %633 = icmp ne %struct._IO_FILE* %632, null
  br i1 %633, label %639, label %634

; <label>:634:                                    ; preds = %628
  %635 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %636 = load i8*, i8** %635, align 8
  %637 = getelementptr [25 x i8], [25 x i8]* @.str.71, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %637, i8* %636)
  %638 = call i32 @totd_exit(i32 1)
  br label %639

; <label>:639:                                    ; preds = %634, %628
  %640 = call i32 @getpid() #9
  %641 = getelementptr [3 x i8], [3 x i8]* @.str.43.574, i32 0, i32 0
  %642 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %632, i8* %641, i32 %640)
  %643 = call i32 @getpid() #9
  %644 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %645 = load i8*, i8** %644, align 8
  %646 = getelementptr [24 x i8], [24 x i8]* @.str.72, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %646, i32 %643, i8* %645)
  %647 = call i32 @fclose(%struct._IO_FILE* %632)
  br label %648

; <label>:648:                                    ; preds = %639, %624
  %649 = getelementptr [13 x i8], [13 x i8]* @.str.73, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %649)
  call void @totd_eventloop()
  %650 = call i32 @totd_exit(i32 0)
  br label %651

; <label>:651:                                    ; preds = %648, %531
  %.0 = phi i32 [ %650, %648 ], [ -1, %531 ]
  ret i32 %.0

; <label>:652:                                    ; preds = %53
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 1, i64 0), align 1
  br i1 true, label %653, label %54

; <label>:653:                                    ; preds = %652
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 2, i64 0), align 1
  br i1 true, label %654, label %54

; <label>:654:                                    ; preds = %653
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 3, i64 0), align 1
  br i1 true, label %655, label %54

; <label>:655:                                    ; preds = %654
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 4, i64 0), align 1
  br i1 true, label %656, label %54

; <label>:656:                                    ; preds = %655
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 5, i64 0), align 1
  br i1 true, label %657, label %54

; <label>:657:                                    ; preds = %656
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 6, i64 0), align 1
  br i1 true, label %658, label %54

; <label>:658:                                    ; preds = %657
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 7, i64 0), align 1
  br i1 true, label %659, label %54

; <label>:659:                                    ; preds = %658
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 8, i64 0), align 1
  br i1 true, label %660, label %54

; <label>:660:                                    ; preds = %659
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 9, i64 0), align 1
  br i1 true, label %661, label %54

; <label>:661:                                    ; preds = %660
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 10, i64 0), align 1
  br i1 true, label %662, label %54

; <label>:662:                                    ; preds = %661
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 11, i64 0), align 1
  br i1 true, label %663, label %54

; <label>:663:                                    ; preds = %662
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 12, i64 0), align 1
  br i1 true, label %664, label %54

; <label>:664:                                    ; preds = %663
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 13, i64 0), align 1
  br i1 true, label %665, label %54

; <label>:665:                                    ; preds = %664
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 14, i64 0), align 1
  br i1 true, label %666, label %54

; <label>:666:                                    ; preds = %665
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 15, i64 0), align 1
  br i1 true, label %667, label %54

; <label>:667:                                    ; preds = %666
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 16, i64 0), align 1
  br i1 true, label %668, label %54

; <label>:668:                                    ; preds = %667
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 17, i64 0), align 1
  br i1 true, label %669, label %54

; <label>:669:                                    ; preds = %668
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 18, i64 0), align 1
  br i1 true, label %670, label %54

; <label>:670:                                    ; preds = %669
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 19, i64 0), align 1
  br i1 true, label %671, label %54

; <label>:671:                                    ; preds = %670
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 20, i64 0), align 1
  br i1 true, label %672, label %54

; <label>:672:                                    ; preds = %671
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 21, i64 0), align 1
  br i1 true, label %673, label %54

; <label>:673:                                    ; preds = %672
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 22, i64 0), align 1
  br i1 true, label %674, label %54

; <label>:674:                                    ; preds = %673
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 23, i64 0), align 1
  br i1 true, label %675, label %54

; <label>:675:                                    ; preds = %674
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 24, i64 0), align 1
  br i1 true, label %676, label %54

; <label>:676:                                    ; preds = %675
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 25, i64 0), align 1
  br i1 true, label %677, label %54

; <label>:677:                                    ; preds = %676
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 26, i64 0), align 1
  br i1 true, label %678, label %54

; <label>:678:                                    ; preds = %677
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 27, i64 0), align 1
  br i1 true, label %679, label %54

; <label>:679:                                    ; preds = %678
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 28, i64 0), align 1
  br i1 true, label %680, label %54

; <label>:680:                                    ; preds = %679
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 29, i64 0), align 1
  br label %54
}

declare void @__loop_termination_test___0()

declare void @__loop_iteration_test___0()

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.generic_list* @list_init_clone() #6 {
  %1 = call noalias i8* @malloc(i64 24) #9, !track !116
  %2 = bitcast i8* %1 to %struct.generic_list*
  %3 = icmp ne i64 10000508, 0
  %4 = icmp ne %struct.generic_list* %2, null
  br i1 true, label %5, label %9

; <label>:5:                                      ; preds = %0
  %6 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %2, i32 0, i32 0
  store %struct.generic_list* %2, %struct.generic_list** %6, align 8
  %7 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %2, i32 0, i32 1
  store %struct.generic_list* %2, %struct.generic_list** %7, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %2, i32 0, i32 2
  store i8* null, i8** %8, align 8
  br label %9

; <label>:9:                                      ; preds = %5, %0
  %10 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp sgt i32 0, 4
  br i1 false, label %13, label %17

; <label>:13:                                     ; preds = %9
  %14 = bitcast %struct.generic_list* %2 to i8*
  %15 = getelementptr [17 x i8], [17 x i8]* @.str.1.312, i32 0, i32 0
  %16 = getelementptr [12 x i8], [12 x i8]* @.str.311, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %15, i8* %16, i8* %14)
  br label %17

; <label>:17:                                     ; preds = %13, %9
  ret %struct.generic_list* %2
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 40)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 4
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 2
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 13
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  %22 = call i8* @malloc(i64 100)
  store i8* %22, i8** %21
  %23 = load i8*, i8** %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @3, i32 0, i32 0), i64 100, i1 false)
  %24 = getelementptr i8, i8* %23, i32 3
  store i8 0, i8* %24
  %25 = load i8**, i8*** @__argv_new__
  %26 = getelementptr i8*, i8** %25, i32 4
  store i8* null, i8** %26
  %27 = alloca i32, align 4, !track !176
  %28 = call i32 @getuid() #9
  %29 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 0, i32* %29, align 8
  %30 = call i32 @getgid() #9
  %31 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 0, i32* %31, align 4
  %32 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  store i8* null, i8** %32, align 8
  %33 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  store i8* null, i8** %33, align 8
  %34 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  store i8* null, i8** %34, align 8
  %35 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  store i32 1, i32* %35, align 4
  %36 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  store i32 1, i32* %36, align 8
  %37 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  store i32 0, i32* %37, align 4
  %38 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  store i32 0, i32* %38, align 8
  %39 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  store i32 0, i32* %39, align 4
  %40 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 19
  store i32 0, i32* %40, align 8
  %41 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  store i32 1, i32* %41, align 4
  %42 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 16
  store i32 0, i32* %42, align 4
  %43 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 10
  store i32 300, i32* %43, align 4
  %44 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  store i32 53, i32* %44, align 8
  %45 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 11
  store i32 0, i32* %45, align 8
  %46 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  store i32 1, i32* %46, align 8
  %47 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  store %struct.generic_list* null, %struct.generic_list** %47, align 8
  %48 = getelementptr [18 x i8], [18 x i8]* @.str.8.539, i32 0, i32 0
  %49 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  store i8* %48, i8** %49, align 8
  %50 = getelementptr [25 x i8], [25 x i8]* @.str.2.534, i32 0, i32 0
  %51 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  store %struct.generic_list* null, %struct.generic_list** %52, align 8
  br label %53

; <label>:53:                                     ; preds = %2
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 0, i64 0), align 1
  br i1 true, label %641, label %54

; <label>:54:                                     ; preds = %669, %668, %667, %666, %665, %664, %663, %662, %661, %660, %659, %658, %657, %656, %655, %654, %653, %652, %651, %650, %649, %648, %647, %646, %645, %644, %643, %642, %641, %53
  call void @__loop_termination_test___0()
  %55 = call %struct.generic_list* @list_init_clone()
  %56 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  store %struct.generic_list* %55, %struct.generic_list** %56, align 8
  %57 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %58 = load %struct.generic_list*, %struct.generic_list** %57, align 8
  %59 = icmp ne i64 10000508, 0
  %60 = icmp ne %struct.generic_list* %58, null
  br i1 true, label %62, label %61

; <label>:61:                                     ; preds = %54
  call void @exit(i32 1) #11
  unreachable

; <label>:62:                                     ; preds = %54
  %63 = icmp slt i32 1, 4, !track_argc !177
  br i1 true, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %62
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 89)
  %64 = getelementptr inbounds i8*, i8** %25, i64 1
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr [3 x i8], [3 x i8]* @4, i64 0, i64 0
  %67 = getelementptr [3 x i8], [3 x i8]* @5, i64 0, i64 0
  %68 = call i32 @strncmp(i8* %66, i8* %67, i64 2) #8
  %69 = icmp ne i32 -1, 0
  %70 = getelementptr inbounds i8*, i8** %25, i64 1
  %71 = load i8*, i8** %70, align 8
  br i1 true, label %76, label %72

; <label>:72:                                     ; preds = %.lr.ph
  %73 = getelementptr inbounds i8, i8* %71, i64 2
  %74 = call i32 @atoi(i8* %73) #8
  store i32 %74, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %75 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %75)
  br label %207

; <label>:76:                                     ; preds = %.lr.ph
  %77 = getelementptr [3 x i8], [3 x i8]* @6, i64 0, i64 0
  %78 = getelementptr [3 x i8], [3 x i8]* @7, i64 0, i64 0
  %79 = call i32 @strcmp(i8* %77, i8* %78) #8
  %80 = icmp ne i32 1, 0
  br i1 true, label %82, label %81

; <label>:81:                                     ; preds = %76
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %207

; <label>:82:                                     ; preds = %76
  %83 = getelementptr inbounds i8*, i8** %25, i64 1
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr [3 x i8], [3 x i8]* @8, i64 0, i64 0
  %86 = getelementptr [3 x i8], [3 x i8]* @9, i64 0, i64 0
  %87 = call i32 @strcmp(i8* %85, i8* %86) #8
  %88 = icmp ne i32 1, 0
  br i1 true, label %90, label %89

; <label>:89:                                     ; preds = %82
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %207

; <label>:90:                                     ; preds = %82
  %91 = getelementptr inbounds i8*, i8** %25, i64 1
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr [3 x i8], [3 x i8]* @10, i64 0, i64 0
  %94 = getelementptr [4 x i8], [4 x i8]* @11, i64 0, i64 0
  %95 = call i32 @strcmp(i8* %93, i8* %94) #8
  %96 = icmp ne i32 1, 0
  br i1 true, label %97, label %104

; <label>:97:                                     ; preds = %90
  %98 = getelementptr inbounds i8*, i8** %25, i64 1
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr [3 x i8], [3 x i8]* @12, i64 0, i64 0
  %101 = getelementptr [4 x i8], [4 x i8]* @13, i64 0, i64 0
  %102 = call i32 @strcmp(i8* %100, i8* %101) #8
  %103 = icmp ne i32 1, 0
  br i1 true, label %105, label %104

; <label>:104:                                    ; preds = %97, %90
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %207

; <label>:105:                                    ; preds = %97
  %106 = getelementptr inbounds i8*, i8** %25, i64 1
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr [3 x i8], [3 x i8]* @14, i64 0, i64 0
  %109 = getelementptr [5 x i8], [5 x i8]* @15, i64 0, i64 0
  %110 = call i32 @strcmp(i8* %108, i8* %109) #8
  %111 = icmp ne i32 -1, 0
  br i1 true, label %113, label %112

; <label>:112:                                    ; preds = %105
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %207

; <label>:113:                                    ; preds = %105
  %114 = getelementptr inbounds i8*, i8** %25, i64 1
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr [3 x i8], [3 x i8]* @16, i64 0, i64 0
  %117 = getelementptr [5 x i8], [5 x i8]* @17, i64 0, i64 0
  %118 = call i32 @strcmp(i8* %116, i8* %117) #8
  %119 = icmp ne i32 -1, 0
  br i1 true, label %121, label %120

; <label>:120:                                    ; preds = %113
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %207

; <label>:121:                                    ; preds = %113
  %122 = getelementptr inbounds i8*, i8** %25, i64 1
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr [3 x i8], [3 x i8]* @18, i64 0, i64 0
  %125 = getelementptr [3 x i8], [3 x i8]* @19, i64 0, i64 0
  %126 = call i32 @strcmp(i8* %124, i8* %125) #8
  %127 = icmp ne i32 0, 0
  br i1 false, label %132, label %128

; <label>:128:                                    ; preds = %121
  %129 = getelementptr inbounds i8*, i8** %25, i64 2
  %130 = load i8*, i8** %129, align 8
  %131 = call noalias i8* @strdup(i8* %130) #9, !track !178
  store i8* %131, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %207

; <label>:132:                                    ; preds = %121
  %133 = getelementptr inbounds i8*, i8** %25, i64 1
  %134 = load i8*, i8** %133, align 8
  %135 = call i32 @strcmp(i8* %134, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %145, label %137

; <label>:137:                                    ; preds = %132
  %138 = getelementptr inbounds i8*, i8** %25, i64 2
  %139 = load i8*, i8** %138, align 8
  %140 = call i32 @conv_trick_conf(i8* %139)
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %142, label %207

; <label>:142:                                    ; preds = %137
  %143 = getelementptr inbounds i8*, i8** %25, i64 3
  %144 = load i8*, i8** %143, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %144)
  call void @usage()
  br label %207

; <label>:145:                                    ; preds = %132
  %146 = getelementptr inbounds i8*, i8** %25, i64 1
  %147 = load i8*, i8** %146, align 8
  %148 = call i32 @strcmp(i8* %147, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %159, label %150

; <label>:150:                                    ; preds = %145
  %151 = getelementptr inbounds i8*, i8** %25, i64 2
  %152 = load i8*, i8** %151, align 8
  %153 = call i32 @atoi(i8* %152) #8
  store i32 %153, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %154 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %207, label %156

; <label>:156:                                    ; preds = %150
  %157 = getelementptr inbounds i8*, i8** %25, i64 3
  %158 = load i8*, i8** %157, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %158)
  call void @usage()
  br label %207

; <label>:159:                                    ; preds = %145
  %160 = getelementptr inbounds i8*, i8** %25, i64 1
  %161 = load i8*, i8** %160, align 8
  %162 = call i32 @strcmp(i8* %161, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %168, label %164

; <label>:164:                                    ; preds = %159
  %165 = getelementptr inbounds i8*, i8** %25, i64 2
  %166 = load i8*, i8** %165, align 8
  %167 = call noalias i8* @strdup(i8* %166) #9, !track !179
  store i8* %167, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %207

; <label>:168:                                    ; preds = %159
  %169 = getelementptr inbounds i8*, i8** %25, i64 1
  %170 = load i8*, i8** %169, align 8
  %171 = call i32 @strcmp(i8* %170, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %177, label %173

; <label>:173:                                    ; preds = %168
  %174 = getelementptr inbounds i8*, i8** %25, i64 2
  %175 = load i8*, i8** %174, align 8
  %176 = call noalias i8* @strdup(i8* %175) #9, !track !180
  store i8* %176, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %207

; <label>:177:                                    ; preds = %168
  %178 = getelementptr inbounds i8*, i8** %25, i64 1
  %179 = load i8*, i8** %178, align 8
  %180 = call i32 @strcmp(i8* %179, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %186, label %182

; <label>:182:                                    ; preds = %177
  %183 = getelementptr inbounds i8*, i8** %25, i64 2
  %184 = load i8*, i8** %183, align 8
  %185 = call noalias i8* @strdup(i8* %184) #9, !track !181
  store i8* %185, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %207

; <label>:186:                                    ; preds = %177
  %187 = getelementptr inbounds i8*, i8** %25, i64 1
  %188 = load i8*, i8** %187, align 8
  %189 = call i32 @strcmp(i8* %188, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %192, label %191

; <label>:191:                                    ; preds = %186
  call void @usage()
  br label %207

; <label>:192:                                    ; preds = %186
  %193 = getelementptr inbounds i8*, i8** %25, i64 1
  %194 = load i8*, i8** %193, align 8
  %195 = call i32 @strcmp(i8* %194, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %198, label %197

; <label>:197:                                    ; preds = %192
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %207

; <label>:198:                                    ; preds = %192
  %199 = getelementptr inbounds i8*, i8** %25, i64 1
  %200 = load i8*, i8** %199, align 8
  %201 = call i32 @strcmp(i8* %200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %204, label %203

; <label>:203:                                    ; preds = %198
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %207

; <label>:204:                                    ; preds = %198
  %205 = getelementptr inbounds i8*, i8** %25, i64 1
  %206 = load i8*, i8** %205, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %206)
  call void @usage()
  br label %207

; <label>:207:                                    ; preds = %204, %203, %197, %191, %182, %173, %164, %156, %150, %142, %137, %128, %120, %112, %104, %89, %81, %72
  %.15 = phi i32 [ 1, %72 ], [ 1, %81 ], [ 1, %89 ], [ 1, %104 ], [ 1, %112 ], [ 1, %120 ], [ 2, %128 ], [ 3, %142 ], [ 2, %137 ], [ 2, %150 ], [ 3, %156 ], [ 2, %164 ], [ 2, %173 ], [ 2, %182 ], [ 1, %197 ], [ 1, %204 ], [ 1, %203 ], [ 1, %191 ]
  call void @__loop_iteration_test___1()
  %208 = add nsw i32 2, 1
  %209 = icmp slt i32 3, 4, !track_argc !177
  br i1 true, label %.lr.ph.1, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %3766, %3603, %3440, %3277, %3114, %2951, %2788, %2625, %2462, %2299, %2136, %1973, %1810, %1647, %1484, %1321, %1158, %995, %832, %207
  call void @__loop_termination_test___1()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %62
  %210 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %211 = load i32, i32* %210, align 4
  %212 = icmp sgt i32 2, 0
  %213 = getelementptr [5 x i8], [5 x i8]* @.str.29.560, i32 0, i32 0
  br i1 true, label %214, label %215

; <label>:214:                                    ; preds = %._crit_edge
  call void @openlog(i8* %213, i32 43, i32 24)
  br label %216

; <label>:215:                                    ; preds = %._crit_edge
  call void @openlog(i8* %213, i32 11, i32 24)
  br label %216

; <label>:216:                                    ; preds = %215, %214
  %217 = load i8*, i8** @version, align 8
  %218 = getelementptr [3 x i8], [3 x i8]* @.str.30.561, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %218, i8* %217)
  %219 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %220 = load i32, i32* %219, align 4
  %221 = icmp ne i32 2, 0
  %222 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %223 = load i32, i32* %222, align 8
  %224 = icmp sgt i32 0, 0
  br i1 true, label %225, label %236

; <label>:225:                                    ; preds = %216
  br i1 false, label %226, label %228

; <label>:226:                                    ; preds = %225
  %227 = call i32 @setlogmask(i32 15) #9
  br label %251

; <label>:228:                                    ; preds = %225
  %229 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %230 = load i32, i32* %229, align 8
  %231 = icmp ne i32 0, 0
  br i1 false, label %234, label %232

; <label>:232:                                    ; preds = %228
  %233 = call i32 @setlogmask(i32 127) #9
  br label %251

; <label>:234:                                    ; preds = %228
  %235 = call i32 @setlogmask(i32 255) #9
  br label %251

; <label>:236:                                    ; preds = %216
  br i1 false, label %237, label %239

; <label>:237:                                    ; preds = %236
  %238 = call i32 @setlogmask(i32 15) #9
  br label %251

; <label>:239:                                    ; preds = %236
  %240 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %241 = load i32, i32* %240, align 8
  %242 = icmp ne i32 %241, 0
  br i1 %242, label %245, label %243

; <label>:243:                                    ; preds = %239
  %244 = call i32 @setlogmask(i32 31) #9
  br label %251

; <label>:245:                                    ; preds = %239
  %246 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 7
  %247 = load i32, i32* %246, align 8
  %248 = icmp slt i32 %247, 0
  br i1 %248, label %249, label %251

; <label>:249:                                    ; preds = %245
  %250 = call i32 @setlogmask(i32 127) #9
  br label %251

; <label>:251:                                    ; preds = %249, %245, %243, %237, %234, %232, %226
  %252 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %253 = load i8*, i8** %252, align 8
  %254 = icmp ne i64 0, 0
  %255 = icmp ne i8* null, null
  br i1 false, label %256, label %277

; <label>:256:                                    ; preds = %251
  %257 = call i16** @__ctype_b_loc() #10
  %258 = load i16*, i16** %257, align 8
  %259 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %260 = load i8*, i8** %259, align 8
  %261 = getelementptr inbounds i8, i8* %260, i64 0
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i16, i16* %258, i64 %264
  %266 = load i16, i16* %265, align 2
  %267 = zext i16 %266 to i32
  %268 = and i32 %267, 2048
  %269 = icmp ne i32 %268, 0
  %270 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %271 = load i8*, i8** %270, align 8
  br i1 %269, label %272, label %275

; <label>:272:                                    ; preds = %256
  %273 = call i32 @atoi(i8* %271) #8
  %274 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 %273, i32* %274, align 8
  br label %281

; <label>:275:                                    ; preds = %256
  %276 = call %struct.passwd* @getpwnam(i8* %271), !track !182
  br label %281

; <label>:277:                                    ; preds = %251
  %278 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %279 = load i32, i32* %278, align 8
  %280 = call %struct.passwd* @getpwuid(i32 0), !track !183
  br label %281

; <label>:281:                                    ; preds = %277, %275, %272
  %.16 = phi %struct.passwd* [ %280, %277 ], [ null, %272 ], [ %276, %275 ]
  %282 = icmp ne i64 244180, 0
  %283 = icmp ne %struct.passwd* %.16, null
  br i1 true, label %284, label %310

; <label>:284:                                    ; preds = %281
  %285 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 0
  %286 = load i8*, i8** %285, align 8
  %287 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %288 = load i32, i32* %287, align 8
  %289 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 3
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr [41 x i8], [41 x i8]* @.str.31.562, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %291, i8* %286, i32 0, i32 0)
  %292 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %293 = load i32, i32* %292, align 8
  %294 = icmp ne i32 0, 0
  br i1 false, label %295, label %306

; <label>:295:                                    ; preds = %284
  %296 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %297 = load i32, i32* %296, align 8
  %298 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %299 = load i32, i32* %298, align 8
  %300 = icmp ne i32 %297, %299
  br i1 %300, label %301, label %306

; <label>:301:                                    ; preds = %295
  %302 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %303 = load i8*, i8** %302, align 8
  %304 = getelementptr [43 x i8], [43 x i8]* @.str.32.563, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %304, i8* %303)
  %305 = call i32 @totd_exit(i32 1)
  br label %314

; <label>:306:                                    ; preds = %295, %284
  %307 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 2
  %308 = load i32, i32* %307, align 8
  %309 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  store i32 0, i32* %309, align 8
  br label %314

; <label>:310:                                    ; preds = %281
  %311 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 2
  %312 = load i8*, i8** %311, align 8
  %313 = getelementptr [29 x i8], [29 x i8]* @.str.33.564, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %313, i8* %312)
  br label %314

; <label>:314:                                    ; preds = %310, %306, %301
  %315 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %316 = load i8*, i8** %315, align 8
  %317 = icmp ne i64 0, 0
  %318 = icmp ne i8* null, null
  br i1 false, label %319, label %350

; <label>:319:                                    ; preds = %314
  %320 = call i16** @__ctype_b_loc() #10
  %321 = load i16*, i16** %320, align 8
  %322 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %323 = load i8*, i8** %322, align 8
  %324 = getelementptr inbounds i8, i8* %323, i64 0
  %325 = load i8, i8* %324, align 1
  %326 = zext i8 %325 to i32
  %327 = sext i32 %326 to i64
  %328 = getelementptr inbounds i16, i16* %321, i64 %327
  %329 = load i16, i16* %328, align 2
  %330 = zext i16 %329 to i32
  %331 = and i32 %330, 2048
  %332 = icmp ne i32 %331, 0
  %333 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %334 = load i8*, i8** %333, align 8
  br i1 %332, label %335, label %338

; <label>:335:                                    ; preds = %319
  %336 = call i32 @atoi(i8* %334) #8
  %337 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %336, i32* %337, align 4
  br label %360

; <label>:338:                                    ; preds = %319
  %339 = call %struct.group* @getgrnam(i8* %334), !track !184
  %340 = icmp ne %struct.group* %339, null
  br i1 %340, label %346, label %341

; <label>:341:                                    ; preds = %338
  %342 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 3
  %343 = load i8*, i8** %342, align 8
  %344 = getelementptr [19 x i8], [19 x i8]* @.str.34.565, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %344, i8* %343)
  %345 = call i32 @totd_exit(i32 1)
  br label %346

; <label>:346:                                    ; preds = %341, %338
  %347 = getelementptr inbounds %struct.group, %struct.group* %339, i32 0, i32 2
  %348 = load i32, i32* %347, align 8
  %349 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %348, i32* %349, align 4
  br label %360

; <label>:350:                                    ; preds = %314
  %351 = icmp ne i64 244180, 0
  %352 = icmp ne %struct.passwd* %.16, null
  br i1 true, label %353, label %357

; <label>:353:                                    ; preds = %350
  %354 = getelementptr inbounds %struct.passwd, %struct.passwd* %.16, i32 0, i32 3
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 0, i32* %356, align 4
  br label %360

; <label>:357:                                    ; preds = %350
  %358 = call i32 @getgid() #9
  %359 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  store i32 %358, i32* %359, align 4
  br label %360

; <label>:360:                                    ; preds = %357, %353, %346, %335
  call void @endpwent()
  call void @endgrent()
  %361 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %362 = load i8*, i8** %361, align 8
  %363 = icmp ne i64 0, 0
  %364 = icmp ne i8* null, null
  br i1 false, label %365, label %385

; <label>:365:                                    ; preds = %360
  %366 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %367 = load i8*, i8** %366, align 8
  %368 = call i32 @chroot(i8* %367) #9
  %369 = icmp slt i32 %368, 0
  br i1 %369, label %370, label %375

; <label>:370:                                    ; preds = %365
  %371 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %372 = load i8*, i8** %371, align 8
  %373 = getelementptr [21 x i8], [21 x i8]* @.str.35.566, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %373, i8* %372)
  %374 = call i32 @totd_exit(i32 1)
  br label %375

; <label>:375:                                    ; preds = %370, %365
  %376 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 4
  %377 = load i8*, i8** %376, align 8
  %378 = getelementptr [15 x i8], [15 x i8]* @.str.36.567, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %378, i8* %377)
  %379 = getelementptr [2 x i8], [2 x i8]* @.str.37.568, i32 0, i32 0
  %380 = call i32 @chdir(i8* %379) #9
  %381 = icmp slt i32 %380, 0
  br i1 %381, label %382, label %385

; <label>:382:                                    ; preds = %375
  %383 = getelementptr [22 x i8], [22 x i8]* @.str.38.569, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %383)
  %384 = call i32 @totd_exit(i32 1)
  br label %385

; <label>:385:                                    ; preds = %382, %375, %360
  %386 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  %388 = call i32 @read_config_clone_clone_clone_clone_clone_clone_clone_clone(i8* %387)
  %389 = icmp ne i32 0, 0
  br i1 false, label %390, label %394

; <label>:390:                                    ; preds = %385
  %391 = getelementptr [22 x i8], [22 x i8]* @.str.39.570, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %391)
  %392 = getelementptr [46 x i8], [46 x i8]* @.str.40.571, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %392)
  %393 = call i32 @totd_exit(i32 1)
  br label %394

; <label>:394:                                    ; preds = %390, %385
  %395 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %396 = load i32, i32* %395, align 4
  %397 = icmp eq i32 1, 1
  br i1 true, label %398, label %409

; <label>:398:                                    ; preds = %394
  %399 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %400 = load i32, i32* %399, align 8
  %401 = icmp ne i32 0, 0
  br i1 false, label %402, label %409

; <label>:402:                                    ; preds = %398
  %403 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %404 = load i32, i32* %403, align 8
  %405 = icmp slt i32 %404, 1024
  br i1 %405, label %406, label %409

; <label>:406:                                    ; preds = %402
  %407 = getelementptr [43 x i8], [43 x i8]* @.str.41.572, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %407)
  %408 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  store i32 0, i32* %408, align 4
  br label %409

; <label>:409:                                    ; preds = %406, %402, %398, %394
  %410 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %411 = load i8*, i8** %410, align 8
  %412 = icmp ne i64 10001095, 0
  %413 = icmp ne i8* %411, null
  br i1 true, label %414, label %451

; <label>:414:                                    ; preds = %409
  %415 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %416 = load i8*, i8** %415, align 8
  %417 = getelementptr [2 x i8], [2 x i8]* @.str.42.573, i32 0, i32 0
  %418 = call %struct._IO_FILE* @fopen(i8* %416, i8* %417), !track !185
  %419 = icmp ne %struct._IO_FILE* %418, null
  br i1 %419, label %420, label %451

; <label>:420:                                    ; preds = %414
  %421 = getelementptr [3 x i8], [3 x i8]* @.str.43.574, i32 0, i32 0
  %422 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %418, i8* %421, i32* %27)
  %423 = icmp ne i32 %422, 1
  br i1 %423, label %424, label %429

; <label>:424:                                    ; preds = %420
  %425 = getelementptr [24 x i8], [24 x i8]* @.str.44.575, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %425)
  %426 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %427 = load i8*, i8** %426, align 8
  %428 = call i32 @unlink(i8* %427) #9
  br label %449

; <label>:429:                                    ; preds = %420
  %430 = load i32, i32* %27, align 4
  %431 = call i32 @kill(i32 %430, i32 0) #9
  %432 = icmp eq i32 %431, -1
  br i1 %432, label %433, label %440

; <label>:433:                                    ; preds = %429
  %434 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %435 = load i8*, i8** %434, align 8
  %436 = call i32 @unlink(i8* %435) #9
  %437 = icmp ne i32 %436, 0
  br i1 %437, label %440, label %438

; <label>:438:                                    ; preds = %433
  %439 = getelementptr [23 x i8], [23 x i8]* @.str.45.576, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 5, i8* %439)
  br label %449

; <label>:440:                                    ; preds = %433, %429
  %441 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %442 = load i8*, i8** %441, align 8
  %443 = getelementptr [27 x i8], [27 x i8]* @.str.46.577, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %443, i8* %442)
  %444 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %445 = load i8*, i8** %444, align 8
  %446 = getelementptr [124 x i8], [124 x i8]* @.str.47.578, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %446, i8* %445)
  %447 = call i32 @fclose(%struct._IO_FILE* %418)
  %448 = call i32 @totd_exit(i32 1)
  br label %449

; <label>:449:                                    ; preds = %440, %438, %424
  %450 = call i32 @fclose(%struct._IO_FILE* %418)
  br label %451

; <label>:451:                                    ; preds = %449, %414, %409
  %452 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %453 = load i32, i32* %452, align 4
  %454 = icmp ne i32 %453, 0
  br i1 %454, label %463, label %455

; <label>:455:                                    ; preds = %451
  %456 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %457 = load i32, i32* %456, align 8
  %458 = icmp ne i32 %457, 0
  br i1 %458, label %459, label %463

; <label>:459:                                    ; preds = %455
  %460 = getelementptr [81 x i8], [81 x i8]* @.str.48.579, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %460)
  %461 = getelementptr [101 x i8], [101 x i8]* @.str.49.580, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %461)
  %462 = call i32 @totd_exit(i32 1)
  br label %463

; <label>:463:                                    ; preds = %459, %455, %451
  %464 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %465 = load i32, i32* %464, align 4
  %466 = icmp ne i32 %465, 0
  br i1 %466, label %467, label %482

; <label>:467:                                    ; preds = %463
  %468 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %469 = load i32, i32* %468, align 8
  %470 = icmp ne i32 %469, 0
  br i1 %470, label %471, label %482

; <label>:471:                                    ; preds = %467
  %472 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  %473 = load i32, i32* %472, align 8
  %474 = icmp ne i32 %473, 0
  br i1 %474, label %479, label %475

; <label>:475:                                    ; preds = %471
  %476 = getelementptr [66 x i8], [66 x i8]* @.str.50.581, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %476)
  %477 = getelementptr [62 x i8], [62 x i8]* @.str.51.582, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %477)
  %478 = call i32 @totd_exit(i32 1)
  br label %479

; <label>:479:                                    ; preds = %475, %471
  %480 = getelementptr [78 x i8], [78 x i8]* @.str.52.583, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %480)
  %481 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 14
  store i32 1, i32* %481, align 4
  br label %482

; <label>:482:                                    ; preds = %479, %467, %463
  %483 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %484 = load i32, i32* %483, align 4
  %485 = icmp ne i32 %484, 0
  br i1 %485, label %486, label %488

; <label>:486:                                    ; preds = %482
  %487 = getelementptr [15 x i8], [15 x i8]* @.str.53.584, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %487)
  br label %488

; <label>:488:                                    ; preds = %486, %482
  %489 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %490 = load i32, i32* %489, align 8
  %491 = icmp ne i32 %490, 0
  br i1 %491, label %492, label %494

; <label>:492:                                    ; preds = %488
  %493 = getelementptr [15 x i8], [15 x i8]* @.str.54.585, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %493)
  br label %494

; <label>:494:                                    ; preds = %492, %488
  %495 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 12
  %496 = load i32, i32* %495, align 4
  %497 = icmp ne i32 %496, 0
  br i1 %497, label %505, label %498

; <label>:498:                                    ; preds = %494
  %499 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 13
  %500 = load i32, i32* %499, align 8
  %501 = icmp ne i32 %500, 0
  br i1 %501, label %505, label %502

; <label>:502:                                    ; preds = %498
  %503 = getelementptr [73 x i8], [73 x i8]* @.str.55.586, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %503)
  %504 = call i32 @totd_exit(i32 1)
  br label %505

; <label>:505:                                    ; preds = %502, %498, %494
  %506 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 15
  %507 = load i32, i32* %506, align 8
  %508 = icmp ne i32 %507, 0
  br i1 %508, label %509, label %516

; <label>:509:                                    ; preds = %505
  %510 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 25
  %511 = load i32, i32* %510, align 8
  %512 = icmp ne i32 %511, 0
  br i1 %512, label %513, label %516

; <label>:513:                                    ; preds = %509
  %514 = getelementptr [162 x i8], [162 x i8]* @.str.56.587, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %514)
  %515 = call i32 @totd_exit(i32 1)
  br label %516

; <label>:516:                                    ; preds = %513, %509, %505
  call void @fwd_init_clone()
  call void @fwd_select()
  %517 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 22
  %518 = load %struct.generic_list*, %struct.generic_list** %517, align 8
  %519 = icmp ne %struct.generic_list* %518, null
  br i1 %519, label %522, label %520

; <label>:520:                                    ; preds = %516
  %521 = getelementptr [48 x i8], [48 x i8]* @.str.57.588, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %521)
  br label %640

; <label>:522:                                    ; preds = %516
  call void @ev_dup_init()
  %523 = call i32 @ev_signal_init_clone_clone()
  %524 = icmp slt i32 0, 0
  br i1 false, label %525, label %528

; <label>:525:                                    ; preds = %522
  %526 = getelementptr [41 x i8], [41 x i8]* @.str.58.589, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %526)
  %527 = call i32 @totd_exit(i32 1)
  br label %528

; <label>:528:                                    ; preds = %525, %522
  %529 = call i32 @ev_to_init()
  %530 = icmp slt i32 %529, 0
  br i1 %530, label %531, label %534

; <label>:531:                                    ; preds = %528
  %532 = getelementptr [41 x i8], [41 x i8]* @.str.59.590, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %532)
  %533 = call i32 @totd_exit(i32 1)
  br label %534

; <label>:534:                                    ; preds = %531, %528
  %535 = call i32 @ev_tcp_conn_in_init()
  %536 = icmp slt i32 %535, 0
  br i1 %536, label %537, label %540

; <label>:537:                                    ; preds = %534
  %538 = getelementptr [33 x i8], [33 x i8]* @.str.60.591, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %538)
  %539 = call i32 @totd_exit(i32 1)
  br label %540

; <label>:540:                                    ; preds = %537, %534
  %541 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 9
  %542 = load i32, i32* %541, align 8
  %543 = call i32 @net_init_socketlist(i32 %542)
  %544 = icmp slt i32 %543, 0
  br i1 %544, label %545, label %548

; <label>:545:                                    ; preds = %540
  %546 = getelementptr [28 x i8], [28 x i8]* @.str.61.592, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %546)
  %547 = call i32 @totd_exit(i32 1)
  br label %548

; <label>:548:                                    ; preds = %545, %540
  %549 = call i32 @net_bind_socketlist()
  %550 = icmp sle i32 %549, 0
  br i1 %550, label %551, label %560

; <label>:551:                                    ; preds = %548
  %552 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %553 = load i32, i32* %552, align 4
  %554 = icmp ne i32 %553, 0
  %555 = getelementptr [27 x i8], [27 x i8]* @.str.62.593, i32 0, i32 0
  br i1 %554, label %558, label %556

; <label>:556:                                    ; preds = %551
  call void (i32, i8*, ...) @syslog(i32 3, i8* %555)
  %557 = call i32 @totd_exit(i32 1)
  br label %560

; <label>:558:                                    ; preds = %551
  call void (i32, i8*, ...) @syslog(i32 4, i8* %555)
  %559 = getelementptr [26 x i8], [26 x i8]* @.str.63.594, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 4, i8* %559)
  br label %560

; <label>:560:                                    ; preds = %558, %556, %548
  %561 = call i32 @ev_udp_in_init()
  %562 = icmp slt i32 %561, 0
  br i1 %562, label %563, label %566

; <label>:563:                                    ; preds = %560
  %564 = getelementptr [22 x i8], [22 x i8]* @.str.64, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %564)
  %565 = call i32 @totd_exit(i32 1)
  br label %566

; <label>:566:                                    ; preds = %563, %560
  %567 = call i32 @ev_tcp_out_init()
  %568 = icmp slt i32 %567, 0
  br i1 %568, label %569, label %572

; <label>:569:                                    ; preds = %566
  %570 = getelementptr [37 x i8], [37 x i8]* @.str.65.595, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %570)
  %571 = call i32 @totd_exit(i32 1)
  br label %572

; <label>:572:                                    ; preds = %569, %566
  %573 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  %574 = load i32, i32* %573, align 4
  %575 = call i32 @setgid(i32 %574) #9
  %576 = icmp slt i32 %575, 0
  br i1 %576, label %577, label %582

; <label>:577:                                    ; preds = %572
  %578 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 6
  %579 = load i32, i32* %578, align 4
  %580 = getelementptr [20 x i8], [20 x i8]* @.str.66, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %580, i32 %579)
  %581 = call i32 @totd_exit(i32 1)
  br label %582

; <label>:582:                                    ; preds = %577, %572
  %583 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %584 = load i32, i32* %583, align 8
  %585 = call i32 @setuid(i32 %584) #9
  %586 = icmp slt i32 %585, 0
  br i1 %586, label %587, label %592

; <label>:587:                                    ; preds = %582
  %588 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 5
  %589 = load i32, i32* %588, align 8
  %590 = getelementptr [20 x i8], [20 x i8]* @.str.67, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %590, i32 %589)
  %591 = call i32 @totd_exit(i32 1)
  br label %592

; <label>:592:                                    ; preds = %587, %582
  %593 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 18
  %594 = load i32, i32* %593, align 4
  %595 = icmp ne i32 %594, 0
  br i1 %595, label %596, label %602

; <label>:596:                                    ; preds = %592
  %597 = call i32 @ev_to_register_ifcheck_clone()
  %598 = icmp slt i32 %597, 0
  br i1 %598, label %599, label %602

; <label>:599:                                    ; preds = %596
  %600 = getelementptr [41 x i8], [41 x i8]* @.str.68, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %600)
  %601 = call i32 @totd_exit(i32 1)
  br label %602

; <label>:602:                                    ; preds = %599, %596, %592
  %603 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %604 = load i32, i32* %603, align 4
  %605 = icmp ne i32 %604, 0
  br i1 %605, label %613, label %606

; <label>:606:                                    ; preds = %602
  %607 = call i32 @daemon(i32 0, i32 0) #9
  %608 = icmp ne i32 %607, 0
  br i1 %608, label %609, label %611

; <label>:609:                                    ; preds = %606
  %610 = call i32 @totd_exit(i32 1)
  br label %613

; <label>:611:                                    ; preds = %606
  %612 = getelementptr [29 x i8], [29 x i8]* @.str.69, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %612)
  br label %613

; <label>:613:                                    ; preds = %611, %609, %602
  %614 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %615 = load i8*, i8** %614, align 8
  %616 = icmp ne i8* %615, null
  br i1 %616, label %617, label %637

; <label>:617:                                    ; preds = %613
  %618 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %619 = load i8*, i8** %618, align 8
  %620 = getelementptr [2 x i8], [2 x i8]* @.str.70, i32 0, i32 0
  %621 = call %struct._IO_FILE* @fopen(i8* %619, i8* %620), !track !186
  %622 = icmp ne %struct._IO_FILE* %621, null
  br i1 %622, label %628, label %623

; <label>:623:                                    ; preds = %617
  %624 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %625 = load i8*, i8** %624, align 8
  %626 = getelementptr [25 x i8], [25 x i8]* @.str.71, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %626, i8* %625)
  %627 = call i32 @totd_exit(i32 1)
  br label %628

; <label>:628:                                    ; preds = %623, %617
  %629 = call i32 @getpid() #9
  %630 = getelementptr [3 x i8], [3 x i8]* @.str.43.574, i32 0, i32 0
  %631 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %621, i8* %630, i32 %629)
  %632 = call i32 @getpid() #9
  %633 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 1
  %634 = load i8*, i8** %633, align 8
  %635 = getelementptr [24 x i8], [24 x i8]* @.str.72, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %635, i32 %632, i8* %634)
  %636 = call i32 @fclose(%struct._IO_FILE* %621)
  br label %637

; <label>:637:                                    ; preds = %628, %613
  %638 = getelementptr [13 x i8], [13 x i8]* @.str.73, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %638)
  call void @totd_eventloop()
  %639 = call i32 @totd_exit(i32 0)
  br label %640

; <label>:640:                                    ; preds = %637, %520
  %.0 = phi i32 [ %639, %637 ], [ -1, %520 ]
  ret i32 %.0

; <label>:641:                                    ; preds = %53
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 1, i64 0), align 1
  br i1 true, label %642, label %54

; <label>:642:                                    ; preds = %641
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 2, i64 0), align 1
  br i1 true, label %643, label %54

; <label>:643:                                    ; preds = %642
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 3, i64 0), align 1
  br i1 true, label %644, label %54

; <label>:644:                                    ; preds = %643
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 4, i64 0), align 1
  br i1 true, label %645, label %54

; <label>:645:                                    ; preds = %644
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 5, i64 0), align 1
  br i1 true, label %646, label %54

; <label>:646:                                    ; preds = %645
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 6, i64 0), align 1
  br i1 true, label %647, label %54

; <label>:647:                                    ; preds = %646
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 7, i64 0), align 1
  br i1 true, label %648, label %54

; <label>:648:                                    ; preds = %647
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 8, i64 0), align 1
  br i1 true, label %649, label %54

; <label>:649:                                    ; preds = %648
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 9, i64 0), align 1
  br i1 true, label %650, label %54

; <label>:650:                                    ; preds = %649
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 10, i64 0), align 1
  br i1 true, label %651, label %54

; <label>:651:                                    ; preds = %650
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 11, i64 0), align 1
  br i1 true, label %652, label %54

; <label>:652:                                    ; preds = %651
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 12, i64 0), align 1
  br i1 true, label %653, label %54

; <label>:653:                                    ; preds = %652
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 13, i64 0), align 1
  br i1 true, label %654, label %54

; <label>:654:                                    ; preds = %653
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 14, i64 0), align 1
  br i1 true, label %655, label %54

; <label>:655:                                    ; preds = %654
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 15, i64 0), align 1
  br i1 true, label %656, label %54

; <label>:656:                                    ; preds = %655
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 16, i64 0), align 1
  br i1 true, label %657, label %54

; <label>:657:                                    ; preds = %656
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 17, i64 0), align 1
  br i1 true, label %658, label %54

; <label>:658:                                    ; preds = %657
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 18, i64 0), align 1
  br i1 true, label %659, label %54

; <label>:659:                                    ; preds = %658
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 19, i64 0), align 1
  br i1 true, label %660, label %54

; <label>:660:                                    ; preds = %659
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 20, i64 0), align 1
  br i1 true, label %661, label %54

; <label>:661:                                    ; preds = %660
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 21, i64 0), align 1
  br i1 true, label %662, label %54

; <label>:662:                                    ; preds = %661
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 22, i64 0), align 1
  br i1 true, label %663, label %54

; <label>:663:                                    ; preds = %662
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 23, i64 0), align 1
  br i1 true, label %664, label %54

; <label>:664:                                    ; preds = %663
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 24, i64 0), align 1
  br i1 true, label %665, label %54

; <label>:665:                                    ; preds = %664
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 25, i64 0), align 1
  br i1 true, label %666, label %54

; <label>:666:                                    ; preds = %665
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 26, i64 0), align 1
  br i1 true, label %667, label %54

; <label>:667:                                    ; preds = %666
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 27, i64 0), align 1
  br i1 true, label %668, label %54

; <label>:668:                                    ; preds = %667
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 28, i64 0), align 1
  br i1 true, label %669, label %54

; <label>:669:                                    ; preds = %668
  call void @__loop_iteration_test___0()
  call void @unroll_loop(i32 88)
  store i8 0, i8* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 20, i64 29, i64 0), align 1
  br label %54

.lr.ph.1:                                         ; preds = %207
  call void @unroll_loop(i32 89)
  %670 = sext i32 3 to i64
  %671 = getelementptr inbounds i8*, i8** %25, i64 3
  %672 = load i8*, i8** %671, align 8
  %673 = getelementptr [4 x i8], [4 x i8]* @20, i64 0, i64 0
  %674 = getelementptr [3 x i8], [3 x i8]* @21, i64 0, i64 0
  %675 = call i32 @strncmp(i8* %673, i8* %674, i64 2) #8
  %676 = icmp ne i32 0, 0
  %677 = sext i32 3 to i64
  %678 = getelementptr inbounds i8*, i8** %25, i64 3
  %679 = load i8*, i8** %678, align 8
  br i1 false, label %684, label %680

; <label>:680:                                    ; preds = %.lr.ph.1
  %681 = getelementptr inbounds i8, i8* %679, i64 2
  %682 = call i32 @atoi(i8* %681) #8
  store i32 2, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %683 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 2)
  br label %832

; <label>:684:                                    ; preds = %.lr.ph.1
  %685 = call i32 @strcmp(i8* %679, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %686 = icmp ne i32 %685, 0
  br i1 %686, label %688, label %687

; <label>:687:                                    ; preds = %684
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %832

; <label>:688:                                    ; preds = %684
  %689 = sext i32 3 to i64
  %690 = getelementptr inbounds i8*, i8** %25, i64 %689
  %691 = load i8*, i8** %690, align 8
  %692 = call i32 @strcmp(i8* %691, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %693 = icmp ne i32 %692, 0
  br i1 %693, label %695, label %694

; <label>:694:                                    ; preds = %688
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %832

; <label>:695:                                    ; preds = %688
  %696 = sext i32 3 to i64
  %697 = getelementptr inbounds i8*, i8** %25, i64 %696
  %698 = load i8*, i8** %697, align 8
  %699 = call i32 @strcmp(i8* %698, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %700 = icmp ne i32 %699, 0
  br i1 %700, label %701, label %707

; <label>:701:                                    ; preds = %695
  %702 = sext i32 3 to i64
  %703 = getelementptr inbounds i8*, i8** %25, i64 %702
  %704 = load i8*, i8** %703, align 8
  %705 = call i32 @strcmp(i8* %704, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %706 = icmp ne i32 %705, 0
  br i1 %706, label %708, label %707

; <label>:707:                                    ; preds = %701, %695
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %832

; <label>:708:                                    ; preds = %701
  %709 = sext i32 3 to i64
  %710 = getelementptr inbounds i8*, i8** %25, i64 %709
  %711 = load i8*, i8** %710, align 8
  %712 = call i32 @strcmp(i8* %711, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %713 = icmp ne i32 %712, 0
  br i1 %713, label %715, label %714

; <label>:714:                                    ; preds = %708
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %832

; <label>:715:                                    ; preds = %708
  %716 = sext i32 3 to i64
  %717 = getelementptr inbounds i8*, i8** %25, i64 %716
  %718 = load i8*, i8** %717, align 8
  %719 = call i32 @strcmp(i8* %718, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %720 = icmp ne i32 %719, 0
  br i1 %720, label %722, label %721

; <label>:721:                                    ; preds = %715
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %832

; <label>:722:                                    ; preds = %715
  %723 = sext i32 3 to i64
  %724 = getelementptr inbounds i8*, i8** %25, i64 %723
  %725 = load i8*, i8** %724, align 8
  %726 = call i32 @strcmp(i8* %725, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %727 = icmp ne i32 %726, 0
  br i1 %727, label %734, label %728

; <label>:728:                                    ; preds = %722
  %729 = add nsw i32 3, 1
  %730 = sext i32 %729 to i64
  %731 = getelementptr inbounds i8*, i8** %25, i64 %730
  %732 = load i8*, i8** %731, align 8
  %733 = call noalias i8* @strdup(i8* %732) #9, !track !178
  store i8* %733, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %832

; <label>:734:                                    ; preds = %722
  %735 = sext i32 3 to i64
  %736 = getelementptr inbounds i8*, i8** %25, i64 %735
  %737 = load i8*, i8** %736, align 8
  %738 = call i32 @strcmp(i8* %737, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %739 = icmp ne i32 %738, 0
  br i1 %739, label %752, label %740

; <label>:740:                                    ; preds = %734
  %741 = add nsw i32 3, 1
  %742 = sext i32 %741 to i64
  %743 = getelementptr inbounds i8*, i8** %25, i64 %742
  %744 = load i8*, i8** %743, align 8
  %745 = call i32 @conv_trick_conf(i8* %744)
  %746 = icmp ne i32 %745, 0
  br i1 %746, label %747, label %832

; <label>:747:                                    ; preds = %740
  %748 = add nsw i32 %741, 1
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds i8*, i8** %25, i64 %749
  %751 = load i8*, i8** %750, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %751)
  call void @usage()
  br label %832

; <label>:752:                                    ; preds = %734
  %753 = sext i32 3 to i64
  %754 = getelementptr inbounds i8*, i8** %25, i64 %753
  %755 = load i8*, i8** %754, align 8
  %756 = call i32 @strcmp(i8* %755, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %757 = icmp ne i32 %756, 0
  br i1 %757, label %771, label %758

; <label>:758:                                    ; preds = %752
  %759 = add nsw i32 3, 1
  %760 = sext i32 %759 to i64
  %761 = getelementptr inbounds i8*, i8** %25, i64 %760
  %762 = load i8*, i8** %761, align 8
  %763 = call i32 @atoi(i8* %762) #8
  store i32 %763, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %764 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %765 = icmp ne i32 %764, 0
  br i1 %765, label %832, label %766

; <label>:766:                                    ; preds = %758
  %767 = add nsw i32 %759, 1
  %768 = sext i32 %767 to i64
  %769 = getelementptr inbounds i8*, i8** %25, i64 %768
  %770 = load i8*, i8** %769, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %770)
  call void @usage()
  br label %832

; <label>:771:                                    ; preds = %752
  %772 = sext i32 3 to i64
  %773 = getelementptr inbounds i8*, i8** %25, i64 %772
  %774 = load i8*, i8** %773, align 8
  %775 = call i32 @strcmp(i8* %774, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %776 = icmp ne i32 %775, 0
  br i1 %776, label %783, label %777

; <label>:777:                                    ; preds = %771
  %778 = add nsw i32 3, 1
  %779 = sext i32 %778 to i64
  %780 = getelementptr inbounds i8*, i8** %25, i64 %779
  %781 = load i8*, i8** %780, align 8
  %782 = call noalias i8* @strdup(i8* %781) #9, !track !179
  store i8* %782, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %832

; <label>:783:                                    ; preds = %771
  %784 = sext i32 3 to i64
  %785 = getelementptr inbounds i8*, i8** %25, i64 %784
  %786 = load i8*, i8** %785, align 8
  %787 = call i32 @strcmp(i8* %786, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %788 = icmp ne i32 %787, 0
  br i1 %788, label %795, label %789

; <label>:789:                                    ; preds = %783
  %790 = add nsw i32 3, 1
  %791 = sext i32 %790 to i64
  %792 = getelementptr inbounds i8*, i8** %25, i64 %791
  %793 = load i8*, i8** %792, align 8
  %794 = call noalias i8* @strdup(i8* %793) #9, !track !180
  store i8* %794, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %832

; <label>:795:                                    ; preds = %783
  %796 = sext i32 3 to i64
  %797 = getelementptr inbounds i8*, i8** %25, i64 %796
  %798 = load i8*, i8** %797, align 8
  %799 = call i32 @strcmp(i8* %798, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %800 = icmp ne i32 %799, 0
  br i1 %800, label %807, label %801

; <label>:801:                                    ; preds = %795
  %802 = add nsw i32 3, 1
  %803 = sext i32 %802 to i64
  %804 = getelementptr inbounds i8*, i8** %25, i64 %803
  %805 = load i8*, i8** %804, align 8
  %806 = call noalias i8* @strdup(i8* %805) #9, !track !181
  store i8* %806, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %832

; <label>:807:                                    ; preds = %795
  %808 = sext i32 3 to i64
  %809 = getelementptr inbounds i8*, i8** %25, i64 %808
  %810 = load i8*, i8** %809, align 8
  %811 = call i32 @strcmp(i8* %810, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %812 = icmp ne i32 %811, 0
  br i1 %812, label %814, label %813

; <label>:813:                                    ; preds = %807
  call void @usage()
  br label %832

; <label>:814:                                    ; preds = %807
  %815 = sext i32 3 to i64
  %816 = getelementptr inbounds i8*, i8** %25, i64 %815
  %817 = load i8*, i8** %816, align 8
  %818 = call i32 @strcmp(i8* %817, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %819 = icmp ne i32 %818, 0
  br i1 %819, label %821, label %820

; <label>:820:                                    ; preds = %814
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %832

; <label>:821:                                    ; preds = %814
  %822 = sext i32 3 to i64
  %823 = getelementptr inbounds i8*, i8** %25, i64 %822
  %824 = load i8*, i8** %823, align 8
  %825 = call i32 @strcmp(i8* %824, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %826 = icmp ne i32 %825, 0
  br i1 %826, label %828, label %827

; <label>:827:                                    ; preds = %821
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %832

; <label>:828:                                    ; preds = %821
  %829 = sext i32 3 to i64
  %830 = getelementptr inbounds i8*, i8** %25, i64 %829
  %831 = load i8*, i8** %830, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %831)
  call void @usage()
  br label %832

; <label>:832:                                    ; preds = %828, %827, %820, %813, %801, %789, %777, %766, %758, %747, %740, %728, %721, %714, %707, %694, %687, %680
  %.15.1 = phi i32 [ 3, %680 ], [ 3, %687 ], [ 3, %694 ], [ 3, %707 ], [ 3, %714 ], [ 3, %721 ], [ %729, %728 ], [ %748, %747 ], [ %741, %740 ], [ %759, %758 ], [ %767, %766 ], [ %778, %777 ], [ %790, %789 ], [ %802, %801 ], [ 3, %820 ], [ 3, %828 ], [ 3, %827 ], [ 3, %813 ]
  call void @__loop_iteration_test___1()
  %833 = add nsw i32 3, 1
  %834 = icmp slt i32 4, 4, !track_argc !177
  br i1 false, label %.lr.ph.2, label %._crit_edge.loopexit

.lr.ph.2:                                         ; preds = %832
  call void @unroll_loop(i32 89)
  %835 = sext i32 4 to i64
  %836 = getelementptr inbounds i8*, i8** %25, i64 %835
  %837 = load i8*, i8** %836, align 8
  %838 = call i32 @strncmp(i8* %837, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %839 = icmp ne i32 %838, 0
  %840 = sext i32 4 to i64
  %841 = getelementptr inbounds i8*, i8** %25, i64 %840
  %842 = load i8*, i8** %841, align 8
  br i1 %839, label %847, label %843

; <label>:843:                                    ; preds = %.lr.ph.2
  %844 = getelementptr inbounds i8, i8* %842, i64 2
  %845 = call i32 @atoi(i8* %844) #8
  store i32 %845, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %846 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %846)
  br label %995

; <label>:847:                                    ; preds = %.lr.ph.2
  %848 = call i32 @strcmp(i8* %842, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %849 = icmp ne i32 %848, 0
  br i1 %849, label %851, label %850

; <label>:850:                                    ; preds = %847
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %995

; <label>:851:                                    ; preds = %847
  %852 = sext i32 4 to i64
  %853 = getelementptr inbounds i8*, i8** %25, i64 %852
  %854 = load i8*, i8** %853, align 8
  %855 = call i32 @strcmp(i8* %854, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %856 = icmp ne i32 %855, 0
  br i1 %856, label %858, label %857

; <label>:857:                                    ; preds = %851
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %995

; <label>:858:                                    ; preds = %851
  %859 = sext i32 4 to i64
  %860 = getelementptr inbounds i8*, i8** %25, i64 %859
  %861 = load i8*, i8** %860, align 8
  %862 = call i32 @strcmp(i8* %861, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %863 = icmp ne i32 %862, 0
  br i1 %863, label %864, label %870

; <label>:864:                                    ; preds = %858
  %865 = sext i32 4 to i64
  %866 = getelementptr inbounds i8*, i8** %25, i64 %865
  %867 = load i8*, i8** %866, align 8
  %868 = call i32 @strcmp(i8* %867, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %869 = icmp ne i32 %868, 0
  br i1 %869, label %871, label %870

; <label>:870:                                    ; preds = %864, %858
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %995

; <label>:871:                                    ; preds = %864
  %872 = sext i32 4 to i64
  %873 = getelementptr inbounds i8*, i8** %25, i64 %872
  %874 = load i8*, i8** %873, align 8
  %875 = call i32 @strcmp(i8* %874, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %876 = icmp ne i32 %875, 0
  br i1 %876, label %878, label %877

; <label>:877:                                    ; preds = %871
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %995

; <label>:878:                                    ; preds = %871
  %879 = sext i32 4 to i64
  %880 = getelementptr inbounds i8*, i8** %25, i64 %879
  %881 = load i8*, i8** %880, align 8
  %882 = call i32 @strcmp(i8* %881, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %883 = icmp ne i32 %882, 0
  br i1 %883, label %885, label %884

; <label>:884:                                    ; preds = %878
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %995

; <label>:885:                                    ; preds = %878
  %886 = sext i32 4 to i64
  %887 = getelementptr inbounds i8*, i8** %25, i64 %886
  %888 = load i8*, i8** %887, align 8
  %889 = call i32 @strcmp(i8* %888, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %890 = icmp ne i32 %889, 0
  br i1 %890, label %897, label %891

; <label>:891:                                    ; preds = %885
  %892 = add nsw i32 4, 1
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds i8*, i8** %25, i64 %893
  %895 = load i8*, i8** %894, align 8
  %896 = call noalias i8* @strdup(i8* %895) #9, !track !178
  store i8* %896, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %995

; <label>:897:                                    ; preds = %885
  %898 = sext i32 4 to i64
  %899 = getelementptr inbounds i8*, i8** %25, i64 %898
  %900 = load i8*, i8** %899, align 8
  %901 = call i32 @strcmp(i8* %900, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %902 = icmp ne i32 %901, 0
  br i1 %902, label %915, label %903

; <label>:903:                                    ; preds = %897
  %904 = add nsw i32 4, 1
  %905 = sext i32 %904 to i64
  %906 = getelementptr inbounds i8*, i8** %25, i64 %905
  %907 = load i8*, i8** %906, align 8
  %908 = call i32 @conv_trick_conf(i8* %907)
  %909 = icmp ne i32 %908, 0
  br i1 %909, label %910, label %995

; <label>:910:                                    ; preds = %903
  %911 = add nsw i32 %904, 1
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds i8*, i8** %25, i64 %912
  %914 = load i8*, i8** %913, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %914)
  call void @usage()
  br label %995

; <label>:915:                                    ; preds = %897
  %916 = sext i32 4 to i64
  %917 = getelementptr inbounds i8*, i8** %25, i64 %916
  %918 = load i8*, i8** %917, align 8
  %919 = call i32 @strcmp(i8* %918, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %920 = icmp ne i32 %919, 0
  br i1 %920, label %934, label %921

; <label>:921:                                    ; preds = %915
  %922 = add nsw i32 4, 1
  %923 = sext i32 %922 to i64
  %924 = getelementptr inbounds i8*, i8** %25, i64 %923
  %925 = load i8*, i8** %924, align 8
  %926 = call i32 @atoi(i8* %925) #8
  store i32 %926, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %927 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %928 = icmp ne i32 %927, 0
  br i1 %928, label %995, label %929

; <label>:929:                                    ; preds = %921
  %930 = add nsw i32 %922, 1
  %931 = sext i32 %930 to i64
  %932 = getelementptr inbounds i8*, i8** %25, i64 %931
  %933 = load i8*, i8** %932, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %933)
  call void @usage()
  br label %995

; <label>:934:                                    ; preds = %915
  %935 = sext i32 4 to i64
  %936 = getelementptr inbounds i8*, i8** %25, i64 %935
  %937 = load i8*, i8** %936, align 8
  %938 = call i32 @strcmp(i8* %937, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %939 = icmp ne i32 %938, 0
  br i1 %939, label %946, label %940

; <label>:940:                                    ; preds = %934
  %941 = add nsw i32 4, 1
  %942 = sext i32 %941 to i64
  %943 = getelementptr inbounds i8*, i8** %25, i64 %942
  %944 = load i8*, i8** %943, align 8
  %945 = call noalias i8* @strdup(i8* %944) #9, !track !179
  store i8* %945, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %995

; <label>:946:                                    ; preds = %934
  %947 = sext i32 4 to i64
  %948 = getelementptr inbounds i8*, i8** %25, i64 %947
  %949 = load i8*, i8** %948, align 8
  %950 = call i32 @strcmp(i8* %949, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %951 = icmp ne i32 %950, 0
  br i1 %951, label %958, label %952

; <label>:952:                                    ; preds = %946
  %953 = add nsw i32 4, 1
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds i8*, i8** %25, i64 %954
  %956 = load i8*, i8** %955, align 8
  %957 = call noalias i8* @strdup(i8* %956) #9, !track !180
  store i8* %957, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %995

; <label>:958:                                    ; preds = %946
  %959 = sext i32 4 to i64
  %960 = getelementptr inbounds i8*, i8** %25, i64 %959
  %961 = load i8*, i8** %960, align 8
  %962 = call i32 @strcmp(i8* %961, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %963 = icmp ne i32 %962, 0
  br i1 %963, label %970, label %964

; <label>:964:                                    ; preds = %958
  %965 = add nsw i32 4, 1
  %966 = sext i32 %965 to i64
  %967 = getelementptr inbounds i8*, i8** %25, i64 %966
  %968 = load i8*, i8** %967, align 8
  %969 = call noalias i8* @strdup(i8* %968) #9, !track !181
  store i8* %969, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %995

; <label>:970:                                    ; preds = %958
  %971 = sext i32 4 to i64
  %972 = getelementptr inbounds i8*, i8** %25, i64 %971
  %973 = load i8*, i8** %972, align 8
  %974 = call i32 @strcmp(i8* %973, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %975 = icmp ne i32 %974, 0
  br i1 %975, label %977, label %976

; <label>:976:                                    ; preds = %970
  call void @usage()
  br label %995

; <label>:977:                                    ; preds = %970
  %978 = sext i32 4 to i64
  %979 = getelementptr inbounds i8*, i8** %25, i64 %978
  %980 = load i8*, i8** %979, align 8
  %981 = call i32 @strcmp(i8* %980, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %982 = icmp ne i32 %981, 0
  br i1 %982, label %984, label %983

; <label>:983:                                    ; preds = %977
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %995

; <label>:984:                                    ; preds = %977
  %985 = sext i32 4 to i64
  %986 = getelementptr inbounds i8*, i8** %25, i64 %985
  %987 = load i8*, i8** %986, align 8
  %988 = call i32 @strcmp(i8* %987, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %989 = icmp ne i32 %988, 0
  br i1 %989, label %991, label %990

; <label>:990:                                    ; preds = %984
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %995

; <label>:991:                                    ; preds = %984
  %992 = sext i32 4 to i64
  %993 = getelementptr inbounds i8*, i8** %25, i64 %992
  %994 = load i8*, i8** %993, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %994)
  call void @usage()
  br label %995

; <label>:995:                                    ; preds = %991, %990, %983, %976, %964, %952, %940, %929, %921, %910, %903, %891, %884, %877, %870, %857, %850, %843
  %.15.2 = phi i32 [ 4, %843 ], [ 4, %850 ], [ 4, %857 ], [ 4, %870 ], [ 4, %877 ], [ 4, %884 ], [ %892, %891 ], [ %911, %910 ], [ %904, %903 ], [ %922, %921 ], [ %930, %929 ], [ %941, %940 ], [ %953, %952 ], [ %965, %964 ], [ 4, %983 ], [ 4, %991 ], [ 4, %990 ], [ 4, %976 ]
  call void @__loop_iteration_test___1()
  %996 = add nsw i32 %.15.2, 1
  %997 = icmp slt i32 %996, 4, !track_argc !177
  br i1 %997, label %.lr.ph.3, label %._crit_edge.loopexit

.lr.ph.3:                                         ; preds = %995
  call void @unroll_loop(i32 89)
  %998 = sext i32 %996 to i64
  %999 = getelementptr inbounds i8*, i8** %25, i64 %998
  %1000 = load i8*, i8** %999, align 8
  %1001 = call i32 @strncmp(i8* %1000, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %1002 = icmp ne i32 %1001, 0
  %1003 = sext i32 %996 to i64
  %1004 = getelementptr inbounds i8*, i8** %25, i64 %1003
  %1005 = load i8*, i8** %1004, align 8
  br i1 %1002, label %1010, label %1006

; <label>:1006:                                   ; preds = %.lr.ph.3
  %1007 = getelementptr inbounds i8, i8* %1005, i64 2
  %1008 = call i32 @atoi(i8* %1007) #8
  store i32 %1008, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %1009 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %1009)
  br label %1158

; <label>:1010:                                   ; preds = %.lr.ph.3
  %1011 = call i32 @strcmp(i8* %1005, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %1012 = icmp ne i32 %1011, 0
  br i1 %1012, label %1014, label %1013

; <label>:1013:                                   ; preds = %1010
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1158

; <label>:1014:                                   ; preds = %1010
  %1015 = sext i32 %996 to i64
  %1016 = getelementptr inbounds i8*, i8** %25, i64 %1015
  %1017 = load i8*, i8** %1016, align 8
  %1018 = call i32 @strcmp(i8* %1017, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %1019 = icmp ne i32 %1018, 0
  br i1 %1019, label %1021, label %1020

; <label>:1020:                                   ; preds = %1014
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1158

; <label>:1021:                                   ; preds = %1014
  %1022 = sext i32 %996 to i64
  %1023 = getelementptr inbounds i8*, i8** %25, i64 %1022
  %1024 = load i8*, i8** %1023, align 8
  %1025 = call i32 @strcmp(i8* %1024, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %1026 = icmp ne i32 %1025, 0
  br i1 %1026, label %1027, label %1033

; <label>:1027:                                   ; preds = %1021
  %1028 = sext i32 %996 to i64
  %1029 = getelementptr inbounds i8*, i8** %25, i64 %1028
  %1030 = load i8*, i8** %1029, align 8
  %1031 = call i32 @strcmp(i8* %1030, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %1032 = icmp ne i32 %1031, 0
  br i1 %1032, label %1034, label %1033

; <label>:1033:                                   ; preds = %1027, %1021
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1158

; <label>:1034:                                   ; preds = %1027
  %1035 = sext i32 %996 to i64
  %1036 = getelementptr inbounds i8*, i8** %25, i64 %1035
  %1037 = load i8*, i8** %1036, align 8
  %1038 = call i32 @strcmp(i8* %1037, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %1039 = icmp ne i32 %1038, 0
  br i1 %1039, label %1041, label %1040

; <label>:1040:                                   ; preds = %1034
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1158

; <label>:1041:                                   ; preds = %1034
  %1042 = sext i32 %996 to i64
  %1043 = getelementptr inbounds i8*, i8** %25, i64 %1042
  %1044 = load i8*, i8** %1043, align 8
  %1045 = call i32 @strcmp(i8* %1044, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %1046 = icmp ne i32 %1045, 0
  br i1 %1046, label %1048, label %1047

; <label>:1047:                                   ; preds = %1041
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1158

; <label>:1048:                                   ; preds = %1041
  %1049 = sext i32 %996 to i64
  %1050 = getelementptr inbounds i8*, i8** %25, i64 %1049
  %1051 = load i8*, i8** %1050, align 8
  %1052 = call i32 @strcmp(i8* %1051, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %1053 = icmp ne i32 %1052, 0
  br i1 %1053, label %1060, label %1054

; <label>:1054:                                   ; preds = %1048
  %1055 = add nsw i32 %996, 1
  %1056 = sext i32 %1055 to i64
  %1057 = getelementptr inbounds i8*, i8** %25, i64 %1056
  %1058 = load i8*, i8** %1057, align 8
  %1059 = call noalias i8* @strdup(i8* %1058) #9, !track !178
  store i8* %1059, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %1158

; <label>:1060:                                   ; preds = %1048
  %1061 = sext i32 %996 to i64
  %1062 = getelementptr inbounds i8*, i8** %25, i64 %1061
  %1063 = load i8*, i8** %1062, align 8
  %1064 = call i32 @strcmp(i8* %1063, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %1065 = icmp ne i32 %1064, 0
  br i1 %1065, label %1078, label %1066

; <label>:1066:                                   ; preds = %1060
  %1067 = add nsw i32 %996, 1
  %1068 = sext i32 %1067 to i64
  %1069 = getelementptr inbounds i8*, i8** %25, i64 %1068
  %1070 = load i8*, i8** %1069, align 8
  %1071 = call i32 @conv_trick_conf(i8* %1070)
  %1072 = icmp ne i32 %1071, 0
  br i1 %1072, label %1073, label %1158

; <label>:1073:                                   ; preds = %1066
  %1074 = add nsw i32 %1067, 1
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr inbounds i8*, i8** %25, i64 %1075
  %1077 = load i8*, i8** %1076, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %1077)
  call void @usage()
  br label %1158

; <label>:1078:                                   ; preds = %1060
  %1079 = sext i32 %996 to i64
  %1080 = getelementptr inbounds i8*, i8** %25, i64 %1079
  %1081 = load i8*, i8** %1080, align 8
  %1082 = call i32 @strcmp(i8* %1081, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %1083 = icmp ne i32 %1082, 0
  br i1 %1083, label %1097, label %1084

; <label>:1084:                                   ; preds = %1078
  %1085 = add nsw i32 %996, 1
  %1086 = sext i32 %1085 to i64
  %1087 = getelementptr inbounds i8*, i8** %25, i64 %1086
  %1088 = load i8*, i8** %1087, align 8
  %1089 = call i32 @atoi(i8* %1088) #8
  store i32 %1089, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1090 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1091 = icmp ne i32 %1090, 0
  br i1 %1091, label %1158, label %1092

; <label>:1092:                                   ; preds = %1084
  %1093 = add nsw i32 %1085, 1
  %1094 = sext i32 %1093 to i64
  %1095 = getelementptr inbounds i8*, i8** %25, i64 %1094
  %1096 = load i8*, i8** %1095, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %1096)
  call void @usage()
  br label %1158

; <label>:1097:                                   ; preds = %1078
  %1098 = sext i32 %996 to i64
  %1099 = getelementptr inbounds i8*, i8** %25, i64 %1098
  %1100 = load i8*, i8** %1099, align 8
  %1101 = call i32 @strcmp(i8* %1100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %1102 = icmp ne i32 %1101, 0
  br i1 %1102, label %1109, label %1103

; <label>:1103:                                   ; preds = %1097
  %1104 = add nsw i32 %996, 1
  %1105 = sext i32 %1104 to i64
  %1106 = getelementptr inbounds i8*, i8** %25, i64 %1105
  %1107 = load i8*, i8** %1106, align 8
  %1108 = call noalias i8* @strdup(i8* %1107) #9, !track !179
  store i8* %1108, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %1158

; <label>:1109:                                   ; preds = %1097
  %1110 = sext i32 %996 to i64
  %1111 = getelementptr inbounds i8*, i8** %25, i64 %1110
  %1112 = load i8*, i8** %1111, align 8
  %1113 = call i32 @strcmp(i8* %1112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %1114 = icmp ne i32 %1113, 0
  br i1 %1114, label %1121, label %1115

; <label>:1115:                                   ; preds = %1109
  %1116 = add nsw i32 %996, 1
  %1117 = sext i32 %1116 to i64
  %1118 = getelementptr inbounds i8*, i8** %25, i64 %1117
  %1119 = load i8*, i8** %1118, align 8
  %1120 = call noalias i8* @strdup(i8* %1119) #9, !track !180
  store i8* %1120, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %1158

; <label>:1121:                                   ; preds = %1109
  %1122 = sext i32 %996 to i64
  %1123 = getelementptr inbounds i8*, i8** %25, i64 %1122
  %1124 = load i8*, i8** %1123, align 8
  %1125 = call i32 @strcmp(i8* %1124, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %1126 = icmp ne i32 %1125, 0
  br i1 %1126, label %1133, label %1127

; <label>:1127:                                   ; preds = %1121
  %1128 = add nsw i32 %996, 1
  %1129 = sext i32 %1128 to i64
  %1130 = getelementptr inbounds i8*, i8** %25, i64 %1129
  %1131 = load i8*, i8** %1130, align 8
  %1132 = call noalias i8* @strdup(i8* %1131) #9, !track !181
  store i8* %1132, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %1158

; <label>:1133:                                   ; preds = %1121
  %1134 = sext i32 %996 to i64
  %1135 = getelementptr inbounds i8*, i8** %25, i64 %1134
  %1136 = load i8*, i8** %1135, align 8
  %1137 = call i32 @strcmp(i8* %1136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %1138 = icmp ne i32 %1137, 0
  br i1 %1138, label %1140, label %1139

; <label>:1139:                                   ; preds = %1133
  call void @usage()
  br label %1158

; <label>:1140:                                   ; preds = %1133
  %1141 = sext i32 %996 to i64
  %1142 = getelementptr inbounds i8*, i8** %25, i64 %1141
  %1143 = load i8*, i8** %1142, align 8
  %1144 = call i32 @strcmp(i8* %1143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %1145 = icmp ne i32 %1144, 0
  br i1 %1145, label %1147, label %1146

; <label>:1146:                                   ; preds = %1140
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1158

; <label>:1147:                                   ; preds = %1140
  %1148 = sext i32 %996 to i64
  %1149 = getelementptr inbounds i8*, i8** %25, i64 %1148
  %1150 = load i8*, i8** %1149, align 8
  %1151 = call i32 @strcmp(i8* %1150, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %1152 = icmp ne i32 %1151, 0
  br i1 %1152, label %1154, label %1153

; <label>:1153:                                   ; preds = %1147
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1158

; <label>:1154:                                   ; preds = %1147
  %1155 = sext i32 %996 to i64
  %1156 = getelementptr inbounds i8*, i8** %25, i64 %1155
  %1157 = load i8*, i8** %1156, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %1157)
  call void @usage()
  br label %1158

; <label>:1158:                                   ; preds = %1154, %1153, %1146, %1139, %1127, %1115, %1103, %1092, %1084, %1073, %1066, %1054, %1047, %1040, %1033, %1020, %1013, %1006
  %.15.3 = phi i32 [ %996, %1006 ], [ %996, %1013 ], [ %996, %1020 ], [ %996, %1033 ], [ %996, %1040 ], [ %996, %1047 ], [ %1055, %1054 ], [ %1074, %1073 ], [ %1067, %1066 ], [ %1085, %1084 ], [ %1093, %1092 ], [ %1104, %1103 ], [ %1116, %1115 ], [ %1128, %1127 ], [ %996, %1146 ], [ %996, %1154 ], [ %996, %1153 ], [ %996, %1139 ]
  call void @__loop_iteration_test___1()
  %1159 = add nsw i32 %.15.3, 1
  %1160 = icmp slt i32 %1159, 4, !track_argc !177
  br i1 %1160, label %.lr.ph.4, label %._crit_edge.loopexit

.lr.ph.4:                                         ; preds = %1158
  call void @unroll_loop(i32 89)
  %1161 = sext i32 %1159 to i64
  %1162 = getelementptr inbounds i8*, i8** %25, i64 %1161
  %1163 = load i8*, i8** %1162, align 8
  %1164 = call i32 @strncmp(i8* %1163, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %1165 = icmp ne i32 %1164, 0
  %1166 = sext i32 %1159 to i64
  %1167 = getelementptr inbounds i8*, i8** %25, i64 %1166
  %1168 = load i8*, i8** %1167, align 8
  br i1 %1165, label %1173, label %1169

; <label>:1169:                                   ; preds = %.lr.ph.4
  %1170 = getelementptr inbounds i8, i8* %1168, i64 2
  %1171 = call i32 @atoi(i8* %1170) #8
  store i32 %1171, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %1172 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %1172)
  br label %1321

; <label>:1173:                                   ; preds = %.lr.ph.4
  %1174 = call i32 @strcmp(i8* %1168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %1175 = icmp ne i32 %1174, 0
  br i1 %1175, label %1177, label %1176

; <label>:1176:                                   ; preds = %1173
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1321

; <label>:1177:                                   ; preds = %1173
  %1178 = sext i32 %1159 to i64
  %1179 = getelementptr inbounds i8*, i8** %25, i64 %1178
  %1180 = load i8*, i8** %1179, align 8
  %1181 = call i32 @strcmp(i8* %1180, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %1182 = icmp ne i32 %1181, 0
  br i1 %1182, label %1184, label %1183

; <label>:1183:                                   ; preds = %1177
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1321

; <label>:1184:                                   ; preds = %1177
  %1185 = sext i32 %1159 to i64
  %1186 = getelementptr inbounds i8*, i8** %25, i64 %1185
  %1187 = load i8*, i8** %1186, align 8
  %1188 = call i32 @strcmp(i8* %1187, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %1189 = icmp ne i32 %1188, 0
  br i1 %1189, label %1190, label %1196

; <label>:1190:                                   ; preds = %1184
  %1191 = sext i32 %1159 to i64
  %1192 = getelementptr inbounds i8*, i8** %25, i64 %1191
  %1193 = load i8*, i8** %1192, align 8
  %1194 = call i32 @strcmp(i8* %1193, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %1195 = icmp ne i32 %1194, 0
  br i1 %1195, label %1197, label %1196

; <label>:1196:                                   ; preds = %1190, %1184
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1321

; <label>:1197:                                   ; preds = %1190
  %1198 = sext i32 %1159 to i64
  %1199 = getelementptr inbounds i8*, i8** %25, i64 %1198
  %1200 = load i8*, i8** %1199, align 8
  %1201 = call i32 @strcmp(i8* %1200, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %1202 = icmp ne i32 %1201, 0
  br i1 %1202, label %1204, label %1203

; <label>:1203:                                   ; preds = %1197
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1321

; <label>:1204:                                   ; preds = %1197
  %1205 = sext i32 %1159 to i64
  %1206 = getelementptr inbounds i8*, i8** %25, i64 %1205
  %1207 = load i8*, i8** %1206, align 8
  %1208 = call i32 @strcmp(i8* %1207, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %1209 = icmp ne i32 %1208, 0
  br i1 %1209, label %1211, label %1210

; <label>:1210:                                   ; preds = %1204
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1321

; <label>:1211:                                   ; preds = %1204
  %1212 = sext i32 %1159 to i64
  %1213 = getelementptr inbounds i8*, i8** %25, i64 %1212
  %1214 = load i8*, i8** %1213, align 8
  %1215 = call i32 @strcmp(i8* %1214, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %1216 = icmp ne i32 %1215, 0
  br i1 %1216, label %1223, label %1217

; <label>:1217:                                   ; preds = %1211
  %1218 = add nsw i32 %1159, 1
  %1219 = sext i32 %1218 to i64
  %1220 = getelementptr inbounds i8*, i8** %25, i64 %1219
  %1221 = load i8*, i8** %1220, align 8
  %1222 = call noalias i8* @strdup(i8* %1221) #9, !track !178
  store i8* %1222, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %1321

; <label>:1223:                                   ; preds = %1211
  %1224 = sext i32 %1159 to i64
  %1225 = getelementptr inbounds i8*, i8** %25, i64 %1224
  %1226 = load i8*, i8** %1225, align 8
  %1227 = call i32 @strcmp(i8* %1226, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %1228 = icmp ne i32 %1227, 0
  br i1 %1228, label %1241, label %1229

; <label>:1229:                                   ; preds = %1223
  %1230 = add nsw i32 %1159, 1
  %1231 = sext i32 %1230 to i64
  %1232 = getelementptr inbounds i8*, i8** %25, i64 %1231
  %1233 = load i8*, i8** %1232, align 8
  %1234 = call i32 @conv_trick_conf(i8* %1233)
  %1235 = icmp ne i32 %1234, 0
  br i1 %1235, label %1236, label %1321

; <label>:1236:                                   ; preds = %1229
  %1237 = add nsw i32 %1230, 1
  %1238 = sext i32 %1237 to i64
  %1239 = getelementptr inbounds i8*, i8** %25, i64 %1238
  %1240 = load i8*, i8** %1239, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %1240)
  call void @usage()
  br label %1321

; <label>:1241:                                   ; preds = %1223
  %1242 = sext i32 %1159 to i64
  %1243 = getelementptr inbounds i8*, i8** %25, i64 %1242
  %1244 = load i8*, i8** %1243, align 8
  %1245 = call i32 @strcmp(i8* %1244, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %1246 = icmp ne i32 %1245, 0
  br i1 %1246, label %1260, label %1247

; <label>:1247:                                   ; preds = %1241
  %1248 = add nsw i32 %1159, 1
  %1249 = sext i32 %1248 to i64
  %1250 = getelementptr inbounds i8*, i8** %25, i64 %1249
  %1251 = load i8*, i8** %1250, align 8
  %1252 = call i32 @atoi(i8* %1251) #8
  store i32 %1252, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1253 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1254 = icmp ne i32 %1253, 0
  br i1 %1254, label %1321, label %1255

; <label>:1255:                                   ; preds = %1247
  %1256 = add nsw i32 %1248, 1
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds i8*, i8** %25, i64 %1257
  %1259 = load i8*, i8** %1258, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %1259)
  call void @usage()
  br label %1321

; <label>:1260:                                   ; preds = %1241
  %1261 = sext i32 %1159 to i64
  %1262 = getelementptr inbounds i8*, i8** %25, i64 %1261
  %1263 = load i8*, i8** %1262, align 8
  %1264 = call i32 @strcmp(i8* %1263, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %1265 = icmp ne i32 %1264, 0
  br i1 %1265, label %1272, label %1266

; <label>:1266:                                   ; preds = %1260
  %1267 = add nsw i32 %1159, 1
  %1268 = sext i32 %1267 to i64
  %1269 = getelementptr inbounds i8*, i8** %25, i64 %1268
  %1270 = load i8*, i8** %1269, align 8
  %1271 = call noalias i8* @strdup(i8* %1270) #9, !track !179
  store i8* %1271, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %1321

; <label>:1272:                                   ; preds = %1260
  %1273 = sext i32 %1159 to i64
  %1274 = getelementptr inbounds i8*, i8** %25, i64 %1273
  %1275 = load i8*, i8** %1274, align 8
  %1276 = call i32 @strcmp(i8* %1275, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %1277 = icmp ne i32 %1276, 0
  br i1 %1277, label %1284, label %1278

; <label>:1278:                                   ; preds = %1272
  %1279 = add nsw i32 %1159, 1
  %1280 = sext i32 %1279 to i64
  %1281 = getelementptr inbounds i8*, i8** %25, i64 %1280
  %1282 = load i8*, i8** %1281, align 8
  %1283 = call noalias i8* @strdup(i8* %1282) #9, !track !180
  store i8* %1283, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %1321

; <label>:1284:                                   ; preds = %1272
  %1285 = sext i32 %1159 to i64
  %1286 = getelementptr inbounds i8*, i8** %25, i64 %1285
  %1287 = load i8*, i8** %1286, align 8
  %1288 = call i32 @strcmp(i8* %1287, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %1289 = icmp ne i32 %1288, 0
  br i1 %1289, label %1296, label %1290

; <label>:1290:                                   ; preds = %1284
  %1291 = add nsw i32 %1159, 1
  %1292 = sext i32 %1291 to i64
  %1293 = getelementptr inbounds i8*, i8** %25, i64 %1292
  %1294 = load i8*, i8** %1293, align 8
  %1295 = call noalias i8* @strdup(i8* %1294) #9, !track !181
  store i8* %1295, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %1321

; <label>:1296:                                   ; preds = %1284
  %1297 = sext i32 %1159 to i64
  %1298 = getelementptr inbounds i8*, i8** %25, i64 %1297
  %1299 = load i8*, i8** %1298, align 8
  %1300 = call i32 @strcmp(i8* %1299, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %1301 = icmp ne i32 %1300, 0
  br i1 %1301, label %1303, label %1302

; <label>:1302:                                   ; preds = %1296
  call void @usage()
  br label %1321

; <label>:1303:                                   ; preds = %1296
  %1304 = sext i32 %1159 to i64
  %1305 = getelementptr inbounds i8*, i8** %25, i64 %1304
  %1306 = load i8*, i8** %1305, align 8
  %1307 = call i32 @strcmp(i8* %1306, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %1308 = icmp ne i32 %1307, 0
  br i1 %1308, label %1310, label %1309

; <label>:1309:                                   ; preds = %1303
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1321

; <label>:1310:                                   ; preds = %1303
  %1311 = sext i32 %1159 to i64
  %1312 = getelementptr inbounds i8*, i8** %25, i64 %1311
  %1313 = load i8*, i8** %1312, align 8
  %1314 = call i32 @strcmp(i8* %1313, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %1315 = icmp ne i32 %1314, 0
  br i1 %1315, label %1317, label %1316

; <label>:1316:                                   ; preds = %1310
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1321

; <label>:1317:                                   ; preds = %1310
  %1318 = sext i32 %1159 to i64
  %1319 = getelementptr inbounds i8*, i8** %25, i64 %1318
  %1320 = load i8*, i8** %1319, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %1320)
  call void @usage()
  br label %1321

; <label>:1321:                                   ; preds = %1317, %1316, %1309, %1302, %1290, %1278, %1266, %1255, %1247, %1236, %1229, %1217, %1210, %1203, %1196, %1183, %1176, %1169
  %.15.4 = phi i32 [ %1159, %1169 ], [ %1159, %1176 ], [ %1159, %1183 ], [ %1159, %1196 ], [ %1159, %1203 ], [ %1159, %1210 ], [ %1218, %1217 ], [ %1237, %1236 ], [ %1230, %1229 ], [ %1248, %1247 ], [ %1256, %1255 ], [ %1267, %1266 ], [ %1279, %1278 ], [ %1291, %1290 ], [ %1159, %1309 ], [ %1159, %1317 ], [ %1159, %1316 ], [ %1159, %1302 ]
  call void @__loop_iteration_test___1()
  %1322 = add nsw i32 %.15.4, 1
  %1323 = icmp slt i32 %1322, 4, !track_argc !177
  br i1 %1323, label %.lr.ph.5, label %._crit_edge.loopexit

.lr.ph.5:                                         ; preds = %1321
  call void @unroll_loop(i32 89)
  %1324 = sext i32 %1322 to i64
  %1325 = getelementptr inbounds i8*, i8** %25, i64 %1324
  %1326 = load i8*, i8** %1325, align 8
  %1327 = call i32 @strncmp(i8* %1326, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %1328 = icmp ne i32 %1327, 0
  %1329 = sext i32 %1322 to i64
  %1330 = getelementptr inbounds i8*, i8** %25, i64 %1329
  %1331 = load i8*, i8** %1330, align 8
  br i1 %1328, label %1336, label %1332

; <label>:1332:                                   ; preds = %.lr.ph.5
  %1333 = getelementptr inbounds i8, i8* %1331, i64 2
  %1334 = call i32 @atoi(i8* %1333) #8
  store i32 %1334, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %1335 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %1335)
  br label %1484

; <label>:1336:                                   ; preds = %.lr.ph.5
  %1337 = call i32 @strcmp(i8* %1331, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %1338 = icmp ne i32 %1337, 0
  br i1 %1338, label %1340, label %1339

; <label>:1339:                                   ; preds = %1336
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1484

; <label>:1340:                                   ; preds = %1336
  %1341 = sext i32 %1322 to i64
  %1342 = getelementptr inbounds i8*, i8** %25, i64 %1341
  %1343 = load i8*, i8** %1342, align 8
  %1344 = call i32 @strcmp(i8* %1343, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %1345 = icmp ne i32 %1344, 0
  br i1 %1345, label %1347, label %1346

; <label>:1346:                                   ; preds = %1340
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1484

; <label>:1347:                                   ; preds = %1340
  %1348 = sext i32 %1322 to i64
  %1349 = getelementptr inbounds i8*, i8** %25, i64 %1348
  %1350 = load i8*, i8** %1349, align 8
  %1351 = call i32 @strcmp(i8* %1350, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %1352 = icmp ne i32 %1351, 0
  br i1 %1352, label %1353, label %1359

; <label>:1353:                                   ; preds = %1347
  %1354 = sext i32 %1322 to i64
  %1355 = getelementptr inbounds i8*, i8** %25, i64 %1354
  %1356 = load i8*, i8** %1355, align 8
  %1357 = call i32 @strcmp(i8* %1356, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %1358 = icmp ne i32 %1357, 0
  br i1 %1358, label %1360, label %1359

; <label>:1359:                                   ; preds = %1353, %1347
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1484

; <label>:1360:                                   ; preds = %1353
  %1361 = sext i32 %1322 to i64
  %1362 = getelementptr inbounds i8*, i8** %25, i64 %1361
  %1363 = load i8*, i8** %1362, align 8
  %1364 = call i32 @strcmp(i8* %1363, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %1365 = icmp ne i32 %1364, 0
  br i1 %1365, label %1367, label %1366

; <label>:1366:                                   ; preds = %1360
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1484

; <label>:1367:                                   ; preds = %1360
  %1368 = sext i32 %1322 to i64
  %1369 = getelementptr inbounds i8*, i8** %25, i64 %1368
  %1370 = load i8*, i8** %1369, align 8
  %1371 = call i32 @strcmp(i8* %1370, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %1372 = icmp ne i32 %1371, 0
  br i1 %1372, label %1374, label %1373

; <label>:1373:                                   ; preds = %1367
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1484

; <label>:1374:                                   ; preds = %1367
  %1375 = sext i32 %1322 to i64
  %1376 = getelementptr inbounds i8*, i8** %25, i64 %1375
  %1377 = load i8*, i8** %1376, align 8
  %1378 = call i32 @strcmp(i8* %1377, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %1379 = icmp ne i32 %1378, 0
  br i1 %1379, label %1386, label %1380

; <label>:1380:                                   ; preds = %1374
  %1381 = add nsw i32 %1322, 1
  %1382 = sext i32 %1381 to i64
  %1383 = getelementptr inbounds i8*, i8** %25, i64 %1382
  %1384 = load i8*, i8** %1383, align 8
  %1385 = call noalias i8* @strdup(i8* %1384) #9, !track !178
  store i8* %1385, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %1484

; <label>:1386:                                   ; preds = %1374
  %1387 = sext i32 %1322 to i64
  %1388 = getelementptr inbounds i8*, i8** %25, i64 %1387
  %1389 = load i8*, i8** %1388, align 8
  %1390 = call i32 @strcmp(i8* %1389, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %1391 = icmp ne i32 %1390, 0
  br i1 %1391, label %1404, label %1392

; <label>:1392:                                   ; preds = %1386
  %1393 = add nsw i32 %1322, 1
  %1394 = sext i32 %1393 to i64
  %1395 = getelementptr inbounds i8*, i8** %25, i64 %1394
  %1396 = load i8*, i8** %1395, align 8
  %1397 = call i32 @conv_trick_conf(i8* %1396)
  %1398 = icmp ne i32 %1397, 0
  br i1 %1398, label %1399, label %1484

; <label>:1399:                                   ; preds = %1392
  %1400 = add nsw i32 %1393, 1
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds i8*, i8** %25, i64 %1401
  %1403 = load i8*, i8** %1402, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %1403)
  call void @usage()
  br label %1484

; <label>:1404:                                   ; preds = %1386
  %1405 = sext i32 %1322 to i64
  %1406 = getelementptr inbounds i8*, i8** %25, i64 %1405
  %1407 = load i8*, i8** %1406, align 8
  %1408 = call i32 @strcmp(i8* %1407, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %1409 = icmp ne i32 %1408, 0
  br i1 %1409, label %1423, label %1410

; <label>:1410:                                   ; preds = %1404
  %1411 = add nsw i32 %1322, 1
  %1412 = sext i32 %1411 to i64
  %1413 = getelementptr inbounds i8*, i8** %25, i64 %1412
  %1414 = load i8*, i8** %1413, align 8
  %1415 = call i32 @atoi(i8* %1414) #8
  store i32 %1415, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1416 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1417 = icmp ne i32 %1416, 0
  br i1 %1417, label %1484, label %1418

; <label>:1418:                                   ; preds = %1410
  %1419 = add nsw i32 %1411, 1
  %1420 = sext i32 %1419 to i64
  %1421 = getelementptr inbounds i8*, i8** %25, i64 %1420
  %1422 = load i8*, i8** %1421, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %1422)
  call void @usage()
  br label %1484

; <label>:1423:                                   ; preds = %1404
  %1424 = sext i32 %1322 to i64
  %1425 = getelementptr inbounds i8*, i8** %25, i64 %1424
  %1426 = load i8*, i8** %1425, align 8
  %1427 = call i32 @strcmp(i8* %1426, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %1428 = icmp ne i32 %1427, 0
  br i1 %1428, label %1435, label %1429

; <label>:1429:                                   ; preds = %1423
  %1430 = add nsw i32 %1322, 1
  %1431 = sext i32 %1430 to i64
  %1432 = getelementptr inbounds i8*, i8** %25, i64 %1431
  %1433 = load i8*, i8** %1432, align 8
  %1434 = call noalias i8* @strdup(i8* %1433) #9, !track !179
  store i8* %1434, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %1484

; <label>:1435:                                   ; preds = %1423
  %1436 = sext i32 %1322 to i64
  %1437 = getelementptr inbounds i8*, i8** %25, i64 %1436
  %1438 = load i8*, i8** %1437, align 8
  %1439 = call i32 @strcmp(i8* %1438, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %1440 = icmp ne i32 %1439, 0
  br i1 %1440, label %1447, label %1441

; <label>:1441:                                   ; preds = %1435
  %1442 = add nsw i32 %1322, 1
  %1443 = sext i32 %1442 to i64
  %1444 = getelementptr inbounds i8*, i8** %25, i64 %1443
  %1445 = load i8*, i8** %1444, align 8
  %1446 = call noalias i8* @strdup(i8* %1445) #9, !track !180
  store i8* %1446, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %1484

; <label>:1447:                                   ; preds = %1435
  %1448 = sext i32 %1322 to i64
  %1449 = getelementptr inbounds i8*, i8** %25, i64 %1448
  %1450 = load i8*, i8** %1449, align 8
  %1451 = call i32 @strcmp(i8* %1450, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %1452 = icmp ne i32 %1451, 0
  br i1 %1452, label %1459, label %1453

; <label>:1453:                                   ; preds = %1447
  %1454 = add nsw i32 %1322, 1
  %1455 = sext i32 %1454 to i64
  %1456 = getelementptr inbounds i8*, i8** %25, i64 %1455
  %1457 = load i8*, i8** %1456, align 8
  %1458 = call noalias i8* @strdup(i8* %1457) #9, !track !181
  store i8* %1458, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %1484

; <label>:1459:                                   ; preds = %1447
  %1460 = sext i32 %1322 to i64
  %1461 = getelementptr inbounds i8*, i8** %25, i64 %1460
  %1462 = load i8*, i8** %1461, align 8
  %1463 = call i32 @strcmp(i8* %1462, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %1464 = icmp ne i32 %1463, 0
  br i1 %1464, label %1466, label %1465

; <label>:1465:                                   ; preds = %1459
  call void @usage()
  br label %1484

; <label>:1466:                                   ; preds = %1459
  %1467 = sext i32 %1322 to i64
  %1468 = getelementptr inbounds i8*, i8** %25, i64 %1467
  %1469 = load i8*, i8** %1468, align 8
  %1470 = call i32 @strcmp(i8* %1469, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %1471 = icmp ne i32 %1470, 0
  br i1 %1471, label %1473, label %1472

; <label>:1472:                                   ; preds = %1466
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1484

; <label>:1473:                                   ; preds = %1466
  %1474 = sext i32 %1322 to i64
  %1475 = getelementptr inbounds i8*, i8** %25, i64 %1474
  %1476 = load i8*, i8** %1475, align 8
  %1477 = call i32 @strcmp(i8* %1476, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %1478 = icmp ne i32 %1477, 0
  br i1 %1478, label %1480, label %1479

; <label>:1479:                                   ; preds = %1473
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1484

; <label>:1480:                                   ; preds = %1473
  %1481 = sext i32 %1322 to i64
  %1482 = getelementptr inbounds i8*, i8** %25, i64 %1481
  %1483 = load i8*, i8** %1482, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %1483)
  call void @usage()
  br label %1484

; <label>:1484:                                   ; preds = %1480, %1479, %1472, %1465, %1453, %1441, %1429, %1418, %1410, %1399, %1392, %1380, %1373, %1366, %1359, %1346, %1339, %1332
  %.15.5 = phi i32 [ %1322, %1332 ], [ %1322, %1339 ], [ %1322, %1346 ], [ %1322, %1359 ], [ %1322, %1366 ], [ %1322, %1373 ], [ %1381, %1380 ], [ %1400, %1399 ], [ %1393, %1392 ], [ %1411, %1410 ], [ %1419, %1418 ], [ %1430, %1429 ], [ %1442, %1441 ], [ %1454, %1453 ], [ %1322, %1472 ], [ %1322, %1480 ], [ %1322, %1479 ], [ %1322, %1465 ]
  call void @__loop_iteration_test___1()
  %1485 = add nsw i32 %.15.5, 1
  %1486 = icmp slt i32 %1485, 4, !track_argc !177
  br i1 %1486, label %.lr.ph.6, label %._crit_edge.loopexit

.lr.ph.6:                                         ; preds = %1484
  call void @unroll_loop(i32 89)
  %1487 = sext i32 %1485 to i64
  %1488 = getelementptr inbounds i8*, i8** %25, i64 %1487
  %1489 = load i8*, i8** %1488, align 8
  %1490 = call i32 @strncmp(i8* %1489, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %1491 = icmp ne i32 %1490, 0
  %1492 = sext i32 %1485 to i64
  %1493 = getelementptr inbounds i8*, i8** %25, i64 %1492
  %1494 = load i8*, i8** %1493, align 8
  br i1 %1491, label %1499, label %1495

; <label>:1495:                                   ; preds = %.lr.ph.6
  %1496 = getelementptr inbounds i8, i8* %1494, i64 2
  %1497 = call i32 @atoi(i8* %1496) #8
  store i32 %1497, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %1498 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %1498)
  br label %1647

; <label>:1499:                                   ; preds = %.lr.ph.6
  %1500 = call i32 @strcmp(i8* %1494, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %1501 = icmp ne i32 %1500, 0
  br i1 %1501, label %1503, label %1502

; <label>:1502:                                   ; preds = %1499
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1647

; <label>:1503:                                   ; preds = %1499
  %1504 = sext i32 %1485 to i64
  %1505 = getelementptr inbounds i8*, i8** %25, i64 %1504
  %1506 = load i8*, i8** %1505, align 8
  %1507 = call i32 @strcmp(i8* %1506, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %1508 = icmp ne i32 %1507, 0
  br i1 %1508, label %1510, label %1509

; <label>:1509:                                   ; preds = %1503
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1647

; <label>:1510:                                   ; preds = %1503
  %1511 = sext i32 %1485 to i64
  %1512 = getelementptr inbounds i8*, i8** %25, i64 %1511
  %1513 = load i8*, i8** %1512, align 8
  %1514 = call i32 @strcmp(i8* %1513, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %1515 = icmp ne i32 %1514, 0
  br i1 %1515, label %1516, label %1522

; <label>:1516:                                   ; preds = %1510
  %1517 = sext i32 %1485 to i64
  %1518 = getelementptr inbounds i8*, i8** %25, i64 %1517
  %1519 = load i8*, i8** %1518, align 8
  %1520 = call i32 @strcmp(i8* %1519, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %1521 = icmp ne i32 %1520, 0
  br i1 %1521, label %1523, label %1522

; <label>:1522:                                   ; preds = %1516, %1510
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1647

; <label>:1523:                                   ; preds = %1516
  %1524 = sext i32 %1485 to i64
  %1525 = getelementptr inbounds i8*, i8** %25, i64 %1524
  %1526 = load i8*, i8** %1525, align 8
  %1527 = call i32 @strcmp(i8* %1526, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %1528 = icmp ne i32 %1527, 0
  br i1 %1528, label %1530, label %1529

; <label>:1529:                                   ; preds = %1523
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1647

; <label>:1530:                                   ; preds = %1523
  %1531 = sext i32 %1485 to i64
  %1532 = getelementptr inbounds i8*, i8** %25, i64 %1531
  %1533 = load i8*, i8** %1532, align 8
  %1534 = call i32 @strcmp(i8* %1533, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %1535 = icmp ne i32 %1534, 0
  br i1 %1535, label %1537, label %1536

; <label>:1536:                                   ; preds = %1530
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1647

; <label>:1537:                                   ; preds = %1530
  %1538 = sext i32 %1485 to i64
  %1539 = getelementptr inbounds i8*, i8** %25, i64 %1538
  %1540 = load i8*, i8** %1539, align 8
  %1541 = call i32 @strcmp(i8* %1540, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %1542 = icmp ne i32 %1541, 0
  br i1 %1542, label %1549, label %1543

; <label>:1543:                                   ; preds = %1537
  %1544 = add nsw i32 %1485, 1
  %1545 = sext i32 %1544 to i64
  %1546 = getelementptr inbounds i8*, i8** %25, i64 %1545
  %1547 = load i8*, i8** %1546, align 8
  %1548 = call noalias i8* @strdup(i8* %1547) #9, !track !178
  store i8* %1548, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %1647

; <label>:1549:                                   ; preds = %1537
  %1550 = sext i32 %1485 to i64
  %1551 = getelementptr inbounds i8*, i8** %25, i64 %1550
  %1552 = load i8*, i8** %1551, align 8
  %1553 = call i32 @strcmp(i8* %1552, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %1554 = icmp ne i32 %1553, 0
  br i1 %1554, label %1567, label %1555

; <label>:1555:                                   ; preds = %1549
  %1556 = add nsw i32 %1485, 1
  %1557 = sext i32 %1556 to i64
  %1558 = getelementptr inbounds i8*, i8** %25, i64 %1557
  %1559 = load i8*, i8** %1558, align 8
  %1560 = call i32 @conv_trick_conf(i8* %1559)
  %1561 = icmp ne i32 %1560, 0
  br i1 %1561, label %1562, label %1647

; <label>:1562:                                   ; preds = %1555
  %1563 = add nsw i32 %1556, 1
  %1564 = sext i32 %1563 to i64
  %1565 = getelementptr inbounds i8*, i8** %25, i64 %1564
  %1566 = load i8*, i8** %1565, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %1566)
  call void @usage()
  br label %1647

; <label>:1567:                                   ; preds = %1549
  %1568 = sext i32 %1485 to i64
  %1569 = getelementptr inbounds i8*, i8** %25, i64 %1568
  %1570 = load i8*, i8** %1569, align 8
  %1571 = call i32 @strcmp(i8* %1570, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %1572 = icmp ne i32 %1571, 0
  br i1 %1572, label %1586, label %1573

; <label>:1573:                                   ; preds = %1567
  %1574 = add nsw i32 %1485, 1
  %1575 = sext i32 %1574 to i64
  %1576 = getelementptr inbounds i8*, i8** %25, i64 %1575
  %1577 = load i8*, i8** %1576, align 8
  %1578 = call i32 @atoi(i8* %1577) #8
  store i32 %1578, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1579 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1580 = icmp ne i32 %1579, 0
  br i1 %1580, label %1647, label %1581

; <label>:1581:                                   ; preds = %1573
  %1582 = add nsw i32 %1574, 1
  %1583 = sext i32 %1582 to i64
  %1584 = getelementptr inbounds i8*, i8** %25, i64 %1583
  %1585 = load i8*, i8** %1584, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %1585)
  call void @usage()
  br label %1647

; <label>:1586:                                   ; preds = %1567
  %1587 = sext i32 %1485 to i64
  %1588 = getelementptr inbounds i8*, i8** %25, i64 %1587
  %1589 = load i8*, i8** %1588, align 8
  %1590 = call i32 @strcmp(i8* %1589, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %1591 = icmp ne i32 %1590, 0
  br i1 %1591, label %1598, label %1592

; <label>:1592:                                   ; preds = %1586
  %1593 = add nsw i32 %1485, 1
  %1594 = sext i32 %1593 to i64
  %1595 = getelementptr inbounds i8*, i8** %25, i64 %1594
  %1596 = load i8*, i8** %1595, align 8
  %1597 = call noalias i8* @strdup(i8* %1596) #9, !track !179
  store i8* %1597, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %1647

; <label>:1598:                                   ; preds = %1586
  %1599 = sext i32 %1485 to i64
  %1600 = getelementptr inbounds i8*, i8** %25, i64 %1599
  %1601 = load i8*, i8** %1600, align 8
  %1602 = call i32 @strcmp(i8* %1601, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %1603 = icmp ne i32 %1602, 0
  br i1 %1603, label %1610, label %1604

; <label>:1604:                                   ; preds = %1598
  %1605 = add nsw i32 %1485, 1
  %1606 = sext i32 %1605 to i64
  %1607 = getelementptr inbounds i8*, i8** %25, i64 %1606
  %1608 = load i8*, i8** %1607, align 8
  %1609 = call noalias i8* @strdup(i8* %1608) #9, !track !180
  store i8* %1609, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %1647

; <label>:1610:                                   ; preds = %1598
  %1611 = sext i32 %1485 to i64
  %1612 = getelementptr inbounds i8*, i8** %25, i64 %1611
  %1613 = load i8*, i8** %1612, align 8
  %1614 = call i32 @strcmp(i8* %1613, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %1615 = icmp ne i32 %1614, 0
  br i1 %1615, label %1622, label %1616

; <label>:1616:                                   ; preds = %1610
  %1617 = add nsw i32 %1485, 1
  %1618 = sext i32 %1617 to i64
  %1619 = getelementptr inbounds i8*, i8** %25, i64 %1618
  %1620 = load i8*, i8** %1619, align 8
  %1621 = call noalias i8* @strdup(i8* %1620) #9, !track !181
  store i8* %1621, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %1647

; <label>:1622:                                   ; preds = %1610
  %1623 = sext i32 %1485 to i64
  %1624 = getelementptr inbounds i8*, i8** %25, i64 %1623
  %1625 = load i8*, i8** %1624, align 8
  %1626 = call i32 @strcmp(i8* %1625, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %1627 = icmp ne i32 %1626, 0
  br i1 %1627, label %1629, label %1628

; <label>:1628:                                   ; preds = %1622
  call void @usage()
  br label %1647

; <label>:1629:                                   ; preds = %1622
  %1630 = sext i32 %1485 to i64
  %1631 = getelementptr inbounds i8*, i8** %25, i64 %1630
  %1632 = load i8*, i8** %1631, align 8
  %1633 = call i32 @strcmp(i8* %1632, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %1634 = icmp ne i32 %1633, 0
  br i1 %1634, label %1636, label %1635

; <label>:1635:                                   ; preds = %1629
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1647

; <label>:1636:                                   ; preds = %1629
  %1637 = sext i32 %1485 to i64
  %1638 = getelementptr inbounds i8*, i8** %25, i64 %1637
  %1639 = load i8*, i8** %1638, align 8
  %1640 = call i32 @strcmp(i8* %1639, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %1641 = icmp ne i32 %1640, 0
  br i1 %1641, label %1643, label %1642

; <label>:1642:                                   ; preds = %1636
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1647

; <label>:1643:                                   ; preds = %1636
  %1644 = sext i32 %1485 to i64
  %1645 = getelementptr inbounds i8*, i8** %25, i64 %1644
  %1646 = load i8*, i8** %1645, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %1646)
  call void @usage()
  br label %1647

; <label>:1647:                                   ; preds = %1643, %1642, %1635, %1628, %1616, %1604, %1592, %1581, %1573, %1562, %1555, %1543, %1536, %1529, %1522, %1509, %1502, %1495
  %.15.6 = phi i32 [ %1485, %1495 ], [ %1485, %1502 ], [ %1485, %1509 ], [ %1485, %1522 ], [ %1485, %1529 ], [ %1485, %1536 ], [ %1544, %1543 ], [ %1563, %1562 ], [ %1556, %1555 ], [ %1574, %1573 ], [ %1582, %1581 ], [ %1593, %1592 ], [ %1605, %1604 ], [ %1617, %1616 ], [ %1485, %1635 ], [ %1485, %1643 ], [ %1485, %1642 ], [ %1485, %1628 ]
  call void @__loop_iteration_test___1()
  %1648 = add nsw i32 %.15.6, 1
  %1649 = icmp slt i32 %1648, 4, !track_argc !177
  br i1 %1649, label %.lr.ph.7, label %._crit_edge.loopexit

.lr.ph.7:                                         ; preds = %1647
  call void @unroll_loop(i32 89)
  %1650 = sext i32 %1648 to i64
  %1651 = getelementptr inbounds i8*, i8** %25, i64 %1650
  %1652 = load i8*, i8** %1651, align 8
  %1653 = call i32 @strncmp(i8* %1652, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %1654 = icmp ne i32 %1653, 0
  %1655 = sext i32 %1648 to i64
  %1656 = getelementptr inbounds i8*, i8** %25, i64 %1655
  %1657 = load i8*, i8** %1656, align 8
  br i1 %1654, label %1662, label %1658

; <label>:1658:                                   ; preds = %.lr.ph.7
  %1659 = getelementptr inbounds i8, i8* %1657, i64 2
  %1660 = call i32 @atoi(i8* %1659) #8
  store i32 %1660, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %1661 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %1661)
  br label %1810

; <label>:1662:                                   ; preds = %.lr.ph.7
  %1663 = call i32 @strcmp(i8* %1657, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %1664 = icmp ne i32 %1663, 0
  br i1 %1664, label %1666, label %1665

; <label>:1665:                                   ; preds = %1662
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1810

; <label>:1666:                                   ; preds = %1662
  %1667 = sext i32 %1648 to i64
  %1668 = getelementptr inbounds i8*, i8** %25, i64 %1667
  %1669 = load i8*, i8** %1668, align 8
  %1670 = call i32 @strcmp(i8* %1669, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %1671 = icmp ne i32 %1670, 0
  br i1 %1671, label %1673, label %1672

; <label>:1672:                                   ; preds = %1666
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1810

; <label>:1673:                                   ; preds = %1666
  %1674 = sext i32 %1648 to i64
  %1675 = getelementptr inbounds i8*, i8** %25, i64 %1674
  %1676 = load i8*, i8** %1675, align 8
  %1677 = call i32 @strcmp(i8* %1676, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %1678 = icmp ne i32 %1677, 0
  br i1 %1678, label %1679, label %1685

; <label>:1679:                                   ; preds = %1673
  %1680 = sext i32 %1648 to i64
  %1681 = getelementptr inbounds i8*, i8** %25, i64 %1680
  %1682 = load i8*, i8** %1681, align 8
  %1683 = call i32 @strcmp(i8* %1682, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %1684 = icmp ne i32 %1683, 0
  br i1 %1684, label %1686, label %1685

; <label>:1685:                                   ; preds = %1679, %1673
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1810

; <label>:1686:                                   ; preds = %1679
  %1687 = sext i32 %1648 to i64
  %1688 = getelementptr inbounds i8*, i8** %25, i64 %1687
  %1689 = load i8*, i8** %1688, align 8
  %1690 = call i32 @strcmp(i8* %1689, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %1691 = icmp ne i32 %1690, 0
  br i1 %1691, label %1693, label %1692

; <label>:1692:                                   ; preds = %1686
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1810

; <label>:1693:                                   ; preds = %1686
  %1694 = sext i32 %1648 to i64
  %1695 = getelementptr inbounds i8*, i8** %25, i64 %1694
  %1696 = load i8*, i8** %1695, align 8
  %1697 = call i32 @strcmp(i8* %1696, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %1698 = icmp ne i32 %1697, 0
  br i1 %1698, label %1700, label %1699

; <label>:1699:                                   ; preds = %1693
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1810

; <label>:1700:                                   ; preds = %1693
  %1701 = sext i32 %1648 to i64
  %1702 = getelementptr inbounds i8*, i8** %25, i64 %1701
  %1703 = load i8*, i8** %1702, align 8
  %1704 = call i32 @strcmp(i8* %1703, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %1705 = icmp ne i32 %1704, 0
  br i1 %1705, label %1712, label %1706

; <label>:1706:                                   ; preds = %1700
  %1707 = add nsw i32 %1648, 1
  %1708 = sext i32 %1707 to i64
  %1709 = getelementptr inbounds i8*, i8** %25, i64 %1708
  %1710 = load i8*, i8** %1709, align 8
  %1711 = call noalias i8* @strdup(i8* %1710) #9, !track !178
  store i8* %1711, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %1810

; <label>:1712:                                   ; preds = %1700
  %1713 = sext i32 %1648 to i64
  %1714 = getelementptr inbounds i8*, i8** %25, i64 %1713
  %1715 = load i8*, i8** %1714, align 8
  %1716 = call i32 @strcmp(i8* %1715, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %1717 = icmp ne i32 %1716, 0
  br i1 %1717, label %1730, label %1718

; <label>:1718:                                   ; preds = %1712
  %1719 = add nsw i32 %1648, 1
  %1720 = sext i32 %1719 to i64
  %1721 = getelementptr inbounds i8*, i8** %25, i64 %1720
  %1722 = load i8*, i8** %1721, align 8
  %1723 = call i32 @conv_trick_conf(i8* %1722)
  %1724 = icmp ne i32 %1723, 0
  br i1 %1724, label %1725, label %1810

; <label>:1725:                                   ; preds = %1718
  %1726 = add nsw i32 %1719, 1
  %1727 = sext i32 %1726 to i64
  %1728 = getelementptr inbounds i8*, i8** %25, i64 %1727
  %1729 = load i8*, i8** %1728, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %1729)
  call void @usage()
  br label %1810

; <label>:1730:                                   ; preds = %1712
  %1731 = sext i32 %1648 to i64
  %1732 = getelementptr inbounds i8*, i8** %25, i64 %1731
  %1733 = load i8*, i8** %1732, align 8
  %1734 = call i32 @strcmp(i8* %1733, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %1735 = icmp ne i32 %1734, 0
  br i1 %1735, label %1749, label %1736

; <label>:1736:                                   ; preds = %1730
  %1737 = add nsw i32 %1648, 1
  %1738 = sext i32 %1737 to i64
  %1739 = getelementptr inbounds i8*, i8** %25, i64 %1738
  %1740 = load i8*, i8** %1739, align 8
  %1741 = call i32 @atoi(i8* %1740) #8
  store i32 %1741, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1742 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1743 = icmp ne i32 %1742, 0
  br i1 %1743, label %1810, label %1744

; <label>:1744:                                   ; preds = %1736
  %1745 = add nsw i32 %1737, 1
  %1746 = sext i32 %1745 to i64
  %1747 = getelementptr inbounds i8*, i8** %25, i64 %1746
  %1748 = load i8*, i8** %1747, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %1748)
  call void @usage()
  br label %1810

; <label>:1749:                                   ; preds = %1730
  %1750 = sext i32 %1648 to i64
  %1751 = getelementptr inbounds i8*, i8** %25, i64 %1750
  %1752 = load i8*, i8** %1751, align 8
  %1753 = call i32 @strcmp(i8* %1752, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %1754 = icmp ne i32 %1753, 0
  br i1 %1754, label %1761, label %1755

; <label>:1755:                                   ; preds = %1749
  %1756 = add nsw i32 %1648, 1
  %1757 = sext i32 %1756 to i64
  %1758 = getelementptr inbounds i8*, i8** %25, i64 %1757
  %1759 = load i8*, i8** %1758, align 8
  %1760 = call noalias i8* @strdup(i8* %1759) #9, !track !179
  store i8* %1760, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %1810

; <label>:1761:                                   ; preds = %1749
  %1762 = sext i32 %1648 to i64
  %1763 = getelementptr inbounds i8*, i8** %25, i64 %1762
  %1764 = load i8*, i8** %1763, align 8
  %1765 = call i32 @strcmp(i8* %1764, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %1766 = icmp ne i32 %1765, 0
  br i1 %1766, label %1773, label %1767

; <label>:1767:                                   ; preds = %1761
  %1768 = add nsw i32 %1648, 1
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds i8*, i8** %25, i64 %1769
  %1771 = load i8*, i8** %1770, align 8
  %1772 = call noalias i8* @strdup(i8* %1771) #9, !track !180
  store i8* %1772, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %1810

; <label>:1773:                                   ; preds = %1761
  %1774 = sext i32 %1648 to i64
  %1775 = getelementptr inbounds i8*, i8** %25, i64 %1774
  %1776 = load i8*, i8** %1775, align 8
  %1777 = call i32 @strcmp(i8* %1776, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %1778 = icmp ne i32 %1777, 0
  br i1 %1778, label %1785, label %1779

; <label>:1779:                                   ; preds = %1773
  %1780 = add nsw i32 %1648, 1
  %1781 = sext i32 %1780 to i64
  %1782 = getelementptr inbounds i8*, i8** %25, i64 %1781
  %1783 = load i8*, i8** %1782, align 8
  %1784 = call noalias i8* @strdup(i8* %1783) #9, !track !181
  store i8* %1784, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %1810

; <label>:1785:                                   ; preds = %1773
  %1786 = sext i32 %1648 to i64
  %1787 = getelementptr inbounds i8*, i8** %25, i64 %1786
  %1788 = load i8*, i8** %1787, align 8
  %1789 = call i32 @strcmp(i8* %1788, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %1790 = icmp ne i32 %1789, 0
  br i1 %1790, label %1792, label %1791

; <label>:1791:                                   ; preds = %1785
  call void @usage()
  br label %1810

; <label>:1792:                                   ; preds = %1785
  %1793 = sext i32 %1648 to i64
  %1794 = getelementptr inbounds i8*, i8** %25, i64 %1793
  %1795 = load i8*, i8** %1794, align 8
  %1796 = call i32 @strcmp(i8* %1795, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %1797 = icmp ne i32 %1796, 0
  br i1 %1797, label %1799, label %1798

; <label>:1798:                                   ; preds = %1792
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1810

; <label>:1799:                                   ; preds = %1792
  %1800 = sext i32 %1648 to i64
  %1801 = getelementptr inbounds i8*, i8** %25, i64 %1800
  %1802 = load i8*, i8** %1801, align 8
  %1803 = call i32 @strcmp(i8* %1802, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %1804 = icmp ne i32 %1803, 0
  br i1 %1804, label %1806, label %1805

; <label>:1805:                                   ; preds = %1799
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1810

; <label>:1806:                                   ; preds = %1799
  %1807 = sext i32 %1648 to i64
  %1808 = getelementptr inbounds i8*, i8** %25, i64 %1807
  %1809 = load i8*, i8** %1808, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %1809)
  call void @usage()
  br label %1810

; <label>:1810:                                   ; preds = %1806, %1805, %1798, %1791, %1779, %1767, %1755, %1744, %1736, %1725, %1718, %1706, %1699, %1692, %1685, %1672, %1665, %1658
  %.15.7 = phi i32 [ %1648, %1658 ], [ %1648, %1665 ], [ %1648, %1672 ], [ %1648, %1685 ], [ %1648, %1692 ], [ %1648, %1699 ], [ %1707, %1706 ], [ %1726, %1725 ], [ %1719, %1718 ], [ %1737, %1736 ], [ %1745, %1744 ], [ %1756, %1755 ], [ %1768, %1767 ], [ %1780, %1779 ], [ %1648, %1798 ], [ %1648, %1806 ], [ %1648, %1805 ], [ %1648, %1791 ]
  call void @__loop_iteration_test___1()
  %1811 = add nsw i32 %.15.7, 1
  %1812 = icmp slt i32 %1811, 4, !track_argc !177
  br i1 %1812, label %.lr.ph.8, label %._crit_edge.loopexit

.lr.ph.8:                                         ; preds = %1810
  call void @unroll_loop(i32 89)
  %1813 = sext i32 %1811 to i64
  %1814 = getelementptr inbounds i8*, i8** %25, i64 %1813
  %1815 = load i8*, i8** %1814, align 8
  %1816 = call i32 @strncmp(i8* %1815, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %1817 = icmp ne i32 %1816, 0
  %1818 = sext i32 %1811 to i64
  %1819 = getelementptr inbounds i8*, i8** %25, i64 %1818
  %1820 = load i8*, i8** %1819, align 8
  br i1 %1817, label %1825, label %1821

; <label>:1821:                                   ; preds = %.lr.ph.8
  %1822 = getelementptr inbounds i8, i8* %1820, i64 2
  %1823 = call i32 @atoi(i8* %1822) #8
  store i32 %1823, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %1824 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %1824)
  br label %1973

; <label>:1825:                                   ; preds = %.lr.ph.8
  %1826 = call i32 @strcmp(i8* %1820, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %1827 = icmp ne i32 %1826, 0
  br i1 %1827, label %1829, label %1828

; <label>:1828:                                   ; preds = %1825
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1973

; <label>:1829:                                   ; preds = %1825
  %1830 = sext i32 %1811 to i64
  %1831 = getelementptr inbounds i8*, i8** %25, i64 %1830
  %1832 = load i8*, i8** %1831, align 8
  %1833 = call i32 @strcmp(i8* %1832, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %1834 = icmp ne i32 %1833, 0
  br i1 %1834, label %1836, label %1835

; <label>:1835:                                   ; preds = %1829
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1973

; <label>:1836:                                   ; preds = %1829
  %1837 = sext i32 %1811 to i64
  %1838 = getelementptr inbounds i8*, i8** %25, i64 %1837
  %1839 = load i8*, i8** %1838, align 8
  %1840 = call i32 @strcmp(i8* %1839, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %1841 = icmp ne i32 %1840, 0
  br i1 %1841, label %1842, label %1848

; <label>:1842:                                   ; preds = %1836
  %1843 = sext i32 %1811 to i64
  %1844 = getelementptr inbounds i8*, i8** %25, i64 %1843
  %1845 = load i8*, i8** %1844, align 8
  %1846 = call i32 @strcmp(i8* %1845, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %1847 = icmp ne i32 %1846, 0
  br i1 %1847, label %1849, label %1848

; <label>:1848:                                   ; preds = %1842, %1836
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1973

; <label>:1849:                                   ; preds = %1842
  %1850 = sext i32 %1811 to i64
  %1851 = getelementptr inbounds i8*, i8** %25, i64 %1850
  %1852 = load i8*, i8** %1851, align 8
  %1853 = call i32 @strcmp(i8* %1852, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %1854 = icmp ne i32 %1853, 0
  br i1 %1854, label %1856, label %1855

; <label>:1855:                                   ; preds = %1849
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %1973

; <label>:1856:                                   ; preds = %1849
  %1857 = sext i32 %1811 to i64
  %1858 = getelementptr inbounds i8*, i8** %25, i64 %1857
  %1859 = load i8*, i8** %1858, align 8
  %1860 = call i32 @strcmp(i8* %1859, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %1861 = icmp ne i32 %1860, 0
  br i1 %1861, label %1863, label %1862

; <label>:1862:                                   ; preds = %1856
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %1973

; <label>:1863:                                   ; preds = %1856
  %1864 = sext i32 %1811 to i64
  %1865 = getelementptr inbounds i8*, i8** %25, i64 %1864
  %1866 = load i8*, i8** %1865, align 8
  %1867 = call i32 @strcmp(i8* %1866, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %1868 = icmp ne i32 %1867, 0
  br i1 %1868, label %1875, label %1869

; <label>:1869:                                   ; preds = %1863
  %1870 = add nsw i32 %1811, 1
  %1871 = sext i32 %1870 to i64
  %1872 = getelementptr inbounds i8*, i8** %25, i64 %1871
  %1873 = load i8*, i8** %1872, align 8
  %1874 = call noalias i8* @strdup(i8* %1873) #9, !track !178
  store i8* %1874, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %1973

; <label>:1875:                                   ; preds = %1863
  %1876 = sext i32 %1811 to i64
  %1877 = getelementptr inbounds i8*, i8** %25, i64 %1876
  %1878 = load i8*, i8** %1877, align 8
  %1879 = call i32 @strcmp(i8* %1878, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %1880 = icmp ne i32 %1879, 0
  br i1 %1880, label %1893, label %1881

; <label>:1881:                                   ; preds = %1875
  %1882 = add nsw i32 %1811, 1
  %1883 = sext i32 %1882 to i64
  %1884 = getelementptr inbounds i8*, i8** %25, i64 %1883
  %1885 = load i8*, i8** %1884, align 8
  %1886 = call i32 @conv_trick_conf(i8* %1885)
  %1887 = icmp ne i32 %1886, 0
  br i1 %1887, label %1888, label %1973

; <label>:1888:                                   ; preds = %1881
  %1889 = add nsw i32 %1882, 1
  %1890 = sext i32 %1889 to i64
  %1891 = getelementptr inbounds i8*, i8** %25, i64 %1890
  %1892 = load i8*, i8** %1891, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %1892)
  call void @usage()
  br label %1973

; <label>:1893:                                   ; preds = %1875
  %1894 = sext i32 %1811 to i64
  %1895 = getelementptr inbounds i8*, i8** %25, i64 %1894
  %1896 = load i8*, i8** %1895, align 8
  %1897 = call i32 @strcmp(i8* %1896, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %1898 = icmp ne i32 %1897, 0
  br i1 %1898, label %1912, label %1899

; <label>:1899:                                   ; preds = %1893
  %1900 = add nsw i32 %1811, 1
  %1901 = sext i32 %1900 to i64
  %1902 = getelementptr inbounds i8*, i8** %25, i64 %1901
  %1903 = load i8*, i8** %1902, align 8
  %1904 = call i32 @atoi(i8* %1903) #8
  store i32 %1904, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1905 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %1906 = icmp ne i32 %1905, 0
  br i1 %1906, label %1973, label %1907

; <label>:1907:                                   ; preds = %1899
  %1908 = add nsw i32 %1900, 1
  %1909 = sext i32 %1908 to i64
  %1910 = getelementptr inbounds i8*, i8** %25, i64 %1909
  %1911 = load i8*, i8** %1910, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %1911)
  call void @usage()
  br label %1973

; <label>:1912:                                   ; preds = %1893
  %1913 = sext i32 %1811 to i64
  %1914 = getelementptr inbounds i8*, i8** %25, i64 %1913
  %1915 = load i8*, i8** %1914, align 8
  %1916 = call i32 @strcmp(i8* %1915, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %1917 = icmp ne i32 %1916, 0
  br i1 %1917, label %1924, label %1918

; <label>:1918:                                   ; preds = %1912
  %1919 = add nsw i32 %1811, 1
  %1920 = sext i32 %1919 to i64
  %1921 = getelementptr inbounds i8*, i8** %25, i64 %1920
  %1922 = load i8*, i8** %1921, align 8
  %1923 = call noalias i8* @strdup(i8* %1922) #9, !track !179
  store i8* %1923, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %1973

; <label>:1924:                                   ; preds = %1912
  %1925 = sext i32 %1811 to i64
  %1926 = getelementptr inbounds i8*, i8** %25, i64 %1925
  %1927 = load i8*, i8** %1926, align 8
  %1928 = call i32 @strcmp(i8* %1927, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %1929 = icmp ne i32 %1928, 0
  br i1 %1929, label %1936, label %1930

; <label>:1930:                                   ; preds = %1924
  %1931 = add nsw i32 %1811, 1
  %1932 = sext i32 %1931 to i64
  %1933 = getelementptr inbounds i8*, i8** %25, i64 %1932
  %1934 = load i8*, i8** %1933, align 8
  %1935 = call noalias i8* @strdup(i8* %1934) #9, !track !180
  store i8* %1935, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %1973

; <label>:1936:                                   ; preds = %1924
  %1937 = sext i32 %1811 to i64
  %1938 = getelementptr inbounds i8*, i8** %25, i64 %1937
  %1939 = load i8*, i8** %1938, align 8
  %1940 = call i32 @strcmp(i8* %1939, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %1941 = icmp ne i32 %1940, 0
  br i1 %1941, label %1948, label %1942

; <label>:1942:                                   ; preds = %1936
  %1943 = add nsw i32 %1811, 1
  %1944 = sext i32 %1943 to i64
  %1945 = getelementptr inbounds i8*, i8** %25, i64 %1944
  %1946 = load i8*, i8** %1945, align 8
  %1947 = call noalias i8* @strdup(i8* %1946) #9, !track !181
  store i8* %1947, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %1973

; <label>:1948:                                   ; preds = %1936
  %1949 = sext i32 %1811 to i64
  %1950 = getelementptr inbounds i8*, i8** %25, i64 %1949
  %1951 = load i8*, i8** %1950, align 8
  %1952 = call i32 @strcmp(i8* %1951, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %1953 = icmp ne i32 %1952, 0
  br i1 %1953, label %1955, label %1954

; <label>:1954:                                   ; preds = %1948
  call void @usage()
  br label %1973

; <label>:1955:                                   ; preds = %1948
  %1956 = sext i32 %1811 to i64
  %1957 = getelementptr inbounds i8*, i8** %25, i64 %1956
  %1958 = load i8*, i8** %1957, align 8
  %1959 = call i32 @strcmp(i8* %1958, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %1960 = icmp ne i32 %1959, 0
  br i1 %1960, label %1962, label %1961

; <label>:1961:                                   ; preds = %1955
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1973

; <label>:1962:                                   ; preds = %1955
  %1963 = sext i32 %1811 to i64
  %1964 = getelementptr inbounds i8*, i8** %25, i64 %1963
  %1965 = load i8*, i8** %1964, align 8
  %1966 = call i32 @strcmp(i8* %1965, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %1967 = icmp ne i32 %1966, 0
  br i1 %1967, label %1969, label %1968

; <label>:1968:                                   ; preds = %1962
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %1973

; <label>:1969:                                   ; preds = %1962
  %1970 = sext i32 %1811 to i64
  %1971 = getelementptr inbounds i8*, i8** %25, i64 %1970
  %1972 = load i8*, i8** %1971, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %1972)
  call void @usage()
  br label %1973

; <label>:1973:                                   ; preds = %1969, %1968, %1961, %1954, %1942, %1930, %1918, %1907, %1899, %1888, %1881, %1869, %1862, %1855, %1848, %1835, %1828, %1821
  %.15.8 = phi i32 [ %1811, %1821 ], [ %1811, %1828 ], [ %1811, %1835 ], [ %1811, %1848 ], [ %1811, %1855 ], [ %1811, %1862 ], [ %1870, %1869 ], [ %1889, %1888 ], [ %1882, %1881 ], [ %1900, %1899 ], [ %1908, %1907 ], [ %1919, %1918 ], [ %1931, %1930 ], [ %1943, %1942 ], [ %1811, %1961 ], [ %1811, %1969 ], [ %1811, %1968 ], [ %1811, %1954 ]
  call void @__loop_iteration_test___1()
  %1974 = add nsw i32 %.15.8, 1
  %1975 = icmp slt i32 %1974, 4, !track_argc !177
  br i1 %1975, label %.lr.ph.9, label %._crit_edge.loopexit

.lr.ph.9:                                         ; preds = %1973
  call void @unroll_loop(i32 89)
  %1976 = sext i32 %1974 to i64
  %1977 = getelementptr inbounds i8*, i8** %25, i64 %1976
  %1978 = load i8*, i8** %1977, align 8
  %1979 = call i32 @strncmp(i8* %1978, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %1980 = icmp ne i32 %1979, 0
  %1981 = sext i32 %1974 to i64
  %1982 = getelementptr inbounds i8*, i8** %25, i64 %1981
  %1983 = load i8*, i8** %1982, align 8
  br i1 %1980, label %1988, label %1984

; <label>:1984:                                   ; preds = %.lr.ph.9
  %1985 = getelementptr inbounds i8, i8* %1983, i64 2
  %1986 = call i32 @atoi(i8* %1985) #8
  store i32 %1986, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %1987 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %1987)
  br label %2136

; <label>:1988:                                   ; preds = %.lr.ph.9
  %1989 = call i32 @strcmp(i8* %1983, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %1990 = icmp ne i32 %1989, 0
  br i1 %1990, label %1992, label %1991

; <label>:1991:                                   ; preds = %1988
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2136

; <label>:1992:                                   ; preds = %1988
  %1993 = sext i32 %1974 to i64
  %1994 = getelementptr inbounds i8*, i8** %25, i64 %1993
  %1995 = load i8*, i8** %1994, align 8
  %1996 = call i32 @strcmp(i8* %1995, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %1997 = icmp ne i32 %1996, 0
  br i1 %1997, label %1999, label %1998

; <label>:1998:                                   ; preds = %1992
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2136

; <label>:1999:                                   ; preds = %1992
  %2000 = sext i32 %1974 to i64
  %2001 = getelementptr inbounds i8*, i8** %25, i64 %2000
  %2002 = load i8*, i8** %2001, align 8
  %2003 = call i32 @strcmp(i8* %2002, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %2004 = icmp ne i32 %2003, 0
  br i1 %2004, label %2005, label %2011

; <label>:2005:                                   ; preds = %1999
  %2006 = sext i32 %1974 to i64
  %2007 = getelementptr inbounds i8*, i8** %25, i64 %2006
  %2008 = load i8*, i8** %2007, align 8
  %2009 = call i32 @strcmp(i8* %2008, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %2010 = icmp ne i32 %2009, 0
  br i1 %2010, label %2012, label %2011

; <label>:2011:                                   ; preds = %2005, %1999
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2136

; <label>:2012:                                   ; preds = %2005
  %2013 = sext i32 %1974 to i64
  %2014 = getelementptr inbounds i8*, i8** %25, i64 %2013
  %2015 = load i8*, i8** %2014, align 8
  %2016 = call i32 @strcmp(i8* %2015, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %2017 = icmp ne i32 %2016, 0
  br i1 %2017, label %2019, label %2018

; <label>:2018:                                   ; preds = %2012
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2136

; <label>:2019:                                   ; preds = %2012
  %2020 = sext i32 %1974 to i64
  %2021 = getelementptr inbounds i8*, i8** %25, i64 %2020
  %2022 = load i8*, i8** %2021, align 8
  %2023 = call i32 @strcmp(i8* %2022, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %2024 = icmp ne i32 %2023, 0
  br i1 %2024, label %2026, label %2025

; <label>:2025:                                   ; preds = %2019
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2136

; <label>:2026:                                   ; preds = %2019
  %2027 = sext i32 %1974 to i64
  %2028 = getelementptr inbounds i8*, i8** %25, i64 %2027
  %2029 = load i8*, i8** %2028, align 8
  %2030 = call i32 @strcmp(i8* %2029, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %2031 = icmp ne i32 %2030, 0
  br i1 %2031, label %2038, label %2032

; <label>:2032:                                   ; preds = %2026
  %2033 = add nsw i32 %1974, 1
  %2034 = sext i32 %2033 to i64
  %2035 = getelementptr inbounds i8*, i8** %25, i64 %2034
  %2036 = load i8*, i8** %2035, align 8
  %2037 = call noalias i8* @strdup(i8* %2036) #9, !track !178
  store i8* %2037, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %2136

; <label>:2038:                                   ; preds = %2026
  %2039 = sext i32 %1974 to i64
  %2040 = getelementptr inbounds i8*, i8** %25, i64 %2039
  %2041 = load i8*, i8** %2040, align 8
  %2042 = call i32 @strcmp(i8* %2041, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %2043 = icmp ne i32 %2042, 0
  br i1 %2043, label %2056, label %2044

; <label>:2044:                                   ; preds = %2038
  %2045 = add nsw i32 %1974, 1
  %2046 = sext i32 %2045 to i64
  %2047 = getelementptr inbounds i8*, i8** %25, i64 %2046
  %2048 = load i8*, i8** %2047, align 8
  %2049 = call i32 @conv_trick_conf(i8* %2048)
  %2050 = icmp ne i32 %2049, 0
  br i1 %2050, label %2051, label %2136

; <label>:2051:                                   ; preds = %2044
  %2052 = add nsw i32 %2045, 1
  %2053 = sext i32 %2052 to i64
  %2054 = getelementptr inbounds i8*, i8** %25, i64 %2053
  %2055 = load i8*, i8** %2054, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %2055)
  call void @usage()
  br label %2136

; <label>:2056:                                   ; preds = %2038
  %2057 = sext i32 %1974 to i64
  %2058 = getelementptr inbounds i8*, i8** %25, i64 %2057
  %2059 = load i8*, i8** %2058, align 8
  %2060 = call i32 @strcmp(i8* %2059, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %2061 = icmp ne i32 %2060, 0
  br i1 %2061, label %2075, label %2062

; <label>:2062:                                   ; preds = %2056
  %2063 = add nsw i32 %1974, 1
  %2064 = sext i32 %2063 to i64
  %2065 = getelementptr inbounds i8*, i8** %25, i64 %2064
  %2066 = load i8*, i8** %2065, align 8
  %2067 = call i32 @atoi(i8* %2066) #8
  store i32 %2067, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2068 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2069 = icmp ne i32 %2068, 0
  br i1 %2069, label %2136, label %2070

; <label>:2070:                                   ; preds = %2062
  %2071 = add nsw i32 %2063, 1
  %2072 = sext i32 %2071 to i64
  %2073 = getelementptr inbounds i8*, i8** %25, i64 %2072
  %2074 = load i8*, i8** %2073, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %2074)
  call void @usage()
  br label %2136

; <label>:2075:                                   ; preds = %2056
  %2076 = sext i32 %1974 to i64
  %2077 = getelementptr inbounds i8*, i8** %25, i64 %2076
  %2078 = load i8*, i8** %2077, align 8
  %2079 = call i32 @strcmp(i8* %2078, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %2080 = icmp ne i32 %2079, 0
  br i1 %2080, label %2087, label %2081

; <label>:2081:                                   ; preds = %2075
  %2082 = add nsw i32 %1974, 1
  %2083 = sext i32 %2082 to i64
  %2084 = getelementptr inbounds i8*, i8** %25, i64 %2083
  %2085 = load i8*, i8** %2084, align 8
  %2086 = call noalias i8* @strdup(i8* %2085) #9, !track !179
  store i8* %2086, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %2136

; <label>:2087:                                   ; preds = %2075
  %2088 = sext i32 %1974 to i64
  %2089 = getelementptr inbounds i8*, i8** %25, i64 %2088
  %2090 = load i8*, i8** %2089, align 8
  %2091 = call i32 @strcmp(i8* %2090, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %2092 = icmp ne i32 %2091, 0
  br i1 %2092, label %2099, label %2093

; <label>:2093:                                   ; preds = %2087
  %2094 = add nsw i32 %1974, 1
  %2095 = sext i32 %2094 to i64
  %2096 = getelementptr inbounds i8*, i8** %25, i64 %2095
  %2097 = load i8*, i8** %2096, align 8
  %2098 = call noalias i8* @strdup(i8* %2097) #9, !track !180
  store i8* %2098, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %2136

; <label>:2099:                                   ; preds = %2087
  %2100 = sext i32 %1974 to i64
  %2101 = getelementptr inbounds i8*, i8** %25, i64 %2100
  %2102 = load i8*, i8** %2101, align 8
  %2103 = call i32 @strcmp(i8* %2102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %2104 = icmp ne i32 %2103, 0
  br i1 %2104, label %2111, label %2105

; <label>:2105:                                   ; preds = %2099
  %2106 = add nsw i32 %1974, 1
  %2107 = sext i32 %2106 to i64
  %2108 = getelementptr inbounds i8*, i8** %25, i64 %2107
  %2109 = load i8*, i8** %2108, align 8
  %2110 = call noalias i8* @strdup(i8* %2109) #9, !track !181
  store i8* %2110, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %2136

; <label>:2111:                                   ; preds = %2099
  %2112 = sext i32 %1974 to i64
  %2113 = getelementptr inbounds i8*, i8** %25, i64 %2112
  %2114 = load i8*, i8** %2113, align 8
  %2115 = call i32 @strcmp(i8* %2114, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %2116 = icmp ne i32 %2115, 0
  br i1 %2116, label %2118, label %2117

; <label>:2117:                                   ; preds = %2111
  call void @usage()
  br label %2136

; <label>:2118:                                   ; preds = %2111
  %2119 = sext i32 %1974 to i64
  %2120 = getelementptr inbounds i8*, i8** %25, i64 %2119
  %2121 = load i8*, i8** %2120, align 8
  %2122 = call i32 @strcmp(i8* %2121, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %2123 = icmp ne i32 %2122, 0
  br i1 %2123, label %2125, label %2124

; <label>:2124:                                   ; preds = %2118
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2136

; <label>:2125:                                   ; preds = %2118
  %2126 = sext i32 %1974 to i64
  %2127 = getelementptr inbounds i8*, i8** %25, i64 %2126
  %2128 = load i8*, i8** %2127, align 8
  %2129 = call i32 @strcmp(i8* %2128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %2130 = icmp ne i32 %2129, 0
  br i1 %2130, label %2132, label %2131

; <label>:2131:                                   ; preds = %2125
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2136

; <label>:2132:                                   ; preds = %2125
  %2133 = sext i32 %1974 to i64
  %2134 = getelementptr inbounds i8*, i8** %25, i64 %2133
  %2135 = load i8*, i8** %2134, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %2135)
  call void @usage()
  br label %2136

; <label>:2136:                                   ; preds = %2132, %2131, %2124, %2117, %2105, %2093, %2081, %2070, %2062, %2051, %2044, %2032, %2025, %2018, %2011, %1998, %1991, %1984
  %.15.9 = phi i32 [ %1974, %1984 ], [ %1974, %1991 ], [ %1974, %1998 ], [ %1974, %2011 ], [ %1974, %2018 ], [ %1974, %2025 ], [ %2033, %2032 ], [ %2052, %2051 ], [ %2045, %2044 ], [ %2063, %2062 ], [ %2071, %2070 ], [ %2082, %2081 ], [ %2094, %2093 ], [ %2106, %2105 ], [ %1974, %2124 ], [ %1974, %2132 ], [ %1974, %2131 ], [ %1974, %2117 ]
  call void @__loop_iteration_test___1()
  %2137 = add nsw i32 %.15.9, 1
  %2138 = icmp slt i32 %2137, 4, !track_argc !177
  br i1 %2138, label %.lr.ph.10, label %._crit_edge.loopexit

.lr.ph.10:                                        ; preds = %2136
  call void @unroll_loop(i32 89)
  %2139 = sext i32 %2137 to i64
  %2140 = getelementptr inbounds i8*, i8** %25, i64 %2139
  %2141 = load i8*, i8** %2140, align 8
  %2142 = call i32 @strncmp(i8* %2141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %2143 = icmp ne i32 %2142, 0
  %2144 = sext i32 %2137 to i64
  %2145 = getelementptr inbounds i8*, i8** %25, i64 %2144
  %2146 = load i8*, i8** %2145, align 8
  br i1 %2143, label %2151, label %2147

; <label>:2147:                                   ; preds = %.lr.ph.10
  %2148 = getelementptr inbounds i8, i8* %2146, i64 2
  %2149 = call i32 @atoi(i8* %2148) #8
  store i32 %2149, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %2150 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %2150)
  br label %2299

; <label>:2151:                                   ; preds = %.lr.ph.10
  %2152 = call i32 @strcmp(i8* %2146, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %2153 = icmp ne i32 %2152, 0
  br i1 %2153, label %2155, label %2154

; <label>:2154:                                   ; preds = %2151
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2299

; <label>:2155:                                   ; preds = %2151
  %2156 = sext i32 %2137 to i64
  %2157 = getelementptr inbounds i8*, i8** %25, i64 %2156
  %2158 = load i8*, i8** %2157, align 8
  %2159 = call i32 @strcmp(i8* %2158, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %2160 = icmp ne i32 %2159, 0
  br i1 %2160, label %2162, label %2161

; <label>:2161:                                   ; preds = %2155
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2299

; <label>:2162:                                   ; preds = %2155
  %2163 = sext i32 %2137 to i64
  %2164 = getelementptr inbounds i8*, i8** %25, i64 %2163
  %2165 = load i8*, i8** %2164, align 8
  %2166 = call i32 @strcmp(i8* %2165, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %2167 = icmp ne i32 %2166, 0
  br i1 %2167, label %2168, label %2174

; <label>:2168:                                   ; preds = %2162
  %2169 = sext i32 %2137 to i64
  %2170 = getelementptr inbounds i8*, i8** %25, i64 %2169
  %2171 = load i8*, i8** %2170, align 8
  %2172 = call i32 @strcmp(i8* %2171, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %2173 = icmp ne i32 %2172, 0
  br i1 %2173, label %2175, label %2174

; <label>:2174:                                   ; preds = %2168, %2162
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2299

; <label>:2175:                                   ; preds = %2168
  %2176 = sext i32 %2137 to i64
  %2177 = getelementptr inbounds i8*, i8** %25, i64 %2176
  %2178 = load i8*, i8** %2177, align 8
  %2179 = call i32 @strcmp(i8* %2178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %2180 = icmp ne i32 %2179, 0
  br i1 %2180, label %2182, label %2181

; <label>:2181:                                   ; preds = %2175
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2299

; <label>:2182:                                   ; preds = %2175
  %2183 = sext i32 %2137 to i64
  %2184 = getelementptr inbounds i8*, i8** %25, i64 %2183
  %2185 = load i8*, i8** %2184, align 8
  %2186 = call i32 @strcmp(i8* %2185, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %2187 = icmp ne i32 %2186, 0
  br i1 %2187, label %2189, label %2188

; <label>:2188:                                   ; preds = %2182
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2299

; <label>:2189:                                   ; preds = %2182
  %2190 = sext i32 %2137 to i64
  %2191 = getelementptr inbounds i8*, i8** %25, i64 %2190
  %2192 = load i8*, i8** %2191, align 8
  %2193 = call i32 @strcmp(i8* %2192, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %2194 = icmp ne i32 %2193, 0
  br i1 %2194, label %2201, label %2195

; <label>:2195:                                   ; preds = %2189
  %2196 = add nsw i32 %2137, 1
  %2197 = sext i32 %2196 to i64
  %2198 = getelementptr inbounds i8*, i8** %25, i64 %2197
  %2199 = load i8*, i8** %2198, align 8
  %2200 = call noalias i8* @strdup(i8* %2199) #9, !track !178
  store i8* %2200, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %2299

; <label>:2201:                                   ; preds = %2189
  %2202 = sext i32 %2137 to i64
  %2203 = getelementptr inbounds i8*, i8** %25, i64 %2202
  %2204 = load i8*, i8** %2203, align 8
  %2205 = call i32 @strcmp(i8* %2204, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %2206 = icmp ne i32 %2205, 0
  br i1 %2206, label %2219, label %2207

; <label>:2207:                                   ; preds = %2201
  %2208 = add nsw i32 %2137, 1
  %2209 = sext i32 %2208 to i64
  %2210 = getelementptr inbounds i8*, i8** %25, i64 %2209
  %2211 = load i8*, i8** %2210, align 8
  %2212 = call i32 @conv_trick_conf(i8* %2211)
  %2213 = icmp ne i32 %2212, 0
  br i1 %2213, label %2214, label %2299

; <label>:2214:                                   ; preds = %2207
  %2215 = add nsw i32 %2208, 1
  %2216 = sext i32 %2215 to i64
  %2217 = getelementptr inbounds i8*, i8** %25, i64 %2216
  %2218 = load i8*, i8** %2217, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %2218)
  call void @usage()
  br label %2299

; <label>:2219:                                   ; preds = %2201
  %2220 = sext i32 %2137 to i64
  %2221 = getelementptr inbounds i8*, i8** %25, i64 %2220
  %2222 = load i8*, i8** %2221, align 8
  %2223 = call i32 @strcmp(i8* %2222, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %2224 = icmp ne i32 %2223, 0
  br i1 %2224, label %2238, label %2225

; <label>:2225:                                   ; preds = %2219
  %2226 = add nsw i32 %2137, 1
  %2227 = sext i32 %2226 to i64
  %2228 = getelementptr inbounds i8*, i8** %25, i64 %2227
  %2229 = load i8*, i8** %2228, align 8
  %2230 = call i32 @atoi(i8* %2229) #8
  store i32 %2230, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2231 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2232 = icmp ne i32 %2231, 0
  br i1 %2232, label %2299, label %2233

; <label>:2233:                                   ; preds = %2225
  %2234 = add nsw i32 %2226, 1
  %2235 = sext i32 %2234 to i64
  %2236 = getelementptr inbounds i8*, i8** %25, i64 %2235
  %2237 = load i8*, i8** %2236, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %2237)
  call void @usage()
  br label %2299

; <label>:2238:                                   ; preds = %2219
  %2239 = sext i32 %2137 to i64
  %2240 = getelementptr inbounds i8*, i8** %25, i64 %2239
  %2241 = load i8*, i8** %2240, align 8
  %2242 = call i32 @strcmp(i8* %2241, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %2243 = icmp ne i32 %2242, 0
  br i1 %2243, label %2250, label %2244

; <label>:2244:                                   ; preds = %2238
  %2245 = add nsw i32 %2137, 1
  %2246 = sext i32 %2245 to i64
  %2247 = getelementptr inbounds i8*, i8** %25, i64 %2246
  %2248 = load i8*, i8** %2247, align 8
  %2249 = call noalias i8* @strdup(i8* %2248) #9, !track !179
  store i8* %2249, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %2299

; <label>:2250:                                   ; preds = %2238
  %2251 = sext i32 %2137 to i64
  %2252 = getelementptr inbounds i8*, i8** %25, i64 %2251
  %2253 = load i8*, i8** %2252, align 8
  %2254 = call i32 @strcmp(i8* %2253, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %2255 = icmp ne i32 %2254, 0
  br i1 %2255, label %2262, label %2256

; <label>:2256:                                   ; preds = %2250
  %2257 = add nsw i32 %2137, 1
  %2258 = sext i32 %2257 to i64
  %2259 = getelementptr inbounds i8*, i8** %25, i64 %2258
  %2260 = load i8*, i8** %2259, align 8
  %2261 = call noalias i8* @strdup(i8* %2260) #9, !track !180
  store i8* %2261, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %2299

; <label>:2262:                                   ; preds = %2250
  %2263 = sext i32 %2137 to i64
  %2264 = getelementptr inbounds i8*, i8** %25, i64 %2263
  %2265 = load i8*, i8** %2264, align 8
  %2266 = call i32 @strcmp(i8* %2265, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %2267 = icmp ne i32 %2266, 0
  br i1 %2267, label %2274, label %2268

; <label>:2268:                                   ; preds = %2262
  %2269 = add nsw i32 %2137, 1
  %2270 = sext i32 %2269 to i64
  %2271 = getelementptr inbounds i8*, i8** %25, i64 %2270
  %2272 = load i8*, i8** %2271, align 8
  %2273 = call noalias i8* @strdup(i8* %2272) #9, !track !181
  store i8* %2273, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %2299

; <label>:2274:                                   ; preds = %2262
  %2275 = sext i32 %2137 to i64
  %2276 = getelementptr inbounds i8*, i8** %25, i64 %2275
  %2277 = load i8*, i8** %2276, align 8
  %2278 = call i32 @strcmp(i8* %2277, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %2279 = icmp ne i32 %2278, 0
  br i1 %2279, label %2281, label %2280

; <label>:2280:                                   ; preds = %2274
  call void @usage()
  br label %2299

; <label>:2281:                                   ; preds = %2274
  %2282 = sext i32 %2137 to i64
  %2283 = getelementptr inbounds i8*, i8** %25, i64 %2282
  %2284 = load i8*, i8** %2283, align 8
  %2285 = call i32 @strcmp(i8* %2284, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %2286 = icmp ne i32 %2285, 0
  br i1 %2286, label %2288, label %2287

; <label>:2287:                                   ; preds = %2281
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2299

; <label>:2288:                                   ; preds = %2281
  %2289 = sext i32 %2137 to i64
  %2290 = getelementptr inbounds i8*, i8** %25, i64 %2289
  %2291 = load i8*, i8** %2290, align 8
  %2292 = call i32 @strcmp(i8* %2291, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %2293 = icmp ne i32 %2292, 0
  br i1 %2293, label %2295, label %2294

; <label>:2294:                                   ; preds = %2288
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2299

; <label>:2295:                                   ; preds = %2288
  %2296 = sext i32 %2137 to i64
  %2297 = getelementptr inbounds i8*, i8** %25, i64 %2296
  %2298 = load i8*, i8** %2297, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %2298)
  call void @usage()
  br label %2299

; <label>:2299:                                   ; preds = %2295, %2294, %2287, %2280, %2268, %2256, %2244, %2233, %2225, %2214, %2207, %2195, %2188, %2181, %2174, %2161, %2154, %2147
  %.15.10 = phi i32 [ %2137, %2147 ], [ %2137, %2154 ], [ %2137, %2161 ], [ %2137, %2174 ], [ %2137, %2181 ], [ %2137, %2188 ], [ %2196, %2195 ], [ %2215, %2214 ], [ %2208, %2207 ], [ %2226, %2225 ], [ %2234, %2233 ], [ %2245, %2244 ], [ %2257, %2256 ], [ %2269, %2268 ], [ %2137, %2287 ], [ %2137, %2295 ], [ %2137, %2294 ], [ %2137, %2280 ]
  call void @__loop_iteration_test___1()
  %2300 = add nsw i32 %.15.10, 1
  %2301 = icmp slt i32 %2300, 4, !track_argc !177
  br i1 %2301, label %.lr.ph.11, label %._crit_edge.loopexit

.lr.ph.11:                                        ; preds = %2299
  call void @unroll_loop(i32 89)
  %2302 = sext i32 %2300 to i64
  %2303 = getelementptr inbounds i8*, i8** %25, i64 %2302
  %2304 = load i8*, i8** %2303, align 8
  %2305 = call i32 @strncmp(i8* %2304, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %2306 = icmp ne i32 %2305, 0
  %2307 = sext i32 %2300 to i64
  %2308 = getelementptr inbounds i8*, i8** %25, i64 %2307
  %2309 = load i8*, i8** %2308, align 8
  br i1 %2306, label %2314, label %2310

; <label>:2310:                                   ; preds = %.lr.ph.11
  %2311 = getelementptr inbounds i8, i8* %2309, i64 2
  %2312 = call i32 @atoi(i8* %2311) #8
  store i32 %2312, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %2313 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %2313)
  br label %2462

; <label>:2314:                                   ; preds = %.lr.ph.11
  %2315 = call i32 @strcmp(i8* %2309, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %2316 = icmp ne i32 %2315, 0
  br i1 %2316, label %2318, label %2317

; <label>:2317:                                   ; preds = %2314
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2462

; <label>:2318:                                   ; preds = %2314
  %2319 = sext i32 %2300 to i64
  %2320 = getelementptr inbounds i8*, i8** %25, i64 %2319
  %2321 = load i8*, i8** %2320, align 8
  %2322 = call i32 @strcmp(i8* %2321, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %2323 = icmp ne i32 %2322, 0
  br i1 %2323, label %2325, label %2324

; <label>:2324:                                   ; preds = %2318
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2462

; <label>:2325:                                   ; preds = %2318
  %2326 = sext i32 %2300 to i64
  %2327 = getelementptr inbounds i8*, i8** %25, i64 %2326
  %2328 = load i8*, i8** %2327, align 8
  %2329 = call i32 @strcmp(i8* %2328, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %2330 = icmp ne i32 %2329, 0
  br i1 %2330, label %2331, label %2337

; <label>:2331:                                   ; preds = %2325
  %2332 = sext i32 %2300 to i64
  %2333 = getelementptr inbounds i8*, i8** %25, i64 %2332
  %2334 = load i8*, i8** %2333, align 8
  %2335 = call i32 @strcmp(i8* %2334, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %2336 = icmp ne i32 %2335, 0
  br i1 %2336, label %2338, label %2337

; <label>:2337:                                   ; preds = %2331, %2325
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2462

; <label>:2338:                                   ; preds = %2331
  %2339 = sext i32 %2300 to i64
  %2340 = getelementptr inbounds i8*, i8** %25, i64 %2339
  %2341 = load i8*, i8** %2340, align 8
  %2342 = call i32 @strcmp(i8* %2341, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %2343 = icmp ne i32 %2342, 0
  br i1 %2343, label %2345, label %2344

; <label>:2344:                                   ; preds = %2338
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2462

; <label>:2345:                                   ; preds = %2338
  %2346 = sext i32 %2300 to i64
  %2347 = getelementptr inbounds i8*, i8** %25, i64 %2346
  %2348 = load i8*, i8** %2347, align 8
  %2349 = call i32 @strcmp(i8* %2348, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %2350 = icmp ne i32 %2349, 0
  br i1 %2350, label %2352, label %2351

; <label>:2351:                                   ; preds = %2345
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2462

; <label>:2352:                                   ; preds = %2345
  %2353 = sext i32 %2300 to i64
  %2354 = getelementptr inbounds i8*, i8** %25, i64 %2353
  %2355 = load i8*, i8** %2354, align 8
  %2356 = call i32 @strcmp(i8* %2355, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %2357 = icmp ne i32 %2356, 0
  br i1 %2357, label %2364, label %2358

; <label>:2358:                                   ; preds = %2352
  %2359 = add nsw i32 %2300, 1
  %2360 = sext i32 %2359 to i64
  %2361 = getelementptr inbounds i8*, i8** %25, i64 %2360
  %2362 = load i8*, i8** %2361, align 8
  %2363 = call noalias i8* @strdup(i8* %2362) #9, !track !178
  store i8* %2363, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %2462

; <label>:2364:                                   ; preds = %2352
  %2365 = sext i32 %2300 to i64
  %2366 = getelementptr inbounds i8*, i8** %25, i64 %2365
  %2367 = load i8*, i8** %2366, align 8
  %2368 = call i32 @strcmp(i8* %2367, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %2369 = icmp ne i32 %2368, 0
  br i1 %2369, label %2382, label %2370

; <label>:2370:                                   ; preds = %2364
  %2371 = add nsw i32 %2300, 1
  %2372 = sext i32 %2371 to i64
  %2373 = getelementptr inbounds i8*, i8** %25, i64 %2372
  %2374 = load i8*, i8** %2373, align 8
  %2375 = call i32 @conv_trick_conf(i8* %2374)
  %2376 = icmp ne i32 %2375, 0
  br i1 %2376, label %2377, label %2462

; <label>:2377:                                   ; preds = %2370
  %2378 = add nsw i32 %2371, 1
  %2379 = sext i32 %2378 to i64
  %2380 = getelementptr inbounds i8*, i8** %25, i64 %2379
  %2381 = load i8*, i8** %2380, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %2381)
  call void @usage()
  br label %2462

; <label>:2382:                                   ; preds = %2364
  %2383 = sext i32 %2300 to i64
  %2384 = getelementptr inbounds i8*, i8** %25, i64 %2383
  %2385 = load i8*, i8** %2384, align 8
  %2386 = call i32 @strcmp(i8* %2385, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %2387 = icmp ne i32 %2386, 0
  br i1 %2387, label %2401, label %2388

; <label>:2388:                                   ; preds = %2382
  %2389 = add nsw i32 %2300, 1
  %2390 = sext i32 %2389 to i64
  %2391 = getelementptr inbounds i8*, i8** %25, i64 %2390
  %2392 = load i8*, i8** %2391, align 8
  %2393 = call i32 @atoi(i8* %2392) #8
  store i32 %2393, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2394 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2395 = icmp ne i32 %2394, 0
  br i1 %2395, label %2462, label %2396

; <label>:2396:                                   ; preds = %2388
  %2397 = add nsw i32 %2389, 1
  %2398 = sext i32 %2397 to i64
  %2399 = getelementptr inbounds i8*, i8** %25, i64 %2398
  %2400 = load i8*, i8** %2399, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %2400)
  call void @usage()
  br label %2462

; <label>:2401:                                   ; preds = %2382
  %2402 = sext i32 %2300 to i64
  %2403 = getelementptr inbounds i8*, i8** %25, i64 %2402
  %2404 = load i8*, i8** %2403, align 8
  %2405 = call i32 @strcmp(i8* %2404, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %2406 = icmp ne i32 %2405, 0
  br i1 %2406, label %2413, label %2407

; <label>:2407:                                   ; preds = %2401
  %2408 = add nsw i32 %2300, 1
  %2409 = sext i32 %2408 to i64
  %2410 = getelementptr inbounds i8*, i8** %25, i64 %2409
  %2411 = load i8*, i8** %2410, align 8
  %2412 = call noalias i8* @strdup(i8* %2411) #9, !track !179
  store i8* %2412, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %2462

; <label>:2413:                                   ; preds = %2401
  %2414 = sext i32 %2300 to i64
  %2415 = getelementptr inbounds i8*, i8** %25, i64 %2414
  %2416 = load i8*, i8** %2415, align 8
  %2417 = call i32 @strcmp(i8* %2416, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %2418 = icmp ne i32 %2417, 0
  br i1 %2418, label %2425, label %2419

; <label>:2419:                                   ; preds = %2413
  %2420 = add nsw i32 %2300, 1
  %2421 = sext i32 %2420 to i64
  %2422 = getelementptr inbounds i8*, i8** %25, i64 %2421
  %2423 = load i8*, i8** %2422, align 8
  %2424 = call noalias i8* @strdup(i8* %2423) #9, !track !180
  store i8* %2424, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %2462

; <label>:2425:                                   ; preds = %2413
  %2426 = sext i32 %2300 to i64
  %2427 = getelementptr inbounds i8*, i8** %25, i64 %2426
  %2428 = load i8*, i8** %2427, align 8
  %2429 = call i32 @strcmp(i8* %2428, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %2430 = icmp ne i32 %2429, 0
  br i1 %2430, label %2437, label %2431

; <label>:2431:                                   ; preds = %2425
  %2432 = add nsw i32 %2300, 1
  %2433 = sext i32 %2432 to i64
  %2434 = getelementptr inbounds i8*, i8** %25, i64 %2433
  %2435 = load i8*, i8** %2434, align 8
  %2436 = call noalias i8* @strdup(i8* %2435) #9, !track !181
  store i8* %2436, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %2462

; <label>:2437:                                   ; preds = %2425
  %2438 = sext i32 %2300 to i64
  %2439 = getelementptr inbounds i8*, i8** %25, i64 %2438
  %2440 = load i8*, i8** %2439, align 8
  %2441 = call i32 @strcmp(i8* %2440, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %2442 = icmp ne i32 %2441, 0
  br i1 %2442, label %2444, label %2443

; <label>:2443:                                   ; preds = %2437
  call void @usage()
  br label %2462

; <label>:2444:                                   ; preds = %2437
  %2445 = sext i32 %2300 to i64
  %2446 = getelementptr inbounds i8*, i8** %25, i64 %2445
  %2447 = load i8*, i8** %2446, align 8
  %2448 = call i32 @strcmp(i8* %2447, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %2449 = icmp ne i32 %2448, 0
  br i1 %2449, label %2451, label %2450

; <label>:2450:                                   ; preds = %2444
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2462

; <label>:2451:                                   ; preds = %2444
  %2452 = sext i32 %2300 to i64
  %2453 = getelementptr inbounds i8*, i8** %25, i64 %2452
  %2454 = load i8*, i8** %2453, align 8
  %2455 = call i32 @strcmp(i8* %2454, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %2456 = icmp ne i32 %2455, 0
  br i1 %2456, label %2458, label %2457

; <label>:2457:                                   ; preds = %2451
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2462

; <label>:2458:                                   ; preds = %2451
  %2459 = sext i32 %2300 to i64
  %2460 = getelementptr inbounds i8*, i8** %25, i64 %2459
  %2461 = load i8*, i8** %2460, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %2461)
  call void @usage()
  br label %2462

; <label>:2462:                                   ; preds = %2458, %2457, %2450, %2443, %2431, %2419, %2407, %2396, %2388, %2377, %2370, %2358, %2351, %2344, %2337, %2324, %2317, %2310
  %.15.11 = phi i32 [ %2300, %2310 ], [ %2300, %2317 ], [ %2300, %2324 ], [ %2300, %2337 ], [ %2300, %2344 ], [ %2300, %2351 ], [ %2359, %2358 ], [ %2378, %2377 ], [ %2371, %2370 ], [ %2389, %2388 ], [ %2397, %2396 ], [ %2408, %2407 ], [ %2420, %2419 ], [ %2432, %2431 ], [ %2300, %2450 ], [ %2300, %2458 ], [ %2300, %2457 ], [ %2300, %2443 ]
  call void @__loop_iteration_test___1()
  %2463 = add nsw i32 %.15.11, 1
  %2464 = icmp slt i32 %2463, 4, !track_argc !177
  br i1 %2464, label %.lr.ph.12, label %._crit_edge.loopexit

.lr.ph.12:                                        ; preds = %2462
  call void @unroll_loop(i32 89)
  %2465 = sext i32 %2463 to i64
  %2466 = getelementptr inbounds i8*, i8** %25, i64 %2465
  %2467 = load i8*, i8** %2466, align 8
  %2468 = call i32 @strncmp(i8* %2467, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %2469 = icmp ne i32 %2468, 0
  %2470 = sext i32 %2463 to i64
  %2471 = getelementptr inbounds i8*, i8** %25, i64 %2470
  %2472 = load i8*, i8** %2471, align 8
  br i1 %2469, label %2477, label %2473

; <label>:2473:                                   ; preds = %.lr.ph.12
  %2474 = getelementptr inbounds i8, i8* %2472, i64 2
  %2475 = call i32 @atoi(i8* %2474) #8
  store i32 %2475, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %2476 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %2476)
  br label %2625

; <label>:2477:                                   ; preds = %.lr.ph.12
  %2478 = call i32 @strcmp(i8* %2472, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %2479 = icmp ne i32 %2478, 0
  br i1 %2479, label %2481, label %2480

; <label>:2480:                                   ; preds = %2477
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2625

; <label>:2481:                                   ; preds = %2477
  %2482 = sext i32 %2463 to i64
  %2483 = getelementptr inbounds i8*, i8** %25, i64 %2482
  %2484 = load i8*, i8** %2483, align 8
  %2485 = call i32 @strcmp(i8* %2484, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %2486 = icmp ne i32 %2485, 0
  br i1 %2486, label %2488, label %2487

; <label>:2487:                                   ; preds = %2481
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2625

; <label>:2488:                                   ; preds = %2481
  %2489 = sext i32 %2463 to i64
  %2490 = getelementptr inbounds i8*, i8** %25, i64 %2489
  %2491 = load i8*, i8** %2490, align 8
  %2492 = call i32 @strcmp(i8* %2491, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %2493 = icmp ne i32 %2492, 0
  br i1 %2493, label %2494, label %2500

; <label>:2494:                                   ; preds = %2488
  %2495 = sext i32 %2463 to i64
  %2496 = getelementptr inbounds i8*, i8** %25, i64 %2495
  %2497 = load i8*, i8** %2496, align 8
  %2498 = call i32 @strcmp(i8* %2497, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %2499 = icmp ne i32 %2498, 0
  br i1 %2499, label %2501, label %2500

; <label>:2500:                                   ; preds = %2494, %2488
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2625

; <label>:2501:                                   ; preds = %2494
  %2502 = sext i32 %2463 to i64
  %2503 = getelementptr inbounds i8*, i8** %25, i64 %2502
  %2504 = load i8*, i8** %2503, align 8
  %2505 = call i32 @strcmp(i8* %2504, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %2506 = icmp ne i32 %2505, 0
  br i1 %2506, label %2508, label %2507

; <label>:2507:                                   ; preds = %2501
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2625

; <label>:2508:                                   ; preds = %2501
  %2509 = sext i32 %2463 to i64
  %2510 = getelementptr inbounds i8*, i8** %25, i64 %2509
  %2511 = load i8*, i8** %2510, align 8
  %2512 = call i32 @strcmp(i8* %2511, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %2513 = icmp ne i32 %2512, 0
  br i1 %2513, label %2515, label %2514

; <label>:2514:                                   ; preds = %2508
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2625

; <label>:2515:                                   ; preds = %2508
  %2516 = sext i32 %2463 to i64
  %2517 = getelementptr inbounds i8*, i8** %25, i64 %2516
  %2518 = load i8*, i8** %2517, align 8
  %2519 = call i32 @strcmp(i8* %2518, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %2520 = icmp ne i32 %2519, 0
  br i1 %2520, label %2527, label %2521

; <label>:2521:                                   ; preds = %2515
  %2522 = add nsw i32 %2463, 1
  %2523 = sext i32 %2522 to i64
  %2524 = getelementptr inbounds i8*, i8** %25, i64 %2523
  %2525 = load i8*, i8** %2524, align 8
  %2526 = call noalias i8* @strdup(i8* %2525) #9, !track !178
  store i8* %2526, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %2625

; <label>:2527:                                   ; preds = %2515
  %2528 = sext i32 %2463 to i64
  %2529 = getelementptr inbounds i8*, i8** %25, i64 %2528
  %2530 = load i8*, i8** %2529, align 8
  %2531 = call i32 @strcmp(i8* %2530, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %2532 = icmp ne i32 %2531, 0
  br i1 %2532, label %2545, label %2533

; <label>:2533:                                   ; preds = %2527
  %2534 = add nsw i32 %2463, 1
  %2535 = sext i32 %2534 to i64
  %2536 = getelementptr inbounds i8*, i8** %25, i64 %2535
  %2537 = load i8*, i8** %2536, align 8
  %2538 = call i32 @conv_trick_conf(i8* %2537)
  %2539 = icmp ne i32 %2538, 0
  br i1 %2539, label %2540, label %2625

; <label>:2540:                                   ; preds = %2533
  %2541 = add nsw i32 %2534, 1
  %2542 = sext i32 %2541 to i64
  %2543 = getelementptr inbounds i8*, i8** %25, i64 %2542
  %2544 = load i8*, i8** %2543, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %2544)
  call void @usage()
  br label %2625

; <label>:2545:                                   ; preds = %2527
  %2546 = sext i32 %2463 to i64
  %2547 = getelementptr inbounds i8*, i8** %25, i64 %2546
  %2548 = load i8*, i8** %2547, align 8
  %2549 = call i32 @strcmp(i8* %2548, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %2550 = icmp ne i32 %2549, 0
  br i1 %2550, label %2564, label %2551

; <label>:2551:                                   ; preds = %2545
  %2552 = add nsw i32 %2463, 1
  %2553 = sext i32 %2552 to i64
  %2554 = getelementptr inbounds i8*, i8** %25, i64 %2553
  %2555 = load i8*, i8** %2554, align 8
  %2556 = call i32 @atoi(i8* %2555) #8
  store i32 %2556, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2557 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2558 = icmp ne i32 %2557, 0
  br i1 %2558, label %2625, label %2559

; <label>:2559:                                   ; preds = %2551
  %2560 = add nsw i32 %2552, 1
  %2561 = sext i32 %2560 to i64
  %2562 = getelementptr inbounds i8*, i8** %25, i64 %2561
  %2563 = load i8*, i8** %2562, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %2563)
  call void @usage()
  br label %2625

; <label>:2564:                                   ; preds = %2545
  %2565 = sext i32 %2463 to i64
  %2566 = getelementptr inbounds i8*, i8** %25, i64 %2565
  %2567 = load i8*, i8** %2566, align 8
  %2568 = call i32 @strcmp(i8* %2567, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %2569 = icmp ne i32 %2568, 0
  br i1 %2569, label %2576, label %2570

; <label>:2570:                                   ; preds = %2564
  %2571 = add nsw i32 %2463, 1
  %2572 = sext i32 %2571 to i64
  %2573 = getelementptr inbounds i8*, i8** %25, i64 %2572
  %2574 = load i8*, i8** %2573, align 8
  %2575 = call noalias i8* @strdup(i8* %2574) #9, !track !179
  store i8* %2575, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %2625

; <label>:2576:                                   ; preds = %2564
  %2577 = sext i32 %2463 to i64
  %2578 = getelementptr inbounds i8*, i8** %25, i64 %2577
  %2579 = load i8*, i8** %2578, align 8
  %2580 = call i32 @strcmp(i8* %2579, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %2581 = icmp ne i32 %2580, 0
  br i1 %2581, label %2588, label %2582

; <label>:2582:                                   ; preds = %2576
  %2583 = add nsw i32 %2463, 1
  %2584 = sext i32 %2583 to i64
  %2585 = getelementptr inbounds i8*, i8** %25, i64 %2584
  %2586 = load i8*, i8** %2585, align 8
  %2587 = call noalias i8* @strdup(i8* %2586) #9, !track !180
  store i8* %2587, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %2625

; <label>:2588:                                   ; preds = %2576
  %2589 = sext i32 %2463 to i64
  %2590 = getelementptr inbounds i8*, i8** %25, i64 %2589
  %2591 = load i8*, i8** %2590, align 8
  %2592 = call i32 @strcmp(i8* %2591, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %2593 = icmp ne i32 %2592, 0
  br i1 %2593, label %2600, label %2594

; <label>:2594:                                   ; preds = %2588
  %2595 = add nsw i32 %2463, 1
  %2596 = sext i32 %2595 to i64
  %2597 = getelementptr inbounds i8*, i8** %25, i64 %2596
  %2598 = load i8*, i8** %2597, align 8
  %2599 = call noalias i8* @strdup(i8* %2598) #9, !track !181
  store i8* %2599, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %2625

; <label>:2600:                                   ; preds = %2588
  %2601 = sext i32 %2463 to i64
  %2602 = getelementptr inbounds i8*, i8** %25, i64 %2601
  %2603 = load i8*, i8** %2602, align 8
  %2604 = call i32 @strcmp(i8* %2603, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %2605 = icmp ne i32 %2604, 0
  br i1 %2605, label %2607, label %2606

; <label>:2606:                                   ; preds = %2600
  call void @usage()
  br label %2625

; <label>:2607:                                   ; preds = %2600
  %2608 = sext i32 %2463 to i64
  %2609 = getelementptr inbounds i8*, i8** %25, i64 %2608
  %2610 = load i8*, i8** %2609, align 8
  %2611 = call i32 @strcmp(i8* %2610, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %2612 = icmp ne i32 %2611, 0
  br i1 %2612, label %2614, label %2613

; <label>:2613:                                   ; preds = %2607
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2625

; <label>:2614:                                   ; preds = %2607
  %2615 = sext i32 %2463 to i64
  %2616 = getelementptr inbounds i8*, i8** %25, i64 %2615
  %2617 = load i8*, i8** %2616, align 8
  %2618 = call i32 @strcmp(i8* %2617, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %2619 = icmp ne i32 %2618, 0
  br i1 %2619, label %2621, label %2620

; <label>:2620:                                   ; preds = %2614
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2625

; <label>:2621:                                   ; preds = %2614
  %2622 = sext i32 %2463 to i64
  %2623 = getelementptr inbounds i8*, i8** %25, i64 %2622
  %2624 = load i8*, i8** %2623, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %2624)
  call void @usage()
  br label %2625

; <label>:2625:                                   ; preds = %2621, %2620, %2613, %2606, %2594, %2582, %2570, %2559, %2551, %2540, %2533, %2521, %2514, %2507, %2500, %2487, %2480, %2473
  %.15.12 = phi i32 [ %2463, %2473 ], [ %2463, %2480 ], [ %2463, %2487 ], [ %2463, %2500 ], [ %2463, %2507 ], [ %2463, %2514 ], [ %2522, %2521 ], [ %2541, %2540 ], [ %2534, %2533 ], [ %2552, %2551 ], [ %2560, %2559 ], [ %2571, %2570 ], [ %2583, %2582 ], [ %2595, %2594 ], [ %2463, %2613 ], [ %2463, %2621 ], [ %2463, %2620 ], [ %2463, %2606 ]
  call void @__loop_iteration_test___1()
  %2626 = add nsw i32 %.15.12, 1
  %2627 = icmp slt i32 %2626, 4, !track_argc !177
  br i1 %2627, label %.lr.ph.13, label %._crit_edge.loopexit

.lr.ph.13:                                        ; preds = %2625
  call void @unroll_loop(i32 89)
  %2628 = sext i32 %2626 to i64
  %2629 = getelementptr inbounds i8*, i8** %25, i64 %2628
  %2630 = load i8*, i8** %2629, align 8
  %2631 = call i32 @strncmp(i8* %2630, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %2632 = icmp ne i32 %2631, 0
  %2633 = sext i32 %2626 to i64
  %2634 = getelementptr inbounds i8*, i8** %25, i64 %2633
  %2635 = load i8*, i8** %2634, align 8
  br i1 %2632, label %2640, label %2636

; <label>:2636:                                   ; preds = %.lr.ph.13
  %2637 = getelementptr inbounds i8, i8* %2635, i64 2
  %2638 = call i32 @atoi(i8* %2637) #8
  store i32 %2638, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %2639 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %2639)
  br label %2788

; <label>:2640:                                   ; preds = %.lr.ph.13
  %2641 = call i32 @strcmp(i8* %2635, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %2642 = icmp ne i32 %2641, 0
  br i1 %2642, label %2644, label %2643

; <label>:2643:                                   ; preds = %2640
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2788

; <label>:2644:                                   ; preds = %2640
  %2645 = sext i32 %2626 to i64
  %2646 = getelementptr inbounds i8*, i8** %25, i64 %2645
  %2647 = load i8*, i8** %2646, align 8
  %2648 = call i32 @strcmp(i8* %2647, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %2649 = icmp ne i32 %2648, 0
  br i1 %2649, label %2651, label %2650

; <label>:2650:                                   ; preds = %2644
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2788

; <label>:2651:                                   ; preds = %2644
  %2652 = sext i32 %2626 to i64
  %2653 = getelementptr inbounds i8*, i8** %25, i64 %2652
  %2654 = load i8*, i8** %2653, align 8
  %2655 = call i32 @strcmp(i8* %2654, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %2656 = icmp ne i32 %2655, 0
  br i1 %2656, label %2657, label %2663

; <label>:2657:                                   ; preds = %2651
  %2658 = sext i32 %2626 to i64
  %2659 = getelementptr inbounds i8*, i8** %25, i64 %2658
  %2660 = load i8*, i8** %2659, align 8
  %2661 = call i32 @strcmp(i8* %2660, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %2662 = icmp ne i32 %2661, 0
  br i1 %2662, label %2664, label %2663

; <label>:2663:                                   ; preds = %2657, %2651
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2788

; <label>:2664:                                   ; preds = %2657
  %2665 = sext i32 %2626 to i64
  %2666 = getelementptr inbounds i8*, i8** %25, i64 %2665
  %2667 = load i8*, i8** %2666, align 8
  %2668 = call i32 @strcmp(i8* %2667, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %2669 = icmp ne i32 %2668, 0
  br i1 %2669, label %2671, label %2670

; <label>:2670:                                   ; preds = %2664
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2788

; <label>:2671:                                   ; preds = %2664
  %2672 = sext i32 %2626 to i64
  %2673 = getelementptr inbounds i8*, i8** %25, i64 %2672
  %2674 = load i8*, i8** %2673, align 8
  %2675 = call i32 @strcmp(i8* %2674, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %2676 = icmp ne i32 %2675, 0
  br i1 %2676, label %2678, label %2677

; <label>:2677:                                   ; preds = %2671
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2788

; <label>:2678:                                   ; preds = %2671
  %2679 = sext i32 %2626 to i64
  %2680 = getelementptr inbounds i8*, i8** %25, i64 %2679
  %2681 = load i8*, i8** %2680, align 8
  %2682 = call i32 @strcmp(i8* %2681, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %2683 = icmp ne i32 %2682, 0
  br i1 %2683, label %2690, label %2684

; <label>:2684:                                   ; preds = %2678
  %2685 = add nsw i32 %2626, 1
  %2686 = sext i32 %2685 to i64
  %2687 = getelementptr inbounds i8*, i8** %25, i64 %2686
  %2688 = load i8*, i8** %2687, align 8
  %2689 = call noalias i8* @strdup(i8* %2688) #9, !track !178
  store i8* %2689, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %2788

; <label>:2690:                                   ; preds = %2678
  %2691 = sext i32 %2626 to i64
  %2692 = getelementptr inbounds i8*, i8** %25, i64 %2691
  %2693 = load i8*, i8** %2692, align 8
  %2694 = call i32 @strcmp(i8* %2693, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %2695 = icmp ne i32 %2694, 0
  br i1 %2695, label %2708, label %2696

; <label>:2696:                                   ; preds = %2690
  %2697 = add nsw i32 %2626, 1
  %2698 = sext i32 %2697 to i64
  %2699 = getelementptr inbounds i8*, i8** %25, i64 %2698
  %2700 = load i8*, i8** %2699, align 8
  %2701 = call i32 @conv_trick_conf(i8* %2700)
  %2702 = icmp ne i32 %2701, 0
  br i1 %2702, label %2703, label %2788

; <label>:2703:                                   ; preds = %2696
  %2704 = add nsw i32 %2697, 1
  %2705 = sext i32 %2704 to i64
  %2706 = getelementptr inbounds i8*, i8** %25, i64 %2705
  %2707 = load i8*, i8** %2706, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %2707)
  call void @usage()
  br label %2788

; <label>:2708:                                   ; preds = %2690
  %2709 = sext i32 %2626 to i64
  %2710 = getelementptr inbounds i8*, i8** %25, i64 %2709
  %2711 = load i8*, i8** %2710, align 8
  %2712 = call i32 @strcmp(i8* %2711, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %2713 = icmp ne i32 %2712, 0
  br i1 %2713, label %2727, label %2714

; <label>:2714:                                   ; preds = %2708
  %2715 = add nsw i32 %2626, 1
  %2716 = sext i32 %2715 to i64
  %2717 = getelementptr inbounds i8*, i8** %25, i64 %2716
  %2718 = load i8*, i8** %2717, align 8
  %2719 = call i32 @atoi(i8* %2718) #8
  store i32 %2719, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2720 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2721 = icmp ne i32 %2720, 0
  br i1 %2721, label %2788, label %2722

; <label>:2722:                                   ; preds = %2714
  %2723 = add nsw i32 %2715, 1
  %2724 = sext i32 %2723 to i64
  %2725 = getelementptr inbounds i8*, i8** %25, i64 %2724
  %2726 = load i8*, i8** %2725, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %2726)
  call void @usage()
  br label %2788

; <label>:2727:                                   ; preds = %2708
  %2728 = sext i32 %2626 to i64
  %2729 = getelementptr inbounds i8*, i8** %25, i64 %2728
  %2730 = load i8*, i8** %2729, align 8
  %2731 = call i32 @strcmp(i8* %2730, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %2732 = icmp ne i32 %2731, 0
  br i1 %2732, label %2739, label %2733

; <label>:2733:                                   ; preds = %2727
  %2734 = add nsw i32 %2626, 1
  %2735 = sext i32 %2734 to i64
  %2736 = getelementptr inbounds i8*, i8** %25, i64 %2735
  %2737 = load i8*, i8** %2736, align 8
  %2738 = call noalias i8* @strdup(i8* %2737) #9, !track !179
  store i8* %2738, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %2788

; <label>:2739:                                   ; preds = %2727
  %2740 = sext i32 %2626 to i64
  %2741 = getelementptr inbounds i8*, i8** %25, i64 %2740
  %2742 = load i8*, i8** %2741, align 8
  %2743 = call i32 @strcmp(i8* %2742, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %2744 = icmp ne i32 %2743, 0
  br i1 %2744, label %2751, label %2745

; <label>:2745:                                   ; preds = %2739
  %2746 = add nsw i32 %2626, 1
  %2747 = sext i32 %2746 to i64
  %2748 = getelementptr inbounds i8*, i8** %25, i64 %2747
  %2749 = load i8*, i8** %2748, align 8
  %2750 = call noalias i8* @strdup(i8* %2749) #9, !track !180
  store i8* %2750, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %2788

; <label>:2751:                                   ; preds = %2739
  %2752 = sext i32 %2626 to i64
  %2753 = getelementptr inbounds i8*, i8** %25, i64 %2752
  %2754 = load i8*, i8** %2753, align 8
  %2755 = call i32 @strcmp(i8* %2754, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %2756 = icmp ne i32 %2755, 0
  br i1 %2756, label %2763, label %2757

; <label>:2757:                                   ; preds = %2751
  %2758 = add nsw i32 %2626, 1
  %2759 = sext i32 %2758 to i64
  %2760 = getelementptr inbounds i8*, i8** %25, i64 %2759
  %2761 = load i8*, i8** %2760, align 8
  %2762 = call noalias i8* @strdup(i8* %2761) #9, !track !181
  store i8* %2762, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %2788

; <label>:2763:                                   ; preds = %2751
  %2764 = sext i32 %2626 to i64
  %2765 = getelementptr inbounds i8*, i8** %25, i64 %2764
  %2766 = load i8*, i8** %2765, align 8
  %2767 = call i32 @strcmp(i8* %2766, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %2768 = icmp ne i32 %2767, 0
  br i1 %2768, label %2770, label %2769

; <label>:2769:                                   ; preds = %2763
  call void @usage()
  br label %2788

; <label>:2770:                                   ; preds = %2763
  %2771 = sext i32 %2626 to i64
  %2772 = getelementptr inbounds i8*, i8** %25, i64 %2771
  %2773 = load i8*, i8** %2772, align 8
  %2774 = call i32 @strcmp(i8* %2773, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %2775 = icmp ne i32 %2774, 0
  br i1 %2775, label %2777, label %2776

; <label>:2776:                                   ; preds = %2770
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2788

; <label>:2777:                                   ; preds = %2770
  %2778 = sext i32 %2626 to i64
  %2779 = getelementptr inbounds i8*, i8** %25, i64 %2778
  %2780 = load i8*, i8** %2779, align 8
  %2781 = call i32 @strcmp(i8* %2780, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %2782 = icmp ne i32 %2781, 0
  br i1 %2782, label %2784, label %2783

; <label>:2783:                                   ; preds = %2777
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2788

; <label>:2784:                                   ; preds = %2777
  %2785 = sext i32 %2626 to i64
  %2786 = getelementptr inbounds i8*, i8** %25, i64 %2785
  %2787 = load i8*, i8** %2786, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %2787)
  call void @usage()
  br label %2788

; <label>:2788:                                   ; preds = %2784, %2783, %2776, %2769, %2757, %2745, %2733, %2722, %2714, %2703, %2696, %2684, %2677, %2670, %2663, %2650, %2643, %2636
  %.15.13 = phi i32 [ %2626, %2636 ], [ %2626, %2643 ], [ %2626, %2650 ], [ %2626, %2663 ], [ %2626, %2670 ], [ %2626, %2677 ], [ %2685, %2684 ], [ %2704, %2703 ], [ %2697, %2696 ], [ %2715, %2714 ], [ %2723, %2722 ], [ %2734, %2733 ], [ %2746, %2745 ], [ %2758, %2757 ], [ %2626, %2776 ], [ %2626, %2784 ], [ %2626, %2783 ], [ %2626, %2769 ]
  call void @__loop_iteration_test___1()
  %2789 = add nsw i32 %.15.13, 1
  %2790 = icmp slt i32 %2789, 4, !track_argc !177
  br i1 %2790, label %.lr.ph.14, label %._crit_edge.loopexit

.lr.ph.14:                                        ; preds = %2788
  call void @unroll_loop(i32 89)
  %2791 = sext i32 %2789 to i64
  %2792 = getelementptr inbounds i8*, i8** %25, i64 %2791
  %2793 = load i8*, i8** %2792, align 8
  %2794 = call i32 @strncmp(i8* %2793, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %2795 = icmp ne i32 %2794, 0
  %2796 = sext i32 %2789 to i64
  %2797 = getelementptr inbounds i8*, i8** %25, i64 %2796
  %2798 = load i8*, i8** %2797, align 8
  br i1 %2795, label %2803, label %2799

; <label>:2799:                                   ; preds = %.lr.ph.14
  %2800 = getelementptr inbounds i8, i8* %2798, i64 2
  %2801 = call i32 @atoi(i8* %2800) #8
  store i32 %2801, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %2802 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %2802)
  br label %2951

; <label>:2803:                                   ; preds = %.lr.ph.14
  %2804 = call i32 @strcmp(i8* %2798, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %2805 = icmp ne i32 %2804, 0
  br i1 %2805, label %2807, label %2806

; <label>:2806:                                   ; preds = %2803
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2951

; <label>:2807:                                   ; preds = %2803
  %2808 = sext i32 %2789 to i64
  %2809 = getelementptr inbounds i8*, i8** %25, i64 %2808
  %2810 = load i8*, i8** %2809, align 8
  %2811 = call i32 @strcmp(i8* %2810, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %2812 = icmp ne i32 %2811, 0
  br i1 %2812, label %2814, label %2813

; <label>:2813:                                   ; preds = %2807
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2951

; <label>:2814:                                   ; preds = %2807
  %2815 = sext i32 %2789 to i64
  %2816 = getelementptr inbounds i8*, i8** %25, i64 %2815
  %2817 = load i8*, i8** %2816, align 8
  %2818 = call i32 @strcmp(i8* %2817, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %2819 = icmp ne i32 %2818, 0
  br i1 %2819, label %2820, label %2826

; <label>:2820:                                   ; preds = %2814
  %2821 = sext i32 %2789 to i64
  %2822 = getelementptr inbounds i8*, i8** %25, i64 %2821
  %2823 = load i8*, i8** %2822, align 8
  %2824 = call i32 @strcmp(i8* %2823, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %2825 = icmp ne i32 %2824, 0
  br i1 %2825, label %2827, label %2826

; <label>:2826:                                   ; preds = %2820, %2814
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2951

; <label>:2827:                                   ; preds = %2820
  %2828 = sext i32 %2789 to i64
  %2829 = getelementptr inbounds i8*, i8** %25, i64 %2828
  %2830 = load i8*, i8** %2829, align 8
  %2831 = call i32 @strcmp(i8* %2830, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %2832 = icmp ne i32 %2831, 0
  br i1 %2832, label %2834, label %2833

; <label>:2833:                                   ; preds = %2827
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %2951

; <label>:2834:                                   ; preds = %2827
  %2835 = sext i32 %2789 to i64
  %2836 = getelementptr inbounds i8*, i8** %25, i64 %2835
  %2837 = load i8*, i8** %2836, align 8
  %2838 = call i32 @strcmp(i8* %2837, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %2839 = icmp ne i32 %2838, 0
  br i1 %2839, label %2841, label %2840

; <label>:2840:                                   ; preds = %2834
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %2951

; <label>:2841:                                   ; preds = %2834
  %2842 = sext i32 %2789 to i64
  %2843 = getelementptr inbounds i8*, i8** %25, i64 %2842
  %2844 = load i8*, i8** %2843, align 8
  %2845 = call i32 @strcmp(i8* %2844, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %2846 = icmp ne i32 %2845, 0
  br i1 %2846, label %2853, label %2847

; <label>:2847:                                   ; preds = %2841
  %2848 = add nsw i32 %2789, 1
  %2849 = sext i32 %2848 to i64
  %2850 = getelementptr inbounds i8*, i8** %25, i64 %2849
  %2851 = load i8*, i8** %2850, align 8
  %2852 = call noalias i8* @strdup(i8* %2851) #9, !track !178
  store i8* %2852, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %2951

; <label>:2853:                                   ; preds = %2841
  %2854 = sext i32 %2789 to i64
  %2855 = getelementptr inbounds i8*, i8** %25, i64 %2854
  %2856 = load i8*, i8** %2855, align 8
  %2857 = call i32 @strcmp(i8* %2856, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %2858 = icmp ne i32 %2857, 0
  br i1 %2858, label %2871, label %2859

; <label>:2859:                                   ; preds = %2853
  %2860 = add nsw i32 %2789, 1
  %2861 = sext i32 %2860 to i64
  %2862 = getelementptr inbounds i8*, i8** %25, i64 %2861
  %2863 = load i8*, i8** %2862, align 8
  %2864 = call i32 @conv_trick_conf(i8* %2863)
  %2865 = icmp ne i32 %2864, 0
  br i1 %2865, label %2866, label %2951

; <label>:2866:                                   ; preds = %2859
  %2867 = add nsw i32 %2860, 1
  %2868 = sext i32 %2867 to i64
  %2869 = getelementptr inbounds i8*, i8** %25, i64 %2868
  %2870 = load i8*, i8** %2869, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %2870)
  call void @usage()
  br label %2951

; <label>:2871:                                   ; preds = %2853
  %2872 = sext i32 %2789 to i64
  %2873 = getelementptr inbounds i8*, i8** %25, i64 %2872
  %2874 = load i8*, i8** %2873, align 8
  %2875 = call i32 @strcmp(i8* %2874, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %2876 = icmp ne i32 %2875, 0
  br i1 %2876, label %2890, label %2877

; <label>:2877:                                   ; preds = %2871
  %2878 = add nsw i32 %2789, 1
  %2879 = sext i32 %2878 to i64
  %2880 = getelementptr inbounds i8*, i8** %25, i64 %2879
  %2881 = load i8*, i8** %2880, align 8
  %2882 = call i32 @atoi(i8* %2881) #8
  store i32 %2882, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2883 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %2884 = icmp ne i32 %2883, 0
  br i1 %2884, label %2951, label %2885

; <label>:2885:                                   ; preds = %2877
  %2886 = add nsw i32 %2878, 1
  %2887 = sext i32 %2886 to i64
  %2888 = getelementptr inbounds i8*, i8** %25, i64 %2887
  %2889 = load i8*, i8** %2888, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %2889)
  call void @usage()
  br label %2951

; <label>:2890:                                   ; preds = %2871
  %2891 = sext i32 %2789 to i64
  %2892 = getelementptr inbounds i8*, i8** %25, i64 %2891
  %2893 = load i8*, i8** %2892, align 8
  %2894 = call i32 @strcmp(i8* %2893, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %2895 = icmp ne i32 %2894, 0
  br i1 %2895, label %2902, label %2896

; <label>:2896:                                   ; preds = %2890
  %2897 = add nsw i32 %2789, 1
  %2898 = sext i32 %2897 to i64
  %2899 = getelementptr inbounds i8*, i8** %25, i64 %2898
  %2900 = load i8*, i8** %2899, align 8
  %2901 = call noalias i8* @strdup(i8* %2900) #9, !track !179
  store i8* %2901, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %2951

; <label>:2902:                                   ; preds = %2890
  %2903 = sext i32 %2789 to i64
  %2904 = getelementptr inbounds i8*, i8** %25, i64 %2903
  %2905 = load i8*, i8** %2904, align 8
  %2906 = call i32 @strcmp(i8* %2905, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %2907 = icmp ne i32 %2906, 0
  br i1 %2907, label %2914, label %2908

; <label>:2908:                                   ; preds = %2902
  %2909 = add nsw i32 %2789, 1
  %2910 = sext i32 %2909 to i64
  %2911 = getelementptr inbounds i8*, i8** %25, i64 %2910
  %2912 = load i8*, i8** %2911, align 8
  %2913 = call noalias i8* @strdup(i8* %2912) #9, !track !180
  store i8* %2913, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %2951

; <label>:2914:                                   ; preds = %2902
  %2915 = sext i32 %2789 to i64
  %2916 = getelementptr inbounds i8*, i8** %25, i64 %2915
  %2917 = load i8*, i8** %2916, align 8
  %2918 = call i32 @strcmp(i8* %2917, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %2919 = icmp ne i32 %2918, 0
  br i1 %2919, label %2926, label %2920

; <label>:2920:                                   ; preds = %2914
  %2921 = add nsw i32 %2789, 1
  %2922 = sext i32 %2921 to i64
  %2923 = getelementptr inbounds i8*, i8** %25, i64 %2922
  %2924 = load i8*, i8** %2923, align 8
  %2925 = call noalias i8* @strdup(i8* %2924) #9, !track !181
  store i8* %2925, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %2951

; <label>:2926:                                   ; preds = %2914
  %2927 = sext i32 %2789 to i64
  %2928 = getelementptr inbounds i8*, i8** %25, i64 %2927
  %2929 = load i8*, i8** %2928, align 8
  %2930 = call i32 @strcmp(i8* %2929, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %2931 = icmp ne i32 %2930, 0
  br i1 %2931, label %2933, label %2932

; <label>:2932:                                   ; preds = %2926
  call void @usage()
  br label %2951

; <label>:2933:                                   ; preds = %2926
  %2934 = sext i32 %2789 to i64
  %2935 = getelementptr inbounds i8*, i8** %25, i64 %2934
  %2936 = load i8*, i8** %2935, align 8
  %2937 = call i32 @strcmp(i8* %2936, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %2938 = icmp ne i32 %2937, 0
  br i1 %2938, label %2940, label %2939

; <label>:2939:                                   ; preds = %2933
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2951

; <label>:2940:                                   ; preds = %2933
  %2941 = sext i32 %2789 to i64
  %2942 = getelementptr inbounds i8*, i8** %25, i64 %2941
  %2943 = load i8*, i8** %2942, align 8
  %2944 = call i32 @strcmp(i8* %2943, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %2945 = icmp ne i32 %2944, 0
  br i1 %2945, label %2947, label %2946

; <label>:2946:                                   ; preds = %2940
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %2951

; <label>:2947:                                   ; preds = %2940
  %2948 = sext i32 %2789 to i64
  %2949 = getelementptr inbounds i8*, i8** %25, i64 %2948
  %2950 = load i8*, i8** %2949, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %2950)
  call void @usage()
  br label %2951

; <label>:2951:                                   ; preds = %2947, %2946, %2939, %2932, %2920, %2908, %2896, %2885, %2877, %2866, %2859, %2847, %2840, %2833, %2826, %2813, %2806, %2799
  %.15.14 = phi i32 [ %2789, %2799 ], [ %2789, %2806 ], [ %2789, %2813 ], [ %2789, %2826 ], [ %2789, %2833 ], [ %2789, %2840 ], [ %2848, %2847 ], [ %2867, %2866 ], [ %2860, %2859 ], [ %2878, %2877 ], [ %2886, %2885 ], [ %2897, %2896 ], [ %2909, %2908 ], [ %2921, %2920 ], [ %2789, %2939 ], [ %2789, %2947 ], [ %2789, %2946 ], [ %2789, %2932 ]
  call void @__loop_iteration_test___1()
  %2952 = add nsw i32 %.15.14, 1
  %2953 = icmp slt i32 %2952, 4, !track_argc !177
  br i1 %2953, label %.lr.ph.15, label %._crit_edge.loopexit

.lr.ph.15:                                        ; preds = %2951
  call void @unroll_loop(i32 89)
  %2954 = sext i32 %2952 to i64
  %2955 = getelementptr inbounds i8*, i8** %25, i64 %2954
  %2956 = load i8*, i8** %2955, align 8
  %2957 = call i32 @strncmp(i8* %2956, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %2958 = icmp ne i32 %2957, 0
  %2959 = sext i32 %2952 to i64
  %2960 = getelementptr inbounds i8*, i8** %25, i64 %2959
  %2961 = load i8*, i8** %2960, align 8
  br i1 %2958, label %2966, label %2962

; <label>:2962:                                   ; preds = %.lr.ph.15
  %2963 = getelementptr inbounds i8, i8* %2961, i64 2
  %2964 = call i32 @atoi(i8* %2963) #8
  store i32 %2964, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %2965 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %2965)
  br label %3114

; <label>:2966:                                   ; preds = %.lr.ph.15
  %2967 = call i32 @strcmp(i8* %2961, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %2968 = icmp ne i32 %2967, 0
  br i1 %2968, label %2970, label %2969

; <label>:2969:                                   ; preds = %2966
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3114

; <label>:2970:                                   ; preds = %2966
  %2971 = sext i32 %2952 to i64
  %2972 = getelementptr inbounds i8*, i8** %25, i64 %2971
  %2973 = load i8*, i8** %2972, align 8
  %2974 = call i32 @strcmp(i8* %2973, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %2975 = icmp ne i32 %2974, 0
  br i1 %2975, label %2977, label %2976

; <label>:2976:                                   ; preds = %2970
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3114

; <label>:2977:                                   ; preds = %2970
  %2978 = sext i32 %2952 to i64
  %2979 = getelementptr inbounds i8*, i8** %25, i64 %2978
  %2980 = load i8*, i8** %2979, align 8
  %2981 = call i32 @strcmp(i8* %2980, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %2982 = icmp ne i32 %2981, 0
  br i1 %2982, label %2983, label %2989

; <label>:2983:                                   ; preds = %2977
  %2984 = sext i32 %2952 to i64
  %2985 = getelementptr inbounds i8*, i8** %25, i64 %2984
  %2986 = load i8*, i8** %2985, align 8
  %2987 = call i32 @strcmp(i8* %2986, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %2988 = icmp ne i32 %2987, 0
  br i1 %2988, label %2990, label %2989

; <label>:2989:                                   ; preds = %2983, %2977
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3114

; <label>:2990:                                   ; preds = %2983
  %2991 = sext i32 %2952 to i64
  %2992 = getelementptr inbounds i8*, i8** %25, i64 %2991
  %2993 = load i8*, i8** %2992, align 8
  %2994 = call i32 @strcmp(i8* %2993, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %2995 = icmp ne i32 %2994, 0
  br i1 %2995, label %2997, label %2996

; <label>:2996:                                   ; preds = %2990
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3114

; <label>:2997:                                   ; preds = %2990
  %2998 = sext i32 %2952 to i64
  %2999 = getelementptr inbounds i8*, i8** %25, i64 %2998
  %3000 = load i8*, i8** %2999, align 8
  %3001 = call i32 @strcmp(i8* %3000, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %3002 = icmp ne i32 %3001, 0
  br i1 %3002, label %3004, label %3003

; <label>:3003:                                   ; preds = %2997
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3114

; <label>:3004:                                   ; preds = %2997
  %3005 = sext i32 %2952 to i64
  %3006 = getelementptr inbounds i8*, i8** %25, i64 %3005
  %3007 = load i8*, i8** %3006, align 8
  %3008 = call i32 @strcmp(i8* %3007, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %3009 = icmp ne i32 %3008, 0
  br i1 %3009, label %3016, label %3010

; <label>:3010:                                   ; preds = %3004
  %3011 = add nsw i32 %2952, 1
  %3012 = sext i32 %3011 to i64
  %3013 = getelementptr inbounds i8*, i8** %25, i64 %3012
  %3014 = load i8*, i8** %3013, align 8
  %3015 = call noalias i8* @strdup(i8* %3014) #9, !track !178
  store i8* %3015, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %3114

; <label>:3016:                                   ; preds = %3004
  %3017 = sext i32 %2952 to i64
  %3018 = getelementptr inbounds i8*, i8** %25, i64 %3017
  %3019 = load i8*, i8** %3018, align 8
  %3020 = call i32 @strcmp(i8* %3019, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %3021 = icmp ne i32 %3020, 0
  br i1 %3021, label %3034, label %3022

; <label>:3022:                                   ; preds = %3016
  %3023 = add nsw i32 %2952, 1
  %3024 = sext i32 %3023 to i64
  %3025 = getelementptr inbounds i8*, i8** %25, i64 %3024
  %3026 = load i8*, i8** %3025, align 8
  %3027 = call i32 @conv_trick_conf(i8* %3026)
  %3028 = icmp ne i32 %3027, 0
  br i1 %3028, label %3029, label %3114

; <label>:3029:                                   ; preds = %3022
  %3030 = add nsw i32 %3023, 1
  %3031 = sext i32 %3030 to i64
  %3032 = getelementptr inbounds i8*, i8** %25, i64 %3031
  %3033 = load i8*, i8** %3032, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %3033)
  call void @usage()
  br label %3114

; <label>:3034:                                   ; preds = %3016
  %3035 = sext i32 %2952 to i64
  %3036 = getelementptr inbounds i8*, i8** %25, i64 %3035
  %3037 = load i8*, i8** %3036, align 8
  %3038 = call i32 @strcmp(i8* %3037, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %3039 = icmp ne i32 %3038, 0
  br i1 %3039, label %3053, label %3040

; <label>:3040:                                   ; preds = %3034
  %3041 = add nsw i32 %2952, 1
  %3042 = sext i32 %3041 to i64
  %3043 = getelementptr inbounds i8*, i8** %25, i64 %3042
  %3044 = load i8*, i8** %3043, align 8
  %3045 = call i32 @atoi(i8* %3044) #8
  store i32 %3045, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3046 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3047 = icmp ne i32 %3046, 0
  br i1 %3047, label %3114, label %3048

; <label>:3048:                                   ; preds = %3040
  %3049 = add nsw i32 %3041, 1
  %3050 = sext i32 %3049 to i64
  %3051 = getelementptr inbounds i8*, i8** %25, i64 %3050
  %3052 = load i8*, i8** %3051, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %3052)
  call void @usage()
  br label %3114

; <label>:3053:                                   ; preds = %3034
  %3054 = sext i32 %2952 to i64
  %3055 = getelementptr inbounds i8*, i8** %25, i64 %3054
  %3056 = load i8*, i8** %3055, align 8
  %3057 = call i32 @strcmp(i8* %3056, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %3058 = icmp ne i32 %3057, 0
  br i1 %3058, label %3065, label %3059

; <label>:3059:                                   ; preds = %3053
  %3060 = add nsw i32 %2952, 1
  %3061 = sext i32 %3060 to i64
  %3062 = getelementptr inbounds i8*, i8** %25, i64 %3061
  %3063 = load i8*, i8** %3062, align 8
  %3064 = call noalias i8* @strdup(i8* %3063) #9, !track !179
  store i8* %3064, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %3114

; <label>:3065:                                   ; preds = %3053
  %3066 = sext i32 %2952 to i64
  %3067 = getelementptr inbounds i8*, i8** %25, i64 %3066
  %3068 = load i8*, i8** %3067, align 8
  %3069 = call i32 @strcmp(i8* %3068, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %3070 = icmp ne i32 %3069, 0
  br i1 %3070, label %3077, label %3071

; <label>:3071:                                   ; preds = %3065
  %3072 = add nsw i32 %2952, 1
  %3073 = sext i32 %3072 to i64
  %3074 = getelementptr inbounds i8*, i8** %25, i64 %3073
  %3075 = load i8*, i8** %3074, align 8
  %3076 = call noalias i8* @strdup(i8* %3075) #9, !track !180
  store i8* %3076, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %3114

; <label>:3077:                                   ; preds = %3065
  %3078 = sext i32 %2952 to i64
  %3079 = getelementptr inbounds i8*, i8** %25, i64 %3078
  %3080 = load i8*, i8** %3079, align 8
  %3081 = call i32 @strcmp(i8* %3080, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %3082 = icmp ne i32 %3081, 0
  br i1 %3082, label %3089, label %3083

; <label>:3083:                                   ; preds = %3077
  %3084 = add nsw i32 %2952, 1
  %3085 = sext i32 %3084 to i64
  %3086 = getelementptr inbounds i8*, i8** %25, i64 %3085
  %3087 = load i8*, i8** %3086, align 8
  %3088 = call noalias i8* @strdup(i8* %3087) #9, !track !181
  store i8* %3088, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %3114

; <label>:3089:                                   ; preds = %3077
  %3090 = sext i32 %2952 to i64
  %3091 = getelementptr inbounds i8*, i8** %25, i64 %3090
  %3092 = load i8*, i8** %3091, align 8
  %3093 = call i32 @strcmp(i8* %3092, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %3094 = icmp ne i32 %3093, 0
  br i1 %3094, label %3096, label %3095

; <label>:3095:                                   ; preds = %3089
  call void @usage()
  br label %3114

; <label>:3096:                                   ; preds = %3089
  %3097 = sext i32 %2952 to i64
  %3098 = getelementptr inbounds i8*, i8** %25, i64 %3097
  %3099 = load i8*, i8** %3098, align 8
  %3100 = call i32 @strcmp(i8* %3099, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %3101 = icmp ne i32 %3100, 0
  br i1 %3101, label %3103, label %3102

; <label>:3102:                                   ; preds = %3096
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3114

; <label>:3103:                                   ; preds = %3096
  %3104 = sext i32 %2952 to i64
  %3105 = getelementptr inbounds i8*, i8** %25, i64 %3104
  %3106 = load i8*, i8** %3105, align 8
  %3107 = call i32 @strcmp(i8* %3106, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %3108 = icmp ne i32 %3107, 0
  br i1 %3108, label %3110, label %3109

; <label>:3109:                                   ; preds = %3103
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3114

; <label>:3110:                                   ; preds = %3103
  %3111 = sext i32 %2952 to i64
  %3112 = getelementptr inbounds i8*, i8** %25, i64 %3111
  %3113 = load i8*, i8** %3112, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %3113)
  call void @usage()
  br label %3114

; <label>:3114:                                   ; preds = %3110, %3109, %3102, %3095, %3083, %3071, %3059, %3048, %3040, %3029, %3022, %3010, %3003, %2996, %2989, %2976, %2969, %2962
  %.15.15 = phi i32 [ %2952, %2962 ], [ %2952, %2969 ], [ %2952, %2976 ], [ %2952, %2989 ], [ %2952, %2996 ], [ %2952, %3003 ], [ %3011, %3010 ], [ %3030, %3029 ], [ %3023, %3022 ], [ %3041, %3040 ], [ %3049, %3048 ], [ %3060, %3059 ], [ %3072, %3071 ], [ %3084, %3083 ], [ %2952, %3102 ], [ %2952, %3110 ], [ %2952, %3109 ], [ %2952, %3095 ]
  call void @__loop_iteration_test___1()
  %3115 = add nsw i32 %.15.15, 1
  %3116 = icmp slt i32 %3115, 4, !track_argc !177
  br i1 %3116, label %.lr.ph.16, label %._crit_edge.loopexit

.lr.ph.16:                                        ; preds = %3114
  call void @unroll_loop(i32 89)
  %3117 = sext i32 %3115 to i64
  %3118 = getelementptr inbounds i8*, i8** %25, i64 %3117
  %3119 = load i8*, i8** %3118, align 8
  %3120 = call i32 @strncmp(i8* %3119, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %3121 = icmp ne i32 %3120, 0
  %3122 = sext i32 %3115 to i64
  %3123 = getelementptr inbounds i8*, i8** %25, i64 %3122
  %3124 = load i8*, i8** %3123, align 8
  br i1 %3121, label %3129, label %3125

; <label>:3125:                                   ; preds = %.lr.ph.16
  %3126 = getelementptr inbounds i8, i8* %3124, i64 2
  %3127 = call i32 @atoi(i8* %3126) #8
  store i32 %3127, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %3128 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %3128)
  br label %3277

; <label>:3129:                                   ; preds = %.lr.ph.16
  %3130 = call i32 @strcmp(i8* %3124, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %3131 = icmp ne i32 %3130, 0
  br i1 %3131, label %3133, label %3132

; <label>:3132:                                   ; preds = %3129
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3277

; <label>:3133:                                   ; preds = %3129
  %3134 = sext i32 %3115 to i64
  %3135 = getelementptr inbounds i8*, i8** %25, i64 %3134
  %3136 = load i8*, i8** %3135, align 8
  %3137 = call i32 @strcmp(i8* %3136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %3138 = icmp ne i32 %3137, 0
  br i1 %3138, label %3140, label %3139

; <label>:3139:                                   ; preds = %3133
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3277

; <label>:3140:                                   ; preds = %3133
  %3141 = sext i32 %3115 to i64
  %3142 = getelementptr inbounds i8*, i8** %25, i64 %3141
  %3143 = load i8*, i8** %3142, align 8
  %3144 = call i32 @strcmp(i8* %3143, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %3145 = icmp ne i32 %3144, 0
  br i1 %3145, label %3146, label %3152

; <label>:3146:                                   ; preds = %3140
  %3147 = sext i32 %3115 to i64
  %3148 = getelementptr inbounds i8*, i8** %25, i64 %3147
  %3149 = load i8*, i8** %3148, align 8
  %3150 = call i32 @strcmp(i8* %3149, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %3151 = icmp ne i32 %3150, 0
  br i1 %3151, label %3153, label %3152

; <label>:3152:                                   ; preds = %3146, %3140
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3277

; <label>:3153:                                   ; preds = %3146
  %3154 = sext i32 %3115 to i64
  %3155 = getelementptr inbounds i8*, i8** %25, i64 %3154
  %3156 = load i8*, i8** %3155, align 8
  %3157 = call i32 @strcmp(i8* %3156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %3158 = icmp ne i32 %3157, 0
  br i1 %3158, label %3160, label %3159

; <label>:3159:                                   ; preds = %3153
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3277

; <label>:3160:                                   ; preds = %3153
  %3161 = sext i32 %3115 to i64
  %3162 = getelementptr inbounds i8*, i8** %25, i64 %3161
  %3163 = load i8*, i8** %3162, align 8
  %3164 = call i32 @strcmp(i8* %3163, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %3165 = icmp ne i32 %3164, 0
  br i1 %3165, label %3167, label %3166

; <label>:3166:                                   ; preds = %3160
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3277

; <label>:3167:                                   ; preds = %3160
  %3168 = sext i32 %3115 to i64
  %3169 = getelementptr inbounds i8*, i8** %25, i64 %3168
  %3170 = load i8*, i8** %3169, align 8
  %3171 = call i32 @strcmp(i8* %3170, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %3172 = icmp ne i32 %3171, 0
  br i1 %3172, label %3179, label %3173

; <label>:3173:                                   ; preds = %3167
  %3174 = add nsw i32 %3115, 1
  %3175 = sext i32 %3174 to i64
  %3176 = getelementptr inbounds i8*, i8** %25, i64 %3175
  %3177 = load i8*, i8** %3176, align 8
  %3178 = call noalias i8* @strdup(i8* %3177) #9, !track !178
  store i8* %3178, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %3277

; <label>:3179:                                   ; preds = %3167
  %3180 = sext i32 %3115 to i64
  %3181 = getelementptr inbounds i8*, i8** %25, i64 %3180
  %3182 = load i8*, i8** %3181, align 8
  %3183 = call i32 @strcmp(i8* %3182, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %3184 = icmp ne i32 %3183, 0
  br i1 %3184, label %3197, label %3185

; <label>:3185:                                   ; preds = %3179
  %3186 = add nsw i32 %3115, 1
  %3187 = sext i32 %3186 to i64
  %3188 = getelementptr inbounds i8*, i8** %25, i64 %3187
  %3189 = load i8*, i8** %3188, align 8
  %3190 = call i32 @conv_trick_conf(i8* %3189)
  %3191 = icmp ne i32 %3190, 0
  br i1 %3191, label %3192, label %3277

; <label>:3192:                                   ; preds = %3185
  %3193 = add nsw i32 %3186, 1
  %3194 = sext i32 %3193 to i64
  %3195 = getelementptr inbounds i8*, i8** %25, i64 %3194
  %3196 = load i8*, i8** %3195, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %3196)
  call void @usage()
  br label %3277

; <label>:3197:                                   ; preds = %3179
  %3198 = sext i32 %3115 to i64
  %3199 = getelementptr inbounds i8*, i8** %25, i64 %3198
  %3200 = load i8*, i8** %3199, align 8
  %3201 = call i32 @strcmp(i8* %3200, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %3202 = icmp ne i32 %3201, 0
  br i1 %3202, label %3216, label %3203

; <label>:3203:                                   ; preds = %3197
  %3204 = add nsw i32 %3115, 1
  %3205 = sext i32 %3204 to i64
  %3206 = getelementptr inbounds i8*, i8** %25, i64 %3205
  %3207 = load i8*, i8** %3206, align 8
  %3208 = call i32 @atoi(i8* %3207) #8
  store i32 %3208, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3209 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3210 = icmp ne i32 %3209, 0
  br i1 %3210, label %3277, label %3211

; <label>:3211:                                   ; preds = %3203
  %3212 = add nsw i32 %3204, 1
  %3213 = sext i32 %3212 to i64
  %3214 = getelementptr inbounds i8*, i8** %25, i64 %3213
  %3215 = load i8*, i8** %3214, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %3215)
  call void @usage()
  br label %3277

; <label>:3216:                                   ; preds = %3197
  %3217 = sext i32 %3115 to i64
  %3218 = getelementptr inbounds i8*, i8** %25, i64 %3217
  %3219 = load i8*, i8** %3218, align 8
  %3220 = call i32 @strcmp(i8* %3219, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %3221 = icmp ne i32 %3220, 0
  br i1 %3221, label %3228, label %3222

; <label>:3222:                                   ; preds = %3216
  %3223 = add nsw i32 %3115, 1
  %3224 = sext i32 %3223 to i64
  %3225 = getelementptr inbounds i8*, i8** %25, i64 %3224
  %3226 = load i8*, i8** %3225, align 8
  %3227 = call noalias i8* @strdup(i8* %3226) #9, !track !179
  store i8* %3227, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %3277

; <label>:3228:                                   ; preds = %3216
  %3229 = sext i32 %3115 to i64
  %3230 = getelementptr inbounds i8*, i8** %25, i64 %3229
  %3231 = load i8*, i8** %3230, align 8
  %3232 = call i32 @strcmp(i8* %3231, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %3233 = icmp ne i32 %3232, 0
  br i1 %3233, label %3240, label %3234

; <label>:3234:                                   ; preds = %3228
  %3235 = add nsw i32 %3115, 1
  %3236 = sext i32 %3235 to i64
  %3237 = getelementptr inbounds i8*, i8** %25, i64 %3236
  %3238 = load i8*, i8** %3237, align 8
  %3239 = call noalias i8* @strdup(i8* %3238) #9, !track !180
  store i8* %3239, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %3277

; <label>:3240:                                   ; preds = %3228
  %3241 = sext i32 %3115 to i64
  %3242 = getelementptr inbounds i8*, i8** %25, i64 %3241
  %3243 = load i8*, i8** %3242, align 8
  %3244 = call i32 @strcmp(i8* %3243, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %3245 = icmp ne i32 %3244, 0
  br i1 %3245, label %3252, label %3246

; <label>:3246:                                   ; preds = %3240
  %3247 = add nsw i32 %3115, 1
  %3248 = sext i32 %3247 to i64
  %3249 = getelementptr inbounds i8*, i8** %25, i64 %3248
  %3250 = load i8*, i8** %3249, align 8
  %3251 = call noalias i8* @strdup(i8* %3250) #9, !track !181
  store i8* %3251, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %3277

; <label>:3252:                                   ; preds = %3240
  %3253 = sext i32 %3115 to i64
  %3254 = getelementptr inbounds i8*, i8** %25, i64 %3253
  %3255 = load i8*, i8** %3254, align 8
  %3256 = call i32 @strcmp(i8* %3255, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %3257 = icmp ne i32 %3256, 0
  br i1 %3257, label %3259, label %3258

; <label>:3258:                                   ; preds = %3252
  call void @usage()
  br label %3277

; <label>:3259:                                   ; preds = %3252
  %3260 = sext i32 %3115 to i64
  %3261 = getelementptr inbounds i8*, i8** %25, i64 %3260
  %3262 = load i8*, i8** %3261, align 8
  %3263 = call i32 @strcmp(i8* %3262, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %3264 = icmp ne i32 %3263, 0
  br i1 %3264, label %3266, label %3265

; <label>:3265:                                   ; preds = %3259
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3277

; <label>:3266:                                   ; preds = %3259
  %3267 = sext i32 %3115 to i64
  %3268 = getelementptr inbounds i8*, i8** %25, i64 %3267
  %3269 = load i8*, i8** %3268, align 8
  %3270 = call i32 @strcmp(i8* %3269, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %3271 = icmp ne i32 %3270, 0
  br i1 %3271, label %3273, label %3272

; <label>:3272:                                   ; preds = %3266
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3277

; <label>:3273:                                   ; preds = %3266
  %3274 = sext i32 %3115 to i64
  %3275 = getelementptr inbounds i8*, i8** %25, i64 %3274
  %3276 = load i8*, i8** %3275, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %3276)
  call void @usage()
  br label %3277

; <label>:3277:                                   ; preds = %3273, %3272, %3265, %3258, %3246, %3234, %3222, %3211, %3203, %3192, %3185, %3173, %3166, %3159, %3152, %3139, %3132, %3125
  %.15.16 = phi i32 [ %3115, %3125 ], [ %3115, %3132 ], [ %3115, %3139 ], [ %3115, %3152 ], [ %3115, %3159 ], [ %3115, %3166 ], [ %3174, %3173 ], [ %3193, %3192 ], [ %3186, %3185 ], [ %3204, %3203 ], [ %3212, %3211 ], [ %3223, %3222 ], [ %3235, %3234 ], [ %3247, %3246 ], [ %3115, %3265 ], [ %3115, %3273 ], [ %3115, %3272 ], [ %3115, %3258 ]
  call void @__loop_iteration_test___1()
  %3278 = add nsw i32 %.15.16, 1
  %3279 = icmp slt i32 %3278, 4, !track_argc !177
  br i1 %3279, label %.lr.ph.17, label %._crit_edge.loopexit

.lr.ph.17:                                        ; preds = %3277
  call void @unroll_loop(i32 89)
  %3280 = sext i32 %3278 to i64
  %3281 = getelementptr inbounds i8*, i8** %25, i64 %3280
  %3282 = load i8*, i8** %3281, align 8
  %3283 = call i32 @strncmp(i8* %3282, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %3284 = icmp ne i32 %3283, 0
  %3285 = sext i32 %3278 to i64
  %3286 = getelementptr inbounds i8*, i8** %25, i64 %3285
  %3287 = load i8*, i8** %3286, align 8
  br i1 %3284, label %3292, label %3288

; <label>:3288:                                   ; preds = %.lr.ph.17
  %3289 = getelementptr inbounds i8, i8* %3287, i64 2
  %3290 = call i32 @atoi(i8* %3289) #8
  store i32 %3290, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %3291 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %3291)
  br label %3440

; <label>:3292:                                   ; preds = %.lr.ph.17
  %3293 = call i32 @strcmp(i8* %3287, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %3294 = icmp ne i32 %3293, 0
  br i1 %3294, label %3296, label %3295

; <label>:3295:                                   ; preds = %3292
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3440

; <label>:3296:                                   ; preds = %3292
  %3297 = sext i32 %3278 to i64
  %3298 = getelementptr inbounds i8*, i8** %25, i64 %3297
  %3299 = load i8*, i8** %3298, align 8
  %3300 = call i32 @strcmp(i8* %3299, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %3301 = icmp ne i32 %3300, 0
  br i1 %3301, label %3303, label %3302

; <label>:3302:                                   ; preds = %3296
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3440

; <label>:3303:                                   ; preds = %3296
  %3304 = sext i32 %3278 to i64
  %3305 = getelementptr inbounds i8*, i8** %25, i64 %3304
  %3306 = load i8*, i8** %3305, align 8
  %3307 = call i32 @strcmp(i8* %3306, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %3308 = icmp ne i32 %3307, 0
  br i1 %3308, label %3309, label %3315

; <label>:3309:                                   ; preds = %3303
  %3310 = sext i32 %3278 to i64
  %3311 = getelementptr inbounds i8*, i8** %25, i64 %3310
  %3312 = load i8*, i8** %3311, align 8
  %3313 = call i32 @strcmp(i8* %3312, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %3314 = icmp ne i32 %3313, 0
  br i1 %3314, label %3316, label %3315

; <label>:3315:                                   ; preds = %3309, %3303
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3440

; <label>:3316:                                   ; preds = %3309
  %3317 = sext i32 %3278 to i64
  %3318 = getelementptr inbounds i8*, i8** %25, i64 %3317
  %3319 = load i8*, i8** %3318, align 8
  %3320 = call i32 @strcmp(i8* %3319, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %3321 = icmp ne i32 %3320, 0
  br i1 %3321, label %3323, label %3322

; <label>:3322:                                   ; preds = %3316
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3440

; <label>:3323:                                   ; preds = %3316
  %3324 = sext i32 %3278 to i64
  %3325 = getelementptr inbounds i8*, i8** %25, i64 %3324
  %3326 = load i8*, i8** %3325, align 8
  %3327 = call i32 @strcmp(i8* %3326, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %3328 = icmp ne i32 %3327, 0
  br i1 %3328, label %3330, label %3329

; <label>:3329:                                   ; preds = %3323
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3440

; <label>:3330:                                   ; preds = %3323
  %3331 = sext i32 %3278 to i64
  %3332 = getelementptr inbounds i8*, i8** %25, i64 %3331
  %3333 = load i8*, i8** %3332, align 8
  %3334 = call i32 @strcmp(i8* %3333, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %3335 = icmp ne i32 %3334, 0
  br i1 %3335, label %3342, label %3336

; <label>:3336:                                   ; preds = %3330
  %3337 = add nsw i32 %3278, 1
  %3338 = sext i32 %3337 to i64
  %3339 = getelementptr inbounds i8*, i8** %25, i64 %3338
  %3340 = load i8*, i8** %3339, align 8
  %3341 = call noalias i8* @strdup(i8* %3340) #9, !track !178
  store i8* %3341, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %3440

; <label>:3342:                                   ; preds = %3330
  %3343 = sext i32 %3278 to i64
  %3344 = getelementptr inbounds i8*, i8** %25, i64 %3343
  %3345 = load i8*, i8** %3344, align 8
  %3346 = call i32 @strcmp(i8* %3345, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %3347 = icmp ne i32 %3346, 0
  br i1 %3347, label %3360, label %3348

; <label>:3348:                                   ; preds = %3342
  %3349 = add nsw i32 %3278, 1
  %3350 = sext i32 %3349 to i64
  %3351 = getelementptr inbounds i8*, i8** %25, i64 %3350
  %3352 = load i8*, i8** %3351, align 8
  %3353 = call i32 @conv_trick_conf(i8* %3352)
  %3354 = icmp ne i32 %3353, 0
  br i1 %3354, label %3355, label %3440

; <label>:3355:                                   ; preds = %3348
  %3356 = add nsw i32 %3349, 1
  %3357 = sext i32 %3356 to i64
  %3358 = getelementptr inbounds i8*, i8** %25, i64 %3357
  %3359 = load i8*, i8** %3358, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %3359)
  call void @usage()
  br label %3440

; <label>:3360:                                   ; preds = %3342
  %3361 = sext i32 %3278 to i64
  %3362 = getelementptr inbounds i8*, i8** %25, i64 %3361
  %3363 = load i8*, i8** %3362, align 8
  %3364 = call i32 @strcmp(i8* %3363, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %3365 = icmp ne i32 %3364, 0
  br i1 %3365, label %3379, label %3366

; <label>:3366:                                   ; preds = %3360
  %3367 = add nsw i32 %3278, 1
  %3368 = sext i32 %3367 to i64
  %3369 = getelementptr inbounds i8*, i8** %25, i64 %3368
  %3370 = load i8*, i8** %3369, align 8
  %3371 = call i32 @atoi(i8* %3370) #8
  store i32 %3371, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3372 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3373 = icmp ne i32 %3372, 0
  br i1 %3373, label %3440, label %3374

; <label>:3374:                                   ; preds = %3366
  %3375 = add nsw i32 %3367, 1
  %3376 = sext i32 %3375 to i64
  %3377 = getelementptr inbounds i8*, i8** %25, i64 %3376
  %3378 = load i8*, i8** %3377, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %3378)
  call void @usage()
  br label %3440

; <label>:3379:                                   ; preds = %3360
  %3380 = sext i32 %3278 to i64
  %3381 = getelementptr inbounds i8*, i8** %25, i64 %3380
  %3382 = load i8*, i8** %3381, align 8
  %3383 = call i32 @strcmp(i8* %3382, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %3384 = icmp ne i32 %3383, 0
  br i1 %3384, label %3391, label %3385

; <label>:3385:                                   ; preds = %3379
  %3386 = add nsw i32 %3278, 1
  %3387 = sext i32 %3386 to i64
  %3388 = getelementptr inbounds i8*, i8** %25, i64 %3387
  %3389 = load i8*, i8** %3388, align 8
  %3390 = call noalias i8* @strdup(i8* %3389) #9, !track !179
  store i8* %3390, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %3440

; <label>:3391:                                   ; preds = %3379
  %3392 = sext i32 %3278 to i64
  %3393 = getelementptr inbounds i8*, i8** %25, i64 %3392
  %3394 = load i8*, i8** %3393, align 8
  %3395 = call i32 @strcmp(i8* %3394, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %3396 = icmp ne i32 %3395, 0
  br i1 %3396, label %3403, label %3397

; <label>:3397:                                   ; preds = %3391
  %3398 = add nsw i32 %3278, 1
  %3399 = sext i32 %3398 to i64
  %3400 = getelementptr inbounds i8*, i8** %25, i64 %3399
  %3401 = load i8*, i8** %3400, align 8
  %3402 = call noalias i8* @strdup(i8* %3401) #9, !track !180
  store i8* %3402, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %3440

; <label>:3403:                                   ; preds = %3391
  %3404 = sext i32 %3278 to i64
  %3405 = getelementptr inbounds i8*, i8** %25, i64 %3404
  %3406 = load i8*, i8** %3405, align 8
  %3407 = call i32 @strcmp(i8* %3406, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %3408 = icmp ne i32 %3407, 0
  br i1 %3408, label %3415, label %3409

; <label>:3409:                                   ; preds = %3403
  %3410 = add nsw i32 %3278, 1
  %3411 = sext i32 %3410 to i64
  %3412 = getelementptr inbounds i8*, i8** %25, i64 %3411
  %3413 = load i8*, i8** %3412, align 8
  %3414 = call noalias i8* @strdup(i8* %3413) #9, !track !181
  store i8* %3414, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %3440

; <label>:3415:                                   ; preds = %3403
  %3416 = sext i32 %3278 to i64
  %3417 = getelementptr inbounds i8*, i8** %25, i64 %3416
  %3418 = load i8*, i8** %3417, align 8
  %3419 = call i32 @strcmp(i8* %3418, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %3420 = icmp ne i32 %3419, 0
  br i1 %3420, label %3422, label %3421

; <label>:3421:                                   ; preds = %3415
  call void @usage()
  br label %3440

; <label>:3422:                                   ; preds = %3415
  %3423 = sext i32 %3278 to i64
  %3424 = getelementptr inbounds i8*, i8** %25, i64 %3423
  %3425 = load i8*, i8** %3424, align 8
  %3426 = call i32 @strcmp(i8* %3425, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %3427 = icmp ne i32 %3426, 0
  br i1 %3427, label %3429, label %3428

; <label>:3428:                                   ; preds = %3422
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3440

; <label>:3429:                                   ; preds = %3422
  %3430 = sext i32 %3278 to i64
  %3431 = getelementptr inbounds i8*, i8** %25, i64 %3430
  %3432 = load i8*, i8** %3431, align 8
  %3433 = call i32 @strcmp(i8* %3432, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %3434 = icmp ne i32 %3433, 0
  br i1 %3434, label %3436, label %3435

; <label>:3435:                                   ; preds = %3429
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3440

; <label>:3436:                                   ; preds = %3429
  %3437 = sext i32 %3278 to i64
  %3438 = getelementptr inbounds i8*, i8** %25, i64 %3437
  %3439 = load i8*, i8** %3438, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %3439)
  call void @usage()
  br label %3440

; <label>:3440:                                   ; preds = %3436, %3435, %3428, %3421, %3409, %3397, %3385, %3374, %3366, %3355, %3348, %3336, %3329, %3322, %3315, %3302, %3295, %3288
  %.15.17 = phi i32 [ %3278, %3288 ], [ %3278, %3295 ], [ %3278, %3302 ], [ %3278, %3315 ], [ %3278, %3322 ], [ %3278, %3329 ], [ %3337, %3336 ], [ %3356, %3355 ], [ %3349, %3348 ], [ %3367, %3366 ], [ %3375, %3374 ], [ %3386, %3385 ], [ %3398, %3397 ], [ %3410, %3409 ], [ %3278, %3428 ], [ %3278, %3436 ], [ %3278, %3435 ], [ %3278, %3421 ]
  call void @__loop_iteration_test___1()
  %3441 = add nsw i32 %.15.17, 1
  %3442 = icmp slt i32 %3441, 4, !track_argc !177
  br i1 %3442, label %.lr.ph.18, label %._crit_edge.loopexit

.lr.ph.18:                                        ; preds = %3440
  call void @unroll_loop(i32 89)
  %3443 = sext i32 %3441 to i64
  %3444 = getelementptr inbounds i8*, i8** %25, i64 %3443
  %3445 = load i8*, i8** %3444, align 8
  %3446 = call i32 @strncmp(i8* %3445, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %3447 = icmp ne i32 %3446, 0
  %3448 = sext i32 %3441 to i64
  %3449 = getelementptr inbounds i8*, i8** %25, i64 %3448
  %3450 = load i8*, i8** %3449, align 8
  br i1 %3447, label %3455, label %3451

; <label>:3451:                                   ; preds = %.lr.ph.18
  %3452 = getelementptr inbounds i8, i8* %3450, i64 2
  %3453 = call i32 @atoi(i8* %3452) #8
  store i32 %3453, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %3454 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %3454)
  br label %3603

; <label>:3455:                                   ; preds = %.lr.ph.18
  %3456 = call i32 @strcmp(i8* %3450, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %3457 = icmp ne i32 %3456, 0
  br i1 %3457, label %3459, label %3458

; <label>:3458:                                   ; preds = %3455
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3603

; <label>:3459:                                   ; preds = %3455
  %3460 = sext i32 %3441 to i64
  %3461 = getelementptr inbounds i8*, i8** %25, i64 %3460
  %3462 = load i8*, i8** %3461, align 8
  %3463 = call i32 @strcmp(i8* %3462, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %3464 = icmp ne i32 %3463, 0
  br i1 %3464, label %3466, label %3465

; <label>:3465:                                   ; preds = %3459
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3603

; <label>:3466:                                   ; preds = %3459
  %3467 = sext i32 %3441 to i64
  %3468 = getelementptr inbounds i8*, i8** %25, i64 %3467
  %3469 = load i8*, i8** %3468, align 8
  %3470 = call i32 @strcmp(i8* %3469, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %3471 = icmp ne i32 %3470, 0
  br i1 %3471, label %3472, label %3478

; <label>:3472:                                   ; preds = %3466
  %3473 = sext i32 %3441 to i64
  %3474 = getelementptr inbounds i8*, i8** %25, i64 %3473
  %3475 = load i8*, i8** %3474, align 8
  %3476 = call i32 @strcmp(i8* %3475, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %3477 = icmp ne i32 %3476, 0
  br i1 %3477, label %3479, label %3478

; <label>:3478:                                   ; preds = %3472, %3466
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3603

; <label>:3479:                                   ; preds = %3472
  %3480 = sext i32 %3441 to i64
  %3481 = getelementptr inbounds i8*, i8** %25, i64 %3480
  %3482 = load i8*, i8** %3481, align 8
  %3483 = call i32 @strcmp(i8* %3482, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %3484 = icmp ne i32 %3483, 0
  br i1 %3484, label %3486, label %3485

; <label>:3485:                                   ; preds = %3479
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3603

; <label>:3486:                                   ; preds = %3479
  %3487 = sext i32 %3441 to i64
  %3488 = getelementptr inbounds i8*, i8** %25, i64 %3487
  %3489 = load i8*, i8** %3488, align 8
  %3490 = call i32 @strcmp(i8* %3489, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %3491 = icmp ne i32 %3490, 0
  br i1 %3491, label %3493, label %3492

; <label>:3492:                                   ; preds = %3486
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3603

; <label>:3493:                                   ; preds = %3486
  %3494 = sext i32 %3441 to i64
  %3495 = getelementptr inbounds i8*, i8** %25, i64 %3494
  %3496 = load i8*, i8** %3495, align 8
  %3497 = call i32 @strcmp(i8* %3496, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %3498 = icmp ne i32 %3497, 0
  br i1 %3498, label %3505, label %3499

; <label>:3499:                                   ; preds = %3493
  %3500 = add nsw i32 %3441, 1
  %3501 = sext i32 %3500 to i64
  %3502 = getelementptr inbounds i8*, i8** %25, i64 %3501
  %3503 = load i8*, i8** %3502, align 8
  %3504 = call noalias i8* @strdup(i8* %3503) #9, !track !178
  store i8* %3504, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %3603

; <label>:3505:                                   ; preds = %3493
  %3506 = sext i32 %3441 to i64
  %3507 = getelementptr inbounds i8*, i8** %25, i64 %3506
  %3508 = load i8*, i8** %3507, align 8
  %3509 = call i32 @strcmp(i8* %3508, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %3510 = icmp ne i32 %3509, 0
  br i1 %3510, label %3523, label %3511

; <label>:3511:                                   ; preds = %3505
  %3512 = add nsw i32 %3441, 1
  %3513 = sext i32 %3512 to i64
  %3514 = getelementptr inbounds i8*, i8** %25, i64 %3513
  %3515 = load i8*, i8** %3514, align 8
  %3516 = call i32 @conv_trick_conf(i8* %3515)
  %3517 = icmp ne i32 %3516, 0
  br i1 %3517, label %3518, label %3603

; <label>:3518:                                   ; preds = %3511
  %3519 = add nsw i32 %3512, 1
  %3520 = sext i32 %3519 to i64
  %3521 = getelementptr inbounds i8*, i8** %25, i64 %3520
  %3522 = load i8*, i8** %3521, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %3522)
  call void @usage()
  br label %3603

; <label>:3523:                                   ; preds = %3505
  %3524 = sext i32 %3441 to i64
  %3525 = getelementptr inbounds i8*, i8** %25, i64 %3524
  %3526 = load i8*, i8** %3525, align 8
  %3527 = call i32 @strcmp(i8* %3526, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %3528 = icmp ne i32 %3527, 0
  br i1 %3528, label %3542, label %3529

; <label>:3529:                                   ; preds = %3523
  %3530 = add nsw i32 %3441, 1
  %3531 = sext i32 %3530 to i64
  %3532 = getelementptr inbounds i8*, i8** %25, i64 %3531
  %3533 = load i8*, i8** %3532, align 8
  %3534 = call i32 @atoi(i8* %3533) #8
  store i32 %3534, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3535 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3536 = icmp ne i32 %3535, 0
  br i1 %3536, label %3603, label %3537

; <label>:3537:                                   ; preds = %3529
  %3538 = add nsw i32 %3530, 1
  %3539 = sext i32 %3538 to i64
  %3540 = getelementptr inbounds i8*, i8** %25, i64 %3539
  %3541 = load i8*, i8** %3540, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %3541)
  call void @usage()
  br label %3603

; <label>:3542:                                   ; preds = %3523
  %3543 = sext i32 %3441 to i64
  %3544 = getelementptr inbounds i8*, i8** %25, i64 %3543
  %3545 = load i8*, i8** %3544, align 8
  %3546 = call i32 @strcmp(i8* %3545, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %3547 = icmp ne i32 %3546, 0
  br i1 %3547, label %3554, label %3548

; <label>:3548:                                   ; preds = %3542
  %3549 = add nsw i32 %3441, 1
  %3550 = sext i32 %3549 to i64
  %3551 = getelementptr inbounds i8*, i8** %25, i64 %3550
  %3552 = load i8*, i8** %3551, align 8
  %3553 = call noalias i8* @strdup(i8* %3552) #9, !track !179
  store i8* %3553, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %3603

; <label>:3554:                                   ; preds = %3542
  %3555 = sext i32 %3441 to i64
  %3556 = getelementptr inbounds i8*, i8** %25, i64 %3555
  %3557 = load i8*, i8** %3556, align 8
  %3558 = call i32 @strcmp(i8* %3557, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %3559 = icmp ne i32 %3558, 0
  br i1 %3559, label %3566, label %3560

; <label>:3560:                                   ; preds = %3554
  %3561 = add nsw i32 %3441, 1
  %3562 = sext i32 %3561 to i64
  %3563 = getelementptr inbounds i8*, i8** %25, i64 %3562
  %3564 = load i8*, i8** %3563, align 8
  %3565 = call noalias i8* @strdup(i8* %3564) #9, !track !180
  store i8* %3565, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %3603

; <label>:3566:                                   ; preds = %3554
  %3567 = sext i32 %3441 to i64
  %3568 = getelementptr inbounds i8*, i8** %25, i64 %3567
  %3569 = load i8*, i8** %3568, align 8
  %3570 = call i32 @strcmp(i8* %3569, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %3571 = icmp ne i32 %3570, 0
  br i1 %3571, label %3578, label %3572

; <label>:3572:                                   ; preds = %3566
  %3573 = add nsw i32 %3441, 1
  %3574 = sext i32 %3573 to i64
  %3575 = getelementptr inbounds i8*, i8** %25, i64 %3574
  %3576 = load i8*, i8** %3575, align 8
  %3577 = call noalias i8* @strdup(i8* %3576) #9, !track !181
  store i8* %3577, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %3603

; <label>:3578:                                   ; preds = %3566
  %3579 = sext i32 %3441 to i64
  %3580 = getelementptr inbounds i8*, i8** %25, i64 %3579
  %3581 = load i8*, i8** %3580, align 8
  %3582 = call i32 @strcmp(i8* %3581, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %3583 = icmp ne i32 %3582, 0
  br i1 %3583, label %3585, label %3584

; <label>:3584:                                   ; preds = %3578
  call void @usage()
  br label %3603

; <label>:3585:                                   ; preds = %3578
  %3586 = sext i32 %3441 to i64
  %3587 = getelementptr inbounds i8*, i8** %25, i64 %3586
  %3588 = load i8*, i8** %3587, align 8
  %3589 = call i32 @strcmp(i8* %3588, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %3590 = icmp ne i32 %3589, 0
  br i1 %3590, label %3592, label %3591

; <label>:3591:                                   ; preds = %3585
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3603

; <label>:3592:                                   ; preds = %3585
  %3593 = sext i32 %3441 to i64
  %3594 = getelementptr inbounds i8*, i8** %25, i64 %3593
  %3595 = load i8*, i8** %3594, align 8
  %3596 = call i32 @strcmp(i8* %3595, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %3597 = icmp ne i32 %3596, 0
  br i1 %3597, label %3599, label %3598

; <label>:3598:                                   ; preds = %3592
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3603

; <label>:3599:                                   ; preds = %3592
  %3600 = sext i32 %3441 to i64
  %3601 = getelementptr inbounds i8*, i8** %25, i64 %3600
  %3602 = load i8*, i8** %3601, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %3602)
  call void @usage()
  br label %3603

; <label>:3603:                                   ; preds = %3599, %3598, %3591, %3584, %3572, %3560, %3548, %3537, %3529, %3518, %3511, %3499, %3492, %3485, %3478, %3465, %3458, %3451
  %.15.18 = phi i32 [ %3441, %3451 ], [ %3441, %3458 ], [ %3441, %3465 ], [ %3441, %3478 ], [ %3441, %3485 ], [ %3441, %3492 ], [ %3500, %3499 ], [ %3519, %3518 ], [ %3512, %3511 ], [ %3530, %3529 ], [ %3538, %3537 ], [ %3549, %3548 ], [ %3561, %3560 ], [ %3573, %3572 ], [ %3441, %3591 ], [ %3441, %3599 ], [ %3441, %3598 ], [ %3441, %3584 ]
  call void @__loop_iteration_test___1()
  %3604 = add nsw i32 %.15.18, 1
  %3605 = icmp slt i32 %3604, 4, !track_argc !177
  br i1 %3605, label %.lr.ph.19, label %._crit_edge.loopexit

.lr.ph.19:                                        ; preds = %3603
  call void @unroll_loop(i32 89)
  %3606 = sext i32 %3604 to i64
  %3607 = getelementptr inbounds i8*, i8** %25, i64 %3606
  %3608 = load i8*, i8** %3607, align 8
  %3609 = call i32 @strncmp(i8* %3608, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9.540, i64 0, i64 0), i64 2) #8
  %3610 = icmp ne i32 %3609, 0
  %3611 = sext i32 %3604 to i64
  %3612 = getelementptr inbounds i8*, i8** %25, i64 %3611
  %3613 = load i8*, i8** %3612, align 8
  br i1 %3610, label %3618, label %3614

; <label>:3614:                                   ; preds = %.lr.ph.19
  %3615 = getelementptr inbounds i8, i8* %3613, i64 2
  %3616 = call i32 @atoi(i8* %3615) #8
  store i32 %3616, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  %3617 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 8), align 4
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10.541, i64 0, i64 0), i32 %3617)
  br label %3766

; <label>:3618:                                   ; preds = %.lr.ph.19
  %3619 = call i32 @strcmp(i8* %3613, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11.542, i64 0, i64 0)) #8
  %3620 = icmp ne i32 %3619, 0
  br i1 %3620, label %3622, label %3621

; <label>:3621:                                   ; preds = %3618
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3766

; <label>:3622:                                   ; preds = %3618
  %3623 = sext i32 %3604 to i64
  %3624 = getelementptr inbounds i8*, i8** %25, i64 %3623
  %3625 = load i8*, i8** %3624, align 8
  %3626 = call i32 @strcmp(i8* %3625, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12.543, i64 0, i64 0)) #8
  %3627 = icmp ne i32 %3626, 0
  br i1 %3627, label %3629, label %3628

; <label>:3628:                                   ; preds = %3622
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3766

; <label>:3629:                                   ; preds = %3622
  %3630 = sext i32 %3604 to i64
  %3631 = getelementptr inbounds i8*, i8** %25, i64 %3630
  %3632 = load i8*, i8** %3631, align 8
  %3633 = call i32 @strcmp(i8* %3632, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13.544, i64 0, i64 0)) #8
  %3634 = icmp ne i32 %3633, 0
  br i1 %3634, label %3635, label %3641

; <label>:3635:                                   ; preds = %3629
  %3636 = sext i32 %3604 to i64
  %3637 = getelementptr inbounds i8*, i8** %25, i64 %3636
  %3638 = load i8*, i8** %3637, align 8
  %3639 = call i32 @strcmp(i8* %3638, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.545, i64 0, i64 0)) #8
  %3640 = icmp ne i32 %3639, 0
  br i1 %3640, label %3642, label %3641

; <label>:3641:                                   ; preds = %3635, %3629
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3766

; <label>:3642:                                   ; preds = %3635
  %3643 = sext i32 %3604 to i64
  %3644 = getelementptr inbounds i8*, i8** %25, i64 %3643
  %3645 = load i8*, i8** %3644, align 8
  %3646 = call i32 @strcmp(i8* %3645, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15.546, i64 0, i64 0)) #8
  %3647 = icmp ne i32 %3646, 0
  br i1 %3647, label %3649, label %3648

; <label>:3648:                                   ; preds = %3642
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 12), align 4
  br label %3766

; <label>:3649:                                   ; preds = %3642
  %3650 = sext i32 %3604 to i64
  %3651 = getelementptr inbounds i8*, i8** %25, i64 %3650
  %3652 = load i8*, i8** %3651, align 8
  %3653 = call i32 @strcmp(i8* %3652, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16.547, i64 0, i64 0)) #8
  %3654 = icmp ne i32 %3653, 0
  br i1 %3654, label %3656, label %3655

; <label>:3655:                                   ; preds = %3649
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 13), align 8
  br label %3766

; <label>:3656:                                   ; preds = %3649
  %3657 = sext i32 %3604 to i64
  %3658 = getelementptr inbounds i8*, i8** %25, i64 %3657
  %3659 = load i8*, i8** %3658, align 8
  %3660 = call i32 @strcmp(i8* %3659, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17.548, i64 0, i64 0)) #8
  %3661 = icmp ne i32 %3660, 0
  br i1 %3661, label %3668, label %3662

; <label>:3662:                                   ; preds = %3656
  %3663 = add nsw i32 %3604, 1
  %3664 = sext i32 %3663 to i64
  %3665 = getelementptr inbounds i8*, i8** %25, i64 %3664
  %3666 = load i8*, i8** %3665, align 8
  %3667 = call noalias i8* @strdup(i8* %3666) #9, !track !178
  store i8* %3667, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 0), align 8
  br label %3766

; <label>:3668:                                   ; preds = %3656
  %3669 = sext i32 %3604 to i64
  %3670 = getelementptr inbounds i8*, i8** %25, i64 %3669
  %3671 = load i8*, i8** %3670, align 8
  %3672 = call i32 @strcmp(i8* %3671, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.549, i64 0, i64 0)) #8
  %3673 = icmp ne i32 %3672, 0
  br i1 %3673, label %3686, label %3674

; <label>:3674:                                   ; preds = %3668
  %3675 = add nsw i32 %3604, 1
  %3676 = sext i32 %3675 to i64
  %3677 = getelementptr inbounds i8*, i8** %25, i64 %3676
  %3678 = load i8*, i8** %3677, align 8
  %3679 = call i32 @conv_trick_conf(i8* %3678)
  %3680 = icmp ne i32 %3679, 0
  br i1 %3680, label %3681, label %3766

; <label>:3681:                                   ; preds = %3674
  %3682 = add nsw i32 %3675, 1
  %3683 = sext i32 %3682 to i64
  %3684 = getelementptr inbounds i8*, i8** %25, i64 %3683
  %3685 = load i8*, i8** %3684, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19.550, i64 0, i64 0), i8* %3685)
  call void @usage()
  br label %3766

; <label>:3686:                                   ; preds = %3668
  %3687 = sext i32 %3604 to i64
  %3688 = getelementptr inbounds i8*, i8** %25, i64 %3687
  %3689 = load i8*, i8** %3688, align 8
  %3690 = call i32 @strcmp(i8* %3689, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.551, i64 0, i64 0)) #8
  %3691 = icmp ne i32 %3690, 0
  br i1 %3691, label %3705, label %3692

; <label>:3692:                                   ; preds = %3686
  %3693 = add nsw i32 %3604, 1
  %3694 = sext i32 %3693 to i64
  %3695 = getelementptr inbounds i8*, i8** %25, i64 %3694
  %3696 = load i8*, i8** %3695, align 8
  %3697 = call i32 @atoi(i8* %3696) #8
  store i32 %3697, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3698 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 11), align 8
  %3699 = icmp ne i32 %3698, 0
  br i1 %3699, label %3766, label %3700

; <label>:3700:                                   ; preds = %3692
  %3701 = add nsw i32 %3693, 1
  %3702 = sext i32 %3701 to i64
  %3703 = getelementptr inbounds i8*, i8** %25, i64 %3702
  %3704 = load i8*, i8** %3703, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21.552, i64 0, i64 0), i8* %3704)
  call void @usage()
  br label %3766

; <label>:3705:                                   ; preds = %3686
  %3706 = sext i32 %3604 to i64
  %3707 = getelementptr inbounds i8*, i8** %25, i64 %3706
  %3708 = load i8*, i8** %3707, align 8
  %3709 = call i32 @strcmp(i8* %3708, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22.553, i64 0, i64 0)) #8
  %3710 = icmp ne i32 %3709, 0
  br i1 %3710, label %3717, label %3711

; <label>:3711:                                   ; preds = %3705
  %3712 = add nsw i32 %3604, 1
  %3713 = sext i32 %3712 to i64
  %3714 = getelementptr inbounds i8*, i8** %25, i64 %3713
  %3715 = load i8*, i8** %3714, align 8
  %3716 = call noalias i8* @strdup(i8* %3715) #9, !track !179
  store i8* %3716, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 2), align 8
  br label %3766

; <label>:3717:                                   ; preds = %3705
  %3718 = sext i32 %3604 to i64
  %3719 = getelementptr inbounds i8*, i8** %25, i64 %3718
  %3720 = load i8*, i8** %3719, align 8
  %3721 = call i32 @strcmp(i8* %3720, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23.554, i64 0, i64 0)) #8
  %3722 = icmp ne i32 %3721, 0
  br i1 %3722, label %3729, label %3723

; <label>:3723:                                   ; preds = %3717
  %3724 = add nsw i32 %3604, 1
  %3725 = sext i32 %3724 to i64
  %3726 = getelementptr inbounds i8*, i8** %25, i64 %3725
  %3727 = load i8*, i8** %3726, align 8
  %3728 = call noalias i8* @strdup(i8* %3727) #9, !track !180
  store i8* %3728, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 3), align 8
  br label %3766

; <label>:3729:                                   ; preds = %3717
  %3730 = sext i32 %3604 to i64
  %3731 = getelementptr inbounds i8*, i8** %25, i64 %3730
  %3732 = load i8*, i8** %3731, align 8
  %3733 = call i32 @strcmp(i8* %3732, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24.555, i64 0, i64 0)) #8
  %3734 = icmp ne i32 %3733, 0
  br i1 %3734, label %3741, label %3735

; <label>:3735:                                   ; preds = %3729
  %3736 = add nsw i32 %3604, 1
  %3737 = sext i32 %3736 to i64
  %3738 = getelementptr inbounds i8*, i8** %25, i64 %3737
  %3739 = load i8*, i8** %3738, align 8
  %3740 = call noalias i8* @strdup(i8* %3739) #9, !track !181
  store i8* %3740, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 4), align 8
  br label %3766

; <label>:3741:                                   ; preds = %3729
  %3742 = sext i32 %3604 to i64
  %3743 = getelementptr inbounds i8*, i8** %25, i64 %3742
  %3744 = load i8*, i8** %3743, align 8
  %3745 = call i32 @strcmp(i8* %3744, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25.556, i64 0, i64 0)) #8
  %3746 = icmp ne i32 %3745, 0
  br i1 %3746, label %3748, label %3747

; <label>:3747:                                   ; preds = %3741
  call void @usage()
  br label %3766

; <label>:3748:                                   ; preds = %3741
  %3749 = sext i32 %3604 to i64
  %3750 = getelementptr inbounds i8*, i8** %25, i64 %3749
  %3751 = load i8*, i8** %3750, align 8
  %3752 = call i32 @strcmp(i8* %3751, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26.557, i64 0, i64 0)) #8
  %3753 = icmp ne i32 %3752, 0
  br i1 %3753, label %3755, label %3754

; <label>:3754:                                   ; preds = %3748
  store i32 -1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3766

; <label>:3755:                                   ; preds = %3748
  %3756 = sext i32 %3604 to i64
  %3757 = getelementptr inbounds i8*, i8** %25, i64 %3756
  %3758 = load i8*, i8** %3757, align 8
  %3759 = call i32 @strcmp(i8* %3758, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27.558, i64 0, i64 0)) #8
  %3760 = icmp ne i32 %3759, 0
  br i1 %3760, label %3762, label %3761

; <label>:3761:                                   ; preds = %3755
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 7), align 8
  br label %3766

; <label>:3762:                                   ; preds = %3755
  %3763 = sext i32 %3604 to i64
  %3764 = getelementptr inbounds i8*, i8** %25, i64 %3763
  %3765 = load i8*, i8** %3764, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28.559, i64 0, i64 0), i8* %3765)
  call void @usage()
  br label %3766

; <label>:3766:                                   ; preds = %3762, %3761, %3754, %3747, %3735, %3723, %3711, %3700, %3692, %3681, %3674, %3662, %3655, %3648, %3641, %3628, %3621, %3614
  %.15.19 = phi i32 [ %3604, %3614 ], [ %3604, %3621 ], [ %3604, %3628 ], [ %3604, %3641 ], [ %3604, %3648 ], [ %3604, %3655 ], [ %3663, %3662 ], [ %3682, %3681 ], [ %3675, %3674 ], [ %3693, %3692 ], [ %3701, %3700 ], [ %3712, %3711 ], [ %3724, %3723 ], [ %3736, %3735 ], [ %3604, %3754 ], [ %3604, %3762 ], [ %3604, %3761 ], [ %3604, %3747 ]
  call void @__loop_iteration_test___1()
  %3767 = add nsw i32 %.15.19, 1
  br label %._crit_edge.loopexit
}

declare void @__loop_termination_test___1()

declare void @__loop_iteration_test___1()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config_clone(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 2, 0
  br i1 true, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = icmp ne i64 4389383, 0
  %12 = icmp ne %struct._IO_FILE* null, null
  br i1 true, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = bitcast [27 x i8]* @22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 27, i1 false)
  %18 = icmp ne i64 244262, 0
  %19 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %51 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.outer.backedge, %.lr.ph.preheader
  %.03.ph20 = phi i32 [ %.03.ph.be, %.outer.backedge ], [ 0, %.lr.ph.preheader ]
  %.07.ph19 = phi i32 [ %.lcssa, %.outer.backedge ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 48)
  br label %55

; <label>:52:                                     ; preds = %._crit_edge
  %53 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %.outer._crit_edge.loopexit

; <label>:55:                                     ; preds = %52, %.lr.ph
  %.0712 = phi i32 [ %.07.ph19, %.lr.ph ], [ %56, %52 ]
  call void @unroll_loop(i32 44)
  %56 = add nsw i32 %.0712, 1
  %57 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %58 = icmp ne i8* %57, null
  br i1 %58, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %57, align 1
  br label %60

; <label>:60:                                     ; preds = %59, %55
  %61 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %62 = icmp ne i8* %61, null
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %60
  store i8 0, i8* %61, align 1
  br label %64

; <label>:64:                                     ; preds = %63, %60
  %65 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %66 = icmp ne i8* %65, null
  br i1 %66, label %67, label %68

; <label>:67:                                     ; preds = %64
  store i8 0, i8* %65, align 1
  br label %68

; <label>:68:                                     ; preds = %67, %64
  %69 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %70 = icmp ne i8* %69, null
  br i1 %70, label %71, label %72

; <label>:71:                                     ; preds = %68
  store i8 0, i8* %69, align 1
  br label %72

; <label>:72:                                     ; preds = %71, %68
  %73 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %73, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %74 = load i8*, i8** %26, align 8
  %75 = icmp ne i8* %74, null
  %.14 = select i1 %75, i32 1, i32 0
  %76 = select i1 %75, i1 true, i1 false
  br i1 %76, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %72
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6, %.lr.ph6.preheader
  %.15 = phi i32 [ %.1, %.lr.ph6 ], [ %.14, %.lr.ph6.preheader ]
  %77 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %78 = sext i32 %.15 to i64
  %79 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %78
  store i8* %77, i8** %79, align 8
  call void @unroll_loop(i32 45)
  %80 = sext i32 %.15 to i64
  %81 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %80
  %82 = load i8*, i8** %81, align 8
  %83 = icmp ne i8* %82, null
  %84 = add nsw i32 %.15, 1
  %85 = icmp slt i32 %84, 30
  %.1 = select i1 %83, i32 %84, i32 %.15
  %86 = select i1 %83, i1 %85, i1 false
  br i1 %86, label %.lr.ph6, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6
  %.1.lcssa.ph = phi i32 [ %.1, %.lr.ph6 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %72
  %.1.lcssa = phi i32 [ %.14, %72 ], [ %.1.lcssa.ph, %._crit_edge.loopexit ]
  %87 = load i8*, i8** %27, align 16
  %88 = icmp ne i8* %87, null
  br i1 %88, label %89, label %52

; <label>:89:                                     ; preds = %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ %.1.lcssa, %._crit_edge ]
  %.lcssa = phi i32 [ %56, %._crit_edge ]
  %90 = load i8*, i8** %28, align 16
  %91 = call i32 @strcasecmp(i8* %90, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %118, label %93

; <label>:93:                                     ; preds = %89
  %94 = icmp slt i32 %.1.lcssa.lcssa, 2
  %95 = icmp sgt i32 %.1.lcssa.lcssa, 4
  %or.cond = or i1 %94, %95
  br i1 %or.cond, label %96, label %98

; <label>:96:                                     ; preds = %93
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa)
  %97 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:98:                                     ; preds = %93
  %99 = icmp sgt i32 %.1.lcssa.lcssa, 2
  br i1 %99, label %100, label %114

; <label>:100:                                    ; preds = %98
  %101 = load i8*, i8** %34, align 8
  %102 = call i32 @strcasecmp(i8* %101, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %111, label %104

; <label>:104:                                    ; preds = %100
  %105 = icmp sge i32 %.1.lcssa.lcssa, 3
  br i1 %105, label %106, label %109

; <label>:106:                                    ; preds = %104
  %107 = load i8*, i8** %40, align 8
  %108 = call i32 @atoi(i8* %107) #8
  br label %114

; <label>:109:                                    ; preds = %104
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa)
  %110 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:111:                                    ; preds = %100
  %112 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa, i8* %112)
  %113 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:114:                                    ; preds = %106, %98
  %.08 = phi i32 [ %108, %106 ], [ 53, %98 ]
  %115 = load i8*, i8** %35, align 8
  %116 = call i32 @fwd_add(i8* %115, i32 %.08)
  %117 = icmp eq i32 %116, -1
  br i1 %117, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:118:                                    ; preds = %89
  %119 = load i8*, i8** %29, align 16
  %120 = call i32 @strcasecmp(i8* %119, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %135, label %122

; <label>:122:                                    ; preds = %118
  %123 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %123, label %124, label %126

; <label>:124:                                    ; preds = %122
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa)
  %125 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:126:                                    ; preds = %122
  %127 = load i8*, i8** %32, align 8
  %128 = call i32 @conv_trick_conf(i8* %127)
  %129 = icmp ne i32 %128, 0
  %130 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %131 = load i8*, i8** %33, align 8
  br i1 %129, label %132, label %134

; <label>:132:                                    ; preds = %126
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %130, i8* %131)
  %133 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:134:                                    ; preds = %126
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %130, i8* %131)
  br label %.outer.backedge

; <label>:135:                                    ; preds = %118
  %136 = load i8*, i8** %30, align 16
  %137 = call i32 @strcasecmp(i8* %136, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %138 = icmp ne i32 %137, 0
  br i1 %138, label %144, label %139

; <label>:139:                                    ; preds = %135
  %140 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %140, label %141, label %143

; <label>:141:                                    ; preds = %139
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa)
  %142 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:143:                                    ; preds = %139
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:144:                                    ; preds = %135
  %145 = load i8*, i8** %31, align 16
  %146 = call i32 @strcasecmp(i8* %145, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %155, label %148

; <label>:148:                                    ; preds = %144
  %149 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %149, label %150, label %152

; <label>:150:                                    ; preds = %148
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa)
  %151 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:152:                                    ; preds = %148
  %153 = load i8*, i8** %39, align 8
  %154 = call i32 @atoi(i8* %153) #8
  store i32 %154, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:155:                                    ; preds = %144
  %156 = load i8*, i8** %36, align 16
  %157 = call i32 @strcasecmp(i8* %156, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %166, label %159

; <label>:159:                                    ; preds = %155
  %160 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %160, label %161, label %163

; <label>:161:                                    ; preds = %159
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa)
  %162 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:163:                                    ; preds = %159
  %164 = load i8*, i8** %42, align 8
  %165 = call noalias i8* @strdup(i8* %164) #9, !track !108
  store i8* %165, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:166:                                    ; preds = %155
  %167 = load i8*, i8** %38, align 16
  %168 = call i32 @strcasecmp(i8* %167, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %169 = icmp ne i32 %168, 0
  br i1 %169, label %217, label %170

; <label>:170:                                    ; preds = %166
  %171 = icmp slt i32 %.1.lcssa.lcssa, 2
  br i1 %171, label %172, label %174

; <label>:172:                                    ; preds = %170
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa)
  %173 = add nsw i32 %.03.ph20, 1
  br label %174

; <label>:174:                                    ; preds = %172, %170
  %.7 = phi i32 [ %173, %172 ], [ %.03.ph20, %170 ]
  br label %175

; <label>:175:                                    ; preds = %175, %174
  %lsr.iv = phi i64 [ %lsr.iv.next, %175 ], [ -1, %174 ]
  %176 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %177 = shl i64 %lsr.iv, 3
  %178 = inttoptr i64 %177 to i8**
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %177
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %179 = load i8*, i8** %scevgep, align 8
  %180 = icmp ne i8* %179, null
  %181 = icmp ult i64 %176, 30
  %spec.select = select i1 %180, i1 %181, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %175, label %182

; <label>:182:                                    ; preds = %175
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %175 ]
  %183 = trunc i64 %.01.lcssa.wide to i32
  %184 = add nsw i32 %183, %.1.lcssa.lcssa
  %185 = sub nsw i32 %184, 1
  %186 = icmp sgt i32 %185, 30
  br i1 %186, label %187, label %189

; <label>:187:                                    ; preds = %182
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa, i32 30)
  %188 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:189:                                    ; preds = %182
  %190 = sub nsw i32 %.1.lcssa.lcssa, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa, i32 %190)
  %191 = add nsw i32 %.1.lcssa.lcssa, -1
  %192 = add nsw i32 %183, %.1.lcssa.lcssa
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %193
  store i8* null, i8** %194, align 8
  %195 = icmp ne i32 %191, 0
  br i1 %195, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %189
  %196 = add i32 %.1.lcssa.lcssa, -1
  %197 = sext i32 %196 to i64
  %198 = sext i32 %183 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %197
  %199 = shl i64 %197, 1
  %200 = shl i64 %198, 1
  %201 = add i64 %199, %200
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %201
  %202 = sub i32 1, %.1.lcssa.lcssa
  %203 = zext i32 %202 to i64
  br label %204

; <label>:204:                                    ; preds = %209, %.lr.ph16
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %209 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %205 = load i8*, i8** %scevgep7, align 8
  %206 = call i32 @strcmp(i8* %205, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %209, label %208

; <label>:208:                                    ; preds = %204
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:209:                                    ; preds = %204
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %210 = load i8*, i8** %scevgep8, align 8
  %211 = call noalias i8* @strdup(i8* %210) #9, !track !109
  %212 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %212
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %211, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %tmp12 = trunc i64 %203 to i32
  %213 = icmp ne i32 %tmp12, %tmp
  br i1 %213, label %204, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %209
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %208, %189
  %214 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %215 = icmp ne i8* %214, null
  br i1 %215, label %216, label %.outer.backedge

; <label>:216:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:217:                                    ; preds = %166
  %218 = load i8*, i8** %41, align 16
  %219 = call i32 @strcasecmp(i8* %218, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %228, label %221

; <label>:221:                                    ; preds = %217
  %222 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %222, label %223, label %225

; <label>:223:                                    ; preds = %221
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa)
  %224 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:225:                                    ; preds = %221
  %226 = load i8*, i8** %45, align 8
  %227 = call i32 @atoi(i8* %226) #8
  store i32 %227, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:228:                                    ; preds = %217
  %229 = load i8*, i8** %43, align 16
  %230 = call i32 @strcasecmp(i8* %229, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %251, label %232

; <label>:232:                                    ; preds = %228
  %233 = icmp ne i32 %.1.lcssa.lcssa, 4
  br i1 %233, label %234, label %236

; <label>:234:                                    ; preds = %232
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa)
  %235 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:236:                                    ; preds = %232
  %237 = load i8*, i8** %46, align 8
  %238 = load i8*, i8** %47, align 16
  %239 = load i8*, i8** %48, align 8
  %240 = call i32 @atoi(i8* %239) #8
  %241 = call i32 @conv_scoped_conf(i8* %237, i8* %238, i32 %240)
  %242 = icmp ne i32 %241, 0
  %243 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %244 = load i8*, i8** %49, align 8
  %245 = load i8*, i8** %50, align 16
  %246 = load i8*, i8** %51, align 8
  br i1 %242, label %247, label %249

; <label>:247:                                    ; preds = %236
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %243, i8* %244, i8* %245, i8* %246)
  %248 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

; <label>:249:                                    ; preds = %236
  %250 = call i32 @atoi(i8* %246) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %243, i8* %244, i8* %245, i32 %250)
  br label %.outer.backedge

; <label>:251:                                    ; preds = %228
  %252 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa, i8* %252)
  %253 = add nsw i32 %.03.ph20, 1
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %251, %249, %247, %234, %225, %223, %216, %.loopexit, %187, %163, %161, %152, %150, %143, %141, %134, %132, %124, %114, %111, %109, %96
  %.03.ph.be = phi i32 [ %110, %109 ], [ %113, %111 ], [ %97, %96 ], [ %.03.ph20, %114 ], [ %125, %124 ], [ %133, %132 ], [ %.03.ph20, %134 ], [ %142, %141 ], [ %.03.ph20, %143 ], [ %151, %150 ], [ %.03.ph20, %152 ], [ %162, %161 ], [ %.03.ph20, %163 ], [ %188, %187 ], [ %.7, %216 ], [ %.7, %.loopexit ], [ %224, %223 ], [ %.03.ph20, %225 ], [ %253, %251 ], [ %235, %234 ], [ %248, %247 ], [ %.03.ph20, %249 ]
  %254 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %255 = icmp ne i8* %254, null
  br i1 %255, label %.lr.ph, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit:                       ; preds = %52
  %.03.lcssa.ph = phi i32 [ %.03.ph20, %52 ]
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ %.03.ph.be, %.outer.backedge ]
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.03.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %256 = call i32 @fclose(%struct._IO_FILE* null)
  %257 = icmp ne i32 %.03.lcssa, 0
  br i1 %257, label %258, label %260

; <label>:258:                                    ; preds = %.outer._crit_edge
  %259 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %259, i32 %.03.lcssa)
  br label %.loopexit1

; <label>:260:                                    ; preds = %.outer._crit_edge
  %261 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %261)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %114
  %.0.ph = phi i32 [ -1, %114 ]
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %260, %258, %13
  %.0 = phi i32 [ -1, %258 ], [ 0, %260 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0
}

declare i32 @fseek(%struct._IO_FILE*, i64, i32)

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config_clone_clone(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 2, 0
  br i1 true, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = icmp ne i64 4389383, 0
  %12 = icmp ne %struct._IO_FILE* null, null
  br i1 true, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = bitcast [27 x i8]* @22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 27, i1 false)
  %18 = icmp ne i64 244262, 0
  %19 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %51 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 48)
  br label %55

; <label>:52:                                     ; preds = %._crit_edge
  %53 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %54 = icmp ne i8* %53, null
  br i1 %54, label %55, label %.outer._crit_edge.loopexit.loopexit

; <label>:55:                                     ; preds = %52, %.lr.ph
  %.0712 = phi i32 [ 0, %.lr.ph ], [ %56, %52 ]
  call void @unroll_loop(i32 44)
  %56 = add nsw i32 %.0712, 1
  %57 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %58 = icmp ne i8* %57, null
  br i1 %58, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %57, align 1
  br label %60

; <label>:60:                                     ; preds = %59, %55
  %61 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %62 = icmp ne i8* %61, null
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %60
  store i8 0, i8* %61, align 1
  br label %64

; <label>:64:                                     ; preds = %63, %60
  %65 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %66 = icmp ne i8* %65, null
  br i1 %66, label %67, label %68

; <label>:67:                                     ; preds = %64
  store i8 0, i8* %65, align 1
  br label %68

; <label>:68:                                     ; preds = %67, %64
  %69 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %70 = icmp ne i8* %69, null
  br i1 %70, label %71, label %72

; <label>:71:                                     ; preds = %68
  store i8 0, i8* %69, align 1
  br label %72

; <label>:72:                                     ; preds = %71, %68
  %73 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %73, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %74 = load i8*, i8** %26, align 8
  %75 = icmp ne i8* %74, null
  %.14 = select i1 %75, i32 1, i32 0
  %76 = select i1 %75, i1 true, i1 false
  br i1 %76, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %72
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6, %.lr.ph6.preheader
  %.15 = phi i32 [ %.1, %.lr.ph6 ], [ %.14, %.lr.ph6.preheader ]
  %77 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %78 = sext i32 %.15 to i64
  %79 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %78
  store i8* %77, i8** %79, align 8
  call void @unroll_loop(i32 45)
  %80 = sext i32 %.15 to i64
  %81 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %80
  %82 = load i8*, i8** %81, align 8
  %83 = icmp ne i8* %82, null
  %84 = add nsw i32 %.15, 1
  %85 = icmp slt i32 %84, 30
  %.1 = select i1 %83, i32 %84, i32 %.15
  %86 = select i1 %83, i1 %85, i1 false
  br i1 %86, label %.lr.ph6, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6
  %.1.lcssa.ph = phi i32 [ %.1, %.lr.ph6 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %72
  %.1.lcssa = phi i32 [ %.14, %72 ], [ %.1.lcssa.ph, %._crit_edge.loopexit ]
  %87 = load i8*, i8** %27, align 16
  %88 = icmp ne i8* %87, null
  br i1 %88, label %89, label %52

; <label>:89:                                     ; preds = %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ %.1.lcssa, %._crit_edge ]
  %.lcssa = phi i32 [ %56, %._crit_edge ]
  %90 = load i8*, i8** %28, align 16
  %91 = call i32 @strcasecmp(i8* %90, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %115, label %93

; <label>:93:                                     ; preds = %89
  %94 = icmp slt i32 %.1.lcssa.lcssa, 2
  %95 = icmp sgt i32 %.1.lcssa.lcssa, 4
  %or.cond = or i1 %94, %95
  br i1 %or.cond, label %96, label %97

; <label>:96:                                     ; preds = %93
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:97:                                     ; preds = %93
  %98 = icmp sgt i32 %.1.lcssa.lcssa, 2
  br i1 %98, label %99, label %111

; <label>:99:                                     ; preds = %97
  %100 = load i8*, i8** %34, align 8
  %101 = call i32 @strcasecmp(i8* %100, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %109, label %103

; <label>:103:                                    ; preds = %99
  %104 = icmp sge i32 %.1.lcssa.lcssa, 3
  br i1 %104, label %105, label %108

; <label>:105:                                    ; preds = %103
  %106 = load i8*, i8** %40, align 8
  %107 = call i32 @atoi(i8* %106) #8
  br label %111

; <label>:108:                                    ; preds = %103
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:109:                                    ; preds = %99
  %110 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa, i8* %110)
  br label %.outer.backedge

; <label>:111:                                    ; preds = %105, %97
  %.08 = phi i32 [ %107, %105 ], [ 53, %97 ]
  %112 = load i8*, i8** %35, align 8
  %113 = call i32 @fwd_add(i8* %112, i32 %.08)
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:115:                                    ; preds = %89
  %116 = load i8*, i8** %29, align 16
  %117 = call i32 @strcasecmp(i8* %116, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %130, label %119

; <label>:119:                                    ; preds = %115
  %120 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %120, label %121, label %122

; <label>:121:                                    ; preds = %119
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:122:                                    ; preds = %119
  %123 = load i8*, i8** %32, align 8
  %124 = call i32 @conv_trick_conf(i8* %123)
  %125 = icmp ne i32 %124, 0
  %126 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %127 = load i8*, i8** %33, align 8
  br i1 %125, label %128, label %129

; <label>:128:                                    ; preds = %122
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %126, i8* %127)
  br label %.outer.backedge

; <label>:129:                                    ; preds = %122
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %126, i8* %127)
  br label %.outer.backedge

; <label>:130:                                    ; preds = %115
  %131 = load i8*, i8** %30, align 16
  %132 = call i32 @strcasecmp(i8* %131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %138, label %134

; <label>:134:                                    ; preds = %130
  %135 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %135, label %136, label %137

; <label>:136:                                    ; preds = %134
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:137:                                    ; preds = %134
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:138:                                    ; preds = %130
  %139 = load i8*, i8** %31, align 16
  %140 = call i32 @strcasecmp(i8* %139, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %148, label %142

; <label>:142:                                    ; preds = %138
  %143 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %143, label %144, label %145

; <label>:144:                                    ; preds = %142
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:145:                                    ; preds = %142
  %146 = load i8*, i8** %39, align 8
  %147 = call i32 @atoi(i8* %146) #8
  store i32 %147, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:148:                                    ; preds = %138
  %149 = load i8*, i8** %36, align 16
  %150 = call i32 @strcasecmp(i8* %149, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %158, label %152

; <label>:152:                                    ; preds = %148
  %153 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %153, label %154, label %155

; <label>:154:                                    ; preds = %152
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:155:                                    ; preds = %152
  %156 = load i8*, i8** %42, align 8
  %157 = call noalias i8* @strdup(i8* %156) #9, !track !108
  store i8* %157, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:158:                                    ; preds = %148
  %159 = load i8*, i8** %38, align 16
  %160 = call i32 @strcasecmp(i8* %159, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %207, label %162

; <label>:162:                                    ; preds = %158
  %163 = icmp slt i32 %.1.lcssa.lcssa, 2
  br i1 %163, label %164, label %165

; <label>:164:                                    ; preds = %162
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa)
  br label %165

; <label>:165:                                    ; preds = %164, %162
  %.7 = phi i32 [ 1, %164 ], [ 0, %162 ]
  br label %166

; <label>:166:                                    ; preds = %166, %165
  %lsr.iv = phi i64 [ %lsr.iv.next, %166 ], [ -1, %165 ]
  %167 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %168 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %168
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %169 = load i8*, i8** %scevgep, align 8
  %170 = icmp ne i8* %169, null
  %171 = icmp ult i64 %167, 30
  %spec.select = select i1 %170, i1 %171, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %166, label %172

; <label>:172:                                    ; preds = %166
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %166 ]
  %173 = trunc i64 %.01.lcssa.wide to i32
  %174 = add nsw i32 %173, %.1.lcssa.lcssa
  %175 = sub nsw i32 %174, 1
  %176 = icmp sgt i32 %175, 30
  br i1 %176, label %177, label %179

; <label>:177:                                    ; preds = %172
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa, i32 30)
  %178 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:179:                                    ; preds = %172
  %180 = sub nsw i32 %.1.lcssa.lcssa, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa, i32 %180)
  %181 = add nsw i32 %.1.lcssa.lcssa, -1
  %182 = add nsw i32 %173, %.1.lcssa.lcssa
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %183
  store i8* null, i8** %184, align 8
  %185 = icmp ne i32 %181, 0
  br i1 %185, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %179
  %186 = add i32 %.1.lcssa.lcssa, -1
  %187 = sext i32 %186 to i64
  %188 = sext i32 %173 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %187
  %189 = shl i64 %187, 1
  %190 = shl i64 %188, 1
  %191 = add i64 %189, %190
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %191
  %192 = sub i32 1, %.1.lcssa.lcssa
  %193 = zext i32 %192 to i64
  br label %194

; <label>:194:                                    ; preds = %199, %.lr.ph16
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %199 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %195 = load i8*, i8** %scevgep7, align 8
  %196 = call i32 @strcmp(i8* %195, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %199, label %198

; <label>:198:                                    ; preds = %194
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:199:                                    ; preds = %194
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %200 = load i8*, i8** %scevgep8, align 8
  %201 = call noalias i8* @strdup(i8* %200) #9, !track !109
  %202 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %202
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %201, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %203 = icmp ne i32 %192, %tmp
  br i1 %203, label %194, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %199
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %198, %179
  %204 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %205 = icmp ne i8* %204, null
  br i1 %205, label %206, label %.outer.backedge

; <label>:206:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:207:                                    ; preds = %158
  %208 = load i8*, i8** %41, align 16
  %209 = call i32 @strcasecmp(i8* %208, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %210 = icmp ne i32 %209, 0
  br i1 %210, label %217, label %211

; <label>:211:                                    ; preds = %207
  %212 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %212, label %213, label %214

; <label>:213:                                    ; preds = %211
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:214:                                    ; preds = %211
  %215 = load i8*, i8** %45, align 8
  %216 = call i32 @atoi(i8* %215) #8
  store i32 %216, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:217:                                    ; preds = %207
  %218 = load i8*, i8** %43, align 16
  %219 = call i32 @strcasecmp(i8* %218, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %238, label %221

; <label>:221:                                    ; preds = %217
  %222 = icmp ne i32 %.1.lcssa.lcssa, 4
  br i1 %222, label %223, label %224

; <label>:223:                                    ; preds = %221
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:224:                                    ; preds = %221
  %225 = load i8*, i8** %46, align 8
  %226 = load i8*, i8** %47, align 16
  %227 = load i8*, i8** %48, align 8
  %228 = call i32 @atoi(i8* %227) #8
  %229 = call i32 @conv_scoped_conf(i8* %225, i8* %226, i32 %228)
  %230 = icmp ne i32 %229, 0
  %231 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %232 = load i8*, i8** %49, align 8
  %233 = load i8*, i8** %50, align 16
  %234 = load i8*, i8** %51, align 8
  br i1 %230, label %235, label %236

; <label>:235:                                    ; preds = %224
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %231, i8* %232, i8* %233, i8* %234)
  br label %.outer.backedge

; <label>:236:                                    ; preds = %224
  %237 = call i32 @atoi(i8* %234) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %231, i8* %232, i8* %233, i32 %237)
  br label %.outer.backedge

; <label>:238:                                    ; preds = %217
  %239 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa, i8* %239)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %238, %236, %235, %223, %214, %213, %206, %.loopexit, %177, %155, %154, %145, %144, %137, %136, %129, %128, %121, %111, %109, %108, %96
  %.03.ph.be = phi i32 [ 1, %108 ], [ 1, %109 ], [ 1, %96 ], [ 0, %111 ], [ 1, %121 ], [ 1, %128 ], [ 0, %129 ], [ 1, %136 ], [ 0, %137 ], [ 1, %144 ], [ 0, %145 ], [ 1, %154 ], [ 0, %155 ], [ %178, %177 ], [ %.7, %206 ], [ %.7, %.loopexit ], [ 1, %213 ], [ 0, %214 ], [ 1, %238 ], [ 1, %223 ], [ 1, %235 ], [ 0, %236 ]
  call void @__loop_iteration_test___2()
  %240 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %241 = icmp ne i8* %240, null
  br i1 %241, label %.lr.ph.1, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit.loopexit:              ; preds = %52
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit1:             ; preds = %282
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit2:             ; preds = %485
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit3:             ; preds = %688
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit4:             ; preds = %891
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit5:             ; preds = %1094
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit6:             ; preds = %1297
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit7:             ; preds = %1500
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit:                       ; preds = %.outer._crit_edge.loopexit.loopexit7, %.outer._crit_edge.loopexit.loopexit6, %.outer._crit_edge.loopexit.loopexit5, %.outer._crit_edge.loopexit.loopexit4, %.outer._crit_edge.loopexit.loopexit3, %.outer._crit_edge.loopexit.loopexit2, %.outer._crit_edge.loopexit.loopexit1, %.outer._crit_edge.loopexit.loopexit
  %.03.lcssa.ph = phi i32 [ 0, %.outer._crit_edge.loopexit.loopexit ], [ %.03.ph.be, %.outer._crit_edge.loopexit.loopexit1 ], [ %.03.ph.be.1, %.outer._crit_edge.loopexit.loopexit2 ], [ %.03.ph.be.2, %.outer._crit_edge.loopexit.loopexit3 ], [ %.03.ph.be.3, %.outer._crit_edge.loopexit.loopexit4 ], [ %.03.ph.be.4, %.outer._crit_edge.loopexit.loopexit5 ], [ %.03.ph.be.5, %.outer._crit_edge.loopexit.loopexit6 ], [ %.03.ph.be.6, %.outer._crit_edge.loopexit.loopexit7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge.7, %.outer.backedge.6, %.outer.backedge.5, %.outer.backedge.4, %.outer.backedge.3, %.outer.backedge.2, %.outer.backedge.1, %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ %.03.ph.be, %.outer.backedge ], [ %.03.ph.be.1, %.outer.backedge.1 ], [ %.03.ph.be.2, %.outer.backedge.2 ], [ %.03.ph.be.3, %.outer.backedge.3 ], [ %.03.ph.be.4, %.outer.backedge.4 ], [ %.03.ph.be.5, %.outer.backedge.5 ], [ %.03.ph.be.6, %.outer.backedge.6 ], [ %.03.ph.be.7, %.outer.backedge.7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.03.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %242 = call i32 @fclose(%struct._IO_FILE* null)
  %243 = icmp ne i32 %.03.lcssa, 0
  br i1 %243, label %244, label %246

; <label>:244:                                    ; preds = %.outer._crit_edge
  %245 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %245, i32 %.03.lcssa)
  br label %.loopexit1

; <label>:246:                                    ; preds = %.outer._crit_edge
  %247 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %247)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %1523, %1320, %1117, %914, %711, %508, %305, %111
  %.0.ph = phi i32 [ -1, %111 ], [ -1, %305 ], [ -1, %508 ], [ -1, %711 ], [ -1, %914 ], [ -1, %1117 ], [ -1, %1320 ], [ -1, %1523 ]
  call void @__loop_termination_test___2()
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %246, %244, %13
  %.0 = phi i32 [ -1, %244 ], [ 0, %246 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0

.lr.ph.1:                                         ; preds = %.outer.backedge
  call void @unroll_loop(i32 48)
  br label %248

; <label>:248:                                    ; preds = %282, %.lr.ph.1
  %.0712.1 = phi i32 [ %.lcssa, %.lr.ph.1 ], [ %249, %282 ]
  call void @unroll_loop(i32 44)
  %249 = add nsw i32 %.0712.1, 1
  %250 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %251 = icmp ne i8* %250, null
  br i1 %251, label %252, label %253

; <label>:252:                                    ; preds = %248
  store i8 0, i8* %250, align 1
  br label %253

; <label>:253:                                    ; preds = %252, %248
  %254 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %255 = icmp ne i8* %254, null
  br i1 %255, label %256, label %257

; <label>:256:                                    ; preds = %253
  store i8 0, i8* %254, align 1
  br label %257

; <label>:257:                                    ; preds = %256, %253
  %258 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %259 = icmp ne i8* %258, null
  br i1 %259, label %260, label %261

; <label>:260:                                    ; preds = %257
  store i8 0, i8* %258, align 1
  br label %261

; <label>:261:                                    ; preds = %260, %257
  %262 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %263 = icmp ne i8* %262, null
  br i1 %263, label %264, label %265

; <label>:264:                                    ; preds = %261
  store i8 0, i8* %262, align 1
  br label %265

; <label>:265:                                    ; preds = %264, %261
  %266 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %266, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %267 = load i8*, i8** %26, align 8
  %268 = icmp ne i8* %267, null
  %.14.1 = select i1 %268, i32 1, i32 0
  %269 = select i1 %268, i1 true, i1 false
  br i1 %269, label %.lr.ph6.preheader.1, label %._crit_edge.1

.lr.ph6.preheader.1:                              ; preds = %265
  br label %.lr.ph6.1

.lr.ph6.1:                                        ; preds = %.lr.ph6.1, %.lr.ph6.preheader.1
  %.15.1 = phi i32 [ %.1.1, %.lr.ph6.1 ], [ %.14.1, %.lr.ph6.preheader.1 ]
  %270 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %271 = sext i32 %.15.1 to i64
  %272 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %271
  store i8* %270, i8** %272, align 8
  call void @unroll_loop(i32 45)
  %273 = sext i32 %.15.1 to i64
  %274 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %273
  %275 = load i8*, i8** %274, align 8
  %276 = icmp ne i8* %275, null
  %277 = add nsw i32 %.15.1, 1
  %278 = icmp slt i32 %277, 30
  %.1.1 = select i1 %276, i32 %277, i32 %.15.1
  %279 = select i1 %276, i1 %278, i1 false
  br i1 %279, label %.lr.ph6.1, label %._crit_edge.loopexit.1

._crit_edge.loopexit.1:                           ; preds = %.lr.ph6.1
  %.1.lcssa.ph.1 = phi i32 [ %.1.1, %.lr.ph6.1 ]
  br label %._crit_edge.1

._crit_edge.1:                                    ; preds = %._crit_edge.loopexit.1, %265
  %.1.lcssa.1 = phi i32 [ %.14.1, %265 ], [ %.1.lcssa.ph.1, %._crit_edge.loopexit.1 ]
  %280 = load i8*, i8** %27, align 16
  %281 = icmp ne i8* %280, null
  br i1 %281, label %285, label %282

; <label>:282:                                    ; preds = %._crit_edge.1
  %283 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %284 = icmp ne i8* %283, null
  br i1 %284, label %248, label %.outer._crit_edge.loopexit.loopexit1

; <label>:285:                                    ; preds = %._crit_edge.1
  %.1.lcssa.lcssa.1 = phi i32 [ %.1.lcssa.1, %._crit_edge.1 ]
  %.lcssa.1 = phi i32 [ %249, %._crit_edge.1 ]
  %286 = load i8*, i8** %28, align 16
  %287 = call i32 @strcasecmp(i8* %286, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %288 = icmp ne i32 %287, 0
  br i1 %288, label %314, label %289

; <label>:289:                                    ; preds = %285
  %290 = icmp slt i32 %.1.lcssa.lcssa.1, 2
  %291 = icmp sgt i32 %.1.lcssa.lcssa.1, 4
  %or.cond.1 = or i1 %290, %291
  br i1 %or.cond.1, label %312, label %292

; <label>:292:                                    ; preds = %289
  %293 = icmp sgt i32 %.1.lcssa.lcssa.1, 2
  br i1 %293, label %294, label %305

; <label>:294:                                    ; preds = %292
  %295 = load i8*, i8** %34, align 8
  %296 = call i32 @strcasecmp(i8* %295, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %297 = icmp ne i32 %296, 0
  br i1 %297, label %309, label %298

; <label>:298:                                    ; preds = %294
  %299 = icmp sge i32 %.1.lcssa.lcssa.1, 3
  br i1 %299, label %302, label %300

; <label>:300:                                    ; preds = %298
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.1)
  %301 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:302:                                    ; preds = %298
  %303 = load i8*, i8** %40, align 8
  %304 = call i32 @atoi(i8* %303) #8
  br label %305

; <label>:305:                                    ; preds = %302, %292
  %.08.1 = phi i32 [ %304, %302 ], [ 53, %292 ]
  %306 = load i8*, i8** %35, align 8
  %307 = call i32 @fwd_add(i8* %306, i32 %.08.1)
  %308 = icmp eq i32 %307, -1
  br i1 %308, label %.loopexit1.loopexit, label %.outer.backedge.1

; <label>:309:                                    ; preds = %294
  %310 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.1, i8* %310)
  %311 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:312:                                    ; preds = %289
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.1)
  %313 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:314:                                    ; preds = %285
  %315 = load i8*, i8** %29, align 16
  %316 = call i32 @strcasecmp(i8* %315, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %317 = icmp ne i32 %316, 0
  br i1 %317, label %331, label %318

; <label>:318:                                    ; preds = %314
  %319 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %319, label %329, label %320

; <label>:320:                                    ; preds = %318
  %321 = load i8*, i8** %32, align 8
  %322 = call i32 @conv_trick_conf(i8* %321)
  %323 = icmp ne i32 %322, 0
  %324 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %325 = load i8*, i8** %33, align 8
  br i1 %323, label %327, label %326

; <label>:326:                                    ; preds = %320
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %324, i8* %325)
  br label %.outer.backedge.1

; <label>:327:                                    ; preds = %320
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %324, i8* %325)
  %328 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:329:                                    ; preds = %318
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.1)
  %330 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:331:                                    ; preds = %314
  %332 = load i8*, i8** %30, align 16
  %333 = call i32 @strcasecmp(i8* %332, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %340, label %335

; <label>:335:                                    ; preds = %331
  %336 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %336, label %338, label %337

; <label>:337:                                    ; preds = %335
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.1

; <label>:338:                                    ; preds = %335
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.1)
  %339 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:340:                                    ; preds = %331
  %341 = load i8*, i8** %31, align 16
  %342 = call i32 @strcasecmp(i8* %341, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %343 = icmp ne i32 %342, 0
  br i1 %343, label %351, label %344

; <label>:344:                                    ; preds = %340
  %345 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %345, label %349, label %346

; <label>:346:                                    ; preds = %344
  %347 = load i8*, i8** %39, align 8
  %348 = call i32 @atoi(i8* %347) #8
  store i32 %348, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.1

; <label>:349:                                    ; preds = %344
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.1)
  %350 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:351:                                    ; preds = %340
  %352 = load i8*, i8** %36, align 16
  %353 = call i32 @strcasecmp(i8* %352, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %354 = icmp ne i32 %353, 0
  br i1 %354, label %362, label %355

; <label>:355:                                    ; preds = %351
  %356 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %356, label %360, label %357

; <label>:357:                                    ; preds = %355
  %358 = load i8*, i8** %42, align 8
  %359 = call noalias i8* @strdup(i8* %358) #9, !track !108
  store i8* %359, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.1

; <label>:360:                                    ; preds = %355
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.1)
  %361 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:362:                                    ; preds = %351
  %363 = load i8*, i8** %38, align 16
  %364 = call i32 @strcasecmp(i8* %363, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %365 = icmp ne i32 %364, 0
  br i1 %365, label %412, label %366

; <label>:366:                                    ; preds = %362
  %367 = icmp slt i32 %.1.lcssa.lcssa.1, 2
  br i1 %367, label %368, label %370

; <label>:368:                                    ; preds = %366
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.1)
  %369 = add nsw i32 %.03.ph.be, 1
  br label %370

; <label>:370:                                    ; preds = %368, %366
  %.7.1 = phi i32 [ %369, %368 ], [ %.03.ph.be, %366 ]
  br label %371

; <label>:371:                                    ; preds = %371, %370
  %lsr.iv.1 = phi i64 [ %lsr.iv.next.1, %371 ], [ -1, %370 ]
  %372 = add i64 %lsr.iv.1, 1
  call void @unroll_loop(i32 46)
  %373 = shl i64 %lsr.iv.1, 3
  %uglygep.1 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %373
  %uglygep3.1 = bitcast i8* %uglygep.1 to i8**
  %scevgep.1 = getelementptr i8*, i8** %uglygep3.1, i64 111
  %374 = load i8*, i8** %scevgep.1, align 8
  %375 = icmp ne i8* %374, null
  %376 = icmp ult i64 %372, 30
  %spec.select.1 = select i1 %375, i1 %376, i1 false
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %spec.select.1, label %371, label %377

; <label>:377:                                    ; preds = %371
  %.01.lcssa.wide.1 = phi i64 [ %lsr.iv.next.1, %371 ]
  %378 = trunc i64 %.01.lcssa.wide.1 to i32
  %379 = add nsw i32 %378, %.1.lcssa.lcssa.1
  %380 = sub nsw i32 %379, 1
  %381 = icmp sgt i32 %380, 30
  br i1 %381, label %410, label %382

; <label>:382:                                    ; preds = %377
  %383 = sub nsw i32 %.1.lcssa.lcssa.1, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.1, i32 %383)
  %384 = add nsw i32 %.1.lcssa.lcssa.1, -1
  %385 = add nsw i32 %378, %.1.lcssa.lcssa.1
  %386 = sext i32 %385 to i64
  %387 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %386
  store i8* null, i8** %387, align 8
  %388 = icmp ne i32 %384, 0
  br i1 %388, label %.lr.ph16.1, label %.loopexit.1

.lr.ph16.1:                                       ; preds = %382
  %389 = add i32 %.1.lcssa.lcssa.1, -1
  %390 = sext i32 %389 to i64
  %391 = sext i32 %378 to i64
  %scevgep4.1 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %390
  %392 = shl i64 %390, 1
  %393 = shl i64 %391, 1
  %394 = add i64 %392, %393
  %scevgep9.1 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %394
  %395 = sub i32 1, %.1.lcssa.lcssa.1
  %396 = zext i32 %395 to i64
  br label %397

; <label>:397:                                    ; preds = %402, %.lr.ph16.1
  %lsr.iv5.1 = phi i64 [ 0, %.lr.ph16.1 ], [ %lsr.iv.next6.1, %402 ]
  call void @unroll_loop(i32 47)
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %398 = load i8*, i8** %scevgep7.1, align 8
  %399 = call i32 @strcmp(i8* %398, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %400 = icmp ne i32 %399, 0
  br i1 %400, label %402, label %401

; <label>:401:                                    ; preds = %397
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.1

; <label>:402:                                    ; preds = %397
  %scevgep8.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %403 = load i8*, i8** %scevgep8.1, align 8
  %404 = call noalias i8* @strdup(i8* %403) #9, !track !109
  %405 = shl i64 %lsr.iv5.1, 1
  %scevgep10.1 = getelementptr i32, i32* %scevgep9.1, i64 %405
  %scevgep1011.1 = bitcast i32* %scevgep10.1 to i8**
  store i8* %404, i8** %scevgep1011.1, align 8
  %lsr.iv.next6.1 = add nsw i64 %lsr.iv5.1, -1
  %tmp.1 = trunc i64 %lsr.iv.next6.1 to i32
  %406 = icmp ne i32 %395, %tmp.1
  br i1 %406, label %397, label %.loopexit.loopexit.1

.loopexit.loopexit.1:                             ; preds = %402
  br label %.loopexit.1

.loopexit.1:                                      ; preds = %.loopexit.loopexit.1, %401, %382
  %407 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %408 = icmp ne i8* %407, null
  br i1 %408, label %409, label %.outer.backedge.1

; <label>:409:                                    ; preds = %.loopexit.1
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.1

; <label>:410:                                    ; preds = %377
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.1, i32 30)
  %411 = add nsw i32 %.7.1, 1
  br label %.outer.backedge.1

; <label>:412:                                    ; preds = %362
  %413 = load i8*, i8** %41, align 16
  %414 = call i32 @strcasecmp(i8* %413, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %415 = icmp ne i32 %414, 0
  br i1 %415, label %423, label %416

; <label>:416:                                    ; preds = %412
  %417 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %417, label %421, label %418

; <label>:418:                                    ; preds = %416
  %419 = load i8*, i8** %45, align 8
  %420 = call i32 @atoi(i8* %419) #8
  store i32 %420, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.1

; <label>:421:                                    ; preds = %416
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.1)
  %422 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:423:                                    ; preds = %412
  %424 = load i8*, i8** %43, align 16
  %425 = call i32 @strcasecmp(i8* %424, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %426 = icmp ne i32 %425, 0
  br i1 %426, label %446, label %427

; <label>:427:                                    ; preds = %423
  %428 = icmp ne i32 %.1.lcssa.lcssa.1, 4
  br i1 %428, label %444, label %429

; <label>:429:                                    ; preds = %427
  %430 = load i8*, i8** %46, align 8
  %431 = load i8*, i8** %47, align 16
  %432 = load i8*, i8** %48, align 8
  %433 = call i32 @atoi(i8* %432) #8
  %434 = call i32 @conv_scoped_conf(i8* %430, i8* %431, i32 %433)
  %435 = icmp ne i32 %434, 0
  %436 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %437 = load i8*, i8** %49, align 8
  %438 = load i8*, i8** %50, align 16
  %439 = load i8*, i8** %51, align 8
  br i1 %435, label %442, label %440

; <label>:440:                                    ; preds = %429
  %441 = call i32 @atoi(i8* %439) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %436, i8* %437, i8* %438, i32 %441)
  br label %.outer.backedge.1

; <label>:442:                                    ; preds = %429
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %436, i8* %437, i8* %438, i8* %439)
  %443 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:444:                                    ; preds = %427
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.1)
  %445 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:446:                                    ; preds = %423
  %447 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.1, i8* %447)
  %448 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

.outer.backedge.1:                                ; preds = %446, %444, %442, %440, %421, %418, %410, %409, %.loopexit.1, %360, %357, %349, %346, %338, %337, %329, %327, %326, %312, %309, %305, %300
  %.03.ph.be.1 = phi i32 [ %301, %300 ], [ %311, %309 ], [ %313, %312 ], [ %.03.ph.be, %305 ], [ %330, %329 ], [ %328, %327 ], [ %.03.ph.be, %326 ], [ %339, %338 ], [ %.03.ph.be, %337 ], [ %350, %349 ], [ %.03.ph.be, %346 ], [ %361, %360 ], [ %.03.ph.be, %357 ], [ %411, %410 ], [ %.7.1, %409 ], [ %.7.1, %.loopexit.1 ], [ %422, %421 ], [ %.03.ph.be, %418 ], [ %448, %446 ], [ %445, %444 ], [ %443, %442 ], [ %.03.ph.be, %440 ]
  call void @__loop_iteration_test___2()
  %449 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %450 = icmp ne i8* %449, null
  br i1 %450, label %.lr.ph.2, label %.outer._crit_edge.loopexit1

.lr.ph.2:                                         ; preds = %.outer.backedge.1
  call void @unroll_loop(i32 48)
  br label %451

; <label>:451:                                    ; preds = %485, %.lr.ph.2
  %.0712.2 = phi i32 [ %.lcssa.1, %.lr.ph.2 ], [ %452, %485 ]
  call void @unroll_loop(i32 44)
  %452 = add nsw i32 %.0712.2, 1
  %453 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %454 = icmp ne i8* %453, null
  br i1 %454, label %455, label %456

; <label>:455:                                    ; preds = %451
  store i8 0, i8* %453, align 1
  br label %456

; <label>:456:                                    ; preds = %455, %451
  %457 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %458 = icmp ne i8* %457, null
  br i1 %458, label %459, label %460

; <label>:459:                                    ; preds = %456
  store i8 0, i8* %457, align 1
  br label %460

; <label>:460:                                    ; preds = %459, %456
  %461 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %462 = icmp ne i8* %461, null
  br i1 %462, label %463, label %464

; <label>:463:                                    ; preds = %460
  store i8 0, i8* %461, align 1
  br label %464

; <label>:464:                                    ; preds = %463, %460
  %465 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %466 = icmp ne i8* %465, null
  br i1 %466, label %467, label %468

; <label>:467:                                    ; preds = %464
  store i8 0, i8* %465, align 1
  br label %468

; <label>:468:                                    ; preds = %467, %464
  %469 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %469, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %470 = load i8*, i8** %26, align 8
  %471 = icmp ne i8* %470, null
  %.14.2 = select i1 %471, i32 1, i32 0
  %472 = select i1 %471, i1 true, i1 false
  br i1 %472, label %.lr.ph6.preheader.2, label %._crit_edge.2

.lr.ph6.preheader.2:                              ; preds = %468
  br label %.lr.ph6.2

.lr.ph6.2:                                        ; preds = %.lr.ph6.2, %.lr.ph6.preheader.2
  %.15.2 = phi i32 [ %.1.2, %.lr.ph6.2 ], [ %.14.2, %.lr.ph6.preheader.2 ]
  %473 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %474 = sext i32 %.15.2 to i64
  %475 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %474
  store i8* %473, i8** %475, align 8
  call void @unroll_loop(i32 45)
  %476 = sext i32 %.15.2 to i64
  %477 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %476
  %478 = load i8*, i8** %477, align 8
  %479 = icmp ne i8* %478, null
  %480 = add nsw i32 %.15.2, 1
  %481 = icmp slt i32 %480, 30
  %.1.2 = select i1 %479, i32 %480, i32 %.15.2
  %482 = select i1 %479, i1 %481, i1 false
  br i1 %482, label %.lr.ph6.2, label %._crit_edge.loopexit.2

._crit_edge.loopexit.2:                           ; preds = %.lr.ph6.2
  %.1.lcssa.ph.2 = phi i32 [ %.1.2, %.lr.ph6.2 ]
  br label %._crit_edge.2

._crit_edge.2:                                    ; preds = %._crit_edge.loopexit.2, %468
  %.1.lcssa.2 = phi i32 [ %.14.2, %468 ], [ %.1.lcssa.ph.2, %._crit_edge.loopexit.2 ]
  %483 = load i8*, i8** %27, align 16
  %484 = icmp ne i8* %483, null
  br i1 %484, label %488, label %485

; <label>:485:                                    ; preds = %._crit_edge.2
  %486 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %487 = icmp ne i8* %486, null
  br i1 %487, label %451, label %.outer._crit_edge.loopexit.loopexit2

; <label>:488:                                    ; preds = %._crit_edge.2
  %.1.lcssa.lcssa.2 = phi i32 [ %.1.lcssa.2, %._crit_edge.2 ]
  %.lcssa.2 = phi i32 [ %452, %._crit_edge.2 ]
  %489 = load i8*, i8** %28, align 16
  %490 = call i32 @strcasecmp(i8* %489, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %491 = icmp ne i32 %490, 0
  br i1 %491, label %517, label %492

; <label>:492:                                    ; preds = %488
  %493 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  %494 = icmp sgt i32 %.1.lcssa.lcssa.2, 4
  %or.cond.2 = or i1 %493, %494
  br i1 %or.cond.2, label %515, label %495

; <label>:495:                                    ; preds = %492
  %496 = icmp sgt i32 %.1.lcssa.lcssa.2, 2
  br i1 %496, label %497, label %508

; <label>:497:                                    ; preds = %495
  %498 = load i8*, i8** %34, align 8
  %499 = call i32 @strcasecmp(i8* %498, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %500 = icmp ne i32 %499, 0
  br i1 %500, label %512, label %501

; <label>:501:                                    ; preds = %497
  %502 = icmp sge i32 %.1.lcssa.lcssa.2, 3
  br i1 %502, label %505, label %503

; <label>:503:                                    ; preds = %501
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.2)
  %504 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:505:                                    ; preds = %501
  %506 = load i8*, i8** %40, align 8
  %507 = call i32 @atoi(i8* %506) #8
  br label %508

; <label>:508:                                    ; preds = %505, %495
  %.08.2 = phi i32 [ %507, %505 ], [ 53, %495 ]
  %509 = load i8*, i8** %35, align 8
  %510 = call i32 @fwd_add(i8* %509, i32 %.08.2)
  %511 = icmp eq i32 %510, -1
  br i1 %511, label %.loopexit1.loopexit, label %.outer.backedge.2

; <label>:512:                                    ; preds = %497
  %513 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.2, i8* %513)
  %514 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:515:                                    ; preds = %492
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.2)
  %516 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:517:                                    ; preds = %488
  %518 = load i8*, i8** %29, align 16
  %519 = call i32 @strcasecmp(i8* %518, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %520 = icmp ne i32 %519, 0
  br i1 %520, label %534, label %521

; <label>:521:                                    ; preds = %517
  %522 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %522, label %532, label %523

; <label>:523:                                    ; preds = %521
  %524 = load i8*, i8** %32, align 8
  %525 = call i32 @conv_trick_conf(i8* %524)
  %526 = icmp ne i32 %525, 0
  %527 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %528 = load i8*, i8** %33, align 8
  br i1 %526, label %530, label %529

; <label>:529:                                    ; preds = %523
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %527, i8* %528)
  br label %.outer.backedge.2

; <label>:530:                                    ; preds = %523
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %527, i8* %528)
  %531 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:532:                                    ; preds = %521
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.2)
  %533 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:534:                                    ; preds = %517
  %535 = load i8*, i8** %30, align 16
  %536 = call i32 @strcasecmp(i8* %535, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %537 = icmp ne i32 %536, 0
  br i1 %537, label %543, label %538

; <label>:538:                                    ; preds = %534
  %539 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %539, label %541, label %540

; <label>:540:                                    ; preds = %538
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.2

; <label>:541:                                    ; preds = %538
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.2)
  %542 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:543:                                    ; preds = %534
  %544 = load i8*, i8** %31, align 16
  %545 = call i32 @strcasecmp(i8* %544, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %546 = icmp ne i32 %545, 0
  br i1 %546, label %554, label %547

; <label>:547:                                    ; preds = %543
  %548 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %548, label %552, label %549

; <label>:549:                                    ; preds = %547
  %550 = load i8*, i8** %39, align 8
  %551 = call i32 @atoi(i8* %550) #8
  store i32 %551, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.2

; <label>:552:                                    ; preds = %547
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.2)
  %553 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:554:                                    ; preds = %543
  %555 = load i8*, i8** %36, align 16
  %556 = call i32 @strcasecmp(i8* %555, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %557 = icmp ne i32 %556, 0
  br i1 %557, label %565, label %558

; <label>:558:                                    ; preds = %554
  %559 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %559, label %563, label %560

; <label>:560:                                    ; preds = %558
  %561 = load i8*, i8** %42, align 8
  %562 = call noalias i8* @strdup(i8* %561) #9, !track !108
  store i8* %562, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.2

; <label>:563:                                    ; preds = %558
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.2)
  %564 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:565:                                    ; preds = %554
  %566 = load i8*, i8** %38, align 16
  %567 = call i32 @strcasecmp(i8* %566, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %568 = icmp ne i32 %567, 0
  br i1 %568, label %615, label %569

; <label>:569:                                    ; preds = %565
  %570 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  br i1 %570, label %571, label %573

; <label>:571:                                    ; preds = %569
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.2)
  %572 = add nsw i32 %.03.ph.be.1, 1
  br label %573

; <label>:573:                                    ; preds = %571, %569
  %.7.2 = phi i32 [ %572, %571 ], [ %.03.ph.be.1, %569 ]
  br label %574

; <label>:574:                                    ; preds = %574, %573
  %lsr.iv.2 = phi i64 [ %lsr.iv.next.2, %574 ], [ -1, %573 ]
  %575 = add i64 %lsr.iv.2, 1
  call void @unroll_loop(i32 46)
  %576 = shl i64 %lsr.iv.2, 3
  %uglygep.2 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %576
  %uglygep3.2 = bitcast i8* %uglygep.2 to i8**
  %scevgep.2 = getelementptr i8*, i8** %uglygep3.2, i64 111
  %577 = load i8*, i8** %scevgep.2, align 8
  %578 = icmp ne i8* %577, null
  %579 = icmp ult i64 %575, 30
  %spec.select.2 = select i1 %578, i1 %579, i1 false
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %spec.select.2, label %574, label %580

; <label>:580:                                    ; preds = %574
  %.01.lcssa.wide.2 = phi i64 [ %lsr.iv.next.2, %574 ]
  %581 = trunc i64 %.01.lcssa.wide.2 to i32
  %582 = add nsw i32 %581, %.1.lcssa.lcssa.2
  %583 = sub nsw i32 %582, 1
  %584 = icmp sgt i32 %583, 30
  br i1 %584, label %613, label %585

; <label>:585:                                    ; preds = %580
  %586 = sub nsw i32 %.1.lcssa.lcssa.2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.2, i32 %586)
  %587 = add nsw i32 %.1.lcssa.lcssa.2, -1
  %588 = add nsw i32 %581, %.1.lcssa.lcssa.2
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %589
  store i8* null, i8** %590, align 8
  %591 = icmp ne i32 %587, 0
  br i1 %591, label %.lr.ph16.2, label %.loopexit.2

.lr.ph16.2:                                       ; preds = %585
  %592 = add i32 %.1.lcssa.lcssa.2, -1
  %593 = sext i32 %592 to i64
  %594 = sext i32 %581 to i64
  %scevgep4.2 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %593
  %595 = shl i64 %593, 1
  %596 = shl i64 %594, 1
  %597 = add i64 %595, %596
  %scevgep9.2 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %597
  %598 = sub i32 1, %.1.lcssa.lcssa.2
  %599 = zext i32 %598 to i64
  br label %600

; <label>:600:                                    ; preds = %605, %.lr.ph16.2
  %lsr.iv5.2 = phi i64 [ 0, %.lr.ph16.2 ], [ %lsr.iv.next6.2, %605 ]
  call void @unroll_loop(i32 47)
  %scevgep7.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %601 = load i8*, i8** %scevgep7.2, align 8
  %602 = call i32 @strcmp(i8* %601, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %603 = icmp ne i32 %602, 0
  br i1 %603, label %605, label %604

; <label>:604:                                    ; preds = %600
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.2

; <label>:605:                                    ; preds = %600
  %scevgep8.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %606 = load i8*, i8** %scevgep8.2, align 8
  %607 = call noalias i8* @strdup(i8* %606) #9, !track !109
  %608 = shl i64 %lsr.iv5.2, 1
  %scevgep10.2 = getelementptr i32, i32* %scevgep9.2, i64 %608
  %scevgep1011.2 = bitcast i32* %scevgep10.2 to i8**
  store i8* %607, i8** %scevgep1011.2, align 8
  %lsr.iv.next6.2 = add nsw i64 %lsr.iv5.2, -1
  %tmp.2 = trunc i64 %lsr.iv.next6.2 to i32
  %609 = icmp ne i32 %598, %tmp.2
  br i1 %609, label %600, label %.loopexit.loopexit.2

.loopexit.loopexit.2:                             ; preds = %605
  br label %.loopexit.2

.loopexit.2:                                      ; preds = %.loopexit.loopexit.2, %604, %585
  %610 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %611 = icmp ne i8* %610, null
  br i1 %611, label %612, label %.outer.backedge.2

; <label>:612:                                    ; preds = %.loopexit.2
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.2

; <label>:613:                                    ; preds = %580
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.2, i32 30)
  %614 = add nsw i32 %.7.2, 1
  br label %.outer.backedge.2

; <label>:615:                                    ; preds = %565
  %616 = load i8*, i8** %41, align 16
  %617 = call i32 @strcasecmp(i8* %616, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %618 = icmp ne i32 %617, 0
  br i1 %618, label %626, label %619

; <label>:619:                                    ; preds = %615
  %620 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %620, label %624, label %621

; <label>:621:                                    ; preds = %619
  %622 = load i8*, i8** %45, align 8
  %623 = call i32 @atoi(i8* %622) #8
  store i32 %623, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.2

; <label>:624:                                    ; preds = %619
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.2)
  %625 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:626:                                    ; preds = %615
  %627 = load i8*, i8** %43, align 16
  %628 = call i32 @strcasecmp(i8* %627, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %629 = icmp ne i32 %628, 0
  br i1 %629, label %649, label %630

; <label>:630:                                    ; preds = %626
  %631 = icmp ne i32 %.1.lcssa.lcssa.2, 4
  br i1 %631, label %647, label %632

; <label>:632:                                    ; preds = %630
  %633 = load i8*, i8** %46, align 8
  %634 = load i8*, i8** %47, align 16
  %635 = load i8*, i8** %48, align 8
  %636 = call i32 @atoi(i8* %635) #8
  %637 = call i32 @conv_scoped_conf(i8* %633, i8* %634, i32 %636)
  %638 = icmp ne i32 %637, 0
  %639 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %640 = load i8*, i8** %49, align 8
  %641 = load i8*, i8** %50, align 16
  %642 = load i8*, i8** %51, align 8
  br i1 %638, label %645, label %643

; <label>:643:                                    ; preds = %632
  %644 = call i32 @atoi(i8* %642) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %639, i8* %640, i8* %641, i32 %644)
  br label %.outer.backedge.2

; <label>:645:                                    ; preds = %632
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %639, i8* %640, i8* %641, i8* %642)
  %646 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:647:                                    ; preds = %630
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.2)
  %648 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:649:                                    ; preds = %626
  %650 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.2, i8* %650)
  %651 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

.outer.backedge.2:                                ; preds = %649, %647, %645, %643, %624, %621, %613, %612, %.loopexit.2, %563, %560, %552, %549, %541, %540, %532, %530, %529, %515, %512, %508, %503
  %.03.ph.be.2 = phi i32 [ %504, %503 ], [ %514, %512 ], [ %516, %515 ], [ %.03.ph.be.1, %508 ], [ %533, %532 ], [ %531, %530 ], [ %.03.ph.be.1, %529 ], [ %542, %541 ], [ %.03.ph.be.1, %540 ], [ %553, %552 ], [ %.03.ph.be.1, %549 ], [ %564, %563 ], [ %.03.ph.be.1, %560 ], [ %614, %613 ], [ %.7.2, %612 ], [ %.7.2, %.loopexit.2 ], [ %625, %624 ], [ %.03.ph.be.1, %621 ], [ %651, %649 ], [ %648, %647 ], [ %646, %645 ], [ %.03.ph.be.1, %643 ]
  call void @__loop_iteration_test___2()
  %652 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %653 = icmp ne i8* %652, null
  br i1 %653, label %.lr.ph.3, label %.outer._crit_edge.loopexit1

.lr.ph.3:                                         ; preds = %.outer.backedge.2
  call void @unroll_loop(i32 48)
  br label %654

; <label>:654:                                    ; preds = %688, %.lr.ph.3
  %.0712.3 = phi i32 [ %.lcssa.2, %.lr.ph.3 ], [ %655, %688 ]
  call void @unroll_loop(i32 44)
  %655 = add nsw i32 %.0712.3, 1
  %656 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %657 = icmp ne i8* %656, null
  br i1 %657, label %658, label %659

; <label>:658:                                    ; preds = %654
  store i8 0, i8* %656, align 1
  br label %659

; <label>:659:                                    ; preds = %658, %654
  %660 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %661 = icmp ne i8* %660, null
  br i1 %661, label %662, label %663

; <label>:662:                                    ; preds = %659
  store i8 0, i8* %660, align 1
  br label %663

; <label>:663:                                    ; preds = %662, %659
  %664 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %665 = icmp ne i8* %664, null
  br i1 %665, label %666, label %667

; <label>:666:                                    ; preds = %663
  store i8 0, i8* %664, align 1
  br label %667

; <label>:667:                                    ; preds = %666, %663
  %668 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %669 = icmp ne i8* %668, null
  br i1 %669, label %670, label %671

; <label>:670:                                    ; preds = %667
  store i8 0, i8* %668, align 1
  br label %671

; <label>:671:                                    ; preds = %670, %667
  %672 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %672, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %673 = load i8*, i8** %26, align 8
  %674 = icmp ne i8* %673, null
  %.14.3 = select i1 %674, i32 1, i32 0
  %675 = select i1 %674, i1 true, i1 false
  br i1 %675, label %.lr.ph6.preheader.3, label %._crit_edge.3

.lr.ph6.preheader.3:                              ; preds = %671
  br label %.lr.ph6.3

.lr.ph6.3:                                        ; preds = %.lr.ph6.3, %.lr.ph6.preheader.3
  %.15.3 = phi i32 [ %.1.3, %.lr.ph6.3 ], [ %.14.3, %.lr.ph6.preheader.3 ]
  %676 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %677 = sext i32 %.15.3 to i64
  %678 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %677
  store i8* %676, i8** %678, align 8
  call void @unroll_loop(i32 45)
  %679 = sext i32 %.15.3 to i64
  %680 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %679
  %681 = load i8*, i8** %680, align 8
  %682 = icmp ne i8* %681, null
  %683 = add nsw i32 %.15.3, 1
  %684 = icmp slt i32 %683, 30
  %.1.3 = select i1 %682, i32 %683, i32 %.15.3
  %685 = select i1 %682, i1 %684, i1 false
  br i1 %685, label %.lr.ph6.3, label %._crit_edge.loopexit.3

._crit_edge.loopexit.3:                           ; preds = %.lr.ph6.3
  %.1.lcssa.ph.3 = phi i32 [ %.1.3, %.lr.ph6.3 ]
  br label %._crit_edge.3

._crit_edge.3:                                    ; preds = %._crit_edge.loopexit.3, %671
  %.1.lcssa.3 = phi i32 [ %.14.3, %671 ], [ %.1.lcssa.ph.3, %._crit_edge.loopexit.3 ]
  %686 = load i8*, i8** %27, align 16
  %687 = icmp ne i8* %686, null
  br i1 %687, label %691, label %688

; <label>:688:                                    ; preds = %._crit_edge.3
  %689 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %690 = icmp ne i8* %689, null
  br i1 %690, label %654, label %.outer._crit_edge.loopexit.loopexit3

; <label>:691:                                    ; preds = %._crit_edge.3
  %.1.lcssa.lcssa.3 = phi i32 [ %.1.lcssa.3, %._crit_edge.3 ]
  %.lcssa.3 = phi i32 [ %655, %._crit_edge.3 ]
  %692 = load i8*, i8** %28, align 16
  %693 = call i32 @strcasecmp(i8* %692, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %694 = icmp ne i32 %693, 0
  br i1 %694, label %720, label %695

; <label>:695:                                    ; preds = %691
  %696 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  %697 = icmp sgt i32 %.1.lcssa.lcssa.3, 4
  %or.cond.3 = or i1 %696, %697
  br i1 %or.cond.3, label %718, label %698

; <label>:698:                                    ; preds = %695
  %699 = icmp sgt i32 %.1.lcssa.lcssa.3, 2
  br i1 %699, label %700, label %711

; <label>:700:                                    ; preds = %698
  %701 = load i8*, i8** %34, align 8
  %702 = call i32 @strcasecmp(i8* %701, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %703 = icmp ne i32 %702, 0
  br i1 %703, label %715, label %704

; <label>:704:                                    ; preds = %700
  %705 = icmp sge i32 %.1.lcssa.lcssa.3, 3
  br i1 %705, label %708, label %706

; <label>:706:                                    ; preds = %704
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.3)
  %707 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:708:                                    ; preds = %704
  %709 = load i8*, i8** %40, align 8
  %710 = call i32 @atoi(i8* %709) #8
  br label %711

; <label>:711:                                    ; preds = %708, %698
  %.08.3 = phi i32 [ %710, %708 ], [ 53, %698 ]
  %712 = load i8*, i8** %35, align 8
  %713 = call i32 @fwd_add(i8* %712, i32 %.08.3)
  %714 = icmp eq i32 %713, -1
  br i1 %714, label %.loopexit1.loopexit, label %.outer.backedge.3

; <label>:715:                                    ; preds = %700
  %716 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.3, i8* %716)
  %717 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:718:                                    ; preds = %695
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.3)
  %719 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:720:                                    ; preds = %691
  %721 = load i8*, i8** %29, align 16
  %722 = call i32 @strcasecmp(i8* %721, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %723 = icmp ne i32 %722, 0
  br i1 %723, label %737, label %724

; <label>:724:                                    ; preds = %720
  %725 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %725, label %735, label %726

; <label>:726:                                    ; preds = %724
  %727 = load i8*, i8** %32, align 8
  %728 = call i32 @conv_trick_conf(i8* %727)
  %729 = icmp ne i32 %728, 0
  %730 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %731 = load i8*, i8** %33, align 8
  br i1 %729, label %733, label %732

; <label>:732:                                    ; preds = %726
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %730, i8* %731)
  br label %.outer.backedge.3

; <label>:733:                                    ; preds = %726
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %730, i8* %731)
  %734 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:735:                                    ; preds = %724
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.3)
  %736 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:737:                                    ; preds = %720
  %738 = load i8*, i8** %30, align 16
  %739 = call i32 @strcasecmp(i8* %738, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %740 = icmp ne i32 %739, 0
  br i1 %740, label %746, label %741

; <label>:741:                                    ; preds = %737
  %742 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %742, label %744, label %743

; <label>:743:                                    ; preds = %741
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.3

; <label>:744:                                    ; preds = %741
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.3)
  %745 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:746:                                    ; preds = %737
  %747 = load i8*, i8** %31, align 16
  %748 = call i32 @strcasecmp(i8* %747, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %749 = icmp ne i32 %748, 0
  br i1 %749, label %757, label %750

; <label>:750:                                    ; preds = %746
  %751 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %751, label %755, label %752

; <label>:752:                                    ; preds = %750
  %753 = load i8*, i8** %39, align 8
  %754 = call i32 @atoi(i8* %753) #8
  store i32 %754, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.3

; <label>:755:                                    ; preds = %750
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.3)
  %756 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:757:                                    ; preds = %746
  %758 = load i8*, i8** %36, align 16
  %759 = call i32 @strcasecmp(i8* %758, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %760 = icmp ne i32 %759, 0
  br i1 %760, label %768, label %761

; <label>:761:                                    ; preds = %757
  %762 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %762, label %766, label %763

; <label>:763:                                    ; preds = %761
  %764 = load i8*, i8** %42, align 8
  %765 = call noalias i8* @strdup(i8* %764) #9, !track !108
  store i8* %765, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.3

; <label>:766:                                    ; preds = %761
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.3)
  %767 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:768:                                    ; preds = %757
  %769 = load i8*, i8** %38, align 16
  %770 = call i32 @strcasecmp(i8* %769, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %771 = icmp ne i32 %770, 0
  br i1 %771, label %818, label %772

; <label>:772:                                    ; preds = %768
  %773 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  br i1 %773, label %774, label %776

; <label>:774:                                    ; preds = %772
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.3)
  %775 = add nsw i32 %.03.ph.be.2, 1
  br label %776

; <label>:776:                                    ; preds = %774, %772
  %.7.3 = phi i32 [ %775, %774 ], [ %.03.ph.be.2, %772 ]
  br label %777

; <label>:777:                                    ; preds = %777, %776
  %lsr.iv.3 = phi i64 [ %lsr.iv.next.3, %777 ], [ -1, %776 ]
  %778 = add i64 %lsr.iv.3, 1
  call void @unroll_loop(i32 46)
  %779 = shl i64 %lsr.iv.3, 3
  %uglygep.3 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %779
  %uglygep3.3 = bitcast i8* %uglygep.3 to i8**
  %scevgep.3 = getelementptr i8*, i8** %uglygep3.3, i64 111
  %780 = load i8*, i8** %scevgep.3, align 8
  %781 = icmp ne i8* %780, null
  %782 = icmp ult i64 %778, 30
  %spec.select.3 = select i1 %781, i1 %782, i1 false
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %spec.select.3, label %777, label %783

; <label>:783:                                    ; preds = %777
  %.01.lcssa.wide.3 = phi i64 [ %lsr.iv.next.3, %777 ]
  %784 = trunc i64 %.01.lcssa.wide.3 to i32
  %785 = add nsw i32 %784, %.1.lcssa.lcssa.3
  %786 = sub nsw i32 %785, 1
  %787 = icmp sgt i32 %786, 30
  br i1 %787, label %816, label %788

; <label>:788:                                    ; preds = %783
  %789 = sub nsw i32 %.1.lcssa.lcssa.3, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.3, i32 %789)
  %790 = add nsw i32 %.1.lcssa.lcssa.3, -1
  %791 = add nsw i32 %784, %.1.lcssa.lcssa.3
  %792 = sext i32 %791 to i64
  %793 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %792
  store i8* null, i8** %793, align 8
  %794 = icmp ne i32 %790, 0
  br i1 %794, label %.lr.ph16.3, label %.loopexit.3

.lr.ph16.3:                                       ; preds = %788
  %795 = add i32 %.1.lcssa.lcssa.3, -1
  %796 = sext i32 %795 to i64
  %797 = sext i32 %784 to i64
  %scevgep4.3 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %796
  %798 = shl i64 %796, 1
  %799 = shl i64 %797, 1
  %800 = add i64 %798, %799
  %scevgep9.3 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %800
  %801 = sub i32 1, %.1.lcssa.lcssa.3
  %802 = zext i32 %801 to i64
  br label %803

; <label>:803:                                    ; preds = %808, %.lr.ph16.3
  %lsr.iv5.3 = phi i64 [ 0, %.lr.ph16.3 ], [ %lsr.iv.next6.3, %808 ]
  call void @unroll_loop(i32 47)
  %scevgep7.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %804 = load i8*, i8** %scevgep7.3, align 8
  %805 = call i32 @strcmp(i8* %804, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %806 = icmp ne i32 %805, 0
  br i1 %806, label %808, label %807

; <label>:807:                                    ; preds = %803
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.3

; <label>:808:                                    ; preds = %803
  %scevgep8.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %809 = load i8*, i8** %scevgep8.3, align 8
  %810 = call noalias i8* @strdup(i8* %809) #9, !track !109
  %811 = shl i64 %lsr.iv5.3, 1
  %scevgep10.3 = getelementptr i32, i32* %scevgep9.3, i64 %811
  %scevgep1011.3 = bitcast i32* %scevgep10.3 to i8**
  store i8* %810, i8** %scevgep1011.3, align 8
  %lsr.iv.next6.3 = add nsw i64 %lsr.iv5.3, -1
  %tmp.3 = trunc i64 %lsr.iv.next6.3 to i32
  %812 = icmp ne i32 %801, %tmp.3
  br i1 %812, label %803, label %.loopexit.loopexit.3

.loopexit.loopexit.3:                             ; preds = %808
  br label %.loopexit.3

.loopexit.3:                                      ; preds = %.loopexit.loopexit.3, %807, %788
  %813 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %814 = icmp ne i8* %813, null
  br i1 %814, label %815, label %.outer.backedge.3

; <label>:815:                                    ; preds = %.loopexit.3
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.3

; <label>:816:                                    ; preds = %783
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.3, i32 30)
  %817 = add nsw i32 %.7.3, 1
  br label %.outer.backedge.3

; <label>:818:                                    ; preds = %768
  %819 = load i8*, i8** %41, align 16
  %820 = call i32 @strcasecmp(i8* %819, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %821 = icmp ne i32 %820, 0
  br i1 %821, label %829, label %822

; <label>:822:                                    ; preds = %818
  %823 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %823, label %827, label %824

; <label>:824:                                    ; preds = %822
  %825 = load i8*, i8** %45, align 8
  %826 = call i32 @atoi(i8* %825) #8
  store i32 %826, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.3

; <label>:827:                                    ; preds = %822
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.3)
  %828 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:829:                                    ; preds = %818
  %830 = load i8*, i8** %43, align 16
  %831 = call i32 @strcasecmp(i8* %830, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %832 = icmp ne i32 %831, 0
  br i1 %832, label %852, label %833

; <label>:833:                                    ; preds = %829
  %834 = icmp ne i32 %.1.lcssa.lcssa.3, 4
  br i1 %834, label %850, label %835

; <label>:835:                                    ; preds = %833
  %836 = load i8*, i8** %46, align 8
  %837 = load i8*, i8** %47, align 16
  %838 = load i8*, i8** %48, align 8
  %839 = call i32 @atoi(i8* %838) #8
  %840 = call i32 @conv_scoped_conf(i8* %836, i8* %837, i32 %839)
  %841 = icmp ne i32 %840, 0
  %842 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %843 = load i8*, i8** %49, align 8
  %844 = load i8*, i8** %50, align 16
  %845 = load i8*, i8** %51, align 8
  br i1 %841, label %848, label %846

; <label>:846:                                    ; preds = %835
  %847 = call i32 @atoi(i8* %845) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %842, i8* %843, i8* %844, i32 %847)
  br label %.outer.backedge.3

; <label>:848:                                    ; preds = %835
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %842, i8* %843, i8* %844, i8* %845)
  %849 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:850:                                    ; preds = %833
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.3)
  %851 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:852:                                    ; preds = %829
  %853 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.3, i8* %853)
  %854 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

.outer.backedge.3:                                ; preds = %852, %850, %848, %846, %827, %824, %816, %815, %.loopexit.3, %766, %763, %755, %752, %744, %743, %735, %733, %732, %718, %715, %711, %706
  %.03.ph.be.3 = phi i32 [ %707, %706 ], [ %717, %715 ], [ %719, %718 ], [ %.03.ph.be.2, %711 ], [ %736, %735 ], [ %734, %733 ], [ %.03.ph.be.2, %732 ], [ %745, %744 ], [ %.03.ph.be.2, %743 ], [ %756, %755 ], [ %.03.ph.be.2, %752 ], [ %767, %766 ], [ %.03.ph.be.2, %763 ], [ %817, %816 ], [ %.7.3, %815 ], [ %.7.3, %.loopexit.3 ], [ %828, %827 ], [ %.03.ph.be.2, %824 ], [ %854, %852 ], [ %851, %850 ], [ %849, %848 ], [ %.03.ph.be.2, %846 ]
  call void @__loop_iteration_test___2()
  %855 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %856 = icmp ne i8* %855, null
  br i1 %856, label %.lr.ph.4, label %.outer._crit_edge.loopexit1

.lr.ph.4:                                         ; preds = %.outer.backedge.3
  call void @unroll_loop(i32 48)
  br label %857

; <label>:857:                                    ; preds = %891, %.lr.ph.4
  %.0712.4 = phi i32 [ %.lcssa.3, %.lr.ph.4 ], [ %858, %891 ]
  call void @unroll_loop(i32 44)
  %858 = add nsw i32 %.0712.4, 1
  %859 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %860 = icmp ne i8* %859, null
  br i1 %860, label %861, label %862

; <label>:861:                                    ; preds = %857
  store i8 0, i8* %859, align 1
  br label %862

; <label>:862:                                    ; preds = %861, %857
  %863 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %864 = icmp ne i8* %863, null
  br i1 %864, label %865, label %866

; <label>:865:                                    ; preds = %862
  store i8 0, i8* %863, align 1
  br label %866

; <label>:866:                                    ; preds = %865, %862
  %867 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %868 = icmp ne i8* %867, null
  br i1 %868, label %869, label %870

; <label>:869:                                    ; preds = %866
  store i8 0, i8* %867, align 1
  br label %870

; <label>:870:                                    ; preds = %869, %866
  %871 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %872 = icmp ne i8* %871, null
  br i1 %872, label %873, label %874

; <label>:873:                                    ; preds = %870
  store i8 0, i8* %871, align 1
  br label %874

; <label>:874:                                    ; preds = %873, %870
  %875 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %875, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %876 = load i8*, i8** %26, align 8
  %877 = icmp ne i8* %876, null
  %.14.4 = select i1 %877, i32 1, i32 0
  %878 = select i1 %877, i1 true, i1 false
  br i1 %878, label %.lr.ph6.preheader.4, label %._crit_edge.4

.lr.ph6.preheader.4:                              ; preds = %874
  br label %.lr.ph6.4

.lr.ph6.4:                                        ; preds = %.lr.ph6.4, %.lr.ph6.preheader.4
  %.15.4 = phi i32 [ %.1.4, %.lr.ph6.4 ], [ %.14.4, %.lr.ph6.preheader.4 ]
  %879 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %880 = sext i32 %.15.4 to i64
  %881 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %880
  store i8* %879, i8** %881, align 8
  call void @unroll_loop(i32 45)
  %882 = sext i32 %.15.4 to i64
  %883 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %882
  %884 = load i8*, i8** %883, align 8
  %885 = icmp ne i8* %884, null
  %886 = add nsw i32 %.15.4, 1
  %887 = icmp slt i32 %886, 30
  %.1.4 = select i1 %885, i32 %886, i32 %.15.4
  %888 = select i1 %885, i1 %887, i1 false
  br i1 %888, label %.lr.ph6.4, label %._crit_edge.loopexit.4

._crit_edge.loopexit.4:                           ; preds = %.lr.ph6.4
  %.1.lcssa.ph.4 = phi i32 [ %.1.4, %.lr.ph6.4 ]
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %._crit_edge.loopexit.4, %874
  %.1.lcssa.4 = phi i32 [ %.14.4, %874 ], [ %.1.lcssa.ph.4, %._crit_edge.loopexit.4 ]
  %889 = load i8*, i8** %27, align 16
  %890 = icmp ne i8* %889, null
  br i1 %890, label %894, label %891

; <label>:891:                                    ; preds = %._crit_edge.4
  %892 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %893 = icmp ne i8* %892, null
  br i1 %893, label %857, label %.outer._crit_edge.loopexit.loopexit4

; <label>:894:                                    ; preds = %._crit_edge.4
  %.1.lcssa.lcssa.4 = phi i32 [ %.1.lcssa.4, %._crit_edge.4 ]
  %.lcssa.4 = phi i32 [ %858, %._crit_edge.4 ]
  %895 = load i8*, i8** %28, align 16
  %896 = call i32 @strcasecmp(i8* %895, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %897 = icmp ne i32 %896, 0
  br i1 %897, label %923, label %898

; <label>:898:                                    ; preds = %894
  %899 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  %900 = icmp sgt i32 %.1.lcssa.lcssa.4, 4
  %or.cond.4 = or i1 %899, %900
  br i1 %or.cond.4, label %921, label %901

; <label>:901:                                    ; preds = %898
  %902 = icmp sgt i32 %.1.lcssa.lcssa.4, 2
  br i1 %902, label %903, label %914

; <label>:903:                                    ; preds = %901
  %904 = load i8*, i8** %34, align 8
  %905 = call i32 @strcasecmp(i8* %904, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %906 = icmp ne i32 %905, 0
  br i1 %906, label %918, label %907

; <label>:907:                                    ; preds = %903
  %908 = icmp sge i32 %.1.lcssa.lcssa.4, 3
  br i1 %908, label %911, label %909

; <label>:909:                                    ; preds = %907
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.4)
  %910 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:911:                                    ; preds = %907
  %912 = load i8*, i8** %40, align 8
  %913 = call i32 @atoi(i8* %912) #8
  br label %914

; <label>:914:                                    ; preds = %911, %901
  %.08.4 = phi i32 [ %913, %911 ], [ 53, %901 ]
  %915 = load i8*, i8** %35, align 8
  %916 = call i32 @fwd_add(i8* %915, i32 %.08.4)
  %917 = icmp eq i32 %916, -1
  br i1 %917, label %.loopexit1.loopexit, label %.outer.backedge.4

; <label>:918:                                    ; preds = %903
  %919 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.4, i8* %919)
  %920 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:921:                                    ; preds = %898
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.4)
  %922 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:923:                                    ; preds = %894
  %924 = load i8*, i8** %29, align 16
  %925 = call i32 @strcasecmp(i8* %924, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %926 = icmp ne i32 %925, 0
  br i1 %926, label %940, label %927

; <label>:927:                                    ; preds = %923
  %928 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %928, label %938, label %929

; <label>:929:                                    ; preds = %927
  %930 = load i8*, i8** %32, align 8
  %931 = call i32 @conv_trick_conf(i8* %930)
  %932 = icmp ne i32 %931, 0
  %933 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %934 = load i8*, i8** %33, align 8
  br i1 %932, label %936, label %935

; <label>:935:                                    ; preds = %929
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %933, i8* %934)
  br label %.outer.backedge.4

; <label>:936:                                    ; preds = %929
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %933, i8* %934)
  %937 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:938:                                    ; preds = %927
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.4)
  %939 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:940:                                    ; preds = %923
  %941 = load i8*, i8** %30, align 16
  %942 = call i32 @strcasecmp(i8* %941, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %943 = icmp ne i32 %942, 0
  br i1 %943, label %949, label %944

; <label>:944:                                    ; preds = %940
  %945 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %945, label %947, label %946

; <label>:946:                                    ; preds = %944
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.4

; <label>:947:                                    ; preds = %944
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.4)
  %948 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:949:                                    ; preds = %940
  %950 = load i8*, i8** %31, align 16
  %951 = call i32 @strcasecmp(i8* %950, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %952 = icmp ne i32 %951, 0
  br i1 %952, label %960, label %953

; <label>:953:                                    ; preds = %949
  %954 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %954, label %958, label %955

; <label>:955:                                    ; preds = %953
  %956 = load i8*, i8** %39, align 8
  %957 = call i32 @atoi(i8* %956) #8
  store i32 %957, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.4

; <label>:958:                                    ; preds = %953
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.4)
  %959 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:960:                                    ; preds = %949
  %961 = load i8*, i8** %36, align 16
  %962 = call i32 @strcasecmp(i8* %961, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %963 = icmp ne i32 %962, 0
  br i1 %963, label %971, label %964

; <label>:964:                                    ; preds = %960
  %965 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %965, label %969, label %966

; <label>:966:                                    ; preds = %964
  %967 = load i8*, i8** %42, align 8
  %968 = call noalias i8* @strdup(i8* %967) #9, !track !108
  store i8* %968, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.4

; <label>:969:                                    ; preds = %964
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.4)
  %970 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:971:                                    ; preds = %960
  %972 = load i8*, i8** %38, align 16
  %973 = call i32 @strcasecmp(i8* %972, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %974 = icmp ne i32 %973, 0
  br i1 %974, label %1021, label %975

; <label>:975:                                    ; preds = %971
  %976 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  br i1 %976, label %977, label %979

; <label>:977:                                    ; preds = %975
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.4)
  %978 = add nsw i32 %.03.ph.be.3, 1
  br label %979

; <label>:979:                                    ; preds = %977, %975
  %.7.4 = phi i32 [ %978, %977 ], [ %.03.ph.be.3, %975 ]
  br label %980

; <label>:980:                                    ; preds = %980, %979
  %lsr.iv.4 = phi i64 [ %lsr.iv.next.4, %980 ], [ -1, %979 ]
  %981 = add i64 %lsr.iv.4, 1
  call void @unroll_loop(i32 46)
  %982 = shl i64 %lsr.iv.4, 3
  %uglygep.4 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %982
  %uglygep3.4 = bitcast i8* %uglygep.4 to i8**
  %scevgep.4 = getelementptr i8*, i8** %uglygep3.4, i64 111
  %983 = load i8*, i8** %scevgep.4, align 8
  %984 = icmp ne i8* %983, null
  %985 = icmp ult i64 %981, 30
  %spec.select.4 = select i1 %984, i1 %985, i1 false
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %spec.select.4, label %980, label %986

; <label>:986:                                    ; preds = %980
  %.01.lcssa.wide.4 = phi i64 [ %lsr.iv.next.4, %980 ]
  %987 = trunc i64 %.01.lcssa.wide.4 to i32
  %988 = add nsw i32 %987, %.1.lcssa.lcssa.4
  %989 = sub nsw i32 %988, 1
  %990 = icmp sgt i32 %989, 30
  br i1 %990, label %1019, label %991

; <label>:991:                                    ; preds = %986
  %992 = sub nsw i32 %.1.lcssa.lcssa.4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.4, i32 %992)
  %993 = add nsw i32 %.1.lcssa.lcssa.4, -1
  %994 = add nsw i32 %987, %.1.lcssa.lcssa.4
  %995 = sext i32 %994 to i64
  %996 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %995
  store i8* null, i8** %996, align 8
  %997 = icmp ne i32 %993, 0
  br i1 %997, label %.lr.ph16.4, label %.loopexit.4

.lr.ph16.4:                                       ; preds = %991
  %998 = add i32 %.1.lcssa.lcssa.4, -1
  %999 = sext i32 %998 to i64
  %1000 = sext i32 %987 to i64
  %scevgep4.4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %999
  %1001 = shl i64 %999, 1
  %1002 = shl i64 %1000, 1
  %1003 = add i64 %1001, %1002
  %scevgep9.4 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1003
  %1004 = sub i32 1, %.1.lcssa.lcssa.4
  %1005 = zext i32 %1004 to i64
  br label %1006

; <label>:1006:                                   ; preds = %1011, %.lr.ph16.4
  %lsr.iv5.4 = phi i64 [ 0, %.lr.ph16.4 ], [ %lsr.iv.next6.4, %1011 ]
  call void @unroll_loop(i32 47)
  %scevgep7.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1007 = load i8*, i8** %scevgep7.4, align 8
  %1008 = call i32 @strcmp(i8* %1007, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1009 = icmp ne i32 %1008, 0
  br i1 %1009, label %1011, label %1010

; <label>:1010:                                   ; preds = %1006
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.4

; <label>:1011:                                   ; preds = %1006
  %scevgep8.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1012 = load i8*, i8** %scevgep8.4, align 8
  %1013 = call noalias i8* @strdup(i8* %1012) #9, !track !109
  %1014 = shl i64 %lsr.iv5.4, 1
  %scevgep10.4 = getelementptr i32, i32* %scevgep9.4, i64 %1014
  %scevgep1011.4 = bitcast i32* %scevgep10.4 to i8**
  store i8* %1013, i8** %scevgep1011.4, align 8
  %lsr.iv.next6.4 = add nsw i64 %lsr.iv5.4, -1
  %tmp.4 = trunc i64 %lsr.iv.next6.4 to i32
  %1015 = icmp ne i32 %1004, %tmp.4
  br i1 %1015, label %1006, label %.loopexit.loopexit.4

.loopexit.loopexit.4:                             ; preds = %1011
  br label %.loopexit.4

.loopexit.4:                                      ; preds = %.loopexit.loopexit.4, %1010, %991
  %1016 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1017 = icmp ne i8* %1016, null
  br i1 %1017, label %1018, label %.outer.backedge.4

; <label>:1018:                                   ; preds = %.loopexit.4
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.4

; <label>:1019:                                   ; preds = %986
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.4, i32 30)
  %1020 = add nsw i32 %.7.4, 1
  br label %.outer.backedge.4

; <label>:1021:                                   ; preds = %971
  %1022 = load i8*, i8** %41, align 16
  %1023 = call i32 @strcasecmp(i8* %1022, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1024 = icmp ne i32 %1023, 0
  br i1 %1024, label %1032, label %1025

; <label>:1025:                                   ; preds = %1021
  %1026 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %1026, label %1030, label %1027

; <label>:1027:                                   ; preds = %1025
  %1028 = load i8*, i8** %45, align 8
  %1029 = call i32 @atoi(i8* %1028) #8
  store i32 %1029, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.4

; <label>:1030:                                   ; preds = %1025
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.4)
  %1031 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1032:                                   ; preds = %1021
  %1033 = load i8*, i8** %43, align 16
  %1034 = call i32 @strcasecmp(i8* %1033, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1035 = icmp ne i32 %1034, 0
  br i1 %1035, label %1055, label %1036

; <label>:1036:                                   ; preds = %1032
  %1037 = icmp ne i32 %.1.lcssa.lcssa.4, 4
  br i1 %1037, label %1053, label %1038

; <label>:1038:                                   ; preds = %1036
  %1039 = load i8*, i8** %46, align 8
  %1040 = load i8*, i8** %47, align 16
  %1041 = load i8*, i8** %48, align 8
  %1042 = call i32 @atoi(i8* %1041) #8
  %1043 = call i32 @conv_scoped_conf(i8* %1039, i8* %1040, i32 %1042)
  %1044 = icmp ne i32 %1043, 0
  %1045 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1046 = load i8*, i8** %49, align 8
  %1047 = load i8*, i8** %50, align 16
  %1048 = load i8*, i8** %51, align 8
  br i1 %1044, label %1051, label %1049

; <label>:1049:                                   ; preds = %1038
  %1050 = call i32 @atoi(i8* %1048) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1045, i8* %1046, i8* %1047, i32 %1050)
  br label %.outer.backedge.4

; <label>:1051:                                   ; preds = %1038
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1045, i8* %1046, i8* %1047, i8* %1048)
  %1052 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1053:                                   ; preds = %1036
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.4)
  %1054 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1055:                                   ; preds = %1032
  %1056 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.4, i8* %1056)
  %1057 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

.outer.backedge.4:                                ; preds = %1055, %1053, %1051, %1049, %1030, %1027, %1019, %1018, %.loopexit.4, %969, %966, %958, %955, %947, %946, %938, %936, %935, %921, %918, %914, %909
  %.03.ph.be.4 = phi i32 [ %910, %909 ], [ %920, %918 ], [ %922, %921 ], [ %.03.ph.be.3, %914 ], [ %939, %938 ], [ %937, %936 ], [ %.03.ph.be.3, %935 ], [ %948, %947 ], [ %.03.ph.be.3, %946 ], [ %959, %958 ], [ %.03.ph.be.3, %955 ], [ %970, %969 ], [ %.03.ph.be.3, %966 ], [ %1020, %1019 ], [ %.7.4, %1018 ], [ %.7.4, %.loopexit.4 ], [ %1031, %1030 ], [ %.03.ph.be.3, %1027 ], [ %1057, %1055 ], [ %1054, %1053 ], [ %1052, %1051 ], [ %.03.ph.be.3, %1049 ]
  call void @__loop_iteration_test___2()
  %1058 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1059 = icmp ne i8* %1058, null
  br i1 %1059, label %.lr.ph.5, label %.outer._crit_edge.loopexit1

.lr.ph.5:                                         ; preds = %.outer.backedge.4
  call void @unroll_loop(i32 48)
  br label %1060

; <label>:1060:                                   ; preds = %1094, %.lr.ph.5
  %.0712.5 = phi i32 [ %.lcssa.4, %.lr.ph.5 ], [ %1061, %1094 ]
  call void @unroll_loop(i32 44)
  %1061 = add nsw i32 %.0712.5, 1
  %1062 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1063 = icmp ne i8* %1062, null
  br i1 %1063, label %1064, label %1065

; <label>:1064:                                   ; preds = %1060
  store i8 0, i8* %1062, align 1
  br label %1065

; <label>:1065:                                   ; preds = %1064, %1060
  %1066 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1067 = icmp ne i8* %1066, null
  br i1 %1067, label %1068, label %1069

; <label>:1068:                                   ; preds = %1065
  store i8 0, i8* %1066, align 1
  br label %1069

; <label>:1069:                                   ; preds = %1068, %1065
  %1070 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1071 = icmp ne i8* %1070, null
  br i1 %1071, label %1072, label %1073

; <label>:1072:                                   ; preds = %1069
  store i8 0, i8* %1070, align 1
  br label %1073

; <label>:1073:                                   ; preds = %1072, %1069
  %1074 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1075 = icmp ne i8* %1074, null
  br i1 %1075, label %1076, label %1077

; <label>:1076:                                   ; preds = %1073
  store i8 0, i8* %1074, align 1
  br label %1077

; <label>:1077:                                   ; preds = %1076, %1073
  %1078 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1078, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1079 = load i8*, i8** %26, align 8
  %1080 = icmp ne i8* %1079, null
  %.14.5 = select i1 %1080, i32 1, i32 0
  %1081 = select i1 %1080, i1 true, i1 false
  br i1 %1081, label %.lr.ph6.preheader.5, label %._crit_edge.5

.lr.ph6.preheader.5:                              ; preds = %1077
  br label %.lr.ph6.5

.lr.ph6.5:                                        ; preds = %.lr.ph6.5, %.lr.ph6.preheader.5
  %.15.5 = phi i32 [ %.1.5, %.lr.ph6.5 ], [ %.14.5, %.lr.ph6.preheader.5 ]
  %1082 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1083 = sext i32 %.15.5 to i64
  %1084 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1083
  store i8* %1082, i8** %1084, align 8
  call void @unroll_loop(i32 45)
  %1085 = sext i32 %.15.5 to i64
  %1086 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1085
  %1087 = load i8*, i8** %1086, align 8
  %1088 = icmp ne i8* %1087, null
  %1089 = add nsw i32 %.15.5, 1
  %1090 = icmp slt i32 %1089, 30
  %.1.5 = select i1 %1088, i32 %1089, i32 %.15.5
  %1091 = select i1 %1088, i1 %1090, i1 false
  br i1 %1091, label %.lr.ph6.5, label %._crit_edge.loopexit.5

._crit_edge.loopexit.5:                           ; preds = %.lr.ph6.5
  %.1.lcssa.ph.5 = phi i32 [ %.1.5, %.lr.ph6.5 ]
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.loopexit.5, %1077
  %.1.lcssa.5 = phi i32 [ %.14.5, %1077 ], [ %.1.lcssa.ph.5, %._crit_edge.loopexit.5 ]
  %1092 = load i8*, i8** %27, align 16
  %1093 = icmp ne i8* %1092, null
  br i1 %1093, label %1097, label %1094

; <label>:1094:                                   ; preds = %._crit_edge.5
  %1095 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1096 = icmp ne i8* %1095, null
  br i1 %1096, label %1060, label %.outer._crit_edge.loopexit.loopexit5

; <label>:1097:                                   ; preds = %._crit_edge.5
  %.1.lcssa.lcssa.5 = phi i32 [ %.1.lcssa.5, %._crit_edge.5 ]
  %.lcssa.5 = phi i32 [ %1061, %._crit_edge.5 ]
  %1098 = load i8*, i8** %28, align 16
  %1099 = call i32 @strcasecmp(i8* %1098, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1100 = icmp ne i32 %1099, 0
  br i1 %1100, label %1126, label %1101

; <label>:1101:                                   ; preds = %1097
  %1102 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  %1103 = icmp sgt i32 %.1.lcssa.lcssa.5, 4
  %or.cond.5 = or i1 %1102, %1103
  br i1 %or.cond.5, label %1124, label %1104

; <label>:1104:                                   ; preds = %1101
  %1105 = icmp sgt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1105, label %1106, label %1117

; <label>:1106:                                   ; preds = %1104
  %1107 = load i8*, i8** %34, align 8
  %1108 = call i32 @strcasecmp(i8* %1107, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1109 = icmp ne i32 %1108, 0
  br i1 %1109, label %1121, label %1110

; <label>:1110:                                   ; preds = %1106
  %1111 = icmp sge i32 %.1.lcssa.lcssa.5, 3
  br i1 %1111, label %1114, label %1112

; <label>:1112:                                   ; preds = %1110
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.5)
  %1113 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1114:                                   ; preds = %1110
  %1115 = load i8*, i8** %40, align 8
  %1116 = call i32 @atoi(i8* %1115) #8
  br label %1117

; <label>:1117:                                   ; preds = %1114, %1104
  %.08.5 = phi i32 [ %1116, %1114 ], [ 53, %1104 ]
  %1118 = load i8*, i8** %35, align 8
  %1119 = call i32 @fwd_add(i8* %1118, i32 %.08.5)
  %1120 = icmp eq i32 %1119, -1
  br i1 %1120, label %.loopexit1.loopexit, label %.outer.backedge.5

; <label>:1121:                                   ; preds = %1106
  %1122 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.5, i8* %1122)
  %1123 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1124:                                   ; preds = %1101
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.5)
  %1125 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1126:                                   ; preds = %1097
  %1127 = load i8*, i8** %29, align 16
  %1128 = call i32 @strcasecmp(i8* %1127, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1129 = icmp ne i32 %1128, 0
  br i1 %1129, label %1143, label %1130

; <label>:1130:                                   ; preds = %1126
  %1131 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1131, label %1141, label %1132

; <label>:1132:                                   ; preds = %1130
  %1133 = load i8*, i8** %32, align 8
  %1134 = call i32 @conv_trick_conf(i8* %1133)
  %1135 = icmp ne i32 %1134, 0
  %1136 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1137 = load i8*, i8** %33, align 8
  br i1 %1135, label %1139, label %1138

; <label>:1138:                                   ; preds = %1132
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1136, i8* %1137)
  br label %.outer.backedge.5

; <label>:1139:                                   ; preds = %1132
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1136, i8* %1137)
  %1140 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1141:                                   ; preds = %1130
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.5)
  %1142 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1143:                                   ; preds = %1126
  %1144 = load i8*, i8** %30, align 16
  %1145 = call i32 @strcasecmp(i8* %1144, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1146 = icmp ne i32 %1145, 0
  br i1 %1146, label %1152, label %1147

; <label>:1147:                                   ; preds = %1143
  %1148 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1148, label %1150, label %1149

; <label>:1149:                                   ; preds = %1147
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.5

; <label>:1150:                                   ; preds = %1147
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.5)
  %1151 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1152:                                   ; preds = %1143
  %1153 = load i8*, i8** %31, align 16
  %1154 = call i32 @strcasecmp(i8* %1153, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1155 = icmp ne i32 %1154, 0
  br i1 %1155, label %1163, label %1156

; <label>:1156:                                   ; preds = %1152
  %1157 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1157, label %1161, label %1158

; <label>:1158:                                   ; preds = %1156
  %1159 = load i8*, i8** %39, align 8
  %1160 = call i32 @atoi(i8* %1159) #8
  store i32 %1160, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.5

; <label>:1161:                                   ; preds = %1156
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.5)
  %1162 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1163:                                   ; preds = %1152
  %1164 = load i8*, i8** %36, align 16
  %1165 = call i32 @strcasecmp(i8* %1164, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1166 = icmp ne i32 %1165, 0
  br i1 %1166, label %1174, label %1167

; <label>:1167:                                   ; preds = %1163
  %1168 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1168, label %1172, label %1169

; <label>:1169:                                   ; preds = %1167
  %1170 = load i8*, i8** %42, align 8
  %1171 = call noalias i8* @strdup(i8* %1170) #9, !track !108
  store i8* %1171, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.5

; <label>:1172:                                   ; preds = %1167
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.5)
  %1173 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1174:                                   ; preds = %1163
  %1175 = load i8*, i8** %38, align 16
  %1176 = call i32 @strcasecmp(i8* %1175, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1177 = icmp ne i32 %1176, 0
  br i1 %1177, label %1224, label %1178

; <label>:1178:                                   ; preds = %1174
  %1179 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1179, label %1180, label %1182

; <label>:1180:                                   ; preds = %1178
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.5)
  %1181 = add nsw i32 %.03.ph.be.4, 1
  br label %1182

; <label>:1182:                                   ; preds = %1180, %1178
  %.7.5 = phi i32 [ %1181, %1180 ], [ %.03.ph.be.4, %1178 ]
  br label %1183

; <label>:1183:                                   ; preds = %1183, %1182
  %lsr.iv.5 = phi i64 [ %lsr.iv.next.5, %1183 ], [ -1, %1182 ]
  %1184 = add i64 %lsr.iv.5, 1
  call void @unroll_loop(i32 46)
  %1185 = shl i64 %lsr.iv.5, 3
  %uglygep.5 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1185
  %uglygep3.5 = bitcast i8* %uglygep.5 to i8**
  %scevgep.5 = getelementptr i8*, i8** %uglygep3.5, i64 111
  %1186 = load i8*, i8** %scevgep.5, align 8
  %1187 = icmp ne i8* %1186, null
  %1188 = icmp ult i64 %1184, 30
  %spec.select.5 = select i1 %1187, i1 %1188, i1 false
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %spec.select.5, label %1183, label %1189

; <label>:1189:                                   ; preds = %1183
  %.01.lcssa.wide.5 = phi i64 [ %lsr.iv.next.5, %1183 ]
  %1190 = trunc i64 %.01.lcssa.wide.5 to i32
  %1191 = add nsw i32 %1190, %.1.lcssa.lcssa.5
  %1192 = sub nsw i32 %1191, 1
  %1193 = icmp sgt i32 %1192, 30
  br i1 %1193, label %1222, label %1194

; <label>:1194:                                   ; preds = %1189
  %1195 = sub nsw i32 %.1.lcssa.lcssa.5, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.5, i32 %1195)
  %1196 = add nsw i32 %.1.lcssa.lcssa.5, -1
  %1197 = add nsw i32 %1190, %.1.lcssa.lcssa.5
  %1198 = sext i32 %1197 to i64
  %1199 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1198
  store i8* null, i8** %1199, align 8
  %1200 = icmp ne i32 %1196, 0
  br i1 %1200, label %.lr.ph16.5, label %.loopexit.5

.lr.ph16.5:                                       ; preds = %1194
  %1201 = add i32 %.1.lcssa.lcssa.5, -1
  %1202 = sext i32 %1201 to i64
  %1203 = sext i32 %1190 to i64
  %scevgep4.5 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1202
  %1204 = shl i64 %1202, 1
  %1205 = shl i64 %1203, 1
  %1206 = add i64 %1204, %1205
  %scevgep9.5 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1206
  %1207 = sub i32 1, %.1.lcssa.lcssa.5
  %1208 = zext i32 %1207 to i64
  br label %1209

; <label>:1209:                                   ; preds = %1214, %.lr.ph16.5
  %lsr.iv5.5 = phi i64 [ 0, %.lr.ph16.5 ], [ %lsr.iv.next6.5, %1214 ]
  call void @unroll_loop(i32 47)
  %scevgep7.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1210 = load i8*, i8** %scevgep7.5, align 8
  %1211 = call i32 @strcmp(i8* %1210, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1212 = icmp ne i32 %1211, 0
  br i1 %1212, label %1214, label %1213

; <label>:1213:                                   ; preds = %1209
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.5

; <label>:1214:                                   ; preds = %1209
  %scevgep8.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1215 = load i8*, i8** %scevgep8.5, align 8
  %1216 = call noalias i8* @strdup(i8* %1215) #9, !track !109
  %1217 = shl i64 %lsr.iv5.5, 1
  %scevgep10.5 = getelementptr i32, i32* %scevgep9.5, i64 %1217
  %scevgep1011.5 = bitcast i32* %scevgep10.5 to i8**
  store i8* %1216, i8** %scevgep1011.5, align 8
  %lsr.iv.next6.5 = add nsw i64 %lsr.iv5.5, -1
  %tmp.5 = trunc i64 %lsr.iv.next6.5 to i32
  %1218 = icmp ne i32 %1207, %tmp.5
  br i1 %1218, label %1209, label %.loopexit.loopexit.5

.loopexit.loopexit.5:                             ; preds = %1214
  br label %.loopexit.5

.loopexit.5:                                      ; preds = %.loopexit.loopexit.5, %1213, %1194
  %1219 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1220 = icmp ne i8* %1219, null
  br i1 %1220, label %1221, label %.outer.backedge.5

; <label>:1221:                                   ; preds = %.loopexit.5
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.5

; <label>:1222:                                   ; preds = %1189
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.5, i32 30)
  %1223 = add nsw i32 %.7.5, 1
  br label %.outer.backedge.5

; <label>:1224:                                   ; preds = %1174
  %1225 = load i8*, i8** %41, align 16
  %1226 = call i32 @strcasecmp(i8* %1225, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1227 = icmp ne i32 %1226, 0
  br i1 %1227, label %1235, label %1228

; <label>:1228:                                   ; preds = %1224
  %1229 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1229, label %1233, label %1230

; <label>:1230:                                   ; preds = %1228
  %1231 = load i8*, i8** %45, align 8
  %1232 = call i32 @atoi(i8* %1231) #8
  store i32 %1232, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.5

; <label>:1233:                                   ; preds = %1228
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.5)
  %1234 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1235:                                   ; preds = %1224
  %1236 = load i8*, i8** %43, align 16
  %1237 = call i32 @strcasecmp(i8* %1236, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1238 = icmp ne i32 %1237, 0
  br i1 %1238, label %1258, label %1239

; <label>:1239:                                   ; preds = %1235
  %1240 = icmp ne i32 %.1.lcssa.lcssa.5, 4
  br i1 %1240, label %1256, label %1241

; <label>:1241:                                   ; preds = %1239
  %1242 = load i8*, i8** %46, align 8
  %1243 = load i8*, i8** %47, align 16
  %1244 = load i8*, i8** %48, align 8
  %1245 = call i32 @atoi(i8* %1244) #8
  %1246 = call i32 @conv_scoped_conf(i8* %1242, i8* %1243, i32 %1245)
  %1247 = icmp ne i32 %1246, 0
  %1248 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1249 = load i8*, i8** %49, align 8
  %1250 = load i8*, i8** %50, align 16
  %1251 = load i8*, i8** %51, align 8
  br i1 %1247, label %1254, label %1252

; <label>:1252:                                   ; preds = %1241
  %1253 = call i32 @atoi(i8* %1251) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1248, i8* %1249, i8* %1250, i32 %1253)
  br label %.outer.backedge.5

; <label>:1254:                                   ; preds = %1241
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1248, i8* %1249, i8* %1250, i8* %1251)
  %1255 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1256:                                   ; preds = %1239
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.5)
  %1257 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1258:                                   ; preds = %1235
  %1259 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.5, i8* %1259)
  %1260 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

.outer.backedge.5:                                ; preds = %1258, %1256, %1254, %1252, %1233, %1230, %1222, %1221, %.loopexit.5, %1172, %1169, %1161, %1158, %1150, %1149, %1141, %1139, %1138, %1124, %1121, %1117, %1112
  %.03.ph.be.5 = phi i32 [ %1113, %1112 ], [ %1123, %1121 ], [ %1125, %1124 ], [ %.03.ph.be.4, %1117 ], [ %1142, %1141 ], [ %1140, %1139 ], [ %.03.ph.be.4, %1138 ], [ %1151, %1150 ], [ %.03.ph.be.4, %1149 ], [ %1162, %1161 ], [ %.03.ph.be.4, %1158 ], [ %1173, %1172 ], [ %.03.ph.be.4, %1169 ], [ %1223, %1222 ], [ %.7.5, %1221 ], [ %.7.5, %.loopexit.5 ], [ %1234, %1233 ], [ %.03.ph.be.4, %1230 ], [ %1260, %1258 ], [ %1257, %1256 ], [ %1255, %1254 ], [ %.03.ph.be.4, %1252 ]
  call void @__loop_iteration_test___2()
  %1261 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1262 = icmp ne i8* %1261, null
  br i1 %1262, label %.lr.ph.6, label %.outer._crit_edge.loopexit1

.lr.ph.6:                                         ; preds = %.outer.backedge.5
  call void @unroll_loop(i32 48)
  br label %1263

; <label>:1263:                                   ; preds = %1297, %.lr.ph.6
  %.0712.6 = phi i32 [ %.lcssa.5, %.lr.ph.6 ], [ %1264, %1297 ]
  call void @unroll_loop(i32 44)
  %1264 = add nsw i32 %.0712.6, 1
  %1265 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1266 = icmp ne i8* %1265, null
  br i1 %1266, label %1267, label %1268

; <label>:1267:                                   ; preds = %1263
  store i8 0, i8* %1265, align 1
  br label %1268

; <label>:1268:                                   ; preds = %1267, %1263
  %1269 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1270 = icmp ne i8* %1269, null
  br i1 %1270, label %1271, label %1272

; <label>:1271:                                   ; preds = %1268
  store i8 0, i8* %1269, align 1
  br label %1272

; <label>:1272:                                   ; preds = %1271, %1268
  %1273 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1274 = icmp ne i8* %1273, null
  br i1 %1274, label %1275, label %1276

; <label>:1275:                                   ; preds = %1272
  store i8 0, i8* %1273, align 1
  br label %1276

; <label>:1276:                                   ; preds = %1275, %1272
  %1277 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1278 = icmp ne i8* %1277, null
  br i1 %1278, label %1279, label %1280

; <label>:1279:                                   ; preds = %1276
  store i8 0, i8* %1277, align 1
  br label %1280

; <label>:1280:                                   ; preds = %1279, %1276
  %1281 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1281, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1282 = load i8*, i8** %26, align 8
  %1283 = icmp ne i8* %1282, null
  %.14.6 = select i1 %1283, i32 1, i32 0
  %1284 = select i1 %1283, i1 true, i1 false
  br i1 %1284, label %.lr.ph6.preheader.6, label %._crit_edge.6

.lr.ph6.preheader.6:                              ; preds = %1280
  br label %.lr.ph6.6

.lr.ph6.6:                                        ; preds = %.lr.ph6.6, %.lr.ph6.preheader.6
  %.15.6 = phi i32 [ %.1.6, %.lr.ph6.6 ], [ %.14.6, %.lr.ph6.preheader.6 ]
  %1285 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1286 = sext i32 %.15.6 to i64
  %1287 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1286
  store i8* %1285, i8** %1287, align 8
  call void @unroll_loop(i32 45)
  %1288 = sext i32 %.15.6 to i64
  %1289 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1288
  %1290 = load i8*, i8** %1289, align 8
  %1291 = icmp ne i8* %1290, null
  %1292 = add nsw i32 %.15.6, 1
  %1293 = icmp slt i32 %1292, 30
  %.1.6 = select i1 %1291, i32 %1292, i32 %.15.6
  %1294 = select i1 %1291, i1 %1293, i1 false
  br i1 %1294, label %.lr.ph6.6, label %._crit_edge.loopexit.6

._crit_edge.loopexit.6:                           ; preds = %.lr.ph6.6
  %.1.lcssa.ph.6 = phi i32 [ %.1.6, %.lr.ph6.6 ]
  br label %._crit_edge.6

._crit_edge.6:                                    ; preds = %._crit_edge.loopexit.6, %1280
  %.1.lcssa.6 = phi i32 [ %.14.6, %1280 ], [ %.1.lcssa.ph.6, %._crit_edge.loopexit.6 ]
  %1295 = load i8*, i8** %27, align 16
  %1296 = icmp ne i8* %1295, null
  br i1 %1296, label %1300, label %1297

; <label>:1297:                                   ; preds = %._crit_edge.6
  %1298 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1299 = icmp ne i8* %1298, null
  br i1 %1299, label %1263, label %.outer._crit_edge.loopexit.loopexit6

; <label>:1300:                                   ; preds = %._crit_edge.6
  %.1.lcssa.lcssa.6 = phi i32 [ %.1.lcssa.6, %._crit_edge.6 ]
  %.lcssa.6 = phi i32 [ %1264, %._crit_edge.6 ]
  %1301 = load i8*, i8** %28, align 16
  %1302 = call i32 @strcasecmp(i8* %1301, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1303 = icmp ne i32 %1302, 0
  br i1 %1303, label %1329, label %1304

; <label>:1304:                                   ; preds = %1300
  %1305 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  %1306 = icmp sgt i32 %.1.lcssa.lcssa.6, 4
  %or.cond.6 = or i1 %1305, %1306
  br i1 %or.cond.6, label %1327, label %1307

; <label>:1307:                                   ; preds = %1304
  %1308 = icmp sgt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1308, label %1309, label %1320

; <label>:1309:                                   ; preds = %1307
  %1310 = load i8*, i8** %34, align 8
  %1311 = call i32 @strcasecmp(i8* %1310, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1312 = icmp ne i32 %1311, 0
  br i1 %1312, label %1324, label %1313

; <label>:1313:                                   ; preds = %1309
  %1314 = icmp sge i32 %.1.lcssa.lcssa.6, 3
  br i1 %1314, label %1317, label %1315

; <label>:1315:                                   ; preds = %1313
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.6)
  %1316 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1317:                                   ; preds = %1313
  %1318 = load i8*, i8** %40, align 8
  %1319 = call i32 @atoi(i8* %1318) #8
  br label %1320

; <label>:1320:                                   ; preds = %1317, %1307
  %.08.6 = phi i32 [ %1319, %1317 ], [ 53, %1307 ]
  %1321 = load i8*, i8** %35, align 8
  %1322 = call i32 @fwd_add(i8* %1321, i32 %.08.6)
  %1323 = icmp eq i32 %1322, -1
  br i1 %1323, label %.loopexit1.loopexit, label %.outer.backedge.6

; <label>:1324:                                   ; preds = %1309
  %1325 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.6, i8* %1325)
  %1326 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1327:                                   ; preds = %1304
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.6)
  %1328 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1329:                                   ; preds = %1300
  %1330 = load i8*, i8** %29, align 16
  %1331 = call i32 @strcasecmp(i8* %1330, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1332 = icmp ne i32 %1331, 0
  br i1 %1332, label %1346, label %1333

; <label>:1333:                                   ; preds = %1329
  %1334 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1334, label %1344, label %1335

; <label>:1335:                                   ; preds = %1333
  %1336 = load i8*, i8** %32, align 8
  %1337 = call i32 @conv_trick_conf(i8* %1336)
  %1338 = icmp ne i32 %1337, 0
  %1339 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1340 = load i8*, i8** %33, align 8
  br i1 %1338, label %1342, label %1341

; <label>:1341:                                   ; preds = %1335
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1339, i8* %1340)
  br label %.outer.backedge.6

; <label>:1342:                                   ; preds = %1335
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1339, i8* %1340)
  %1343 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1344:                                   ; preds = %1333
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.6)
  %1345 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1346:                                   ; preds = %1329
  %1347 = load i8*, i8** %30, align 16
  %1348 = call i32 @strcasecmp(i8* %1347, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1349 = icmp ne i32 %1348, 0
  br i1 %1349, label %1355, label %1350

; <label>:1350:                                   ; preds = %1346
  %1351 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1351, label %1353, label %1352

; <label>:1352:                                   ; preds = %1350
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.6

; <label>:1353:                                   ; preds = %1350
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.6)
  %1354 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1355:                                   ; preds = %1346
  %1356 = load i8*, i8** %31, align 16
  %1357 = call i32 @strcasecmp(i8* %1356, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1358 = icmp ne i32 %1357, 0
  br i1 %1358, label %1366, label %1359

; <label>:1359:                                   ; preds = %1355
  %1360 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1360, label %1364, label %1361

; <label>:1361:                                   ; preds = %1359
  %1362 = load i8*, i8** %39, align 8
  %1363 = call i32 @atoi(i8* %1362) #8
  store i32 %1363, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.6

; <label>:1364:                                   ; preds = %1359
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.6)
  %1365 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1366:                                   ; preds = %1355
  %1367 = load i8*, i8** %36, align 16
  %1368 = call i32 @strcasecmp(i8* %1367, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1369 = icmp ne i32 %1368, 0
  br i1 %1369, label %1377, label %1370

; <label>:1370:                                   ; preds = %1366
  %1371 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1371, label %1375, label %1372

; <label>:1372:                                   ; preds = %1370
  %1373 = load i8*, i8** %42, align 8
  %1374 = call noalias i8* @strdup(i8* %1373) #9, !track !108
  store i8* %1374, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.6

; <label>:1375:                                   ; preds = %1370
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.6)
  %1376 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1377:                                   ; preds = %1366
  %1378 = load i8*, i8** %38, align 16
  %1379 = call i32 @strcasecmp(i8* %1378, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1380 = icmp ne i32 %1379, 0
  br i1 %1380, label %1427, label %1381

; <label>:1381:                                   ; preds = %1377
  %1382 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1382, label %1383, label %1385

; <label>:1383:                                   ; preds = %1381
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.6)
  %1384 = add nsw i32 %.03.ph.be.5, 1
  br label %1385

; <label>:1385:                                   ; preds = %1383, %1381
  %.7.6 = phi i32 [ %1384, %1383 ], [ %.03.ph.be.5, %1381 ]
  br label %1386

; <label>:1386:                                   ; preds = %1386, %1385
  %lsr.iv.6 = phi i64 [ %lsr.iv.next.6, %1386 ], [ -1, %1385 ]
  %1387 = add i64 %lsr.iv.6, 1
  call void @unroll_loop(i32 46)
  %1388 = shl i64 %lsr.iv.6, 3
  %uglygep.6 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1388
  %uglygep3.6 = bitcast i8* %uglygep.6 to i8**
  %scevgep.6 = getelementptr i8*, i8** %uglygep3.6, i64 111
  %1389 = load i8*, i8** %scevgep.6, align 8
  %1390 = icmp ne i8* %1389, null
  %1391 = icmp ult i64 %1387, 30
  %spec.select.6 = select i1 %1390, i1 %1391, i1 false
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %spec.select.6, label %1386, label %1392

; <label>:1392:                                   ; preds = %1386
  %.01.lcssa.wide.6 = phi i64 [ %lsr.iv.next.6, %1386 ]
  %1393 = trunc i64 %.01.lcssa.wide.6 to i32
  %1394 = add nsw i32 %1393, %.1.lcssa.lcssa.6
  %1395 = sub nsw i32 %1394, 1
  %1396 = icmp sgt i32 %1395, 30
  br i1 %1396, label %1425, label %1397

; <label>:1397:                                   ; preds = %1392
  %1398 = sub nsw i32 %.1.lcssa.lcssa.6, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.6, i32 %1398)
  %1399 = add nsw i32 %.1.lcssa.lcssa.6, -1
  %1400 = add nsw i32 %1393, %.1.lcssa.lcssa.6
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1401
  store i8* null, i8** %1402, align 8
  %1403 = icmp ne i32 %1399, 0
  br i1 %1403, label %.lr.ph16.6, label %.loopexit.6

.lr.ph16.6:                                       ; preds = %1397
  %1404 = add i32 %.1.lcssa.lcssa.6, -1
  %1405 = sext i32 %1404 to i64
  %1406 = sext i32 %1393 to i64
  %scevgep4.6 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1405
  %1407 = shl i64 %1405, 1
  %1408 = shl i64 %1406, 1
  %1409 = add i64 %1407, %1408
  %scevgep9.6 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1409
  %1410 = sub i32 1, %.1.lcssa.lcssa.6
  %1411 = zext i32 %1410 to i64
  br label %1412

; <label>:1412:                                   ; preds = %1417, %.lr.ph16.6
  %lsr.iv5.6 = phi i64 [ 0, %.lr.ph16.6 ], [ %lsr.iv.next6.6, %1417 ]
  call void @unroll_loop(i32 47)
  %scevgep7.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1413 = load i8*, i8** %scevgep7.6, align 8
  %1414 = call i32 @strcmp(i8* %1413, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1415 = icmp ne i32 %1414, 0
  br i1 %1415, label %1417, label %1416

; <label>:1416:                                   ; preds = %1412
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.6

; <label>:1417:                                   ; preds = %1412
  %scevgep8.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1418 = load i8*, i8** %scevgep8.6, align 8
  %1419 = call noalias i8* @strdup(i8* %1418) #9, !track !109
  %1420 = shl i64 %lsr.iv5.6, 1
  %scevgep10.6 = getelementptr i32, i32* %scevgep9.6, i64 %1420
  %scevgep1011.6 = bitcast i32* %scevgep10.6 to i8**
  store i8* %1419, i8** %scevgep1011.6, align 8
  %lsr.iv.next6.6 = add nsw i64 %lsr.iv5.6, -1
  %tmp.6 = trunc i64 %lsr.iv.next6.6 to i32
  %1421 = icmp ne i32 %1410, %tmp.6
  br i1 %1421, label %1412, label %.loopexit.loopexit.6

.loopexit.loopexit.6:                             ; preds = %1417
  br label %.loopexit.6

.loopexit.6:                                      ; preds = %.loopexit.loopexit.6, %1416, %1397
  %1422 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1423 = icmp ne i8* %1422, null
  br i1 %1423, label %1424, label %.outer.backedge.6

; <label>:1424:                                   ; preds = %.loopexit.6
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.6

; <label>:1425:                                   ; preds = %1392
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.6, i32 30)
  %1426 = add nsw i32 %.7.6, 1
  br label %.outer.backedge.6

; <label>:1427:                                   ; preds = %1377
  %1428 = load i8*, i8** %41, align 16
  %1429 = call i32 @strcasecmp(i8* %1428, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1430 = icmp ne i32 %1429, 0
  br i1 %1430, label %1438, label %1431

; <label>:1431:                                   ; preds = %1427
  %1432 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1432, label %1436, label %1433

; <label>:1433:                                   ; preds = %1431
  %1434 = load i8*, i8** %45, align 8
  %1435 = call i32 @atoi(i8* %1434) #8
  store i32 %1435, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.6

; <label>:1436:                                   ; preds = %1431
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.6)
  %1437 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1438:                                   ; preds = %1427
  %1439 = load i8*, i8** %43, align 16
  %1440 = call i32 @strcasecmp(i8* %1439, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1441 = icmp ne i32 %1440, 0
  br i1 %1441, label %1461, label %1442

; <label>:1442:                                   ; preds = %1438
  %1443 = icmp ne i32 %.1.lcssa.lcssa.6, 4
  br i1 %1443, label %1459, label %1444

; <label>:1444:                                   ; preds = %1442
  %1445 = load i8*, i8** %46, align 8
  %1446 = load i8*, i8** %47, align 16
  %1447 = load i8*, i8** %48, align 8
  %1448 = call i32 @atoi(i8* %1447) #8
  %1449 = call i32 @conv_scoped_conf(i8* %1445, i8* %1446, i32 %1448)
  %1450 = icmp ne i32 %1449, 0
  %1451 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1452 = load i8*, i8** %49, align 8
  %1453 = load i8*, i8** %50, align 16
  %1454 = load i8*, i8** %51, align 8
  br i1 %1450, label %1457, label %1455

; <label>:1455:                                   ; preds = %1444
  %1456 = call i32 @atoi(i8* %1454) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1451, i8* %1452, i8* %1453, i32 %1456)
  br label %.outer.backedge.6

; <label>:1457:                                   ; preds = %1444
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1451, i8* %1452, i8* %1453, i8* %1454)
  %1458 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1459:                                   ; preds = %1442
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.6)
  %1460 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1461:                                   ; preds = %1438
  %1462 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.6, i8* %1462)
  %1463 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

.outer.backedge.6:                                ; preds = %1461, %1459, %1457, %1455, %1436, %1433, %1425, %1424, %.loopexit.6, %1375, %1372, %1364, %1361, %1353, %1352, %1344, %1342, %1341, %1327, %1324, %1320, %1315
  %.03.ph.be.6 = phi i32 [ %1316, %1315 ], [ %1326, %1324 ], [ %1328, %1327 ], [ %.03.ph.be.5, %1320 ], [ %1345, %1344 ], [ %1343, %1342 ], [ %.03.ph.be.5, %1341 ], [ %1354, %1353 ], [ %.03.ph.be.5, %1352 ], [ %1365, %1364 ], [ %.03.ph.be.5, %1361 ], [ %1376, %1375 ], [ %.03.ph.be.5, %1372 ], [ %1426, %1425 ], [ %.7.6, %1424 ], [ %.7.6, %.loopexit.6 ], [ %1437, %1436 ], [ %.03.ph.be.5, %1433 ], [ %1463, %1461 ], [ %1460, %1459 ], [ %1458, %1457 ], [ %.03.ph.be.5, %1455 ]
  call void @__loop_iteration_test___2()
  %1464 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1465 = icmp ne i8* %1464, null
  br i1 %1465, label %.lr.ph.7, label %.outer._crit_edge.loopexit1

.lr.ph.7:                                         ; preds = %.outer.backedge.6
  call void @unroll_loop(i32 48)
  br label %1466

; <label>:1466:                                   ; preds = %1500, %.lr.ph.7
  %.0712.7 = phi i32 [ %.lcssa.6, %.lr.ph.7 ], [ %1467, %1500 ]
  call void @unroll_loop(i32 44)
  %1467 = add nsw i32 %.0712.7, 1
  %1468 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1469 = icmp ne i8* %1468, null
  br i1 %1469, label %1470, label %1471

; <label>:1470:                                   ; preds = %1466
  store i8 0, i8* %1468, align 1
  br label %1471

; <label>:1471:                                   ; preds = %1470, %1466
  %1472 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1473 = icmp ne i8* %1472, null
  br i1 %1473, label %1474, label %1475

; <label>:1474:                                   ; preds = %1471
  store i8 0, i8* %1472, align 1
  br label %1475

; <label>:1475:                                   ; preds = %1474, %1471
  %1476 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1477 = icmp ne i8* %1476, null
  br i1 %1477, label %1478, label %1479

; <label>:1478:                                   ; preds = %1475
  store i8 0, i8* %1476, align 1
  br label %1479

; <label>:1479:                                   ; preds = %1478, %1475
  %1480 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1481 = icmp ne i8* %1480, null
  br i1 %1481, label %1482, label %1483

; <label>:1482:                                   ; preds = %1479
  store i8 0, i8* %1480, align 1
  br label %1483

; <label>:1483:                                   ; preds = %1482, %1479
  %1484 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1484, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1485 = load i8*, i8** %26, align 8
  %1486 = icmp ne i8* %1485, null
  %.14.7 = select i1 %1486, i32 1, i32 0
  %1487 = select i1 %1486, i1 true, i1 false
  br i1 %1487, label %.lr.ph6.preheader.7, label %._crit_edge.7

.lr.ph6.preheader.7:                              ; preds = %1483
  br label %.lr.ph6.7

.lr.ph6.7:                                        ; preds = %.lr.ph6.7, %.lr.ph6.preheader.7
  %.15.7 = phi i32 [ %.1.7, %.lr.ph6.7 ], [ %.14.7, %.lr.ph6.preheader.7 ]
  %1488 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1489 = sext i32 %.15.7 to i64
  %1490 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1489
  store i8* %1488, i8** %1490, align 8
  call void @unroll_loop(i32 45)
  %1491 = sext i32 %.15.7 to i64
  %1492 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1491
  %1493 = load i8*, i8** %1492, align 8
  %1494 = icmp ne i8* %1493, null
  %1495 = add nsw i32 %.15.7, 1
  %1496 = icmp slt i32 %1495, 30
  %.1.7 = select i1 %1494, i32 %1495, i32 %.15.7
  %1497 = select i1 %1494, i1 %1496, i1 false
  br i1 %1497, label %.lr.ph6.7, label %._crit_edge.loopexit.7

._crit_edge.loopexit.7:                           ; preds = %.lr.ph6.7
  %.1.lcssa.ph.7 = phi i32 [ %.1.7, %.lr.ph6.7 ]
  br label %._crit_edge.7

._crit_edge.7:                                    ; preds = %._crit_edge.loopexit.7, %1483
  %.1.lcssa.7 = phi i32 [ %.14.7, %1483 ], [ %.1.lcssa.ph.7, %._crit_edge.loopexit.7 ]
  %1498 = load i8*, i8** %27, align 16
  %1499 = icmp ne i8* %1498, null
  br i1 %1499, label %1503, label %1500

; <label>:1500:                                   ; preds = %._crit_edge.7
  %1501 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1502 = icmp ne i8* %1501, null
  br i1 %1502, label %1466, label %.outer._crit_edge.loopexit.loopexit7

; <label>:1503:                                   ; preds = %._crit_edge.7
  %.1.lcssa.lcssa.7 = phi i32 [ %.1.lcssa.7, %._crit_edge.7 ]
  %.lcssa.7 = phi i32 [ %1467, %._crit_edge.7 ]
  %1504 = load i8*, i8** %28, align 16
  %1505 = call i32 @strcasecmp(i8* %1504, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1506 = icmp ne i32 %1505, 0
  br i1 %1506, label %1532, label %1507

; <label>:1507:                                   ; preds = %1503
  %1508 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  %1509 = icmp sgt i32 %.1.lcssa.lcssa.7, 4
  %or.cond.7 = or i1 %1508, %1509
  br i1 %or.cond.7, label %1530, label %1510

; <label>:1510:                                   ; preds = %1507
  %1511 = icmp sgt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1511, label %1512, label %1523

; <label>:1512:                                   ; preds = %1510
  %1513 = load i8*, i8** %34, align 8
  %1514 = call i32 @strcasecmp(i8* %1513, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1515 = icmp ne i32 %1514, 0
  br i1 %1515, label %1527, label %1516

; <label>:1516:                                   ; preds = %1512
  %1517 = icmp sge i32 %.1.lcssa.lcssa.7, 3
  br i1 %1517, label %1520, label %1518

; <label>:1518:                                   ; preds = %1516
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.7)
  %1519 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1520:                                   ; preds = %1516
  %1521 = load i8*, i8** %40, align 8
  %1522 = call i32 @atoi(i8* %1521) #8
  br label %1523

; <label>:1523:                                   ; preds = %1520, %1510
  %.08.7 = phi i32 [ %1522, %1520 ], [ 53, %1510 ]
  %1524 = load i8*, i8** %35, align 8
  %1525 = call i32 @fwd_add(i8* %1524, i32 %.08.7)
  %1526 = icmp eq i32 %1525, -1
  br i1 %1526, label %.loopexit1.loopexit, label %.outer.backedge.7

; <label>:1527:                                   ; preds = %1512
  %1528 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.7, i8* %1528)
  %1529 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1530:                                   ; preds = %1507
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.7)
  %1531 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1532:                                   ; preds = %1503
  %1533 = load i8*, i8** %29, align 16
  %1534 = call i32 @strcasecmp(i8* %1533, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1535 = icmp ne i32 %1534, 0
  br i1 %1535, label %1549, label %1536

; <label>:1536:                                   ; preds = %1532
  %1537 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1537, label %1547, label %1538

; <label>:1538:                                   ; preds = %1536
  %1539 = load i8*, i8** %32, align 8
  %1540 = call i32 @conv_trick_conf(i8* %1539)
  %1541 = icmp ne i32 %1540, 0
  %1542 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1543 = load i8*, i8** %33, align 8
  br i1 %1541, label %1545, label %1544

; <label>:1544:                                   ; preds = %1538
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1542, i8* %1543)
  br label %.outer.backedge.7

; <label>:1545:                                   ; preds = %1538
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1542, i8* %1543)
  %1546 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1547:                                   ; preds = %1536
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.7)
  %1548 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1549:                                   ; preds = %1532
  %1550 = load i8*, i8** %30, align 16
  %1551 = call i32 @strcasecmp(i8* %1550, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1552 = icmp ne i32 %1551, 0
  br i1 %1552, label %1558, label %1553

; <label>:1553:                                   ; preds = %1549
  %1554 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1554, label %1556, label %1555

; <label>:1555:                                   ; preds = %1553
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.7

; <label>:1556:                                   ; preds = %1553
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.7)
  %1557 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1558:                                   ; preds = %1549
  %1559 = load i8*, i8** %31, align 16
  %1560 = call i32 @strcasecmp(i8* %1559, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1561 = icmp ne i32 %1560, 0
  br i1 %1561, label %1569, label %1562

; <label>:1562:                                   ; preds = %1558
  %1563 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1563, label %1567, label %1564

; <label>:1564:                                   ; preds = %1562
  %1565 = load i8*, i8** %39, align 8
  %1566 = call i32 @atoi(i8* %1565) #8
  store i32 %1566, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.7

; <label>:1567:                                   ; preds = %1562
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.7)
  %1568 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1569:                                   ; preds = %1558
  %1570 = load i8*, i8** %36, align 16
  %1571 = call i32 @strcasecmp(i8* %1570, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1572 = icmp ne i32 %1571, 0
  br i1 %1572, label %1580, label %1573

; <label>:1573:                                   ; preds = %1569
  %1574 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1574, label %1578, label %1575

; <label>:1575:                                   ; preds = %1573
  %1576 = load i8*, i8** %42, align 8
  %1577 = call noalias i8* @strdup(i8* %1576) #9, !track !108
  store i8* %1577, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.7

; <label>:1578:                                   ; preds = %1573
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.7)
  %1579 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1580:                                   ; preds = %1569
  %1581 = load i8*, i8** %38, align 16
  %1582 = call i32 @strcasecmp(i8* %1581, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1583 = icmp ne i32 %1582, 0
  br i1 %1583, label %1630, label %1584

; <label>:1584:                                   ; preds = %1580
  %1585 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1585, label %1586, label %1588

; <label>:1586:                                   ; preds = %1584
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.7)
  %1587 = add nsw i32 %.03.ph.be.6, 1
  br label %1588

; <label>:1588:                                   ; preds = %1586, %1584
  %.7.7 = phi i32 [ %1587, %1586 ], [ %.03.ph.be.6, %1584 ]
  br label %1589

; <label>:1589:                                   ; preds = %1589, %1588
  %lsr.iv.7 = phi i64 [ %lsr.iv.next.7, %1589 ], [ -1, %1588 ]
  %1590 = add i64 %lsr.iv.7, 1
  call void @unroll_loop(i32 46)
  %1591 = shl i64 %lsr.iv.7, 3
  %uglygep.7 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1591
  %uglygep3.7 = bitcast i8* %uglygep.7 to i8**
  %scevgep.7 = getelementptr i8*, i8** %uglygep3.7, i64 111
  %1592 = load i8*, i8** %scevgep.7, align 8
  %1593 = icmp ne i8* %1592, null
  %1594 = icmp ult i64 %1590, 30
  %spec.select.7 = select i1 %1593, i1 %1594, i1 false
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %spec.select.7, label %1589, label %1595

; <label>:1595:                                   ; preds = %1589
  %.01.lcssa.wide.7 = phi i64 [ %lsr.iv.next.7, %1589 ]
  %1596 = trunc i64 %.01.lcssa.wide.7 to i32
  %1597 = add nsw i32 %1596, %.1.lcssa.lcssa.7
  %1598 = sub nsw i32 %1597, 1
  %1599 = icmp sgt i32 %1598, 30
  br i1 %1599, label %1628, label %1600

; <label>:1600:                                   ; preds = %1595
  %1601 = sub nsw i32 %.1.lcssa.lcssa.7, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.7, i32 %1601)
  %1602 = add nsw i32 %.1.lcssa.lcssa.7, -1
  %1603 = add nsw i32 %1596, %.1.lcssa.lcssa.7
  %1604 = sext i32 %1603 to i64
  %1605 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1604
  store i8* null, i8** %1605, align 8
  %1606 = icmp ne i32 %1602, 0
  br i1 %1606, label %.lr.ph16.7, label %.loopexit.7

.lr.ph16.7:                                       ; preds = %1600
  %1607 = add i32 %.1.lcssa.lcssa.7, -1
  %1608 = sext i32 %1607 to i64
  %1609 = sext i32 %1596 to i64
  %scevgep4.7 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1608
  %1610 = shl i64 %1608, 1
  %1611 = shl i64 %1609, 1
  %1612 = add i64 %1610, %1611
  %scevgep9.7 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1612
  %1613 = sub i32 1, %.1.lcssa.lcssa.7
  %1614 = zext i32 %1613 to i64
  br label %1615

; <label>:1615:                                   ; preds = %1620, %.lr.ph16.7
  %lsr.iv5.7 = phi i64 [ 0, %.lr.ph16.7 ], [ %lsr.iv.next6.7, %1620 ]
  call void @unroll_loop(i32 47)
  %scevgep7.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1616 = load i8*, i8** %scevgep7.7, align 8
  %1617 = call i32 @strcmp(i8* %1616, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1618 = icmp ne i32 %1617, 0
  br i1 %1618, label %1620, label %1619

; <label>:1619:                                   ; preds = %1615
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.7

; <label>:1620:                                   ; preds = %1615
  %scevgep8.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1621 = load i8*, i8** %scevgep8.7, align 8
  %1622 = call noalias i8* @strdup(i8* %1621) #9, !track !109
  %1623 = shl i64 %lsr.iv5.7, 1
  %scevgep10.7 = getelementptr i32, i32* %scevgep9.7, i64 %1623
  %scevgep1011.7 = bitcast i32* %scevgep10.7 to i8**
  store i8* %1622, i8** %scevgep1011.7, align 8
  %lsr.iv.next6.7 = add nsw i64 %lsr.iv5.7, -1
  %tmp.7 = trunc i64 %lsr.iv.next6.7 to i32
  %1624 = icmp ne i32 %1613, %tmp.7
  br i1 %1624, label %1615, label %.loopexit.loopexit.7

.loopexit.loopexit.7:                             ; preds = %1620
  br label %.loopexit.7

.loopexit.7:                                      ; preds = %.loopexit.loopexit.7, %1619, %1600
  %1625 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1626 = icmp ne i8* %1625, null
  br i1 %1626, label %1627, label %.outer.backedge.7

; <label>:1627:                                   ; preds = %.loopexit.7
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.7

; <label>:1628:                                   ; preds = %1595
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.7, i32 30)
  %1629 = add nsw i32 %.7.7, 1
  br label %.outer.backedge.7

; <label>:1630:                                   ; preds = %1580
  %1631 = load i8*, i8** %41, align 16
  %1632 = call i32 @strcasecmp(i8* %1631, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1633 = icmp ne i32 %1632, 0
  br i1 %1633, label %1641, label %1634

; <label>:1634:                                   ; preds = %1630
  %1635 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1635, label %1639, label %1636

; <label>:1636:                                   ; preds = %1634
  %1637 = load i8*, i8** %45, align 8
  %1638 = call i32 @atoi(i8* %1637) #8
  store i32 %1638, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.7

; <label>:1639:                                   ; preds = %1634
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.7)
  %1640 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1641:                                   ; preds = %1630
  %1642 = load i8*, i8** %43, align 16
  %1643 = call i32 @strcasecmp(i8* %1642, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1644 = icmp ne i32 %1643, 0
  br i1 %1644, label %1664, label %1645

; <label>:1645:                                   ; preds = %1641
  %1646 = icmp ne i32 %.1.lcssa.lcssa.7, 4
  br i1 %1646, label %1662, label %1647

; <label>:1647:                                   ; preds = %1645
  %1648 = load i8*, i8** %46, align 8
  %1649 = load i8*, i8** %47, align 16
  %1650 = load i8*, i8** %48, align 8
  %1651 = call i32 @atoi(i8* %1650) #8
  %1652 = call i32 @conv_scoped_conf(i8* %1648, i8* %1649, i32 %1651)
  %1653 = icmp ne i32 %1652, 0
  %1654 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1655 = load i8*, i8** %49, align 8
  %1656 = load i8*, i8** %50, align 16
  %1657 = load i8*, i8** %51, align 8
  br i1 %1653, label %1660, label %1658

; <label>:1658:                                   ; preds = %1647
  %1659 = call i32 @atoi(i8* %1657) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1654, i8* %1655, i8* %1656, i32 %1659)
  br label %.outer.backedge.7

; <label>:1660:                                   ; preds = %1647
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1654, i8* %1655, i8* %1656, i8* %1657)
  %1661 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1662:                                   ; preds = %1645
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.7)
  %1663 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1664:                                   ; preds = %1641
  %1665 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.7, i8* %1665)
  %1666 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

.outer.backedge.7:                                ; preds = %1664, %1662, %1660, %1658, %1639, %1636, %1628, %1627, %.loopexit.7, %1578, %1575, %1567, %1564, %1556, %1555, %1547, %1545, %1544, %1530, %1527, %1523, %1518
  %.03.ph.be.7 = phi i32 [ %1519, %1518 ], [ %1529, %1527 ], [ %1531, %1530 ], [ %.03.ph.be.6, %1523 ], [ %1548, %1547 ], [ %1546, %1545 ], [ %.03.ph.be.6, %1544 ], [ %1557, %1556 ], [ %.03.ph.be.6, %1555 ], [ %1568, %1567 ], [ %.03.ph.be.6, %1564 ], [ %1579, %1578 ], [ %.03.ph.be.6, %1575 ], [ %1629, %1628 ], [ %.7.7, %1627 ], [ %.7.7, %.loopexit.7 ], [ %1640, %1639 ], [ %.03.ph.be.6, %1636 ], [ %1666, %1664 ], [ %1663, %1662 ], [ %1661, %1660 ], [ %.03.ph.be.6, %1658 ]
  call void @__loop_iteration_test___2()
  %1667 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  br label %.outer._crit_edge.loopexit1
}

declare void @__loop_termination_test___2()

declare void @__loop_iteration_test___2()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config_clone_clone_clone(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 2, 0
  br i1 true, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = icmp ne i64 4389383, 0
  %12 = icmp ne %struct._IO_FILE* null, null
  br i1 true, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = bitcast [27 x i8]* @22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 27, i1 false)
  %18 = icmp ne i64 244262, 0
  %19 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %51 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 48)
  br label %55

; <label>:52:                                     ; preds = %._crit_edge
  call void @__loop_iteration_test___3()
  %53 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %54 = icmp ne i8* %53, null
  br i1 %54, label %1672, label %.outer._crit_edge.loopexit.loopexit

; <label>:55:                                     ; preds = %.lr.ph
  call void @unroll_loop(i32 44)
  %56 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %57 = icmp ne i64 244287, 0
  %58 = icmp ne i8* %56, null
  br i1 true, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %56, align 1
  br label %60

; <label>:60:                                     ; preds = %59, %55
  %61 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %62 = icmp ne i64 0, 0
  %63 = icmp ne i8* null, null
  br i1 false, label %64, label %65

; <label>:64:                                     ; preds = %60
  store i8 0, i8* null, align 1
  br label %65

; <label>:65:                                     ; preds = %64, %60
  %66 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %67 = icmp ne i64 0, 0
  %68 = icmp ne i8* null, null
  br i1 false, label %69, label %70

; <label>:69:                                     ; preds = %65
  store i8 0, i8* null, align 1
  br label %70

; <label>:70:                                     ; preds = %69, %65
  %71 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %72 = icmp ne i64 0, 0
  %73 = icmp ne i8* null, null
  br i1 false, label %74, label %75

; <label>:74:                                     ; preds = %70
  store i8 0, i8* null, align 1
  br label %75

; <label>:75:                                     ; preds = %74, %70
  %76 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %77 = load i8*, i8** %26, align 8
  %78 = icmp ne i64 10000581, 0
  %79 = icmp ne i8* %77, null
  %.14 = select i1 true, i32 1, i32 0
  %80 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %75
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6, %.lr.ph6.preheader
  %.15 = phi i32 [ %.1, %.lr.ph6 ], [ 1, %.lr.ph6.preheader ]
  %81 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %82 = sext i32 %.15 to i64
  %83 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %82
  store i8* %81, i8** %83, align 8
  call void @unroll_loop(i32 45)
  %84 = sext i32 %.15 to i64
  %85 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %84
  %86 = load i8*, i8** %85, align 8
  %87 = icmp ne i8* %86, null
  %88 = add nsw i32 %.15, 1
  %89 = icmp slt i32 %88, 30
  %.1 = select i1 %87, i32 %88, i32 %.15
  %90 = select i1 %87, i1 %89, i1 false
  br i1 %90, label %.lr.ph6, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6
  %.1.lcssa.ph = phi i32 [ %.1, %.lr.ph6 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %75
  %.1.lcssa = phi i32 [ 1, %75 ], [ %.1.lcssa.ph, %._crit_edge.loopexit ]
  %91 = load i8*, i8** %27, align 16
  %92 = icmp ne i8* %91, null
  br i1 %92, label %93, label %52

; <label>:93:                                     ; preds = %._crit_edge.770, %._crit_edge.660, %._crit_edge.550, %._crit_edge.440, %._crit_edge.330, %._crit_edge.220, %._crit_edge.110, %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ %.1.lcssa, %._crit_edge ], [ %.1.lcssa.19, %._crit_edge.110 ], [ %.1.lcssa.219, %._crit_edge.220 ], [ %.1.lcssa.329, %._crit_edge.330 ], [ %.1.lcssa.439, %._crit_edge.440 ], [ %.1.lcssa.549, %._crit_edge.550 ], [ %.1.lcssa.659, %._crit_edge.660 ], [ %.1.lcssa.769, %._crit_edge.770 ]
  %.lcssa = phi i32 [ 1, %._crit_edge ], [ 2, %._crit_edge.110 ], [ 3, %._crit_edge.220 ], [ 4, %._crit_edge.330 ], [ 5, %._crit_edge.440 ], [ 6, %._crit_edge.550 ], [ 7, %._crit_edge.660 ], [ 8, %._crit_edge.770 ]
  call void @__loop_termination_test___3()
  %94 = load i8*, i8** %28, align 16
  %95 = call i32 @strcasecmp(i8* %94, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %119, label %97

; <label>:97:                                     ; preds = %93
  %98 = icmp slt i32 %.1.lcssa.lcssa, 2
  %99 = icmp sgt i32 %.1.lcssa.lcssa, 4
  %or.cond = or i1 %98, %99
  br i1 %or.cond, label %100, label %101

; <label>:100:                                    ; preds = %97
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:101:                                    ; preds = %97
  %102 = icmp sgt i32 %.1.lcssa.lcssa, 2
  br i1 %102, label %103, label %115

; <label>:103:                                    ; preds = %101
  %104 = load i8*, i8** %34, align 8
  %105 = call i32 @strcasecmp(i8* %104, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %106 = icmp ne i32 %105, 0
  br i1 %106, label %113, label %107

; <label>:107:                                    ; preds = %103
  %108 = icmp sge i32 %.1.lcssa.lcssa, 3
  br i1 %108, label %109, label %112

; <label>:109:                                    ; preds = %107
  %110 = load i8*, i8** %40, align 8
  %111 = call i32 @atoi(i8* %110) #8
  br label %115

; <label>:112:                                    ; preds = %107
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:113:                                    ; preds = %103
  %114 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa, i8* %114)
  br label %.outer.backedge

; <label>:115:                                    ; preds = %109, %101
  %.08 = phi i32 [ %111, %109 ], [ 53, %101 ]
  %116 = load i8*, i8** %35, align 8
  %117 = call i32 @fwd_add(i8* %116, i32 %.08)
  %118 = icmp eq i32 %117, -1
  br i1 %118, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:119:                                    ; preds = %93
  %120 = load i8*, i8** %29, align 16
  %121 = call i32 @strcasecmp(i8* %120, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %134, label %123

; <label>:123:                                    ; preds = %119
  %124 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %124, label %125, label %126

; <label>:125:                                    ; preds = %123
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:126:                                    ; preds = %123
  %127 = load i8*, i8** %32, align 8
  %128 = call i32 @conv_trick_conf(i8* %127)
  %129 = icmp ne i32 %128, 0
  %130 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %131 = load i8*, i8** %33, align 8
  br i1 %129, label %132, label %133

; <label>:132:                                    ; preds = %126
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %130, i8* %131)
  br label %.outer.backedge

; <label>:133:                                    ; preds = %126
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %130, i8* %131)
  br label %.outer.backedge

; <label>:134:                                    ; preds = %119
  %135 = load i8*, i8** %30, align 16
  %136 = call i32 @strcasecmp(i8* %135, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %142, label %138

; <label>:138:                                    ; preds = %134
  %139 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %139, label %140, label %141

; <label>:140:                                    ; preds = %138
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:141:                                    ; preds = %138
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:142:                                    ; preds = %134
  %143 = load i8*, i8** %31, align 16
  %144 = call i32 @strcasecmp(i8* %143, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %152, label %146

; <label>:146:                                    ; preds = %142
  %147 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %147, label %148, label %149

; <label>:148:                                    ; preds = %146
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:149:                                    ; preds = %146
  %150 = load i8*, i8** %39, align 8
  %151 = call i32 @atoi(i8* %150) #8
  store i32 %151, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:152:                                    ; preds = %142
  %153 = load i8*, i8** %36, align 16
  %154 = call i32 @strcasecmp(i8* %153, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %162, label %156

; <label>:156:                                    ; preds = %152
  %157 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %157, label %158, label %159

; <label>:158:                                    ; preds = %156
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:159:                                    ; preds = %156
  %160 = load i8*, i8** %42, align 8
  %161 = call noalias i8* @strdup(i8* %160) #9, !track !108
  store i8* %161, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:162:                                    ; preds = %152
  %163 = load i8*, i8** %38, align 16
  %164 = call i32 @strcasecmp(i8* %163, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %211, label %166

; <label>:166:                                    ; preds = %162
  %167 = icmp slt i32 %.1.lcssa.lcssa, 2
  br i1 %167, label %168, label %169

; <label>:168:                                    ; preds = %166
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa)
  br label %169

; <label>:169:                                    ; preds = %168, %166
  %.7 = phi i32 [ 1, %168 ], [ 0, %166 ]
  br label %170

; <label>:170:                                    ; preds = %170, %169
  %lsr.iv = phi i64 [ %lsr.iv.next, %170 ], [ -1, %169 ]
  %171 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %172 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %172
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %173 = load i8*, i8** %scevgep, align 8
  %174 = icmp ne i8* %173, null
  %175 = icmp ult i64 %171, 30
  %spec.select = select i1 %174, i1 %175, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %170, label %176

; <label>:176:                                    ; preds = %170
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %170 ]
  %177 = trunc i64 %.01.lcssa.wide to i32
  %178 = add nsw i32 %177, %.1.lcssa.lcssa
  %179 = sub nsw i32 %178, 1
  %180 = icmp sgt i32 %179, 30
  br i1 %180, label %181, label %183

; <label>:181:                                    ; preds = %176
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa, i32 30)
  %182 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:183:                                    ; preds = %176
  %184 = sub nsw i32 %.1.lcssa.lcssa, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa, i32 %184)
  %185 = add nsw i32 %.1.lcssa.lcssa, -1
  %186 = add nsw i32 %177, %.1.lcssa.lcssa
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %187
  store i8* null, i8** %188, align 8
  %189 = icmp ne i32 %185, 0
  br i1 %189, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %183
  %190 = add i32 %.1.lcssa.lcssa, -1
  %191 = sext i32 %190 to i64
  %192 = sext i32 %177 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %191
  %193 = shl i64 %191, 1
  %194 = shl i64 %192, 1
  %195 = add i64 %193, %194
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %195
  %196 = sub i32 1, %.1.lcssa.lcssa
  %197 = zext i32 %196 to i64
  br label %198

; <label>:198:                                    ; preds = %203, %.lr.ph16
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %203 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %199 = load i8*, i8** %scevgep7, align 8
  %200 = call i32 @strcmp(i8* %199, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %203, label %202

; <label>:202:                                    ; preds = %198
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:203:                                    ; preds = %198
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %204 = load i8*, i8** %scevgep8, align 8
  %205 = call noalias i8* @strdup(i8* %204) #9, !track !109
  %206 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %206
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %205, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %207 = icmp ne i32 %196, %tmp
  br i1 %207, label %198, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %203
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %202, %183
  %208 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %209 = icmp ne i8* %208, null
  br i1 %209, label %210, label %.outer.backedge

; <label>:210:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:211:                                    ; preds = %162
  %212 = load i8*, i8** %41, align 16
  %213 = call i32 @strcasecmp(i8* %212, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %221, label %215

; <label>:215:                                    ; preds = %211
  %216 = icmp ne i32 %.1.lcssa.lcssa, 2
  br i1 %216, label %217, label %218

; <label>:217:                                    ; preds = %215
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:218:                                    ; preds = %215
  %219 = load i8*, i8** %45, align 8
  %220 = call i32 @atoi(i8* %219) #8
  store i32 %220, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:221:                                    ; preds = %211
  %222 = load i8*, i8** %43, align 16
  %223 = call i32 @strcasecmp(i8* %222, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %242, label %225

; <label>:225:                                    ; preds = %221
  %226 = icmp ne i32 %.1.lcssa.lcssa, 4
  br i1 %226, label %227, label %228

; <label>:227:                                    ; preds = %225
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa)
  br label %.outer.backedge

; <label>:228:                                    ; preds = %225
  %229 = load i8*, i8** %46, align 8
  %230 = load i8*, i8** %47, align 16
  %231 = load i8*, i8** %48, align 8
  %232 = call i32 @atoi(i8* %231) #8
  %233 = call i32 @conv_scoped_conf(i8* %229, i8* %230, i32 %232)
  %234 = icmp ne i32 %233, 0
  %235 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %236 = load i8*, i8** %49, align 8
  %237 = load i8*, i8** %50, align 16
  %238 = load i8*, i8** %51, align 8
  br i1 %234, label %239, label %240

; <label>:239:                                    ; preds = %228
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %235, i8* %236, i8* %237, i8* %238)
  br label %.outer.backedge

; <label>:240:                                    ; preds = %228
  %241 = call i32 @atoi(i8* %238) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %235, i8* %236, i8* %237, i32 %241)
  br label %.outer.backedge

; <label>:242:                                    ; preds = %221
  %243 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa, i8* %243)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %242, %240, %239, %227, %218, %217, %210, %.loopexit, %181, %159, %158, %149, %148, %141, %140, %133, %132, %125, %115, %113, %112, %100
  %.03.ph.be = phi i32 [ 1, %112 ], [ 1, %113 ], [ 1, %100 ], [ 0, %115 ], [ 1, %125 ], [ 1, %132 ], [ 0, %133 ], [ 1, %140 ], [ 0, %141 ], [ 1, %148 ], [ 0, %149 ], [ 1, %158 ], [ 0, %159 ], [ %182, %181 ], [ %.7, %210 ], [ %.7, %.loopexit ], [ 1, %217 ], [ 0, %218 ], [ 1, %242 ], [ 1, %227 ], [ 1, %239 ], [ 0, %240 ]
  call void @__loop_iteration_test___2()
  %244 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %245 = icmp ne i8* %244, null
  br i1 %245, label %.lr.ph.1, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit.loopexit:              ; preds = %1921, %1885, %1849, %1813, %1777, %1741, %1705, %52
  call void @__loop_termination_test___3()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit1:             ; preds = %286
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit2:             ; preds = %489
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit3:             ; preds = %692
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit4:             ; preds = %895
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit5:             ; preds = %1098
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit6:             ; preds = %1301
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit7:             ; preds = %1504
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit:                       ; preds = %.outer._crit_edge.loopexit.loopexit7, %.outer._crit_edge.loopexit.loopexit6, %.outer._crit_edge.loopexit.loopexit5, %.outer._crit_edge.loopexit.loopexit4, %.outer._crit_edge.loopexit.loopexit3, %.outer._crit_edge.loopexit.loopexit2, %.outer._crit_edge.loopexit.loopexit1, %.outer._crit_edge.loopexit.loopexit
  %.03.lcssa.ph = phi i32 [ 0, %.outer._crit_edge.loopexit.loopexit ], [ %.03.ph.be, %.outer._crit_edge.loopexit.loopexit1 ], [ %.03.ph.be.1, %.outer._crit_edge.loopexit.loopexit2 ], [ %.03.ph.be.2, %.outer._crit_edge.loopexit.loopexit3 ], [ %.03.ph.be.3, %.outer._crit_edge.loopexit.loopexit4 ], [ %.03.ph.be.4, %.outer._crit_edge.loopexit.loopexit5 ], [ %.03.ph.be.5, %.outer._crit_edge.loopexit.loopexit6 ], [ %.03.ph.be.6, %.outer._crit_edge.loopexit.loopexit7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge.7, %.outer.backedge.6, %.outer.backedge.5, %.outer.backedge.4, %.outer.backedge.3, %.outer.backedge.2, %.outer.backedge.1, %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ %.03.ph.be, %.outer.backedge ], [ %.03.ph.be.1, %.outer.backedge.1 ], [ %.03.ph.be.2, %.outer.backedge.2 ], [ %.03.ph.be.3, %.outer.backedge.3 ], [ %.03.ph.be.4, %.outer.backedge.4 ], [ %.03.ph.be.5, %.outer.backedge.5 ], [ %.03.ph.be.6, %.outer.backedge.6 ], [ %.03.ph.be.7, %.outer.backedge.7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.03.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %246 = call i32 @fclose(%struct._IO_FILE* null)
  %247 = icmp ne i32 %.03.lcssa, 0
  br i1 %247, label %248, label %250

; <label>:248:                                    ; preds = %.outer._crit_edge
  %249 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %249, i32 %.03.lcssa)
  br label %.loopexit1

; <label>:250:                                    ; preds = %.outer._crit_edge
  %251 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %251)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %1527, %1324, %1121, %918, %715, %512, %309, %115
  %.0.ph = phi i32 [ -1, %115 ], [ -1, %309 ], [ -1, %512 ], [ -1, %715 ], [ -1, %918 ], [ -1, %1121 ], [ -1, %1324 ], [ -1, %1527 ]
  call void @__loop_termination_test___2()
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %250, %248, %13
  %.0 = phi i32 [ -1, %248 ], [ 0, %250 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0

.lr.ph.1:                                         ; preds = %.outer.backedge
  call void @unroll_loop(i32 48)
  br label %252

; <label>:252:                                    ; preds = %286, %.lr.ph.1
  %.0712.1 = phi i32 [ %.lcssa, %.lr.ph.1 ], [ %253, %286 ]
  call void @unroll_loop(i32 44)
  %253 = add nsw i32 %.0712.1, 1
  %254 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %255 = icmp ne i8* %254, null
  br i1 %255, label %256, label %257

; <label>:256:                                    ; preds = %252
  store i8 0, i8* %254, align 1
  br label %257

; <label>:257:                                    ; preds = %256, %252
  %258 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %259 = icmp ne i8* %258, null
  br i1 %259, label %260, label %261

; <label>:260:                                    ; preds = %257
  store i8 0, i8* %258, align 1
  br label %261

; <label>:261:                                    ; preds = %260, %257
  %262 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %263 = icmp ne i8* %262, null
  br i1 %263, label %264, label %265

; <label>:264:                                    ; preds = %261
  store i8 0, i8* %262, align 1
  br label %265

; <label>:265:                                    ; preds = %264, %261
  %266 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %267 = icmp ne i8* %266, null
  br i1 %267, label %268, label %269

; <label>:268:                                    ; preds = %265
  store i8 0, i8* %266, align 1
  br label %269

; <label>:269:                                    ; preds = %268, %265
  %270 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %270, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %271 = load i8*, i8** %26, align 8
  %272 = icmp ne i8* %271, null
  %.14.1 = select i1 %272, i32 1, i32 0
  %273 = select i1 %272, i1 true, i1 false
  br i1 %273, label %.lr.ph6.preheader.1, label %._crit_edge.1

.lr.ph6.preheader.1:                              ; preds = %269
  br label %.lr.ph6.1

.lr.ph6.1:                                        ; preds = %.lr.ph6.1, %.lr.ph6.preheader.1
  %.15.1 = phi i32 [ %.1.1, %.lr.ph6.1 ], [ %.14.1, %.lr.ph6.preheader.1 ]
  %274 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %275 = sext i32 %.15.1 to i64
  %276 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %275
  store i8* %274, i8** %276, align 8
  call void @unroll_loop(i32 45)
  %277 = sext i32 %.15.1 to i64
  %278 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %277
  %279 = load i8*, i8** %278, align 8
  %280 = icmp ne i8* %279, null
  %281 = add nsw i32 %.15.1, 1
  %282 = icmp slt i32 %281, 30
  %.1.1 = select i1 %280, i32 %281, i32 %.15.1
  %283 = select i1 %280, i1 %282, i1 false
  br i1 %283, label %.lr.ph6.1, label %._crit_edge.loopexit.1

._crit_edge.loopexit.1:                           ; preds = %.lr.ph6.1
  %.1.lcssa.ph.1 = phi i32 [ %.1.1, %.lr.ph6.1 ]
  br label %._crit_edge.1

._crit_edge.1:                                    ; preds = %._crit_edge.loopexit.1, %269
  %.1.lcssa.1 = phi i32 [ %.14.1, %269 ], [ %.1.lcssa.ph.1, %._crit_edge.loopexit.1 ]
  %284 = load i8*, i8** %27, align 16
  %285 = icmp ne i8* %284, null
  br i1 %285, label %289, label %286

; <label>:286:                                    ; preds = %._crit_edge.1
  %287 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %288 = icmp ne i8* %287, null
  br i1 %288, label %252, label %.outer._crit_edge.loopexit.loopexit1

; <label>:289:                                    ; preds = %._crit_edge.1
  %.1.lcssa.lcssa.1 = phi i32 [ %.1.lcssa.1, %._crit_edge.1 ]
  %.lcssa.1 = phi i32 [ %253, %._crit_edge.1 ]
  %290 = load i8*, i8** %28, align 16
  %291 = call i32 @strcasecmp(i8* %290, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %292 = icmp ne i32 %291, 0
  br i1 %292, label %318, label %293

; <label>:293:                                    ; preds = %289
  %294 = icmp slt i32 %.1.lcssa.lcssa.1, 2
  %295 = icmp sgt i32 %.1.lcssa.lcssa.1, 4
  %or.cond.1 = or i1 %294, %295
  br i1 %or.cond.1, label %316, label %296

; <label>:296:                                    ; preds = %293
  %297 = icmp sgt i32 %.1.lcssa.lcssa.1, 2
  br i1 %297, label %298, label %309

; <label>:298:                                    ; preds = %296
  %299 = load i8*, i8** %34, align 8
  %300 = call i32 @strcasecmp(i8* %299, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %313, label %302

; <label>:302:                                    ; preds = %298
  %303 = icmp sge i32 %.1.lcssa.lcssa.1, 3
  br i1 %303, label %306, label %304

; <label>:304:                                    ; preds = %302
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.1)
  %305 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:306:                                    ; preds = %302
  %307 = load i8*, i8** %40, align 8
  %308 = call i32 @atoi(i8* %307) #8
  br label %309

; <label>:309:                                    ; preds = %306, %296
  %.08.1 = phi i32 [ %308, %306 ], [ 53, %296 ]
  %310 = load i8*, i8** %35, align 8
  %311 = call i32 @fwd_add(i8* %310, i32 %.08.1)
  %312 = icmp eq i32 %311, -1
  br i1 %312, label %.loopexit1.loopexit, label %.outer.backedge.1

; <label>:313:                                    ; preds = %298
  %314 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.1, i8* %314)
  %315 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:316:                                    ; preds = %293
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.1)
  %317 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:318:                                    ; preds = %289
  %319 = load i8*, i8** %29, align 16
  %320 = call i32 @strcasecmp(i8* %319, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %321 = icmp ne i32 %320, 0
  br i1 %321, label %335, label %322

; <label>:322:                                    ; preds = %318
  %323 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %323, label %333, label %324

; <label>:324:                                    ; preds = %322
  %325 = load i8*, i8** %32, align 8
  %326 = call i32 @conv_trick_conf(i8* %325)
  %327 = icmp ne i32 %326, 0
  %328 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %329 = load i8*, i8** %33, align 8
  br i1 %327, label %331, label %330

; <label>:330:                                    ; preds = %324
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %328, i8* %329)
  br label %.outer.backedge.1

; <label>:331:                                    ; preds = %324
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %328, i8* %329)
  %332 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:333:                                    ; preds = %322
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.1)
  %334 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:335:                                    ; preds = %318
  %336 = load i8*, i8** %30, align 16
  %337 = call i32 @strcasecmp(i8* %336, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %338 = icmp ne i32 %337, 0
  br i1 %338, label %344, label %339

; <label>:339:                                    ; preds = %335
  %340 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %340, label %342, label %341

; <label>:341:                                    ; preds = %339
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.1

; <label>:342:                                    ; preds = %339
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.1)
  %343 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:344:                                    ; preds = %335
  %345 = load i8*, i8** %31, align 16
  %346 = call i32 @strcasecmp(i8* %345, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %347 = icmp ne i32 %346, 0
  br i1 %347, label %355, label %348

; <label>:348:                                    ; preds = %344
  %349 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %349, label %353, label %350

; <label>:350:                                    ; preds = %348
  %351 = load i8*, i8** %39, align 8
  %352 = call i32 @atoi(i8* %351) #8
  store i32 %352, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.1

; <label>:353:                                    ; preds = %348
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.1)
  %354 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:355:                                    ; preds = %344
  %356 = load i8*, i8** %36, align 16
  %357 = call i32 @strcasecmp(i8* %356, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %358 = icmp ne i32 %357, 0
  br i1 %358, label %366, label %359

; <label>:359:                                    ; preds = %355
  %360 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %360, label %364, label %361

; <label>:361:                                    ; preds = %359
  %362 = load i8*, i8** %42, align 8
  %363 = call noalias i8* @strdup(i8* %362) #9, !track !108
  store i8* %363, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.1

; <label>:364:                                    ; preds = %359
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.1)
  %365 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:366:                                    ; preds = %355
  %367 = load i8*, i8** %38, align 16
  %368 = call i32 @strcasecmp(i8* %367, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %369 = icmp ne i32 %368, 0
  br i1 %369, label %416, label %370

; <label>:370:                                    ; preds = %366
  %371 = icmp slt i32 %.1.lcssa.lcssa.1, 2
  br i1 %371, label %372, label %374

; <label>:372:                                    ; preds = %370
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.1)
  %373 = add nsw i32 %.03.ph.be, 1
  br label %374

; <label>:374:                                    ; preds = %372, %370
  %.7.1 = phi i32 [ %373, %372 ], [ %.03.ph.be, %370 ]
  br label %375

; <label>:375:                                    ; preds = %375, %374
  %lsr.iv.1 = phi i64 [ %lsr.iv.next.1, %375 ], [ -1, %374 ]
  %376 = add i64 %lsr.iv.1, 1
  call void @unroll_loop(i32 46)
  %377 = shl i64 %lsr.iv.1, 3
  %uglygep.1 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %377
  %uglygep3.1 = bitcast i8* %uglygep.1 to i8**
  %scevgep.1 = getelementptr i8*, i8** %uglygep3.1, i64 111
  %378 = load i8*, i8** %scevgep.1, align 8
  %379 = icmp ne i8* %378, null
  %380 = icmp ult i64 %376, 30
  %spec.select.1 = select i1 %379, i1 %380, i1 false
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %spec.select.1, label %375, label %381

; <label>:381:                                    ; preds = %375
  %.01.lcssa.wide.1 = phi i64 [ %lsr.iv.next.1, %375 ]
  %382 = trunc i64 %.01.lcssa.wide.1 to i32
  %383 = add nsw i32 %382, %.1.lcssa.lcssa.1
  %384 = sub nsw i32 %383, 1
  %385 = icmp sgt i32 %384, 30
  br i1 %385, label %414, label %386

; <label>:386:                                    ; preds = %381
  %387 = sub nsw i32 %.1.lcssa.lcssa.1, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.1, i32 %387)
  %388 = add nsw i32 %.1.lcssa.lcssa.1, -1
  %389 = add nsw i32 %382, %.1.lcssa.lcssa.1
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %390
  store i8* null, i8** %391, align 8
  %392 = icmp ne i32 %388, 0
  br i1 %392, label %.lr.ph16.1, label %.loopexit.1

.lr.ph16.1:                                       ; preds = %386
  %393 = add i32 %.1.lcssa.lcssa.1, -1
  %394 = sext i32 %393 to i64
  %395 = sext i32 %382 to i64
  %scevgep4.1 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %394
  %396 = shl i64 %394, 1
  %397 = shl i64 %395, 1
  %398 = add i64 %396, %397
  %scevgep9.1 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %398
  %399 = sub i32 1, %.1.lcssa.lcssa.1
  %400 = zext i32 %399 to i64
  br label %401

; <label>:401:                                    ; preds = %406, %.lr.ph16.1
  %lsr.iv5.1 = phi i64 [ 0, %.lr.ph16.1 ], [ %lsr.iv.next6.1, %406 ]
  call void @unroll_loop(i32 47)
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %402 = load i8*, i8** %scevgep7.1, align 8
  %403 = call i32 @strcmp(i8* %402, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %404 = icmp ne i32 %403, 0
  br i1 %404, label %406, label %405

; <label>:405:                                    ; preds = %401
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.1

; <label>:406:                                    ; preds = %401
  %scevgep8.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %407 = load i8*, i8** %scevgep8.1, align 8
  %408 = call noalias i8* @strdup(i8* %407) #9, !track !109
  %409 = shl i64 %lsr.iv5.1, 1
  %scevgep10.1 = getelementptr i32, i32* %scevgep9.1, i64 %409
  %scevgep1011.1 = bitcast i32* %scevgep10.1 to i8**
  store i8* %408, i8** %scevgep1011.1, align 8
  %lsr.iv.next6.1 = add nsw i64 %lsr.iv5.1, -1
  %tmp.1 = trunc i64 %lsr.iv.next6.1 to i32
  %410 = icmp ne i32 %399, %tmp.1
  br i1 %410, label %401, label %.loopexit.loopexit.1

.loopexit.loopexit.1:                             ; preds = %406
  br label %.loopexit.1

.loopexit.1:                                      ; preds = %.loopexit.loopexit.1, %405, %386
  %411 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %412 = icmp ne i8* %411, null
  br i1 %412, label %413, label %.outer.backedge.1

; <label>:413:                                    ; preds = %.loopexit.1
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.1

; <label>:414:                                    ; preds = %381
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.1, i32 30)
  %415 = add nsw i32 %.7.1, 1
  br label %.outer.backedge.1

; <label>:416:                                    ; preds = %366
  %417 = load i8*, i8** %41, align 16
  %418 = call i32 @strcasecmp(i8* %417, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %419 = icmp ne i32 %418, 0
  br i1 %419, label %427, label %420

; <label>:420:                                    ; preds = %416
  %421 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %421, label %425, label %422

; <label>:422:                                    ; preds = %420
  %423 = load i8*, i8** %45, align 8
  %424 = call i32 @atoi(i8* %423) #8
  store i32 %424, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.1

; <label>:425:                                    ; preds = %420
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.1)
  %426 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:427:                                    ; preds = %416
  %428 = load i8*, i8** %43, align 16
  %429 = call i32 @strcasecmp(i8* %428, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %430 = icmp ne i32 %429, 0
  br i1 %430, label %450, label %431

; <label>:431:                                    ; preds = %427
  %432 = icmp ne i32 %.1.lcssa.lcssa.1, 4
  br i1 %432, label %448, label %433

; <label>:433:                                    ; preds = %431
  %434 = load i8*, i8** %46, align 8
  %435 = load i8*, i8** %47, align 16
  %436 = load i8*, i8** %48, align 8
  %437 = call i32 @atoi(i8* %436) #8
  %438 = call i32 @conv_scoped_conf(i8* %434, i8* %435, i32 %437)
  %439 = icmp ne i32 %438, 0
  %440 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %441 = load i8*, i8** %49, align 8
  %442 = load i8*, i8** %50, align 16
  %443 = load i8*, i8** %51, align 8
  br i1 %439, label %446, label %444

; <label>:444:                                    ; preds = %433
  %445 = call i32 @atoi(i8* %443) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %440, i8* %441, i8* %442, i32 %445)
  br label %.outer.backedge.1

; <label>:446:                                    ; preds = %433
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %440, i8* %441, i8* %442, i8* %443)
  %447 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:448:                                    ; preds = %431
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.1)
  %449 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

; <label>:450:                                    ; preds = %427
  %451 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.1, i8* %451)
  %452 = add nsw i32 %.03.ph.be, 1
  br label %.outer.backedge.1

.outer.backedge.1:                                ; preds = %450, %448, %446, %444, %425, %422, %414, %413, %.loopexit.1, %364, %361, %353, %350, %342, %341, %333, %331, %330, %316, %313, %309, %304
  %.03.ph.be.1 = phi i32 [ %305, %304 ], [ %315, %313 ], [ %317, %316 ], [ %.03.ph.be, %309 ], [ %334, %333 ], [ %332, %331 ], [ %.03.ph.be, %330 ], [ %343, %342 ], [ %.03.ph.be, %341 ], [ %354, %353 ], [ %.03.ph.be, %350 ], [ %365, %364 ], [ %.03.ph.be, %361 ], [ %415, %414 ], [ %.7.1, %413 ], [ %.7.1, %.loopexit.1 ], [ %426, %425 ], [ %.03.ph.be, %422 ], [ %452, %450 ], [ %449, %448 ], [ %447, %446 ], [ %.03.ph.be, %444 ]
  call void @__loop_iteration_test___2()
  %453 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %454 = icmp ne i8* %453, null
  br i1 %454, label %.lr.ph.2, label %.outer._crit_edge.loopexit1

.lr.ph.2:                                         ; preds = %.outer.backedge.1
  call void @unroll_loop(i32 48)
  br label %455

; <label>:455:                                    ; preds = %489, %.lr.ph.2
  %.0712.2 = phi i32 [ %.lcssa.1, %.lr.ph.2 ], [ %456, %489 ]
  call void @unroll_loop(i32 44)
  %456 = add nsw i32 %.0712.2, 1
  %457 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %458 = icmp ne i8* %457, null
  br i1 %458, label %459, label %460

; <label>:459:                                    ; preds = %455
  store i8 0, i8* %457, align 1
  br label %460

; <label>:460:                                    ; preds = %459, %455
  %461 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %462 = icmp ne i8* %461, null
  br i1 %462, label %463, label %464

; <label>:463:                                    ; preds = %460
  store i8 0, i8* %461, align 1
  br label %464

; <label>:464:                                    ; preds = %463, %460
  %465 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %466 = icmp ne i8* %465, null
  br i1 %466, label %467, label %468

; <label>:467:                                    ; preds = %464
  store i8 0, i8* %465, align 1
  br label %468

; <label>:468:                                    ; preds = %467, %464
  %469 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %470 = icmp ne i8* %469, null
  br i1 %470, label %471, label %472

; <label>:471:                                    ; preds = %468
  store i8 0, i8* %469, align 1
  br label %472

; <label>:472:                                    ; preds = %471, %468
  %473 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %473, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %474 = load i8*, i8** %26, align 8
  %475 = icmp ne i8* %474, null
  %.14.2 = select i1 %475, i32 1, i32 0
  %476 = select i1 %475, i1 true, i1 false
  br i1 %476, label %.lr.ph6.preheader.2, label %._crit_edge.2

.lr.ph6.preheader.2:                              ; preds = %472
  br label %.lr.ph6.2

.lr.ph6.2:                                        ; preds = %.lr.ph6.2, %.lr.ph6.preheader.2
  %.15.2 = phi i32 [ %.1.2, %.lr.ph6.2 ], [ %.14.2, %.lr.ph6.preheader.2 ]
  %477 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %478 = sext i32 %.15.2 to i64
  %479 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %478
  store i8* %477, i8** %479, align 8
  call void @unroll_loop(i32 45)
  %480 = sext i32 %.15.2 to i64
  %481 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %480
  %482 = load i8*, i8** %481, align 8
  %483 = icmp ne i8* %482, null
  %484 = add nsw i32 %.15.2, 1
  %485 = icmp slt i32 %484, 30
  %.1.2 = select i1 %483, i32 %484, i32 %.15.2
  %486 = select i1 %483, i1 %485, i1 false
  br i1 %486, label %.lr.ph6.2, label %._crit_edge.loopexit.2

._crit_edge.loopexit.2:                           ; preds = %.lr.ph6.2
  %.1.lcssa.ph.2 = phi i32 [ %.1.2, %.lr.ph6.2 ]
  br label %._crit_edge.2

._crit_edge.2:                                    ; preds = %._crit_edge.loopexit.2, %472
  %.1.lcssa.2 = phi i32 [ %.14.2, %472 ], [ %.1.lcssa.ph.2, %._crit_edge.loopexit.2 ]
  %487 = load i8*, i8** %27, align 16
  %488 = icmp ne i8* %487, null
  br i1 %488, label %492, label %489

; <label>:489:                                    ; preds = %._crit_edge.2
  %490 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %491 = icmp ne i8* %490, null
  br i1 %491, label %455, label %.outer._crit_edge.loopexit.loopexit2

; <label>:492:                                    ; preds = %._crit_edge.2
  %.1.lcssa.lcssa.2 = phi i32 [ %.1.lcssa.2, %._crit_edge.2 ]
  %.lcssa.2 = phi i32 [ %456, %._crit_edge.2 ]
  %493 = load i8*, i8** %28, align 16
  %494 = call i32 @strcasecmp(i8* %493, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %495 = icmp ne i32 %494, 0
  br i1 %495, label %521, label %496

; <label>:496:                                    ; preds = %492
  %497 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  %498 = icmp sgt i32 %.1.lcssa.lcssa.2, 4
  %or.cond.2 = or i1 %497, %498
  br i1 %or.cond.2, label %519, label %499

; <label>:499:                                    ; preds = %496
  %500 = icmp sgt i32 %.1.lcssa.lcssa.2, 2
  br i1 %500, label %501, label %512

; <label>:501:                                    ; preds = %499
  %502 = load i8*, i8** %34, align 8
  %503 = call i32 @strcasecmp(i8* %502, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %504 = icmp ne i32 %503, 0
  br i1 %504, label %516, label %505

; <label>:505:                                    ; preds = %501
  %506 = icmp sge i32 %.1.lcssa.lcssa.2, 3
  br i1 %506, label %509, label %507

; <label>:507:                                    ; preds = %505
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.2)
  %508 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:509:                                    ; preds = %505
  %510 = load i8*, i8** %40, align 8
  %511 = call i32 @atoi(i8* %510) #8
  br label %512

; <label>:512:                                    ; preds = %509, %499
  %.08.2 = phi i32 [ %511, %509 ], [ 53, %499 ]
  %513 = load i8*, i8** %35, align 8
  %514 = call i32 @fwd_add(i8* %513, i32 %.08.2)
  %515 = icmp eq i32 %514, -1
  br i1 %515, label %.loopexit1.loopexit, label %.outer.backedge.2

; <label>:516:                                    ; preds = %501
  %517 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.2, i8* %517)
  %518 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:519:                                    ; preds = %496
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.2)
  %520 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:521:                                    ; preds = %492
  %522 = load i8*, i8** %29, align 16
  %523 = call i32 @strcasecmp(i8* %522, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %524 = icmp ne i32 %523, 0
  br i1 %524, label %538, label %525

; <label>:525:                                    ; preds = %521
  %526 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %526, label %536, label %527

; <label>:527:                                    ; preds = %525
  %528 = load i8*, i8** %32, align 8
  %529 = call i32 @conv_trick_conf(i8* %528)
  %530 = icmp ne i32 %529, 0
  %531 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %532 = load i8*, i8** %33, align 8
  br i1 %530, label %534, label %533

; <label>:533:                                    ; preds = %527
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %531, i8* %532)
  br label %.outer.backedge.2

; <label>:534:                                    ; preds = %527
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %531, i8* %532)
  %535 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:536:                                    ; preds = %525
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.2)
  %537 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:538:                                    ; preds = %521
  %539 = load i8*, i8** %30, align 16
  %540 = call i32 @strcasecmp(i8* %539, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %541 = icmp ne i32 %540, 0
  br i1 %541, label %547, label %542

; <label>:542:                                    ; preds = %538
  %543 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %543, label %545, label %544

; <label>:544:                                    ; preds = %542
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.2

; <label>:545:                                    ; preds = %542
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.2)
  %546 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:547:                                    ; preds = %538
  %548 = load i8*, i8** %31, align 16
  %549 = call i32 @strcasecmp(i8* %548, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %550 = icmp ne i32 %549, 0
  br i1 %550, label %558, label %551

; <label>:551:                                    ; preds = %547
  %552 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %552, label %556, label %553

; <label>:553:                                    ; preds = %551
  %554 = load i8*, i8** %39, align 8
  %555 = call i32 @atoi(i8* %554) #8
  store i32 %555, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.2

; <label>:556:                                    ; preds = %551
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.2)
  %557 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:558:                                    ; preds = %547
  %559 = load i8*, i8** %36, align 16
  %560 = call i32 @strcasecmp(i8* %559, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %569, label %562

; <label>:562:                                    ; preds = %558
  %563 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %563, label %567, label %564

; <label>:564:                                    ; preds = %562
  %565 = load i8*, i8** %42, align 8
  %566 = call noalias i8* @strdup(i8* %565) #9, !track !108
  store i8* %566, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.2

; <label>:567:                                    ; preds = %562
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.2)
  %568 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:569:                                    ; preds = %558
  %570 = load i8*, i8** %38, align 16
  %571 = call i32 @strcasecmp(i8* %570, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %572 = icmp ne i32 %571, 0
  br i1 %572, label %619, label %573

; <label>:573:                                    ; preds = %569
  %574 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  br i1 %574, label %575, label %577

; <label>:575:                                    ; preds = %573
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.2)
  %576 = add nsw i32 %.03.ph.be.1, 1
  br label %577

; <label>:577:                                    ; preds = %575, %573
  %.7.2 = phi i32 [ %576, %575 ], [ %.03.ph.be.1, %573 ]
  br label %578

; <label>:578:                                    ; preds = %578, %577
  %lsr.iv.2 = phi i64 [ %lsr.iv.next.2, %578 ], [ -1, %577 ]
  %579 = add i64 %lsr.iv.2, 1
  call void @unroll_loop(i32 46)
  %580 = shl i64 %lsr.iv.2, 3
  %uglygep.2 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %580
  %uglygep3.2 = bitcast i8* %uglygep.2 to i8**
  %scevgep.2 = getelementptr i8*, i8** %uglygep3.2, i64 111
  %581 = load i8*, i8** %scevgep.2, align 8
  %582 = icmp ne i8* %581, null
  %583 = icmp ult i64 %579, 30
  %spec.select.2 = select i1 %582, i1 %583, i1 false
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %spec.select.2, label %578, label %584

; <label>:584:                                    ; preds = %578
  %.01.lcssa.wide.2 = phi i64 [ %lsr.iv.next.2, %578 ]
  %585 = trunc i64 %.01.lcssa.wide.2 to i32
  %586 = add nsw i32 %585, %.1.lcssa.lcssa.2
  %587 = sub nsw i32 %586, 1
  %588 = icmp sgt i32 %587, 30
  br i1 %588, label %617, label %589

; <label>:589:                                    ; preds = %584
  %590 = sub nsw i32 %.1.lcssa.lcssa.2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.2, i32 %590)
  %591 = add nsw i32 %.1.lcssa.lcssa.2, -1
  %592 = add nsw i32 %585, %.1.lcssa.lcssa.2
  %593 = sext i32 %592 to i64
  %594 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %593
  store i8* null, i8** %594, align 8
  %595 = icmp ne i32 %591, 0
  br i1 %595, label %.lr.ph16.2, label %.loopexit.2

.lr.ph16.2:                                       ; preds = %589
  %596 = add i32 %.1.lcssa.lcssa.2, -1
  %597 = sext i32 %596 to i64
  %598 = sext i32 %585 to i64
  %scevgep4.2 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %597
  %599 = shl i64 %597, 1
  %600 = shl i64 %598, 1
  %601 = add i64 %599, %600
  %scevgep9.2 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %601
  %602 = sub i32 1, %.1.lcssa.lcssa.2
  %603 = zext i32 %602 to i64
  br label %604

; <label>:604:                                    ; preds = %609, %.lr.ph16.2
  %lsr.iv5.2 = phi i64 [ 0, %.lr.ph16.2 ], [ %lsr.iv.next6.2, %609 ]
  call void @unroll_loop(i32 47)
  %scevgep7.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %605 = load i8*, i8** %scevgep7.2, align 8
  %606 = call i32 @strcmp(i8* %605, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %607 = icmp ne i32 %606, 0
  br i1 %607, label %609, label %608

; <label>:608:                                    ; preds = %604
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.2

; <label>:609:                                    ; preds = %604
  %scevgep8.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %610 = load i8*, i8** %scevgep8.2, align 8
  %611 = call noalias i8* @strdup(i8* %610) #9, !track !109
  %612 = shl i64 %lsr.iv5.2, 1
  %scevgep10.2 = getelementptr i32, i32* %scevgep9.2, i64 %612
  %scevgep1011.2 = bitcast i32* %scevgep10.2 to i8**
  store i8* %611, i8** %scevgep1011.2, align 8
  %lsr.iv.next6.2 = add nsw i64 %lsr.iv5.2, -1
  %tmp.2 = trunc i64 %lsr.iv.next6.2 to i32
  %613 = icmp ne i32 %602, %tmp.2
  br i1 %613, label %604, label %.loopexit.loopexit.2

.loopexit.loopexit.2:                             ; preds = %609
  br label %.loopexit.2

.loopexit.2:                                      ; preds = %.loopexit.loopexit.2, %608, %589
  %614 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %615 = icmp ne i8* %614, null
  br i1 %615, label %616, label %.outer.backedge.2

; <label>:616:                                    ; preds = %.loopexit.2
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.2

; <label>:617:                                    ; preds = %584
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.2, i32 30)
  %618 = add nsw i32 %.7.2, 1
  br label %.outer.backedge.2

; <label>:619:                                    ; preds = %569
  %620 = load i8*, i8** %41, align 16
  %621 = call i32 @strcasecmp(i8* %620, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %622 = icmp ne i32 %621, 0
  br i1 %622, label %630, label %623

; <label>:623:                                    ; preds = %619
  %624 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %624, label %628, label %625

; <label>:625:                                    ; preds = %623
  %626 = load i8*, i8** %45, align 8
  %627 = call i32 @atoi(i8* %626) #8
  store i32 %627, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.2

; <label>:628:                                    ; preds = %623
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.2)
  %629 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:630:                                    ; preds = %619
  %631 = load i8*, i8** %43, align 16
  %632 = call i32 @strcasecmp(i8* %631, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %633 = icmp ne i32 %632, 0
  br i1 %633, label %653, label %634

; <label>:634:                                    ; preds = %630
  %635 = icmp ne i32 %.1.lcssa.lcssa.2, 4
  br i1 %635, label %651, label %636

; <label>:636:                                    ; preds = %634
  %637 = load i8*, i8** %46, align 8
  %638 = load i8*, i8** %47, align 16
  %639 = load i8*, i8** %48, align 8
  %640 = call i32 @atoi(i8* %639) #8
  %641 = call i32 @conv_scoped_conf(i8* %637, i8* %638, i32 %640)
  %642 = icmp ne i32 %641, 0
  %643 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %644 = load i8*, i8** %49, align 8
  %645 = load i8*, i8** %50, align 16
  %646 = load i8*, i8** %51, align 8
  br i1 %642, label %649, label %647

; <label>:647:                                    ; preds = %636
  %648 = call i32 @atoi(i8* %646) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %643, i8* %644, i8* %645, i32 %648)
  br label %.outer.backedge.2

; <label>:649:                                    ; preds = %636
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %643, i8* %644, i8* %645, i8* %646)
  %650 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:651:                                    ; preds = %634
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.2)
  %652 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:653:                                    ; preds = %630
  %654 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.2, i8* %654)
  %655 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

.outer.backedge.2:                                ; preds = %653, %651, %649, %647, %628, %625, %617, %616, %.loopexit.2, %567, %564, %556, %553, %545, %544, %536, %534, %533, %519, %516, %512, %507
  %.03.ph.be.2 = phi i32 [ %508, %507 ], [ %518, %516 ], [ %520, %519 ], [ %.03.ph.be.1, %512 ], [ %537, %536 ], [ %535, %534 ], [ %.03.ph.be.1, %533 ], [ %546, %545 ], [ %.03.ph.be.1, %544 ], [ %557, %556 ], [ %.03.ph.be.1, %553 ], [ %568, %567 ], [ %.03.ph.be.1, %564 ], [ %618, %617 ], [ %.7.2, %616 ], [ %.7.2, %.loopexit.2 ], [ %629, %628 ], [ %.03.ph.be.1, %625 ], [ %655, %653 ], [ %652, %651 ], [ %650, %649 ], [ %.03.ph.be.1, %647 ]
  call void @__loop_iteration_test___2()
  %656 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %657 = icmp ne i8* %656, null
  br i1 %657, label %.lr.ph.3, label %.outer._crit_edge.loopexit1

.lr.ph.3:                                         ; preds = %.outer.backedge.2
  call void @unroll_loop(i32 48)
  br label %658

; <label>:658:                                    ; preds = %692, %.lr.ph.3
  %.0712.3 = phi i32 [ %.lcssa.2, %.lr.ph.3 ], [ %659, %692 ]
  call void @unroll_loop(i32 44)
  %659 = add nsw i32 %.0712.3, 1
  %660 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %661 = icmp ne i8* %660, null
  br i1 %661, label %662, label %663

; <label>:662:                                    ; preds = %658
  store i8 0, i8* %660, align 1
  br label %663

; <label>:663:                                    ; preds = %662, %658
  %664 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %665 = icmp ne i8* %664, null
  br i1 %665, label %666, label %667

; <label>:666:                                    ; preds = %663
  store i8 0, i8* %664, align 1
  br label %667

; <label>:667:                                    ; preds = %666, %663
  %668 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %669 = icmp ne i8* %668, null
  br i1 %669, label %670, label %671

; <label>:670:                                    ; preds = %667
  store i8 0, i8* %668, align 1
  br label %671

; <label>:671:                                    ; preds = %670, %667
  %672 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %673 = icmp ne i8* %672, null
  br i1 %673, label %674, label %675

; <label>:674:                                    ; preds = %671
  store i8 0, i8* %672, align 1
  br label %675

; <label>:675:                                    ; preds = %674, %671
  %676 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %676, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %677 = load i8*, i8** %26, align 8
  %678 = icmp ne i8* %677, null
  %.14.3 = select i1 %678, i32 1, i32 0
  %679 = select i1 %678, i1 true, i1 false
  br i1 %679, label %.lr.ph6.preheader.3, label %._crit_edge.3

.lr.ph6.preheader.3:                              ; preds = %675
  br label %.lr.ph6.3

.lr.ph6.3:                                        ; preds = %.lr.ph6.3, %.lr.ph6.preheader.3
  %.15.3 = phi i32 [ %.1.3, %.lr.ph6.3 ], [ %.14.3, %.lr.ph6.preheader.3 ]
  %680 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %681 = sext i32 %.15.3 to i64
  %682 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %681
  store i8* %680, i8** %682, align 8
  call void @unroll_loop(i32 45)
  %683 = sext i32 %.15.3 to i64
  %684 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %683
  %685 = load i8*, i8** %684, align 8
  %686 = icmp ne i8* %685, null
  %687 = add nsw i32 %.15.3, 1
  %688 = icmp slt i32 %687, 30
  %.1.3 = select i1 %686, i32 %687, i32 %.15.3
  %689 = select i1 %686, i1 %688, i1 false
  br i1 %689, label %.lr.ph6.3, label %._crit_edge.loopexit.3

._crit_edge.loopexit.3:                           ; preds = %.lr.ph6.3
  %.1.lcssa.ph.3 = phi i32 [ %.1.3, %.lr.ph6.3 ]
  br label %._crit_edge.3

._crit_edge.3:                                    ; preds = %._crit_edge.loopexit.3, %675
  %.1.lcssa.3 = phi i32 [ %.14.3, %675 ], [ %.1.lcssa.ph.3, %._crit_edge.loopexit.3 ]
  %690 = load i8*, i8** %27, align 16
  %691 = icmp ne i8* %690, null
  br i1 %691, label %695, label %692

; <label>:692:                                    ; preds = %._crit_edge.3
  %693 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %694 = icmp ne i8* %693, null
  br i1 %694, label %658, label %.outer._crit_edge.loopexit.loopexit3

; <label>:695:                                    ; preds = %._crit_edge.3
  %.1.lcssa.lcssa.3 = phi i32 [ %.1.lcssa.3, %._crit_edge.3 ]
  %.lcssa.3 = phi i32 [ %659, %._crit_edge.3 ]
  %696 = load i8*, i8** %28, align 16
  %697 = call i32 @strcasecmp(i8* %696, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %698 = icmp ne i32 %697, 0
  br i1 %698, label %724, label %699

; <label>:699:                                    ; preds = %695
  %700 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  %701 = icmp sgt i32 %.1.lcssa.lcssa.3, 4
  %or.cond.3 = or i1 %700, %701
  br i1 %or.cond.3, label %722, label %702

; <label>:702:                                    ; preds = %699
  %703 = icmp sgt i32 %.1.lcssa.lcssa.3, 2
  br i1 %703, label %704, label %715

; <label>:704:                                    ; preds = %702
  %705 = load i8*, i8** %34, align 8
  %706 = call i32 @strcasecmp(i8* %705, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %707 = icmp ne i32 %706, 0
  br i1 %707, label %719, label %708

; <label>:708:                                    ; preds = %704
  %709 = icmp sge i32 %.1.lcssa.lcssa.3, 3
  br i1 %709, label %712, label %710

; <label>:710:                                    ; preds = %708
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.3)
  %711 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:712:                                    ; preds = %708
  %713 = load i8*, i8** %40, align 8
  %714 = call i32 @atoi(i8* %713) #8
  br label %715

; <label>:715:                                    ; preds = %712, %702
  %.08.3 = phi i32 [ %714, %712 ], [ 53, %702 ]
  %716 = load i8*, i8** %35, align 8
  %717 = call i32 @fwd_add(i8* %716, i32 %.08.3)
  %718 = icmp eq i32 %717, -1
  br i1 %718, label %.loopexit1.loopexit, label %.outer.backedge.3

; <label>:719:                                    ; preds = %704
  %720 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.3, i8* %720)
  %721 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:722:                                    ; preds = %699
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.3)
  %723 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:724:                                    ; preds = %695
  %725 = load i8*, i8** %29, align 16
  %726 = call i32 @strcasecmp(i8* %725, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %727 = icmp ne i32 %726, 0
  br i1 %727, label %741, label %728

; <label>:728:                                    ; preds = %724
  %729 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %729, label %739, label %730

; <label>:730:                                    ; preds = %728
  %731 = load i8*, i8** %32, align 8
  %732 = call i32 @conv_trick_conf(i8* %731)
  %733 = icmp ne i32 %732, 0
  %734 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %735 = load i8*, i8** %33, align 8
  br i1 %733, label %737, label %736

; <label>:736:                                    ; preds = %730
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %734, i8* %735)
  br label %.outer.backedge.3

; <label>:737:                                    ; preds = %730
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %734, i8* %735)
  %738 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:739:                                    ; preds = %728
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.3)
  %740 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:741:                                    ; preds = %724
  %742 = load i8*, i8** %30, align 16
  %743 = call i32 @strcasecmp(i8* %742, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %744 = icmp ne i32 %743, 0
  br i1 %744, label %750, label %745

; <label>:745:                                    ; preds = %741
  %746 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %746, label %748, label %747

; <label>:747:                                    ; preds = %745
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.3

; <label>:748:                                    ; preds = %745
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.3)
  %749 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:750:                                    ; preds = %741
  %751 = load i8*, i8** %31, align 16
  %752 = call i32 @strcasecmp(i8* %751, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %753 = icmp ne i32 %752, 0
  br i1 %753, label %761, label %754

; <label>:754:                                    ; preds = %750
  %755 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %755, label %759, label %756

; <label>:756:                                    ; preds = %754
  %757 = load i8*, i8** %39, align 8
  %758 = call i32 @atoi(i8* %757) #8
  store i32 %758, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.3

; <label>:759:                                    ; preds = %754
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.3)
  %760 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:761:                                    ; preds = %750
  %762 = load i8*, i8** %36, align 16
  %763 = call i32 @strcasecmp(i8* %762, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %764 = icmp ne i32 %763, 0
  br i1 %764, label %772, label %765

; <label>:765:                                    ; preds = %761
  %766 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %766, label %770, label %767

; <label>:767:                                    ; preds = %765
  %768 = load i8*, i8** %42, align 8
  %769 = call noalias i8* @strdup(i8* %768) #9, !track !108
  store i8* %769, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.3

; <label>:770:                                    ; preds = %765
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.3)
  %771 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:772:                                    ; preds = %761
  %773 = load i8*, i8** %38, align 16
  %774 = call i32 @strcasecmp(i8* %773, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %775 = icmp ne i32 %774, 0
  br i1 %775, label %822, label %776

; <label>:776:                                    ; preds = %772
  %777 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  br i1 %777, label %778, label %780

; <label>:778:                                    ; preds = %776
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.3)
  %779 = add nsw i32 %.03.ph.be.2, 1
  br label %780

; <label>:780:                                    ; preds = %778, %776
  %.7.3 = phi i32 [ %779, %778 ], [ %.03.ph.be.2, %776 ]
  br label %781

; <label>:781:                                    ; preds = %781, %780
  %lsr.iv.3 = phi i64 [ %lsr.iv.next.3, %781 ], [ -1, %780 ]
  %782 = add i64 %lsr.iv.3, 1
  call void @unroll_loop(i32 46)
  %783 = shl i64 %lsr.iv.3, 3
  %uglygep.3 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %783
  %uglygep3.3 = bitcast i8* %uglygep.3 to i8**
  %scevgep.3 = getelementptr i8*, i8** %uglygep3.3, i64 111
  %784 = load i8*, i8** %scevgep.3, align 8
  %785 = icmp ne i8* %784, null
  %786 = icmp ult i64 %782, 30
  %spec.select.3 = select i1 %785, i1 %786, i1 false
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %spec.select.3, label %781, label %787

; <label>:787:                                    ; preds = %781
  %.01.lcssa.wide.3 = phi i64 [ %lsr.iv.next.3, %781 ]
  %788 = trunc i64 %.01.lcssa.wide.3 to i32
  %789 = add nsw i32 %788, %.1.lcssa.lcssa.3
  %790 = sub nsw i32 %789, 1
  %791 = icmp sgt i32 %790, 30
  br i1 %791, label %820, label %792

; <label>:792:                                    ; preds = %787
  %793 = sub nsw i32 %.1.lcssa.lcssa.3, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.3, i32 %793)
  %794 = add nsw i32 %.1.lcssa.lcssa.3, -1
  %795 = add nsw i32 %788, %.1.lcssa.lcssa.3
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %796
  store i8* null, i8** %797, align 8
  %798 = icmp ne i32 %794, 0
  br i1 %798, label %.lr.ph16.3, label %.loopexit.3

.lr.ph16.3:                                       ; preds = %792
  %799 = add i32 %.1.lcssa.lcssa.3, -1
  %800 = sext i32 %799 to i64
  %801 = sext i32 %788 to i64
  %scevgep4.3 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %800
  %802 = shl i64 %800, 1
  %803 = shl i64 %801, 1
  %804 = add i64 %802, %803
  %scevgep9.3 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %804
  %805 = sub i32 1, %.1.lcssa.lcssa.3
  %806 = zext i32 %805 to i64
  br label %807

; <label>:807:                                    ; preds = %812, %.lr.ph16.3
  %lsr.iv5.3 = phi i64 [ 0, %.lr.ph16.3 ], [ %lsr.iv.next6.3, %812 ]
  call void @unroll_loop(i32 47)
  %scevgep7.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %808 = load i8*, i8** %scevgep7.3, align 8
  %809 = call i32 @strcmp(i8* %808, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %810 = icmp ne i32 %809, 0
  br i1 %810, label %812, label %811

; <label>:811:                                    ; preds = %807
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.3

; <label>:812:                                    ; preds = %807
  %scevgep8.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %813 = load i8*, i8** %scevgep8.3, align 8
  %814 = call noalias i8* @strdup(i8* %813) #9, !track !109
  %815 = shl i64 %lsr.iv5.3, 1
  %scevgep10.3 = getelementptr i32, i32* %scevgep9.3, i64 %815
  %scevgep1011.3 = bitcast i32* %scevgep10.3 to i8**
  store i8* %814, i8** %scevgep1011.3, align 8
  %lsr.iv.next6.3 = add nsw i64 %lsr.iv5.3, -1
  %tmp.3 = trunc i64 %lsr.iv.next6.3 to i32
  %816 = icmp ne i32 %805, %tmp.3
  br i1 %816, label %807, label %.loopexit.loopexit.3

.loopexit.loopexit.3:                             ; preds = %812
  br label %.loopexit.3

.loopexit.3:                                      ; preds = %.loopexit.loopexit.3, %811, %792
  %817 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %818 = icmp ne i8* %817, null
  br i1 %818, label %819, label %.outer.backedge.3

; <label>:819:                                    ; preds = %.loopexit.3
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.3

; <label>:820:                                    ; preds = %787
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.3, i32 30)
  %821 = add nsw i32 %.7.3, 1
  br label %.outer.backedge.3

; <label>:822:                                    ; preds = %772
  %823 = load i8*, i8** %41, align 16
  %824 = call i32 @strcasecmp(i8* %823, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %825 = icmp ne i32 %824, 0
  br i1 %825, label %833, label %826

; <label>:826:                                    ; preds = %822
  %827 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %827, label %831, label %828

; <label>:828:                                    ; preds = %826
  %829 = load i8*, i8** %45, align 8
  %830 = call i32 @atoi(i8* %829) #8
  store i32 %830, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.3

; <label>:831:                                    ; preds = %826
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.3)
  %832 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:833:                                    ; preds = %822
  %834 = load i8*, i8** %43, align 16
  %835 = call i32 @strcasecmp(i8* %834, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %836 = icmp ne i32 %835, 0
  br i1 %836, label %856, label %837

; <label>:837:                                    ; preds = %833
  %838 = icmp ne i32 %.1.lcssa.lcssa.3, 4
  br i1 %838, label %854, label %839

; <label>:839:                                    ; preds = %837
  %840 = load i8*, i8** %46, align 8
  %841 = load i8*, i8** %47, align 16
  %842 = load i8*, i8** %48, align 8
  %843 = call i32 @atoi(i8* %842) #8
  %844 = call i32 @conv_scoped_conf(i8* %840, i8* %841, i32 %843)
  %845 = icmp ne i32 %844, 0
  %846 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %847 = load i8*, i8** %49, align 8
  %848 = load i8*, i8** %50, align 16
  %849 = load i8*, i8** %51, align 8
  br i1 %845, label %852, label %850

; <label>:850:                                    ; preds = %839
  %851 = call i32 @atoi(i8* %849) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %846, i8* %847, i8* %848, i32 %851)
  br label %.outer.backedge.3

; <label>:852:                                    ; preds = %839
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %846, i8* %847, i8* %848, i8* %849)
  %853 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:854:                                    ; preds = %837
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.3)
  %855 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:856:                                    ; preds = %833
  %857 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.3, i8* %857)
  %858 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

.outer.backedge.3:                                ; preds = %856, %854, %852, %850, %831, %828, %820, %819, %.loopexit.3, %770, %767, %759, %756, %748, %747, %739, %737, %736, %722, %719, %715, %710
  %.03.ph.be.3 = phi i32 [ %711, %710 ], [ %721, %719 ], [ %723, %722 ], [ %.03.ph.be.2, %715 ], [ %740, %739 ], [ %738, %737 ], [ %.03.ph.be.2, %736 ], [ %749, %748 ], [ %.03.ph.be.2, %747 ], [ %760, %759 ], [ %.03.ph.be.2, %756 ], [ %771, %770 ], [ %.03.ph.be.2, %767 ], [ %821, %820 ], [ %.7.3, %819 ], [ %.7.3, %.loopexit.3 ], [ %832, %831 ], [ %.03.ph.be.2, %828 ], [ %858, %856 ], [ %855, %854 ], [ %853, %852 ], [ %.03.ph.be.2, %850 ]
  call void @__loop_iteration_test___2()
  %859 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %860 = icmp ne i8* %859, null
  br i1 %860, label %.lr.ph.4, label %.outer._crit_edge.loopexit1

.lr.ph.4:                                         ; preds = %.outer.backedge.3
  call void @unroll_loop(i32 48)
  br label %861

; <label>:861:                                    ; preds = %895, %.lr.ph.4
  %.0712.4 = phi i32 [ %.lcssa.3, %.lr.ph.4 ], [ %862, %895 ]
  call void @unroll_loop(i32 44)
  %862 = add nsw i32 %.0712.4, 1
  %863 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %864 = icmp ne i8* %863, null
  br i1 %864, label %865, label %866

; <label>:865:                                    ; preds = %861
  store i8 0, i8* %863, align 1
  br label %866

; <label>:866:                                    ; preds = %865, %861
  %867 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %868 = icmp ne i8* %867, null
  br i1 %868, label %869, label %870

; <label>:869:                                    ; preds = %866
  store i8 0, i8* %867, align 1
  br label %870

; <label>:870:                                    ; preds = %869, %866
  %871 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %872 = icmp ne i8* %871, null
  br i1 %872, label %873, label %874

; <label>:873:                                    ; preds = %870
  store i8 0, i8* %871, align 1
  br label %874

; <label>:874:                                    ; preds = %873, %870
  %875 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %876 = icmp ne i8* %875, null
  br i1 %876, label %877, label %878

; <label>:877:                                    ; preds = %874
  store i8 0, i8* %875, align 1
  br label %878

; <label>:878:                                    ; preds = %877, %874
  %879 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %879, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %880 = load i8*, i8** %26, align 8
  %881 = icmp ne i8* %880, null
  %.14.4 = select i1 %881, i32 1, i32 0
  %882 = select i1 %881, i1 true, i1 false
  br i1 %882, label %.lr.ph6.preheader.4, label %._crit_edge.4

.lr.ph6.preheader.4:                              ; preds = %878
  br label %.lr.ph6.4

.lr.ph6.4:                                        ; preds = %.lr.ph6.4, %.lr.ph6.preheader.4
  %.15.4 = phi i32 [ %.1.4, %.lr.ph6.4 ], [ %.14.4, %.lr.ph6.preheader.4 ]
  %883 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %884 = sext i32 %.15.4 to i64
  %885 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %884
  store i8* %883, i8** %885, align 8
  call void @unroll_loop(i32 45)
  %886 = sext i32 %.15.4 to i64
  %887 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %886
  %888 = load i8*, i8** %887, align 8
  %889 = icmp ne i8* %888, null
  %890 = add nsw i32 %.15.4, 1
  %891 = icmp slt i32 %890, 30
  %.1.4 = select i1 %889, i32 %890, i32 %.15.4
  %892 = select i1 %889, i1 %891, i1 false
  br i1 %892, label %.lr.ph6.4, label %._crit_edge.loopexit.4

._crit_edge.loopexit.4:                           ; preds = %.lr.ph6.4
  %.1.lcssa.ph.4 = phi i32 [ %.1.4, %.lr.ph6.4 ]
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %._crit_edge.loopexit.4, %878
  %.1.lcssa.4 = phi i32 [ %.14.4, %878 ], [ %.1.lcssa.ph.4, %._crit_edge.loopexit.4 ]
  %893 = load i8*, i8** %27, align 16
  %894 = icmp ne i8* %893, null
  br i1 %894, label %898, label %895

; <label>:895:                                    ; preds = %._crit_edge.4
  %896 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %897 = icmp ne i8* %896, null
  br i1 %897, label %861, label %.outer._crit_edge.loopexit.loopexit4

; <label>:898:                                    ; preds = %._crit_edge.4
  %.1.lcssa.lcssa.4 = phi i32 [ %.1.lcssa.4, %._crit_edge.4 ]
  %.lcssa.4 = phi i32 [ %862, %._crit_edge.4 ]
  %899 = load i8*, i8** %28, align 16
  %900 = call i32 @strcasecmp(i8* %899, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %901 = icmp ne i32 %900, 0
  br i1 %901, label %927, label %902

; <label>:902:                                    ; preds = %898
  %903 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  %904 = icmp sgt i32 %.1.lcssa.lcssa.4, 4
  %or.cond.4 = or i1 %903, %904
  br i1 %or.cond.4, label %925, label %905

; <label>:905:                                    ; preds = %902
  %906 = icmp sgt i32 %.1.lcssa.lcssa.4, 2
  br i1 %906, label %907, label %918

; <label>:907:                                    ; preds = %905
  %908 = load i8*, i8** %34, align 8
  %909 = call i32 @strcasecmp(i8* %908, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %910 = icmp ne i32 %909, 0
  br i1 %910, label %922, label %911

; <label>:911:                                    ; preds = %907
  %912 = icmp sge i32 %.1.lcssa.lcssa.4, 3
  br i1 %912, label %915, label %913

; <label>:913:                                    ; preds = %911
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.4)
  %914 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:915:                                    ; preds = %911
  %916 = load i8*, i8** %40, align 8
  %917 = call i32 @atoi(i8* %916) #8
  br label %918

; <label>:918:                                    ; preds = %915, %905
  %.08.4 = phi i32 [ %917, %915 ], [ 53, %905 ]
  %919 = load i8*, i8** %35, align 8
  %920 = call i32 @fwd_add(i8* %919, i32 %.08.4)
  %921 = icmp eq i32 %920, -1
  br i1 %921, label %.loopexit1.loopexit, label %.outer.backedge.4

; <label>:922:                                    ; preds = %907
  %923 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.4, i8* %923)
  %924 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:925:                                    ; preds = %902
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.4)
  %926 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:927:                                    ; preds = %898
  %928 = load i8*, i8** %29, align 16
  %929 = call i32 @strcasecmp(i8* %928, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %930 = icmp ne i32 %929, 0
  br i1 %930, label %944, label %931

; <label>:931:                                    ; preds = %927
  %932 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %932, label %942, label %933

; <label>:933:                                    ; preds = %931
  %934 = load i8*, i8** %32, align 8
  %935 = call i32 @conv_trick_conf(i8* %934)
  %936 = icmp ne i32 %935, 0
  %937 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %938 = load i8*, i8** %33, align 8
  br i1 %936, label %940, label %939

; <label>:939:                                    ; preds = %933
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %937, i8* %938)
  br label %.outer.backedge.4

; <label>:940:                                    ; preds = %933
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %937, i8* %938)
  %941 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:942:                                    ; preds = %931
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.4)
  %943 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:944:                                    ; preds = %927
  %945 = load i8*, i8** %30, align 16
  %946 = call i32 @strcasecmp(i8* %945, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %947 = icmp ne i32 %946, 0
  br i1 %947, label %953, label %948

; <label>:948:                                    ; preds = %944
  %949 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %949, label %951, label %950

; <label>:950:                                    ; preds = %948
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.4

; <label>:951:                                    ; preds = %948
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.4)
  %952 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:953:                                    ; preds = %944
  %954 = load i8*, i8** %31, align 16
  %955 = call i32 @strcasecmp(i8* %954, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %956 = icmp ne i32 %955, 0
  br i1 %956, label %964, label %957

; <label>:957:                                    ; preds = %953
  %958 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %958, label %962, label %959

; <label>:959:                                    ; preds = %957
  %960 = load i8*, i8** %39, align 8
  %961 = call i32 @atoi(i8* %960) #8
  store i32 %961, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.4

; <label>:962:                                    ; preds = %957
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.4)
  %963 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:964:                                    ; preds = %953
  %965 = load i8*, i8** %36, align 16
  %966 = call i32 @strcasecmp(i8* %965, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %967 = icmp ne i32 %966, 0
  br i1 %967, label %975, label %968

; <label>:968:                                    ; preds = %964
  %969 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %969, label %973, label %970

; <label>:970:                                    ; preds = %968
  %971 = load i8*, i8** %42, align 8
  %972 = call noalias i8* @strdup(i8* %971) #9, !track !108
  store i8* %972, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.4

; <label>:973:                                    ; preds = %968
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.4)
  %974 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:975:                                    ; preds = %964
  %976 = load i8*, i8** %38, align 16
  %977 = call i32 @strcasecmp(i8* %976, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %978 = icmp ne i32 %977, 0
  br i1 %978, label %1025, label %979

; <label>:979:                                    ; preds = %975
  %980 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  br i1 %980, label %981, label %983

; <label>:981:                                    ; preds = %979
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.4)
  %982 = add nsw i32 %.03.ph.be.3, 1
  br label %983

; <label>:983:                                    ; preds = %981, %979
  %.7.4 = phi i32 [ %982, %981 ], [ %.03.ph.be.3, %979 ]
  br label %984

; <label>:984:                                    ; preds = %984, %983
  %lsr.iv.4 = phi i64 [ %lsr.iv.next.4, %984 ], [ -1, %983 ]
  %985 = add i64 %lsr.iv.4, 1
  call void @unroll_loop(i32 46)
  %986 = shl i64 %lsr.iv.4, 3
  %uglygep.4 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %986
  %uglygep3.4 = bitcast i8* %uglygep.4 to i8**
  %scevgep.4 = getelementptr i8*, i8** %uglygep3.4, i64 111
  %987 = load i8*, i8** %scevgep.4, align 8
  %988 = icmp ne i8* %987, null
  %989 = icmp ult i64 %985, 30
  %spec.select.4 = select i1 %988, i1 %989, i1 false
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %spec.select.4, label %984, label %990

; <label>:990:                                    ; preds = %984
  %.01.lcssa.wide.4 = phi i64 [ %lsr.iv.next.4, %984 ]
  %991 = trunc i64 %.01.lcssa.wide.4 to i32
  %992 = add nsw i32 %991, %.1.lcssa.lcssa.4
  %993 = sub nsw i32 %992, 1
  %994 = icmp sgt i32 %993, 30
  br i1 %994, label %1023, label %995

; <label>:995:                                    ; preds = %990
  %996 = sub nsw i32 %.1.lcssa.lcssa.4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.4, i32 %996)
  %997 = add nsw i32 %.1.lcssa.lcssa.4, -1
  %998 = add nsw i32 %991, %.1.lcssa.lcssa.4
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %999
  store i8* null, i8** %1000, align 8
  %1001 = icmp ne i32 %997, 0
  br i1 %1001, label %.lr.ph16.4, label %.loopexit.4

.lr.ph16.4:                                       ; preds = %995
  %1002 = add i32 %.1.lcssa.lcssa.4, -1
  %1003 = sext i32 %1002 to i64
  %1004 = sext i32 %991 to i64
  %scevgep4.4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1003
  %1005 = shl i64 %1003, 1
  %1006 = shl i64 %1004, 1
  %1007 = add i64 %1005, %1006
  %scevgep9.4 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1007
  %1008 = sub i32 1, %.1.lcssa.lcssa.4
  %1009 = zext i32 %1008 to i64
  br label %1010

; <label>:1010:                                   ; preds = %1015, %.lr.ph16.4
  %lsr.iv5.4 = phi i64 [ 0, %.lr.ph16.4 ], [ %lsr.iv.next6.4, %1015 ]
  call void @unroll_loop(i32 47)
  %scevgep7.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1011 = load i8*, i8** %scevgep7.4, align 8
  %1012 = call i32 @strcmp(i8* %1011, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1013 = icmp ne i32 %1012, 0
  br i1 %1013, label %1015, label %1014

; <label>:1014:                                   ; preds = %1010
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.4

; <label>:1015:                                   ; preds = %1010
  %scevgep8.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1016 = load i8*, i8** %scevgep8.4, align 8
  %1017 = call noalias i8* @strdup(i8* %1016) #9, !track !109
  %1018 = shl i64 %lsr.iv5.4, 1
  %scevgep10.4 = getelementptr i32, i32* %scevgep9.4, i64 %1018
  %scevgep1011.4 = bitcast i32* %scevgep10.4 to i8**
  store i8* %1017, i8** %scevgep1011.4, align 8
  %lsr.iv.next6.4 = add nsw i64 %lsr.iv5.4, -1
  %tmp.4 = trunc i64 %lsr.iv.next6.4 to i32
  %1019 = icmp ne i32 %1008, %tmp.4
  br i1 %1019, label %1010, label %.loopexit.loopexit.4

.loopexit.loopexit.4:                             ; preds = %1015
  br label %.loopexit.4

.loopexit.4:                                      ; preds = %.loopexit.loopexit.4, %1014, %995
  %1020 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1021 = icmp ne i8* %1020, null
  br i1 %1021, label %1022, label %.outer.backedge.4

; <label>:1022:                                   ; preds = %.loopexit.4
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.4

; <label>:1023:                                   ; preds = %990
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.4, i32 30)
  %1024 = add nsw i32 %.7.4, 1
  br label %.outer.backedge.4

; <label>:1025:                                   ; preds = %975
  %1026 = load i8*, i8** %41, align 16
  %1027 = call i32 @strcasecmp(i8* %1026, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1028 = icmp ne i32 %1027, 0
  br i1 %1028, label %1036, label %1029

; <label>:1029:                                   ; preds = %1025
  %1030 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %1030, label %1034, label %1031

; <label>:1031:                                   ; preds = %1029
  %1032 = load i8*, i8** %45, align 8
  %1033 = call i32 @atoi(i8* %1032) #8
  store i32 %1033, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.4

; <label>:1034:                                   ; preds = %1029
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.4)
  %1035 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1036:                                   ; preds = %1025
  %1037 = load i8*, i8** %43, align 16
  %1038 = call i32 @strcasecmp(i8* %1037, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1039 = icmp ne i32 %1038, 0
  br i1 %1039, label %1059, label %1040

; <label>:1040:                                   ; preds = %1036
  %1041 = icmp ne i32 %.1.lcssa.lcssa.4, 4
  br i1 %1041, label %1057, label %1042

; <label>:1042:                                   ; preds = %1040
  %1043 = load i8*, i8** %46, align 8
  %1044 = load i8*, i8** %47, align 16
  %1045 = load i8*, i8** %48, align 8
  %1046 = call i32 @atoi(i8* %1045) #8
  %1047 = call i32 @conv_scoped_conf(i8* %1043, i8* %1044, i32 %1046)
  %1048 = icmp ne i32 %1047, 0
  %1049 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1050 = load i8*, i8** %49, align 8
  %1051 = load i8*, i8** %50, align 16
  %1052 = load i8*, i8** %51, align 8
  br i1 %1048, label %1055, label %1053

; <label>:1053:                                   ; preds = %1042
  %1054 = call i32 @atoi(i8* %1052) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1049, i8* %1050, i8* %1051, i32 %1054)
  br label %.outer.backedge.4

; <label>:1055:                                   ; preds = %1042
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1049, i8* %1050, i8* %1051, i8* %1052)
  %1056 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1057:                                   ; preds = %1040
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.4)
  %1058 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1059:                                   ; preds = %1036
  %1060 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.4, i8* %1060)
  %1061 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

.outer.backedge.4:                                ; preds = %1059, %1057, %1055, %1053, %1034, %1031, %1023, %1022, %.loopexit.4, %973, %970, %962, %959, %951, %950, %942, %940, %939, %925, %922, %918, %913
  %.03.ph.be.4 = phi i32 [ %914, %913 ], [ %924, %922 ], [ %926, %925 ], [ %.03.ph.be.3, %918 ], [ %943, %942 ], [ %941, %940 ], [ %.03.ph.be.3, %939 ], [ %952, %951 ], [ %.03.ph.be.3, %950 ], [ %963, %962 ], [ %.03.ph.be.3, %959 ], [ %974, %973 ], [ %.03.ph.be.3, %970 ], [ %1024, %1023 ], [ %.7.4, %1022 ], [ %.7.4, %.loopexit.4 ], [ %1035, %1034 ], [ %.03.ph.be.3, %1031 ], [ %1061, %1059 ], [ %1058, %1057 ], [ %1056, %1055 ], [ %.03.ph.be.3, %1053 ]
  call void @__loop_iteration_test___2()
  %1062 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1063 = icmp ne i8* %1062, null
  br i1 %1063, label %.lr.ph.5, label %.outer._crit_edge.loopexit1

.lr.ph.5:                                         ; preds = %.outer.backedge.4
  call void @unroll_loop(i32 48)
  br label %1064

; <label>:1064:                                   ; preds = %1098, %.lr.ph.5
  %.0712.5 = phi i32 [ %.lcssa.4, %.lr.ph.5 ], [ %1065, %1098 ]
  call void @unroll_loop(i32 44)
  %1065 = add nsw i32 %.0712.5, 1
  %1066 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1067 = icmp ne i8* %1066, null
  br i1 %1067, label %1068, label %1069

; <label>:1068:                                   ; preds = %1064
  store i8 0, i8* %1066, align 1
  br label %1069

; <label>:1069:                                   ; preds = %1068, %1064
  %1070 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1071 = icmp ne i8* %1070, null
  br i1 %1071, label %1072, label %1073

; <label>:1072:                                   ; preds = %1069
  store i8 0, i8* %1070, align 1
  br label %1073

; <label>:1073:                                   ; preds = %1072, %1069
  %1074 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1075 = icmp ne i8* %1074, null
  br i1 %1075, label %1076, label %1077

; <label>:1076:                                   ; preds = %1073
  store i8 0, i8* %1074, align 1
  br label %1077

; <label>:1077:                                   ; preds = %1076, %1073
  %1078 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1079 = icmp ne i8* %1078, null
  br i1 %1079, label %1080, label %1081

; <label>:1080:                                   ; preds = %1077
  store i8 0, i8* %1078, align 1
  br label %1081

; <label>:1081:                                   ; preds = %1080, %1077
  %1082 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1082, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1083 = load i8*, i8** %26, align 8
  %1084 = icmp ne i8* %1083, null
  %.14.5 = select i1 %1084, i32 1, i32 0
  %1085 = select i1 %1084, i1 true, i1 false
  br i1 %1085, label %.lr.ph6.preheader.5, label %._crit_edge.5

.lr.ph6.preheader.5:                              ; preds = %1081
  br label %.lr.ph6.5

.lr.ph6.5:                                        ; preds = %.lr.ph6.5, %.lr.ph6.preheader.5
  %.15.5 = phi i32 [ %.1.5, %.lr.ph6.5 ], [ %.14.5, %.lr.ph6.preheader.5 ]
  %1086 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1087 = sext i32 %.15.5 to i64
  %1088 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1087
  store i8* %1086, i8** %1088, align 8
  call void @unroll_loop(i32 45)
  %1089 = sext i32 %.15.5 to i64
  %1090 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1089
  %1091 = load i8*, i8** %1090, align 8
  %1092 = icmp ne i8* %1091, null
  %1093 = add nsw i32 %.15.5, 1
  %1094 = icmp slt i32 %1093, 30
  %.1.5 = select i1 %1092, i32 %1093, i32 %.15.5
  %1095 = select i1 %1092, i1 %1094, i1 false
  br i1 %1095, label %.lr.ph6.5, label %._crit_edge.loopexit.5

._crit_edge.loopexit.5:                           ; preds = %.lr.ph6.5
  %.1.lcssa.ph.5 = phi i32 [ %.1.5, %.lr.ph6.5 ]
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.loopexit.5, %1081
  %.1.lcssa.5 = phi i32 [ %.14.5, %1081 ], [ %.1.lcssa.ph.5, %._crit_edge.loopexit.5 ]
  %1096 = load i8*, i8** %27, align 16
  %1097 = icmp ne i8* %1096, null
  br i1 %1097, label %1101, label %1098

; <label>:1098:                                   ; preds = %._crit_edge.5
  %1099 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1100 = icmp ne i8* %1099, null
  br i1 %1100, label %1064, label %.outer._crit_edge.loopexit.loopexit5

; <label>:1101:                                   ; preds = %._crit_edge.5
  %.1.lcssa.lcssa.5 = phi i32 [ %.1.lcssa.5, %._crit_edge.5 ]
  %.lcssa.5 = phi i32 [ %1065, %._crit_edge.5 ]
  %1102 = load i8*, i8** %28, align 16
  %1103 = call i32 @strcasecmp(i8* %1102, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1104 = icmp ne i32 %1103, 0
  br i1 %1104, label %1130, label %1105

; <label>:1105:                                   ; preds = %1101
  %1106 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  %1107 = icmp sgt i32 %.1.lcssa.lcssa.5, 4
  %or.cond.5 = or i1 %1106, %1107
  br i1 %or.cond.5, label %1128, label %1108

; <label>:1108:                                   ; preds = %1105
  %1109 = icmp sgt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1109, label %1110, label %1121

; <label>:1110:                                   ; preds = %1108
  %1111 = load i8*, i8** %34, align 8
  %1112 = call i32 @strcasecmp(i8* %1111, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1113 = icmp ne i32 %1112, 0
  br i1 %1113, label %1125, label %1114

; <label>:1114:                                   ; preds = %1110
  %1115 = icmp sge i32 %.1.lcssa.lcssa.5, 3
  br i1 %1115, label %1118, label %1116

; <label>:1116:                                   ; preds = %1114
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.5)
  %1117 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1118:                                   ; preds = %1114
  %1119 = load i8*, i8** %40, align 8
  %1120 = call i32 @atoi(i8* %1119) #8
  br label %1121

; <label>:1121:                                   ; preds = %1118, %1108
  %.08.5 = phi i32 [ %1120, %1118 ], [ 53, %1108 ]
  %1122 = load i8*, i8** %35, align 8
  %1123 = call i32 @fwd_add(i8* %1122, i32 %.08.5)
  %1124 = icmp eq i32 %1123, -1
  br i1 %1124, label %.loopexit1.loopexit, label %.outer.backedge.5

; <label>:1125:                                   ; preds = %1110
  %1126 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.5, i8* %1126)
  %1127 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1128:                                   ; preds = %1105
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.5)
  %1129 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1130:                                   ; preds = %1101
  %1131 = load i8*, i8** %29, align 16
  %1132 = call i32 @strcasecmp(i8* %1131, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1133 = icmp ne i32 %1132, 0
  br i1 %1133, label %1147, label %1134

; <label>:1134:                                   ; preds = %1130
  %1135 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1135, label %1145, label %1136

; <label>:1136:                                   ; preds = %1134
  %1137 = load i8*, i8** %32, align 8
  %1138 = call i32 @conv_trick_conf(i8* %1137)
  %1139 = icmp ne i32 %1138, 0
  %1140 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1141 = load i8*, i8** %33, align 8
  br i1 %1139, label %1143, label %1142

; <label>:1142:                                   ; preds = %1136
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1140, i8* %1141)
  br label %.outer.backedge.5

; <label>:1143:                                   ; preds = %1136
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1140, i8* %1141)
  %1144 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1145:                                   ; preds = %1134
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.5)
  %1146 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1147:                                   ; preds = %1130
  %1148 = load i8*, i8** %30, align 16
  %1149 = call i32 @strcasecmp(i8* %1148, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1150 = icmp ne i32 %1149, 0
  br i1 %1150, label %1156, label %1151

; <label>:1151:                                   ; preds = %1147
  %1152 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1152, label %1154, label %1153

; <label>:1153:                                   ; preds = %1151
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.5

; <label>:1154:                                   ; preds = %1151
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.5)
  %1155 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1156:                                   ; preds = %1147
  %1157 = load i8*, i8** %31, align 16
  %1158 = call i32 @strcasecmp(i8* %1157, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1159 = icmp ne i32 %1158, 0
  br i1 %1159, label %1167, label %1160

; <label>:1160:                                   ; preds = %1156
  %1161 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1161, label %1165, label %1162

; <label>:1162:                                   ; preds = %1160
  %1163 = load i8*, i8** %39, align 8
  %1164 = call i32 @atoi(i8* %1163) #8
  store i32 %1164, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.5

; <label>:1165:                                   ; preds = %1160
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.5)
  %1166 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1167:                                   ; preds = %1156
  %1168 = load i8*, i8** %36, align 16
  %1169 = call i32 @strcasecmp(i8* %1168, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1170 = icmp ne i32 %1169, 0
  br i1 %1170, label %1178, label %1171

; <label>:1171:                                   ; preds = %1167
  %1172 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1172, label %1176, label %1173

; <label>:1173:                                   ; preds = %1171
  %1174 = load i8*, i8** %42, align 8
  %1175 = call noalias i8* @strdup(i8* %1174) #9, !track !108
  store i8* %1175, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.5

; <label>:1176:                                   ; preds = %1171
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.5)
  %1177 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1178:                                   ; preds = %1167
  %1179 = load i8*, i8** %38, align 16
  %1180 = call i32 @strcasecmp(i8* %1179, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1181 = icmp ne i32 %1180, 0
  br i1 %1181, label %1228, label %1182

; <label>:1182:                                   ; preds = %1178
  %1183 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1183, label %1184, label %1186

; <label>:1184:                                   ; preds = %1182
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.5)
  %1185 = add nsw i32 %.03.ph.be.4, 1
  br label %1186

; <label>:1186:                                   ; preds = %1184, %1182
  %.7.5 = phi i32 [ %1185, %1184 ], [ %.03.ph.be.4, %1182 ]
  br label %1187

; <label>:1187:                                   ; preds = %1187, %1186
  %lsr.iv.5 = phi i64 [ %lsr.iv.next.5, %1187 ], [ -1, %1186 ]
  %1188 = add i64 %lsr.iv.5, 1
  call void @unroll_loop(i32 46)
  %1189 = shl i64 %lsr.iv.5, 3
  %uglygep.5 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1189
  %uglygep3.5 = bitcast i8* %uglygep.5 to i8**
  %scevgep.5 = getelementptr i8*, i8** %uglygep3.5, i64 111
  %1190 = load i8*, i8** %scevgep.5, align 8
  %1191 = icmp ne i8* %1190, null
  %1192 = icmp ult i64 %1188, 30
  %spec.select.5 = select i1 %1191, i1 %1192, i1 false
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %spec.select.5, label %1187, label %1193

; <label>:1193:                                   ; preds = %1187
  %.01.lcssa.wide.5 = phi i64 [ %lsr.iv.next.5, %1187 ]
  %1194 = trunc i64 %.01.lcssa.wide.5 to i32
  %1195 = add nsw i32 %1194, %.1.lcssa.lcssa.5
  %1196 = sub nsw i32 %1195, 1
  %1197 = icmp sgt i32 %1196, 30
  br i1 %1197, label %1226, label %1198

; <label>:1198:                                   ; preds = %1193
  %1199 = sub nsw i32 %.1.lcssa.lcssa.5, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.5, i32 %1199)
  %1200 = add nsw i32 %.1.lcssa.lcssa.5, -1
  %1201 = add nsw i32 %1194, %.1.lcssa.lcssa.5
  %1202 = sext i32 %1201 to i64
  %1203 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1202
  store i8* null, i8** %1203, align 8
  %1204 = icmp ne i32 %1200, 0
  br i1 %1204, label %.lr.ph16.5, label %.loopexit.5

.lr.ph16.5:                                       ; preds = %1198
  %1205 = add i32 %.1.lcssa.lcssa.5, -1
  %1206 = sext i32 %1205 to i64
  %1207 = sext i32 %1194 to i64
  %scevgep4.5 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1206
  %1208 = shl i64 %1206, 1
  %1209 = shl i64 %1207, 1
  %1210 = add i64 %1208, %1209
  %scevgep9.5 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1210
  %1211 = sub i32 1, %.1.lcssa.lcssa.5
  %1212 = zext i32 %1211 to i64
  br label %1213

; <label>:1213:                                   ; preds = %1218, %.lr.ph16.5
  %lsr.iv5.5 = phi i64 [ 0, %.lr.ph16.5 ], [ %lsr.iv.next6.5, %1218 ]
  call void @unroll_loop(i32 47)
  %scevgep7.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1214 = load i8*, i8** %scevgep7.5, align 8
  %1215 = call i32 @strcmp(i8* %1214, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1216 = icmp ne i32 %1215, 0
  br i1 %1216, label %1218, label %1217

; <label>:1217:                                   ; preds = %1213
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.5

; <label>:1218:                                   ; preds = %1213
  %scevgep8.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1219 = load i8*, i8** %scevgep8.5, align 8
  %1220 = call noalias i8* @strdup(i8* %1219) #9, !track !109
  %1221 = shl i64 %lsr.iv5.5, 1
  %scevgep10.5 = getelementptr i32, i32* %scevgep9.5, i64 %1221
  %scevgep1011.5 = bitcast i32* %scevgep10.5 to i8**
  store i8* %1220, i8** %scevgep1011.5, align 8
  %lsr.iv.next6.5 = add nsw i64 %lsr.iv5.5, -1
  %tmp.5 = trunc i64 %lsr.iv.next6.5 to i32
  %1222 = icmp ne i32 %1211, %tmp.5
  br i1 %1222, label %1213, label %.loopexit.loopexit.5

.loopexit.loopexit.5:                             ; preds = %1218
  br label %.loopexit.5

.loopexit.5:                                      ; preds = %.loopexit.loopexit.5, %1217, %1198
  %1223 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1224 = icmp ne i8* %1223, null
  br i1 %1224, label %1225, label %.outer.backedge.5

; <label>:1225:                                   ; preds = %.loopexit.5
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.5

; <label>:1226:                                   ; preds = %1193
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.5, i32 30)
  %1227 = add nsw i32 %.7.5, 1
  br label %.outer.backedge.5

; <label>:1228:                                   ; preds = %1178
  %1229 = load i8*, i8** %41, align 16
  %1230 = call i32 @strcasecmp(i8* %1229, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1231 = icmp ne i32 %1230, 0
  br i1 %1231, label %1239, label %1232

; <label>:1232:                                   ; preds = %1228
  %1233 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1233, label %1237, label %1234

; <label>:1234:                                   ; preds = %1232
  %1235 = load i8*, i8** %45, align 8
  %1236 = call i32 @atoi(i8* %1235) #8
  store i32 %1236, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.5

; <label>:1237:                                   ; preds = %1232
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.5)
  %1238 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1239:                                   ; preds = %1228
  %1240 = load i8*, i8** %43, align 16
  %1241 = call i32 @strcasecmp(i8* %1240, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1242 = icmp ne i32 %1241, 0
  br i1 %1242, label %1262, label %1243

; <label>:1243:                                   ; preds = %1239
  %1244 = icmp ne i32 %.1.lcssa.lcssa.5, 4
  br i1 %1244, label %1260, label %1245

; <label>:1245:                                   ; preds = %1243
  %1246 = load i8*, i8** %46, align 8
  %1247 = load i8*, i8** %47, align 16
  %1248 = load i8*, i8** %48, align 8
  %1249 = call i32 @atoi(i8* %1248) #8
  %1250 = call i32 @conv_scoped_conf(i8* %1246, i8* %1247, i32 %1249)
  %1251 = icmp ne i32 %1250, 0
  %1252 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1253 = load i8*, i8** %49, align 8
  %1254 = load i8*, i8** %50, align 16
  %1255 = load i8*, i8** %51, align 8
  br i1 %1251, label %1258, label %1256

; <label>:1256:                                   ; preds = %1245
  %1257 = call i32 @atoi(i8* %1255) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1252, i8* %1253, i8* %1254, i32 %1257)
  br label %.outer.backedge.5

; <label>:1258:                                   ; preds = %1245
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1252, i8* %1253, i8* %1254, i8* %1255)
  %1259 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1260:                                   ; preds = %1243
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.5)
  %1261 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1262:                                   ; preds = %1239
  %1263 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.5, i8* %1263)
  %1264 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

.outer.backedge.5:                                ; preds = %1262, %1260, %1258, %1256, %1237, %1234, %1226, %1225, %.loopexit.5, %1176, %1173, %1165, %1162, %1154, %1153, %1145, %1143, %1142, %1128, %1125, %1121, %1116
  %.03.ph.be.5 = phi i32 [ %1117, %1116 ], [ %1127, %1125 ], [ %1129, %1128 ], [ %.03.ph.be.4, %1121 ], [ %1146, %1145 ], [ %1144, %1143 ], [ %.03.ph.be.4, %1142 ], [ %1155, %1154 ], [ %.03.ph.be.4, %1153 ], [ %1166, %1165 ], [ %.03.ph.be.4, %1162 ], [ %1177, %1176 ], [ %.03.ph.be.4, %1173 ], [ %1227, %1226 ], [ %.7.5, %1225 ], [ %.7.5, %.loopexit.5 ], [ %1238, %1237 ], [ %.03.ph.be.4, %1234 ], [ %1264, %1262 ], [ %1261, %1260 ], [ %1259, %1258 ], [ %.03.ph.be.4, %1256 ]
  call void @__loop_iteration_test___2()
  %1265 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1266 = icmp ne i8* %1265, null
  br i1 %1266, label %.lr.ph.6, label %.outer._crit_edge.loopexit1

.lr.ph.6:                                         ; preds = %.outer.backedge.5
  call void @unroll_loop(i32 48)
  br label %1267

; <label>:1267:                                   ; preds = %1301, %.lr.ph.6
  %.0712.6 = phi i32 [ %.lcssa.5, %.lr.ph.6 ], [ %1268, %1301 ]
  call void @unroll_loop(i32 44)
  %1268 = add nsw i32 %.0712.6, 1
  %1269 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1270 = icmp ne i8* %1269, null
  br i1 %1270, label %1271, label %1272

; <label>:1271:                                   ; preds = %1267
  store i8 0, i8* %1269, align 1
  br label %1272

; <label>:1272:                                   ; preds = %1271, %1267
  %1273 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1274 = icmp ne i8* %1273, null
  br i1 %1274, label %1275, label %1276

; <label>:1275:                                   ; preds = %1272
  store i8 0, i8* %1273, align 1
  br label %1276

; <label>:1276:                                   ; preds = %1275, %1272
  %1277 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1278 = icmp ne i8* %1277, null
  br i1 %1278, label %1279, label %1280

; <label>:1279:                                   ; preds = %1276
  store i8 0, i8* %1277, align 1
  br label %1280

; <label>:1280:                                   ; preds = %1279, %1276
  %1281 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1282 = icmp ne i8* %1281, null
  br i1 %1282, label %1283, label %1284

; <label>:1283:                                   ; preds = %1280
  store i8 0, i8* %1281, align 1
  br label %1284

; <label>:1284:                                   ; preds = %1283, %1280
  %1285 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1285, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1286 = load i8*, i8** %26, align 8
  %1287 = icmp ne i8* %1286, null
  %.14.6 = select i1 %1287, i32 1, i32 0
  %1288 = select i1 %1287, i1 true, i1 false
  br i1 %1288, label %.lr.ph6.preheader.6, label %._crit_edge.6

.lr.ph6.preheader.6:                              ; preds = %1284
  br label %.lr.ph6.6

.lr.ph6.6:                                        ; preds = %.lr.ph6.6, %.lr.ph6.preheader.6
  %.15.6 = phi i32 [ %.1.6, %.lr.ph6.6 ], [ %.14.6, %.lr.ph6.preheader.6 ]
  %1289 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1290 = sext i32 %.15.6 to i64
  %1291 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1290
  store i8* %1289, i8** %1291, align 8
  call void @unroll_loop(i32 45)
  %1292 = sext i32 %.15.6 to i64
  %1293 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1292
  %1294 = load i8*, i8** %1293, align 8
  %1295 = icmp ne i8* %1294, null
  %1296 = add nsw i32 %.15.6, 1
  %1297 = icmp slt i32 %1296, 30
  %.1.6 = select i1 %1295, i32 %1296, i32 %.15.6
  %1298 = select i1 %1295, i1 %1297, i1 false
  br i1 %1298, label %.lr.ph6.6, label %._crit_edge.loopexit.6

._crit_edge.loopexit.6:                           ; preds = %.lr.ph6.6
  %.1.lcssa.ph.6 = phi i32 [ %.1.6, %.lr.ph6.6 ]
  br label %._crit_edge.6

._crit_edge.6:                                    ; preds = %._crit_edge.loopexit.6, %1284
  %.1.lcssa.6 = phi i32 [ %.14.6, %1284 ], [ %.1.lcssa.ph.6, %._crit_edge.loopexit.6 ]
  %1299 = load i8*, i8** %27, align 16
  %1300 = icmp ne i8* %1299, null
  br i1 %1300, label %1304, label %1301

; <label>:1301:                                   ; preds = %._crit_edge.6
  %1302 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1303 = icmp ne i8* %1302, null
  br i1 %1303, label %1267, label %.outer._crit_edge.loopexit.loopexit6

; <label>:1304:                                   ; preds = %._crit_edge.6
  %.1.lcssa.lcssa.6 = phi i32 [ %.1.lcssa.6, %._crit_edge.6 ]
  %.lcssa.6 = phi i32 [ %1268, %._crit_edge.6 ]
  %1305 = load i8*, i8** %28, align 16
  %1306 = call i32 @strcasecmp(i8* %1305, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1307 = icmp ne i32 %1306, 0
  br i1 %1307, label %1333, label %1308

; <label>:1308:                                   ; preds = %1304
  %1309 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  %1310 = icmp sgt i32 %.1.lcssa.lcssa.6, 4
  %or.cond.6 = or i1 %1309, %1310
  br i1 %or.cond.6, label %1331, label %1311

; <label>:1311:                                   ; preds = %1308
  %1312 = icmp sgt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1312, label %1313, label %1324

; <label>:1313:                                   ; preds = %1311
  %1314 = load i8*, i8** %34, align 8
  %1315 = call i32 @strcasecmp(i8* %1314, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1316 = icmp ne i32 %1315, 0
  br i1 %1316, label %1328, label %1317

; <label>:1317:                                   ; preds = %1313
  %1318 = icmp sge i32 %.1.lcssa.lcssa.6, 3
  br i1 %1318, label %1321, label %1319

; <label>:1319:                                   ; preds = %1317
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.6)
  %1320 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1321:                                   ; preds = %1317
  %1322 = load i8*, i8** %40, align 8
  %1323 = call i32 @atoi(i8* %1322) #8
  br label %1324

; <label>:1324:                                   ; preds = %1321, %1311
  %.08.6 = phi i32 [ %1323, %1321 ], [ 53, %1311 ]
  %1325 = load i8*, i8** %35, align 8
  %1326 = call i32 @fwd_add(i8* %1325, i32 %.08.6)
  %1327 = icmp eq i32 %1326, -1
  br i1 %1327, label %.loopexit1.loopexit, label %.outer.backedge.6

; <label>:1328:                                   ; preds = %1313
  %1329 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.6, i8* %1329)
  %1330 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1331:                                   ; preds = %1308
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.6)
  %1332 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1333:                                   ; preds = %1304
  %1334 = load i8*, i8** %29, align 16
  %1335 = call i32 @strcasecmp(i8* %1334, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1336 = icmp ne i32 %1335, 0
  br i1 %1336, label %1350, label %1337

; <label>:1337:                                   ; preds = %1333
  %1338 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1338, label %1348, label %1339

; <label>:1339:                                   ; preds = %1337
  %1340 = load i8*, i8** %32, align 8
  %1341 = call i32 @conv_trick_conf(i8* %1340)
  %1342 = icmp ne i32 %1341, 0
  %1343 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1344 = load i8*, i8** %33, align 8
  br i1 %1342, label %1346, label %1345

; <label>:1345:                                   ; preds = %1339
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1343, i8* %1344)
  br label %.outer.backedge.6

; <label>:1346:                                   ; preds = %1339
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1343, i8* %1344)
  %1347 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1348:                                   ; preds = %1337
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.6)
  %1349 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1350:                                   ; preds = %1333
  %1351 = load i8*, i8** %30, align 16
  %1352 = call i32 @strcasecmp(i8* %1351, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1353 = icmp ne i32 %1352, 0
  br i1 %1353, label %1359, label %1354

; <label>:1354:                                   ; preds = %1350
  %1355 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1355, label %1357, label %1356

; <label>:1356:                                   ; preds = %1354
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.6

; <label>:1357:                                   ; preds = %1354
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.6)
  %1358 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1359:                                   ; preds = %1350
  %1360 = load i8*, i8** %31, align 16
  %1361 = call i32 @strcasecmp(i8* %1360, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1362 = icmp ne i32 %1361, 0
  br i1 %1362, label %1370, label %1363

; <label>:1363:                                   ; preds = %1359
  %1364 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1364, label %1368, label %1365

; <label>:1365:                                   ; preds = %1363
  %1366 = load i8*, i8** %39, align 8
  %1367 = call i32 @atoi(i8* %1366) #8
  store i32 %1367, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.6

; <label>:1368:                                   ; preds = %1363
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.6)
  %1369 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1370:                                   ; preds = %1359
  %1371 = load i8*, i8** %36, align 16
  %1372 = call i32 @strcasecmp(i8* %1371, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1373 = icmp ne i32 %1372, 0
  br i1 %1373, label %1381, label %1374

; <label>:1374:                                   ; preds = %1370
  %1375 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1375, label %1379, label %1376

; <label>:1376:                                   ; preds = %1374
  %1377 = load i8*, i8** %42, align 8
  %1378 = call noalias i8* @strdup(i8* %1377) #9, !track !108
  store i8* %1378, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.6

; <label>:1379:                                   ; preds = %1374
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.6)
  %1380 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1381:                                   ; preds = %1370
  %1382 = load i8*, i8** %38, align 16
  %1383 = call i32 @strcasecmp(i8* %1382, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1384 = icmp ne i32 %1383, 0
  br i1 %1384, label %1431, label %1385

; <label>:1385:                                   ; preds = %1381
  %1386 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1386, label %1387, label %1389

; <label>:1387:                                   ; preds = %1385
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.6)
  %1388 = add nsw i32 %.03.ph.be.5, 1
  br label %1389

; <label>:1389:                                   ; preds = %1387, %1385
  %.7.6 = phi i32 [ %1388, %1387 ], [ %.03.ph.be.5, %1385 ]
  br label %1390

; <label>:1390:                                   ; preds = %1390, %1389
  %lsr.iv.6 = phi i64 [ %lsr.iv.next.6, %1390 ], [ -1, %1389 ]
  %1391 = add i64 %lsr.iv.6, 1
  call void @unroll_loop(i32 46)
  %1392 = shl i64 %lsr.iv.6, 3
  %uglygep.6 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1392
  %uglygep3.6 = bitcast i8* %uglygep.6 to i8**
  %scevgep.6 = getelementptr i8*, i8** %uglygep3.6, i64 111
  %1393 = load i8*, i8** %scevgep.6, align 8
  %1394 = icmp ne i8* %1393, null
  %1395 = icmp ult i64 %1391, 30
  %spec.select.6 = select i1 %1394, i1 %1395, i1 false
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %spec.select.6, label %1390, label %1396

; <label>:1396:                                   ; preds = %1390
  %.01.lcssa.wide.6 = phi i64 [ %lsr.iv.next.6, %1390 ]
  %1397 = trunc i64 %.01.lcssa.wide.6 to i32
  %1398 = add nsw i32 %1397, %.1.lcssa.lcssa.6
  %1399 = sub nsw i32 %1398, 1
  %1400 = icmp sgt i32 %1399, 30
  br i1 %1400, label %1429, label %1401

; <label>:1401:                                   ; preds = %1396
  %1402 = sub nsw i32 %.1.lcssa.lcssa.6, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.6, i32 %1402)
  %1403 = add nsw i32 %.1.lcssa.lcssa.6, -1
  %1404 = add nsw i32 %1397, %.1.lcssa.lcssa.6
  %1405 = sext i32 %1404 to i64
  %1406 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1405
  store i8* null, i8** %1406, align 8
  %1407 = icmp ne i32 %1403, 0
  br i1 %1407, label %.lr.ph16.6, label %.loopexit.6

.lr.ph16.6:                                       ; preds = %1401
  %1408 = add i32 %.1.lcssa.lcssa.6, -1
  %1409 = sext i32 %1408 to i64
  %1410 = sext i32 %1397 to i64
  %scevgep4.6 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1409
  %1411 = shl i64 %1409, 1
  %1412 = shl i64 %1410, 1
  %1413 = add i64 %1411, %1412
  %scevgep9.6 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1413
  %1414 = sub i32 1, %.1.lcssa.lcssa.6
  %1415 = zext i32 %1414 to i64
  br label %1416

; <label>:1416:                                   ; preds = %1421, %.lr.ph16.6
  %lsr.iv5.6 = phi i64 [ 0, %.lr.ph16.6 ], [ %lsr.iv.next6.6, %1421 ]
  call void @unroll_loop(i32 47)
  %scevgep7.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1417 = load i8*, i8** %scevgep7.6, align 8
  %1418 = call i32 @strcmp(i8* %1417, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1419 = icmp ne i32 %1418, 0
  br i1 %1419, label %1421, label %1420

; <label>:1420:                                   ; preds = %1416
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.6

; <label>:1421:                                   ; preds = %1416
  %scevgep8.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1422 = load i8*, i8** %scevgep8.6, align 8
  %1423 = call noalias i8* @strdup(i8* %1422) #9, !track !109
  %1424 = shl i64 %lsr.iv5.6, 1
  %scevgep10.6 = getelementptr i32, i32* %scevgep9.6, i64 %1424
  %scevgep1011.6 = bitcast i32* %scevgep10.6 to i8**
  store i8* %1423, i8** %scevgep1011.6, align 8
  %lsr.iv.next6.6 = add nsw i64 %lsr.iv5.6, -1
  %tmp.6 = trunc i64 %lsr.iv.next6.6 to i32
  %1425 = icmp ne i32 %1414, %tmp.6
  br i1 %1425, label %1416, label %.loopexit.loopexit.6

.loopexit.loopexit.6:                             ; preds = %1421
  br label %.loopexit.6

.loopexit.6:                                      ; preds = %.loopexit.loopexit.6, %1420, %1401
  %1426 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1427 = icmp ne i8* %1426, null
  br i1 %1427, label %1428, label %.outer.backedge.6

; <label>:1428:                                   ; preds = %.loopexit.6
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.6

; <label>:1429:                                   ; preds = %1396
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.6, i32 30)
  %1430 = add nsw i32 %.7.6, 1
  br label %.outer.backedge.6

; <label>:1431:                                   ; preds = %1381
  %1432 = load i8*, i8** %41, align 16
  %1433 = call i32 @strcasecmp(i8* %1432, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1434 = icmp ne i32 %1433, 0
  br i1 %1434, label %1442, label %1435

; <label>:1435:                                   ; preds = %1431
  %1436 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1436, label %1440, label %1437

; <label>:1437:                                   ; preds = %1435
  %1438 = load i8*, i8** %45, align 8
  %1439 = call i32 @atoi(i8* %1438) #8
  store i32 %1439, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.6

; <label>:1440:                                   ; preds = %1435
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.6)
  %1441 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1442:                                   ; preds = %1431
  %1443 = load i8*, i8** %43, align 16
  %1444 = call i32 @strcasecmp(i8* %1443, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1445 = icmp ne i32 %1444, 0
  br i1 %1445, label %1465, label %1446

; <label>:1446:                                   ; preds = %1442
  %1447 = icmp ne i32 %.1.lcssa.lcssa.6, 4
  br i1 %1447, label %1463, label %1448

; <label>:1448:                                   ; preds = %1446
  %1449 = load i8*, i8** %46, align 8
  %1450 = load i8*, i8** %47, align 16
  %1451 = load i8*, i8** %48, align 8
  %1452 = call i32 @atoi(i8* %1451) #8
  %1453 = call i32 @conv_scoped_conf(i8* %1449, i8* %1450, i32 %1452)
  %1454 = icmp ne i32 %1453, 0
  %1455 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1456 = load i8*, i8** %49, align 8
  %1457 = load i8*, i8** %50, align 16
  %1458 = load i8*, i8** %51, align 8
  br i1 %1454, label %1461, label %1459

; <label>:1459:                                   ; preds = %1448
  %1460 = call i32 @atoi(i8* %1458) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1455, i8* %1456, i8* %1457, i32 %1460)
  br label %.outer.backedge.6

; <label>:1461:                                   ; preds = %1448
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1455, i8* %1456, i8* %1457, i8* %1458)
  %1462 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1463:                                   ; preds = %1446
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.6)
  %1464 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1465:                                   ; preds = %1442
  %1466 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.6, i8* %1466)
  %1467 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

.outer.backedge.6:                                ; preds = %1465, %1463, %1461, %1459, %1440, %1437, %1429, %1428, %.loopexit.6, %1379, %1376, %1368, %1365, %1357, %1356, %1348, %1346, %1345, %1331, %1328, %1324, %1319
  %.03.ph.be.6 = phi i32 [ %1320, %1319 ], [ %1330, %1328 ], [ %1332, %1331 ], [ %.03.ph.be.5, %1324 ], [ %1349, %1348 ], [ %1347, %1346 ], [ %.03.ph.be.5, %1345 ], [ %1358, %1357 ], [ %.03.ph.be.5, %1356 ], [ %1369, %1368 ], [ %.03.ph.be.5, %1365 ], [ %1380, %1379 ], [ %.03.ph.be.5, %1376 ], [ %1430, %1429 ], [ %.7.6, %1428 ], [ %.7.6, %.loopexit.6 ], [ %1441, %1440 ], [ %.03.ph.be.5, %1437 ], [ %1467, %1465 ], [ %1464, %1463 ], [ %1462, %1461 ], [ %.03.ph.be.5, %1459 ]
  call void @__loop_iteration_test___2()
  %1468 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1469 = icmp ne i8* %1468, null
  br i1 %1469, label %.lr.ph.7, label %.outer._crit_edge.loopexit1

.lr.ph.7:                                         ; preds = %.outer.backedge.6
  call void @unroll_loop(i32 48)
  br label %1470

; <label>:1470:                                   ; preds = %1504, %.lr.ph.7
  %.0712.7 = phi i32 [ %.lcssa.6, %.lr.ph.7 ], [ %1471, %1504 ]
  call void @unroll_loop(i32 44)
  %1471 = add nsw i32 %.0712.7, 1
  %1472 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1473 = icmp ne i8* %1472, null
  br i1 %1473, label %1474, label %1475

; <label>:1474:                                   ; preds = %1470
  store i8 0, i8* %1472, align 1
  br label %1475

; <label>:1475:                                   ; preds = %1474, %1470
  %1476 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1477 = icmp ne i8* %1476, null
  br i1 %1477, label %1478, label %1479

; <label>:1478:                                   ; preds = %1475
  store i8 0, i8* %1476, align 1
  br label %1479

; <label>:1479:                                   ; preds = %1478, %1475
  %1480 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1481 = icmp ne i8* %1480, null
  br i1 %1481, label %1482, label %1483

; <label>:1482:                                   ; preds = %1479
  store i8 0, i8* %1480, align 1
  br label %1483

; <label>:1483:                                   ; preds = %1482, %1479
  %1484 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1485 = icmp ne i8* %1484, null
  br i1 %1485, label %1486, label %1487

; <label>:1486:                                   ; preds = %1483
  store i8 0, i8* %1484, align 1
  br label %1487

; <label>:1487:                                   ; preds = %1486, %1483
  %1488 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1488, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1489 = load i8*, i8** %26, align 8
  %1490 = icmp ne i8* %1489, null
  %.14.7 = select i1 %1490, i32 1, i32 0
  %1491 = select i1 %1490, i1 true, i1 false
  br i1 %1491, label %.lr.ph6.preheader.7, label %._crit_edge.7

.lr.ph6.preheader.7:                              ; preds = %1487
  br label %.lr.ph6.7

.lr.ph6.7:                                        ; preds = %.lr.ph6.7, %.lr.ph6.preheader.7
  %.15.7 = phi i32 [ %.1.7, %.lr.ph6.7 ], [ %.14.7, %.lr.ph6.preheader.7 ]
  %1492 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1493 = sext i32 %.15.7 to i64
  %1494 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1493
  store i8* %1492, i8** %1494, align 8
  call void @unroll_loop(i32 45)
  %1495 = sext i32 %.15.7 to i64
  %1496 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1495
  %1497 = load i8*, i8** %1496, align 8
  %1498 = icmp ne i8* %1497, null
  %1499 = add nsw i32 %.15.7, 1
  %1500 = icmp slt i32 %1499, 30
  %.1.7 = select i1 %1498, i32 %1499, i32 %.15.7
  %1501 = select i1 %1498, i1 %1500, i1 false
  br i1 %1501, label %.lr.ph6.7, label %._crit_edge.loopexit.7

._crit_edge.loopexit.7:                           ; preds = %.lr.ph6.7
  %.1.lcssa.ph.7 = phi i32 [ %.1.7, %.lr.ph6.7 ]
  br label %._crit_edge.7

._crit_edge.7:                                    ; preds = %._crit_edge.loopexit.7, %1487
  %.1.lcssa.7 = phi i32 [ %.14.7, %1487 ], [ %.1.lcssa.ph.7, %._crit_edge.loopexit.7 ]
  %1502 = load i8*, i8** %27, align 16
  %1503 = icmp ne i8* %1502, null
  br i1 %1503, label %1507, label %1504

; <label>:1504:                                   ; preds = %._crit_edge.7
  %1505 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1506 = icmp ne i8* %1505, null
  br i1 %1506, label %1470, label %.outer._crit_edge.loopexit.loopexit7

; <label>:1507:                                   ; preds = %._crit_edge.7
  %.1.lcssa.lcssa.7 = phi i32 [ %.1.lcssa.7, %._crit_edge.7 ]
  %.lcssa.7 = phi i32 [ %1471, %._crit_edge.7 ]
  %1508 = load i8*, i8** %28, align 16
  %1509 = call i32 @strcasecmp(i8* %1508, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1510 = icmp ne i32 %1509, 0
  br i1 %1510, label %1536, label %1511

; <label>:1511:                                   ; preds = %1507
  %1512 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  %1513 = icmp sgt i32 %.1.lcssa.lcssa.7, 4
  %or.cond.7 = or i1 %1512, %1513
  br i1 %or.cond.7, label %1534, label %1514

; <label>:1514:                                   ; preds = %1511
  %1515 = icmp sgt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1515, label %1516, label %1527

; <label>:1516:                                   ; preds = %1514
  %1517 = load i8*, i8** %34, align 8
  %1518 = call i32 @strcasecmp(i8* %1517, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1519 = icmp ne i32 %1518, 0
  br i1 %1519, label %1531, label %1520

; <label>:1520:                                   ; preds = %1516
  %1521 = icmp sge i32 %.1.lcssa.lcssa.7, 3
  br i1 %1521, label %1524, label %1522

; <label>:1522:                                   ; preds = %1520
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.7)
  %1523 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1524:                                   ; preds = %1520
  %1525 = load i8*, i8** %40, align 8
  %1526 = call i32 @atoi(i8* %1525) #8
  br label %1527

; <label>:1527:                                   ; preds = %1524, %1514
  %.08.7 = phi i32 [ %1526, %1524 ], [ 53, %1514 ]
  %1528 = load i8*, i8** %35, align 8
  %1529 = call i32 @fwd_add(i8* %1528, i32 %.08.7)
  %1530 = icmp eq i32 %1529, -1
  br i1 %1530, label %.loopexit1.loopexit, label %.outer.backedge.7

; <label>:1531:                                   ; preds = %1516
  %1532 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.7, i8* %1532)
  %1533 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1534:                                   ; preds = %1511
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.7)
  %1535 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1536:                                   ; preds = %1507
  %1537 = load i8*, i8** %29, align 16
  %1538 = call i32 @strcasecmp(i8* %1537, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1539 = icmp ne i32 %1538, 0
  br i1 %1539, label %1553, label %1540

; <label>:1540:                                   ; preds = %1536
  %1541 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1541, label %1551, label %1542

; <label>:1542:                                   ; preds = %1540
  %1543 = load i8*, i8** %32, align 8
  %1544 = call i32 @conv_trick_conf(i8* %1543)
  %1545 = icmp ne i32 %1544, 0
  %1546 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1547 = load i8*, i8** %33, align 8
  br i1 %1545, label %1549, label %1548

; <label>:1548:                                   ; preds = %1542
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1546, i8* %1547)
  br label %.outer.backedge.7

; <label>:1549:                                   ; preds = %1542
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1546, i8* %1547)
  %1550 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1551:                                   ; preds = %1540
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.7)
  %1552 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1553:                                   ; preds = %1536
  %1554 = load i8*, i8** %30, align 16
  %1555 = call i32 @strcasecmp(i8* %1554, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1556 = icmp ne i32 %1555, 0
  br i1 %1556, label %1562, label %1557

; <label>:1557:                                   ; preds = %1553
  %1558 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1558, label %1560, label %1559

; <label>:1559:                                   ; preds = %1557
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.7

; <label>:1560:                                   ; preds = %1557
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.7)
  %1561 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1562:                                   ; preds = %1553
  %1563 = load i8*, i8** %31, align 16
  %1564 = call i32 @strcasecmp(i8* %1563, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1565 = icmp ne i32 %1564, 0
  br i1 %1565, label %1573, label %1566

; <label>:1566:                                   ; preds = %1562
  %1567 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1567, label %1571, label %1568

; <label>:1568:                                   ; preds = %1566
  %1569 = load i8*, i8** %39, align 8
  %1570 = call i32 @atoi(i8* %1569) #8
  store i32 %1570, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.7

; <label>:1571:                                   ; preds = %1566
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.7)
  %1572 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1573:                                   ; preds = %1562
  %1574 = load i8*, i8** %36, align 16
  %1575 = call i32 @strcasecmp(i8* %1574, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1576 = icmp ne i32 %1575, 0
  br i1 %1576, label %1584, label %1577

; <label>:1577:                                   ; preds = %1573
  %1578 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1578, label %1582, label %1579

; <label>:1579:                                   ; preds = %1577
  %1580 = load i8*, i8** %42, align 8
  %1581 = call noalias i8* @strdup(i8* %1580) #9, !track !108
  store i8* %1581, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.7

; <label>:1582:                                   ; preds = %1577
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.7)
  %1583 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1584:                                   ; preds = %1573
  %1585 = load i8*, i8** %38, align 16
  %1586 = call i32 @strcasecmp(i8* %1585, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1587 = icmp ne i32 %1586, 0
  br i1 %1587, label %1634, label %1588

; <label>:1588:                                   ; preds = %1584
  %1589 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1589, label %1590, label %1592

; <label>:1590:                                   ; preds = %1588
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.7)
  %1591 = add nsw i32 %.03.ph.be.6, 1
  br label %1592

; <label>:1592:                                   ; preds = %1590, %1588
  %.7.7 = phi i32 [ %1591, %1590 ], [ %.03.ph.be.6, %1588 ]
  br label %1593

; <label>:1593:                                   ; preds = %1593, %1592
  %lsr.iv.7 = phi i64 [ %lsr.iv.next.7, %1593 ], [ -1, %1592 ]
  %1594 = add i64 %lsr.iv.7, 1
  call void @unroll_loop(i32 46)
  %1595 = shl i64 %lsr.iv.7, 3
  %uglygep.7 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1595
  %uglygep3.7 = bitcast i8* %uglygep.7 to i8**
  %scevgep.7 = getelementptr i8*, i8** %uglygep3.7, i64 111
  %1596 = load i8*, i8** %scevgep.7, align 8
  %1597 = icmp ne i8* %1596, null
  %1598 = icmp ult i64 %1594, 30
  %spec.select.7 = select i1 %1597, i1 %1598, i1 false
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %spec.select.7, label %1593, label %1599

; <label>:1599:                                   ; preds = %1593
  %.01.lcssa.wide.7 = phi i64 [ %lsr.iv.next.7, %1593 ]
  %1600 = trunc i64 %.01.lcssa.wide.7 to i32
  %1601 = add nsw i32 %1600, %.1.lcssa.lcssa.7
  %1602 = sub nsw i32 %1601, 1
  %1603 = icmp sgt i32 %1602, 30
  br i1 %1603, label %1632, label %1604

; <label>:1604:                                   ; preds = %1599
  %1605 = sub nsw i32 %.1.lcssa.lcssa.7, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.7, i32 %1605)
  %1606 = add nsw i32 %.1.lcssa.lcssa.7, -1
  %1607 = add nsw i32 %1600, %.1.lcssa.lcssa.7
  %1608 = sext i32 %1607 to i64
  %1609 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1608
  store i8* null, i8** %1609, align 8
  %1610 = icmp ne i32 %1606, 0
  br i1 %1610, label %.lr.ph16.7, label %.loopexit.7

.lr.ph16.7:                                       ; preds = %1604
  %1611 = add i32 %.1.lcssa.lcssa.7, -1
  %1612 = sext i32 %1611 to i64
  %1613 = sext i32 %1600 to i64
  %scevgep4.7 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1612
  %1614 = shl i64 %1612, 1
  %1615 = shl i64 %1613, 1
  %1616 = add i64 %1614, %1615
  %scevgep9.7 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1616
  %1617 = sub i32 1, %.1.lcssa.lcssa.7
  %1618 = zext i32 %1617 to i64
  br label %1619

; <label>:1619:                                   ; preds = %1624, %.lr.ph16.7
  %lsr.iv5.7 = phi i64 [ 0, %.lr.ph16.7 ], [ %lsr.iv.next6.7, %1624 ]
  call void @unroll_loop(i32 47)
  %scevgep7.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1620 = load i8*, i8** %scevgep7.7, align 8
  %1621 = call i32 @strcmp(i8* %1620, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1622 = icmp ne i32 %1621, 0
  br i1 %1622, label %1624, label %1623

; <label>:1623:                                   ; preds = %1619
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.7

; <label>:1624:                                   ; preds = %1619
  %scevgep8.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1625 = load i8*, i8** %scevgep8.7, align 8
  %1626 = call noalias i8* @strdup(i8* %1625) #9, !track !109
  %1627 = shl i64 %lsr.iv5.7, 1
  %scevgep10.7 = getelementptr i32, i32* %scevgep9.7, i64 %1627
  %scevgep1011.7 = bitcast i32* %scevgep10.7 to i8**
  store i8* %1626, i8** %scevgep1011.7, align 8
  %lsr.iv.next6.7 = add nsw i64 %lsr.iv5.7, -1
  %tmp.7 = trunc i64 %lsr.iv.next6.7 to i32
  %1628 = icmp ne i32 %1617, %tmp.7
  br i1 %1628, label %1619, label %.loopexit.loopexit.7

.loopexit.loopexit.7:                             ; preds = %1624
  br label %.loopexit.7

.loopexit.7:                                      ; preds = %.loopexit.loopexit.7, %1623, %1604
  %1629 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1630 = icmp ne i8* %1629, null
  br i1 %1630, label %1631, label %.outer.backedge.7

; <label>:1631:                                   ; preds = %.loopexit.7
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.7

; <label>:1632:                                   ; preds = %1599
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.7, i32 30)
  %1633 = add nsw i32 %.7.7, 1
  br label %.outer.backedge.7

; <label>:1634:                                   ; preds = %1584
  %1635 = load i8*, i8** %41, align 16
  %1636 = call i32 @strcasecmp(i8* %1635, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1637 = icmp ne i32 %1636, 0
  br i1 %1637, label %1645, label %1638

; <label>:1638:                                   ; preds = %1634
  %1639 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1639, label %1643, label %1640

; <label>:1640:                                   ; preds = %1638
  %1641 = load i8*, i8** %45, align 8
  %1642 = call i32 @atoi(i8* %1641) #8
  store i32 %1642, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.7

; <label>:1643:                                   ; preds = %1638
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.7)
  %1644 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1645:                                   ; preds = %1634
  %1646 = load i8*, i8** %43, align 16
  %1647 = call i32 @strcasecmp(i8* %1646, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1648 = icmp ne i32 %1647, 0
  br i1 %1648, label %1668, label %1649

; <label>:1649:                                   ; preds = %1645
  %1650 = icmp ne i32 %.1.lcssa.lcssa.7, 4
  br i1 %1650, label %1666, label %1651

; <label>:1651:                                   ; preds = %1649
  %1652 = load i8*, i8** %46, align 8
  %1653 = load i8*, i8** %47, align 16
  %1654 = load i8*, i8** %48, align 8
  %1655 = call i32 @atoi(i8* %1654) #8
  %1656 = call i32 @conv_scoped_conf(i8* %1652, i8* %1653, i32 %1655)
  %1657 = icmp ne i32 %1656, 0
  %1658 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1659 = load i8*, i8** %49, align 8
  %1660 = load i8*, i8** %50, align 16
  %1661 = load i8*, i8** %51, align 8
  br i1 %1657, label %1664, label %1662

; <label>:1662:                                   ; preds = %1651
  %1663 = call i32 @atoi(i8* %1661) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1658, i8* %1659, i8* %1660, i32 %1663)
  br label %.outer.backedge.7

; <label>:1664:                                   ; preds = %1651
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1658, i8* %1659, i8* %1660, i8* %1661)
  %1665 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1666:                                   ; preds = %1649
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.7)
  %1667 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1668:                                   ; preds = %1645
  %1669 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.7, i8* %1669)
  %1670 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

.outer.backedge.7:                                ; preds = %1668, %1666, %1664, %1662, %1643, %1640, %1632, %1631, %.loopexit.7, %1582, %1579, %1571, %1568, %1560, %1559, %1551, %1549, %1548, %1534, %1531, %1527, %1522
  %.03.ph.be.7 = phi i32 [ %1523, %1522 ], [ %1533, %1531 ], [ %1535, %1534 ], [ %.03.ph.be.6, %1527 ], [ %1552, %1551 ], [ %1550, %1549 ], [ %.03.ph.be.6, %1548 ], [ %1561, %1560 ], [ %.03.ph.be.6, %1559 ], [ %1572, %1571 ], [ %.03.ph.be.6, %1568 ], [ %1583, %1582 ], [ %.03.ph.be.6, %1579 ], [ %1633, %1632 ], [ %.7.7, %1631 ], [ %.7.7, %.loopexit.7 ], [ %1644, %1643 ], [ %.03.ph.be.6, %1640 ], [ %1670, %1668 ], [ %1667, %1666 ], [ %1665, %1664 ], [ %.03.ph.be.6, %1662 ]
  call void @__loop_iteration_test___2()
  %1671 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  br label %.outer._crit_edge.loopexit1

; <label>:1672:                                   ; preds = %52
  call void @unroll_loop(i32 44)
  %1673 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1674 = icmp ne i8* %1673, null
  br i1 %1674, label %1675, label %1676

; <label>:1675:                                   ; preds = %1672
  store i8 0, i8* %1673, align 1
  br label %1676

; <label>:1676:                                   ; preds = %1675, %1672
  %1677 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1678 = icmp ne i8* %1677, null
  br i1 %1678, label %1679, label %1680

; <label>:1679:                                   ; preds = %1676
  store i8 0, i8* %1677, align 1
  br label %1680

; <label>:1680:                                   ; preds = %1679, %1676
  %1681 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1682 = icmp ne i8* %1681, null
  br i1 %1682, label %1683, label %1684

; <label>:1683:                                   ; preds = %1680
  store i8 0, i8* %1681, align 1
  br label %1684

; <label>:1684:                                   ; preds = %1683, %1680
  %1685 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1686 = icmp ne i8* %1685, null
  br i1 %1686, label %1687, label %1688

; <label>:1687:                                   ; preds = %1684
  store i8 0, i8* %1685, align 1
  br label %1688

; <label>:1688:                                   ; preds = %1687, %1684
  %1689 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1689, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1690 = load i8*, i8** %26, align 8
  %1691 = icmp ne i8* %1690, null
  %.14.12 = select i1 %1691, i32 1, i32 0
  %1692 = select i1 %1691, i1 true, i1 false
  br i1 %1692, label %.lr.ph6.preheader.13, label %._crit_edge.110

.lr.ph6.preheader.13:                             ; preds = %1688
  br label %.lr.ph6.16

.lr.ph6.16:                                       ; preds = %.lr.ph6.16, %.lr.ph6.preheader.13
  %.15.14 = phi i32 [ %.1.15, %.lr.ph6.16 ], [ %.14.12, %.lr.ph6.preheader.13 ]
  %1693 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1694 = sext i32 %.15.14 to i64
  %1695 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1694
  store i8* %1693, i8** %1695, align 8
  call void @unroll_loop(i32 45)
  %1696 = sext i32 %.15.14 to i64
  %1697 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1696
  %1698 = load i8*, i8** %1697, align 8
  %1699 = icmp ne i8* %1698, null
  %1700 = add nsw i32 %.15.14, 1
  %1701 = icmp slt i32 %1700, 30
  %.1.15 = select i1 %1699, i32 %1700, i32 %.15.14
  %1702 = select i1 %1699, i1 %1701, i1 false
  br i1 %1702, label %.lr.ph6.16, label %._crit_edge.loopexit.18

._crit_edge.loopexit.18:                          ; preds = %.lr.ph6.16
  %.1.lcssa.ph.17 = phi i32 [ %.1.15, %.lr.ph6.16 ]
  br label %._crit_edge.110

._crit_edge.110:                                  ; preds = %._crit_edge.loopexit.18, %1688
  %.1.lcssa.19 = phi i32 [ %.14.12, %1688 ], [ %.1.lcssa.ph.17, %._crit_edge.loopexit.18 ]
  %1703 = load i8*, i8** %27, align 16
  %1704 = icmp ne i8* %1703, null
  br i1 %1704, label %93, label %1705

; <label>:1705:                                   ; preds = %._crit_edge.110
  call void @__loop_iteration_test___3()
  %1706 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1707 = icmp ne i8* %1706, null
  br i1 %1707, label %1708, label %.outer._crit_edge.loopexit.loopexit

; <label>:1708:                                   ; preds = %1705
  call void @unroll_loop(i32 44)
  %1709 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1710 = icmp ne i8* %1709, null
  br i1 %1710, label %1711, label %1712

; <label>:1711:                                   ; preds = %1708
  store i8 0, i8* %1709, align 1
  br label %1712

; <label>:1712:                                   ; preds = %1711, %1708
  %1713 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1714 = icmp ne i8* %1713, null
  br i1 %1714, label %1715, label %1716

; <label>:1715:                                   ; preds = %1712
  store i8 0, i8* %1713, align 1
  br label %1716

; <label>:1716:                                   ; preds = %1715, %1712
  %1717 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1718 = icmp ne i8* %1717, null
  br i1 %1718, label %1719, label %1720

; <label>:1719:                                   ; preds = %1716
  store i8 0, i8* %1717, align 1
  br label %1720

; <label>:1720:                                   ; preds = %1719, %1716
  %1721 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1722 = icmp ne i8* %1721, null
  br i1 %1722, label %1723, label %1724

; <label>:1723:                                   ; preds = %1720
  store i8 0, i8* %1721, align 1
  br label %1724

; <label>:1724:                                   ; preds = %1723, %1720
  %1725 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1725, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1726 = load i8*, i8** %26, align 8
  %1727 = icmp ne i8* %1726, null
  %.14.212 = select i1 %1727, i32 1, i32 0
  %1728 = select i1 %1727, i1 true, i1 false
  br i1 %1728, label %.lr.ph6.preheader.213, label %._crit_edge.220

.lr.ph6.preheader.213:                            ; preds = %1724
  br label %.lr.ph6.216

.lr.ph6.216:                                      ; preds = %.lr.ph6.216, %.lr.ph6.preheader.213
  %.15.214 = phi i32 [ %.1.215, %.lr.ph6.216 ], [ %.14.212, %.lr.ph6.preheader.213 ]
  %1729 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1730 = sext i32 %.15.214 to i64
  %1731 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1730
  store i8* %1729, i8** %1731, align 8
  call void @unroll_loop(i32 45)
  %1732 = sext i32 %.15.214 to i64
  %1733 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1732
  %1734 = load i8*, i8** %1733, align 8
  %1735 = icmp ne i8* %1734, null
  %1736 = add nsw i32 %.15.214, 1
  %1737 = icmp slt i32 %1736, 30
  %.1.215 = select i1 %1735, i32 %1736, i32 %.15.214
  %1738 = select i1 %1735, i1 %1737, i1 false
  br i1 %1738, label %.lr.ph6.216, label %._crit_edge.loopexit.218

._crit_edge.loopexit.218:                         ; preds = %.lr.ph6.216
  %.1.lcssa.ph.217 = phi i32 [ %.1.215, %.lr.ph6.216 ]
  br label %._crit_edge.220

._crit_edge.220:                                  ; preds = %._crit_edge.loopexit.218, %1724
  %.1.lcssa.219 = phi i32 [ %.14.212, %1724 ], [ %.1.lcssa.ph.217, %._crit_edge.loopexit.218 ]
  %1739 = load i8*, i8** %27, align 16
  %1740 = icmp ne i8* %1739, null
  br i1 %1740, label %93, label %1741

; <label>:1741:                                   ; preds = %._crit_edge.220
  call void @__loop_iteration_test___3()
  %1742 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1743 = icmp ne i8* %1742, null
  br i1 %1743, label %1744, label %.outer._crit_edge.loopexit.loopexit

; <label>:1744:                                   ; preds = %1741
  call void @unroll_loop(i32 44)
  %1745 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1746 = icmp ne i8* %1745, null
  br i1 %1746, label %1747, label %1748

; <label>:1747:                                   ; preds = %1744
  store i8 0, i8* %1745, align 1
  br label %1748

; <label>:1748:                                   ; preds = %1747, %1744
  %1749 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1750 = icmp ne i8* %1749, null
  br i1 %1750, label %1751, label %1752

; <label>:1751:                                   ; preds = %1748
  store i8 0, i8* %1749, align 1
  br label %1752

; <label>:1752:                                   ; preds = %1751, %1748
  %1753 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1754 = icmp ne i8* %1753, null
  br i1 %1754, label %1755, label %1756

; <label>:1755:                                   ; preds = %1752
  store i8 0, i8* %1753, align 1
  br label %1756

; <label>:1756:                                   ; preds = %1755, %1752
  %1757 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1758 = icmp ne i8* %1757, null
  br i1 %1758, label %1759, label %1760

; <label>:1759:                                   ; preds = %1756
  store i8 0, i8* %1757, align 1
  br label %1760

; <label>:1760:                                   ; preds = %1759, %1756
  %1761 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1761, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1762 = load i8*, i8** %26, align 8
  %1763 = icmp ne i8* %1762, null
  %.14.322 = select i1 %1763, i32 1, i32 0
  %1764 = select i1 %1763, i1 true, i1 false
  br i1 %1764, label %.lr.ph6.preheader.323, label %._crit_edge.330

.lr.ph6.preheader.323:                            ; preds = %1760
  br label %.lr.ph6.326

.lr.ph6.326:                                      ; preds = %.lr.ph6.326, %.lr.ph6.preheader.323
  %.15.324 = phi i32 [ %.1.325, %.lr.ph6.326 ], [ %.14.322, %.lr.ph6.preheader.323 ]
  %1765 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1766 = sext i32 %.15.324 to i64
  %1767 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1766
  store i8* %1765, i8** %1767, align 8
  call void @unroll_loop(i32 45)
  %1768 = sext i32 %.15.324 to i64
  %1769 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1768
  %1770 = load i8*, i8** %1769, align 8
  %1771 = icmp ne i8* %1770, null
  %1772 = add nsw i32 %.15.324, 1
  %1773 = icmp slt i32 %1772, 30
  %.1.325 = select i1 %1771, i32 %1772, i32 %.15.324
  %1774 = select i1 %1771, i1 %1773, i1 false
  br i1 %1774, label %.lr.ph6.326, label %._crit_edge.loopexit.328

._crit_edge.loopexit.328:                         ; preds = %.lr.ph6.326
  %.1.lcssa.ph.327 = phi i32 [ %.1.325, %.lr.ph6.326 ]
  br label %._crit_edge.330

._crit_edge.330:                                  ; preds = %._crit_edge.loopexit.328, %1760
  %.1.lcssa.329 = phi i32 [ %.14.322, %1760 ], [ %.1.lcssa.ph.327, %._crit_edge.loopexit.328 ]
  %1775 = load i8*, i8** %27, align 16
  %1776 = icmp ne i8* %1775, null
  br i1 %1776, label %93, label %1777

; <label>:1777:                                   ; preds = %._crit_edge.330
  call void @__loop_iteration_test___3()
  %1778 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1779 = icmp ne i8* %1778, null
  br i1 %1779, label %1780, label %.outer._crit_edge.loopexit.loopexit

; <label>:1780:                                   ; preds = %1777
  call void @unroll_loop(i32 44)
  %1781 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1782 = icmp ne i8* %1781, null
  br i1 %1782, label %1783, label %1784

; <label>:1783:                                   ; preds = %1780
  store i8 0, i8* %1781, align 1
  br label %1784

; <label>:1784:                                   ; preds = %1783, %1780
  %1785 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1786 = icmp ne i8* %1785, null
  br i1 %1786, label %1787, label %1788

; <label>:1787:                                   ; preds = %1784
  store i8 0, i8* %1785, align 1
  br label %1788

; <label>:1788:                                   ; preds = %1787, %1784
  %1789 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1790 = icmp ne i8* %1789, null
  br i1 %1790, label %1791, label %1792

; <label>:1791:                                   ; preds = %1788
  store i8 0, i8* %1789, align 1
  br label %1792

; <label>:1792:                                   ; preds = %1791, %1788
  %1793 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1794 = icmp ne i8* %1793, null
  br i1 %1794, label %1795, label %1796

; <label>:1795:                                   ; preds = %1792
  store i8 0, i8* %1793, align 1
  br label %1796

; <label>:1796:                                   ; preds = %1795, %1792
  %1797 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1797, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1798 = load i8*, i8** %26, align 8
  %1799 = icmp ne i8* %1798, null
  %.14.432 = select i1 %1799, i32 1, i32 0
  %1800 = select i1 %1799, i1 true, i1 false
  br i1 %1800, label %.lr.ph6.preheader.433, label %._crit_edge.440

.lr.ph6.preheader.433:                            ; preds = %1796
  br label %.lr.ph6.436

.lr.ph6.436:                                      ; preds = %.lr.ph6.436, %.lr.ph6.preheader.433
  %.15.434 = phi i32 [ %.1.435, %.lr.ph6.436 ], [ %.14.432, %.lr.ph6.preheader.433 ]
  %1801 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1802 = sext i32 %.15.434 to i64
  %1803 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1802
  store i8* %1801, i8** %1803, align 8
  call void @unroll_loop(i32 45)
  %1804 = sext i32 %.15.434 to i64
  %1805 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1804
  %1806 = load i8*, i8** %1805, align 8
  %1807 = icmp ne i8* %1806, null
  %1808 = add nsw i32 %.15.434, 1
  %1809 = icmp slt i32 %1808, 30
  %.1.435 = select i1 %1807, i32 %1808, i32 %.15.434
  %1810 = select i1 %1807, i1 %1809, i1 false
  br i1 %1810, label %.lr.ph6.436, label %._crit_edge.loopexit.438

._crit_edge.loopexit.438:                         ; preds = %.lr.ph6.436
  %.1.lcssa.ph.437 = phi i32 [ %.1.435, %.lr.ph6.436 ]
  br label %._crit_edge.440

._crit_edge.440:                                  ; preds = %._crit_edge.loopexit.438, %1796
  %.1.lcssa.439 = phi i32 [ %.14.432, %1796 ], [ %.1.lcssa.ph.437, %._crit_edge.loopexit.438 ]
  %1811 = load i8*, i8** %27, align 16
  %1812 = icmp ne i8* %1811, null
  br i1 %1812, label %93, label %1813

; <label>:1813:                                   ; preds = %._crit_edge.440
  call void @__loop_iteration_test___3()
  %1814 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1815 = icmp ne i8* %1814, null
  br i1 %1815, label %1816, label %.outer._crit_edge.loopexit.loopexit

; <label>:1816:                                   ; preds = %1813
  call void @unroll_loop(i32 44)
  %1817 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1818 = icmp ne i8* %1817, null
  br i1 %1818, label %1819, label %1820

; <label>:1819:                                   ; preds = %1816
  store i8 0, i8* %1817, align 1
  br label %1820

; <label>:1820:                                   ; preds = %1819, %1816
  %1821 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1822 = icmp ne i8* %1821, null
  br i1 %1822, label %1823, label %1824

; <label>:1823:                                   ; preds = %1820
  store i8 0, i8* %1821, align 1
  br label %1824

; <label>:1824:                                   ; preds = %1823, %1820
  %1825 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1826 = icmp ne i8* %1825, null
  br i1 %1826, label %1827, label %1828

; <label>:1827:                                   ; preds = %1824
  store i8 0, i8* %1825, align 1
  br label %1828

; <label>:1828:                                   ; preds = %1827, %1824
  %1829 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1830 = icmp ne i8* %1829, null
  br i1 %1830, label %1831, label %1832

; <label>:1831:                                   ; preds = %1828
  store i8 0, i8* %1829, align 1
  br label %1832

; <label>:1832:                                   ; preds = %1831, %1828
  %1833 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1833, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1834 = load i8*, i8** %26, align 8
  %1835 = icmp ne i8* %1834, null
  %.14.542 = select i1 %1835, i32 1, i32 0
  %1836 = select i1 %1835, i1 true, i1 false
  br i1 %1836, label %.lr.ph6.preheader.543, label %._crit_edge.550

.lr.ph6.preheader.543:                            ; preds = %1832
  br label %.lr.ph6.546

.lr.ph6.546:                                      ; preds = %.lr.ph6.546, %.lr.ph6.preheader.543
  %.15.544 = phi i32 [ %.1.545, %.lr.ph6.546 ], [ %.14.542, %.lr.ph6.preheader.543 ]
  %1837 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1838 = sext i32 %.15.544 to i64
  %1839 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1838
  store i8* %1837, i8** %1839, align 8
  call void @unroll_loop(i32 45)
  %1840 = sext i32 %.15.544 to i64
  %1841 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1840
  %1842 = load i8*, i8** %1841, align 8
  %1843 = icmp ne i8* %1842, null
  %1844 = add nsw i32 %.15.544, 1
  %1845 = icmp slt i32 %1844, 30
  %.1.545 = select i1 %1843, i32 %1844, i32 %.15.544
  %1846 = select i1 %1843, i1 %1845, i1 false
  br i1 %1846, label %.lr.ph6.546, label %._crit_edge.loopexit.548

._crit_edge.loopexit.548:                         ; preds = %.lr.ph6.546
  %.1.lcssa.ph.547 = phi i32 [ %.1.545, %.lr.ph6.546 ]
  br label %._crit_edge.550

._crit_edge.550:                                  ; preds = %._crit_edge.loopexit.548, %1832
  %.1.lcssa.549 = phi i32 [ %.14.542, %1832 ], [ %.1.lcssa.ph.547, %._crit_edge.loopexit.548 ]
  %1847 = load i8*, i8** %27, align 16
  %1848 = icmp ne i8* %1847, null
  br i1 %1848, label %93, label %1849

; <label>:1849:                                   ; preds = %._crit_edge.550
  call void @__loop_iteration_test___3()
  %1850 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1851 = icmp ne i8* %1850, null
  br i1 %1851, label %1852, label %.outer._crit_edge.loopexit.loopexit

; <label>:1852:                                   ; preds = %1849
  call void @unroll_loop(i32 44)
  %1853 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1854 = icmp ne i8* %1853, null
  br i1 %1854, label %1855, label %1856

; <label>:1855:                                   ; preds = %1852
  store i8 0, i8* %1853, align 1
  br label %1856

; <label>:1856:                                   ; preds = %1855, %1852
  %1857 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1858 = icmp ne i8* %1857, null
  br i1 %1858, label %1859, label %1860

; <label>:1859:                                   ; preds = %1856
  store i8 0, i8* %1857, align 1
  br label %1860

; <label>:1860:                                   ; preds = %1859, %1856
  %1861 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1862 = icmp ne i8* %1861, null
  br i1 %1862, label %1863, label %1864

; <label>:1863:                                   ; preds = %1860
  store i8 0, i8* %1861, align 1
  br label %1864

; <label>:1864:                                   ; preds = %1863, %1860
  %1865 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1866 = icmp ne i8* %1865, null
  br i1 %1866, label %1867, label %1868

; <label>:1867:                                   ; preds = %1864
  store i8 0, i8* %1865, align 1
  br label %1868

; <label>:1868:                                   ; preds = %1867, %1864
  %1869 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1869, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1870 = load i8*, i8** %26, align 8
  %1871 = icmp ne i8* %1870, null
  %.14.652 = select i1 %1871, i32 1, i32 0
  %1872 = select i1 %1871, i1 true, i1 false
  br i1 %1872, label %.lr.ph6.preheader.653, label %._crit_edge.660

.lr.ph6.preheader.653:                            ; preds = %1868
  br label %.lr.ph6.656

.lr.ph6.656:                                      ; preds = %.lr.ph6.656, %.lr.ph6.preheader.653
  %.15.654 = phi i32 [ %.1.655, %.lr.ph6.656 ], [ %.14.652, %.lr.ph6.preheader.653 ]
  %1873 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1874 = sext i32 %.15.654 to i64
  %1875 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1874
  store i8* %1873, i8** %1875, align 8
  call void @unroll_loop(i32 45)
  %1876 = sext i32 %.15.654 to i64
  %1877 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1876
  %1878 = load i8*, i8** %1877, align 8
  %1879 = icmp ne i8* %1878, null
  %1880 = add nsw i32 %.15.654, 1
  %1881 = icmp slt i32 %1880, 30
  %.1.655 = select i1 %1879, i32 %1880, i32 %.15.654
  %1882 = select i1 %1879, i1 %1881, i1 false
  br i1 %1882, label %.lr.ph6.656, label %._crit_edge.loopexit.658

._crit_edge.loopexit.658:                         ; preds = %.lr.ph6.656
  %.1.lcssa.ph.657 = phi i32 [ %.1.655, %.lr.ph6.656 ]
  br label %._crit_edge.660

._crit_edge.660:                                  ; preds = %._crit_edge.loopexit.658, %1868
  %.1.lcssa.659 = phi i32 [ %.14.652, %1868 ], [ %.1.lcssa.ph.657, %._crit_edge.loopexit.658 ]
  %1883 = load i8*, i8** %27, align 16
  %1884 = icmp ne i8* %1883, null
  br i1 %1884, label %93, label %1885

; <label>:1885:                                   ; preds = %._crit_edge.660
  call void @__loop_iteration_test___3()
  %1886 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1887 = icmp ne i8* %1886, null
  br i1 %1887, label %1888, label %.outer._crit_edge.loopexit.loopexit

; <label>:1888:                                   ; preds = %1885
  call void @unroll_loop(i32 44)
  %1889 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1890 = icmp ne i8* %1889, null
  br i1 %1890, label %1891, label %1892

; <label>:1891:                                   ; preds = %1888
  store i8 0, i8* %1889, align 1
  br label %1892

; <label>:1892:                                   ; preds = %1891, %1888
  %1893 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1894 = icmp ne i8* %1893, null
  br i1 %1894, label %1895, label %1896

; <label>:1895:                                   ; preds = %1892
  store i8 0, i8* %1893, align 1
  br label %1896

; <label>:1896:                                   ; preds = %1895, %1892
  %1897 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1898 = icmp ne i8* %1897, null
  br i1 %1898, label %1899, label %1900

; <label>:1899:                                   ; preds = %1896
  store i8 0, i8* %1897, align 1
  br label %1900

; <label>:1900:                                   ; preds = %1899, %1896
  %1901 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1902 = icmp ne i8* %1901, null
  br i1 %1902, label %1903, label %1904

; <label>:1903:                                   ; preds = %1900
  store i8 0, i8* %1901, align 1
  br label %1904

; <label>:1904:                                   ; preds = %1903, %1900
  %1905 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1905, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1906 = load i8*, i8** %26, align 8
  %1907 = icmp ne i8* %1906, null
  %.14.762 = select i1 %1907, i32 1, i32 0
  %1908 = select i1 %1907, i1 true, i1 false
  br i1 %1908, label %.lr.ph6.preheader.763, label %._crit_edge.770

.lr.ph6.preheader.763:                            ; preds = %1904
  br label %.lr.ph6.766

.lr.ph6.766:                                      ; preds = %.lr.ph6.766, %.lr.ph6.preheader.763
  %.15.764 = phi i32 [ %.1.765, %.lr.ph6.766 ], [ %.14.762, %.lr.ph6.preheader.763 ]
  %1909 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1910 = sext i32 %.15.764 to i64
  %1911 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1910
  store i8* %1909, i8** %1911, align 8
  call void @unroll_loop(i32 45)
  %1912 = sext i32 %.15.764 to i64
  %1913 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1912
  %1914 = load i8*, i8** %1913, align 8
  %1915 = icmp ne i8* %1914, null
  %1916 = add nsw i32 %.15.764, 1
  %1917 = icmp slt i32 %1916, 30
  %.1.765 = select i1 %1915, i32 %1916, i32 %.15.764
  %1918 = select i1 %1915, i1 %1917, i1 false
  br i1 %1918, label %.lr.ph6.766, label %._crit_edge.loopexit.768

._crit_edge.loopexit.768:                         ; preds = %.lr.ph6.766
  %.1.lcssa.ph.767 = phi i32 [ %.1.765, %.lr.ph6.766 ]
  br label %._crit_edge.770

._crit_edge.770:                                  ; preds = %._crit_edge.loopexit.768, %1904
  %.1.lcssa.769 = phi i32 [ %.14.762, %1904 ], [ %.1.lcssa.ph.767, %._crit_edge.loopexit.768 ]
  %1919 = load i8*, i8** %27, align 16
  %1920 = icmp ne i8* %1919, null
  br i1 %1920, label %93, label %1921

; <label>:1921:                                   ; preds = %._crit_edge.770
  call void @__loop_iteration_test___3()
  %1922 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit
}

declare void @__loop_termination_test___3()

declare void @__loop_iteration_test___3()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config_clone_clone_clone_clone(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 2, 0
  br i1 true, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = icmp ne i64 4389383, 0
  %12 = icmp ne %struct._IO_FILE* null, null
  br i1 true, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = bitcast [27 x i8]* @22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 27, i1 false)
  %18 = icmp ne i64 244262, 0
  %19 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %51 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 48)
  br label %55

; <label>:52:                                     ; preds = %._crit_edge
  call void @__loop_iteration_test___3()
  %53 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %54 = icmp ne i8* %53, null
  br i1 %54, label %1671, label %.outer._crit_edge.loopexit.loopexit

; <label>:55:                                     ; preds = %.lr.ph
  call void @unroll_loop(i32 44)
  %56 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %57 = icmp ne i64 244287, 0
  %58 = icmp ne i8* %56, null
  br i1 true, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %56, align 1
  br label %60

; <label>:60:                                     ; preds = %59, %55
  %61 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %62 = icmp ne i64 0, 0
  %63 = icmp ne i8* null, null
  br i1 false, label %64, label %65

; <label>:64:                                     ; preds = %60
  store i8 0, i8* null, align 1
  br label %65

; <label>:65:                                     ; preds = %64, %60
  %66 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %67 = icmp ne i64 0, 0
  %68 = icmp ne i8* null, null
  br i1 false, label %69, label %70

; <label>:69:                                     ; preds = %65
  store i8 0, i8* null, align 1
  br label %70

; <label>:70:                                     ; preds = %69, %65
  %71 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %72 = icmp ne i64 0, 0
  %73 = icmp ne i8* null, null
  br i1 false, label %74, label %75

; <label>:74:                                     ; preds = %70
  store i8 0, i8* null, align 1
  br label %75

; <label>:75:                                     ; preds = %74, %70
  %76 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %77 = load i8*, i8** %26, align 8
  %78 = icmp ne i64 10000581, 0
  %79 = icmp ne i8* %77, null
  %.14 = select i1 true, i32 1, i32 0
  %80 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %75
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6.preheader
  call void @__loop_iteration_test___4()
  %81 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %82 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @24, i32 0, i32 0), i8** %82, align 8
  call void @unroll_loop(i32 45)
  %83 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %84 = load i8*, i8** %83, align 8
  %85 = icmp ne i64 10000592, 0
  %86 = icmp ne i8* %84, null
  %.1 = select i1 true, i32 2, i32 1
  %87 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.13, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6.19, %.lr.ph6.18, %.lr.ph6.17, %.lr.ph6.1626, %.lr.ph6.15, %.lr.ph6.14, %.lr.ph6.1323, %.lr.ph6.12, %.lr.ph6.11, %.lr.ph6.10, %.lr.ph6.9, %.lr.ph6.8, %.lr.ph6.721, %.lr.ph6.618, %.lr.ph6.515, %.lr.ph6.412, %.lr.ph6.39, %.lr.ph6.26, %.lr.ph6.13, %.lr.ph6
  %.1.lcssa.ph = phi i32 [ 2, %.lr.ph6 ], [ 3, %.lr.ph6.13 ], [ 4, %.lr.ph6.26 ], [ 4, %.lr.ph6.39 ], [ %.1.411, %.lr.ph6.412 ], [ %.1.514, %.lr.ph6.515 ], [ %.1.617, %.lr.ph6.618 ], [ %.1.720, %.lr.ph6.721 ], [ %.1.8, %.lr.ph6.8 ], [ %.1.9, %.lr.ph6.9 ], [ %.1.10, %.lr.ph6.10 ], [ %.1.11, %.lr.ph6.11 ], [ %.1.1222, %.lr.ph6.12 ], [ %.1.13, %.lr.ph6.1323 ], [ %.1.14, %.lr.ph6.14 ], [ %.1.1525, %.lr.ph6.15 ], [ %.1.16, %.lr.ph6.1626 ], [ %.1.17, %.lr.ph6.17 ], [ %.1.18, %.lr.ph6.18 ], [ %.1.19, %.lr.ph6.19 ]
  call void @__loop_termination_test___4()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %75
  %.1.lcssa = phi i32 [ 1, %75 ], [ 4, %._crit_edge.loopexit ]
  %88 = load i8*, i8** %27, align 16
  %89 = icmp ne i64 10000581, 0
  %90 = icmp ne i8* %88, null
  br i1 true, label %91, label %52

; <label>:91:                                     ; preds = %._crit_edge.770, %._crit_edge.660, %._crit_edge.550, %._crit_edge.440, %._crit_edge.330, %._crit_edge.220, %._crit_edge.110, %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ 4, %._crit_edge ], [ %.1.lcssa.19, %._crit_edge.110 ], [ %.1.lcssa.219, %._crit_edge.220 ], [ %.1.lcssa.329, %._crit_edge.330 ], [ %.1.lcssa.439, %._crit_edge.440 ], [ %.1.lcssa.549, %._crit_edge.550 ], [ %.1.lcssa.659, %._crit_edge.660 ], [ %.1.lcssa.769, %._crit_edge.770 ]
  %.lcssa = phi i32 [ 1, %._crit_edge ], [ 2, %._crit_edge.110 ], [ 3, %._crit_edge.220 ], [ 4, %._crit_edge.330 ], [ 5, %._crit_edge.440 ], [ 6, %._crit_edge.550 ], [ 7, %._crit_edge.660 ], [ 8, %._crit_edge.770 ]
  call void @__loop_termination_test___3()
  %92 = load i8*, i8** %28, align 16
  %93 = call i32 @strcasecmp(i8* %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %94 = icmp ne i32 0, 0
  br i1 false, label %117, label %95

; <label>:95:                                     ; preds = %91
  %96 = icmp slt i32 4, 2
  %97 = icmp sgt i32 4, 4
  %or.cond = or i1 false, false
  br i1 false, label %98, label %99

; <label>:98:                                     ; preds = %95
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:99:                                     ; preds = %95
  %100 = icmp sgt i32 4, 2
  br i1 true, label %101, label %113

; <label>:101:                                    ; preds = %99
  %102 = load i8*, i8** %34, align 8
  %103 = call i32 @strcasecmp(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %104 = icmp ne i32 0, 0
  br i1 false, label %111, label %105

; <label>:105:                                    ; preds = %101
  %106 = icmp sge i32 4, 3
  br i1 true, label %107, label %110

; <label>:107:                                    ; preds = %105
  %108 = load i8*, i8** %40, align 8
  %109 = call i32 @atoi(i8* %108) #8
  br label %113

; <label>:110:                                    ; preds = %105
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:111:                                    ; preds = %101
  %112 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 1, i8* %112)
  br label %.outer.backedge

; <label>:113:                                    ; preds = %107, %99
  %.08 = phi i32 [ 53, %107 ], [ 53, %99 ]
  %114 = load i8*, i8** %35, align 8
  %115 = call i32 @fwd_add_clone(i8* %114, i32 53)
  %116 = icmp eq i32 0, -1
  br i1 false, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:117:                                    ; preds = %91
  %118 = load i8*, i8** %29, align 16
  %119 = call i32 @strcasecmp(i8* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %132, label %121

; <label>:121:                                    ; preds = %117
  %122 = icmp ne i32 4, 2
  br i1 %122, label %123, label %124

; <label>:123:                                    ; preds = %121
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:124:                                    ; preds = %121
  %125 = load i8*, i8** %32, align 8
  %126 = call i32 @conv_trick_conf(i8* %125)
  %127 = icmp ne i32 %126, 0
  %128 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %129 = load i8*, i8** %33, align 8
  br i1 %127, label %130, label %131

; <label>:130:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:131:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:132:                                    ; preds = %117
  %133 = load i8*, i8** %30, align 16
  %134 = call i32 @strcasecmp(i8* %133, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %140, label %136

; <label>:136:                                    ; preds = %132
  %137 = icmp ne i32 4, 2
  br i1 %137, label %138, label %139

; <label>:138:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:139:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:140:                                    ; preds = %132
  %141 = load i8*, i8** %31, align 16
  %142 = call i32 @strcasecmp(i8* %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %150, label %144

; <label>:144:                                    ; preds = %140
  %145 = icmp ne i32 4, 2
  br i1 %145, label %146, label %147

; <label>:146:                                    ; preds = %144
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:147:                                    ; preds = %144
  %148 = load i8*, i8** %39, align 8
  %149 = call i32 @atoi(i8* %148) #8
  store i32 %149, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:150:                                    ; preds = %140
  %151 = load i8*, i8** %36, align 16
  %152 = call i32 @strcasecmp(i8* %151, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %160, label %154

; <label>:154:                                    ; preds = %150
  %155 = icmp ne i32 4, 2
  br i1 %155, label %156, label %157

; <label>:156:                                    ; preds = %154
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:157:                                    ; preds = %154
  %158 = load i8*, i8** %42, align 8
  %159 = call noalias i8* @strdup(i8* %158) #9, !track !108
  store i8* %159, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:160:                                    ; preds = %150
  %161 = load i8*, i8** %38, align 16
  %162 = call i32 @strcasecmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %209, label %164

; <label>:164:                                    ; preds = %160
  %165 = icmp slt i32 4, 2
  br i1 %165, label %166, label %167

; <label>:166:                                    ; preds = %164
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 1)
  br label %167

; <label>:167:                                    ; preds = %166, %164
  %.7 = phi i32 [ 1, %166 ], [ 0, %164 ]
  br label %168

; <label>:168:                                    ; preds = %168, %167
  %lsr.iv = phi i64 [ %lsr.iv.next, %168 ], [ -1, %167 ]
  %169 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %170 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %170
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %171 = load i8*, i8** %scevgep, align 8
  %172 = icmp ne i8* %171, null
  %173 = icmp ult i64 %169, 30
  %spec.select = select i1 %172, i1 %173, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %168, label %174

; <label>:174:                                    ; preds = %168
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %168 ]
  %175 = trunc i64 %.01.lcssa.wide to i32
  %176 = add nsw i32 %175, 4
  %177 = sub nsw i32 %176, 1
  %178 = icmp sgt i32 %177, 30
  br i1 %178, label %179, label %181

; <label>:179:                                    ; preds = %174
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 1, i32 30)
  %180 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:181:                                    ; preds = %174
  %182 = sub nsw i32 4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 1, i32 %182)
  %183 = add nsw i32 4, -1
  %184 = add nsw i32 %175, 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %185
  store i8* null, i8** %186, align 8
  %187 = icmp ne i32 %183, 0
  br i1 %187, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %181
  %188 = add i32 4, -1
  %189 = sext i32 %188 to i64
  %190 = sext i32 %175 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %189
  %191 = shl i64 %189, 1
  %192 = shl i64 %190, 1
  %193 = add i64 %191, %192
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %193
  %194 = sub i32 1, 4
  %195 = zext i32 %194 to i64
  br label %196

; <label>:196:                                    ; preds = %201, %.lr.ph16
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %201 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %197 = load i8*, i8** %scevgep7, align 8
  %198 = call i32 @strcmp(i8* %197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %201, label %200

; <label>:200:                                    ; preds = %196
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:201:                                    ; preds = %196
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %202 = load i8*, i8** %scevgep8, align 8
  %203 = call noalias i8* @strdup(i8* %202) #9, !track !109
  %204 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %204
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %203, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %205 = icmp ne i32 %194, %tmp
  br i1 %205, label %196, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %201
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %200, %181
  %206 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %207 = icmp ne i8* %206, null
  br i1 %207, label %208, label %.outer.backedge

; <label>:208:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:209:                                    ; preds = %160
  %210 = load i8*, i8** %41, align 16
  %211 = call i32 @strcasecmp(i8* %210, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %219, label %213

; <label>:213:                                    ; preds = %209
  %214 = icmp ne i32 4, 2
  br i1 %214, label %215, label %216

; <label>:215:                                    ; preds = %213
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:216:                                    ; preds = %213
  %217 = load i8*, i8** %45, align 8
  %218 = call i32 @atoi(i8* %217) #8
  store i32 %218, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:219:                                    ; preds = %209
  %220 = load i8*, i8** %43, align 16
  %221 = call i32 @strcasecmp(i8* %220, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %240, label %223

; <label>:223:                                    ; preds = %219
  %224 = icmp ne i32 4, 4
  br i1 %224, label %225, label %226

; <label>:225:                                    ; preds = %223
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:226:                                    ; preds = %223
  %227 = load i8*, i8** %46, align 8
  %228 = load i8*, i8** %47, align 16
  %229 = load i8*, i8** %48, align 8
  %230 = call i32 @atoi(i8* %229) #8
  %231 = call i32 @conv_scoped_conf(i8* %227, i8* %228, i32 %230)
  %232 = icmp ne i32 %231, 0
  %233 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %234 = load i8*, i8** %49, align 8
  %235 = load i8*, i8** %50, align 16
  %236 = load i8*, i8** %51, align 8
  br i1 %232, label %237, label %238

; <label>:237:                                    ; preds = %226
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i8* %236)
  br label %.outer.backedge

; <label>:238:                                    ; preds = %226
  %239 = call i32 @atoi(i8* %236) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i32 %239)
  br label %.outer.backedge

; <label>:240:                                    ; preds = %219
  %241 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 1, i8* %241)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %240, %238, %237, %225, %216, %215, %208, %.loopexit, %179, %157, %156, %147, %146, %139, %138, %131, %130, %123, %113, %111, %110, %98
  %.03.ph.be = phi i32 [ 1, %110 ], [ 1, %111 ], [ 1, %98 ], [ 0, %113 ], [ 1, %123 ], [ 1, %130 ], [ 0, %131 ], [ 1, %138 ], [ 0, %139 ], [ 1, %146 ], [ 0, %147 ], [ 1, %156 ], [ 0, %157 ], [ %180, %179 ], [ %.7, %208 ], [ %.7, %.loopexit ], [ 1, %215 ], [ 0, %216 ], [ 1, %240 ], [ 1, %225 ], [ 1, %237 ], [ 0, %238 ]
  call void @__loop_iteration_test___2()
  %242 = bitcast [9 x i8]* @27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %242, i64 9, i1 false)
  %243 = icmp ne i64 244262, 0
  %244 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.1, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit.loopexit:              ; preds = %1920, %1884, %1848, %1812, %1776, %1740, %1704, %52
  call void @__loop_termination_test___3()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit1:             ; preds = %285
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit2:             ; preds = %488
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit3:             ; preds = %691
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit4:             ; preds = %894
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit5:             ; preds = %1097
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit6:             ; preds = %1300
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit7:             ; preds = %1503
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit:                       ; preds = %.outer._crit_edge.loopexit.loopexit7, %.outer._crit_edge.loopexit.loopexit6, %.outer._crit_edge.loopexit.loopexit5, %.outer._crit_edge.loopexit.loopexit4, %.outer._crit_edge.loopexit.loopexit3, %.outer._crit_edge.loopexit.loopexit2, %.outer._crit_edge.loopexit.loopexit1, %.outer._crit_edge.loopexit.loopexit
  %.03.lcssa.ph = phi i32 [ 0, %.outer._crit_edge.loopexit.loopexit ], [ 0, %.outer._crit_edge.loopexit.loopexit1 ], [ %.03.ph.be.1, %.outer._crit_edge.loopexit.loopexit2 ], [ %.03.ph.be.2, %.outer._crit_edge.loopexit.loopexit3 ], [ %.03.ph.be.3, %.outer._crit_edge.loopexit.loopexit4 ], [ %.03.ph.be.4, %.outer._crit_edge.loopexit.loopexit5 ], [ %.03.ph.be.5, %.outer._crit_edge.loopexit.loopexit6 ], [ %.03.ph.be.6, %.outer._crit_edge.loopexit.loopexit7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge.7, %.outer.backedge.6, %.outer.backedge.5, %.outer.backedge.4, %.outer.backedge.3, %.outer.backedge.2, %.outer.backedge.1, %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ 0, %.outer.backedge ], [ %.03.ph.be.1, %.outer.backedge.1 ], [ %.03.ph.be.2, %.outer.backedge.2 ], [ %.03.ph.be.3, %.outer.backedge.3 ], [ %.03.ph.be.4, %.outer.backedge.4 ], [ %.03.ph.be.5, %.outer.backedge.5 ], [ %.03.ph.be.6, %.outer.backedge.6 ], [ %.03.ph.be.7, %.outer.backedge.7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.03.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %245 = call i32 @fclose(%struct._IO_FILE* null)
  %246 = icmp ne i32 %.03.lcssa, 0
  br i1 %246, label %247, label %249

; <label>:247:                                    ; preds = %.outer._crit_edge
  %248 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %248, i32 %.03.lcssa)
  br label %.loopexit1

; <label>:249:                                    ; preds = %.outer._crit_edge
  %250 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %250)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %1526, %1323, %1120, %917, %714, %511, %308, %113
  %.0.ph = phi i32 [ -1, %113 ], [ -1, %308 ], [ -1, %511 ], [ -1, %714 ], [ -1, %917 ], [ -1, %1120 ], [ -1, %1323 ], [ -1, %1526 ]
  call void @__loop_termination_test___2()
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %249, %247, %13
  %.0 = phi i32 [ -1, %247 ], [ 0, %249 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0

.lr.ph.1:                                         ; preds = %.outer.backedge
  call void @unroll_loop(i32 48)
  br label %251

; <label>:251:                                    ; preds = %285, %.lr.ph.1
  %.0712.1 = phi i32 [ 1, %.lr.ph.1 ], [ %252, %285 ]
  call void @unroll_loop(i32 44)
  %252 = add nsw i32 %.0712.1, 1
  %253 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %254 = icmp ne i8* %253, null
  br i1 %254, label %255, label %256

; <label>:255:                                    ; preds = %251
  store i8 0, i8* %253, align 1
  br label %256

; <label>:256:                                    ; preds = %255, %251
  %257 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %258 = icmp ne i8* %257, null
  br i1 %258, label %259, label %260

; <label>:259:                                    ; preds = %256
  store i8 0, i8* %257, align 1
  br label %260

; <label>:260:                                    ; preds = %259, %256
  %261 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %262 = icmp ne i8* %261, null
  br i1 %262, label %263, label %264

; <label>:263:                                    ; preds = %260
  store i8 0, i8* %261, align 1
  br label %264

; <label>:264:                                    ; preds = %263, %260
  %265 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %266 = icmp ne i8* %265, null
  br i1 %266, label %267, label %268

; <label>:267:                                    ; preds = %264
  store i8 0, i8* %265, align 1
  br label %268

; <label>:268:                                    ; preds = %267, %264
  %269 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %269, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %270 = load i8*, i8** %26, align 8
  %271 = icmp ne i8* %270, null
  %.14.1 = select i1 %271, i32 1, i32 0
  %272 = select i1 %271, i1 true, i1 false
  br i1 %272, label %.lr.ph6.preheader.1, label %._crit_edge.1

.lr.ph6.preheader.1:                              ; preds = %268
  br label %.lr.ph6.1

.lr.ph6.1:                                        ; preds = %.lr.ph6.1, %.lr.ph6.preheader.1
  %.15.1 = phi i32 [ %.1.1, %.lr.ph6.1 ], [ %.14.1, %.lr.ph6.preheader.1 ]
  %273 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %274 = sext i32 %.15.1 to i64
  %275 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %274
  store i8* %273, i8** %275, align 8
  call void @unroll_loop(i32 45)
  %276 = sext i32 %.15.1 to i64
  %277 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %276
  %278 = load i8*, i8** %277, align 8
  %279 = icmp ne i8* %278, null
  %280 = add nsw i32 %.15.1, 1
  %281 = icmp slt i32 %280, 30
  %.1.1 = select i1 %279, i32 %280, i32 %.15.1
  %282 = select i1 %279, i1 %281, i1 false
  br i1 %282, label %.lr.ph6.1, label %._crit_edge.loopexit.1

._crit_edge.loopexit.1:                           ; preds = %.lr.ph6.1
  %.1.lcssa.ph.1 = phi i32 [ %.1.1, %.lr.ph6.1 ]
  br label %._crit_edge.1

._crit_edge.1:                                    ; preds = %._crit_edge.loopexit.1, %268
  %.1.lcssa.1 = phi i32 [ %.14.1, %268 ], [ %.1.lcssa.ph.1, %._crit_edge.loopexit.1 ]
  %283 = load i8*, i8** %27, align 16
  %284 = icmp ne i8* %283, null
  br i1 %284, label %288, label %285

; <label>:285:                                    ; preds = %._crit_edge.1
  %286 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %287 = icmp ne i8* %286, null
  br i1 %287, label %251, label %.outer._crit_edge.loopexit.loopexit1

; <label>:288:                                    ; preds = %._crit_edge.1
  %.1.lcssa.lcssa.1 = phi i32 [ %.1.lcssa.1, %._crit_edge.1 ]
  %.lcssa.1 = phi i32 [ %252, %._crit_edge.1 ]
  %289 = load i8*, i8** %28, align 16
  %290 = call i32 @strcasecmp(i8* %289, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %317, label %292

; <label>:292:                                    ; preds = %288
  %293 = icmp slt i32 %.1.lcssa.lcssa.1, 2
  %294 = icmp sgt i32 %.1.lcssa.lcssa.1, 4
  %or.cond.1 = or i1 %293, %294
  br i1 %or.cond.1, label %315, label %295

; <label>:295:                                    ; preds = %292
  %296 = icmp sgt i32 %.1.lcssa.lcssa.1, 2
  br i1 %296, label %297, label %308

; <label>:297:                                    ; preds = %295
  %298 = load i8*, i8** %34, align 8
  %299 = call i32 @strcasecmp(i8* %298, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %300 = icmp ne i32 %299, 0
  br i1 %300, label %312, label %301

; <label>:301:                                    ; preds = %297
  %302 = icmp sge i32 %.1.lcssa.lcssa.1, 3
  br i1 %302, label %305, label %303

; <label>:303:                                    ; preds = %301
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.1)
  %304 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:305:                                    ; preds = %301
  %306 = load i8*, i8** %40, align 8
  %307 = call i32 @atoi(i8* %306) #8
  br label %308

; <label>:308:                                    ; preds = %305, %295
  %.08.1 = phi i32 [ %307, %305 ], [ 53, %295 ]
  %309 = load i8*, i8** %35, align 8
  %310 = call i32 @fwd_add(i8* %309, i32 %.08.1)
  %311 = icmp eq i32 %310, -1
  br i1 %311, label %.loopexit1.loopexit, label %.outer.backedge.1

; <label>:312:                                    ; preds = %297
  %313 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.1, i8* %313)
  %314 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:315:                                    ; preds = %292
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.1)
  %316 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:317:                                    ; preds = %288
  %318 = load i8*, i8** %29, align 16
  %319 = call i32 @strcasecmp(i8* %318, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %320 = icmp ne i32 %319, 0
  br i1 %320, label %334, label %321

; <label>:321:                                    ; preds = %317
  %322 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %322, label %332, label %323

; <label>:323:                                    ; preds = %321
  %324 = load i8*, i8** %32, align 8
  %325 = call i32 @conv_trick_conf(i8* %324)
  %326 = icmp ne i32 %325, 0
  %327 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %328 = load i8*, i8** %33, align 8
  br i1 %326, label %330, label %329

; <label>:329:                                    ; preds = %323
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %327, i8* %328)
  br label %.outer.backedge.1

; <label>:330:                                    ; preds = %323
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %327, i8* %328)
  %331 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:332:                                    ; preds = %321
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.1)
  %333 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:334:                                    ; preds = %317
  %335 = load i8*, i8** %30, align 16
  %336 = call i32 @strcasecmp(i8* %335, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %337 = icmp ne i32 %336, 0
  br i1 %337, label %343, label %338

; <label>:338:                                    ; preds = %334
  %339 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %339, label %341, label %340

; <label>:340:                                    ; preds = %338
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.1

; <label>:341:                                    ; preds = %338
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.1)
  %342 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:343:                                    ; preds = %334
  %344 = load i8*, i8** %31, align 16
  %345 = call i32 @strcasecmp(i8* %344, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %354, label %347

; <label>:347:                                    ; preds = %343
  %348 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %348, label %352, label %349

; <label>:349:                                    ; preds = %347
  %350 = load i8*, i8** %39, align 8
  %351 = call i32 @atoi(i8* %350) #8
  store i32 %351, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.1

; <label>:352:                                    ; preds = %347
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.1)
  %353 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:354:                                    ; preds = %343
  %355 = load i8*, i8** %36, align 16
  %356 = call i32 @strcasecmp(i8* %355, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %357 = icmp ne i32 %356, 0
  br i1 %357, label %365, label %358

; <label>:358:                                    ; preds = %354
  %359 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %359, label %363, label %360

; <label>:360:                                    ; preds = %358
  %361 = load i8*, i8** %42, align 8
  %362 = call noalias i8* @strdup(i8* %361) #9, !track !108
  store i8* %362, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.1

; <label>:363:                                    ; preds = %358
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.1)
  %364 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:365:                                    ; preds = %354
  %366 = load i8*, i8** %38, align 16
  %367 = call i32 @strcasecmp(i8* %366, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %368 = icmp ne i32 %367, 0
  br i1 %368, label %415, label %369

; <label>:369:                                    ; preds = %365
  %370 = icmp slt i32 %.1.lcssa.lcssa.1, 2
  br i1 %370, label %371, label %373

; <label>:371:                                    ; preds = %369
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.1)
  %372 = add nsw i32 0, 1
  br label %373

; <label>:373:                                    ; preds = %371, %369
  %.7.1 = phi i32 [ %372, %371 ], [ 0, %369 ]
  br label %374

; <label>:374:                                    ; preds = %374, %373
  %lsr.iv.1 = phi i64 [ %lsr.iv.next.1, %374 ], [ -1, %373 ]
  %375 = add i64 %lsr.iv.1, 1
  call void @unroll_loop(i32 46)
  %376 = shl i64 %lsr.iv.1, 3
  %uglygep.1 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %376
  %uglygep3.1 = bitcast i8* %uglygep.1 to i8**
  %scevgep.1 = getelementptr i8*, i8** %uglygep3.1, i64 111
  %377 = load i8*, i8** %scevgep.1, align 8
  %378 = icmp ne i8* %377, null
  %379 = icmp ult i64 %375, 30
  %spec.select.1 = select i1 %378, i1 %379, i1 false
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %spec.select.1, label %374, label %380

; <label>:380:                                    ; preds = %374
  %.01.lcssa.wide.1 = phi i64 [ %lsr.iv.next.1, %374 ]
  %381 = trunc i64 %.01.lcssa.wide.1 to i32
  %382 = add nsw i32 %381, %.1.lcssa.lcssa.1
  %383 = sub nsw i32 %382, 1
  %384 = icmp sgt i32 %383, 30
  br i1 %384, label %413, label %385

; <label>:385:                                    ; preds = %380
  %386 = sub nsw i32 %.1.lcssa.lcssa.1, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.1, i32 %386)
  %387 = add nsw i32 %.1.lcssa.lcssa.1, -1
  %388 = add nsw i32 %381, %.1.lcssa.lcssa.1
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %389
  store i8* null, i8** %390, align 8
  %391 = icmp ne i32 %387, 0
  br i1 %391, label %.lr.ph16.1, label %.loopexit.1

.lr.ph16.1:                                       ; preds = %385
  %392 = add i32 %.1.lcssa.lcssa.1, -1
  %393 = sext i32 %392 to i64
  %394 = sext i32 %381 to i64
  %scevgep4.1 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %393
  %395 = shl i64 %393, 1
  %396 = shl i64 %394, 1
  %397 = add i64 %395, %396
  %scevgep9.1 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %397
  %398 = sub i32 1, %.1.lcssa.lcssa.1
  %399 = zext i32 %398 to i64
  br label %400

; <label>:400:                                    ; preds = %405, %.lr.ph16.1
  %lsr.iv5.1 = phi i64 [ 0, %.lr.ph16.1 ], [ %lsr.iv.next6.1, %405 ]
  call void @unroll_loop(i32 47)
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %401 = load i8*, i8** %scevgep7.1, align 8
  %402 = call i32 @strcmp(i8* %401, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %403 = icmp ne i32 %402, 0
  br i1 %403, label %405, label %404

; <label>:404:                                    ; preds = %400
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.1

; <label>:405:                                    ; preds = %400
  %scevgep8.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %406 = load i8*, i8** %scevgep8.1, align 8
  %407 = call noalias i8* @strdup(i8* %406) #9, !track !109
  %408 = shl i64 %lsr.iv5.1, 1
  %scevgep10.1 = getelementptr i32, i32* %scevgep9.1, i64 %408
  %scevgep1011.1 = bitcast i32* %scevgep10.1 to i8**
  store i8* %407, i8** %scevgep1011.1, align 8
  %lsr.iv.next6.1 = add nsw i64 %lsr.iv5.1, -1
  %tmp.1 = trunc i64 %lsr.iv.next6.1 to i32
  %409 = icmp ne i32 %398, %tmp.1
  br i1 %409, label %400, label %.loopexit.loopexit.1

.loopexit.loopexit.1:                             ; preds = %405
  br label %.loopexit.1

.loopexit.1:                                      ; preds = %.loopexit.loopexit.1, %404, %385
  %410 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %411 = icmp ne i8* %410, null
  br i1 %411, label %412, label %.outer.backedge.1

; <label>:412:                                    ; preds = %.loopexit.1
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.1

; <label>:413:                                    ; preds = %380
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.1, i32 30)
  %414 = add nsw i32 %.7.1, 1
  br label %.outer.backedge.1

; <label>:415:                                    ; preds = %365
  %416 = load i8*, i8** %41, align 16
  %417 = call i32 @strcasecmp(i8* %416, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %418 = icmp ne i32 %417, 0
  br i1 %418, label %426, label %419

; <label>:419:                                    ; preds = %415
  %420 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %420, label %424, label %421

; <label>:421:                                    ; preds = %419
  %422 = load i8*, i8** %45, align 8
  %423 = call i32 @atoi(i8* %422) #8
  store i32 %423, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.1

; <label>:424:                                    ; preds = %419
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.1)
  %425 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:426:                                    ; preds = %415
  %427 = load i8*, i8** %43, align 16
  %428 = call i32 @strcasecmp(i8* %427, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %429 = icmp ne i32 %428, 0
  br i1 %429, label %449, label %430

; <label>:430:                                    ; preds = %426
  %431 = icmp ne i32 %.1.lcssa.lcssa.1, 4
  br i1 %431, label %447, label %432

; <label>:432:                                    ; preds = %430
  %433 = load i8*, i8** %46, align 8
  %434 = load i8*, i8** %47, align 16
  %435 = load i8*, i8** %48, align 8
  %436 = call i32 @atoi(i8* %435) #8
  %437 = call i32 @conv_scoped_conf(i8* %433, i8* %434, i32 %436)
  %438 = icmp ne i32 %437, 0
  %439 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %440 = load i8*, i8** %49, align 8
  %441 = load i8*, i8** %50, align 16
  %442 = load i8*, i8** %51, align 8
  br i1 %438, label %445, label %443

; <label>:443:                                    ; preds = %432
  %444 = call i32 @atoi(i8* %442) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %439, i8* %440, i8* %441, i32 %444)
  br label %.outer.backedge.1

; <label>:445:                                    ; preds = %432
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %439, i8* %440, i8* %441, i8* %442)
  %446 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:447:                                    ; preds = %430
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.1)
  %448 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:449:                                    ; preds = %426
  %450 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.1, i8* %450)
  %451 = add nsw i32 0, 1
  br label %.outer.backedge.1

.outer.backedge.1:                                ; preds = %449, %447, %445, %443, %424, %421, %413, %412, %.loopexit.1, %363, %360, %352, %349, %341, %340, %332, %330, %329, %315, %312, %308, %303
  %.03.ph.be.1 = phi i32 [ %304, %303 ], [ %314, %312 ], [ %316, %315 ], [ 0, %308 ], [ %333, %332 ], [ %331, %330 ], [ 0, %329 ], [ %342, %341 ], [ 0, %340 ], [ %353, %352 ], [ 0, %349 ], [ %364, %363 ], [ 0, %360 ], [ %414, %413 ], [ %.7.1, %412 ], [ %.7.1, %.loopexit.1 ], [ %425, %424 ], [ 0, %421 ], [ %451, %449 ], [ %448, %447 ], [ %446, %445 ], [ 0, %443 ]
  call void @__loop_iteration_test___2()
  %452 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %453 = icmp ne i8* %452, null
  br i1 %453, label %.lr.ph.2, label %.outer._crit_edge.loopexit1

.lr.ph.2:                                         ; preds = %.outer.backedge.1
  call void @unroll_loop(i32 48)
  br label %454

; <label>:454:                                    ; preds = %488, %.lr.ph.2
  %.0712.2 = phi i32 [ %.lcssa.1, %.lr.ph.2 ], [ %455, %488 ]
  call void @unroll_loop(i32 44)
  %455 = add nsw i32 %.0712.2, 1
  %456 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %457 = icmp ne i8* %456, null
  br i1 %457, label %458, label %459

; <label>:458:                                    ; preds = %454
  store i8 0, i8* %456, align 1
  br label %459

; <label>:459:                                    ; preds = %458, %454
  %460 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %461 = icmp ne i8* %460, null
  br i1 %461, label %462, label %463

; <label>:462:                                    ; preds = %459
  store i8 0, i8* %460, align 1
  br label %463

; <label>:463:                                    ; preds = %462, %459
  %464 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %465 = icmp ne i8* %464, null
  br i1 %465, label %466, label %467

; <label>:466:                                    ; preds = %463
  store i8 0, i8* %464, align 1
  br label %467

; <label>:467:                                    ; preds = %466, %463
  %468 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %469 = icmp ne i8* %468, null
  br i1 %469, label %470, label %471

; <label>:470:                                    ; preds = %467
  store i8 0, i8* %468, align 1
  br label %471

; <label>:471:                                    ; preds = %470, %467
  %472 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %472, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %473 = load i8*, i8** %26, align 8
  %474 = icmp ne i8* %473, null
  %.14.2 = select i1 %474, i32 1, i32 0
  %475 = select i1 %474, i1 true, i1 false
  br i1 %475, label %.lr.ph6.preheader.2, label %._crit_edge.2

.lr.ph6.preheader.2:                              ; preds = %471
  br label %.lr.ph6.2

.lr.ph6.2:                                        ; preds = %.lr.ph6.2, %.lr.ph6.preheader.2
  %.15.2 = phi i32 [ %.1.2, %.lr.ph6.2 ], [ %.14.2, %.lr.ph6.preheader.2 ]
  %476 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %477 = sext i32 %.15.2 to i64
  %478 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %477
  store i8* %476, i8** %478, align 8
  call void @unroll_loop(i32 45)
  %479 = sext i32 %.15.2 to i64
  %480 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %479
  %481 = load i8*, i8** %480, align 8
  %482 = icmp ne i8* %481, null
  %483 = add nsw i32 %.15.2, 1
  %484 = icmp slt i32 %483, 30
  %.1.2 = select i1 %482, i32 %483, i32 %.15.2
  %485 = select i1 %482, i1 %484, i1 false
  br i1 %485, label %.lr.ph6.2, label %._crit_edge.loopexit.2

._crit_edge.loopexit.2:                           ; preds = %.lr.ph6.2
  %.1.lcssa.ph.2 = phi i32 [ %.1.2, %.lr.ph6.2 ]
  br label %._crit_edge.2

._crit_edge.2:                                    ; preds = %._crit_edge.loopexit.2, %471
  %.1.lcssa.2 = phi i32 [ %.14.2, %471 ], [ %.1.lcssa.ph.2, %._crit_edge.loopexit.2 ]
  %486 = load i8*, i8** %27, align 16
  %487 = icmp ne i8* %486, null
  br i1 %487, label %491, label %488

; <label>:488:                                    ; preds = %._crit_edge.2
  %489 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %490 = icmp ne i8* %489, null
  br i1 %490, label %454, label %.outer._crit_edge.loopexit.loopexit2

; <label>:491:                                    ; preds = %._crit_edge.2
  %.1.lcssa.lcssa.2 = phi i32 [ %.1.lcssa.2, %._crit_edge.2 ]
  %.lcssa.2 = phi i32 [ %455, %._crit_edge.2 ]
  %492 = load i8*, i8** %28, align 16
  %493 = call i32 @strcasecmp(i8* %492, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %494 = icmp ne i32 %493, 0
  br i1 %494, label %520, label %495

; <label>:495:                                    ; preds = %491
  %496 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  %497 = icmp sgt i32 %.1.lcssa.lcssa.2, 4
  %or.cond.2 = or i1 %496, %497
  br i1 %or.cond.2, label %518, label %498

; <label>:498:                                    ; preds = %495
  %499 = icmp sgt i32 %.1.lcssa.lcssa.2, 2
  br i1 %499, label %500, label %511

; <label>:500:                                    ; preds = %498
  %501 = load i8*, i8** %34, align 8
  %502 = call i32 @strcasecmp(i8* %501, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %503 = icmp ne i32 %502, 0
  br i1 %503, label %515, label %504

; <label>:504:                                    ; preds = %500
  %505 = icmp sge i32 %.1.lcssa.lcssa.2, 3
  br i1 %505, label %508, label %506

; <label>:506:                                    ; preds = %504
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.2)
  %507 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:508:                                    ; preds = %504
  %509 = load i8*, i8** %40, align 8
  %510 = call i32 @atoi(i8* %509) #8
  br label %511

; <label>:511:                                    ; preds = %508, %498
  %.08.2 = phi i32 [ %510, %508 ], [ 53, %498 ]
  %512 = load i8*, i8** %35, align 8
  %513 = call i32 @fwd_add(i8* %512, i32 %.08.2)
  %514 = icmp eq i32 %513, -1
  br i1 %514, label %.loopexit1.loopexit, label %.outer.backedge.2

; <label>:515:                                    ; preds = %500
  %516 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.2, i8* %516)
  %517 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:518:                                    ; preds = %495
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.2)
  %519 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:520:                                    ; preds = %491
  %521 = load i8*, i8** %29, align 16
  %522 = call i32 @strcasecmp(i8* %521, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %523 = icmp ne i32 %522, 0
  br i1 %523, label %537, label %524

; <label>:524:                                    ; preds = %520
  %525 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %525, label %535, label %526

; <label>:526:                                    ; preds = %524
  %527 = load i8*, i8** %32, align 8
  %528 = call i32 @conv_trick_conf(i8* %527)
  %529 = icmp ne i32 %528, 0
  %530 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %531 = load i8*, i8** %33, align 8
  br i1 %529, label %533, label %532

; <label>:532:                                    ; preds = %526
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %530, i8* %531)
  br label %.outer.backedge.2

; <label>:533:                                    ; preds = %526
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %530, i8* %531)
  %534 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:535:                                    ; preds = %524
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.2)
  %536 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:537:                                    ; preds = %520
  %538 = load i8*, i8** %30, align 16
  %539 = call i32 @strcasecmp(i8* %538, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %540 = icmp ne i32 %539, 0
  br i1 %540, label %546, label %541

; <label>:541:                                    ; preds = %537
  %542 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %542, label %544, label %543

; <label>:543:                                    ; preds = %541
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.2

; <label>:544:                                    ; preds = %541
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.2)
  %545 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:546:                                    ; preds = %537
  %547 = load i8*, i8** %31, align 16
  %548 = call i32 @strcasecmp(i8* %547, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %549 = icmp ne i32 %548, 0
  br i1 %549, label %557, label %550

; <label>:550:                                    ; preds = %546
  %551 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %551, label %555, label %552

; <label>:552:                                    ; preds = %550
  %553 = load i8*, i8** %39, align 8
  %554 = call i32 @atoi(i8* %553) #8
  store i32 %554, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.2

; <label>:555:                                    ; preds = %550
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.2)
  %556 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:557:                                    ; preds = %546
  %558 = load i8*, i8** %36, align 16
  %559 = call i32 @strcasecmp(i8* %558, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %560 = icmp ne i32 %559, 0
  br i1 %560, label %568, label %561

; <label>:561:                                    ; preds = %557
  %562 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %562, label %566, label %563

; <label>:563:                                    ; preds = %561
  %564 = load i8*, i8** %42, align 8
  %565 = call noalias i8* @strdup(i8* %564) #9, !track !108
  store i8* %565, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.2

; <label>:566:                                    ; preds = %561
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.2)
  %567 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:568:                                    ; preds = %557
  %569 = load i8*, i8** %38, align 16
  %570 = call i32 @strcasecmp(i8* %569, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %571 = icmp ne i32 %570, 0
  br i1 %571, label %618, label %572

; <label>:572:                                    ; preds = %568
  %573 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  br i1 %573, label %574, label %576

; <label>:574:                                    ; preds = %572
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.2)
  %575 = add nsw i32 %.03.ph.be.1, 1
  br label %576

; <label>:576:                                    ; preds = %574, %572
  %.7.2 = phi i32 [ %575, %574 ], [ %.03.ph.be.1, %572 ]
  br label %577

; <label>:577:                                    ; preds = %577, %576
  %lsr.iv.2 = phi i64 [ %lsr.iv.next.2, %577 ], [ -1, %576 ]
  %578 = add i64 %lsr.iv.2, 1
  call void @unroll_loop(i32 46)
  %579 = shl i64 %lsr.iv.2, 3
  %uglygep.2 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %579
  %uglygep3.2 = bitcast i8* %uglygep.2 to i8**
  %scevgep.2 = getelementptr i8*, i8** %uglygep3.2, i64 111
  %580 = load i8*, i8** %scevgep.2, align 8
  %581 = icmp ne i8* %580, null
  %582 = icmp ult i64 %578, 30
  %spec.select.2 = select i1 %581, i1 %582, i1 false
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %spec.select.2, label %577, label %583

; <label>:583:                                    ; preds = %577
  %.01.lcssa.wide.2 = phi i64 [ %lsr.iv.next.2, %577 ]
  %584 = trunc i64 %.01.lcssa.wide.2 to i32
  %585 = add nsw i32 %584, %.1.lcssa.lcssa.2
  %586 = sub nsw i32 %585, 1
  %587 = icmp sgt i32 %586, 30
  br i1 %587, label %616, label %588

; <label>:588:                                    ; preds = %583
  %589 = sub nsw i32 %.1.lcssa.lcssa.2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.2, i32 %589)
  %590 = add nsw i32 %.1.lcssa.lcssa.2, -1
  %591 = add nsw i32 %584, %.1.lcssa.lcssa.2
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %592
  store i8* null, i8** %593, align 8
  %594 = icmp ne i32 %590, 0
  br i1 %594, label %.lr.ph16.2, label %.loopexit.2

.lr.ph16.2:                                       ; preds = %588
  %595 = add i32 %.1.lcssa.lcssa.2, -1
  %596 = sext i32 %595 to i64
  %597 = sext i32 %584 to i64
  %scevgep4.2 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %596
  %598 = shl i64 %596, 1
  %599 = shl i64 %597, 1
  %600 = add i64 %598, %599
  %scevgep9.2 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %600
  %601 = sub i32 1, %.1.lcssa.lcssa.2
  %602 = zext i32 %601 to i64
  br label %603

; <label>:603:                                    ; preds = %608, %.lr.ph16.2
  %lsr.iv5.2 = phi i64 [ 0, %.lr.ph16.2 ], [ %lsr.iv.next6.2, %608 ]
  call void @unroll_loop(i32 47)
  %scevgep7.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %604 = load i8*, i8** %scevgep7.2, align 8
  %605 = call i32 @strcmp(i8* %604, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %608, label %607

; <label>:607:                                    ; preds = %603
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.2

; <label>:608:                                    ; preds = %603
  %scevgep8.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %609 = load i8*, i8** %scevgep8.2, align 8
  %610 = call noalias i8* @strdup(i8* %609) #9, !track !109
  %611 = shl i64 %lsr.iv5.2, 1
  %scevgep10.2 = getelementptr i32, i32* %scevgep9.2, i64 %611
  %scevgep1011.2 = bitcast i32* %scevgep10.2 to i8**
  store i8* %610, i8** %scevgep1011.2, align 8
  %lsr.iv.next6.2 = add nsw i64 %lsr.iv5.2, -1
  %tmp.2 = trunc i64 %lsr.iv.next6.2 to i32
  %612 = icmp ne i32 %601, %tmp.2
  br i1 %612, label %603, label %.loopexit.loopexit.2

.loopexit.loopexit.2:                             ; preds = %608
  br label %.loopexit.2

.loopexit.2:                                      ; preds = %.loopexit.loopexit.2, %607, %588
  %613 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %614 = icmp ne i8* %613, null
  br i1 %614, label %615, label %.outer.backedge.2

; <label>:615:                                    ; preds = %.loopexit.2
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.2

; <label>:616:                                    ; preds = %583
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.2, i32 30)
  %617 = add nsw i32 %.7.2, 1
  br label %.outer.backedge.2

; <label>:618:                                    ; preds = %568
  %619 = load i8*, i8** %41, align 16
  %620 = call i32 @strcasecmp(i8* %619, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %621 = icmp ne i32 %620, 0
  br i1 %621, label %629, label %622

; <label>:622:                                    ; preds = %618
  %623 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %623, label %627, label %624

; <label>:624:                                    ; preds = %622
  %625 = load i8*, i8** %45, align 8
  %626 = call i32 @atoi(i8* %625) #8
  store i32 %626, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.2

; <label>:627:                                    ; preds = %622
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.2)
  %628 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:629:                                    ; preds = %618
  %630 = load i8*, i8** %43, align 16
  %631 = call i32 @strcasecmp(i8* %630, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %632 = icmp ne i32 %631, 0
  br i1 %632, label %652, label %633

; <label>:633:                                    ; preds = %629
  %634 = icmp ne i32 %.1.lcssa.lcssa.2, 4
  br i1 %634, label %650, label %635

; <label>:635:                                    ; preds = %633
  %636 = load i8*, i8** %46, align 8
  %637 = load i8*, i8** %47, align 16
  %638 = load i8*, i8** %48, align 8
  %639 = call i32 @atoi(i8* %638) #8
  %640 = call i32 @conv_scoped_conf(i8* %636, i8* %637, i32 %639)
  %641 = icmp ne i32 %640, 0
  %642 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %643 = load i8*, i8** %49, align 8
  %644 = load i8*, i8** %50, align 16
  %645 = load i8*, i8** %51, align 8
  br i1 %641, label %648, label %646

; <label>:646:                                    ; preds = %635
  %647 = call i32 @atoi(i8* %645) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %642, i8* %643, i8* %644, i32 %647)
  br label %.outer.backedge.2

; <label>:648:                                    ; preds = %635
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %642, i8* %643, i8* %644, i8* %645)
  %649 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:650:                                    ; preds = %633
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.2)
  %651 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:652:                                    ; preds = %629
  %653 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.2, i8* %653)
  %654 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

.outer.backedge.2:                                ; preds = %652, %650, %648, %646, %627, %624, %616, %615, %.loopexit.2, %566, %563, %555, %552, %544, %543, %535, %533, %532, %518, %515, %511, %506
  %.03.ph.be.2 = phi i32 [ %507, %506 ], [ %517, %515 ], [ %519, %518 ], [ %.03.ph.be.1, %511 ], [ %536, %535 ], [ %534, %533 ], [ %.03.ph.be.1, %532 ], [ %545, %544 ], [ %.03.ph.be.1, %543 ], [ %556, %555 ], [ %.03.ph.be.1, %552 ], [ %567, %566 ], [ %.03.ph.be.1, %563 ], [ %617, %616 ], [ %.7.2, %615 ], [ %.7.2, %.loopexit.2 ], [ %628, %627 ], [ %.03.ph.be.1, %624 ], [ %654, %652 ], [ %651, %650 ], [ %649, %648 ], [ %.03.ph.be.1, %646 ]
  call void @__loop_iteration_test___2()
  %655 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %656 = icmp ne i8* %655, null
  br i1 %656, label %.lr.ph.3, label %.outer._crit_edge.loopexit1

.lr.ph.3:                                         ; preds = %.outer.backedge.2
  call void @unroll_loop(i32 48)
  br label %657

; <label>:657:                                    ; preds = %691, %.lr.ph.3
  %.0712.3 = phi i32 [ %.lcssa.2, %.lr.ph.3 ], [ %658, %691 ]
  call void @unroll_loop(i32 44)
  %658 = add nsw i32 %.0712.3, 1
  %659 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %660 = icmp ne i8* %659, null
  br i1 %660, label %661, label %662

; <label>:661:                                    ; preds = %657
  store i8 0, i8* %659, align 1
  br label %662

; <label>:662:                                    ; preds = %661, %657
  %663 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %664 = icmp ne i8* %663, null
  br i1 %664, label %665, label %666

; <label>:665:                                    ; preds = %662
  store i8 0, i8* %663, align 1
  br label %666

; <label>:666:                                    ; preds = %665, %662
  %667 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %668 = icmp ne i8* %667, null
  br i1 %668, label %669, label %670

; <label>:669:                                    ; preds = %666
  store i8 0, i8* %667, align 1
  br label %670

; <label>:670:                                    ; preds = %669, %666
  %671 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %672 = icmp ne i8* %671, null
  br i1 %672, label %673, label %674

; <label>:673:                                    ; preds = %670
  store i8 0, i8* %671, align 1
  br label %674

; <label>:674:                                    ; preds = %673, %670
  %675 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %675, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %676 = load i8*, i8** %26, align 8
  %677 = icmp ne i8* %676, null
  %.14.3 = select i1 %677, i32 1, i32 0
  %678 = select i1 %677, i1 true, i1 false
  br i1 %678, label %.lr.ph6.preheader.3, label %._crit_edge.3

.lr.ph6.preheader.3:                              ; preds = %674
  br label %.lr.ph6.3

.lr.ph6.3:                                        ; preds = %.lr.ph6.3, %.lr.ph6.preheader.3
  %.15.3 = phi i32 [ %.1.3, %.lr.ph6.3 ], [ %.14.3, %.lr.ph6.preheader.3 ]
  %679 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %680 = sext i32 %.15.3 to i64
  %681 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %680
  store i8* %679, i8** %681, align 8
  call void @unroll_loop(i32 45)
  %682 = sext i32 %.15.3 to i64
  %683 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %682
  %684 = load i8*, i8** %683, align 8
  %685 = icmp ne i8* %684, null
  %686 = add nsw i32 %.15.3, 1
  %687 = icmp slt i32 %686, 30
  %.1.3 = select i1 %685, i32 %686, i32 %.15.3
  %688 = select i1 %685, i1 %687, i1 false
  br i1 %688, label %.lr.ph6.3, label %._crit_edge.loopexit.3

._crit_edge.loopexit.3:                           ; preds = %.lr.ph6.3
  %.1.lcssa.ph.3 = phi i32 [ %.1.3, %.lr.ph6.3 ]
  br label %._crit_edge.3

._crit_edge.3:                                    ; preds = %._crit_edge.loopexit.3, %674
  %.1.lcssa.3 = phi i32 [ %.14.3, %674 ], [ %.1.lcssa.ph.3, %._crit_edge.loopexit.3 ]
  %689 = load i8*, i8** %27, align 16
  %690 = icmp ne i8* %689, null
  br i1 %690, label %694, label %691

; <label>:691:                                    ; preds = %._crit_edge.3
  %692 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %693 = icmp ne i8* %692, null
  br i1 %693, label %657, label %.outer._crit_edge.loopexit.loopexit3

; <label>:694:                                    ; preds = %._crit_edge.3
  %.1.lcssa.lcssa.3 = phi i32 [ %.1.lcssa.3, %._crit_edge.3 ]
  %.lcssa.3 = phi i32 [ %658, %._crit_edge.3 ]
  %695 = load i8*, i8** %28, align 16
  %696 = call i32 @strcasecmp(i8* %695, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %697 = icmp ne i32 %696, 0
  br i1 %697, label %723, label %698

; <label>:698:                                    ; preds = %694
  %699 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  %700 = icmp sgt i32 %.1.lcssa.lcssa.3, 4
  %or.cond.3 = or i1 %699, %700
  br i1 %or.cond.3, label %721, label %701

; <label>:701:                                    ; preds = %698
  %702 = icmp sgt i32 %.1.lcssa.lcssa.3, 2
  br i1 %702, label %703, label %714

; <label>:703:                                    ; preds = %701
  %704 = load i8*, i8** %34, align 8
  %705 = call i32 @strcasecmp(i8* %704, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %706 = icmp ne i32 %705, 0
  br i1 %706, label %718, label %707

; <label>:707:                                    ; preds = %703
  %708 = icmp sge i32 %.1.lcssa.lcssa.3, 3
  br i1 %708, label %711, label %709

; <label>:709:                                    ; preds = %707
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.3)
  %710 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:711:                                    ; preds = %707
  %712 = load i8*, i8** %40, align 8
  %713 = call i32 @atoi(i8* %712) #8
  br label %714

; <label>:714:                                    ; preds = %711, %701
  %.08.3 = phi i32 [ %713, %711 ], [ 53, %701 ]
  %715 = load i8*, i8** %35, align 8
  %716 = call i32 @fwd_add(i8* %715, i32 %.08.3)
  %717 = icmp eq i32 %716, -1
  br i1 %717, label %.loopexit1.loopexit, label %.outer.backedge.3

; <label>:718:                                    ; preds = %703
  %719 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.3, i8* %719)
  %720 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:721:                                    ; preds = %698
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.3)
  %722 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:723:                                    ; preds = %694
  %724 = load i8*, i8** %29, align 16
  %725 = call i32 @strcasecmp(i8* %724, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %726 = icmp ne i32 %725, 0
  br i1 %726, label %740, label %727

; <label>:727:                                    ; preds = %723
  %728 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %728, label %738, label %729

; <label>:729:                                    ; preds = %727
  %730 = load i8*, i8** %32, align 8
  %731 = call i32 @conv_trick_conf(i8* %730)
  %732 = icmp ne i32 %731, 0
  %733 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %734 = load i8*, i8** %33, align 8
  br i1 %732, label %736, label %735

; <label>:735:                                    ; preds = %729
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %733, i8* %734)
  br label %.outer.backedge.3

; <label>:736:                                    ; preds = %729
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %733, i8* %734)
  %737 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:738:                                    ; preds = %727
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.3)
  %739 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:740:                                    ; preds = %723
  %741 = load i8*, i8** %30, align 16
  %742 = call i32 @strcasecmp(i8* %741, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %743 = icmp ne i32 %742, 0
  br i1 %743, label %749, label %744

; <label>:744:                                    ; preds = %740
  %745 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %745, label %747, label %746

; <label>:746:                                    ; preds = %744
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.3

; <label>:747:                                    ; preds = %744
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.3)
  %748 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:749:                                    ; preds = %740
  %750 = load i8*, i8** %31, align 16
  %751 = call i32 @strcasecmp(i8* %750, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %752 = icmp ne i32 %751, 0
  br i1 %752, label %760, label %753

; <label>:753:                                    ; preds = %749
  %754 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %754, label %758, label %755

; <label>:755:                                    ; preds = %753
  %756 = load i8*, i8** %39, align 8
  %757 = call i32 @atoi(i8* %756) #8
  store i32 %757, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.3

; <label>:758:                                    ; preds = %753
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.3)
  %759 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:760:                                    ; preds = %749
  %761 = load i8*, i8** %36, align 16
  %762 = call i32 @strcasecmp(i8* %761, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %763 = icmp ne i32 %762, 0
  br i1 %763, label %771, label %764

; <label>:764:                                    ; preds = %760
  %765 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %765, label %769, label %766

; <label>:766:                                    ; preds = %764
  %767 = load i8*, i8** %42, align 8
  %768 = call noalias i8* @strdup(i8* %767) #9, !track !108
  store i8* %768, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.3

; <label>:769:                                    ; preds = %764
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.3)
  %770 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:771:                                    ; preds = %760
  %772 = load i8*, i8** %38, align 16
  %773 = call i32 @strcasecmp(i8* %772, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %774 = icmp ne i32 %773, 0
  br i1 %774, label %821, label %775

; <label>:775:                                    ; preds = %771
  %776 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  br i1 %776, label %777, label %779

; <label>:777:                                    ; preds = %775
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.3)
  %778 = add nsw i32 %.03.ph.be.2, 1
  br label %779

; <label>:779:                                    ; preds = %777, %775
  %.7.3 = phi i32 [ %778, %777 ], [ %.03.ph.be.2, %775 ]
  br label %780

; <label>:780:                                    ; preds = %780, %779
  %lsr.iv.3 = phi i64 [ %lsr.iv.next.3, %780 ], [ -1, %779 ]
  %781 = add i64 %lsr.iv.3, 1
  call void @unroll_loop(i32 46)
  %782 = shl i64 %lsr.iv.3, 3
  %uglygep.3 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %782
  %uglygep3.3 = bitcast i8* %uglygep.3 to i8**
  %scevgep.3 = getelementptr i8*, i8** %uglygep3.3, i64 111
  %783 = load i8*, i8** %scevgep.3, align 8
  %784 = icmp ne i8* %783, null
  %785 = icmp ult i64 %781, 30
  %spec.select.3 = select i1 %784, i1 %785, i1 false
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %spec.select.3, label %780, label %786

; <label>:786:                                    ; preds = %780
  %.01.lcssa.wide.3 = phi i64 [ %lsr.iv.next.3, %780 ]
  %787 = trunc i64 %.01.lcssa.wide.3 to i32
  %788 = add nsw i32 %787, %.1.lcssa.lcssa.3
  %789 = sub nsw i32 %788, 1
  %790 = icmp sgt i32 %789, 30
  br i1 %790, label %819, label %791

; <label>:791:                                    ; preds = %786
  %792 = sub nsw i32 %.1.lcssa.lcssa.3, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.3, i32 %792)
  %793 = add nsw i32 %.1.lcssa.lcssa.3, -1
  %794 = add nsw i32 %787, %.1.lcssa.lcssa.3
  %795 = sext i32 %794 to i64
  %796 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %795
  store i8* null, i8** %796, align 8
  %797 = icmp ne i32 %793, 0
  br i1 %797, label %.lr.ph16.3, label %.loopexit.3

.lr.ph16.3:                                       ; preds = %791
  %798 = add i32 %.1.lcssa.lcssa.3, -1
  %799 = sext i32 %798 to i64
  %800 = sext i32 %787 to i64
  %scevgep4.3 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %799
  %801 = shl i64 %799, 1
  %802 = shl i64 %800, 1
  %803 = add i64 %801, %802
  %scevgep9.3 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %803
  %804 = sub i32 1, %.1.lcssa.lcssa.3
  %805 = zext i32 %804 to i64
  br label %806

; <label>:806:                                    ; preds = %811, %.lr.ph16.3
  %lsr.iv5.3 = phi i64 [ 0, %.lr.ph16.3 ], [ %lsr.iv.next6.3, %811 ]
  call void @unroll_loop(i32 47)
  %scevgep7.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %807 = load i8*, i8** %scevgep7.3, align 8
  %808 = call i32 @strcmp(i8* %807, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %809 = icmp ne i32 %808, 0
  br i1 %809, label %811, label %810

; <label>:810:                                    ; preds = %806
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.3

; <label>:811:                                    ; preds = %806
  %scevgep8.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %812 = load i8*, i8** %scevgep8.3, align 8
  %813 = call noalias i8* @strdup(i8* %812) #9, !track !109
  %814 = shl i64 %lsr.iv5.3, 1
  %scevgep10.3 = getelementptr i32, i32* %scevgep9.3, i64 %814
  %scevgep1011.3 = bitcast i32* %scevgep10.3 to i8**
  store i8* %813, i8** %scevgep1011.3, align 8
  %lsr.iv.next6.3 = add nsw i64 %lsr.iv5.3, -1
  %tmp.3 = trunc i64 %lsr.iv.next6.3 to i32
  %815 = icmp ne i32 %804, %tmp.3
  br i1 %815, label %806, label %.loopexit.loopexit.3

.loopexit.loopexit.3:                             ; preds = %811
  br label %.loopexit.3

.loopexit.3:                                      ; preds = %.loopexit.loopexit.3, %810, %791
  %816 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %817 = icmp ne i8* %816, null
  br i1 %817, label %818, label %.outer.backedge.3

; <label>:818:                                    ; preds = %.loopexit.3
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.3

; <label>:819:                                    ; preds = %786
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.3, i32 30)
  %820 = add nsw i32 %.7.3, 1
  br label %.outer.backedge.3

; <label>:821:                                    ; preds = %771
  %822 = load i8*, i8** %41, align 16
  %823 = call i32 @strcasecmp(i8* %822, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %824 = icmp ne i32 %823, 0
  br i1 %824, label %832, label %825

; <label>:825:                                    ; preds = %821
  %826 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %826, label %830, label %827

; <label>:827:                                    ; preds = %825
  %828 = load i8*, i8** %45, align 8
  %829 = call i32 @atoi(i8* %828) #8
  store i32 %829, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.3

; <label>:830:                                    ; preds = %825
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.3)
  %831 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:832:                                    ; preds = %821
  %833 = load i8*, i8** %43, align 16
  %834 = call i32 @strcasecmp(i8* %833, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %835 = icmp ne i32 %834, 0
  br i1 %835, label %855, label %836

; <label>:836:                                    ; preds = %832
  %837 = icmp ne i32 %.1.lcssa.lcssa.3, 4
  br i1 %837, label %853, label %838

; <label>:838:                                    ; preds = %836
  %839 = load i8*, i8** %46, align 8
  %840 = load i8*, i8** %47, align 16
  %841 = load i8*, i8** %48, align 8
  %842 = call i32 @atoi(i8* %841) #8
  %843 = call i32 @conv_scoped_conf(i8* %839, i8* %840, i32 %842)
  %844 = icmp ne i32 %843, 0
  %845 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %846 = load i8*, i8** %49, align 8
  %847 = load i8*, i8** %50, align 16
  %848 = load i8*, i8** %51, align 8
  br i1 %844, label %851, label %849

; <label>:849:                                    ; preds = %838
  %850 = call i32 @atoi(i8* %848) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %845, i8* %846, i8* %847, i32 %850)
  br label %.outer.backedge.3

; <label>:851:                                    ; preds = %838
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %845, i8* %846, i8* %847, i8* %848)
  %852 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:853:                                    ; preds = %836
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.3)
  %854 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:855:                                    ; preds = %832
  %856 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.3, i8* %856)
  %857 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

.outer.backedge.3:                                ; preds = %855, %853, %851, %849, %830, %827, %819, %818, %.loopexit.3, %769, %766, %758, %755, %747, %746, %738, %736, %735, %721, %718, %714, %709
  %.03.ph.be.3 = phi i32 [ %710, %709 ], [ %720, %718 ], [ %722, %721 ], [ %.03.ph.be.2, %714 ], [ %739, %738 ], [ %737, %736 ], [ %.03.ph.be.2, %735 ], [ %748, %747 ], [ %.03.ph.be.2, %746 ], [ %759, %758 ], [ %.03.ph.be.2, %755 ], [ %770, %769 ], [ %.03.ph.be.2, %766 ], [ %820, %819 ], [ %.7.3, %818 ], [ %.7.3, %.loopexit.3 ], [ %831, %830 ], [ %.03.ph.be.2, %827 ], [ %857, %855 ], [ %854, %853 ], [ %852, %851 ], [ %.03.ph.be.2, %849 ]
  call void @__loop_iteration_test___2()
  %858 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %859 = icmp ne i8* %858, null
  br i1 %859, label %.lr.ph.4, label %.outer._crit_edge.loopexit1

.lr.ph.4:                                         ; preds = %.outer.backedge.3
  call void @unroll_loop(i32 48)
  br label %860

; <label>:860:                                    ; preds = %894, %.lr.ph.4
  %.0712.4 = phi i32 [ %.lcssa.3, %.lr.ph.4 ], [ %861, %894 ]
  call void @unroll_loop(i32 44)
  %861 = add nsw i32 %.0712.4, 1
  %862 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %863 = icmp ne i8* %862, null
  br i1 %863, label %864, label %865

; <label>:864:                                    ; preds = %860
  store i8 0, i8* %862, align 1
  br label %865

; <label>:865:                                    ; preds = %864, %860
  %866 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %867 = icmp ne i8* %866, null
  br i1 %867, label %868, label %869

; <label>:868:                                    ; preds = %865
  store i8 0, i8* %866, align 1
  br label %869

; <label>:869:                                    ; preds = %868, %865
  %870 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %871 = icmp ne i8* %870, null
  br i1 %871, label %872, label %873

; <label>:872:                                    ; preds = %869
  store i8 0, i8* %870, align 1
  br label %873

; <label>:873:                                    ; preds = %872, %869
  %874 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %875 = icmp ne i8* %874, null
  br i1 %875, label %876, label %877

; <label>:876:                                    ; preds = %873
  store i8 0, i8* %874, align 1
  br label %877

; <label>:877:                                    ; preds = %876, %873
  %878 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %878, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %879 = load i8*, i8** %26, align 8
  %880 = icmp ne i8* %879, null
  %.14.4 = select i1 %880, i32 1, i32 0
  %881 = select i1 %880, i1 true, i1 false
  br i1 %881, label %.lr.ph6.preheader.4, label %._crit_edge.4

.lr.ph6.preheader.4:                              ; preds = %877
  br label %.lr.ph6.4

.lr.ph6.4:                                        ; preds = %.lr.ph6.4, %.lr.ph6.preheader.4
  %.15.4 = phi i32 [ %.1.4, %.lr.ph6.4 ], [ %.14.4, %.lr.ph6.preheader.4 ]
  %882 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %883 = sext i32 %.15.4 to i64
  %884 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %883
  store i8* %882, i8** %884, align 8
  call void @unroll_loop(i32 45)
  %885 = sext i32 %.15.4 to i64
  %886 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %885
  %887 = load i8*, i8** %886, align 8
  %888 = icmp ne i8* %887, null
  %889 = add nsw i32 %.15.4, 1
  %890 = icmp slt i32 %889, 30
  %.1.4 = select i1 %888, i32 %889, i32 %.15.4
  %891 = select i1 %888, i1 %890, i1 false
  br i1 %891, label %.lr.ph6.4, label %._crit_edge.loopexit.4

._crit_edge.loopexit.4:                           ; preds = %.lr.ph6.4
  %.1.lcssa.ph.4 = phi i32 [ %.1.4, %.lr.ph6.4 ]
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %._crit_edge.loopexit.4, %877
  %.1.lcssa.4 = phi i32 [ %.14.4, %877 ], [ %.1.lcssa.ph.4, %._crit_edge.loopexit.4 ]
  %892 = load i8*, i8** %27, align 16
  %893 = icmp ne i8* %892, null
  br i1 %893, label %897, label %894

; <label>:894:                                    ; preds = %._crit_edge.4
  %895 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %896 = icmp ne i8* %895, null
  br i1 %896, label %860, label %.outer._crit_edge.loopexit.loopexit4

; <label>:897:                                    ; preds = %._crit_edge.4
  %.1.lcssa.lcssa.4 = phi i32 [ %.1.lcssa.4, %._crit_edge.4 ]
  %.lcssa.4 = phi i32 [ %861, %._crit_edge.4 ]
  %898 = load i8*, i8** %28, align 16
  %899 = call i32 @strcasecmp(i8* %898, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %900 = icmp ne i32 %899, 0
  br i1 %900, label %926, label %901

; <label>:901:                                    ; preds = %897
  %902 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  %903 = icmp sgt i32 %.1.lcssa.lcssa.4, 4
  %or.cond.4 = or i1 %902, %903
  br i1 %or.cond.4, label %924, label %904

; <label>:904:                                    ; preds = %901
  %905 = icmp sgt i32 %.1.lcssa.lcssa.4, 2
  br i1 %905, label %906, label %917

; <label>:906:                                    ; preds = %904
  %907 = load i8*, i8** %34, align 8
  %908 = call i32 @strcasecmp(i8* %907, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %909 = icmp ne i32 %908, 0
  br i1 %909, label %921, label %910

; <label>:910:                                    ; preds = %906
  %911 = icmp sge i32 %.1.lcssa.lcssa.4, 3
  br i1 %911, label %914, label %912

; <label>:912:                                    ; preds = %910
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.4)
  %913 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:914:                                    ; preds = %910
  %915 = load i8*, i8** %40, align 8
  %916 = call i32 @atoi(i8* %915) #8
  br label %917

; <label>:917:                                    ; preds = %914, %904
  %.08.4 = phi i32 [ %916, %914 ], [ 53, %904 ]
  %918 = load i8*, i8** %35, align 8
  %919 = call i32 @fwd_add(i8* %918, i32 %.08.4)
  %920 = icmp eq i32 %919, -1
  br i1 %920, label %.loopexit1.loopexit, label %.outer.backedge.4

; <label>:921:                                    ; preds = %906
  %922 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.4, i8* %922)
  %923 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:924:                                    ; preds = %901
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.4)
  %925 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:926:                                    ; preds = %897
  %927 = load i8*, i8** %29, align 16
  %928 = call i32 @strcasecmp(i8* %927, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %929 = icmp ne i32 %928, 0
  br i1 %929, label %943, label %930

; <label>:930:                                    ; preds = %926
  %931 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %931, label %941, label %932

; <label>:932:                                    ; preds = %930
  %933 = load i8*, i8** %32, align 8
  %934 = call i32 @conv_trick_conf(i8* %933)
  %935 = icmp ne i32 %934, 0
  %936 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %937 = load i8*, i8** %33, align 8
  br i1 %935, label %939, label %938

; <label>:938:                                    ; preds = %932
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %936, i8* %937)
  br label %.outer.backedge.4

; <label>:939:                                    ; preds = %932
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %936, i8* %937)
  %940 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:941:                                    ; preds = %930
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.4)
  %942 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:943:                                    ; preds = %926
  %944 = load i8*, i8** %30, align 16
  %945 = call i32 @strcasecmp(i8* %944, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %946 = icmp ne i32 %945, 0
  br i1 %946, label %952, label %947

; <label>:947:                                    ; preds = %943
  %948 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %948, label %950, label %949

; <label>:949:                                    ; preds = %947
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.4

; <label>:950:                                    ; preds = %947
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.4)
  %951 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:952:                                    ; preds = %943
  %953 = load i8*, i8** %31, align 16
  %954 = call i32 @strcasecmp(i8* %953, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %955 = icmp ne i32 %954, 0
  br i1 %955, label %963, label %956

; <label>:956:                                    ; preds = %952
  %957 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %957, label %961, label %958

; <label>:958:                                    ; preds = %956
  %959 = load i8*, i8** %39, align 8
  %960 = call i32 @atoi(i8* %959) #8
  store i32 %960, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.4

; <label>:961:                                    ; preds = %956
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.4)
  %962 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:963:                                    ; preds = %952
  %964 = load i8*, i8** %36, align 16
  %965 = call i32 @strcasecmp(i8* %964, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %966 = icmp ne i32 %965, 0
  br i1 %966, label %974, label %967

; <label>:967:                                    ; preds = %963
  %968 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %968, label %972, label %969

; <label>:969:                                    ; preds = %967
  %970 = load i8*, i8** %42, align 8
  %971 = call noalias i8* @strdup(i8* %970) #9, !track !108
  store i8* %971, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.4

; <label>:972:                                    ; preds = %967
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.4)
  %973 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:974:                                    ; preds = %963
  %975 = load i8*, i8** %38, align 16
  %976 = call i32 @strcasecmp(i8* %975, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %977 = icmp ne i32 %976, 0
  br i1 %977, label %1024, label %978

; <label>:978:                                    ; preds = %974
  %979 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  br i1 %979, label %980, label %982

; <label>:980:                                    ; preds = %978
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.4)
  %981 = add nsw i32 %.03.ph.be.3, 1
  br label %982

; <label>:982:                                    ; preds = %980, %978
  %.7.4 = phi i32 [ %981, %980 ], [ %.03.ph.be.3, %978 ]
  br label %983

; <label>:983:                                    ; preds = %983, %982
  %lsr.iv.4 = phi i64 [ %lsr.iv.next.4, %983 ], [ -1, %982 ]
  %984 = add i64 %lsr.iv.4, 1
  call void @unroll_loop(i32 46)
  %985 = shl i64 %lsr.iv.4, 3
  %uglygep.4 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %985
  %uglygep3.4 = bitcast i8* %uglygep.4 to i8**
  %scevgep.4 = getelementptr i8*, i8** %uglygep3.4, i64 111
  %986 = load i8*, i8** %scevgep.4, align 8
  %987 = icmp ne i8* %986, null
  %988 = icmp ult i64 %984, 30
  %spec.select.4 = select i1 %987, i1 %988, i1 false
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %spec.select.4, label %983, label %989

; <label>:989:                                    ; preds = %983
  %.01.lcssa.wide.4 = phi i64 [ %lsr.iv.next.4, %983 ]
  %990 = trunc i64 %.01.lcssa.wide.4 to i32
  %991 = add nsw i32 %990, %.1.lcssa.lcssa.4
  %992 = sub nsw i32 %991, 1
  %993 = icmp sgt i32 %992, 30
  br i1 %993, label %1022, label %994

; <label>:994:                                    ; preds = %989
  %995 = sub nsw i32 %.1.lcssa.lcssa.4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.4, i32 %995)
  %996 = add nsw i32 %.1.lcssa.lcssa.4, -1
  %997 = add nsw i32 %990, %.1.lcssa.lcssa.4
  %998 = sext i32 %997 to i64
  %999 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %998
  store i8* null, i8** %999, align 8
  %1000 = icmp ne i32 %996, 0
  br i1 %1000, label %.lr.ph16.4, label %.loopexit.4

.lr.ph16.4:                                       ; preds = %994
  %1001 = add i32 %.1.lcssa.lcssa.4, -1
  %1002 = sext i32 %1001 to i64
  %1003 = sext i32 %990 to i64
  %scevgep4.4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1002
  %1004 = shl i64 %1002, 1
  %1005 = shl i64 %1003, 1
  %1006 = add i64 %1004, %1005
  %scevgep9.4 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1006
  %1007 = sub i32 1, %.1.lcssa.lcssa.4
  %1008 = zext i32 %1007 to i64
  br label %1009

; <label>:1009:                                   ; preds = %1014, %.lr.ph16.4
  %lsr.iv5.4 = phi i64 [ 0, %.lr.ph16.4 ], [ %lsr.iv.next6.4, %1014 ]
  call void @unroll_loop(i32 47)
  %scevgep7.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1010 = load i8*, i8** %scevgep7.4, align 8
  %1011 = call i32 @strcmp(i8* %1010, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1012 = icmp ne i32 %1011, 0
  br i1 %1012, label %1014, label %1013

; <label>:1013:                                   ; preds = %1009
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.4

; <label>:1014:                                   ; preds = %1009
  %scevgep8.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1015 = load i8*, i8** %scevgep8.4, align 8
  %1016 = call noalias i8* @strdup(i8* %1015) #9, !track !109
  %1017 = shl i64 %lsr.iv5.4, 1
  %scevgep10.4 = getelementptr i32, i32* %scevgep9.4, i64 %1017
  %scevgep1011.4 = bitcast i32* %scevgep10.4 to i8**
  store i8* %1016, i8** %scevgep1011.4, align 8
  %lsr.iv.next6.4 = add nsw i64 %lsr.iv5.4, -1
  %tmp.4 = trunc i64 %lsr.iv.next6.4 to i32
  %1018 = icmp ne i32 %1007, %tmp.4
  br i1 %1018, label %1009, label %.loopexit.loopexit.4

.loopexit.loopexit.4:                             ; preds = %1014
  br label %.loopexit.4

.loopexit.4:                                      ; preds = %.loopexit.loopexit.4, %1013, %994
  %1019 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1020 = icmp ne i8* %1019, null
  br i1 %1020, label %1021, label %.outer.backedge.4

; <label>:1021:                                   ; preds = %.loopexit.4
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.4

; <label>:1022:                                   ; preds = %989
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.4, i32 30)
  %1023 = add nsw i32 %.7.4, 1
  br label %.outer.backedge.4

; <label>:1024:                                   ; preds = %974
  %1025 = load i8*, i8** %41, align 16
  %1026 = call i32 @strcasecmp(i8* %1025, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1027 = icmp ne i32 %1026, 0
  br i1 %1027, label %1035, label %1028

; <label>:1028:                                   ; preds = %1024
  %1029 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %1029, label %1033, label %1030

; <label>:1030:                                   ; preds = %1028
  %1031 = load i8*, i8** %45, align 8
  %1032 = call i32 @atoi(i8* %1031) #8
  store i32 %1032, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.4

; <label>:1033:                                   ; preds = %1028
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.4)
  %1034 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1035:                                   ; preds = %1024
  %1036 = load i8*, i8** %43, align 16
  %1037 = call i32 @strcasecmp(i8* %1036, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1038 = icmp ne i32 %1037, 0
  br i1 %1038, label %1058, label %1039

; <label>:1039:                                   ; preds = %1035
  %1040 = icmp ne i32 %.1.lcssa.lcssa.4, 4
  br i1 %1040, label %1056, label %1041

; <label>:1041:                                   ; preds = %1039
  %1042 = load i8*, i8** %46, align 8
  %1043 = load i8*, i8** %47, align 16
  %1044 = load i8*, i8** %48, align 8
  %1045 = call i32 @atoi(i8* %1044) #8
  %1046 = call i32 @conv_scoped_conf(i8* %1042, i8* %1043, i32 %1045)
  %1047 = icmp ne i32 %1046, 0
  %1048 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1049 = load i8*, i8** %49, align 8
  %1050 = load i8*, i8** %50, align 16
  %1051 = load i8*, i8** %51, align 8
  br i1 %1047, label %1054, label %1052

; <label>:1052:                                   ; preds = %1041
  %1053 = call i32 @atoi(i8* %1051) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1048, i8* %1049, i8* %1050, i32 %1053)
  br label %.outer.backedge.4

; <label>:1054:                                   ; preds = %1041
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1048, i8* %1049, i8* %1050, i8* %1051)
  %1055 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1056:                                   ; preds = %1039
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.4)
  %1057 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1058:                                   ; preds = %1035
  %1059 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.4, i8* %1059)
  %1060 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

.outer.backedge.4:                                ; preds = %1058, %1056, %1054, %1052, %1033, %1030, %1022, %1021, %.loopexit.4, %972, %969, %961, %958, %950, %949, %941, %939, %938, %924, %921, %917, %912
  %.03.ph.be.4 = phi i32 [ %913, %912 ], [ %923, %921 ], [ %925, %924 ], [ %.03.ph.be.3, %917 ], [ %942, %941 ], [ %940, %939 ], [ %.03.ph.be.3, %938 ], [ %951, %950 ], [ %.03.ph.be.3, %949 ], [ %962, %961 ], [ %.03.ph.be.3, %958 ], [ %973, %972 ], [ %.03.ph.be.3, %969 ], [ %1023, %1022 ], [ %.7.4, %1021 ], [ %.7.4, %.loopexit.4 ], [ %1034, %1033 ], [ %.03.ph.be.3, %1030 ], [ %1060, %1058 ], [ %1057, %1056 ], [ %1055, %1054 ], [ %.03.ph.be.3, %1052 ]
  call void @__loop_iteration_test___2()
  %1061 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1062 = icmp ne i8* %1061, null
  br i1 %1062, label %.lr.ph.5, label %.outer._crit_edge.loopexit1

.lr.ph.5:                                         ; preds = %.outer.backedge.4
  call void @unroll_loop(i32 48)
  br label %1063

; <label>:1063:                                   ; preds = %1097, %.lr.ph.5
  %.0712.5 = phi i32 [ %.lcssa.4, %.lr.ph.5 ], [ %1064, %1097 ]
  call void @unroll_loop(i32 44)
  %1064 = add nsw i32 %.0712.5, 1
  %1065 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1066 = icmp ne i8* %1065, null
  br i1 %1066, label %1067, label %1068

; <label>:1067:                                   ; preds = %1063
  store i8 0, i8* %1065, align 1
  br label %1068

; <label>:1068:                                   ; preds = %1067, %1063
  %1069 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1070 = icmp ne i8* %1069, null
  br i1 %1070, label %1071, label %1072

; <label>:1071:                                   ; preds = %1068
  store i8 0, i8* %1069, align 1
  br label %1072

; <label>:1072:                                   ; preds = %1071, %1068
  %1073 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1074 = icmp ne i8* %1073, null
  br i1 %1074, label %1075, label %1076

; <label>:1075:                                   ; preds = %1072
  store i8 0, i8* %1073, align 1
  br label %1076

; <label>:1076:                                   ; preds = %1075, %1072
  %1077 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1078 = icmp ne i8* %1077, null
  br i1 %1078, label %1079, label %1080

; <label>:1079:                                   ; preds = %1076
  store i8 0, i8* %1077, align 1
  br label %1080

; <label>:1080:                                   ; preds = %1079, %1076
  %1081 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1081, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1082 = load i8*, i8** %26, align 8
  %1083 = icmp ne i8* %1082, null
  %.14.5 = select i1 %1083, i32 1, i32 0
  %1084 = select i1 %1083, i1 true, i1 false
  br i1 %1084, label %.lr.ph6.preheader.5, label %._crit_edge.5

.lr.ph6.preheader.5:                              ; preds = %1080
  br label %.lr.ph6.5

.lr.ph6.5:                                        ; preds = %.lr.ph6.5, %.lr.ph6.preheader.5
  %.15.5 = phi i32 [ %.1.5, %.lr.ph6.5 ], [ %.14.5, %.lr.ph6.preheader.5 ]
  %1085 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1086 = sext i32 %.15.5 to i64
  %1087 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1086
  store i8* %1085, i8** %1087, align 8
  call void @unroll_loop(i32 45)
  %1088 = sext i32 %.15.5 to i64
  %1089 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1088
  %1090 = load i8*, i8** %1089, align 8
  %1091 = icmp ne i8* %1090, null
  %1092 = add nsw i32 %.15.5, 1
  %1093 = icmp slt i32 %1092, 30
  %.1.5 = select i1 %1091, i32 %1092, i32 %.15.5
  %1094 = select i1 %1091, i1 %1093, i1 false
  br i1 %1094, label %.lr.ph6.5, label %._crit_edge.loopexit.5

._crit_edge.loopexit.5:                           ; preds = %.lr.ph6.5
  %.1.lcssa.ph.5 = phi i32 [ %.1.5, %.lr.ph6.5 ]
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.loopexit.5, %1080
  %.1.lcssa.5 = phi i32 [ %.14.5, %1080 ], [ %.1.lcssa.ph.5, %._crit_edge.loopexit.5 ]
  %1095 = load i8*, i8** %27, align 16
  %1096 = icmp ne i8* %1095, null
  br i1 %1096, label %1100, label %1097

; <label>:1097:                                   ; preds = %._crit_edge.5
  %1098 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1099 = icmp ne i8* %1098, null
  br i1 %1099, label %1063, label %.outer._crit_edge.loopexit.loopexit5

; <label>:1100:                                   ; preds = %._crit_edge.5
  %.1.lcssa.lcssa.5 = phi i32 [ %.1.lcssa.5, %._crit_edge.5 ]
  %.lcssa.5 = phi i32 [ %1064, %._crit_edge.5 ]
  %1101 = load i8*, i8** %28, align 16
  %1102 = call i32 @strcasecmp(i8* %1101, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1103 = icmp ne i32 %1102, 0
  br i1 %1103, label %1129, label %1104

; <label>:1104:                                   ; preds = %1100
  %1105 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  %1106 = icmp sgt i32 %.1.lcssa.lcssa.5, 4
  %or.cond.5 = or i1 %1105, %1106
  br i1 %or.cond.5, label %1127, label %1107

; <label>:1107:                                   ; preds = %1104
  %1108 = icmp sgt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1108, label %1109, label %1120

; <label>:1109:                                   ; preds = %1107
  %1110 = load i8*, i8** %34, align 8
  %1111 = call i32 @strcasecmp(i8* %1110, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1112 = icmp ne i32 %1111, 0
  br i1 %1112, label %1124, label %1113

; <label>:1113:                                   ; preds = %1109
  %1114 = icmp sge i32 %.1.lcssa.lcssa.5, 3
  br i1 %1114, label %1117, label %1115

; <label>:1115:                                   ; preds = %1113
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.5)
  %1116 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1117:                                   ; preds = %1113
  %1118 = load i8*, i8** %40, align 8
  %1119 = call i32 @atoi(i8* %1118) #8
  br label %1120

; <label>:1120:                                   ; preds = %1117, %1107
  %.08.5 = phi i32 [ %1119, %1117 ], [ 53, %1107 ]
  %1121 = load i8*, i8** %35, align 8
  %1122 = call i32 @fwd_add(i8* %1121, i32 %.08.5)
  %1123 = icmp eq i32 %1122, -1
  br i1 %1123, label %.loopexit1.loopexit, label %.outer.backedge.5

; <label>:1124:                                   ; preds = %1109
  %1125 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.5, i8* %1125)
  %1126 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1127:                                   ; preds = %1104
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.5)
  %1128 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1129:                                   ; preds = %1100
  %1130 = load i8*, i8** %29, align 16
  %1131 = call i32 @strcasecmp(i8* %1130, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1132 = icmp ne i32 %1131, 0
  br i1 %1132, label %1146, label %1133

; <label>:1133:                                   ; preds = %1129
  %1134 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1134, label %1144, label %1135

; <label>:1135:                                   ; preds = %1133
  %1136 = load i8*, i8** %32, align 8
  %1137 = call i32 @conv_trick_conf(i8* %1136)
  %1138 = icmp ne i32 %1137, 0
  %1139 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1140 = load i8*, i8** %33, align 8
  br i1 %1138, label %1142, label %1141

; <label>:1141:                                   ; preds = %1135
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1139, i8* %1140)
  br label %.outer.backedge.5

; <label>:1142:                                   ; preds = %1135
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1139, i8* %1140)
  %1143 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1144:                                   ; preds = %1133
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.5)
  %1145 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1146:                                   ; preds = %1129
  %1147 = load i8*, i8** %30, align 16
  %1148 = call i32 @strcasecmp(i8* %1147, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1149 = icmp ne i32 %1148, 0
  br i1 %1149, label %1155, label %1150

; <label>:1150:                                   ; preds = %1146
  %1151 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1151, label %1153, label %1152

; <label>:1152:                                   ; preds = %1150
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.5

; <label>:1153:                                   ; preds = %1150
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.5)
  %1154 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1155:                                   ; preds = %1146
  %1156 = load i8*, i8** %31, align 16
  %1157 = call i32 @strcasecmp(i8* %1156, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1158 = icmp ne i32 %1157, 0
  br i1 %1158, label %1166, label %1159

; <label>:1159:                                   ; preds = %1155
  %1160 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1160, label %1164, label %1161

; <label>:1161:                                   ; preds = %1159
  %1162 = load i8*, i8** %39, align 8
  %1163 = call i32 @atoi(i8* %1162) #8
  store i32 %1163, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.5

; <label>:1164:                                   ; preds = %1159
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.5)
  %1165 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1166:                                   ; preds = %1155
  %1167 = load i8*, i8** %36, align 16
  %1168 = call i32 @strcasecmp(i8* %1167, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1169 = icmp ne i32 %1168, 0
  br i1 %1169, label %1177, label %1170

; <label>:1170:                                   ; preds = %1166
  %1171 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1171, label %1175, label %1172

; <label>:1172:                                   ; preds = %1170
  %1173 = load i8*, i8** %42, align 8
  %1174 = call noalias i8* @strdup(i8* %1173) #9, !track !108
  store i8* %1174, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.5

; <label>:1175:                                   ; preds = %1170
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.5)
  %1176 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1177:                                   ; preds = %1166
  %1178 = load i8*, i8** %38, align 16
  %1179 = call i32 @strcasecmp(i8* %1178, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1180 = icmp ne i32 %1179, 0
  br i1 %1180, label %1227, label %1181

; <label>:1181:                                   ; preds = %1177
  %1182 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1182, label %1183, label %1185

; <label>:1183:                                   ; preds = %1181
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.5)
  %1184 = add nsw i32 %.03.ph.be.4, 1
  br label %1185

; <label>:1185:                                   ; preds = %1183, %1181
  %.7.5 = phi i32 [ %1184, %1183 ], [ %.03.ph.be.4, %1181 ]
  br label %1186

; <label>:1186:                                   ; preds = %1186, %1185
  %lsr.iv.5 = phi i64 [ %lsr.iv.next.5, %1186 ], [ -1, %1185 ]
  %1187 = add i64 %lsr.iv.5, 1
  call void @unroll_loop(i32 46)
  %1188 = shl i64 %lsr.iv.5, 3
  %uglygep.5 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1188
  %uglygep3.5 = bitcast i8* %uglygep.5 to i8**
  %scevgep.5 = getelementptr i8*, i8** %uglygep3.5, i64 111
  %1189 = load i8*, i8** %scevgep.5, align 8
  %1190 = icmp ne i8* %1189, null
  %1191 = icmp ult i64 %1187, 30
  %spec.select.5 = select i1 %1190, i1 %1191, i1 false
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %spec.select.5, label %1186, label %1192

; <label>:1192:                                   ; preds = %1186
  %.01.lcssa.wide.5 = phi i64 [ %lsr.iv.next.5, %1186 ]
  %1193 = trunc i64 %.01.lcssa.wide.5 to i32
  %1194 = add nsw i32 %1193, %.1.lcssa.lcssa.5
  %1195 = sub nsw i32 %1194, 1
  %1196 = icmp sgt i32 %1195, 30
  br i1 %1196, label %1225, label %1197

; <label>:1197:                                   ; preds = %1192
  %1198 = sub nsw i32 %.1.lcssa.lcssa.5, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.5, i32 %1198)
  %1199 = add nsw i32 %.1.lcssa.lcssa.5, -1
  %1200 = add nsw i32 %1193, %.1.lcssa.lcssa.5
  %1201 = sext i32 %1200 to i64
  %1202 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1201
  store i8* null, i8** %1202, align 8
  %1203 = icmp ne i32 %1199, 0
  br i1 %1203, label %.lr.ph16.5, label %.loopexit.5

.lr.ph16.5:                                       ; preds = %1197
  %1204 = add i32 %.1.lcssa.lcssa.5, -1
  %1205 = sext i32 %1204 to i64
  %1206 = sext i32 %1193 to i64
  %scevgep4.5 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1205
  %1207 = shl i64 %1205, 1
  %1208 = shl i64 %1206, 1
  %1209 = add i64 %1207, %1208
  %scevgep9.5 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1209
  %1210 = sub i32 1, %.1.lcssa.lcssa.5
  %1211 = zext i32 %1210 to i64
  br label %1212

; <label>:1212:                                   ; preds = %1217, %.lr.ph16.5
  %lsr.iv5.5 = phi i64 [ 0, %.lr.ph16.5 ], [ %lsr.iv.next6.5, %1217 ]
  call void @unroll_loop(i32 47)
  %scevgep7.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1213 = load i8*, i8** %scevgep7.5, align 8
  %1214 = call i32 @strcmp(i8* %1213, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1215 = icmp ne i32 %1214, 0
  br i1 %1215, label %1217, label %1216

; <label>:1216:                                   ; preds = %1212
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.5

; <label>:1217:                                   ; preds = %1212
  %scevgep8.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1218 = load i8*, i8** %scevgep8.5, align 8
  %1219 = call noalias i8* @strdup(i8* %1218) #9, !track !109
  %1220 = shl i64 %lsr.iv5.5, 1
  %scevgep10.5 = getelementptr i32, i32* %scevgep9.5, i64 %1220
  %scevgep1011.5 = bitcast i32* %scevgep10.5 to i8**
  store i8* %1219, i8** %scevgep1011.5, align 8
  %lsr.iv.next6.5 = add nsw i64 %lsr.iv5.5, -1
  %tmp.5 = trunc i64 %lsr.iv.next6.5 to i32
  %1221 = icmp ne i32 %1210, %tmp.5
  br i1 %1221, label %1212, label %.loopexit.loopexit.5

.loopexit.loopexit.5:                             ; preds = %1217
  br label %.loopexit.5

.loopexit.5:                                      ; preds = %.loopexit.loopexit.5, %1216, %1197
  %1222 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1223 = icmp ne i8* %1222, null
  br i1 %1223, label %1224, label %.outer.backedge.5

; <label>:1224:                                   ; preds = %.loopexit.5
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.5

; <label>:1225:                                   ; preds = %1192
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.5, i32 30)
  %1226 = add nsw i32 %.7.5, 1
  br label %.outer.backedge.5

; <label>:1227:                                   ; preds = %1177
  %1228 = load i8*, i8** %41, align 16
  %1229 = call i32 @strcasecmp(i8* %1228, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1230 = icmp ne i32 %1229, 0
  br i1 %1230, label %1238, label %1231

; <label>:1231:                                   ; preds = %1227
  %1232 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1232, label %1236, label %1233

; <label>:1233:                                   ; preds = %1231
  %1234 = load i8*, i8** %45, align 8
  %1235 = call i32 @atoi(i8* %1234) #8
  store i32 %1235, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.5

; <label>:1236:                                   ; preds = %1231
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.5)
  %1237 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1238:                                   ; preds = %1227
  %1239 = load i8*, i8** %43, align 16
  %1240 = call i32 @strcasecmp(i8* %1239, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1241 = icmp ne i32 %1240, 0
  br i1 %1241, label %1261, label %1242

; <label>:1242:                                   ; preds = %1238
  %1243 = icmp ne i32 %.1.lcssa.lcssa.5, 4
  br i1 %1243, label %1259, label %1244

; <label>:1244:                                   ; preds = %1242
  %1245 = load i8*, i8** %46, align 8
  %1246 = load i8*, i8** %47, align 16
  %1247 = load i8*, i8** %48, align 8
  %1248 = call i32 @atoi(i8* %1247) #8
  %1249 = call i32 @conv_scoped_conf(i8* %1245, i8* %1246, i32 %1248)
  %1250 = icmp ne i32 %1249, 0
  %1251 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1252 = load i8*, i8** %49, align 8
  %1253 = load i8*, i8** %50, align 16
  %1254 = load i8*, i8** %51, align 8
  br i1 %1250, label %1257, label %1255

; <label>:1255:                                   ; preds = %1244
  %1256 = call i32 @atoi(i8* %1254) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1251, i8* %1252, i8* %1253, i32 %1256)
  br label %.outer.backedge.5

; <label>:1257:                                   ; preds = %1244
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1251, i8* %1252, i8* %1253, i8* %1254)
  %1258 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1259:                                   ; preds = %1242
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.5)
  %1260 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1261:                                   ; preds = %1238
  %1262 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.5, i8* %1262)
  %1263 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

.outer.backedge.5:                                ; preds = %1261, %1259, %1257, %1255, %1236, %1233, %1225, %1224, %.loopexit.5, %1175, %1172, %1164, %1161, %1153, %1152, %1144, %1142, %1141, %1127, %1124, %1120, %1115
  %.03.ph.be.5 = phi i32 [ %1116, %1115 ], [ %1126, %1124 ], [ %1128, %1127 ], [ %.03.ph.be.4, %1120 ], [ %1145, %1144 ], [ %1143, %1142 ], [ %.03.ph.be.4, %1141 ], [ %1154, %1153 ], [ %.03.ph.be.4, %1152 ], [ %1165, %1164 ], [ %.03.ph.be.4, %1161 ], [ %1176, %1175 ], [ %.03.ph.be.4, %1172 ], [ %1226, %1225 ], [ %.7.5, %1224 ], [ %.7.5, %.loopexit.5 ], [ %1237, %1236 ], [ %.03.ph.be.4, %1233 ], [ %1263, %1261 ], [ %1260, %1259 ], [ %1258, %1257 ], [ %.03.ph.be.4, %1255 ]
  call void @__loop_iteration_test___2()
  %1264 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1265 = icmp ne i8* %1264, null
  br i1 %1265, label %.lr.ph.6, label %.outer._crit_edge.loopexit1

.lr.ph.6:                                         ; preds = %.outer.backedge.5
  call void @unroll_loop(i32 48)
  br label %1266

; <label>:1266:                                   ; preds = %1300, %.lr.ph.6
  %.0712.6 = phi i32 [ %.lcssa.5, %.lr.ph.6 ], [ %1267, %1300 ]
  call void @unroll_loop(i32 44)
  %1267 = add nsw i32 %.0712.6, 1
  %1268 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1269 = icmp ne i8* %1268, null
  br i1 %1269, label %1270, label %1271

; <label>:1270:                                   ; preds = %1266
  store i8 0, i8* %1268, align 1
  br label %1271

; <label>:1271:                                   ; preds = %1270, %1266
  %1272 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1273 = icmp ne i8* %1272, null
  br i1 %1273, label %1274, label %1275

; <label>:1274:                                   ; preds = %1271
  store i8 0, i8* %1272, align 1
  br label %1275

; <label>:1275:                                   ; preds = %1274, %1271
  %1276 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1277 = icmp ne i8* %1276, null
  br i1 %1277, label %1278, label %1279

; <label>:1278:                                   ; preds = %1275
  store i8 0, i8* %1276, align 1
  br label %1279

; <label>:1279:                                   ; preds = %1278, %1275
  %1280 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1281 = icmp ne i8* %1280, null
  br i1 %1281, label %1282, label %1283

; <label>:1282:                                   ; preds = %1279
  store i8 0, i8* %1280, align 1
  br label %1283

; <label>:1283:                                   ; preds = %1282, %1279
  %1284 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1284, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1285 = load i8*, i8** %26, align 8
  %1286 = icmp ne i8* %1285, null
  %.14.6 = select i1 %1286, i32 1, i32 0
  %1287 = select i1 %1286, i1 true, i1 false
  br i1 %1287, label %.lr.ph6.preheader.6, label %._crit_edge.6

.lr.ph6.preheader.6:                              ; preds = %1283
  br label %.lr.ph6.6

.lr.ph6.6:                                        ; preds = %.lr.ph6.6, %.lr.ph6.preheader.6
  %.15.6 = phi i32 [ %.1.6, %.lr.ph6.6 ], [ %.14.6, %.lr.ph6.preheader.6 ]
  %1288 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1289 = sext i32 %.15.6 to i64
  %1290 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1289
  store i8* %1288, i8** %1290, align 8
  call void @unroll_loop(i32 45)
  %1291 = sext i32 %.15.6 to i64
  %1292 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1291
  %1293 = load i8*, i8** %1292, align 8
  %1294 = icmp ne i8* %1293, null
  %1295 = add nsw i32 %.15.6, 1
  %1296 = icmp slt i32 %1295, 30
  %.1.6 = select i1 %1294, i32 %1295, i32 %.15.6
  %1297 = select i1 %1294, i1 %1296, i1 false
  br i1 %1297, label %.lr.ph6.6, label %._crit_edge.loopexit.6

._crit_edge.loopexit.6:                           ; preds = %.lr.ph6.6
  %.1.lcssa.ph.6 = phi i32 [ %.1.6, %.lr.ph6.6 ]
  br label %._crit_edge.6

._crit_edge.6:                                    ; preds = %._crit_edge.loopexit.6, %1283
  %.1.lcssa.6 = phi i32 [ %.14.6, %1283 ], [ %.1.lcssa.ph.6, %._crit_edge.loopexit.6 ]
  %1298 = load i8*, i8** %27, align 16
  %1299 = icmp ne i8* %1298, null
  br i1 %1299, label %1303, label %1300

; <label>:1300:                                   ; preds = %._crit_edge.6
  %1301 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1302 = icmp ne i8* %1301, null
  br i1 %1302, label %1266, label %.outer._crit_edge.loopexit.loopexit6

; <label>:1303:                                   ; preds = %._crit_edge.6
  %.1.lcssa.lcssa.6 = phi i32 [ %.1.lcssa.6, %._crit_edge.6 ]
  %.lcssa.6 = phi i32 [ %1267, %._crit_edge.6 ]
  %1304 = load i8*, i8** %28, align 16
  %1305 = call i32 @strcasecmp(i8* %1304, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1306 = icmp ne i32 %1305, 0
  br i1 %1306, label %1332, label %1307

; <label>:1307:                                   ; preds = %1303
  %1308 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  %1309 = icmp sgt i32 %.1.lcssa.lcssa.6, 4
  %or.cond.6 = or i1 %1308, %1309
  br i1 %or.cond.6, label %1330, label %1310

; <label>:1310:                                   ; preds = %1307
  %1311 = icmp sgt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1311, label %1312, label %1323

; <label>:1312:                                   ; preds = %1310
  %1313 = load i8*, i8** %34, align 8
  %1314 = call i32 @strcasecmp(i8* %1313, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1315 = icmp ne i32 %1314, 0
  br i1 %1315, label %1327, label %1316

; <label>:1316:                                   ; preds = %1312
  %1317 = icmp sge i32 %.1.lcssa.lcssa.6, 3
  br i1 %1317, label %1320, label %1318

; <label>:1318:                                   ; preds = %1316
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.6)
  %1319 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1320:                                   ; preds = %1316
  %1321 = load i8*, i8** %40, align 8
  %1322 = call i32 @atoi(i8* %1321) #8
  br label %1323

; <label>:1323:                                   ; preds = %1320, %1310
  %.08.6 = phi i32 [ %1322, %1320 ], [ 53, %1310 ]
  %1324 = load i8*, i8** %35, align 8
  %1325 = call i32 @fwd_add(i8* %1324, i32 %.08.6)
  %1326 = icmp eq i32 %1325, -1
  br i1 %1326, label %.loopexit1.loopexit, label %.outer.backedge.6

; <label>:1327:                                   ; preds = %1312
  %1328 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.6, i8* %1328)
  %1329 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1330:                                   ; preds = %1307
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.6)
  %1331 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1332:                                   ; preds = %1303
  %1333 = load i8*, i8** %29, align 16
  %1334 = call i32 @strcasecmp(i8* %1333, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1335 = icmp ne i32 %1334, 0
  br i1 %1335, label %1349, label %1336

; <label>:1336:                                   ; preds = %1332
  %1337 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1337, label %1347, label %1338

; <label>:1338:                                   ; preds = %1336
  %1339 = load i8*, i8** %32, align 8
  %1340 = call i32 @conv_trick_conf(i8* %1339)
  %1341 = icmp ne i32 %1340, 0
  %1342 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1343 = load i8*, i8** %33, align 8
  br i1 %1341, label %1345, label %1344

; <label>:1344:                                   ; preds = %1338
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1342, i8* %1343)
  br label %.outer.backedge.6

; <label>:1345:                                   ; preds = %1338
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1342, i8* %1343)
  %1346 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1347:                                   ; preds = %1336
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.6)
  %1348 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1349:                                   ; preds = %1332
  %1350 = load i8*, i8** %30, align 16
  %1351 = call i32 @strcasecmp(i8* %1350, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1352 = icmp ne i32 %1351, 0
  br i1 %1352, label %1358, label %1353

; <label>:1353:                                   ; preds = %1349
  %1354 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1354, label %1356, label %1355

; <label>:1355:                                   ; preds = %1353
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.6

; <label>:1356:                                   ; preds = %1353
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.6)
  %1357 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1358:                                   ; preds = %1349
  %1359 = load i8*, i8** %31, align 16
  %1360 = call i32 @strcasecmp(i8* %1359, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1361 = icmp ne i32 %1360, 0
  br i1 %1361, label %1369, label %1362

; <label>:1362:                                   ; preds = %1358
  %1363 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1363, label %1367, label %1364

; <label>:1364:                                   ; preds = %1362
  %1365 = load i8*, i8** %39, align 8
  %1366 = call i32 @atoi(i8* %1365) #8
  store i32 %1366, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.6

; <label>:1367:                                   ; preds = %1362
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.6)
  %1368 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1369:                                   ; preds = %1358
  %1370 = load i8*, i8** %36, align 16
  %1371 = call i32 @strcasecmp(i8* %1370, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1372 = icmp ne i32 %1371, 0
  br i1 %1372, label %1380, label %1373

; <label>:1373:                                   ; preds = %1369
  %1374 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1374, label %1378, label %1375

; <label>:1375:                                   ; preds = %1373
  %1376 = load i8*, i8** %42, align 8
  %1377 = call noalias i8* @strdup(i8* %1376) #9, !track !108
  store i8* %1377, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.6

; <label>:1378:                                   ; preds = %1373
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.6)
  %1379 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1380:                                   ; preds = %1369
  %1381 = load i8*, i8** %38, align 16
  %1382 = call i32 @strcasecmp(i8* %1381, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1383 = icmp ne i32 %1382, 0
  br i1 %1383, label %1430, label %1384

; <label>:1384:                                   ; preds = %1380
  %1385 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1385, label %1386, label %1388

; <label>:1386:                                   ; preds = %1384
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.6)
  %1387 = add nsw i32 %.03.ph.be.5, 1
  br label %1388

; <label>:1388:                                   ; preds = %1386, %1384
  %.7.6 = phi i32 [ %1387, %1386 ], [ %.03.ph.be.5, %1384 ]
  br label %1389

; <label>:1389:                                   ; preds = %1389, %1388
  %lsr.iv.6 = phi i64 [ %lsr.iv.next.6, %1389 ], [ -1, %1388 ]
  %1390 = add i64 %lsr.iv.6, 1
  call void @unroll_loop(i32 46)
  %1391 = shl i64 %lsr.iv.6, 3
  %uglygep.6 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1391
  %uglygep3.6 = bitcast i8* %uglygep.6 to i8**
  %scevgep.6 = getelementptr i8*, i8** %uglygep3.6, i64 111
  %1392 = load i8*, i8** %scevgep.6, align 8
  %1393 = icmp ne i8* %1392, null
  %1394 = icmp ult i64 %1390, 30
  %spec.select.6 = select i1 %1393, i1 %1394, i1 false
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %spec.select.6, label %1389, label %1395

; <label>:1395:                                   ; preds = %1389
  %.01.lcssa.wide.6 = phi i64 [ %lsr.iv.next.6, %1389 ]
  %1396 = trunc i64 %.01.lcssa.wide.6 to i32
  %1397 = add nsw i32 %1396, %.1.lcssa.lcssa.6
  %1398 = sub nsw i32 %1397, 1
  %1399 = icmp sgt i32 %1398, 30
  br i1 %1399, label %1428, label %1400

; <label>:1400:                                   ; preds = %1395
  %1401 = sub nsw i32 %.1.lcssa.lcssa.6, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.6, i32 %1401)
  %1402 = add nsw i32 %.1.lcssa.lcssa.6, -1
  %1403 = add nsw i32 %1396, %.1.lcssa.lcssa.6
  %1404 = sext i32 %1403 to i64
  %1405 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1404
  store i8* null, i8** %1405, align 8
  %1406 = icmp ne i32 %1402, 0
  br i1 %1406, label %.lr.ph16.6, label %.loopexit.6

.lr.ph16.6:                                       ; preds = %1400
  %1407 = add i32 %.1.lcssa.lcssa.6, -1
  %1408 = sext i32 %1407 to i64
  %1409 = sext i32 %1396 to i64
  %scevgep4.6 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1408
  %1410 = shl i64 %1408, 1
  %1411 = shl i64 %1409, 1
  %1412 = add i64 %1410, %1411
  %scevgep9.6 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1412
  %1413 = sub i32 1, %.1.lcssa.lcssa.6
  %1414 = zext i32 %1413 to i64
  br label %1415

; <label>:1415:                                   ; preds = %1420, %.lr.ph16.6
  %lsr.iv5.6 = phi i64 [ 0, %.lr.ph16.6 ], [ %lsr.iv.next6.6, %1420 ]
  call void @unroll_loop(i32 47)
  %scevgep7.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1416 = load i8*, i8** %scevgep7.6, align 8
  %1417 = call i32 @strcmp(i8* %1416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1418 = icmp ne i32 %1417, 0
  br i1 %1418, label %1420, label %1419

; <label>:1419:                                   ; preds = %1415
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.6

; <label>:1420:                                   ; preds = %1415
  %scevgep8.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1421 = load i8*, i8** %scevgep8.6, align 8
  %1422 = call noalias i8* @strdup(i8* %1421) #9, !track !109
  %1423 = shl i64 %lsr.iv5.6, 1
  %scevgep10.6 = getelementptr i32, i32* %scevgep9.6, i64 %1423
  %scevgep1011.6 = bitcast i32* %scevgep10.6 to i8**
  store i8* %1422, i8** %scevgep1011.6, align 8
  %lsr.iv.next6.6 = add nsw i64 %lsr.iv5.6, -1
  %tmp.6 = trunc i64 %lsr.iv.next6.6 to i32
  %1424 = icmp ne i32 %1413, %tmp.6
  br i1 %1424, label %1415, label %.loopexit.loopexit.6

.loopexit.loopexit.6:                             ; preds = %1420
  br label %.loopexit.6

.loopexit.6:                                      ; preds = %.loopexit.loopexit.6, %1419, %1400
  %1425 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1426 = icmp ne i8* %1425, null
  br i1 %1426, label %1427, label %.outer.backedge.6

; <label>:1427:                                   ; preds = %.loopexit.6
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.6

; <label>:1428:                                   ; preds = %1395
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.6, i32 30)
  %1429 = add nsw i32 %.7.6, 1
  br label %.outer.backedge.6

; <label>:1430:                                   ; preds = %1380
  %1431 = load i8*, i8** %41, align 16
  %1432 = call i32 @strcasecmp(i8* %1431, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1433 = icmp ne i32 %1432, 0
  br i1 %1433, label %1441, label %1434

; <label>:1434:                                   ; preds = %1430
  %1435 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1435, label %1439, label %1436

; <label>:1436:                                   ; preds = %1434
  %1437 = load i8*, i8** %45, align 8
  %1438 = call i32 @atoi(i8* %1437) #8
  store i32 %1438, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.6

; <label>:1439:                                   ; preds = %1434
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.6)
  %1440 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1441:                                   ; preds = %1430
  %1442 = load i8*, i8** %43, align 16
  %1443 = call i32 @strcasecmp(i8* %1442, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1444 = icmp ne i32 %1443, 0
  br i1 %1444, label %1464, label %1445

; <label>:1445:                                   ; preds = %1441
  %1446 = icmp ne i32 %.1.lcssa.lcssa.6, 4
  br i1 %1446, label %1462, label %1447

; <label>:1447:                                   ; preds = %1445
  %1448 = load i8*, i8** %46, align 8
  %1449 = load i8*, i8** %47, align 16
  %1450 = load i8*, i8** %48, align 8
  %1451 = call i32 @atoi(i8* %1450) #8
  %1452 = call i32 @conv_scoped_conf(i8* %1448, i8* %1449, i32 %1451)
  %1453 = icmp ne i32 %1452, 0
  %1454 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1455 = load i8*, i8** %49, align 8
  %1456 = load i8*, i8** %50, align 16
  %1457 = load i8*, i8** %51, align 8
  br i1 %1453, label %1460, label %1458

; <label>:1458:                                   ; preds = %1447
  %1459 = call i32 @atoi(i8* %1457) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1454, i8* %1455, i8* %1456, i32 %1459)
  br label %.outer.backedge.6

; <label>:1460:                                   ; preds = %1447
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1454, i8* %1455, i8* %1456, i8* %1457)
  %1461 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1462:                                   ; preds = %1445
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.6)
  %1463 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1464:                                   ; preds = %1441
  %1465 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.6, i8* %1465)
  %1466 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

.outer.backedge.6:                                ; preds = %1464, %1462, %1460, %1458, %1439, %1436, %1428, %1427, %.loopexit.6, %1378, %1375, %1367, %1364, %1356, %1355, %1347, %1345, %1344, %1330, %1327, %1323, %1318
  %.03.ph.be.6 = phi i32 [ %1319, %1318 ], [ %1329, %1327 ], [ %1331, %1330 ], [ %.03.ph.be.5, %1323 ], [ %1348, %1347 ], [ %1346, %1345 ], [ %.03.ph.be.5, %1344 ], [ %1357, %1356 ], [ %.03.ph.be.5, %1355 ], [ %1368, %1367 ], [ %.03.ph.be.5, %1364 ], [ %1379, %1378 ], [ %.03.ph.be.5, %1375 ], [ %1429, %1428 ], [ %.7.6, %1427 ], [ %.7.6, %.loopexit.6 ], [ %1440, %1439 ], [ %.03.ph.be.5, %1436 ], [ %1466, %1464 ], [ %1463, %1462 ], [ %1461, %1460 ], [ %.03.ph.be.5, %1458 ]
  call void @__loop_iteration_test___2()
  %1467 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1468 = icmp ne i8* %1467, null
  br i1 %1468, label %.lr.ph.7, label %.outer._crit_edge.loopexit1

.lr.ph.7:                                         ; preds = %.outer.backedge.6
  call void @unroll_loop(i32 48)
  br label %1469

; <label>:1469:                                   ; preds = %1503, %.lr.ph.7
  %.0712.7 = phi i32 [ %.lcssa.6, %.lr.ph.7 ], [ %1470, %1503 ]
  call void @unroll_loop(i32 44)
  %1470 = add nsw i32 %.0712.7, 1
  %1471 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1472 = icmp ne i8* %1471, null
  br i1 %1472, label %1473, label %1474

; <label>:1473:                                   ; preds = %1469
  store i8 0, i8* %1471, align 1
  br label %1474

; <label>:1474:                                   ; preds = %1473, %1469
  %1475 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1476 = icmp ne i8* %1475, null
  br i1 %1476, label %1477, label %1478

; <label>:1477:                                   ; preds = %1474
  store i8 0, i8* %1475, align 1
  br label %1478

; <label>:1478:                                   ; preds = %1477, %1474
  %1479 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1480 = icmp ne i8* %1479, null
  br i1 %1480, label %1481, label %1482

; <label>:1481:                                   ; preds = %1478
  store i8 0, i8* %1479, align 1
  br label %1482

; <label>:1482:                                   ; preds = %1481, %1478
  %1483 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1484 = icmp ne i8* %1483, null
  br i1 %1484, label %1485, label %1486

; <label>:1485:                                   ; preds = %1482
  store i8 0, i8* %1483, align 1
  br label %1486

; <label>:1486:                                   ; preds = %1485, %1482
  %1487 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1487, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1488 = load i8*, i8** %26, align 8
  %1489 = icmp ne i8* %1488, null
  %.14.7 = select i1 %1489, i32 1, i32 0
  %1490 = select i1 %1489, i1 true, i1 false
  br i1 %1490, label %.lr.ph6.preheader.7, label %._crit_edge.7

.lr.ph6.preheader.7:                              ; preds = %1486
  br label %.lr.ph6.7

.lr.ph6.7:                                        ; preds = %.lr.ph6.7, %.lr.ph6.preheader.7
  %.15.7 = phi i32 [ %.1.7, %.lr.ph6.7 ], [ %.14.7, %.lr.ph6.preheader.7 ]
  %1491 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1492 = sext i32 %.15.7 to i64
  %1493 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1492
  store i8* %1491, i8** %1493, align 8
  call void @unroll_loop(i32 45)
  %1494 = sext i32 %.15.7 to i64
  %1495 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1494
  %1496 = load i8*, i8** %1495, align 8
  %1497 = icmp ne i8* %1496, null
  %1498 = add nsw i32 %.15.7, 1
  %1499 = icmp slt i32 %1498, 30
  %.1.7 = select i1 %1497, i32 %1498, i32 %.15.7
  %1500 = select i1 %1497, i1 %1499, i1 false
  br i1 %1500, label %.lr.ph6.7, label %._crit_edge.loopexit.7

._crit_edge.loopexit.7:                           ; preds = %.lr.ph6.7
  %.1.lcssa.ph.7 = phi i32 [ %.1.7, %.lr.ph6.7 ]
  br label %._crit_edge.7

._crit_edge.7:                                    ; preds = %._crit_edge.loopexit.7, %1486
  %.1.lcssa.7 = phi i32 [ %.14.7, %1486 ], [ %.1.lcssa.ph.7, %._crit_edge.loopexit.7 ]
  %1501 = load i8*, i8** %27, align 16
  %1502 = icmp ne i8* %1501, null
  br i1 %1502, label %1506, label %1503

; <label>:1503:                                   ; preds = %._crit_edge.7
  %1504 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1505 = icmp ne i8* %1504, null
  br i1 %1505, label %1469, label %.outer._crit_edge.loopexit.loopexit7

; <label>:1506:                                   ; preds = %._crit_edge.7
  %.1.lcssa.lcssa.7 = phi i32 [ %.1.lcssa.7, %._crit_edge.7 ]
  %.lcssa.7 = phi i32 [ %1470, %._crit_edge.7 ]
  %1507 = load i8*, i8** %28, align 16
  %1508 = call i32 @strcasecmp(i8* %1507, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1509 = icmp ne i32 %1508, 0
  br i1 %1509, label %1535, label %1510

; <label>:1510:                                   ; preds = %1506
  %1511 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  %1512 = icmp sgt i32 %.1.lcssa.lcssa.7, 4
  %or.cond.7 = or i1 %1511, %1512
  br i1 %or.cond.7, label %1533, label %1513

; <label>:1513:                                   ; preds = %1510
  %1514 = icmp sgt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1514, label %1515, label %1526

; <label>:1515:                                   ; preds = %1513
  %1516 = load i8*, i8** %34, align 8
  %1517 = call i32 @strcasecmp(i8* %1516, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1518 = icmp ne i32 %1517, 0
  br i1 %1518, label %1530, label %1519

; <label>:1519:                                   ; preds = %1515
  %1520 = icmp sge i32 %.1.lcssa.lcssa.7, 3
  br i1 %1520, label %1523, label %1521

; <label>:1521:                                   ; preds = %1519
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.7)
  %1522 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1523:                                   ; preds = %1519
  %1524 = load i8*, i8** %40, align 8
  %1525 = call i32 @atoi(i8* %1524) #8
  br label %1526

; <label>:1526:                                   ; preds = %1523, %1513
  %.08.7 = phi i32 [ %1525, %1523 ], [ 53, %1513 ]
  %1527 = load i8*, i8** %35, align 8
  %1528 = call i32 @fwd_add(i8* %1527, i32 %.08.7)
  %1529 = icmp eq i32 %1528, -1
  br i1 %1529, label %.loopexit1.loopexit, label %.outer.backedge.7

; <label>:1530:                                   ; preds = %1515
  %1531 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.7, i8* %1531)
  %1532 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1533:                                   ; preds = %1510
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.7)
  %1534 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1535:                                   ; preds = %1506
  %1536 = load i8*, i8** %29, align 16
  %1537 = call i32 @strcasecmp(i8* %1536, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1538 = icmp ne i32 %1537, 0
  br i1 %1538, label %1552, label %1539

; <label>:1539:                                   ; preds = %1535
  %1540 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1540, label %1550, label %1541

; <label>:1541:                                   ; preds = %1539
  %1542 = load i8*, i8** %32, align 8
  %1543 = call i32 @conv_trick_conf(i8* %1542)
  %1544 = icmp ne i32 %1543, 0
  %1545 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1546 = load i8*, i8** %33, align 8
  br i1 %1544, label %1548, label %1547

; <label>:1547:                                   ; preds = %1541
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1545, i8* %1546)
  br label %.outer.backedge.7

; <label>:1548:                                   ; preds = %1541
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1545, i8* %1546)
  %1549 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1550:                                   ; preds = %1539
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.7)
  %1551 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1552:                                   ; preds = %1535
  %1553 = load i8*, i8** %30, align 16
  %1554 = call i32 @strcasecmp(i8* %1553, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1555 = icmp ne i32 %1554, 0
  br i1 %1555, label %1561, label %1556

; <label>:1556:                                   ; preds = %1552
  %1557 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1557, label %1559, label %1558

; <label>:1558:                                   ; preds = %1556
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.7

; <label>:1559:                                   ; preds = %1556
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.7)
  %1560 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1561:                                   ; preds = %1552
  %1562 = load i8*, i8** %31, align 16
  %1563 = call i32 @strcasecmp(i8* %1562, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1564 = icmp ne i32 %1563, 0
  br i1 %1564, label %1572, label %1565

; <label>:1565:                                   ; preds = %1561
  %1566 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1566, label %1570, label %1567

; <label>:1567:                                   ; preds = %1565
  %1568 = load i8*, i8** %39, align 8
  %1569 = call i32 @atoi(i8* %1568) #8
  store i32 %1569, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.7

; <label>:1570:                                   ; preds = %1565
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.7)
  %1571 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1572:                                   ; preds = %1561
  %1573 = load i8*, i8** %36, align 16
  %1574 = call i32 @strcasecmp(i8* %1573, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1575 = icmp ne i32 %1574, 0
  br i1 %1575, label %1583, label %1576

; <label>:1576:                                   ; preds = %1572
  %1577 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1577, label %1581, label %1578

; <label>:1578:                                   ; preds = %1576
  %1579 = load i8*, i8** %42, align 8
  %1580 = call noalias i8* @strdup(i8* %1579) #9, !track !108
  store i8* %1580, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.7

; <label>:1581:                                   ; preds = %1576
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.7)
  %1582 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1583:                                   ; preds = %1572
  %1584 = load i8*, i8** %38, align 16
  %1585 = call i32 @strcasecmp(i8* %1584, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1586 = icmp ne i32 %1585, 0
  br i1 %1586, label %1633, label %1587

; <label>:1587:                                   ; preds = %1583
  %1588 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1588, label %1589, label %1591

; <label>:1589:                                   ; preds = %1587
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.7)
  %1590 = add nsw i32 %.03.ph.be.6, 1
  br label %1591

; <label>:1591:                                   ; preds = %1589, %1587
  %.7.7 = phi i32 [ %1590, %1589 ], [ %.03.ph.be.6, %1587 ]
  br label %1592

; <label>:1592:                                   ; preds = %1592, %1591
  %lsr.iv.7 = phi i64 [ %lsr.iv.next.7, %1592 ], [ -1, %1591 ]
  %1593 = add i64 %lsr.iv.7, 1
  call void @unroll_loop(i32 46)
  %1594 = shl i64 %lsr.iv.7, 3
  %uglygep.7 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1594
  %uglygep3.7 = bitcast i8* %uglygep.7 to i8**
  %scevgep.7 = getelementptr i8*, i8** %uglygep3.7, i64 111
  %1595 = load i8*, i8** %scevgep.7, align 8
  %1596 = icmp ne i8* %1595, null
  %1597 = icmp ult i64 %1593, 30
  %spec.select.7 = select i1 %1596, i1 %1597, i1 false
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %spec.select.7, label %1592, label %1598

; <label>:1598:                                   ; preds = %1592
  %.01.lcssa.wide.7 = phi i64 [ %lsr.iv.next.7, %1592 ]
  %1599 = trunc i64 %.01.lcssa.wide.7 to i32
  %1600 = add nsw i32 %1599, %.1.lcssa.lcssa.7
  %1601 = sub nsw i32 %1600, 1
  %1602 = icmp sgt i32 %1601, 30
  br i1 %1602, label %1631, label %1603

; <label>:1603:                                   ; preds = %1598
  %1604 = sub nsw i32 %.1.lcssa.lcssa.7, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.7, i32 %1604)
  %1605 = add nsw i32 %.1.lcssa.lcssa.7, -1
  %1606 = add nsw i32 %1599, %.1.lcssa.lcssa.7
  %1607 = sext i32 %1606 to i64
  %1608 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1607
  store i8* null, i8** %1608, align 8
  %1609 = icmp ne i32 %1605, 0
  br i1 %1609, label %.lr.ph16.7, label %.loopexit.7

.lr.ph16.7:                                       ; preds = %1603
  %1610 = add i32 %.1.lcssa.lcssa.7, -1
  %1611 = sext i32 %1610 to i64
  %1612 = sext i32 %1599 to i64
  %scevgep4.7 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1611
  %1613 = shl i64 %1611, 1
  %1614 = shl i64 %1612, 1
  %1615 = add i64 %1613, %1614
  %scevgep9.7 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1615
  %1616 = sub i32 1, %.1.lcssa.lcssa.7
  %1617 = zext i32 %1616 to i64
  br label %1618

; <label>:1618:                                   ; preds = %1623, %.lr.ph16.7
  %lsr.iv5.7 = phi i64 [ 0, %.lr.ph16.7 ], [ %lsr.iv.next6.7, %1623 ]
  call void @unroll_loop(i32 47)
  %scevgep7.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1619 = load i8*, i8** %scevgep7.7, align 8
  %1620 = call i32 @strcmp(i8* %1619, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1621 = icmp ne i32 %1620, 0
  br i1 %1621, label %1623, label %1622

; <label>:1622:                                   ; preds = %1618
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.7

; <label>:1623:                                   ; preds = %1618
  %scevgep8.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1624 = load i8*, i8** %scevgep8.7, align 8
  %1625 = call noalias i8* @strdup(i8* %1624) #9, !track !109
  %1626 = shl i64 %lsr.iv5.7, 1
  %scevgep10.7 = getelementptr i32, i32* %scevgep9.7, i64 %1626
  %scevgep1011.7 = bitcast i32* %scevgep10.7 to i8**
  store i8* %1625, i8** %scevgep1011.7, align 8
  %lsr.iv.next6.7 = add nsw i64 %lsr.iv5.7, -1
  %tmp.7 = trunc i64 %lsr.iv.next6.7 to i32
  %1627 = icmp ne i32 %1616, %tmp.7
  br i1 %1627, label %1618, label %.loopexit.loopexit.7

.loopexit.loopexit.7:                             ; preds = %1623
  br label %.loopexit.7

.loopexit.7:                                      ; preds = %.loopexit.loopexit.7, %1622, %1603
  %1628 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1629 = icmp ne i8* %1628, null
  br i1 %1629, label %1630, label %.outer.backedge.7

; <label>:1630:                                   ; preds = %.loopexit.7
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.7

; <label>:1631:                                   ; preds = %1598
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.7, i32 30)
  %1632 = add nsw i32 %.7.7, 1
  br label %.outer.backedge.7

; <label>:1633:                                   ; preds = %1583
  %1634 = load i8*, i8** %41, align 16
  %1635 = call i32 @strcasecmp(i8* %1634, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1636 = icmp ne i32 %1635, 0
  br i1 %1636, label %1644, label %1637

; <label>:1637:                                   ; preds = %1633
  %1638 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1638, label %1642, label %1639

; <label>:1639:                                   ; preds = %1637
  %1640 = load i8*, i8** %45, align 8
  %1641 = call i32 @atoi(i8* %1640) #8
  store i32 %1641, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.7

; <label>:1642:                                   ; preds = %1637
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.7)
  %1643 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1644:                                   ; preds = %1633
  %1645 = load i8*, i8** %43, align 16
  %1646 = call i32 @strcasecmp(i8* %1645, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1647 = icmp ne i32 %1646, 0
  br i1 %1647, label %1667, label %1648

; <label>:1648:                                   ; preds = %1644
  %1649 = icmp ne i32 %.1.lcssa.lcssa.7, 4
  br i1 %1649, label %1665, label %1650

; <label>:1650:                                   ; preds = %1648
  %1651 = load i8*, i8** %46, align 8
  %1652 = load i8*, i8** %47, align 16
  %1653 = load i8*, i8** %48, align 8
  %1654 = call i32 @atoi(i8* %1653) #8
  %1655 = call i32 @conv_scoped_conf(i8* %1651, i8* %1652, i32 %1654)
  %1656 = icmp ne i32 %1655, 0
  %1657 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1658 = load i8*, i8** %49, align 8
  %1659 = load i8*, i8** %50, align 16
  %1660 = load i8*, i8** %51, align 8
  br i1 %1656, label %1663, label %1661

; <label>:1661:                                   ; preds = %1650
  %1662 = call i32 @atoi(i8* %1660) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1657, i8* %1658, i8* %1659, i32 %1662)
  br label %.outer.backedge.7

; <label>:1663:                                   ; preds = %1650
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1657, i8* %1658, i8* %1659, i8* %1660)
  %1664 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1665:                                   ; preds = %1648
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.7)
  %1666 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1667:                                   ; preds = %1644
  %1668 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.7, i8* %1668)
  %1669 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

.outer.backedge.7:                                ; preds = %1667, %1665, %1663, %1661, %1642, %1639, %1631, %1630, %.loopexit.7, %1581, %1578, %1570, %1567, %1559, %1558, %1550, %1548, %1547, %1533, %1530, %1526, %1521
  %.03.ph.be.7 = phi i32 [ %1522, %1521 ], [ %1532, %1530 ], [ %1534, %1533 ], [ %.03.ph.be.6, %1526 ], [ %1551, %1550 ], [ %1549, %1548 ], [ %.03.ph.be.6, %1547 ], [ %1560, %1559 ], [ %.03.ph.be.6, %1558 ], [ %1571, %1570 ], [ %.03.ph.be.6, %1567 ], [ %1582, %1581 ], [ %.03.ph.be.6, %1578 ], [ %1632, %1631 ], [ %.7.7, %1630 ], [ %.7.7, %.loopexit.7 ], [ %1643, %1642 ], [ %.03.ph.be.6, %1639 ], [ %1669, %1667 ], [ %1666, %1665 ], [ %1664, %1663 ], [ %.03.ph.be.6, %1661 ]
  call void @__loop_iteration_test___2()
  %1670 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  br label %.outer._crit_edge.loopexit1

; <label>:1671:                                   ; preds = %52
  call void @unroll_loop(i32 44)
  %1672 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1673 = icmp ne i8* %1672, null
  br i1 %1673, label %1674, label %1675

; <label>:1674:                                   ; preds = %1671
  store i8 0, i8* %1672, align 1
  br label %1675

; <label>:1675:                                   ; preds = %1674, %1671
  %1676 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1677 = icmp ne i8* %1676, null
  br i1 %1677, label %1678, label %1679

; <label>:1678:                                   ; preds = %1675
  store i8 0, i8* %1676, align 1
  br label %1679

; <label>:1679:                                   ; preds = %1678, %1675
  %1680 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1681 = icmp ne i8* %1680, null
  br i1 %1681, label %1682, label %1683

; <label>:1682:                                   ; preds = %1679
  store i8 0, i8* %1680, align 1
  br label %1683

; <label>:1683:                                   ; preds = %1682, %1679
  %1684 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1685 = icmp ne i8* %1684, null
  br i1 %1685, label %1686, label %1687

; <label>:1686:                                   ; preds = %1683
  store i8 0, i8* %1684, align 1
  br label %1687

; <label>:1687:                                   ; preds = %1686, %1683
  %1688 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1688, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1689 = load i8*, i8** %26, align 8
  %1690 = icmp ne i8* %1689, null
  %.14.12 = select i1 %1690, i32 1, i32 0
  %1691 = select i1 %1690, i1 true, i1 false
  br i1 %1691, label %.lr.ph6.preheader.13, label %._crit_edge.110

.lr.ph6.preheader.13:                             ; preds = %1687
  br label %.lr.ph6.16

.lr.ph6.16:                                       ; preds = %.lr.ph6.16, %.lr.ph6.preheader.13
  %.15.14 = phi i32 [ %.1.15, %.lr.ph6.16 ], [ %.14.12, %.lr.ph6.preheader.13 ]
  %1692 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1693 = sext i32 %.15.14 to i64
  %1694 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1693
  store i8* %1692, i8** %1694, align 8
  call void @unroll_loop(i32 45)
  %1695 = sext i32 %.15.14 to i64
  %1696 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1695
  %1697 = load i8*, i8** %1696, align 8
  %1698 = icmp ne i8* %1697, null
  %1699 = add nsw i32 %.15.14, 1
  %1700 = icmp slt i32 %1699, 30
  %.1.15 = select i1 %1698, i32 %1699, i32 %.15.14
  %1701 = select i1 %1698, i1 %1700, i1 false
  br i1 %1701, label %.lr.ph6.16, label %._crit_edge.loopexit.18

._crit_edge.loopexit.18:                          ; preds = %.lr.ph6.16
  %.1.lcssa.ph.17 = phi i32 [ %.1.15, %.lr.ph6.16 ]
  br label %._crit_edge.110

._crit_edge.110:                                  ; preds = %._crit_edge.loopexit.18, %1687
  %.1.lcssa.19 = phi i32 [ %.14.12, %1687 ], [ %.1.lcssa.ph.17, %._crit_edge.loopexit.18 ]
  %1702 = load i8*, i8** %27, align 16
  %1703 = icmp ne i8* %1702, null
  br i1 %1703, label %91, label %1704

; <label>:1704:                                   ; preds = %._crit_edge.110
  call void @__loop_iteration_test___3()
  %1705 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1706 = icmp ne i8* %1705, null
  br i1 %1706, label %1707, label %.outer._crit_edge.loopexit.loopexit

; <label>:1707:                                   ; preds = %1704
  call void @unroll_loop(i32 44)
  %1708 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1709 = icmp ne i8* %1708, null
  br i1 %1709, label %1710, label %1711

; <label>:1710:                                   ; preds = %1707
  store i8 0, i8* %1708, align 1
  br label %1711

; <label>:1711:                                   ; preds = %1710, %1707
  %1712 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1713 = icmp ne i8* %1712, null
  br i1 %1713, label %1714, label %1715

; <label>:1714:                                   ; preds = %1711
  store i8 0, i8* %1712, align 1
  br label %1715

; <label>:1715:                                   ; preds = %1714, %1711
  %1716 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1717 = icmp ne i8* %1716, null
  br i1 %1717, label %1718, label %1719

; <label>:1718:                                   ; preds = %1715
  store i8 0, i8* %1716, align 1
  br label %1719

; <label>:1719:                                   ; preds = %1718, %1715
  %1720 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1721 = icmp ne i8* %1720, null
  br i1 %1721, label %1722, label %1723

; <label>:1722:                                   ; preds = %1719
  store i8 0, i8* %1720, align 1
  br label %1723

; <label>:1723:                                   ; preds = %1722, %1719
  %1724 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1724, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1725 = load i8*, i8** %26, align 8
  %1726 = icmp ne i8* %1725, null
  %.14.212 = select i1 %1726, i32 1, i32 0
  %1727 = select i1 %1726, i1 true, i1 false
  br i1 %1727, label %.lr.ph6.preheader.213, label %._crit_edge.220

.lr.ph6.preheader.213:                            ; preds = %1723
  br label %.lr.ph6.216

.lr.ph6.216:                                      ; preds = %.lr.ph6.216, %.lr.ph6.preheader.213
  %.15.214 = phi i32 [ %.1.215, %.lr.ph6.216 ], [ %.14.212, %.lr.ph6.preheader.213 ]
  %1728 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1729 = sext i32 %.15.214 to i64
  %1730 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1729
  store i8* %1728, i8** %1730, align 8
  call void @unroll_loop(i32 45)
  %1731 = sext i32 %.15.214 to i64
  %1732 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1731
  %1733 = load i8*, i8** %1732, align 8
  %1734 = icmp ne i8* %1733, null
  %1735 = add nsw i32 %.15.214, 1
  %1736 = icmp slt i32 %1735, 30
  %.1.215 = select i1 %1734, i32 %1735, i32 %.15.214
  %1737 = select i1 %1734, i1 %1736, i1 false
  br i1 %1737, label %.lr.ph6.216, label %._crit_edge.loopexit.218

._crit_edge.loopexit.218:                         ; preds = %.lr.ph6.216
  %.1.lcssa.ph.217 = phi i32 [ %.1.215, %.lr.ph6.216 ]
  br label %._crit_edge.220

._crit_edge.220:                                  ; preds = %._crit_edge.loopexit.218, %1723
  %.1.lcssa.219 = phi i32 [ %.14.212, %1723 ], [ %.1.lcssa.ph.217, %._crit_edge.loopexit.218 ]
  %1738 = load i8*, i8** %27, align 16
  %1739 = icmp ne i8* %1738, null
  br i1 %1739, label %91, label %1740

; <label>:1740:                                   ; preds = %._crit_edge.220
  call void @__loop_iteration_test___3()
  %1741 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1742 = icmp ne i8* %1741, null
  br i1 %1742, label %1743, label %.outer._crit_edge.loopexit.loopexit

; <label>:1743:                                   ; preds = %1740
  call void @unroll_loop(i32 44)
  %1744 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1745 = icmp ne i8* %1744, null
  br i1 %1745, label %1746, label %1747

; <label>:1746:                                   ; preds = %1743
  store i8 0, i8* %1744, align 1
  br label %1747

; <label>:1747:                                   ; preds = %1746, %1743
  %1748 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1749 = icmp ne i8* %1748, null
  br i1 %1749, label %1750, label %1751

; <label>:1750:                                   ; preds = %1747
  store i8 0, i8* %1748, align 1
  br label %1751

; <label>:1751:                                   ; preds = %1750, %1747
  %1752 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1753 = icmp ne i8* %1752, null
  br i1 %1753, label %1754, label %1755

; <label>:1754:                                   ; preds = %1751
  store i8 0, i8* %1752, align 1
  br label %1755

; <label>:1755:                                   ; preds = %1754, %1751
  %1756 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1757 = icmp ne i8* %1756, null
  br i1 %1757, label %1758, label %1759

; <label>:1758:                                   ; preds = %1755
  store i8 0, i8* %1756, align 1
  br label %1759

; <label>:1759:                                   ; preds = %1758, %1755
  %1760 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1760, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1761 = load i8*, i8** %26, align 8
  %1762 = icmp ne i8* %1761, null
  %.14.322 = select i1 %1762, i32 1, i32 0
  %1763 = select i1 %1762, i1 true, i1 false
  br i1 %1763, label %.lr.ph6.preheader.323, label %._crit_edge.330

.lr.ph6.preheader.323:                            ; preds = %1759
  br label %.lr.ph6.326

.lr.ph6.326:                                      ; preds = %.lr.ph6.326, %.lr.ph6.preheader.323
  %.15.324 = phi i32 [ %.1.325, %.lr.ph6.326 ], [ %.14.322, %.lr.ph6.preheader.323 ]
  %1764 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1765 = sext i32 %.15.324 to i64
  %1766 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1765
  store i8* %1764, i8** %1766, align 8
  call void @unroll_loop(i32 45)
  %1767 = sext i32 %.15.324 to i64
  %1768 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1767
  %1769 = load i8*, i8** %1768, align 8
  %1770 = icmp ne i8* %1769, null
  %1771 = add nsw i32 %.15.324, 1
  %1772 = icmp slt i32 %1771, 30
  %.1.325 = select i1 %1770, i32 %1771, i32 %.15.324
  %1773 = select i1 %1770, i1 %1772, i1 false
  br i1 %1773, label %.lr.ph6.326, label %._crit_edge.loopexit.328

._crit_edge.loopexit.328:                         ; preds = %.lr.ph6.326
  %.1.lcssa.ph.327 = phi i32 [ %.1.325, %.lr.ph6.326 ]
  br label %._crit_edge.330

._crit_edge.330:                                  ; preds = %._crit_edge.loopexit.328, %1759
  %.1.lcssa.329 = phi i32 [ %.14.322, %1759 ], [ %.1.lcssa.ph.327, %._crit_edge.loopexit.328 ]
  %1774 = load i8*, i8** %27, align 16
  %1775 = icmp ne i8* %1774, null
  br i1 %1775, label %91, label %1776

; <label>:1776:                                   ; preds = %._crit_edge.330
  call void @__loop_iteration_test___3()
  %1777 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1778 = icmp ne i8* %1777, null
  br i1 %1778, label %1779, label %.outer._crit_edge.loopexit.loopexit

; <label>:1779:                                   ; preds = %1776
  call void @unroll_loop(i32 44)
  %1780 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1781 = icmp ne i8* %1780, null
  br i1 %1781, label %1782, label %1783

; <label>:1782:                                   ; preds = %1779
  store i8 0, i8* %1780, align 1
  br label %1783

; <label>:1783:                                   ; preds = %1782, %1779
  %1784 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1785 = icmp ne i8* %1784, null
  br i1 %1785, label %1786, label %1787

; <label>:1786:                                   ; preds = %1783
  store i8 0, i8* %1784, align 1
  br label %1787

; <label>:1787:                                   ; preds = %1786, %1783
  %1788 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1789 = icmp ne i8* %1788, null
  br i1 %1789, label %1790, label %1791

; <label>:1790:                                   ; preds = %1787
  store i8 0, i8* %1788, align 1
  br label %1791

; <label>:1791:                                   ; preds = %1790, %1787
  %1792 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1793 = icmp ne i8* %1792, null
  br i1 %1793, label %1794, label %1795

; <label>:1794:                                   ; preds = %1791
  store i8 0, i8* %1792, align 1
  br label %1795

; <label>:1795:                                   ; preds = %1794, %1791
  %1796 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1796, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1797 = load i8*, i8** %26, align 8
  %1798 = icmp ne i8* %1797, null
  %.14.432 = select i1 %1798, i32 1, i32 0
  %1799 = select i1 %1798, i1 true, i1 false
  br i1 %1799, label %.lr.ph6.preheader.433, label %._crit_edge.440

.lr.ph6.preheader.433:                            ; preds = %1795
  br label %.lr.ph6.436

.lr.ph6.436:                                      ; preds = %.lr.ph6.436, %.lr.ph6.preheader.433
  %.15.434 = phi i32 [ %.1.435, %.lr.ph6.436 ], [ %.14.432, %.lr.ph6.preheader.433 ]
  %1800 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1801 = sext i32 %.15.434 to i64
  %1802 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1801
  store i8* %1800, i8** %1802, align 8
  call void @unroll_loop(i32 45)
  %1803 = sext i32 %.15.434 to i64
  %1804 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1803
  %1805 = load i8*, i8** %1804, align 8
  %1806 = icmp ne i8* %1805, null
  %1807 = add nsw i32 %.15.434, 1
  %1808 = icmp slt i32 %1807, 30
  %.1.435 = select i1 %1806, i32 %1807, i32 %.15.434
  %1809 = select i1 %1806, i1 %1808, i1 false
  br i1 %1809, label %.lr.ph6.436, label %._crit_edge.loopexit.438

._crit_edge.loopexit.438:                         ; preds = %.lr.ph6.436
  %.1.lcssa.ph.437 = phi i32 [ %.1.435, %.lr.ph6.436 ]
  br label %._crit_edge.440

._crit_edge.440:                                  ; preds = %._crit_edge.loopexit.438, %1795
  %.1.lcssa.439 = phi i32 [ %.14.432, %1795 ], [ %.1.lcssa.ph.437, %._crit_edge.loopexit.438 ]
  %1810 = load i8*, i8** %27, align 16
  %1811 = icmp ne i8* %1810, null
  br i1 %1811, label %91, label %1812

; <label>:1812:                                   ; preds = %._crit_edge.440
  call void @__loop_iteration_test___3()
  %1813 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1814 = icmp ne i8* %1813, null
  br i1 %1814, label %1815, label %.outer._crit_edge.loopexit.loopexit

; <label>:1815:                                   ; preds = %1812
  call void @unroll_loop(i32 44)
  %1816 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1817 = icmp ne i8* %1816, null
  br i1 %1817, label %1818, label %1819

; <label>:1818:                                   ; preds = %1815
  store i8 0, i8* %1816, align 1
  br label %1819

; <label>:1819:                                   ; preds = %1818, %1815
  %1820 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1821 = icmp ne i8* %1820, null
  br i1 %1821, label %1822, label %1823

; <label>:1822:                                   ; preds = %1819
  store i8 0, i8* %1820, align 1
  br label %1823

; <label>:1823:                                   ; preds = %1822, %1819
  %1824 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1825 = icmp ne i8* %1824, null
  br i1 %1825, label %1826, label %1827

; <label>:1826:                                   ; preds = %1823
  store i8 0, i8* %1824, align 1
  br label %1827

; <label>:1827:                                   ; preds = %1826, %1823
  %1828 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1829 = icmp ne i8* %1828, null
  br i1 %1829, label %1830, label %1831

; <label>:1830:                                   ; preds = %1827
  store i8 0, i8* %1828, align 1
  br label %1831

; <label>:1831:                                   ; preds = %1830, %1827
  %1832 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1832, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1833 = load i8*, i8** %26, align 8
  %1834 = icmp ne i8* %1833, null
  %.14.542 = select i1 %1834, i32 1, i32 0
  %1835 = select i1 %1834, i1 true, i1 false
  br i1 %1835, label %.lr.ph6.preheader.543, label %._crit_edge.550

.lr.ph6.preheader.543:                            ; preds = %1831
  br label %.lr.ph6.546

.lr.ph6.546:                                      ; preds = %.lr.ph6.546, %.lr.ph6.preheader.543
  %.15.544 = phi i32 [ %.1.545, %.lr.ph6.546 ], [ %.14.542, %.lr.ph6.preheader.543 ]
  %1836 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1837 = sext i32 %.15.544 to i64
  %1838 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1837
  store i8* %1836, i8** %1838, align 8
  call void @unroll_loop(i32 45)
  %1839 = sext i32 %.15.544 to i64
  %1840 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1839
  %1841 = load i8*, i8** %1840, align 8
  %1842 = icmp ne i8* %1841, null
  %1843 = add nsw i32 %.15.544, 1
  %1844 = icmp slt i32 %1843, 30
  %.1.545 = select i1 %1842, i32 %1843, i32 %.15.544
  %1845 = select i1 %1842, i1 %1844, i1 false
  br i1 %1845, label %.lr.ph6.546, label %._crit_edge.loopexit.548

._crit_edge.loopexit.548:                         ; preds = %.lr.ph6.546
  %.1.lcssa.ph.547 = phi i32 [ %.1.545, %.lr.ph6.546 ]
  br label %._crit_edge.550

._crit_edge.550:                                  ; preds = %._crit_edge.loopexit.548, %1831
  %.1.lcssa.549 = phi i32 [ %.14.542, %1831 ], [ %.1.lcssa.ph.547, %._crit_edge.loopexit.548 ]
  %1846 = load i8*, i8** %27, align 16
  %1847 = icmp ne i8* %1846, null
  br i1 %1847, label %91, label %1848

; <label>:1848:                                   ; preds = %._crit_edge.550
  call void @__loop_iteration_test___3()
  %1849 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1850 = icmp ne i8* %1849, null
  br i1 %1850, label %1851, label %.outer._crit_edge.loopexit.loopexit

; <label>:1851:                                   ; preds = %1848
  call void @unroll_loop(i32 44)
  %1852 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1853 = icmp ne i8* %1852, null
  br i1 %1853, label %1854, label %1855

; <label>:1854:                                   ; preds = %1851
  store i8 0, i8* %1852, align 1
  br label %1855

; <label>:1855:                                   ; preds = %1854, %1851
  %1856 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1857 = icmp ne i8* %1856, null
  br i1 %1857, label %1858, label %1859

; <label>:1858:                                   ; preds = %1855
  store i8 0, i8* %1856, align 1
  br label %1859

; <label>:1859:                                   ; preds = %1858, %1855
  %1860 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1861 = icmp ne i8* %1860, null
  br i1 %1861, label %1862, label %1863

; <label>:1862:                                   ; preds = %1859
  store i8 0, i8* %1860, align 1
  br label %1863

; <label>:1863:                                   ; preds = %1862, %1859
  %1864 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1865 = icmp ne i8* %1864, null
  br i1 %1865, label %1866, label %1867

; <label>:1866:                                   ; preds = %1863
  store i8 0, i8* %1864, align 1
  br label %1867

; <label>:1867:                                   ; preds = %1866, %1863
  %1868 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1868, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1869 = load i8*, i8** %26, align 8
  %1870 = icmp ne i8* %1869, null
  %.14.652 = select i1 %1870, i32 1, i32 0
  %1871 = select i1 %1870, i1 true, i1 false
  br i1 %1871, label %.lr.ph6.preheader.653, label %._crit_edge.660

.lr.ph6.preheader.653:                            ; preds = %1867
  br label %.lr.ph6.656

.lr.ph6.656:                                      ; preds = %.lr.ph6.656, %.lr.ph6.preheader.653
  %.15.654 = phi i32 [ %.1.655, %.lr.ph6.656 ], [ %.14.652, %.lr.ph6.preheader.653 ]
  %1872 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1873 = sext i32 %.15.654 to i64
  %1874 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1873
  store i8* %1872, i8** %1874, align 8
  call void @unroll_loop(i32 45)
  %1875 = sext i32 %.15.654 to i64
  %1876 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1875
  %1877 = load i8*, i8** %1876, align 8
  %1878 = icmp ne i8* %1877, null
  %1879 = add nsw i32 %.15.654, 1
  %1880 = icmp slt i32 %1879, 30
  %.1.655 = select i1 %1878, i32 %1879, i32 %.15.654
  %1881 = select i1 %1878, i1 %1880, i1 false
  br i1 %1881, label %.lr.ph6.656, label %._crit_edge.loopexit.658

._crit_edge.loopexit.658:                         ; preds = %.lr.ph6.656
  %.1.lcssa.ph.657 = phi i32 [ %.1.655, %.lr.ph6.656 ]
  br label %._crit_edge.660

._crit_edge.660:                                  ; preds = %._crit_edge.loopexit.658, %1867
  %.1.lcssa.659 = phi i32 [ %.14.652, %1867 ], [ %.1.lcssa.ph.657, %._crit_edge.loopexit.658 ]
  %1882 = load i8*, i8** %27, align 16
  %1883 = icmp ne i8* %1882, null
  br i1 %1883, label %91, label %1884

; <label>:1884:                                   ; preds = %._crit_edge.660
  call void @__loop_iteration_test___3()
  %1885 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1886 = icmp ne i8* %1885, null
  br i1 %1886, label %1887, label %.outer._crit_edge.loopexit.loopexit

; <label>:1887:                                   ; preds = %1884
  call void @unroll_loop(i32 44)
  %1888 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1889 = icmp ne i8* %1888, null
  br i1 %1889, label %1890, label %1891

; <label>:1890:                                   ; preds = %1887
  store i8 0, i8* %1888, align 1
  br label %1891

; <label>:1891:                                   ; preds = %1890, %1887
  %1892 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1893 = icmp ne i8* %1892, null
  br i1 %1893, label %1894, label %1895

; <label>:1894:                                   ; preds = %1891
  store i8 0, i8* %1892, align 1
  br label %1895

; <label>:1895:                                   ; preds = %1894, %1891
  %1896 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1897 = icmp ne i8* %1896, null
  br i1 %1897, label %1898, label %1899

; <label>:1898:                                   ; preds = %1895
  store i8 0, i8* %1896, align 1
  br label %1899

; <label>:1899:                                   ; preds = %1898, %1895
  %1900 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1901 = icmp ne i8* %1900, null
  br i1 %1901, label %1902, label %1903

; <label>:1902:                                   ; preds = %1899
  store i8 0, i8* %1900, align 1
  br label %1903

; <label>:1903:                                   ; preds = %1902, %1899
  %1904 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1904, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1905 = load i8*, i8** %26, align 8
  %1906 = icmp ne i8* %1905, null
  %.14.762 = select i1 %1906, i32 1, i32 0
  %1907 = select i1 %1906, i1 true, i1 false
  br i1 %1907, label %.lr.ph6.preheader.763, label %._crit_edge.770

.lr.ph6.preheader.763:                            ; preds = %1903
  br label %.lr.ph6.766

.lr.ph6.766:                                      ; preds = %.lr.ph6.766, %.lr.ph6.preheader.763
  %.15.764 = phi i32 [ %.1.765, %.lr.ph6.766 ], [ %.14.762, %.lr.ph6.preheader.763 ]
  %1908 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1909 = sext i32 %.15.764 to i64
  %1910 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1909
  store i8* %1908, i8** %1910, align 8
  call void @unroll_loop(i32 45)
  %1911 = sext i32 %.15.764 to i64
  %1912 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1911
  %1913 = load i8*, i8** %1912, align 8
  %1914 = icmp ne i8* %1913, null
  %1915 = add nsw i32 %.15.764, 1
  %1916 = icmp slt i32 %1915, 30
  %.1.765 = select i1 %1914, i32 %1915, i32 %.15.764
  %1917 = select i1 %1914, i1 %1916, i1 false
  br i1 %1917, label %.lr.ph6.766, label %._crit_edge.loopexit.768

._crit_edge.loopexit.768:                         ; preds = %.lr.ph6.766
  %.1.lcssa.ph.767 = phi i32 [ %.1.765, %.lr.ph6.766 ]
  br label %._crit_edge.770

._crit_edge.770:                                  ; preds = %._crit_edge.loopexit.768, %1903
  %.1.lcssa.769 = phi i32 [ %.14.762, %1903 ], [ %.1.lcssa.ph.767, %._crit_edge.loopexit.768 ]
  %1918 = load i8*, i8** %27, align 16
  %1919 = icmp ne i8* %1918, null
  br i1 %1919, label %91, label %1920

; <label>:1920:                                   ; preds = %._crit_edge.770
  call void @__loop_iteration_test___3()
  %1921 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit

.lr.ph6.13:                                       ; preds = %.lr.ph6
  call void @__loop_iteration_test___4()
  %1922 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1923 = sext i32 2 to i64
  %1924 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i8** %1924, align 8
  call void @unroll_loop(i32 45)
  %1925 = sext i32 2 to i64
  %1926 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %1927 = load i8*, i8** %1926, align 8
  %1928 = icmp ne i64 10000601, 0
  %1929 = icmp ne i8* %1927, null
  %1930 = add nsw i32 2, 1
  %1931 = icmp slt i32 3, 30
  %.1.12 = select i1 true, i32 3, i32 2
  %1932 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.26, label %._crit_edge.loopexit

.lr.ph6.26:                                       ; preds = %.lr.ph6.13
  call void @__loop_iteration_test___4()
  %1933 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1934 = sext i32 3 to i64
  %1935 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @26, i32 0, i32 0), i8** %1935, align 8
  call void @unroll_loop(i32 45)
  %1936 = sext i32 3 to i64
  %1937 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %1938 = load i8*, i8** %1937, align 8
  %1939 = icmp ne i64 10000607, 0
  %1940 = icmp ne i8* %1938, null
  %1941 = add nsw i32 3, 1
  %1942 = icmp slt i32 4, 30
  %.1.25 = select i1 true, i32 4, i32 3
  %1943 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.39, label %._crit_edge.loopexit

.lr.ph6.39:                                       ; preds = %.lr.ph6.26
  call void @__loop_iteration_test___4()
  %1944 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1945 = sext i32 4 to i64
  %1946 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  store i8* null, i8** %1946, align 8
  call void @unroll_loop(i32 45)
  %1947 = sext i32 4 to i64
  %1948 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  %1949 = load i8*, i8** %1948, align 8
  %1950 = icmp ne i64 0, 0
  %1951 = icmp ne i8* null, null
  %1952 = add nsw i32 4, 1
  %1953 = icmp slt i32 5, 30
  %.1.38 = select i1 false, i32 5, i32 4
  %1954 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.412, label %._crit_edge.loopexit

.lr.ph6.412:                                      ; preds = %.lr.ph6.39
  call void @__loop_iteration_test___4()
  %1955 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1956 = sext i32 4 to i64
  %1957 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1956
  store i8* %1955, i8** %1957, align 8
  call void @unroll_loop(i32 45)
  %1958 = sext i32 4 to i64
  %1959 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1958
  %1960 = load i8*, i8** %1959, align 8
  %1961 = icmp ne i8* %1960, null
  %1962 = add nsw i32 4, 1
  %1963 = icmp slt i32 %1962, 30
  %.1.411 = select i1 %1961, i32 %1962, i32 4
  %1964 = select i1 %1961, i1 %1963, i1 false
  br i1 %1964, label %.lr.ph6.515, label %._crit_edge.loopexit

.lr.ph6.515:                                      ; preds = %.lr.ph6.412
  call void @__loop_iteration_test___4()
  %1965 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1966 = sext i32 %.1.411 to i64
  %1967 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1966
  store i8* %1965, i8** %1967, align 8
  call void @unroll_loop(i32 45)
  %1968 = sext i32 %.1.411 to i64
  %1969 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1968
  %1970 = load i8*, i8** %1969, align 8
  %1971 = icmp ne i8* %1970, null
  %1972 = add nsw i32 %.1.411, 1
  %1973 = icmp slt i32 %1972, 30
  %.1.514 = select i1 %1971, i32 %1972, i32 %.1.411
  %1974 = select i1 %1971, i1 %1973, i1 false
  br i1 %1974, label %.lr.ph6.618, label %._crit_edge.loopexit

.lr.ph6.618:                                      ; preds = %.lr.ph6.515
  call void @__loop_iteration_test___4()
  %1975 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1976 = sext i32 %.1.514 to i64
  %1977 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1976
  store i8* %1975, i8** %1977, align 8
  call void @unroll_loop(i32 45)
  %1978 = sext i32 %.1.514 to i64
  %1979 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1978
  %1980 = load i8*, i8** %1979, align 8
  %1981 = icmp ne i8* %1980, null
  %1982 = add nsw i32 %.1.514, 1
  %1983 = icmp slt i32 %1982, 30
  %.1.617 = select i1 %1981, i32 %1982, i32 %.1.514
  %1984 = select i1 %1981, i1 %1983, i1 false
  br i1 %1984, label %.lr.ph6.721, label %._crit_edge.loopexit

.lr.ph6.721:                                      ; preds = %.lr.ph6.618
  call void @__loop_iteration_test___4()
  %1985 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1986 = sext i32 %.1.617 to i64
  %1987 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1986
  store i8* %1985, i8** %1987, align 8
  call void @unroll_loop(i32 45)
  %1988 = sext i32 %.1.617 to i64
  %1989 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1988
  %1990 = load i8*, i8** %1989, align 8
  %1991 = icmp ne i8* %1990, null
  %1992 = add nsw i32 %.1.617, 1
  %1993 = icmp slt i32 %1992, 30
  %.1.720 = select i1 %1991, i32 %1992, i32 %.1.617
  %1994 = select i1 %1991, i1 %1993, i1 false
  br i1 %1994, label %.lr.ph6.8, label %._crit_edge.loopexit

.lr.ph6.8:                                        ; preds = %.lr.ph6.721
  call void @__loop_iteration_test___4()
  %1995 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1996 = sext i32 %.1.720 to i64
  %1997 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1996
  store i8* %1995, i8** %1997, align 8
  call void @unroll_loop(i32 45)
  %1998 = sext i32 %.1.720 to i64
  %1999 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1998
  %2000 = load i8*, i8** %1999, align 8
  %2001 = icmp ne i8* %2000, null
  %2002 = add nsw i32 %.1.720, 1
  %2003 = icmp slt i32 %2002, 30
  %.1.8 = select i1 %2001, i32 %2002, i32 %.1.720
  %2004 = select i1 %2001, i1 %2003, i1 false
  br i1 %2004, label %.lr.ph6.9, label %._crit_edge.loopexit

.lr.ph6.9:                                        ; preds = %.lr.ph6.8
  call void @__loop_iteration_test___4()
  %2005 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2006 = sext i32 %.1.8 to i64
  %2007 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2006
  store i8* %2005, i8** %2007, align 8
  call void @unroll_loop(i32 45)
  %2008 = sext i32 %.1.8 to i64
  %2009 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2008
  %2010 = load i8*, i8** %2009, align 8
  %2011 = icmp ne i8* %2010, null
  %2012 = add nsw i32 %.1.8, 1
  %2013 = icmp slt i32 %2012, 30
  %.1.9 = select i1 %2011, i32 %2012, i32 %.1.8
  %2014 = select i1 %2011, i1 %2013, i1 false
  br i1 %2014, label %.lr.ph6.10, label %._crit_edge.loopexit

.lr.ph6.10:                                       ; preds = %.lr.ph6.9
  call void @__loop_iteration_test___4()
  %2015 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2016 = sext i32 %.1.9 to i64
  %2017 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2016
  store i8* %2015, i8** %2017, align 8
  call void @unroll_loop(i32 45)
  %2018 = sext i32 %.1.9 to i64
  %2019 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2018
  %2020 = load i8*, i8** %2019, align 8
  %2021 = icmp ne i8* %2020, null
  %2022 = add nsw i32 %.1.9, 1
  %2023 = icmp slt i32 %2022, 30
  %.1.10 = select i1 %2021, i32 %2022, i32 %.1.9
  %2024 = select i1 %2021, i1 %2023, i1 false
  br i1 %2024, label %.lr.ph6.11, label %._crit_edge.loopexit

.lr.ph6.11:                                       ; preds = %.lr.ph6.10
  call void @__loop_iteration_test___4()
  %2025 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2026 = sext i32 %.1.10 to i64
  %2027 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2026
  store i8* %2025, i8** %2027, align 8
  call void @unroll_loop(i32 45)
  %2028 = sext i32 %.1.10 to i64
  %2029 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2028
  %2030 = load i8*, i8** %2029, align 8
  %2031 = icmp ne i8* %2030, null
  %2032 = add nsw i32 %.1.10, 1
  %2033 = icmp slt i32 %2032, 30
  %.1.11 = select i1 %2031, i32 %2032, i32 %.1.10
  %2034 = select i1 %2031, i1 %2033, i1 false
  br i1 %2034, label %.lr.ph6.12, label %._crit_edge.loopexit

.lr.ph6.12:                                       ; preds = %.lr.ph6.11
  call void @__loop_iteration_test___4()
  %2035 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2036 = sext i32 %.1.11 to i64
  %2037 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2036
  store i8* %2035, i8** %2037, align 8
  call void @unroll_loop(i32 45)
  %2038 = sext i32 %.1.11 to i64
  %2039 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2038
  %2040 = load i8*, i8** %2039, align 8
  %2041 = icmp ne i8* %2040, null
  %2042 = add nsw i32 %.1.11, 1
  %2043 = icmp slt i32 %2042, 30
  %.1.1222 = select i1 %2041, i32 %2042, i32 %.1.11
  %2044 = select i1 %2041, i1 %2043, i1 false
  br i1 %2044, label %.lr.ph6.1323, label %._crit_edge.loopexit

.lr.ph6.1323:                                     ; preds = %.lr.ph6.12
  call void @__loop_iteration_test___4()
  %2045 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2046 = sext i32 %.1.1222 to i64
  %2047 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2046
  store i8* %2045, i8** %2047, align 8
  call void @unroll_loop(i32 45)
  %2048 = sext i32 %.1.1222 to i64
  %2049 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2048
  %2050 = load i8*, i8** %2049, align 8
  %2051 = icmp ne i8* %2050, null
  %2052 = add nsw i32 %.1.1222, 1
  %2053 = icmp slt i32 %2052, 30
  %.1.13 = select i1 %2051, i32 %2052, i32 %.1.1222
  %2054 = select i1 %2051, i1 %2053, i1 false
  br i1 %2054, label %.lr.ph6.14, label %._crit_edge.loopexit

.lr.ph6.14:                                       ; preds = %.lr.ph6.1323
  call void @__loop_iteration_test___4()
  %2055 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2056 = sext i32 %.1.13 to i64
  %2057 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2056
  store i8* %2055, i8** %2057, align 8
  call void @unroll_loop(i32 45)
  %2058 = sext i32 %.1.13 to i64
  %2059 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2058
  %2060 = load i8*, i8** %2059, align 8
  %2061 = icmp ne i8* %2060, null
  %2062 = add nsw i32 %.1.13, 1
  %2063 = icmp slt i32 %2062, 30
  %.1.14 = select i1 %2061, i32 %2062, i32 %.1.13
  %2064 = select i1 %2061, i1 %2063, i1 false
  br i1 %2064, label %.lr.ph6.15, label %._crit_edge.loopexit

.lr.ph6.15:                                       ; preds = %.lr.ph6.14
  call void @__loop_iteration_test___4()
  %2065 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2066 = sext i32 %.1.14 to i64
  %2067 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2066
  store i8* %2065, i8** %2067, align 8
  call void @unroll_loop(i32 45)
  %2068 = sext i32 %.1.14 to i64
  %2069 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2068
  %2070 = load i8*, i8** %2069, align 8
  %2071 = icmp ne i8* %2070, null
  %2072 = add nsw i32 %.1.14, 1
  %2073 = icmp slt i32 %2072, 30
  %.1.1525 = select i1 %2071, i32 %2072, i32 %.1.14
  %2074 = select i1 %2071, i1 %2073, i1 false
  br i1 %2074, label %.lr.ph6.1626, label %._crit_edge.loopexit

.lr.ph6.1626:                                     ; preds = %.lr.ph6.15
  call void @__loop_iteration_test___4()
  %2075 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2076 = sext i32 %.1.1525 to i64
  %2077 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2076
  store i8* %2075, i8** %2077, align 8
  call void @unroll_loop(i32 45)
  %2078 = sext i32 %.1.1525 to i64
  %2079 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2078
  %2080 = load i8*, i8** %2079, align 8
  %2081 = icmp ne i8* %2080, null
  %2082 = add nsw i32 %.1.1525, 1
  %2083 = icmp slt i32 %2082, 30
  %.1.16 = select i1 %2081, i32 %2082, i32 %.1.1525
  %2084 = select i1 %2081, i1 %2083, i1 false
  br i1 %2084, label %.lr.ph6.17, label %._crit_edge.loopexit

.lr.ph6.17:                                       ; preds = %.lr.ph6.1626
  call void @__loop_iteration_test___4()
  %2085 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2086 = sext i32 %.1.16 to i64
  %2087 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2086
  store i8* %2085, i8** %2087, align 8
  call void @unroll_loop(i32 45)
  %2088 = sext i32 %.1.16 to i64
  %2089 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2088
  %2090 = load i8*, i8** %2089, align 8
  %2091 = icmp ne i8* %2090, null
  %2092 = add nsw i32 %.1.16, 1
  %2093 = icmp slt i32 %2092, 30
  %.1.17 = select i1 %2091, i32 %2092, i32 %.1.16
  %2094 = select i1 %2091, i1 %2093, i1 false
  br i1 %2094, label %.lr.ph6.18, label %._crit_edge.loopexit

.lr.ph6.18:                                       ; preds = %.lr.ph6.17
  call void @__loop_iteration_test___4()
  %2095 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2096 = sext i32 %.1.17 to i64
  %2097 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2096
  store i8* %2095, i8** %2097, align 8
  call void @unroll_loop(i32 45)
  %2098 = sext i32 %.1.17 to i64
  %2099 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2098
  %2100 = load i8*, i8** %2099, align 8
  %2101 = icmp ne i8* %2100, null
  %2102 = add nsw i32 %.1.17, 1
  %2103 = icmp slt i32 %2102, 30
  %.1.18 = select i1 %2101, i32 %2102, i32 %.1.17
  %2104 = select i1 %2101, i1 %2103, i1 false
  br i1 %2104, label %.lr.ph6.19, label %._crit_edge.loopexit

.lr.ph6.19:                                       ; preds = %.lr.ph6.18
  call void @__loop_iteration_test___4()
  %2105 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2106 = sext i32 %.1.18 to i64
  %2107 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2106
  store i8* %2105, i8** %2107, align 8
  call void @unroll_loop(i32 45)
  %2108 = sext i32 %.1.18 to i64
  %2109 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2108
  %2110 = load i8*, i8** %2109, align 8
  %2111 = icmp ne i8* %2110, null
  %2112 = add nsw i32 %.1.18, 1
  %2113 = icmp slt i32 %2112, 30
  %.1.19 = select i1 %2111, i32 %2112, i32 %.1.18
  br label %._crit_edge.loopexit
}

declare void @__loop_termination_test___4()

declare void @__loop_iteration_test___4()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @fwd_add_clone(i8*, i32) #0 {
  %3 = getelementptr [17 x i8], [17 x i8]* @.str.8.199, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %3)
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %5 = load %struct.generic_list*, %struct.generic_list** %4, align 8
  %6 = icmp ne i64 10000508, 0
  %7 = icmp ne %struct.generic_list* %5, null
  br i1 true, label %8, label %23

; <label>:8:                                      ; preds = %2
  %9 = call %struct.fwd* @fwd_alloc_clone()
  %10 = icmp ne i64 10000611, 0
  %11 = icmp ne %struct.fwd* %9, null
  br i1 true, label %12, label %23

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.fwd, %struct.fwd* %9, i32 0, i32 0
  %14 = getelementptr inbounds [257 x i8], [257 x i8]* %13, i32 0, i32 0
  %15 = call i64 @strlcpy_clone_clone(i8* %14, i8* %0, i64 256)
  %16 = getelementptr inbounds %struct.fwd, %struct.fwd* %9, i32 0, i32 1
  store i32 53, i32* %16, align 4
  %17 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %18 = load %struct.generic_list*, %struct.generic_list** %17, align 8
  %19 = bitcast %struct.fwd* %9 to i8*
  %20 = call i32 @list_add_tail_clone(%struct.generic_list* %18, i8* %19)
  %21 = icmp slt i32 0, 0
  br i1 false, label %22, label %23

; <label>:22:                                     ; preds = %12
  call void @fwd_free(%struct.fwd* %9)
  br label %23

; <label>:23:                                     ; preds = %22, %12, %8, %2
  %.0 = phi i32 [ -1, %22 ], [ -1, %2 ], [ -1, %8 ], [ 0, %12 ]
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.fwd* @fwd_alloc_clone() #6 {
  %1 = call noalias i8* @malloc(i64 296) #9, !track !89
  %2 = bitcast i8* %1 to %struct.fwd*
  %3 = icmp ne i64 10000611, 0
  %4 = icmp ne %struct.fwd* %2, null
  br i1 true, label %8, label %5

; <label>:5:                                      ; preds = %0
  %6 = getelementptr [27 x i8], [27 x i8]* @.str.5.196, i32 0, i32 0
  %7 = getelementptr [12 x i8], [12 x i8]* @.str.4.195, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %6, i8* %7)
  br label %19

; <label>:8:                                      ; preds = %0
  %9 = call noalias i8* @malloc(i64 128) #9, !track !90
  %10 = bitcast i8* %9 to %struct.sockaddr*
  %11 = getelementptr inbounds %struct.fwd, %struct.fwd* %2, i32 0, i32 2
  store %struct.sockaddr* %10, %struct.sockaddr** %11, align 8
  %12 = getelementptr inbounds %struct.fwd, %struct.fwd* %2, i32 0, i32 2
  %13 = load %struct.sockaddr*, %struct.sockaddr** %12, align 8
  %14 = icmp ne i64 10000908, 0
  %15 = icmp ne %struct.sockaddr* %13, null
  br i1 true, label %20, label %16

; <label>:16:                                     ; preds = %8
  %17 = getelementptr [27 x i8], [27 x i8]* @.str.5.196, i32 0, i32 0
  %18 = getelementptr [12 x i8], [12 x i8]* @.str.4.195, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %17, i8* %18)
  br label %19

; <label>:19:                                     ; preds = %16, %5
  call void @fwd_free(%struct.fwd* %2)
  br label %20

; <label>:20:                                     ; preds = %19, %8
  %.0 = phi %struct.fwd* [ null, %19 ], [ %2, %8 ]
  ret %struct.fwd* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @strlcpy_clone(i8*, i8*, i64) #0 {
  %4 = icmp ne i64 256, 0
  br i1 true, label %5, label %.loopexit

; <label>:5:                                      ; preds = %3
  %6 = add i64 256, -1
  %7 = icmp ne i64 255, 0
  br i1 true, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %5
  %scevgep = getelementptr i8, i8* %0, i64 1
  %scevgep3 = getelementptr i8, i8* %1, i64 1
  br label %.preheader

.preheader:                                       ; preds = %11, %.preheader.preheader
  %lsr.iv4 = phi i8* [ %scevgep3, %.preheader.preheader ], [ %scevgep5, %11 ]
  %lsr.iv = phi i8* [ %scevgep, %.preheader.preheader ], [ %scevgep1, %11 ]
  %.0 = phi i64 [ %12, %11 ], [ 255, %.preheader.preheader ]
  %scevgep2 = getelementptr i8, i8* %lsr.iv, i64 -1
  %scevgep6 = getelementptr i8, i8* %lsr.iv4, i64 -1
  call void @unroll_loop(i32 83)
  %8 = load i8, i8* %scevgep6, align 1
  store i8 %8, i8* %scevgep2, align 1
  %9 = sext i8 %8 to i32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %.preheader..loopexit.loopexit_crit_edge, label %11

; <label>:11:                                     ; preds = %.preheader
  %12 = add i64 %.0, -1
  %scevgep1 = getelementptr i8, i8* %lsr.iv, i64 1
  %scevgep5 = getelementptr i8, i8* %lsr.iv4, i64 1
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %.preheader, label %.loopexit.loopexitsplit

.loopexit.loopexitsplit:                          ; preds = %11
  %.lcssa = phi i64 [ %12, %11 ]
  %lsr.iv4.lcssa3 = phi i8* [ %lsr.iv4, %11 ]
  %lsr.iv.lcssa2 = phi i8* [ %lsr.iv, %11 ]
  br label %.loopexit.loopexit

.preheader..loopexit.loopexit_crit_edge:          ; preds = %.preheader
  %lsr.iv4.lcssa = phi i8* [ %lsr.iv4, %.preheader ]
  %lsr.iv.lcssa = phi i8* [ %lsr.iv, %.preheader ]
  %.0.lcssa = phi i64 [ %.0, %.preheader ]
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.preheader..loopexit.loopexit_crit_edge, %.loopexit.loopexitsplit
  %.15.ph = phi i8* [ %lsr.iv.lcssa, %.preheader..loopexit.loopexit_crit_edge ], [ %lsr.iv.lcssa2, %.loopexit.loopexitsplit ]
  %.12.ph = phi i8* [ %lsr.iv4.lcssa, %.preheader..loopexit.loopexit_crit_edge ], [ %lsr.iv4.lcssa3, %.loopexit.loopexitsplit ]
  %.2.ph = phi i64 [ %.0.lcssa, %.preheader..loopexit.loopexit_crit_edge ], [ %.lcssa, %.loopexit.loopexitsplit ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5, %3
  %.15 = phi i8* [ %0, %5 ], [ %0, %3 ], [ %.15.ph, %.loopexit.loopexit ]
  %.12 = phi i8* [ %1, %5 ], [ %1, %3 ], [ %.12.ph, %.loopexit.loopexit ]
  %.2 = phi i64 [ 255, %5 ], [ 256, %3 ], [ %.2.ph, %.loopexit.loopexit ]
  %14 = icmp eq i64 %.2, 0
  br i1 %14, label %15, label %.loopexit1

; <label>:15:                                     ; preds = %.loopexit
  %16 = icmp ne i64 256, 0
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %15
  store i8 0, i8* %.15, align 1
  br label %18

; <label>:18:                                     ; preds = %17, %15
  br label %19

; <label>:19:                                     ; preds = %19, %18
  %.23 = phi i8* [ %.12, %18 ], [ %20, %19 ]
  call void @unroll_loop(i32 84)
  %20 = getelementptr inbounds i8, i8* %.23, i32 1
  %21 = load i8, i8* %.23, align 1
  %22 = icmp ne i8 %21, 0
  br i1 %22, label %19, label %.loopexit1.loopexit

.loopexit1.loopexit:                              ; preds = %19
  %.3.ph = phi i8* [ %20, %19 ]
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %.loopexit
  %.3 = phi i8* [ %.12, %.loopexit ], [ %.3.ph, %.loopexit1.loopexit ]
  %23 = ptrtoint i8* %.3 to i64
  %24 = ptrtoint i8* %1 to i64
  %25 = sub i64 %23, %24
  %26 = sub nsw i64 %25, 1
  ret i64 %26
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @strlcpy_clone_clone(i8*, i8*, i64) #0 {
  %4 = icmp ne i64 256, 0
  br i1 true, label %5, label %.loopexit

; <label>:5:                                      ; preds = %3
  %6 = add i64 256, -1
  %7 = icmp ne i64 255, 0
  br i1 true, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %5
  %scevgep = getelementptr i8, i8* %0, i64 1
  %scevgep3 = getelementptr i8, i8* %1, i64 1
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader
  %scevgep2 = getelementptr i8, i8* %scevgep, i64 -1
  %scevgep6 = getelementptr i8, i8* %scevgep3, i64 -1
  call void @unroll_loop(i32 83)
  %8 = load i8, i8* %scevgep6, align 1
  store i8 56, i8* %scevgep2, align 1
  %9 = sext i8 56 to i32
  %10 = icmp eq i32 56, 0
  br i1 false, label %.preheader..loopexit.loopexit_crit_edge, label %11

; <label>:11:                                     ; preds = %.preheader
  call void @__loop_iteration_test___5()
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 1
  %scevgep5 = getelementptr i8, i8* %scevgep3, i64 1
  br i1 true, label %.preheader.1, label %.loopexit.loopexitsplit

.loopexit.loopexitsplit:                          ; preds = %1040, %1036, %1032, %1028, %1024, %1020, %1016, %1012, %1008, %1004, %1000, %996, %992, %988, %984, %980, %976, %972, %968, %964, %960, %956, %952, %948, %944, %940, %936, %932, %928, %924, %920, %916, %912, %908, %904, %900, %896, %892, %888, %884, %880, %876, %872, %868, %864, %860, %856, %852, %848, %844, %840, %836, %832, %828, %824, %820, %816, %812, %808, %804, %800, %796, %792, %788, %784, %780, %776, %772, %768, %764, %760, %756, %752, %748, %744, %740, %736, %732, %728, %724, %720, %716, %712, %708, %704, %700, %696, %692, %688, %684, %680, %676, %672, %668, %664, %660, %656, %652, %648, %644, %640, %636, %632, %628, %624, %620, %616, %612, %608, %604, %600, %596, %592, %588, %584, %580, %576, %572, %568, %564, %560, %556, %552, %548, %544, %540, %536, %532, %528, %524, %520, %516, %512, %508, %504, %500, %496, %492, %488, %484, %480, %476, %472, %468, %464, %460, %456, %452, %448, %444, %440, %436, %432, %428, %424, %420, %416, %412, %408, %404, %400, %396, %392, %388, %384, %380, %376, %372, %368, %364, %360, %356, %352, %348, %344, %340, %336, %332, %328, %324, %320, %316, %312, %308, %304, %300, %296, %292, %288, %284, %280, %276, %272, %268, %264, %260, %256, %252, %248, %244, %240, %236, %232, %228, %224, %220, %216, %212, %208, %204, %200, %196, %192, %188, %184, %180, %176, %172, %168, %164, %160, %156, %152, %148, %144, %140, %136, %132, %128, %124, %120, %116, %112, %108, %104, %100, %96, %92, %88, %84, %80, %76, %72, %68, %64, %60, %56, %52, %48, %44, %40, %36, %32, %28, %11
  %.lcssa = phi i64 [ 254, %11 ], [ 253, %28 ], [ 252, %32 ], [ 251, %36 ], [ 250, %40 ], [ 249, %44 ], [ 248, %48 ], [ 247, %52 ], [ 246, %56 ], [ 245, %60 ], [ 244, %64 ], [ 243, %68 ], [ 242, %72 ], [ 241, %76 ], [ 240, %80 ], [ 239, %84 ], [ 238, %88 ], [ 237, %92 ], [ 236, %96 ], [ 235, %100 ], [ 234, %104 ], [ 233, %108 ], [ 232, %112 ], [ 231, %116 ], [ 230, %120 ], [ 229, %124 ], [ 228, %128 ], [ 227, %132 ], [ 226, %136 ], [ 225, %140 ], [ 224, %144 ], [ 223, %148 ], [ 222, %152 ], [ 221, %156 ], [ 220, %160 ], [ 219, %164 ], [ 218, %168 ], [ 217, %172 ], [ 216, %176 ], [ 215, %180 ], [ 214, %184 ], [ 213, %188 ], [ 212, %192 ], [ 211, %196 ], [ 210, %200 ], [ 209, %204 ], [ 208, %208 ], [ 207, %212 ], [ 206, %216 ], [ 205, %220 ], [ 204, %224 ], [ 203, %228 ], [ 202, %232 ], [ 201, %236 ], [ 200, %240 ], [ 199, %244 ], [ 198, %248 ], [ 197, %252 ], [ 196, %256 ], [ 195, %260 ], [ 194, %264 ], [ 193, %268 ], [ 192, %272 ], [ 191, %276 ], [ 190, %280 ], [ 189, %284 ], [ 188, %288 ], [ 187, %292 ], [ 186, %296 ], [ 185, %300 ], [ 184, %304 ], [ 183, %308 ], [ 182, %312 ], [ 181, %316 ], [ 180, %320 ], [ 179, %324 ], [ 178, %328 ], [ 177, %332 ], [ 176, %336 ], [ 175, %340 ], [ 174, %344 ], [ 173, %348 ], [ 172, %352 ], [ 171, %356 ], [ 170, %360 ], [ 169, %364 ], [ 168, %368 ], [ 167, %372 ], [ 166, %376 ], [ 165, %380 ], [ 164, %384 ], [ 163, %388 ], [ 162, %392 ], [ 161, %396 ], [ 160, %400 ], [ 159, %404 ], [ 158, %408 ], [ 157, %412 ], [ 156, %416 ], [ 155, %420 ], [ 154, %424 ], [ 153, %428 ], [ 152, %432 ], [ 151, %436 ], [ 150, %440 ], [ 149, %444 ], [ 148, %448 ], [ 147, %452 ], [ 146, %456 ], [ 145, %460 ], [ 144, %464 ], [ 143, %468 ], [ 142, %472 ], [ 141, %476 ], [ 140, %480 ], [ 139, %484 ], [ 138, %488 ], [ 137, %492 ], [ 136, %496 ], [ 135, %500 ], [ 134, %504 ], [ 133, %508 ], [ 132, %512 ], [ 131, %516 ], [ 130, %520 ], [ 129, %524 ], [ 128, %528 ], [ 127, %532 ], [ 126, %536 ], [ 125, %540 ], [ 124, %544 ], [ 123, %548 ], [ 122, %552 ], [ 121, %556 ], [ 120, %560 ], [ 119, %564 ], [ 118, %568 ], [ 117, %572 ], [ 116, %576 ], [ 115, %580 ], [ 114, %584 ], [ 113, %588 ], [ 112, %592 ], [ 111, %596 ], [ 110, %600 ], [ 109, %604 ], [ 108, %608 ], [ 107, %612 ], [ 106, %616 ], [ 105, %620 ], [ 104, %624 ], [ 103, %628 ], [ 102, %632 ], [ 101, %636 ], [ 100, %640 ], [ 99, %644 ], [ 98, %648 ], [ 97, %652 ], [ 96, %656 ], [ 95, %660 ], [ 94, %664 ], [ 93, %668 ], [ 92, %672 ], [ 91, %676 ], [ 90, %680 ], [ 89, %684 ], [ 88, %688 ], [ 87, %692 ], [ 86, %696 ], [ 85, %700 ], [ 84, %704 ], [ 83, %708 ], [ 82, %712 ], [ 81, %716 ], [ 80, %720 ], [ 79, %724 ], [ 78, %728 ], [ 77, %732 ], [ 76, %736 ], [ 75, %740 ], [ 74, %744 ], [ 73, %748 ], [ 72, %752 ], [ 71, %756 ], [ 70, %760 ], [ 69, %764 ], [ 68, %768 ], [ 67, %772 ], [ 66, %776 ], [ 65, %780 ], [ 64, %784 ], [ 63, %788 ], [ 62, %792 ], [ 61, %796 ], [ 60, %800 ], [ 59, %804 ], [ 58, %808 ], [ 57, %812 ], [ 56, %816 ], [ 55, %820 ], [ 54, %824 ], [ 53, %828 ], [ 52, %832 ], [ 51, %836 ], [ 50, %840 ], [ 49, %844 ], [ 48, %848 ], [ 47, %852 ], [ 46, %856 ], [ 45, %860 ], [ 44, %864 ], [ 43, %868 ], [ 42, %872 ], [ 41, %876 ], [ 40, %880 ], [ 39, %884 ], [ 38, %888 ], [ 37, %892 ], [ 36, %896 ], [ 35, %900 ], [ 34, %904 ], [ 33, %908 ], [ 32, %912 ], [ 31, %916 ], [ 30, %920 ], [ 29, %924 ], [ 28, %928 ], [ 27, %932 ], [ 26, %936 ], [ 25, %940 ], [ 24, %944 ], [ 23, %948 ], [ 22, %952 ], [ 21, %956 ], [ 20, %960 ], [ 19, %964 ], [ 18, %968 ], [ 17, %972 ], [ 16, %976 ], [ 15, %980 ], [ 14, %984 ], [ 13, %988 ], [ 12, %992 ], [ 11, %996 ], [ 10, %1000 ], [ 9, %1004 ], [ 8, %1008 ], [ 7, %1012 ], [ 6, %1016 ], [ 5, %1020 ], [ 4, %1024 ], [ 3, %1028 ], [ 2, %1032 ], [ 1, %1036 ], [ 0, %1040 ]
  %lsr.iv4.lcssa3 = phi i8* [ %scevgep3, %11 ], [ %scevgep5, %28 ], [ %scevgep5.1, %32 ], [ %scevgep5.2, %36 ], [ %scevgep5.3, %40 ], [ %scevgep5.4, %44 ], [ %scevgep5.5, %48 ], [ %scevgep5.6, %52 ], [ %scevgep5.7, %56 ], [ %scevgep5.8, %60 ], [ %scevgep5.9, %64 ], [ %scevgep5.10, %68 ], [ %scevgep5.11, %72 ], [ %scevgep5.12, %76 ], [ %scevgep5.13, %80 ], [ %scevgep5.14, %84 ], [ %scevgep5.15, %88 ], [ %scevgep5.16, %92 ], [ %scevgep5.17, %96 ], [ %scevgep5.18, %100 ], [ %scevgep5.19, %104 ], [ %scevgep5.20, %108 ], [ %scevgep5.21, %112 ], [ %scevgep5.22, %116 ], [ %scevgep5.23, %120 ], [ %scevgep5.24, %124 ], [ %scevgep5.25, %128 ], [ %scevgep5.26, %132 ], [ %scevgep5.27, %136 ], [ %scevgep5.28, %140 ], [ %scevgep5.29, %144 ], [ %scevgep5.30, %148 ], [ %scevgep5.31, %152 ], [ %scevgep5.32, %156 ], [ %scevgep5.33, %160 ], [ %scevgep5.34, %164 ], [ %scevgep5.35, %168 ], [ %scevgep5.36, %172 ], [ %scevgep5.37, %176 ], [ %scevgep5.38, %180 ], [ %scevgep5.39, %184 ], [ %scevgep5.40, %188 ], [ %scevgep5.41, %192 ], [ %scevgep5.42, %196 ], [ %scevgep5.43, %200 ], [ %scevgep5.44, %204 ], [ %scevgep5.45, %208 ], [ %scevgep5.46, %212 ], [ %scevgep5.47, %216 ], [ %scevgep5.48, %220 ], [ %scevgep5.49, %224 ], [ %scevgep5.50, %228 ], [ %scevgep5.51, %232 ], [ %scevgep5.52, %236 ], [ %scevgep5.53, %240 ], [ %scevgep5.54, %244 ], [ %scevgep5.55, %248 ], [ %scevgep5.56, %252 ], [ %scevgep5.57, %256 ], [ %scevgep5.58, %260 ], [ %scevgep5.59, %264 ], [ %scevgep5.60, %268 ], [ %scevgep5.61, %272 ], [ %scevgep5.62, %276 ], [ %scevgep5.63, %280 ], [ %scevgep5.64, %284 ], [ %scevgep5.65, %288 ], [ %scevgep5.66, %292 ], [ %scevgep5.67, %296 ], [ %scevgep5.68, %300 ], [ %scevgep5.69, %304 ], [ %scevgep5.70, %308 ], [ %scevgep5.71, %312 ], [ %scevgep5.72, %316 ], [ %scevgep5.73, %320 ], [ %scevgep5.74, %324 ], [ %scevgep5.75, %328 ], [ %scevgep5.76, %332 ], [ %scevgep5.77, %336 ], [ %scevgep5.78, %340 ], [ %scevgep5.79, %344 ], [ %scevgep5.80, %348 ], [ %scevgep5.81, %352 ], [ %scevgep5.82, %356 ], [ %scevgep5.83, %360 ], [ %scevgep5.84, %364 ], [ %scevgep5.85, %368 ], [ %scevgep5.86, %372 ], [ %scevgep5.87, %376 ], [ %scevgep5.88, %380 ], [ %scevgep5.89, %384 ], [ %scevgep5.90, %388 ], [ %scevgep5.91, %392 ], [ %scevgep5.92, %396 ], [ %scevgep5.93, %400 ], [ %scevgep5.94, %404 ], [ %scevgep5.95, %408 ], [ %scevgep5.96, %412 ], [ %scevgep5.97, %416 ], [ %scevgep5.98, %420 ], [ %scevgep5.99, %424 ], [ %scevgep5.100, %428 ], [ %scevgep5.101, %432 ], [ %scevgep5.102, %436 ], [ %scevgep5.103, %440 ], [ %scevgep5.104, %444 ], [ %scevgep5.105, %448 ], [ %scevgep5.106, %452 ], [ %scevgep5.107, %456 ], [ %scevgep5.108, %460 ], [ %scevgep5.109, %464 ], [ %scevgep5.110, %468 ], [ %scevgep5.111, %472 ], [ %scevgep5.112, %476 ], [ %scevgep5.113, %480 ], [ %scevgep5.114, %484 ], [ %scevgep5.115, %488 ], [ %scevgep5.116, %492 ], [ %scevgep5.117, %496 ], [ %scevgep5.118, %500 ], [ %scevgep5.119, %504 ], [ %scevgep5.120, %508 ], [ %scevgep5.121, %512 ], [ %scevgep5.122, %516 ], [ %scevgep5.123, %520 ], [ %scevgep5.124, %524 ], [ %scevgep5.125, %528 ], [ %scevgep5.126, %532 ], [ %scevgep5.127, %536 ], [ %scevgep5.128, %540 ], [ %scevgep5.129, %544 ], [ %scevgep5.130, %548 ], [ %scevgep5.131, %552 ], [ %scevgep5.132, %556 ], [ %scevgep5.133, %560 ], [ %scevgep5.134, %564 ], [ %scevgep5.135, %568 ], [ %scevgep5.136, %572 ], [ %scevgep5.137, %576 ], [ %scevgep5.138, %580 ], [ %scevgep5.139, %584 ], [ %scevgep5.140, %588 ], [ %scevgep5.141, %592 ], [ %scevgep5.142, %596 ], [ %scevgep5.143, %600 ], [ %scevgep5.144, %604 ], [ %scevgep5.145, %608 ], [ %scevgep5.146, %612 ], [ %scevgep5.147, %616 ], [ %scevgep5.148, %620 ], [ %scevgep5.149, %624 ], [ %scevgep5.150, %628 ], [ %scevgep5.151, %632 ], [ %scevgep5.152, %636 ], [ %scevgep5.153, %640 ], [ %scevgep5.154, %644 ], [ %scevgep5.155, %648 ], [ %scevgep5.156, %652 ], [ %scevgep5.157, %656 ], [ %scevgep5.158, %660 ], [ %scevgep5.159, %664 ], [ %scevgep5.160, %668 ], [ %scevgep5.161, %672 ], [ %scevgep5.162, %676 ], [ %scevgep5.163, %680 ], [ %scevgep5.164, %684 ], [ %scevgep5.165, %688 ], [ %scevgep5.166, %692 ], [ %scevgep5.167, %696 ], [ %scevgep5.168, %700 ], [ %scevgep5.169, %704 ], [ %scevgep5.170, %708 ], [ %scevgep5.171, %712 ], [ %scevgep5.172, %716 ], [ %scevgep5.173, %720 ], [ %scevgep5.174, %724 ], [ %scevgep5.175, %728 ], [ %scevgep5.176, %732 ], [ %scevgep5.177, %736 ], [ %scevgep5.178, %740 ], [ %scevgep5.179, %744 ], [ %scevgep5.180, %748 ], [ %scevgep5.181, %752 ], [ %scevgep5.182, %756 ], [ %scevgep5.183, %760 ], [ %scevgep5.184, %764 ], [ %scevgep5.185, %768 ], [ %scevgep5.186, %772 ], [ %scevgep5.187, %776 ], [ %scevgep5.188, %780 ], [ %scevgep5.189, %784 ], [ %scevgep5.190, %788 ], [ %scevgep5.191, %792 ], [ %scevgep5.192, %796 ], [ %scevgep5.193, %800 ], [ %scevgep5.194, %804 ], [ %scevgep5.195, %808 ], [ %scevgep5.196, %812 ], [ %scevgep5.197, %816 ], [ %scevgep5.198, %820 ], [ %scevgep5.199, %824 ], [ %scevgep5.200, %828 ], [ %scevgep5.201, %832 ], [ %scevgep5.202, %836 ], [ %scevgep5.203, %840 ], [ %scevgep5.204, %844 ], [ %scevgep5.205, %848 ], [ %scevgep5.206, %852 ], [ %scevgep5.207, %856 ], [ %scevgep5.208, %860 ], [ %scevgep5.209, %864 ], [ %scevgep5.210, %868 ], [ %scevgep5.211, %872 ], [ %scevgep5.212, %876 ], [ %scevgep5.213, %880 ], [ %scevgep5.214, %884 ], [ %scevgep5.215, %888 ], [ %scevgep5.216, %892 ], [ %scevgep5.217, %896 ], [ %scevgep5.218, %900 ], [ %scevgep5.219, %904 ], [ %scevgep5.220, %908 ], [ %scevgep5.221, %912 ], [ %scevgep5.222, %916 ], [ %scevgep5.223, %920 ], [ %scevgep5.224, %924 ], [ %scevgep5.225, %928 ], [ %scevgep5.226, %932 ], [ %scevgep5.227, %936 ], [ %scevgep5.228, %940 ], [ %scevgep5.229, %944 ], [ %scevgep5.230, %948 ], [ %scevgep5.231, %952 ], [ %scevgep5.232, %956 ], [ %scevgep5.233, %960 ], [ %scevgep5.234, %964 ], [ %scevgep5.235, %968 ], [ %scevgep5.236, %972 ], [ %scevgep5.237, %976 ], [ %scevgep5.238, %980 ], [ %scevgep5.239, %984 ], [ %scevgep5.240, %988 ], [ %scevgep5.241, %992 ], [ %scevgep5.242, %996 ], [ %scevgep5.243, %1000 ], [ %scevgep5.244, %1004 ], [ %scevgep5.245, %1008 ], [ %scevgep5.246, %1012 ], [ %scevgep5.247, %1016 ], [ %scevgep5.248, %1020 ], [ %scevgep5.249, %1024 ], [ %scevgep5.250, %1028 ], [ %scevgep5.251, %1032 ], [ %scevgep5.252, %1036 ], [ %scevgep5.253, %1040 ]
  %lsr.iv.lcssa2 = phi i8* [ %scevgep, %11 ], [ %scevgep1, %28 ], [ %scevgep1.1, %32 ], [ %scevgep1.2, %36 ], [ %scevgep1.3, %40 ], [ %scevgep1.4, %44 ], [ %scevgep1.5, %48 ], [ %scevgep1.6, %52 ], [ %scevgep1.7, %56 ], [ %scevgep1.8, %60 ], [ %scevgep1.9, %64 ], [ %scevgep1.10, %68 ], [ %scevgep1.11, %72 ], [ %scevgep1.12, %76 ], [ %scevgep1.13, %80 ], [ %scevgep1.14, %84 ], [ %scevgep1.15, %88 ], [ %scevgep1.16, %92 ], [ %scevgep1.17, %96 ], [ %scevgep1.18, %100 ], [ %scevgep1.19, %104 ], [ %scevgep1.20, %108 ], [ %scevgep1.21, %112 ], [ %scevgep1.22, %116 ], [ %scevgep1.23, %120 ], [ %scevgep1.24, %124 ], [ %scevgep1.25, %128 ], [ %scevgep1.26, %132 ], [ %scevgep1.27, %136 ], [ %scevgep1.28, %140 ], [ %scevgep1.29, %144 ], [ %scevgep1.30, %148 ], [ %scevgep1.31, %152 ], [ %scevgep1.32, %156 ], [ %scevgep1.33, %160 ], [ %scevgep1.34, %164 ], [ %scevgep1.35, %168 ], [ %scevgep1.36, %172 ], [ %scevgep1.37, %176 ], [ %scevgep1.38, %180 ], [ %scevgep1.39, %184 ], [ %scevgep1.40, %188 ], [ %scevgep1.41, %192 ], [ %scevgep1.42, %196 ], [ %scevgep1.43, %200 ], [ %scevgep1.44, %204 ], [ %scevgep1.45, %208 ], [ %scevgep1.46, %212 ], [ %scevgep1.47, %216 ], [ %scevgep1.48, %220 ], [ %scevgep1.49, %224 ], [ %scevgep1.50, %228 ], [ %scevgep1.51, %232 ], [ %scevgep1.52, %236 ], [ %scevgep1.53, %240 ], [ %scevgep1.54, %244 ], [ %scevgep1.55, %248 ], [ %scevgep1.56, %252 ], [ %scevgep1.57, %256 ], [ %scevgep1.58, %260 ], [ %scevgep1.59, %264 ], [ %scevgep1.60, %268 ], [ %scevgep1.61, %272 ], [ %scevgep1.62, %276 ], [ %scevgep1.63, %280 ], [ %scevgep1.64, %284 ], [ %scevgep1.65, %288 ], [ %scevgep1.66, %292 ], [ %scevgep1.67, %296 ], [ %scevgep1.68, %300 ], [ %scevgep1.69, %304 ], [ %scevgep1.70, %308 ], [ %scevgep1.71, %312 ], [ %scevgep1.72, %316 ], [ %scevgep1.73, %320 ], [ %scevgep1.74, %324 ], [ %scevgep1.75, %328 ], [ %scevgep1.76, %332 ], [ %scevgep1.77, %336 ], [ %scevgep1.78, %340 ], [ %scevgep1.79, %344 ], [ %scevgep1.80, %348 ], [ %scevgep1.81, %352 ], [ %scevgep1.82, %356 ], [ %scevgep1.83, %360 ], [ %scevgep1.84, %364 ], [ %scevgep1.85, %368 ], [ %scevgep1.86, %372 ], [ %scevgep1.87, %376 ], [ %scevgep1.88, %380 ], [ %scevgep1.89, %384 ], [ %scevgep1.90, %388 ], [ %scevgep1.91, %392 ], [ %scevgep1.92, %396 ], [ %scevgep1.93, %400 ], [ %scevgep1.94, %404 ], [ %scevgep1.95, %408 ], [ %scevgep1.96, %412 ], [ %scevgep1.97, %416 ], [ %scevgep1.98, %420 ], [ %scevgep1.99, %424 ], [ %scevgep1.100, %428 ], [ %scevgep1.101, %432 ], [ %scevgep1.102, %436 ], [ %scevgep1.103, %440 ], [ %scevgep1.104, %444 ], [ %scevgep1.105, %448 ], [ %scevgep1.106, %452 ], [ %scevgep1.107, %456 ], [ %scevgep1.108, %460 ], [ %scevgep1.109, %464 ], [ %scevgep1.110, %468 ], [ %scevgep1.111, %472 ], [ %scevgep1.112, %476 ], [ %scevgep1.113, %480 ], [ %scevgep1.114, %484 ], [ %scevgep1.115, %488 ], [ %scevgep1.116, %492 ], [ %scevgep1.117, %496 ], [ %scevgep1.118, %500 ], [ %scevgep1.119, %504 ], [ %scevgep1.120, %508 ], [ %scevgep1.121, %512 ], [ %scevgep1.122, %516 ], [ %scevgep1.123, %520 ], [ %scevgep1.124, %524 ], [ %scevgep1.125, %528 ], [ %scevgep1.126, %532 ], [ %scevgep1.127, %536 ], [ %scevgep1.128, %540 ], [ %scevgep1.129, %544 ], [ %scevgep1.130, %548 ], [ %scevgep1.131, %552 ], [ %scevgep1.132, %556 ], [ %scevgep1.133, %560 ], [ %scevgep1.134, %564 ], [ %scevgep1.135, %568 ], [ %scevgep1.136, %572 ], [ %scevgep1.137, %576 ], [ %scevgep1.138, %580 ], [ %scevgep1.139, %584 ], [ %scevgep1.140, %588 ], [ %scevgep1.141, %592 ], [ %scevgep1.142, %596 ], [ %scevgep1.143, %600 ], [ %scevgep1.144, %604 ], [ %scevgep1.145, %608 ], [ %scevgep1.146, %612 ], [ %scevgep1.147, %616 ], [ %scevgep1.148, %620 ], [ %scevgep1.149, %624 ], [ %scevgep1.150, %628 ], [ %scevgep1.151, %632 ], [ %scevgep1.152, %636 ], [ %scevgep1.153, %640 ], [ %scevgep1.154, %644 ], [ %scevgep1.155, %648 ], [ %scevgep1.156, %652 ], [ %scevgep1.157, %656 ], [ %scevgep1.158, %660 ], [ %scevgep1.159, %664 ], [ %scevgep1.160, %668 ], [ %scevgep1.161, %672 ], [ %scevgep1.162, %676 ], [ %scevgep1.163, %680 ], [ %scevgep1.164, %684 ], [ %scevgep1.165, %688 ], [ %scevgep1.166, %692 ], [ %scevgep1.167, %696 ], [ %scevgep1.168, %700 ], [ %scevgep1.169, %704 ], [ %scevgep1.170, %708 ], [ %scevgep1.171, %712 ], [ %scevgep1.172, %716 ], [ %scevgep1.173, %720 ], [ %scevgep1.174, %724 ], [ %scevgep1.175, %728 ], [ %scevgep1.176, %732 ], [ %scevgep1.177, %736 ], [ %scevgep1.178, %740 ], [ %scevgep1.179, %744 ], [ %scevgep1.180, %748 ], [ %scevgep1.181, %752 ], [ %scevgep1.182, %756 ], [ %scevgep1.183, %760 ], [ %scevgep1.184, %764 ], [ %scevgep1.185, %768 ], [ %scevgep1.186, %772 ], [ %scevgep1.187, %776 ], [ %scevgep1.188, %780 ], [ %scevgep1.189, %784 ], [ %scevgep1.190, %788 ], [ %scevgep1.191, %792 ], [ %scevgep1.192, %796 ], [ %scevgep1.193, %800 ], [ %scevgep1.194, %804 ], [ %scevgep1.195, %808 ], [ %scevgep1.196, %812 ], [ %scevgep1.197, %816 ], [ %scevgep1.198, %820 ], [ %scevgep1.199, %824 ], [ %scevgep1.200, %828 ], [ %scevgep1.201, %832 ], [ %scevgep1.202, %836 ], [ %scevgep1.203, %840 ], [ %scevgep1.204, %844 ], [ %scevgep1.205, %848 ], [ %scevgep1.206, %852 ], [ %scevgep1.207, %856 ], [ %scevgep1.208, %860 ], [ %scevgep1.209, %864 ], [ %scevgep1.210, %868 ], [ %scevgep1.211, %872 ], [ %scevgep1.212, %876 ], [ %scevgep1.213, %880 ], [ %scevgep1.214, %884 ], [ %scevgep1.215, %888 ], [ %scevgep1.216, %892 ], [ %scevgep1.217, %896 ], [ %scevgep1.218, %900 ], [ %scevgep1.219, %904 ], [ %scevgep1.220, %908 ], [ %scevgep1.221, %912 ], [ %scevgep1.222, %916 ], [ %scevgep1.223, %920 ], [ %scevgep1.224, %924 ], [ %scevgep1.225, %928 ], [ %scevgep1.226, %932 ], [ %scevgep1.227, %936 ], [ %scevgep1.228, %940 ], [ %scevgep1.229, %944 ], [ %scevgep1.230, %948 ], [ %scevgep1.231, %952 ], [ %scevgep1.232, %956 ], [ %scevgep1.233, %960 ], [ %scevgep1.234, %964 ], [ %scevgep1.235, %968 ], [ %scevgep1.236, %972 ], [ %scevgep1.237, %976 ], [ %scevgep1.238, %980 ], [ %scevgep1.239, %984 ], [ %scevgep1.240, %988 ], [ %scevgep1.241, %992 ], [ %scevgep1.242, %996 ], [ %scevgep1.243, %1000 ], [ %scevgep1.244, %1004 ], [ %scevgep1.245, %1008 ], [ %scevgep1.246, %1012 ], [ %scevgep1.247, %1016 ], [ %scevgep1.248, %1020 ], [ %scevgep1.249, %1024 ], [ %scevgep1.250, %1028 ], [ %scevgep1.251, %1032 ], [ %scevgep1.252, %1036 ], [ %scevgep1.253, %1040 ]
  call void @__loop_termination_test___5()
  br label %.loopexit.loopexit

.preheader..loopexit.loopexit_crit_edge:          ; preds = %.preheader.254, %.preheader.253, %.preheader.252, %.preheader.251, %.preheader.250, %.preheader.249, %.preheader.248, %.preheader.247, %.preheader.246, %.preheader.245, %.preheader.244, %.preheader.243, %.preheader.242, %.preheader.241, %.preheader.240, %.preheader.239, %.preheader.238, %.preheader.237, %.preheader.236, %.preheader.235, %.preheader.234, %.preheader.233, %.preheader.232, %.preheader.231, %.preheader.230, %.preheader.229, %.preheader.228, %.preheader.227, %.preheader.226, %.preheader.225, %.preheader.224, %.preheader.223, %.preheader.222, %.preheader.221, %.preheader.220, %.preheader.219, %.preheader.218, %.preheader.217, %.preheader.216, %.preheader.215, %.preheader.214, %.preheader.213, %.preheader.212, %.preheader.211, %.preheader.210, %.preheader.209, %.preheader.208, %.preheader.207, %.preheader.206, %.preheader.205, %.preheader.204, %.preheader.203, %.preheader.202, %.preheader.201, %.preheader.200, %.preheader.199, %.preheader.198, %.preheader.197, %.preheader.196, %.preheader.195, %.preheader.194, %.preheader.193, %.preheader.192, %.preheader.191, %.preheader.190, %.preheader.189, %.preheader.188, %.preheader.187, %.preheader.186, %.preheader.185, %.preheader.184, %.preheader.183, %.preheader.182, %.preheader.181, %.preheader.180, %.preheader.179, %.preheader.178, %.preheader.177, %.preheader.176, %.preheader.175, %.preheader.174, %.preheader.173, %.preheader.172, %.preheader.171, %.preheader.170, %.preheader.169, %.preheader.168, %.preheader.167, %.preheader.166, %.preheader.165, %.preheader.164, %.preheader.163, %.preheader.162, %.preheader.161, %.preheader.160, %.preheader.159, %.preheader.158, %.preheader.157, %.preheader.156, %.preheader.155, %.preheader.154, %.preheader.153, %.preheader.152, %.preheader.151, %.preheader.150, %.preheader.149, %.preheader.148, %.preheader.147, %.preheader.146, %.preheader.145, %.preheader.144, %.preheader.143, %.preheader.142, %.preheader.141, %.preheader.140, %.preheader.139, %.preheader.138, %.preheader.137, %.preheader.136, %.preheader.135, %.preheader.134, %.preheader.133, %.preheader.132, %.preheader.131, %.preheader.130, %.preheader.129, %.preheader.128, %.preheader.127, %.preheader.126, %.preheader.125, %.preheader.124, %.preheader.123, %.preheader.122, %.preheader.121, %.preheader.120, %.preheader.119, %.preheader.118, %.preheader.117, %.preheader.116, %.preheader.115, %.preheader.114, %.preheader.113, %.preheader.112, %.preheader.111, %.preheader.110, %.preheader.109, %.preheader.108, %.preheader.107, %.preheader.106, %.preheader.105, %.preheader.104, %.preheader.103, %.preheader.102, %.preheader.101, %.preheader.100, %.preheader.99, %.preheader.98, %.preheader.97, %.preheader.96, %.preheader.95, %.preheader.94, %.preheader.93, %.preheader.92, %.preheader.91, %.preheader.90, %.preheader.89, %.preheader.88, %.preheader.87, %.preheader.86, %.preheader.85, %.preheader.84, %.preheader.83, %.preheader.82, %.preheader.81, %.preheader.80, %.preheader.79, %.preheader.78, %.preheader.77, %.preheader.76, %.preheader.75, %.preheader.74, %.preheader.73, %.preheader.72, %.preheader.71, %.preheader.70, %.preheader.69, %.preheader.68, %.preheader.67, %.preheader.66, %.preheader.65, %.preheader.64, %.preheader.63, %.preheader.62, %.preheader.61, %.preheader.60, %.preheader.59, %.preheader.58, %.preheader.57, %.preheader.56, %.preheader.55, %.preheader.54, %.preheader.53, %.preheader.52, %.preheader.51, %.preheader.50, %.preheader.49, %.preheader.48, %.preheader.47, %.preheader.46, %.preheader.45, %.preheader.44, %.preheader.43, %.preheader.42, %.preheader.41, %.preheader.40, %.preheader.39, %.preheader.38, %.preheader.37, %.preheader.36, %.preheader.35, %.preheader.34, %.preheader.33, %.preheader.32, %.preheader.31, %.preheader.30, %.preheader.29, %.preheader.28, %.preheader.27, %.preheader.26, %.preheader.25, %.preheader.24, %.preheader.23, %.preheader.22, %.preheader.21, %.preheader.20, %.preheader.19, %.preheader.18, %.preheader.17, %.preheader.16, %.preheader.15, %.preheader.14, %.preheader.13, %.preheader.12, %.preheader.11, %.preheader.10, %.preheader.9, %.preheader.8, %.preheader.7, %.preheader.6, %.preheader.5, %.preheader.4, %.preheader.3, %.preheader.2, %.preheader.1, %.preheader
  %lsr.iv4.lcssa = phi i8* [ %scevgep3, %.preheader ], [ %scevgep5, %.preheader.1 ], [ %scevgep5.1, %.preheader.2 ], [ %scevgep5.2, %.preheader.3 ], [ %scevgep5.3, %.preheader.4 ], [ %scevgep5.4, %.preheader.5 ], [ %scevgep5.5, %.preheader.6 ], [ %scevgep5.6, %.preheader.7 ], [ %scevgep5.7, %.preheader.8 ], [ %scevgep5.8, %.preheader.9 ], [ %scevgep5.9, %.preheader.10 ], [ %scevgep5.10, %.preheader.11 ], [ %scevgep5.11, %.preheader.12 ], [ %scevgep5.12, %.preheader.13 ], [ %scevgep5.13, %.preheader.14 ], [ %scevgep5.14, %.preheader.15 ], [ %scevgep5.15, %.preheader.16 ], [ %scevgep5.16, %.preheader.17 ], [ %scevgep5.17, %.preheader.18 ], [ %scevgep5.18, %.preheader.19 ], [ %scevgep5.19, %.preheader.20 ], [ %scevgep5.20, %.preheader.21 ], [ %scevgep5.21, %.preheader.22 ], [ %scevgep5.22, %.preheader.23 ], [ %scevgep5.23, %.preheader.24 ], [ %scevgep5.24, %.preheader.25 ], [ %scevgep5.25, %.preheader.26 ], [ %scevgep5.26, %.preheader.27 ], [ %scevgep5.27, %.preheader.28 ], [ %scevgep5.28, %.preheader.29 ], [ %scevgep5.29, %.preheader.30 ], [ %scevgep5.30, %.preheader.31 ], [ %scevgep5.31, %.preheader.32 ], [ %scevgep5.32, %.preheader.33 ], [ %scevgep5.33, %.preheader.34 ], [ %scevgep5.34, %.preheader.35 ], [ %scevgep5.35, %.preheader.36 ], [ %scevgep5.36, %.preheader.37 ], [ %scevgep5.37, %.preheader.38 ], [ %scevgep5.38, %.preheader.39 ], [ %scevgep5.39, %.preheader.40 ], [ %scevgep5.40, %.preheader.41 ], [ %scevgep5.41, %.preheader.42 ], [ %scevgep5.42, %.preheader.43 ], [ %scevgep5.43, %.preheader.44 ], [ %scevgep5.44, %.preheader.45 ], [ %scevgep5.45, %.preheader.46 ], [ %scevgep5.46, %.preheader.47 ], [ %scevgep5.47, %.preheader.48 ], [ %scevgep5.48, %.preheader.49 ], [ %scevgep5.49, %.preheader.50 ], [ %scevgep5.50, %.preheader.51 ], [ %scevgep5.51, %.preheader.52 ], [ %scevgep5.52, %.preheader.53 ], [ %scevgep5.53, %.preheader.54 ], [ %scevgep5.54, %.preheader.55 ], [ %scevgep5.55, %.preheader.56 ], [ %scevgep5.56, %.preheader.57 ], [ %scevgep5.57, %.preheader.58 ], [ %scevgep5.58, %.preheader.59 ], [ %scevgep5.59, %.preheader.60 ], [ %scevgep5.60, %.preheader.61 ], [ %scevgep5.61, %.preheader.62 ], [ %scevgep5.62, %.preheader.63 ], [ %scevgep5.63, %.preheader.64 ], [ %scevgep5.64, %.preheader.65 ], [ %scevgep5.65, %.preheader.66 ], [ %scevgep5.66, %.preheader.67 ], [ %scevgep5.67, %.preheader.68 ], [ %scevgep5.68, %.preheader.69 ], [ %scevgep5.69, %.preheader.70 ], [ %scevgep5.70, %.preheader.71 ], [ %scevgep5.71, %.preheader.72 ], [ %scevgep5.72, %.preheader.73 ], [ %scevgep5.73, %.preheader.74 ], [ %scevgep5.74, %.preheader.75 ], [ %scevgep5.75, %.preheader.76 ], [ %scevgep5.76, %.preheader.77 ], [ %scevgep5.77, %.preheader.78 ], [ %scevgep5.78, %.preheader.79 ], [ %scevgep5.79, %.preheader.80 ], [ %scevgep5.80, %.preheader.81 ], [ %scevgep5.81, %.preheader.82 ], [ %scevgep5.82, %.preheader.83 ], [ %scevgep5.83, %.preheader.84 ], [ %scevgep5.84, %.preheader.85 ], [ %scevgep5.85, %.preheader.86 ], [ %scevgep5.86, %.preheader.87 ], [ %scevgep5.87, %.preheader.88 ], [ %scevgep5.88, %.preheader.89 ], [ %scevgep5.89, %.preheader.90 ], [ %scevgep5.90, %.preheader.91 ], [ %scevgep5.91, %.preheader.92 ], [ %scevgep5.92, %.preheader.93 ], [ %scevgep5.93, %.preheader.94 ], [ %scevgep5.94, %.preheader.95 ], [ %scevgep5.95, %.preheader.96 ], [ %scevgep5.96, %.preheader.97 ], [ %scevgep5.97, %.preheader.98 ], [ %scevgep5.98, %.preheader.99 ], [ %scevgep5.99, %.preheader.100 ], [ %scevgep5.100, %.preheader.101 ], [ %scevgep5.101, %.preheader.102 ], [ %scevgep5.102, %.preheader.103 ], [ %scevgep5.103, %.preheader.104 ], [ %scevgep5.104, %.preheader.105 ], [ %scevgep5.105, %.preheader.106 ], [ %scevgep5.106, %.preheader.107 ], [ %scevgep5.107, %.preheader.108 ], [ %scevgep5.108, %.preheader.109 ], [ %scevgep5.109, %.preheader.110 ], [ %scevgep5.110, %.preheader.111 ], [ %scevgep5.111, %.preheader.112 ], [ %scevgep5.112, %.preheader.113 ], [ %scevgep5.113, %.preheader.114 ], [ %scevgep5.114, %.preheader.115 ], [ %scevgep5.115, %.preheader.116 ], [ %scevgep5.116, %.preheader.117 ], [ %scevgep5.117, %.preheader.118 ], [ %scevgep5.118, %.preheader.119 ], [ %scevgep5.119, %.preheader.120 ], [ %scevgep5.120, %.preheader.121 ], [ %scevgep5.121, %.preheader.122 ], [ %scevgep5.122, %.preheader.123 ], [ %scevgep5.123, %.preheader.124 ], [ %scevgep5.124, %.preheader.125 ], [ %scevgep5.125, %.preheader.126 ], [ %scevgep5.126, %.preheader.127 ], [ %scevgep5.127, %.preheader.128 ], [ %scevgep5.128, %.preheader.129 ], [ %scevgep5.129, %.preheader.130 ], [ %scevgep5.130, %.preheader.131 ], [ %scevgep5.131, %.preheader.132 ], [ %scevgep5.132, %.preheader.133 ], [ %scevgep5.133, %.preheader.134 ], [ %scevgep5.134, %.preheader.135 ], [ %scevgep5.135, %.preheader.136 ], [ %scevgep5.136, %.preheader.137 ], [ %scevgep5.137, %.preheader.138 ], [ %scevgep5.138, %.preheader.139 ], [ %scevgep5.139, %.preheader.140 ], [ %scevgep5.140, %.preheader.141 ], [ %scevgep5.141, %.preheader.142 ], [ %scevgep5.142, %.preheader.143 ], [ %scevgep5.143, %.preheader.144 ], [ %scevgep5.144, %.preheader.145 ], [ %scevgep5.145, %.preheader.146 ], [ %scevgep5.146, %.preheader.147 ], [ %scevgep5.147, %.preheader.148 ], [ %scevgep5.148, %.preheader.149 ], [ %scevgep5.149, %.preheader.150 ], [ %scevgep5.150, %.preheader.151 ], [ %scevgep5.151, %.preheader.152 ], [ %scevgep5.152, %.preheader.153 ], [ %scevgep5.153, %.preheader.154 ], [ %scevgep5.154, %.preheader.155 ], [ %scevgep5.155, %.preheader.156 ], [ %scevgep5.156, %.preheader.157 ], [ %scevgep5.157, %.preheader.158 ], [ %scevgep5.158, %.preheader.159 ], [ %scevgep5.159, %.preheader.160 ], [ %scevgep5.160, %.preheader.161 ], [ %scevgep5.161, %.preheader.162 ], [ %scevgep5.162, %.preheader.163 ], [ %scevgep5.163, %.preheader.164 ], [ %scevgep5.164, %.preheader.165 ], [ %scevgep5.165, %.preheader.166 ], [ %scevgep5.166, %.preheader.167 ], [ %scevgep5.167, %.preheader.168 ], [ %scevgep5.168, %.preheader.169 ], [ %scevgep5.169, %.preheader.170 ], [ %scevgep5.170, %.preheader.171 ], [ %scevgep5.171, %.preheader.172 ], [ %scevgep5.172, %.preheader.173 ], [ %scevgep5.173, %.preheader.174 ], [ %scevgep5.174, %.preheader.175 ], [ %scevgep5.175, %.preheader.176 ], [ %scevgep5.176, %.preheader.177 ], [ %scevgep5.177, %.preheader.178 ], [ %scevgep5.178, %.preheader.179 ], [ %scevgep5.179, %.preheader.180 ], [ %scevgep5.180, %.preheader.181 ], [ %scevgep5.181, %.preheader.182 ], [ %scevgep5.182, %.preheader.183 ], [ %scevgep5.183, %.preheader.184 ], [ %scevgep5.184, %.preheader.185 ], [ %scevgep5.185, %.preheader.186 ], [ %scevgep5.186, %.preheader.187 ], [ %scevgep5.187, %.preheader.188 ], [ %scevgep5.188, %.preheader.189 ], [ %scevgep5.189, %.preheader.190 ], [ %scevgep5.190, %.preheader.191 ], [ %scevgep5.191, %.preheader.192 ], [ %scevgep5.192, %.preheader.193 ], [ %scevgep5.193, %.preheader.194 ], [ %scevgep5.194, %.preheader.195 ], [ %scevgep5.195, %.preheader.196 ], [ %scevgep5.196, %.preheader.197 ], [ %scevgep5.197, %.preheader.198 ], [ %scevgep5.198, %.preheader.199 ], [ %scevgep5.199, %.preheader.200 ], [ %scevgep5.200, %.preheader.201 ], [ %scevgep5.201, %.preheader.202 ], [ %scevgep5.202, %.preheader.203 ], [ %scevgep5.203, %.preheader.204 ], [ %scevgep5.204, %.preheader.205 ], [ %scevgep5.205, %.preheader.206 ], [ %scevgep5.206, %.preheader.207 ], [ %scevgep5.207, %.preheader.208 ], [ %scevgep5.208, %.preheader.209 ], [ %scevgep5.209, %.preheader.210 ], [ %scevgep5.210, %.preheader.211 ], [ %scevgep5.211, %.preheader.212 ], [ %scevgep5.212, %.preheader.213 ], [ %scevgep5.213, %.preheader.214 ], [ %scevgep5.214, %.preheader.215 ], [ %scevgep5.215, %.preheader.216 ], [ %scevgep5.216, %.preheader.217 ], [ %scevgep5.217, %.preheader.218 ], [ %scevgep5.218, %.preheader.219 ], [ %scevgep5.219, %.preheader.220 ], [ %scevgep5.220, %.preheader.221 ], [ %scevgep5.221, %.preheader.222 ], [ %scevgep5.222, %.preheader.223 ], [ %scevgep5.223, %.preheader.224 ], [ %scevgep5.224, %.preheader.225 ], [ %scevgep5.225, %.preheader.226 ], [ %scevgep5.226, %.preheader.227 ], [ %scevgep5.227, %.preheader.228 ], [ %scevgep5.228, %.preheader.229 ], [ %scevgep5.229, %.preheader.230 ], [ %scevgep5.230, %.preheader.231 ], [ %scevgep5.231, %.preheader.232 ], [ %scevgep5.232, %.preheader.233 ], [ %scevgep5.233, %.preheader.234 ], [ %scevgep5.234, %.preheader.235 ], [ %scevgep5.235, %.preheader.236 ], [ %scevgep5.236, %.preheader.237 ], [ %scevgep5.237, %.preheader.238 ], [ %scevgep5.238, %.preheader.239 ], [ %scevgep5.239, %.preheader.240 ], [ %scevgep5.240, %.preheader.241 ], [ %scevgep5.241, %.preheader.242 ], [ %scevgep5.242, %.preheader.243 ], [ %scevgep5.243, %.preheader.244 ], [ %scevgep5.244, %.preheader.245 ], [ %scevgep5.245, %.preheader.246 ], [ %scevgep5.246, %.preheader.247 ], [ %scevgep5.247, %.preheader.248 ], [ %scevgep5.248, %.preheader.249 ], [ %scevgep5.249, %.preheader.250 ], [ %scevgep5.250, %.preheader.251 ], [ %scevgep5.251, %.preheader.252 ], [ %scevgep5.252, %.preheader.253 ], [ %scevgep5.253, %.preheader.254 ]
  %lsr.iv.lcssa = phi i8* [ %scevgep, %.preheader ], [ %scevgep1, %.preheader.1 ], [ %scevgep1.1, %.preheader.2 ], [ %scevgep1.2, %.preheader.3 ], [ %scevgep1.3, %.preheader.4 ], [ %scevgep1.4, %.preheader.5 ], [ %scevgep1.5, %.preheader.6 ], [ %scevgep1.6, %.preheader.7 ], [ %scevgep1.7, %.preheader.8 ], [ %scevgep1.8, %.preheader.9 ], [ %scevgep1.9, %.preheader.10 ], [ %scevgep1.10, %.preheader.11 ], [ %scevgep1.11, %.preheader.12 ], [ %scevgep1.12, %.preheader.13 ], [ %scevgep1.13, %.preheader.14 ], [ %scevgep1.14, %.preheader.15 ], [ %scevgep1.15, %.preheader.16 ], [ %scevgep1.16, %.preheader.17 ], [ %scevgep1.17, %.preheader.18 ], [ %scevgep1.18, %.preheader.19 ], [ %scevgep1.19, %.preheader.20 ], [ %scevgep1.20, %.preheader.21 ], [ %scevgep1.21, %.preheader.22 ], [ %scevgep1.22, %.preheader.23 ], [ %scevgep1.23, %.preheader.24 ], [ %scevgep1.24, %.preheader.25 ], [ %scevgep1.25, %.preheader.26 ], [ %scevgep1.26, %.preheader.27 ], [ %scevgep1.27, %.preheader.28 ], [ %scevgep1.28, %.preheader.29 ], [ %scevgep1.29, %.preheader.30 ], [ %scevgep1.30, %.preheader.31 ], [ %scevgep1.31, %.preheader.32 ], [ %scevgep1.32, %.preheader.33 ], [ %scevgep1.33, %.preheader.34 ], [ %scevgep1.34, %.preheader.35 ], [ %scevgep1.35, %.preheader.36 ], [ %scevgep1.36, %.preheader.37 ], [ %scevgep1.37, %.preheader.38 ], [ %scevgep1.38, %.preheader.39 ], [ %scevgep1.39, %.preheader.40 ], [ %scevgep1.40, %.preheader.41 ], [ %scevgep1.41, %.preheader.42 ], [ %scevgep1.42, %.preheader.43 ], [ %scevgep1.43, %.preheader.44 ], [ %scevgep1.44, %.preheader.45 ], [ %scevgep1.45, %.preheader.46 ], [ %scevgep1.46, %.preheader.47 ], [ %scevgep1.47, %.preheader.48 ], [ %scevgep1.48, %.preheader.49 ], [ %scevgep1.49, %.preheader.50 ], [ %scevgep1.50, %.preheader.51 ], [ %scevgep1.51, %.preheader.52 ], [ %scevgep1.52, %.preheader.53 ], [ %scevgep1.53, %.preheader.54 ], [ %scevgep1.54, %.preheader.55 ], [ %scevgep1.55, %.preheader.56 ], [ %scevgep1.56, %.preheader.57 ], [ %scevgep1.57, %.preheader.58 ], [ %scevgep1.58, %.preheader.59 ], [ %scevgep1.59, %.preheader.60 ], [ %scevgep1.60, %.preheader.61 ], [ %scevgep1.61, %.preheader.62 ], [ %scevgep1.62, %.preheader.63 ], [ %scevgep1.63, %.preheader.64 ], [ %scevgep1.64, %.preheader.65 ], [ %scevgep1.65, %.preheader.66 ], [ %scevgep1.66, %.preheader.67 ], [ %scevgep1.67, %.preheader.68 ], [ %scevgep1.68, %.preheader.69 ], [ %scevgep1.69, %.preheader.70 ], [ %scevgep1.70, %.preheader.71 ], [ %scevgep1.71, %.preheader.72 ], [ %scevgep1.72, %.preheader.73 ], [ %scevgep1.73, %.preheader.74 ], [ %scevgep1.74, %.preheader.75 ], [ %scevgep1.75, %.preheader.76 ], [ %scevgep1.76, %.preheader.77 ], [ %scevgep1.77, %.preheader.78 ], [ %scevgep1.78, %.preheader.79 ], [ %scevgep1.79, %.preheader.80 ], [ %scevgep1.80, %.preheader.81 ], [ %scevgep1.81, %.preheader.82 ], [ %scevgep1.82, %.preheader.83 ], [ %scevgep1.83, %.preheader.84 ], [ %scevgep1.84, %.preheader.85 ], [ %scevgep1.85, %.preheader.86 ], [ %scevgep1.86, %.preheader.87 ], [ %scevgep1.87, %.preheader.88 ], [ %scevgep1.88, %.preheader.89 ], [ %scevgep1.89, %.preheader.90 ], [ %scevgep1.90, %.preheader.91 ], [ %scevgep1.91, %.preheader.92 ], [ %scevgep1.92, %.preheader.93 ], [ %scevgep1.93, %.preheader.94 ], [ %scevgep1.94, %.preheader.95 ], [ %scevgep1.95, %.preheader.96 ], [ %scevgep1.96, %.preheader.97 ], [ %scevgep1.97, %.preheader.98 ], [ %scevgep1.98, %.preheader.99 ], [ %scevgep1.99, %.preheader.100 ], [ %scevgep1.100, %.preheader.101 ], [ %scevgep1.101, %.preheader.102 ], [ %scevgep1.102, %.preheader.103 ], [ %scevgep1.103, %.preheader.104 ], [ %scevgep1.104, %.preheader.105 ], [ %scevgep1.105, %.preheader.106 ], [ %scevgep1.106, %.preheader.107 ], [ %scevgep1.107, %.preheader.108 ], [ %scevgep1.108, %.preheader.109 ], [ %scevgep1.109, %.preheader.110 ], [ %scevgep1.110, %.preheader.111 ], [ %scevgep1.111, %.preheader.112 ], [ %scevgep1.112, %.preheader.113 ], [ %scevgep1.113, %.preheader.114 ], [ %scevgep1.114, %.preheader.115 ], [ %scevgep1.115, %.preheader.116 ], [ %scevgep1.116, %.preheader.117 ], [ %scevgep1.117, %.preheader.118 ], [ %scevgep1.118, %.preheader.119 ], [ %scevgep1.119, %.preheader.120 ], [ %scevgep1.120, %.preheader.121 ], [ %scevgep1.121, %.preheader.122 ], [ %scevgep1.122, %.preheader.123 ], [ %scevgep1.123, %.preheader.124 ], [ %scevgep1.124, %.preheader.125 ], [ %scevgep1.125, %.preheader.126 ], [ %scevgep1.126, %.preheader.127 ], [ %scevgep1.127, %.preheader.128 ], [ %scevgep1.128, %.preheader.129 ], [ %scevgep1.129, %.preheader.130 ], [ %scevgep1.130, %.preheader.131 ], [ %scevgep1.131, %.preheader.132 ], [ %scevgep1.132, %.preheader.133 ], [ %scevgep1.133, %.preheader.134 ], [ %scevgep1.134, %.preheader.135 ], [ %scevgep1.135, %.preheader.136 ], [ %scevgep1.136, %.preheader.137 ], [ %scevgep1.137, %.preheader.138 ], [ %scevgep1.138, %.preheader.139 ], [ %scevgep1.139, %.preheader.140 ], [ %scevgep1.140, %.preheader.141 ], [ %scevgep1.141, %.preheader.142 ], [ %scevgep1.142, %.preheader.143 ], [ %scevgep1.143, %.preheader.144 ], [ %scevgep1.144, %.preheader.145 ], [ %scevgep1.145, %.preheader.146 ], [ %scevgep1.146, %.preheader.147 ], [ %scevgep1.147, %.preheader.148 ], [ %scevgep1.148, %.preheader.149 ], [ %scevgep1.149, %.preheader.150 ], [ %scevgep1.150, %.preheader.151 ], [ %scevgep1.151, %.preheader.152 ], [ %scevgep1.152, %.preheader.153 ], [ %scevgep1.153, %.preheader.154 ], [ %scevgep1.154, %.preheader.155 ], [ %scevgep1.155, %.preheader.156 ], [ %scevgep1.156, %.preheader.157 ], [ %scevgep1.157, %.preheader.158 ], [ %scevgep1.158, %.preheader.159 ], [ %scevgep1.159, %.preheader.160 ], [ %scevgep1.160, %.preheader.161 ], [ %scevgep1.161, %.preheader.162 ], [ %scevgep1.162, %.preheader.163 ], [ %scevgep1.163, %.preheader.164 ], [ %scevgep1.164, %.preheader.165 ], [ %scevgep1.165, %.preheader.166 ], [ %scevgep1.166, %.preheader.167 ], [ %scevgep1.167, %.preheader.168 ], [ %scevgep1.168, %.preheader.169 ], [ %scevgep1.169, %.preheader.170 ], [ %scevgep1.170, %.preheader.171 ], [ %scevgep1.171, %.preheader.172 ], [ %scevgep1.172, %.preheader.173 ], [ %scevgep1.173, %.preheader.174 ], [ %scevgep1.174, %.preheader.175 ], [ %scevgep1.175, %.preheader.176 ], [ %scevgep1.176, %.preheader.177 ], [ %scevgep1.177, %.preheader.178 ], [ %scevgep1.178, %.preheader.179 ], [ %scevgep1.179, %.preheader.180 ], [ %scevgep1.180, %.preheader.181 ], [ %scevgep1.181, %.preheader.182 ], [ %scevgep1.182, %.preheader.183 ], [ %scevgep1.183, %.preheader.184 ], [ %scevgep1.184, %.preheader.185 ], [ %scevgep1.185, %.preheader.186 ], [ %scevgep1.186, %.preheader.187 ], [ %scevgep1.187, %.preheader.188 ], [ %scevgep1.188, %.preheader.189 ], [ %scevgep1.189, %.preheader.190 ], [ %scevgep1.190, %.preheader.191 ], [ %scevgep1.191, %.preheader.192 ], [ %scevgep1.192, %.preheader.193 ], [ %scevgep1.193, %.preheader.194 ], [ %scevgep1.194, %.preheader.195 ], [ %scevgep1.195, %.preheader.196 ], [ %scevgep1.196, %.preheader.197 ], [ %scevgep1.197, %.preheader.198 ], [ %scevgep1.198, %.preheader.199 ], [ %scevgep1.199, %.preheader.200 ], [ %scevgep1.200, %.preheader.201 ], [ %scevgep1.201, %.preheader.202 ], [ %scevgep1.202, %.preheader.203 ], [ %scevgep1.203, %.preheader.204 ], [ %scevgep1.204, %.preheader.205 ], [ %scevgep1.205, %.preheader.206 ], [ %scevgep1.206, %.preheader.207 ], [ %scevgep1.207, %.preheader.208 ], [ %scevgep1.208, %.preheader.209 ], [ %scevgep1.209, %.preheader.210 ], [ %scevgep1.210, %.preheader.211 ], [ %scevgep1.211, %.preheader.212 ], [ %scevgep1.212, %.preheader.213 ], [ %scevgep1.213, %.preheader.214 ], [ %scevgep1.214, %.preheader.215 ], [ %scevgep1.215, %.preheader.216 ], [ %scevgep1.216, %.preheader.217 ], [ %scevgep1.217, %.preheader.218 ], [ %scevgep1.218, %.preheader.219 ], [ %scevgep1.219, %.preheader.220 ], [ %scevgep1.220, %.preheader.221 ], [ %scevgep1.221, %.preheader.222 ], [ %scevgep1.222, %.preheader.223 ], [ %scevgep1.223, %.preheader.224 ], [ %scevgep1.224, %.preheader.225 ], [ %scevgep1.225, %.preheader.226 ], [ %scevgep1.226, %.preheader.227 ], [ %scevgep1.227, %.preheader.228 ], [ %scevgep1.228, %.preheader.229 ], [ %scevgep1.229, %.preheader.230 ], [ %scevgep1.230, %.preheader.231 ], [ %scevgep1.231, %.preheader.232 ], [ %scevgep1.232, %.preheader.233 ], [ %scevgep1.233, %.preheader.234 ], [ %scevgep1.234, %.preheader.235 ], [ %scevgep1.235, %.preheader.236 ], [ %scevgep1.236, %.preheader.237 ], [ %scevgep1.237, %.preheader.238 ], [ %scevgep1.238, %.preheader.239 ], [ %scevgep1.239, %.preheader.240 ], [ %scevgep1.240, %.preheader.241 ], [ %scevgep1.241, %.preheader.242 ], [ %scevgep1.242, %.preheader.243 ], [ %scevgep1.243, %.preheader.244 ], [ %scevgep1.244, %.preheader.245 ], [ %scevgep1.245, %.preheader.246 ], [ %scevgep1.246, %.preheader.247 ], [ %scevgep1.247, %.preheader.248 ], [ %scevgep1.248, %.preheader.249 ], [ %scevgep1.249, %.preheader.250 ], [ %scevgep1.250, %.preheader.251 ], [ %scevgep1.251, %.preheader.252 ], [ %scevgep1.252, %.preheader.253 ], [ %scevgep1.253, %.preheader.254 ]
  %.0.lcssa = phi i64 [ 255, %.preheader ], [ 254, %.preheader.1 ], [ 253, %.preheader.2 ], [ 252, %.preheader.3 ], [ 251, %.preheader.4 ], [ 250, %.preheader.5 ], [ 249, %.preheader.6 ], [ 248, %.preheader.7 ], [ 247, %.preheader.8 ], [ 246, %.preheader.9 ], [ 245, %.preheader.10 ], [ 244, %.preheader.11 ], [ 243, %.preheader.12 ], [ 242, %.preheader.13 ], [ 241, %.preheader.14 ], [ 240, %.preheader.15 ], [ 239, %.preheader.16 ], [ 238, %.preheader.17 ], [ 237, %.preheader.18 ], [ 236, %.preheader.19 ], [ 235, %.preheader.20 ], [ 234, %.preheader.21 ], [ 233, %.preheader.22 ], [ 232, %.preheader.23 ], [ 231, %.preheader.24 ], [ 230, %.preheader.25 ], [ 229, %.preheader.26 ], [ 228, %.preheader.27 ], [ 227, %.preheader.28 ], [ 226, %.preheader.29 ], [ 225, %.preheader.30 ], [ 224, %.preheader.31 ], [ 223, %.preheader.32 ], [ 222, %.preheader.33 ], [ 221, %.preheader.34 ], [ 220, %.preheader.35 ], [ 219, %.preheader.36 ], [ 218, %.preheader.37 ], [ 217, %.preheader.38 ], [ 216, %.preheader.39 ], [ 215, %.preheader.40 ], [ 214, %.preheader.41 ], [ 213, %.preheader.42 ], [ 212, %.preheader.43 ], [ 211, %.preheader.44 ], [ 210, %.preheader.45 ], [ 209, %.preheader.46 ], [ 208, %.preheader.47 ], [ 207, %.preheader.48 ], [ 206, %.preheader.49 ], [ 205, %.preheader.50 ], [ 204, %.preheader.51 ], [ 203, %.preheader.52 ], [ 202, %.preheader.53 ], [ 201, %.preheader.54 ], [ 200, %.preheader.55 ], [ 199, %.preheader.56 ], [ 198, %.preheader.57 ], [ 197, %.preheader.58 ], [ 196, %.preheader.59 ], [ 195, %.preheader.60 ], [ 194, %.preheader.61 ], [ 193, %.preheader.62 ], [ 192, %.preheader.63 ], [ 191, %.preheader.64 ], [ 190, %.preheader.65 ], [ 189, %.preheader.66 ], [ 188, %.preheader.67 ], [ 187, %.preheader.68 ], [ 186, %.preheader.69 ], [ 185, %.preheader.70 ], [ 184, %.preheader.71 ], [ 183, %.preheader.72 ], [ 182, %.preheader.73 ], [ 181, %.preheader.74 ], [ 180, %.preheader.75 ], [ 179, %.preheader.76 ], [ 178, %.preheader.77 ], [ 177, %.preheader.78 ], [ 176, %.preheader.79 ], [ 175, %.preheader.80 ], [ 174, %.preheader.81 ], [ 173, %.preheader.82 ], [ 172, %.preheader.83 ], [ 171, %.preheader.84 ], [ 170, %.preheader.85 ], [ 169, %.preheader.86 ], [ 168, %.preheader.87 ], [ 167, %.preheader.88 ], [ 166, %.preheader.89 ], [ 165, %.preheader.90 ], [ 164, %.preheader.91 ], [ 163, %.preheader.92 ], [ 162, %.preheader.93 ], [ 161, %.preheader.94 ], [ 160, %.preheader.95 ], [ 159, %.preheader.96 ], [ 158, %.preheader.97 ], [ 157, %.preheader.98 ], [ 156, %.preheader.99 ], [ 155, %.preheader.100 ], [ 154, %.preheader.101 ], [ 153, %.preheader.102 ], [ 152, %.preheader.103 ], [ 151, %.preheader.104 ], [ 150, %.preheader.105 ], [ 149, %.preheader.106 ], [ 148, %.preheader.107 ], [ 147, %.preheader.108 ], [ 146, %.preheader.109 ], [ 145, %.preheader.110 ], [ 144, %.preheader.111 ], [ 143, %.preheader.112 ], [ 142, %.preheader.113 ], [ 141, %.preheader.114 ], [ 140, %.preheader.115 ], [ 139, %.preheader.116 ], [ 138, %.preheader.117 ], [ 137, %.preheader.118 ], [ 136, %.preheader.119 ], [ 135, %.preheader.120 ], [ 134, %.preheader.121 ], [ 133, %.preheader.122 ], [ 132, %.preheader.123 ], [ 131, %.preheader.124 ], [ 130, %.preheader.125 ], [ 129, %.preheader.126 ], [ 128, %.preheader.127 ], [ 127, %.preheader.128 ], [ 126, %.preheader.129 ], [ 125, %.preheader.130 ], [ 124, %.preheader.131 ], [ 123, %.preheader.132 ], [ 122, %.preheader.133 ], [ 121, %.preheader.134 ], [ 120, %.preheader.135 ], [ 119, %.preheader.136 ], [ 118, %.preheader.137 ], [ 117, %.preheader.138 ], [ 116, %.preheader.139 ], [ 115, %.preheader.140 ], [ 114, %.preheader.141 ], [ 113, %.preheader.142 ], [ 112, %.preheader.143 ], [ 111, %.preheader.144 ], [ 110, %.preheader.145 ], [ 109, %.preheader.146 ], [ 108, %.preheader.147 ], [ 107, %.preheader.148 ], [ 106, %.preheader.149 ], [ 105, %.preheader.150 ], [ 104, %.preheader.151 ], [ 103, %.preheader.152 ], [ 102, %.preheader.153 ], [ 101, %.preheader.154 ], [ 100, %.preheader.155 ], [ 99, %.preheader.156 ], [ 98, %.preheader.157 ], [ 97, %.preheader.158 ], [ 96, %.preheader.159 ], [ 95, %.preheader.160 ], [ 94, %.preheader.161 ], [ 93, %.preheader.162 ], [ 92, %.preheader.163 ], [ 91, %.preheader.164 ], [ 90, %.preheader.165 ], [ 89, %.preheader.166 ], [ 88, %.preheader.167 ], [ 87, %.preheader.168 ], [ 86, %.preheader.169 ], [ 85, %.preheader.170 ], [ 84, %.preheader.171 ], [ 83, %.preheader.172 ], [ 82, %.preheader.173 ], [ 81, %.preheader.174 ], [ 80, %.preheader.175 ], [ 79, %.preheader.176 ], [ 78, %.preheader.177 ], [ 77, %.preheader.178 ], [ 76, %.preheader.179 ], [ 75, %.preheader.180 ], [ 74, %.preheader.181 ], [ 73, %.preheader.182 ], [ 72, %.preheader.183 ], [ 71, %.preheader.184 ], [ 70, %.preheader.185 ], [ 69, %.preheader.186 ], [ 68, %.preheader.187 ], [ 67, %.preheader.188 ], [ 66, %.preheader.189 ], [ 65, %.preheader.190 ], [ 64, %.preheader.191 ], [ 63, %.preheader.192 ], [ 62, %.preheader.193 ], [ 61, %.preheader.194 ], [ 60, %.preheader.195 ], [ 59, %.preheader.196 ], [ 58, %.preheader.197 ], [ 57, %.preheader.198 ], [ 56, %.preheader.199 ], [ 55, %.preheader.200 ], [ 54, %.preheader.201 ], [ 53, %.preheader.202 ], [ 52, %.preheader.203 ], [ 51, %.preheader.204 ], [ 50, %.preheader.205 ], [ 49, %.preheader.206 ], [ 48, %.preheader.207 ], [ 47, %.preheader.208 ], [ 46, %.preheader.209 ], [ 45, %.preheader.210 ], [ 44, %.preheader.211 ], [ 43, %.preheader.212 ], [ 42, %.preheader.213 ], [ 41, %.preheader.214 ], [ 40, %.preheader.215 ], [ 39, %.preheader.216 ], [ 38, %.preheader.217 ], [ 37, %.preheader.218 ], [ 36, %.preheader.219 ], [ 35, %.preheader.220 ], [ 34, %.preheader.221 ], [ 33, %.preheader.222 ], [ 32, %.preheader.223 ], [ 31, %.preheader.224 ], [ 30, %.preheader.225 ], [ 29, %.preheader.226 ], [ 28, %.preheader.227 ], [ 27, %.preheader.228 ], [ 26, %.preheader.229 ], [ 25, %.preheader.230 ], [ 24, %.preheader.231 ], [ 23, %.preheader.232 ], [ 22, %.preheader.233 ], [ 21, %.preheader.234 ], [ 20, %.preheader.235 ], [ 19, %.preheader.236 ], [ 18, %.preheader.237 ], [ 17, %.preheader.238 ], [ 16, %.preheader.239 ], [ 15, %.preheader.240 ], [ 14, %.preheader.241 ], [ 13, %.preheader.242 ], [ 12, %.preheader.243 ], [ 11, %.preheader.244 ], [ 10, %.preheader.245 ], [ 9, %.preheader.246 ], [ 8, %.preheader.247 ], [ 7, %.preheader.248 ], [ 6, %.preheader.249 ], [ 5, %.preheader.250 ], [ 4, %.preheader.251 ], [ 3, %.preheader.252 ], [ 2, %.preheader.253 ], [ 1, %.preheader.254 ]
  call void @__loop_termination_test___5()
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.preheader..loopexit.loopexit_crit_edge, %.loopexit.loopexitsplit
  %.15.ph = phi i8* [ %lsr.iv.lcssa, %.preheader..loopexit.loopexit_crit_edge ], [ %lsr.iv.lcssa2, %.loopexit.loopexitsplit ]
  %.12.ph = phi i8* [ %lsr.iv4.lcssa, %.preheader..loopexit.loopexit_crit_edge ], [ %lsr.iv4.lcssa3, %.loopexit.loopexitsplit ]
  %.2.ph = phi i64 [ 248, %.preheader..loopexit.loopexit_crit_edge ], [ %.lcssa, %.loopexit.loopexitsplit ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5, %3
  %.15 = phi i8* [ %0, %5 ], [ %0, %3 ], [ %.15.ph, %.loopexit.loopexit ]
  %.12 = phi i8* [ %1, %5 ], [ %1, %3 ], [ %.12.ph, %.loopexit.loopexit ]
  %.2 = phi i64 [ 255, %5 ], [ 256, %3 ], [ 248, %.loopexit.loopexit ]
  %12 = icmp eq i64 248, 0
  br i1 false, label %13, label %.loopexit1

; <label>:13:                                     ; preds = %.loopexit
  %14 = icmp ne i64 256, 0
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %13
  store i8 0, i8* %.15, align 1
  br label %16

; <label>:16:                                     ; preds = %15, %13
  br label %17

; <label>:17:                                     ; preds = %17, %16
  %.23 = phi i8* [ %.12, %16 ], [ %18, %17 ]
  call void @unroll_loop(i32 84)
  %18 = getelementptr inbounds i8, i8* %.23, i32 1
  %19 = load i8, i8* %.23, align 1
  %20 = icmp ne i8 %19, 0
  br i1 %20, label %17, label %.loopexit1.loopexit

.loopexit1.loopexit:                              ; preds = %17
  %.3.ph = phi i8* [ %18, %17 ]
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %.loopexit
  %.3 = phi i8* [ %.12, %.loopexit ], [ %.3.ph, %.loopexit1.loopexit ]
  %21 = ptrtoint i8* %.3 to i64
  %22 = ptrtoint i8* %1 to i64
  %23 = sub i64 10000600, 10000592
  %24 = sub nsw i64 8, 1
  ret i64 7

.preheader.1:                                     ; preds = %11
  %scevgep2.1 = getelementptr i8, i8* %scevgep1, i64 -1
  %scevgep6.1 = getelementptr i8, i8* %scevgep5, i64 -1
  call void @unroll_loop(i32 83)
  %25 = load i8, i8* %scevgep6.1, align 1
  store i8 46, i8* %scevgep2.1, align 1
  %26 = sext i8 46 to i32
  %27 = icmp eq i32 46, 0
  br i1 false, label %.preheader..loopexit.loopexit_crit_edge, label %28

; <label>:28:                                     ; preds = %.preheader.1
  call void @__loop_iteration_test___5()
  %scevgep1.1 = getelementptr i8, i8* %scevgep1, i64 1
  %scevgep5.1 = getelementptr i8, i8* %scevgep5, i64 1
  br i1 true, label %.preheader.2, label %.loopexit.loopexitsplit

.preheader.2:                                     ; preds = %28
  %scevgep2.2 = getelementptr i8, i8* %scevgep1.1, i64 -1
  %scevgep6.2 = getelementptr i8, i8* %scevgep5.1, i64 -1
  call void @unroll_loop(i32 83)
  %29 = load i8, i8* %scevgep6.2, align 1
  store i8 56, i8* %scevgep2.2, align 1
  %30 = sext i8 56 to i32
  %31 = icmp eq i32 56, 0
  br i1 false, label %.preheader..loopexit.loopexit_crit_edge, label %32

; <label>:32:                                     ; preds = %.preheader.2
  call void @__loop_iteration_test___5()
  %scevgep1.2 = getelementptr i8, i8* %scevgep1.1, i64 1
  %scevgep5.2 = getelementptr i8, i8* %scevgep5.1, i64 1
  br i1 true, label %.preheader.3, label %.loopexit.loopexitsplit

.preheader.3:                                     ; preds = %32
  %scevgep2.3 = getelementptr i8, i8* %scevgep1.2, i64 -1
  %scevgep6.3 = getelementptr i8, i8* %scevgep5.2, i64 -1
  call void @unroll_loop(i32 83)
  %33 = load i8, i8* %scevgep6.3, align 1
  store i8 46, i8* %scevgep2.3, align 1
  %34 = sext i8 46 to i32
  %35 = icmp eq i32 46, 0
  br i1 false, label %.preheader..loopexit.loopexit_crit_edge, label %36

; <label>:36:                                     ; preds = %.preheader.3
  call void @__loop_iteration_test___5()
  %scevgep1.3 = getelementptr i8, i8* %scevgep1.2, i64 1
  %scevgep5.3 = getelementptr i8, i8* %scevgep5.2, i64 1
  br i1 true, label %.preheader.4, label %.loopexit.loopexitsplit

.preheader.4:                                     ; preds = %36
  %scevgep2.4 = getelementptr i8, i8* %scevgep1.3, i64 -1
  %scevgep6.4 = getelementptr i8, i8* %scevgep5.3, i64 -1
  call void @unroll_loop(i32 83)
  %37 = load i8, i8* %scevgep6.4, align 1
  store i8 56, i8* %scevgep2.4, align 1
  %38 = sext i8 56 to i32
  %39 = icmp eq i32 56, 0
  br i1 false, label %.preheader..loopexit.loopexit_crit_edge, label %40

; <label>:40:                                     ; preds = %.preheader.4
  call void @__loop_iteration_test___5()
  %scevgep1.4 = getelementptr i8, i8* %scevgep1.3, i64 1
  %scevgep5.4 = getelementptr i8, i8* %scevgep5.3, i64 1
  br i1 true, label %.preheader.5, label %.loopexit.loopexitsplit

.preheader.5:                                     ; preds = %40
  %scevgep2.5 = getelementptr i8, i8* %scevgep1.4, i64 -1
  %scevgep6.5 = getelementptr i8, i8* %scevgep5.4, i64 -1
  call void @unroll_loop(i32 83)
  %41 = load i8, i8* %scevgep6.5, align 1
  store i8 46, i8* %scevgep2.5, align 1
  %42 = sext i8 46 to i32
  %43 = icmp eq i32 46, 0
  br i1 false, label %.preheader..loopexit.loopexit_crit_edge, label %44

; <label>:44:                                     ; preds = %.preheader.5
  call void @__loop_iteration_test___5()
  %scevgep1.5 = getelementptr i8, i8* %scevgep1.4, i64 1
  %scevgep5.5 = getelementptr i8, i8* %scevgep5.4, i64 1
  br i1 true, label %.preheader.6, label %.loopexit.loopexitsplit

.preheader.6:                                     ; preds = %44
  %scevgep2.6 = getelementptr i8, i8* %scevgep1.5, i64 -1
  %scevgep6.6 = getelementptr i8, i8* %scevgep5.5, i64 -1
  call void @unroll_loop(i32 83)
  %45 = load i8, i8* %scevgep6.6, align 1
  store i8 56, i8* %scevgep2.6, align 1
  %46 = sext i8 56 to i32
  %47 = icmp eq i32 56, 0
  br i1 false, label %.preheader..loopexit.loopexit_crit_edge, label %48

; <label>:48:                                     ; preds = %.preheader.6
  call void @__loop_iteration_test___5()
  %scevgep1.6 = getelementptr i8, i8* %scevgep1.5, i64 1
  %scevgep5.6 = getelementptr i8, i8* %scevgep5.5, i64 1
  br i1 true, label %.preheader.7, label %.loopexit.loopexitsplit

.preheader.7:                                     ; preds = %48
  %scevgep2.7 = getelementptr i8, i8* %scevgep1.6, i64 -1
  %scevgep6.7 = getelementptr i8, i8* %scevgep5.6, i64 -1
  call void @unroll_loop(i32 83)
  %49 = load i8, i8* %scevgep6.7, align 1
  store i8 0, i8* %scevgep2.7, align 1
  %50 = sext i8 0 to i32
  %51 = icmp eq i32 0, 0
  br i1 true, label %.preheader..loopexit.loopexit_crit_edge, label %52

; <label>:52:                                     ; preds = %.preheader.7
  call void @__loop_iteration_test___5()
  %scevgep1.7 = getelementptr i8, i8* %scevgep1.6, i64 1
  %scevgep5.7 = getelementptr i8, i8* %scevgep5.6, i64 1
  br i1 true, label %.preheader.8, label %.loopexit.loopexitsplit

.preheader.8:                                     ; preds = %52
  %scevgep2.8 = getelementptr i8, i8* %scevgep1.7, i64 -1
  %scevgep6.8 = getelementptr i8, i8* %scevgep5.7, i64 -1
  call void @unroll_loop(i32 83)
  %53 = load i8, i8* %scevgep6.8, align 1
  store i8 %53, i8* %scevgep2.8, align 1
  %54 = sext i8 %53 to i32
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %.preheader..loopexit.loopexit_crit_edge, label %56

; <label>:56:                                     ; preds = %.preheader.8
  call void @__loop_iteration_test___5()
  %scevgep1.8 = getelementptr i8, i8* %scevgep1.7, i64 1
  %scevgep5.8 = getelementptr i8, i8* %scevgep5.7, i64 1
  br i1 true, label %.preheader.9, label %.loopexit.loopexitsplit

.preheader.9:                                     ; preds = %56
  %scevgep2.9 = getelementptr i8, i8* %scevgep1.8, i64 -1
  %scevgep6.9 = getelementptr i8, i8* %scevgep5.8, i64 -1
  call void @unroll_loop(i32 83)
  %57 = load i8, i8* %scevgep6.9, align 1
  store i8 %57, i8* %scevgep2.9, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %.preheader..loopexit.loopexit_crit_edge, label %60

; <label>:60:                                     ; preds = %.preheader.9
  call void @__loop_iteration_test___5()
  %scevgep1.9 = getelementptr i8, i8* %scevgep1.8, i64 1
  %scevgep5.9 = getelementptr i8, i8* %scevgep5.8, i64 1
  br i1 true, label %.preheader.10, label %.loopexit.loopexitsplit

.preheader.10:                                    ; preds = %60
  %scevgep2.10 = getelementptr i8, i8* %scevgep1.9, i64 -1
  %scevgep6.10 = getelementptr i8, i8* %scevgep5.9, i64 -1
  call void @unroll_loop(i32 83)
  %61 = load i8, i8* %scevgep6.10, align 1
  store i8 %61, i8* %scevgep2.10, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %.preheader..loopexit.loopexit_crit_edge, label %64

; <label>:64:                                     ; preds = %.preheader.10
  call void @__loop_iteration_test___5()
  %scevgep1.10 = getelementptr i8, i8* %scevgep1.9, i64 1
  %scevgep5.10 = getelementptr i8, i8* %scevgep5.9, i64 1
  br i1 true, label %.preheader.11, label %.loopexit.loopexitsplit

.preheader.11:                                    ; preds = %64
  %scevgep2.11 = getelementptr i8, i8* %scevgep1.10, i64 -1
  %scevgep6.11 = getelementptr i8, i8* %scevgep5.10, i64 -1
  call void @unroll_loop(i32 83)
  %65 = load i8, i8* %scevgep6.11, align 1
  store i8 %65, i8* %scevgep2.11, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %.preheader..loopexit.loopexit_crit_edge, label %68

; <label>:68:                                     ; preds = %.preheader.11
  call void @__loop_iteration_test___5()
  %scevgep1.11 = getelementptr i8, i8* %scevgep1.10, i64 1
  %scevgep5.11 = getelementptr i8, i8* %scevgep5.10, i64 1
  br i1 true, label %.preheader.12, label %.loopexit.loopexitsplit

.preheader.12:                                    ; preds = %68
  %scevgep2.12 = getelementptr i8, i8* %scevgep1.11, i64 -1
  %scevgep6.12 = getelementptr i8, i8* %scevgep5.11, i64 -1
  call void @unroll_loop(i32 83)
  %69 = load i8, i8* %scevgep6.12, align 1
  store i8 %69, i8* %scevgep2.12, align 1
  %70 = sext i8 %69 to i32
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %.preheader..loopexit.loopexit_crit_edge, label %72

; <label>:72:                                     ; preds = %.preheader.12
  call void @__loop_iteration_test___5()
  %scevgep1.12 = getelementptr i8, i8* %scevgep1.11, i64 1
  %scevgep5.12 = getelementptr i8, i8* %scevgep5.11, i64 1
  br i1 true, label %.preheader.13, label %.loopexit.loopexitsplit

.preheader.13:                                    ; preds = %72
  %scevgep2.13 = getelementptr i8, i8* %scevgep1.12, i64 -1
  %scevgep6.13 = getelementptr i8, i8* %scevgep5.12, i64 -1
  call void @unroll_loop(i32 83)
  %73 = load i8, i8* %scevgep6.13, align 1
  store i8 %73, i8* %scevgep2.13, align 1
  %74 = sext i8 %73 to i32
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %.preheader..loopexit.loopexit_crit_edge, label %76

; <label>:76:                                     ; preds = %.preheader.13
  call void @__loop_iteration_test___5()
  %scevgep1.13 = getelementptr i8, i8* %scevgep1.12, i64 1
  %scevgep5.13 = getelementptr i8, i8* %scevgep5.12, i64 1
  br i1 true, label %.preheader.14, label %.loopexit.loopexitsplit

.preheader.14:                                    ; preds = %76
  %scevgep2.14 = getelementptr i8, i8* %scevgep1.13, i64 -1
  %scevgep6.14 = getelementptr i8, i8* %scevgep5.13, i64 -1
  call void @unroll_loop(i32 83)
  %77 = load i8, i8* %scevgep6.14, align 1
  store i8 %77, i8* %scevgep2.14, align 1
  %78 = sext i8 %77 to i32
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %.preheader..loopexit.loopexit_crit_edge, label %80

; <label>:80:                                     ; preds = %.preheader.14
  call void @__loop_iteration_test___5()
  %scevgep1.14 = getelementptr i8, i8* %scevgep1.13, i64 1
  %scevgep5.14 = getelementptr i8, i8* %scevgep5.13, i64 1
  br i1 true, label %.preheader.15, label %.loopexit.loopexitsplit

.preheader.15:                                    ; preds = %80
  %scevgep2.15 = getelementptr i8, i8* %scevgep1.14, i64 -1
  %scevgep6.15 = getelementptr i8, i8* %scevgep5.14, i64 -1
  call void @unroll_loop(i32 83)
  %81 = load i8, i8* %scevgep6.15, align 1
  store i8 %81, i8* %scevgep2.15, align 1
  %82 = sext i8 %81 to i32
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %.preheader..loopexit.loopexit_crit_edge, label %84

; <label>:84:                                     ; preds = %.preheader.15
  call void @__loop_iteration_test___5()
  %scevgep1.15 = getelementptr i8, i8* %scevgep1.14, i64 1
  %scevgep5.15 = getelementptr i8, i8* %scevgep5.14, i64 1
  br i1 true, label %.preheader.16, label %.loopexit.loopexitsplit

.preheader.16:                                    ; preds = %84
  %scevgep2.16 = getelementptr i8, i8* %scevgep1.15, i64 -1
  %scevgep6.16 = getelementptr i8, i8* %scevgep5.15, i64 -1
  call void @unroll_loop(i32 83)
  %85 = load i8, i8* %scevgep6.16, align 1
  store i8 %85, i8* %scevgep2.16, align 1
  %86 = sext i8 %85 to i32
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %.preheader..loopexit.loopexit_crit_edge, label %88

; <label>:88:                                     ; preds = %.preheader.16
  call void @__loop_iteration_test___5()
  %scevgep1.16 = getelementptr i8, i8* %scevgep1.15, i64 1
  %scevgep5.16 = getelementptr i8, i8* %scevgep5.15, i64 1
  br i1 true, label %.preheader.17, label %.loopexit.loopexitsplit

.preheader.17:                                    ; preds = %88
  %scevgep2.17 = getelementptr i8, i8* %scevgep1.16, i64 -1
  %scevgep6.17 = getelementptr i8, i8* %scevgep5.16, i64 -1
  call void @unroll_loop(i32 83)
  %89 = load i8, i8* %scevgep6.17, align 1
  store i8 %89, i8* %scevgep2.17, align 1
  %90 = sext i8 %89 to i32
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %.preheader..loopexit.loopexit_crit_edge, label %92

; <label>:92:                                     ; preds = %.preheader.17
  call void @__loop_iteration_test___5()
  %scevgep1.17 = getelementptr i8, i8* %scevgep1.16, i64 1
  %scevgep5.17 = getelementptr i8, i8* %scevgep5.16, i64 1
  br i1 true, label %.preheader.18, label %.loopexit.loopexitsplit

.preheader.18:                                    ; preds = %92
  %scevgep2.18 = getelementptr i8, i8* %scevgep1.17, i64 -1
  %scevgep6.18 = getelementptr i8, i8* %scevgep5.17, i64 -1
  call void @unroll_loop(i32 83)
  %93 = load i8, i8* %scevgep6.18, align 1
  store i8 %93, i8* %scevgep2.18, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %.preheader..loopexit.loopexit_crit_edge, label %96

; <label>:96:                                     ; preds = %.preheader.18
  call void @__loop_iteration_test___5()
  %scevgep1.18 = getelementptr i8, i8* %scevgep1.17, i64 1
  %scevgep5.18 = getelementptr i8, i8* %scevgep5.17, i64 1
  br i1 true, label %.preheader.19, label %.loopexit.loopexitsplit

.preheader.19:                                    ; preds = %96
  %scevgep2.19 = getelementptr i8, i8* %scevgep1.18, i64 -1
  %scevgep6.19 = getelementptr i8, i8* %scevgep5.18, i64 -1
  call void @unroll_loop(i32 83)
  %97 = load i8, i8* %scevgep6.19, align 1
  store i8 %97, i8* %scevgep2.19, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %.preheader..loopexit.loopexit_crit_edge, label %100

; <label>:100:                                    ; preds = %.preheader.19
  call void @__loop_iteration_test___5()
  %scevgep1.19 = getelementptr i8, i8* %scevgep1.18, i64 1
  %scevgep5.19 = getelementptr i8, i8* %scevgep5.18, i64 1
  br i1 true, label %.preheader.20, label %.loopexit.loopexitsplit

.preheader.20:                                    ; preds = %100
  %scevgep2.20 = getelementptr i8, i8* %scevgep1.19, i64 -1
  %scevgep6.20 = getelementptr i8, i8* %scevgep5.19, i64 -1
  call void @unroll_loop(i32 83)
  %101 = load i8, i8* %scevgep6.20, align 1
  store i8 %101, i8* %scevgep2.20, align 1
  %102 = sext i8 %101 to i32
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %.preheader..loopexit.loopexit_crit_edge, label %104

; <label>:104:                                    ; preds = %.preheader.20
  call void @__loop_iteration_test___5()
  %scevgep1.20 = getelementptr i8, i8* %scevgep1.19, i64 1
  %scevgep5.20 = getelementptr i8, i8* %scevgep5.19, i64 1
  br i1 true, label %.preheader.21, label %.loopexit.loopexitsplit

.preheader.21:                                    ; preds = %104
  %scevgep2.21 = getelementptr i8, i8* %scevgep1.20, i64 -1
  %scevgep6.21 = getelementptr i8, i8* %scevgep5.20, i64 -1
  call void @unroll_loop(i32 83)
  %105 = load i8, i8* %scevgep6.21, align 1
  store i8 %105, i8* %scevgep2.21, align 1
  %106 = sext i8 %105 to i32
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %.preheader..loopexit.loopexit_crit_edge, label %108

; <label>:108:                                    ; preds = %.preheader.21
  call void @__loop_iteration_test___5()
  %scevgep1.21 = getelementptr i8, i8* %scevgep1.20, i64 1
  %scevgep5.21 = getelementptr i8, i8* %scevgep5.20, i64 1
  br i1 true, label %.preheader.22, label %.loopexit.loopexitsplit

.preheader.22:                                    ; preds = %108
  %scevgep2.22 = getelementptr i8, i8* %scevgep1.21, i64 -1
  %scevgep6.22 = getelementptr i8, i8* %scevgep5.21, i64 -1
  call void @unroll_loop(i32 83)
  %109 = load i8, i8* %scevgep6.22, align 1
  store i8 %109, i8* %scevgep2.22, align 1
  %110 = sext i8 %109 to i32
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %.preheader..loopexit.loopexit_crit_edge, label %112

; <label>:112:                                    ; preds = %.preheader.22
  call void @__loop_iteration_test___5()
  %scevgep1.22 = getelementptr i8, i8* %scevgep1.21, i64 1
  %scevgep5.22 = getelementptr i8, i8* %scevgep5.21, i64 1
  br i1 true, label %.preheader.23, label %.loopexit.loopexitsplit

.preheader.23:                                    ; preds = %112
  %scevgep2.23 = getelementptr i8, i8* %scevgep1.22, i64 -1
  %scevgep6.23 = getelementptr i8, i8* %scevgep5.22, i64 -1
  call void @unroll_loop(i32 83)
  %113 = load i8, i8* %scevgep6.23, align 1
  store i8 %113, i8* %scevgep2.23, align 1
  %114 = sext i8 %113 to i32
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %.preheader..loopexit.loopexit_crit_edge, label %116

; <label>:116:                                    ; preds = %.preheader.23
  call void @__loop_iteration_test___5()
  %scevgep1.23 = getelementptr i8, i8* %scevgep1.22, i64 1
  %scevgep5.23 = getelementptr i8, i8* %scevgep5.22, i64 1
  br i1 true, label %.preheader.24, label %.loopexit.loopexitsplit

.preheader.24:                                    ; preds = %116
  %scevgep2.24 = getelementptr i8, i8* %scevgep1.23, i64 -1
  %scevgep6.24 = getelementptr i8, i8* %scevgep5.23, i64 -1
  call void @unroll_loop(i32 83)
  %117 = load i8, i8* %scevgep6.24, align 1
  store i8 %117, i8* %scevgep2.24, align 1
  %118 = sext i8 %117 to i32
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %.preheader..loopexit.loopexit_crit_edge, label %120

; <label>:120:                                    ; preds = %.preheader.24
  call void @__loop_iteration_test___5()
  %scevgep1.24 = getelementptr i8, i8* %scevgep1.23, i64 1
  %scevgep5.24 = getelementptr i8, i8* %scevgep5.23, i64 1
  br i1 true, label %.preheader.25, label %.loopexit.loopexitsplit

.preheader.25:                                    ; preds = %120
  %scevgep2.25 = getelementptr i8, i8* %scevgep1.24, i64 -1
  %scevgep6.25 = getelementptr i8, i8* %scevgep5.24, i64 -1
  call void @unroll_loop(i32 83)
  %121 = load i8, i8* %scevgep6.25, align 1
  store i8 %121, i8* %scevgep2.25, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %.preheader..loopexit.loopexit_crit_edge, label %124

; <label>:124:                                    ; preds = %.preheader.25
  call void @__loop_iteration_test___5()
  %scevgep1.25 = getelementptr i8, i8* %scevgep1.24, i64 1
  %scevgep5.25 = getelementptr i8, i8* %scevgep5.24, i64 1
  br i1 true, label %.preheader.26, label %.loopexit.loopexitsplit

.preheader.26:                                    ; preds = %124
  %scevgep2.26 = getelementptr i8, i8* %scevgep1.25, i64 -1
  %scevgep6.26 = getelementptr i8, i8* %scevgep5.25, i64 -1
  call void @unroll_loop(i32 83)
  %125 = load i8, i8* %scevgep6.26, align 1
  store i8 %125, i8* %scevgep2.26, align 1
  %126 = sext i8 %125 to i32
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %.preheader..loopexit.loopexit_crit_edge, label %128

; <label>:128:                                    ; preds = %.preheader.26
  call void @__loop_iteration_test___5()
  %scevgep1.26 = getelementptr i8, i8* %scevgep1.25, i64 1
  %scevgep5.26 = getelementptr i8, i8* %scevgep5.25, i64 1
  br i1 true, label %.preheader.27, label %.loopexit.loopexitsplit

.preheader.27:                                    ; preds = %128
  %scevgep2.27 = getelementptr i8, i8* %scevgep1.26, i64 -1
  %scevgep6.27 = getelementptr i8, i8* %scevgep5.26, i64 -1
  call void @unroll_loop(i32 83)
  %129 = load i8, i8* %scevgep6.27, align 1
  store i8 %129, i8* %scevgep2.27, align 1
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %.preheader..loopexit.loopexit_crit_edge, label %132

; <label>:132:                                    ; preds = %.preheader.27
  call void @__loop_iteration_test___5()
  %scevgep1.27 = getelementptr i8, i8* %scevgep1.26, i64 1
  %scevgep5.27 = getelementptr i8, i8* %scevgep5.26, i64 1
  br i1 true, label %.preheader.28, label %.loopexit.loopexitsplit

.preheader.28:                                    ; preds = %132
  %scevgep2.28 = getelementptr i8, i8* %scevgep1.27, i64 -1
  %scevgep6.28 = getelementptr i8, i8* %scevgep5.27, i64 -1
  call void @unroll_loop(i32 83)
  %133 = load i8, i8* %scevgep6.28, align 1
  store i8 %133, i8* %scevgep2.28, align 1
  %134 = sext i8 %133 to i32
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %.preheader..loopexit.loopexit_crit_edge, label %136

; <label>:136:                                    ; preds = %.preheader.28
  call void @__loop_iteration_test___5()
  %scevgep1.28 = getelementptr i8, i8* %scevgep1.27, i64 1
  %scevgep5.28 = getelementptr i8, i8* %scevgep5.27, i64 1
  br i1 true, label %.preheader.29, label %.loopexit.loopexitsplit

.preheader.29:                                    ; preds = %136
  %scevgep2.29 = getelementptr i8, i8* %scevgep1.28, i64 -1
  %scevgep6.29 = getelementptr i8, i8* %scevgep5.28, i64 -1
  call void @unroll_loop(i32 83)
  %137 = load i8, i8* %scevgep6.29, align 1
  store i8 %137, i8* %scevgep2.29, align 1
  %138 = sext i8 %137 to i32
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %.preheader..loopexit.loopexit_crit_edge, label %140

; <label>:140:                                    ; preds = %.preheader.29
  call void @__loop_iteration_test___5()
  %scevgep1.29 = getelementptr i8, i8* %scevgep1.28, i64 1
  %scevgep5.29 = getelementptr i8, i8* %scevgep5.28, i64 1
  br i1 true, label %.preheader.30, label %.loopexit.loopexitsplit

.preheader.30:                                    ; preds = %140
  %scevgep2.30 = getelementptr i8, i8* %scevgep1.29, i64 -1
  %scevgep6.30 = getelementptr i8, i8* %scevgep5.29, i64 -1
  call void @unroll_loop(i32 83)
  %141 = load i8, i8* %scevgep6.30, align 1
  store i8 %141, i8* %scevgep2.30, align 1
  %142 = sext i8 %141 to i32
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %.preheader..loopexit.loopexit_crit_edge, label %144

; <label>:144:                                    ; preds = %.preheader.30
  call void @__loop_iteration_test___5()
  %scevgep1.30 = getelementptr i8, i8* %scevgep1.29, i64 1
  %scevgep5.30 = getelementptr i8, i8* %scevgep5.29, i64 1
  br i1 true, label %.preheader.31, label %.loopexit.loopexitsplit

.preheader.31:                                    ; preds = %144
  %scevgep2.31 = getelementptr i8, i8* %scevgep1.30, i64 -1
  %scevgep6.31 = getelementptr i8, i8* %scevgep5.30, i64 -1
  call void @unroll_loop(i32 83)
  %145 = load i8, i8* %scevgep6.31, align 1
  store i8 %145, i8* %scevgep2.31, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %.preheader..loopexit.loopexit_crit_edge, label %148

; <label>:148:                                    ; preds = %.preheader.31
  call void @__loop_iteration_test___5()
  %scevgep1.31 = getelementptr i8, i8* %scevgep1.30, i64 1
  %scevgep5.31 = getelementptr i8, i8* %scevgep5.30, i64 1
  br i1 true, label %.preheader.32, label %.loopexit.loopexitsplit

.preheader.32:                                    ; preds = %148
  %scevgep2.32 = getelementptr i8, i8* %scevgep1.31, i64 -1
  %scevgep6.32 = getelementptr i8, i8* %scevgep5.31, i64 -1
  call void @unroll_loop(i32 83)
  %149 = load i8, i8* %scevgep6.32, align 1
  store i8 %149, i8* %scevgep2.32, align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %.preheader..loopexit.loopexit_crit_edge, label %152

; <label>:152:                                    ; preds = %.preheader.32
  call void @__loop_iteration_test___5()
  %scevgep1.32 = getelementptr i8, i8* %scevgep1.31, i64 1
  %scevgep5.32 = getelementptr i8, i8* %scevgep5.31, i64 1
  br i1 true, label %.preheader.33, label %.loopexit.loopexitsplit

.preheader.33:                                    ; preds = %152
  %scevgep2.33 = getelementptr i8, i8* %scevgep1.32, i64 -1
  %scevgep6.33 = getelementptr i8, i8* %scevgep5.32, i64 -1
  call void @unroll_loop(i32 83)
  %153 = load i8, i8* %scevgep6.33, align 1
  store i8 %153, i8* %scevgep2.33, align 1
  %154 = sext i8 %153 to i32
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %.preheader..loopexit.loopexit_crit_edge, label %156

; <label>:156:                                    ; preds = %.preheader.33
  call void @__loop_iteration_test___5()
  %scevgep1.33 = getelementptr i8, i8* %scevgep1.32, i64 1
  %scevgep5.33 = getelementptr i8, i8* %scevgep5.32, i64 1
  br i1 true, label %.preheader.34, label %.loopexit.loopexitsplit

.preheader.34:                                    ; preds = %156
  %scevgep2.34 = getelementptr i8, i8* %scevgep1.33, i64 -1
  %scevgep6.34 = getelementptr i8, i8* %scevgep5.33, i64 -1
  call void @unroll_loop(i32 83)
  %157 = load i8, i8* %scevgep6.34, align 1
  store i8 %157, i8* %scevgep2.34, align 1
  %158 = sext i8 %157 to i32
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %.preheader..loopexit.loopexit_crit_edge, label %160

; <label>:160:                                    ; preds = %.preheader.34
  call void @__loop_iteration_test___5()
  %scevgep1.34 = getelementptr i8, i8* %scevgep1.33, i64 1
  %scevgep5.34 = getelementptr i8, i8* %scevgep5.33, i64 1
  br i1 true, label %.preheader.35, label %.loopexit.loopexitsplit

.preheader.35:                                    ; preds = %160
  %scevgep2.35 = getelementptr i8, i8* %scevgep1.34, i64 -1
  %scevgep6.35 = getelementptr i8, i8* %scevgep5.34, i64 -1
  call void @unroll_loop(i32 83)
  %161 = load i8, i8* %scevgep6.35, align 1
  store i8 %161, i8* %scevgep2.35, align 1
  %162 = sext i8 %161 to i32
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %.preheader..loopexit.loopexit_crit_edge, label %164

; <label>:164:                                    ; preds = %.preheader.35
  call void @__loop_iteration_test___5()
  %scevgep1.35 = getelementptr i8, i8* %scevgep1.34, i64 1
  %scevgep5.35 = getelementptr i8, i8* %scevgep5.34, i64 1
  br i1 true, label %.preheader.36, label %.loopexit.loopexitsplit

.preheader.36:                                    ; preds = %164
  %scevgep2.36 = getelementptr i8, i8* %scevgep1.35, i64 -1
  %scevgep6.36 = getelementptr i8, i8* %scevgep5.35, i64 -1
  call void @unroll_loop(i32 83)
  %165 = load i8, i8* %scevgep6.36, align 1
  store i8 %165, i8* %scevgep2.36, align 1
  %166 = sext i8 %165 to i32
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %.preheader..loopexit.loopexit_crit_edge, label %168

; <label>:168:                                    ; preds = %.preheader.36
  call void @__loop_iteration_test___5()
  %scevgep1.36 = getelementptr i8, i8* %scevgep1.35, i64 1
  %scevgep5.36 = getelementptr i8, i8* %scevgep5.35, i64 1
  br i1 true, label %.preheader.37, label %.loopexit.loopexitsplit

.preheader.37:                                    ; preds = %168
  %scevgep2.37 = getelementptr i8, i8* %scevgep1.36, i64 -1
  %scevgep6.37 = getelementptr i8, i8* %scevgep5.36, i64 -1
  call void @unroll_loop(i32 83)
  %169 = load i8, i8* %scevgep6.37, align 1
  store i8 %169, i8* %scevgep2.37, align 1
  %170 = sext i8 %169 to i32
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %.preheader..loopexit.loopexit_crit_edge, label %172

; <label>:172:                                    ; preds = %.preheader.37
  call void @__loop_iteration_test___5()
  %scevgep1.37 = getelementptr i8, i8* %scevgep1.36, i64 1
  %scevgep5.37 = getelementptr i8, i8* %scevgep5.36, i64 1
  br i1 true, label %.preheader.38, label %.loopexit.loopexitsplit

.preheader.38:                                    ; preds = %172
  %scevgep2.38 = getelementptr i8, i8* %scevgep1.37, i64 -1
  %scevgep6.38 = getelementptr i8, i8* %scevgep5.37, i64 -1
  call void @unroll_loop(i32 83)
  %173 = load i8, i8* %scevgep6.38, align 1
  store i8 %173, i8* %scevgep2.38, align 1
  %174 = sext i8 %173 to i32
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %.preheader..loopexit.loopexit_crit_edge, label %176

; <label>:176:                                    ; preds = %.preheader.38
  call void @__loop_iteration_test___5()
  %scevgep1.38 = getelementptr i8, i8* %scevgep1.37, i64 1
  %scevgep5.38 = getelementptr i8, i8* %scevgep5.37, i64 1
  br i1 true, label %.preheader.39, label %.loopexit.loopexitsplit

.preheader.39:                                    ; preds = %176
  %scevgep2.39 = getelementptr i8, i8* %scevgep1.38, i64 -1
  %scevgep6.39 = getelementptr i8, i8* %scevgep5.38, i64 -1
  call void @unroll_loop(i32 83)
  %177 = load i8, i8* %scevgep6.39, align 1
  store i8 %177, i8* %scevgep2.39, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %.preheader..loopexit.loopexit_crit_edge, label %180

; <label>:180:                                    ; preds = %.preheader.39
  call void @__loop_iteration_test___5()
  %scevgep1.39 = getelementptr i8, i8* %scevgep1.38, i64 1
  %scevgep5.39 = getelementptr i8, i8* %scevgep5.38, i64 1
  br i1 true, label %.preheader.40, label %.loopexit.loopexitsplit

.preheader.40:                                    ; preds = %180
  %scevgep2.40 = getelementptr i8, i8* %scevgep1.39, i64 -1
  %scevgep6.40 = getelementptr i8, i8* %scevgep5.39, i64 -1
  call void @unroll_loop(i32 83)
  %181 = load i8, i8* %scevgep6.40, align 1
  store i8 %181, i8* %scevgep2.40, align 1
  %182 = sext i8 %181 to i32
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %.preheader..loopexit.loopexit_crit_edge, label %184

; <label>:184:                                    ; preds = %.preheader.40
  call void @__loop_iteration_test___5()
  %scevgep1.40 = getelementptr i8, i8* %scevgep1.39, i64 1
  %scevgep5.40 = getelementptr i8, i8* %scevgep5.39, i64 1
  br i1 true, label %.preheader.41, label %.loopexit.loopexitsplit

.preheader.41:                                    ; preds = %184
  %scevgep2.41 = getelementptr i8, i8* %scevgep1.40, i64 -1
  %scevgep6.41 = getelementptr i8, i8* %scevgep5.40, i64 -1
  call void @unroll_loop(i32 83)
  %185 = load i8, i8* %scevgep6.41, align 1
  store i8 %185, i8* %scevgep2.41, align 1
  %186 = sext i8 %185 to i32
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %.preheader..loopexit.loopexit_crit_edge, label %188

; <label>:188:                                    ; preds = %.preheader.41
  call void @__loop_iteration_test___5()
  %scevgep1.41 = getelementptr i8, i8* %scevgep1.40, i64 1
  %scevgep5.41 = getelementptr i8, i8* %scevgep5.40, i64 1
  br i1 true, label %.preheader.42, label %.loopexit.loopexitsplit

.preheader.42:                                    ; preds = %188
  %scevgep2.42 = getelementptr i8, i8* %scevgep1.41, i64 -1
  %scevgep6.42 = getelementptr i8, i8* %scevgep5.41, i64 -1
  call void @unroll_loop(i32 83)
  %189 = load i8, i8* %scevgep6.42, align 1
  store i8 %189, i8* %scevgep2.42, align 1
  %190 = sext i8 %189 to i32
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %.preheader..loopexit.loopexit_crit_edge, label %192

; <label>:192:                                    ; preds = %.preheader.42
  call void @__loop_iteration_test___5()
  %scevgep1.42 = getelementptr i8, i8* %scevgep1.41, i64 1
  %scevgep5.42 = getelementptr i8, i8* %scevgep5.41, i64 1
  br i1 true, label %.preheader.43, label %.loopexit.loopexitsplit

.preheader.43:                                    ; preds = %192
  %scevgep2.43 = getelementptr i8, i8* %scevgep1.42, i64 -1
  %scevgep6.43 = getelementptr i8, i8* %scevgep5.42, i64 -1
  call void @unroll_loop(i32 83)
  %193 = load i8, i8* %scevgep6.43, align 1
  store i8 %193, i8* %scevgep2.43, align 1
  %194 = sext i8 %193 to i32
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %.preheader..loopexit.loopexit_crit_edge, label %196

; <label>:196:                                    ; preds = %.preheader.43
  call void @__loop_iteration_test___5()
  %scevgep1.43 = getelementptr i8, i8* %scevgep1.42, i64 1
  %scevgep5.43 = getelementptr i8, i8* %scevgep5.42, i64 1
  br i1 true, label %.preheader.44, label %.loopexit.loopexitsplit

.preheader.44:                                    ; preds = %196
  %scevgep2.44 = getelementptr i8, i8* %scevgep1.43, i64 -1
  %scevgep6.44 = getelementptr i8, i8* %scevgep5.43, i64 -1
  call void @unroll_loop(i32 83)
  %197 = load i8, i8* %scevgep6.44, align 1
  store i8 %197, i8* %scevgep2.44, align 1
  %198 = sext i8 %197 to i32
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %.preheader..loopexit.loopexit_crit_edge, label %200

; <label>:200:                                    ; preds = %.preheader.44
  call void @__loop_iteration_test___5()
  %scevgep1.44 = getelementptr i8, i8* %scevgep1.43, i64 1
  %scevgep5.44 = getelementptr i8, i8* %scevgep5.43, i64 1
  br i1 true, label %.preheader.45, label %.loopexit.loopexitsplit

.preheader.45:                                    ; preds = %200
  %scevgep2.45 = getelementptr i8, i8* %scevgep1.44, i64 -1
  %scevgep6.45 = getelementptr i8, i8* %scevgep5.44, i64 -1
  call void @unroll_loop(i32 83)
  %201 = load i8, i8* %scevgep6.45, align 1
  store i8 %201, i8* %scevgep2.45, align 1
  %202 = sext i8 %201 to i32
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %.preheader..loopexit.loopexit_crit_edge, label %204

; <label>:204:                                    ; preds = %.preheader.45
  call void @__loop_iteration_test___5()
  %scevgep1.45 = getelementptr i8, i8* %scevgep1.44, i64 1
  %scevgep5.45 = getelementptr i8, i8* %scevgep5.44, i64 1
  br i1 true, label %.preheader.46, label %.loopexit.loopexitsplit

.preheader.46:                                    ; preds = %204
  %scevgep2.46 = getelementptr i8, i8* %scevgep1.45, i64 -1
  %scevgep6.46 = getelementptr i8, i8* %scevgep5.45, i64 -1
  call void @unroll_loop(i32 83)
  %205 = load i8, i8* %scevgep6.46, align 1
  store i8 %205, i8* %scevgep2.46, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %.preheader..loopexit.loopexit_crit_edge, label %208

; <label>:208:                                    ; preds = %.preheader.46
  call void @__loop_iteration_test___5()
  %scevgep1.46 = getelementptr i8, i8* %scevgep1.45, i64 1
  %scevgep5.46 = getelementptr i8, i8* %scevgep5.45, i64 1
  br i1 true, label %.preheader.47, label %.loopexit.loopexitsplit

.preheader.47:                                    ; preds = %208
  %scevgep2.47 = getelementptr i8, i8* %scevgep1.46, i64 -1
  %scevgep6.47 = getelementptr i8, i8* %scevgep5.46, i64 -1
  call void @unroll_loop(i32 83)
  %209 = load i8, i8* %scevgep6.47, align 1
  store i8 %209, i8* %scevgep2.47, align 1
  %210 = sext i8 %209 to i32
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %.preheader..loopexit.loopexit_crit_edge, label %212

; <label>:212:                                    ; preds = %.preheader.47
  call void @__loop_iteration_test___5()
  %scevgep1.47 = getelementptr i8, i8* %scevgep1.46, i64 1
  %scevgep5.47 = getelementptr i8, i8* %scevgep5.46, i64 1
  br i1 true, label %.preheader.48, label %.loopexit.loopexitsplit

.preheader.48:                                    ; preds = %212
  %scevgep2.48 = getelementptr i8, i8* %scevgep1.47, i64 -1
  %scevgep6.48 = getelementptr i8, i8* %scevgep5.47, i64 -1
  call void @unroll_loop(i32 83)
  %213 = load i8, i8* %scevgep6.48, align 1
  store i8 %213, i8* %scevgep2.48, align 1
  %214 = sext i8 %213 to i32
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %.preheader..loopexit.loopexit_crit_edge, label %216

; <label>:216:                                    ; preds = %.preheader.48
  call void @__loop_iteration_test___5()
  %scevgep1.48 = getelementptr i8, i8* %scevgep1.47, i64 1
  %scevgep5.48 = getelementptr i8, i8* %scevgep5.47, i64 1
  br i1 true, label %.preheader.49, label %.loopexit.loopexitsplit

.preheader.49:                                    ; preds = %216
  %scevgep2.49 = getelementptr i8, i8* %scevgep1.48, i64 -1
  %scevgep6.49 = getelementptr i8, i8* %scevgep5.48, i64 -1
  call void @unroll_loop(i32 83)
  %217 = load i8, i8* %scevgep6.49, align 1
  store i8 %217, i8* %scevgep2.49, align 1
  %218 = sext i8 %217 to i32
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %.preheader..loopexit.loopexit_crit_edge, label %220

; <label>:220:                                    ; preds = %.preheader.49
  call void @__loop_iteration_test___5()
  %scevgep1.49 = getelementptr i8, i8* %scevgep1.48, i64 1
  %scevgep5.49 = getelementptr i8, i8* %scevgep5.48, i64 1
  br i1 true, label %.preheader.50, label %.loopexit.loopexitsplit

.preheader.50:                                    ; preds = %220
  %scevgep2.50 = getelementptr i8, i8* %scevgep1.49, i64 -1
  %scevgep6.50 = getelementptr i8, i8* %scevgep5.49, i64 -1
  call void @unroll_loop(i32 83)
  %221 = load i8, i8* %scevgep6.50, align 1
  store i8 %221, i8* %scevgep2.50, align 1
  %222 = sext i8 %221 to i32
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %.preheader..loopexit.loopexit_crit_edge, label %224

; <label>:224:                                    ; preds = %.preheader.50
  call void @__loop_iteration_test___5()
  %scevgep1.50 = getelementptr i8, i8* %scevgep1.49, i64 1
  %scevgep5.50 = getelementptr i8, i8* %scevgep5.49, i64 1
  br i1 true, label %.preheader.51, label %.loopexit.loopexitsplit

.preheader.51:                                    ; preds = %224
  %scevgep2.51 = getelementptr i8, i8* %scevgep1.50, i64 -1
  %scevgep6.51 = getelementptr i8, i8* %scevgep5.50, i64 -1
  call void @unroll_loop(i32 83)
  %225 = load i8, i8* %scevgep6.51, align 1
  store i8 %225, i8* %scevgep2.51, align 1
  %226 = sext i8 %225 to i32
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %.preheader..loopexit.loopexit_crit_edge, label %228

; <label>:228:                                    ; preds = %.preheader.51
  call void @__loop_iteration_test___5()
  %scevgep1.51 = getelementptr i8, i8* %scevgep1.50, i64 1
  %scevgep5.51 = getelementptr i8, i8* %scevgep5.50, i64 1
  br i1 true, label %.preheader.52, label %.loopexit.loopexitsplit

.preheader.52:                                    ; preds = %228
  %scevgep2.52 = getelementptr i8, i8* %scevgep1.51, i64 -1
  %scevgep6.52 = getelementptr i8, i8* %scevgep5.51, i64 -1
  call void @unroll_loop(i32 83)
  %229 = load i8, i8* %scevgep6.52, align 1
  store i8 %229, i8* %scevgep2.52, align 1
  %230 = sext i8 %229 to i32
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %.preheader..loopexit.loopexit_crit_edge, label %232

; <label>:232:                                    ; preds = %.preheader.52
  call void @__loop_iteration_test___5()
  %scevgep1.52 = getelementptr i8, i8* %scevgep1.51, i64 1
  %scevgep5.52 = getelementptr i8, i8* %scevgep5.51, i64 1
  br i1 true, label %.preheader.53, label %.loopexit.loopexitsplit

.preheader.53:                                    ; preds = %232
  %scevgep2.53 = getelementptr i8, i8* %scevgep1.52, i64 -1
  %scevgep6.53 = getelementptr i8, i8* %scevgep5.52, i64 -1
  call void @unroll_loop(i32 83)
  %233 = load i8, i8* %scevgep6.53, align 1
  store i8 %233, i8* %scevgep2.53, align 1
  %234 = sext i8 %233 to i32
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %.preheader..loopexit.loopexit_crit_edge, label %236

; <label>:236:                                    ; preds = %.preheader.53
  call void @__loop_iteration_test___5()
  %scevgep1.53 = getelementptr i8, i8* %scevgep1.52, i64 1
  %scevgep5.53 = getelementptr i8, i8* %scevgep5.52, i64 1
  br i1 true, label %.preheader.54, label %.loopexit.loopexitsplit

.preheader.54:                                    ; preds = %236
  %scevgep2.54 = getelementptr i8, i8* %scevgep1.53, i64 -1
  %scevgep6.54 = getelementptr i8, i8* %scevgep5.53, i64 -1
  call void @unroll_loop(i32 83)
  %237 = load i8, i8* %scevgep6.54, align 1
  store i8 %237, i8* %scevgep2.54, align 1
  %238 = sext i8 %237 to i32
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %.preheader..loopexit.loopexit_crit_edge, label %240

; <label>:240:                                    ; preds = %.preheader.54
  call void @__loop_iteration_test___5()
  %scevgep1.54 = getelementptr i8, i8* %scevgep1.53, i64 1
  %scevgep5.54 = getelementptr i8, i8* %scevgep5.53, i64 1
  br i1 true, label %.preheader.55, label %.loopexit.loopexitsplit

.preheader.55:                                    ; preds = %240
  %scevgep2.55 = getelementptr i8, i8* %scevgep1.54, i64 -1
  %scevgep6.55 = getelementptr i8, i8* %scevgep5.54, i64 -1
  call void @unroll_loop(i32 83)
  %241 = load i8, i8* %scevgep6.55, align 1
  store i8 %241, i8* %scevgep2.55, align 1
  %242 = sext i8 %241 to i32
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %.preheader..loopexit.loopexit_crit_edge, label %244

; <label>:244:                                    ; preds = %.preheader.55
  call void @__loop_iteration_test___5()
  %scevgep1.55 = getelementptr i8, i8* %scevgep1.54, i64 1
  %scevgep5.55 = getelementptr i8, i8* %scevgep5.54, i64 1
  br i1 true, label %.preheader.56, label %.loopexit.loopexitsplit

.preheader.56:                                    ; preds = %244
  %scevgep2.56 = getelementptr i8, i8* %scevgep1.55, i64 -1
  %scevgep6.56 = getelementptr i8, i8* %scevgep5.55, i64 -1
  call void @unroll_loop(i32 83)
  %245 = load i8, i8* %scevgep6.56, align 1
  store i8 %245, i8* %scevgep2.56, align 1
  %246 = sext i8 %245 to i32
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %.preheader..loopexit.loopexit_crit_edge, label %248

; <label>:248:                                    ; preds = %.preheader.56
  call void @__loop_iteration_test___5()
  %scevgep1.56 = getelementptr i8, i8* %scevgep1.55, i64 1
  %scevgep5.56 = getelementptr i8, i8* %scevgep5.55, i64 1
  br i1 true, label %.preheader.57, label %.loopexit.loopexitsplit

.preheader.57:                                    ; preds = %248
  %scevgep2.57 = getelementptr i8, i8* %scevgep1.56, i64 -1
  %scevgep6.57 = getelementptr i8, i8* %scevgep5.56, i64 -1
  call void @unroll_loop(i32 83)
  %249 = load i8, i8* %scevgep6.57, align 1
  store i8 %249, i8* %scevgep2.57, align 1
  %250 = sext i8 %249 to i32
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %.preheader..loopexit.loopexit_crit_edge, label %252

; <label>:252:                                    ; preds = %.preheader.57
  call void @__loop_iteration_test___5()
  %scevgep1.57 = getelementptr i8, i8* %scevgep1.56, i64 1
  %scevgep5.57 = getelementptr i8, i8* %scevgep5.56, i64 1
  br i1 true, label %.preheader.58, label %.loopexit.loopexitsplit

.preheader.58:                                    ; preds = %252
  %scevgep2.58 = getelementptr i8, i8* %scevgep1.57, i64 -1
  %scevgep6.58 = getelementptr i8, i8* %scevgep5.57, i64 -1
  call void @unroll_loop(i32 83)
  %253 = load i8, i8* %scevgep6.58, align 1
  store i8 %253, i8* %scevgep2.58, align 1
  %254 = sext i8 %253 to i32
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %.preheader..loopexit.loopexit_crit_edge, label %256

; <label>:256:                                    ; preds = %.preheader.58
  call void @__loop_iteration_test___5()
  %scevgep1.58 = getelementptr i8, i8* %scevgep1.57, i64 1
  %scevgep5.58 = getelementptr i8, i8* %scevgep5.57, i64 1
  br i1 true, label %.preheader.59, label %.loopexit.loopexitsplit

.preheader.59:                                    ; preds = %256
  %scevgep2.59 = getelementptr i8, i8* %scevgep1.58, i64 -1
  %scevgep6.59 = getelementptr i8, i8* %scevgep5.58, i64 -1
  call void @unroll_loop(i32 83)
  %257 = load i8, i8* %scevgep6.59, align 1
  store i8 %257, i8* %scevgep2.59, align 1
  %258 = sext i8 %257 to i32
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %.preheader..loopexit.loopexit_crit_edge, label %260

; <label>:260:                                    ; preds = %.preheader.59
  call void @__loop_iteration_test___5()
  %scevgep1.59 = getelementptr i8, i8* %scevgep1.58, i64 1
  %scevgep5.59 = getelementptr i8, i8* %scevgep5.58, i64 1
  br i1 true, label %.preheader.60, label %.loopexit.loopexitsplit

.preheader.60:                                    ; preds = %260
  %scevgep2.60 = getelementptr i8, i8* %scevgep1.59, i64 -1
  %scevgep6.60 = getelementptr i8, i8* %scevgep5.59, i64 -1
  call void @unroll_loop(i32 83)
  %261 = load i8, i8* %scevgep6.60, align 1
  store i8 %261, i8* %scevgep2.60, align 1
  %262 = sext i8 %261 to i32
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %.preheader..loopexit.loopexit_crit_edge, label %264

; <label>:264:                                    ; preds = %.preheader.60
  call void @__loop_iteration_test___5()
  %scevgep1.60 = getelementptr i8, i8* %scevgep1.59, i64 1
  %scevgep5.60 = getelementptr i8, i8* %scevgep5.59, i64 1
  br i1 true, label %.preheader.61, label %.loopexit.loopexitsplit

.preheader.61:                                    ; preds = %264
  %scevgep2.61 = getelementptr i8, i8* %scevgep1.60, i64 -1
  %scevgep6.61 = getelementptr i8, i8* %scevgep5.60, i64 -1
  call void @unroll_loop(i32 83)
  %265 = load i8, i8* %scevgep6.61, align 1
  store i8 %265, i8* %scevgep2.61, align 1
  %266 = sext i8 %265 to i32
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %.preheader..loopexit.loopexit_crit_edge, label %268

; <label>:268:                                    ; preds = %.preheader.61
  call void @__loop_iteration_test___5()
  %scevgep1.61 = getelementptr i8, i8* %scevgep1.60, i64 1
  %scevgep5.61 = getelementptr i8, i8* %scevgep5.60, i64 1
  br i1 true, label %.preheader.62, label %.loopexit.loopexitsplit

.preheader.62:                                    ; preds = %268
  %scevgep2.62 = getelementptr i8, i8* %scevgep1.61, i64 -1
  %scevgep6.62 = getelementptr i8, i8* %scevgep5.61, i64 -1
  call void @unroll_loop(i32 83)
  %269 = load i8, i8* %scevgep6.62, align 1
  store i8 %269, i8* %scevgep2.62, align 1
  %270 = sext i8 %269 to i32
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %.preheader..loopexit.loopexit_crit_edge, label %272

; <label>:272:                                    ; preds = %.preheader.62
  call void @__loop_iteration_test___5()
  %scevgep1.62 = getelementptr i8, i8* %scevgep1.61, i64 1
  %scevgep5.62 = getelementptr i8, i8* %scevgep5.61, i64 1
  br i1 true, label %.preheader.63, label %.loopexit.loopexitsplit

.preheader.63:                                    ; preds = %272
  %scevgep2.63 = getelementptr i8, i8* %scevgep1.62, i64 -1
  %scevgep6.63 = getelementptr i8, i8* %scevgep5.62, i64 -1
  call void @unroll_loop(i32 83)
  %273 = load i8, i8* %scevgep6.63, align 1
  store i8 %273, i8* %scevgep2.63, align 1
  %274 = sext i8 %273 to i32
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %.preheader..loopexit.loopexit_crit_edge, label %276

; <label>:276:                                    ; preds = %.preheader.63
  call void @__loop_iteration_test___5()
  %scevgep1.63 = getelementptr i8, i8* %scevgep1.62, i64 1
  %scevgep5.63 = getelementptr i8, i8* %scevgep5.62, i64 1
  br i1 true, label %.preheader.64, label %.loopexit.loopexitsplit

.preheader.64:                                    ; preds = %276
  %scevgep2.64 = getelementptr i8, i8* %scevgep1.63, i64 -1
  %scevgep6.64 = getelementptr i8, i8* %scevgep5.63, i64 -1
  call void @unroll_loop(i32 83)
  %277 = load i8, i8* %scevgep6.64, align 1
  store i8 %277, i8* %scevgep2.64, align 1
  %278 = sext i8 %277 to i32
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %.preheader..loopexit.loopexit_crit_edge, label %280

; <label>:280:                                    ; preds = %.preheader.64
  call void @__loop_iteration_test___5()
  %scevgep1.64 = getelementptr i8, i8* %scevgep1.63, i64 1
  %scevgep5.64 = getelementptr i8, i8* %scevgep5.63, i64 1
  br i1 true, label %.preheader.65, label %.loopexit.loopexitsplit

.preheader.65:                                    ; preds = %280
  %scevgep2.65 = getelementptr i8, i8* %scevgep1.64, i64 -1
  %scevgep6.65 = getelementptr i8, i8* %scevgep5.64, i64 -1
  call void @unroll_loop(i32 83)
  %281 = load i8, i8* %scevgep6.65, align 1
  store i8 %281, i8* %scevgep2.65, align 1
  %282 = sext i8 %281 to i32
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %.preheader..loopexit.loopexit_crit_edge, label %284

; <label>:284:                                    ; preds = %.preheader.65
  call void @__loop_iteration_test___5()
  %scevgep1.65 = getelementptr i8, i8* %scevgep1.64, i64 1
  %scevgep5.65 = getelementptr i8, i8* %scevgep5.64, i64 1
  br i1 true, label %.preheader.66, label %.loopexit.loopexitsplit

.preheader.66:                                    ; preds = %284
  %scevgep2.66 = getelementptr i8, i8* %scevgep1.65, i64 -1
  %scevgep6.66 = getelementptr i8, i8* %scevgep5.65, i64 -1
  call void @unroll_loop(i32 83)
  %285 = load i8, i8* %scevgep6.66, align 1
  store i8 %285, i8* %scevgep2.66, align 1
  %286 = sext i8 %285 to i32
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %.preheader..loopexit.loopexit_crit_edge, label %288

; <label>:288:                                    ; preds = %.preheader.66
  call void @__loop_iteration_test___5()
  %scevgep1.66 = getelementptr i8, i8* %scevgep1.65, i64 1
  %scevgep5.66 = getelementptr i8, i8* %scevgep5.65, i64 1
  br i1 true, label %.preheader.67, label %.loopexit.loopexitsplit

.preheader.67:                                    ; preds = %288
  %scevgep2.67 = getelementptr i8, i8* %scevgep1.66, i64 -1
  %scevgep6.67 = getelementptr i8, i8* %scevgep5.66, i64 -1
  call void @unroll_loop(i32 83)
  %289 = load i8, i8* %scevgep6.67, align 1
  store i8 %289, i8* %scevgep2.67, align 1
  %290 = sext i8 %289 to i32
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %.preheader..loopexit.loopexit_crit_edge, label %292

; <label>:292:                                    ; preds = %.preheader.67
  call void @__loop_iteration_test___5()
  %scevgep1.67 = getelementptr i8, i8* %scevgep1.66, i64 1
  %scevgep5.67 = getelementptr i8, i8* %scevgep5.66, i64 1
  br i1 true, label %.preheader.68, label %.loopexit.loopexitsplit

.preheader.68:                                    ; preds = %292
  %scevgep2.68 = getelementptr i8, i8* %scevgep1.67, i64 -1
  %scevgep6.68 = getelementptr i8, i8* %scevgep5.67, i64 -1
  call void @unroll_loop(i32 83)
  %293 = load i8, i8* %scevgep6.68, align 1
  store i8 %293, i8* %scevgep2.68, align 1
  %294 = sext i8 %293 to i32
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %.preheader..loopexit.loopexit_crit_edge, label %296

; <label>:296:                                    ; preds = %.preheader.68
  call void @__loop_iteration_test___5()
  %scevgep1.68 = getelementptr i8, i8* %scevgep1.67, i64 1
  %scevgep5.68 = getelementptr i8, i8* %scevgep5.67, i64 1
  br i1 true, label %.preheader.69, label %.loopexit.loopexitsplit

.preheader.69:                                    ; preds = %296
  %scevgep2.69 = getelementptr i8, i8* %scevgep1.68, i64 -1
  %scevgep6.69 = getelementptr i8, i8* %scevgep5.68, i64 -1
  call void @unroll_loop(i32 83)
  %297 = load i8, i8* %scevgep6.69, align 1
  store i8 %297, i8* %scevgep2.69, align 1
  %298 = sext i8 %297 to i32
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %.preheader..loopexit.loopexit_crit_edge, label %300

; <label>:300:                                    ; preds = %.preheader.69
  call void @__loop_iteration_test___5()
  %scevgep1.69 = getelementptr i8, i8* %scevgep1.68, i64 1
  %scevgep5.69 = getelementptr i8, i8* %scevgep5.68, i64 1
  br i1 true, label %.preheader.70, label %.loopexit.loopexitsplit

.preheader.70:                                    ; preds = %300
  %scevgep2.70 = getelementptr i8, i8* %scevgep1.69, i64 -1
  %scevgep6.70 = getelementptr i8, i8* %scevgep5.69, i64 -1
  call void @unroll_loop(i32 83)
  %301 = load i8, i8* %scevgep6.70, align 1
  store i8 %301, i8* %scevgep2.70, align 1
  %302 = sext i8 %301 to i32
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %.preheader..loopexit.loopexit_crit_edge, label %304

; <label>:304:                                    ; preds = %.preheader.70
  call void @__loop_iteration_test___5()
  %scevgep1.70 = getelementptr i8, i8* %scevgep1.69, i64 1
  %scevgep5.70 = getelementptr i8, i8* %scevgep5.69, i64 1
  br i1 true, label %.preheader.71, label %.loopexit.loopexitsplit

.preheader.71:                                    ; preds = %304
  %scevgep2.71 = getelementptr i8, i8* %scevgep1.70, i64 -1
  %scevgep6.71 = getelementptr i8, i8* %scevgep5.70, i64 -1
  call void @unroll_loop(i32 83)
  %305 = load i8, i8* %scevgep6.71, align 1
  store i8 %305, i8* %scevgep2.71, align 1
  %306 = sext i8 %305 to i32
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %.preheader..loopexit.loopexit_crit_edge, label %308

; <label>:308:                                    ; preds = %.preheader.71
  call void @__loop_iteration_test___5()
  %scevgep1.71 = getelementptr i8, i8* %scevgep1.70, i64 1
  %scevgep5.71 = getelementptr i8, i8* %scevgep5.70, i64 1
  br i1 true, label %.preheader.72, label %.loopexit.loopexitsplit

.preheader.72:                                    ; preds = %308
  %scevgep2.72 = getelementptr i8, i8* %scevgep1.71, i64 -1
  %scevgep6.72 = getelementptr i8, i8* %scevgep5.71, i64 -1
  call void @unroll_loop(i32 83)
  %309 = load i8, i8* %scevgep6.72, align 1
  store i8 %309, i8* %scevgep2.72, align 1
  %310 = sext i8 %309 to i32
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %.preheader..loopexit.loopexit_crit_edge, label %312

; <label>:312:                                    ; preds = %.preheader.72
  call void @__loop_iteration_test___5()
  %scevgep1.72 = getelementptr i8, i8* %scevgep1.71, i64 1
  %scevgep5.72 = getelementptr i8, i8* %scevgep5.71, i64 1
  br i1 true, label %.preheader.73, label %.loopexit.loopexitsplit

.preheader.73:                                    ; preds = %312
  %scevgep2.73 = getelementptr i8, i8* %scevgep1.72, i64 -1
  %scevgep6.73 = getelementptr i8, i8* %scevgep5.72, i64 -1
  call void @unroll_loop(i32 83)
  %313 = load i8, i8* %scevgep6.73, align 1
  store i8 %313, i8* %scevgep2.73, align 1
  %314 = sext i8 %313 to i32
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %.preheader..loopexit.loopexit_crit_edge, label %316

; <label>:316:                                    ; preds = %.preheader.73
  call void @__loop_iteration_test___5()
  %scevgep1.73 = getelementptr i8, i8* %scevgep1.72, i64 1
  %scevgep5.73 = getelementptr i8, i8* %scevgep5.72, i64 1
  br i1 true, label %.preheader.74, label %.loopexit.loopexitsplit

.preheader.74:                                    ; preds = %316
  %scevgep2.74 = getelementptr i8, i8* %scevgep1.73, i64 -1
  %scevgep6.74 = getelementptr i8, i8* %scevgep5.73, i64 -1
  call void @unroll_loop(i32 83)
  %317 = load i8, i8* %scevgep6.74, align 1
  store i8 %317, i8* %scevgep2.74, align 1
  %318 = sext i8 %317 to i32
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %.preheader..loopexit.loopexit_crit_edge, label %320

; <label>:320:                                    ; preds = %.preheader.74
  call void @__loop_iteration_test___5()
  %scevgep1.74 = getelementptr i8, i8* %scevgep1.73, i64 1
  %scevgep5.74 = getelementptr i8, i8* %scevgep5.73, i64 1
  br i1 true, label %.preheader.75, label %.loopexit.loopexitsplit

.preheader.75:                                    ; preds = %320
  %scevgep2.75 = getelementptr i8, i8* %scevgep1.74, i64 -1
  %scevgep6.75 = getelementptr i8, i8* %scevgep5.74, i64 -1
  call void @unroll_loop(i32 83)
  %321 = load i8, i8* %scevgep6.75, align 1
  store i8 %321, i8* %scevgep2.75, align 1
  %322 = sext i8 %321 to i32
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %.preheader..loopexit.loopexit_crit_edge, label %324

; <label>:324:                                    ; preds = %.preheader.75
  call void @__loop_iteration_test___5()
  %scevgep1.75 = getelementptr i8, i8* %scevgep1.74, i64 1
  %scevgep5.75 = getelementptr i8, i8* %scevgep5.74, i64 1
  br i1 true, label %.preheader.76, label %.loopexit.loopexitsplit

.preheader.76:                                    ; preds = %324
  %scevgep2.76 = getelementptr i8, i8* %scevgep1.75, i64 -1
  %scevgep6.76 = getelementptr i8, i8* %scevgep5.75, i64 -1
  call void @unroll_loop(i32 83)
  %325 = load i8, i8* %scevgep6.76, align 1
  store i8 %325, i8* %scevgep2.76, align 1
  %326 = sext i8 %325 to i32
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %.preheader..loopexit.loopexit_crit_edge, label %328

; <label>:328:                                    ; preds = %.preheader.76
  call void @__loop_iteration_test___5()
  %scevgep1.76 = getelementptr i8, i8* %scevgep1.75, i64 1
  %scevgep5.76 = getelementptr i8, i8* %scevgep5.75, i64 1
  br i1 true, label %.preheader.77, label %.loopexit.loopexitsplit

.preheader.77:                                    ; preds = %328
  %scevgep2.77 = getelementptr i8, i8* %scevgep1.76, i64 -1
  %scevgep6.77 = getelementptr i8, i8* %scevgep5.76, i64 -1
  call void @unroll_loop(i32 83)
  %329 = load i8, i8* %scevgep6.77, align 1
  store i8 %329, i8* %scevgep2.77, align 1
  %330 = sext i8 %329 to i32
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %.preheader..loopexit.loopexit_crit_edge, label %332

; <label>:332:                                    ; preds = %.preheader.77
  call void @__loop_iteration_test___5()
  %scevgep1.77 = getelementptr i8, i8* %scevgep1.76, i64 1
  %scevgep5.77 = getelementptr i8, i8* %scevgep5.76, i64 1
  br i1 true, label %.preheader.78, label %.loopexit.loopexitsplit

.preheader.78:                                    ; preds = %332
  %scevgep2.78 = getelementptr i8, i8* %scevgep1.77, i64 -1
  %scevgep6.78 = getelementptr i8, i8* %scevgep5.77, i64 -1
  call void @unroll_loop(i32 83)
  %333 = load i8, i8* %scevgep6.78, align 1
  store i8 %333, i8* %scevgep2.78, align 1
  %334 = sext i8 %333 to i32
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %.preheader..loopexit.loopexit_crit_edge, label %336

; <label>:336:                                    ; preds = %.preheader.78
  call void @__loop_iteration_test___5()
  %scevgep1.78 = getelementptr i8, i8* %scevgep1.77, i64 1
  %scevgep5.78 = getelementptr i8, i8* %scevgep5.77, i64 1
  br i1 true, label %.preheader.79, label %.loopexit.loopexitsplit

.preheader.79:                                    ; preds = %336
  %scevgep2.79 = getelementptr i8, i8* %scevgep1.78, i64 -1
  %scevgep6.79 = getelementptr i8, i8* %scevgep5.78, i64 -1
  call void @unroll_loop(i32 83)
  %337 = load i8, i8* %scevgep6.79, align 1
  store i8 %337, i8* %scevgep2.79, align 1
  %338 = sext i8 %337 to i32
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %.preheader..loopexit.loopexit_crit_edge, label %340

; <label>:340:                                    ; preds = %.preheader.79
  call void @__loop_iteration_test___5()
  %scevgep1.79 = getelementptr i8, i8* %scevgep1.78, i64 1
  %scevgep5.79 = getelementptr i8, i8* %scevgep5.78, i64 1
  br i1 true, label %.preheader.80, label %.loopexit.loopexitsplit

.preheader.80:                                    ; preds = %340
  %scevgep2.80 = getelementptr i8, i8* %scevgep1.79, i64 -1
  %scevgep6.80 = getelementptr i8, i8* %scevgep5.79, i64 -1
  call void @unroll_loop(i32 83)
  %341 = load i8, i8* %scevgep6.80, align 1
  store i8 %341, i8* %scevgep2.80, align 1
  %342 = sext i8 %341 to i32
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %.preheader..loopexit.loopexit_crit_edge, label %344

; <label>:344:                                    ; preds = %.preheader.80
  call void @__loop_iteration_test___5()
  %scevgep1.80 = getelementptr i8, i8* %scevgep1.79, i64 1
  %scevgep5.80 = getelementptr i8, i8* %scevgep5.79, i64 1
  br i1 true, label %.preheader.81, label %.loopexit.loopexitsplit

.preheader.81:                                    ; preds = %344
  %scevgep2.81 = getelementptr i8, i8* %scevgep1.80, i64 -1
  %scevgep6.81 = getelementptr i8, i8* %scevgep5.80, i64 -1
  call void @unroll_loop(i32 83)
  %345 = load i8, i8* %scevgep6.81, align 1
  store i8 %345, i8* %scevgep2.81, align 1
  %346 = sext i8 %345 to i32
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %.preheader..loopexit.loopexit_crit_edge, label %348

; <label>:348:                                    ; preds = %.preheader.81
  call void @__loop_iteration_test___5()
  %scevgep1.81 = getelementptr i8, i8* %scevgep1.80, i64 1
  %scevgep5.81 = getelementptr i8, i8* %scevgep5.80, i64 1
  br i1 true, label %.preheader.82, label %.loopexit.loopexitsplit

.preheader.82:                                    ; preds = %348
  %scevgep2.82 = getelementptr i8, i8* %scevgep1.81, i64 -1
  %scevgep6.82 = getelementptr i8, i8* %scevgep5.81, i64 -1
  call void @unroll_loop(i32 83)
  %349 = load i8, i8* %scevgep6.82, align 1
  store i8 %349, i8* %scevgep2.82, align 1
  %350 = sext i8 %349 to i32
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %.preheader..loopexit.loopexit_crit_edge, label %352

; <label>:352:                                    ; preds = %.preheader.82
  call void @__loop_iteration_test___5()
  %scevgep1.82 = getelementptr i8, i8* %scevgep1.81, i64 1
  %scevgep5.82 = getelementptr i8, i8* %scevgep5.81, i64 1
  br i1 true, label %.preheader.83, label %.loopexit.loopexitsplit

.preheader.83:                                    ; preds = %352
  %scevgep2.83 = getelementptr i8, i8* %scevgep1.82, i64 -1
  %scevgep6.83 = getelementptr i8, i8* %scevgep5.82, i64 -1
  call void @unroll_loop(i32 83)
  %353 = load i8, i8* %scevgep6.83, align 1
  store i8 %353, i8* %scevgep2.83, align 1
  %354 = sext i8 %353 to i32
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %.preheader..loopexit.loopexit_crit_edge, label %356

; <label>:356:                                    ; preds = %.preheader.83
  call void @__loop_iteration_test___5()
  %scevgep1.83 = getelementptr i8, i8* %scevgep1.82, i64 1
  %scevgep5.83 = getelementptr i8, i8* %scevgep5.82, i64 1
  br i1 true, label %.preheader.84, label %.loopexit.loopexitsplit

.preheader.84:                                    ; preds = %356
  %scevgep2.84 = getelementptr i8, i8* %scevgep1.83, i64 -1
  %scevgep6.84 = getelementptr i8, i8* %scevgep5.83, i64 -1
  call void @unroll_loop(i32 83)
  %357 = load i8, i8* %scevgep6.84, align 1
  store i8 %357, i8* %scevgep2.84, align 1
  %358 = sext i8 %357 to i32
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %.preheader..loopexit.loopexit_crit_edge, label %360

; <label>:360:                                    ; preds = %.preheader.84
  call void @__loop_iteration_test___5()
  %scevgep1.84 = getelementptr i8, i8* %scevgep1.83, i64 1
  %scevgep5.84 = getelementptr i8, i8* %scevgep5.83, i64 1
  br i1 true, label %.preheader.85, label %.loopexit.loopexitsplit

.preheader.85:                                    ; preds = %360
  %scevgep2.85 = getelementptr i8, i8* %scevgep1.84, i64 -1
  %scevgep6.85 = getelementptr i8, i8* %scevgep5.84, i64 -1
  call void @unroll_loop(i32 83)
  %361 = load i8, i8* %scevgep6.85, align 1
  store i8 %361, i8* %scevgep2.85, align 1
  %362 = sext i8 %361 to i32
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %.preheader..loopexit.loopexit_crit_edge, label %364

; <label>:364:                                    ; preds = %.preheader.85
  call void @__loop_iteration_test___5()
  %scevgep1.85 = getelementptr i8, i8* %scevgep1.84, i64 1
  %scevgep5.85 = getelementptr i8, i8* %scevgep5.84, i64 1
  br i1 true, label %.preheader.86, label %.loopexit.loopexitsplit

.preheader.86:                                    ; preds = %364
  %scevgep2.86 = getelementptr i8, i8* %scevgep1.85, i64 -1
  %scevgep6.86 = getelementptr i8, i8* %scevgep5.85, i64 -1
  call void @unroll_loop(i32 83)
  %365 = load i8, i8* %scevgep6.86, align 1
  store i8 %365, i8* %scevgep2.86, align 1
  %366 = sext i8 %365 to i32
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %.preheader..loopexit.loopexit_crit_edge, label %368

; <label>:368:                                    ; preds = %.preheader.86
  call void @__loop_iteration_test___5()
  %scevgep1.86 = getelementptr i8, i8* %scevgep1.85, i64 1
  %scevgep5.86 = getelementptr i8, i8* %scevgep5.85, i64 1
  br i1 true, label %.preheader.87, label %.loopexit.loopexitsplit

.preheader.87:                                    ; preds = %368
  %scevgep2.87 = getelementptr i8, i8* %scevgep1.86, i64 -1
  %scevgep6.87 = getelementptr i8, i8* %scevgep5.86, i64 -1
  call void @unroll_loop(i32 83)
  %369 = load i8, i8* %scevgep6.87, align 1
  store i8 %369, i8* %scevgep2.87, align 1
  %370 = sext i8 %369 to i32
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %.preheader..loopexit.loopexit_crit_edge, label %372

; <label>:372:                                    ; preds = %.preheader.87
  call void @__loop_iteration_test___5()
  %scevgep1.87 = getelementptr i8, i8* %scevgep1.86, i64 1
  %scevgep5.87 = getelementptr i8, i8* %scevgep5.86, i64 1
  br i1 true, label %.preheader.88, label %.loopexit.loopexitsplit

.preheader.88:                                    ; preds = %372
  %scevgep2.88 = getelementptr i8, i8* %scevgep1.87, i64 -1
  %scevgep6.88 = getelementptr i8, i8* %scevgep5.87, i64 -1
  call void @unroll_loop(i32 83)
  %373 = load i8, i8* %scevgep6.88, align 1
  store i8 %373, i8* %scevgep2.88, align 1
  %374 = sext i8 %373 to i32
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %.preheader..loopexit.loopexit_crit_edge, label %376

; <label>:376:                                    ; preds = %.preheader.88
  call void @__loop_iteration_test___5()
  %scevgep1.88 = getelementptr i8, i8* %scevgep1.87, i64 1
  %scevgep5.88 = getelementptr i8, i8* %scevgep5.87, i64 1
  br i1 true, label %.preheader.89, label %.loopexit.loopexitsplit

.preheader.89:                                    ; preds = %376
  %scevgep2.89 = getelementptr i8, i8* %scevgep1.88, i64 -1
  %scevgep6.89 = getelementptr i8, i8* %scevgep5.88, i64 -1
  call void @unroll_loop(i32 83)
  %377 = load i8, i8* %scevgep6.89, align 1
  store i8 %377, i8* %scevgep2.89, align 1
  %378 = sext i8 %377 to i32
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %.preheader..loopexit.loopexit_crit_edge, label %380

; <label>:380:                                    ; preds = %.preheader.89
  call void @__loop_iteration_test___5()
  %scevgep1.89 = getelementptr i8, i8* %scevgep1.88, i64 1
  %scevgep5.89 = getelementptr i8, i8* %scevgep5.88, i64 1
  br i1 true, label %.preheader.90, label %.loopexit.loopexitsplit

.preheader.90:                                    ; preds = %380
  %scevgep2.90 = getelementptr i8, i8* %scevgep1.89, i64 -1
  %scevgep6.90 = getelementptr i8, i8* %scevgep5.89, i64 -1
  call void @unroll_loop(i32 83)
  %381 = load i8, i8* %scevgep6.90, align 1
  store i8 %381, i8* %scevgep2.90, align 1
  %382 = sext i8 %381 to i32
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %.preheader..loopexit.loopexit_crit_edge, label %384

; <label>:384:                                    ; preds = %.preheader.90
  call void @__loop_iteration_test___5()
  %scevgep1.90 = getelementptr i8, i8* %scevgep1.89, i64 1
  %scevgep5.90 = getelementptr i8, i8* %scevgep5.89, i64 1
  br i1 true, label %.preheader.91, label %.loopexit.loopexitsplit

.preheader.91:                                    ; preds = %384
  %scevgep2.91 = getelementptr i8, i8* %scevgep1.90, i64 -1
  %scevgep6.91 = getelementptr i8, i8* %scevgep5.90, i64 -1
  call void @unroll_loop(i32 83)
  %385 = load i8, i8* %scevgep6.91, align 1
  store i8 %385, i8* %scevgep2.91, align 1
  %386 = sext i8 %385 to i32
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %.preheader..loopexit.loopexit_crit_edge, label %388

; <label>:388:                                    ; preds = %.preheader.91
  call void @__loop_iteration_test___5()
  %scevgep1.91 = getelementptr i8, i8* %scevgep1.90, i64 1
  %scevgep5.91 = getelementptr i8, i8* %scevgep5.90, i64 1
  br i1 true, label %.preheader.92, label %.loopexit.loopexitsplit

.preheader.92:                                    ; preds = %388
  %scevgep2.92 = getelementptr i8, i8* %scevgep1.91, i64 -1
  %scevgep6.92 = getelementptr i8, i8* %scevgep5.91, i64 -1
  call void @unroll_loop(i32 83)
  %389 = load i8, i8* %scevgep6.92, align 1
  store i8 %389, i8* %scevgep2.92, align 1
  %390 = sext i8 %389 to i32
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %.preheader..loopexit.loopexit_crit_edge, label %392

; <label>:392:                                    ; preds = %.preheader.92
  call void @__loop_iteration_test___5()
  %scevgep1.92 = getelementptr i8, i8* %scevgep1.91, i64 1
  %scevgep5.92 = getelementptr i8, i8* %scevgep5.91, i64 1
  br i1 true, label %.preheader.93, label %.loopexit.loopexitsplit

.preheader.93:                                    ; preds = %392
  %scevgep2.93 = getelementptr i8, i8* %scevgep1.92, i64 -1
  %scevgep6.93 = getelementptr i8, i8* %scevgep5.92, i64 -1
  call void @unroll_loop(i32 83)
  %393 = load i8, i8* %scevgep6.93, align 1
  store i8 %393, i8* %scevgep2.93, align 1
  %394 = sext i8 %393 to i32
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %.preheader..loopexit.loopexit_crit_edge, label %396

; <label>:396:                                    ; preds = %.preheader.93
  call void @__loop_iteration_test___5()
  %scevgep1.93 = getelementptr i8, i8* %scevgep1.92, i64 1
  %scevgep5.93 = getelementptr i8, i8* %scevgep5.92, i64 1
  br i1 true, label %.preheader.94, label %.loopexit.loopexitsplit

.preheader.94:                                    ; preds = %396
  %scevgep2.94 = getelementptr i8, i8* %scevgep1.93, i64 -1
  %scevgep6.94 = getelementptr i8, i8* %scevgep5.93, i64 -1
  call void @unroll_loop(i32 83)
  %397 = load i8, i8* %scevgep6.94, align 1
  store i8 %397, i8* %scevgep2.94, align 1
  %398 = sext i8 %397 to i32
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %.preheader..loopexit.loopexit_crit_edge, label %400

; <label>:400:                                    ; preds = %.preheader.94
  call void @__loop_iteration_test___5()
  %scevgep1.94 = getelementptr i8, i8* %scevgep1.93, i64 1
  %scevgep5.94 = getelementptr i8, i8* %scevgep5.93, i64 1
  br i1 true, label %.preheader.95, label %.loopexit.loopexitsplit

.preheader.95:                                    ; preds = %400
  %scevgep2.95 = getelementptr i8, i8* %scevgep1.94, i64 -1
  %scevgep6.95 = getelementptr i8, i8* %scevgep5.94, i64 -1
  call void @unroll_loop(i32 83)
  %401 = load i8, i8* %scevgep6.95, align 1
  store i8 %401, i8* %scevgep2.95, align 1
  %402 = sext i8 %401 to i32
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %.preheader..loopexit.loopexit_crit_edge, label %404

; <label>:404:                                    ; preds = %.preheader.95
  call void @__loop_iteration_test___5()
  %scevgep1.95 = getelementptr i8, i8* %scevgep1.94, i64 1
  %scevgep5.95 = getelementptr i8, i8* %scevgep5.94, i64 1
  br i1 true, label %.preheader.96, label %.loopexit.loopexitsplit

.preheader.96:                                    ; preds = %404
  %scevgep2.96 = getelementptr i8, i8* %scevgep1.95, i64 -1
  %scevgep6.96 = getelementptr i8, i8* %scevgep5.95, i64 -1
  call void @unroll_loop(i32 83)
  %405 = load i8, i8* %scevgep6.96, align 1
  store i8 %405, i8* %scevgep2.96, align 1
  %406 = sext i8 %405 to i32
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %.preheader..loopexit.loopexit_crit_edge, label %408

; <label>:408:                                    ; preds = %.preheader.96
  call void @__loop_iteration_test___5()
  %scevgep1.96 = getelementptr i8, i8* %scevgep1.95, i64 1
  %scevgep5.96 = getelementptr i8, i8* %scevgep5.95, i64 1
  br i1 true, label %.preheader.97, label %.loopexit.loopexitsplit

.preheader.97:                                    ; preds = %408
  %scevgep2.97 = getelementptr i8, i8* %scevgep1.96, i64 -1
  %scevgep6.97 = getelementptr i8, i8* %scevgep5.96, i64 -1
  call void @unroll_loop(i32 83)
  %409 = load i8, i8* %scevgep6.97, align 1
  store i8 %409, i8* %scevgep2.97, align 1
  %410 = sext i8 %409 to i32
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %.preheader..loopexit.loopexit_crit_edge, label %412

; <label>:412:                                    ; preds = %.preheader.97
  call void @__loop_iteration_test___5()
  %scevgep1.97 = getelementptr i8, i8* %scevgep1.96, i64 1
  %scevgep5.97 = getelementptr i8, i8* %scevgep5.96, i64 1
  br i1 true, label %.preheader.98, label %.loopexit.loopexitsplit

.preheader.98:                                    ; preds = %412
  %scevgep2.98 = getelementptr i8, i8* %scevgep1.97, i64 -1
  %scevgep6.98 = getelementptr i8, i8* %scevgep5.97, i64 -1
  call void @unroll_loop(i32 83)
  %413 = load i8, i8* %scevgep6.98, align 1
  store i8 %413, i8* %scevgep2.98, align 1
  %414 = sext i8 %413 to i32
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %.preheader..loopexit.loopexit_crit_edge, label %416

; <label>:416:                                    ; preds = %.preheader.98
  call void @__loop_iteration_test___5()
  %scevgep1.98 = getelementptr i8, i8* %scevgep1.97, i64 1
  %scevgep5.98 = getelementptr i8, i8* %scevgep5.97, i64 1
  br i1 true, label %.preheader.99, label %.loopexit.loopexitsplit

.preheader.99:                                    ; preds = %416
  %scevgep2.99 = getelementptr i8, i8* %scevgep1.98, i64 -1
  %scevgep6.99 = getelementptr i8, i8* %scevgep5.98, i64 -1
  call void @unroll_loop(i32 83)
  %417 = load i8, i8* %scevgep6.99, align 1
  store i8 %417, i8* %scevgep2.99, align 1
  %418 = sext i8 %417 to i32
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %.preheader..loopexit.loopexit_crit_edge, label %420

; <label>:420:                                    ; preds = %.preheader.99
  call void @__loop_iteration_test___5()
  %scevgep1.99 = getelementptr i8, i8* %scevgep1.98, i64 1
  %scevgep5.99 = getelementptr i8, i8* %scevgep5.98, i64 1
  br i1 true, label %.preheader.100, label %.loopexit.loopexitsplit

.preheader.100:                                   ; preds = %420
  %scevgep2.100 = getelementptr i8, i8* %scevgep1.99, i64 -1
  %scevgep6.100 = getelementptr i8, i8* %scevgep5.99, i64 -1
  call void @unroll_loop(i32 83)
  %421 = load i8, i8* %scevgep6.100, align 1
  store i8 %421, i8* %scevgep2.100, align 1
  %422 = sext i8 %421 to i32
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %.preheader..loopexit.loopexit_crit_edge, label %424

; <label>:424:                                    ; preds = %.preheader.100
  call void @__loop_iteration_test___5()
  %scevgep1.100 = getelementptr i8, i8* %scevgep1.99, i64 1
  %scevgep5.100 = getelementptr i8, i8* %scevgep5.99, i64 1
  br i1 true, label %.preheader.101, label %.loopexit.loopexitsplit

.preheader.101:                                   ; preds = %424
  %scevgep2.101 = getelementptr i8, i8* %scevgep1.100, i64 -1
  %scevgep6.101 = getelementptr i8, i8* %scevgep5.100, i64 -1
  call void @unroll_loop(i32 83)
  %425 = load i8, i8* %scevgep6.101, align 1
  store i8 %425, i8* %scevgep2.101, align 1
  %426 = sext i8 %425 to i32
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %.preheader..loopexit.loopexit_crit_edge, label %428

; <label>:428:                                    ; preds = %.preheader.101
  call void @__loop_iteration_test___5()
  %scevgep1.101 = getelementptr i8, i8* %scevgep1.100, i64 1
  %scevgep5.101 = getelementptr i8, i8* %scevgep5.100, i64 1
  br i1 true, label %.preheader.102, label %.loopexit.loopexitsplit

.preheader.102:                                   ; preds = %428
  %scevgep2.102 = getelementptr i8, i8* %scevgep1.101, i64 -1
  %scevgep6.102 = getelementptr i8, i8* %scevgep5.101, i64 -1
  call void @unroll_loop(i32 83)
  %429 = load i8, i8* %scevgep6.102, align 1
  store i8 %429, i8* %scevgep2.102, align 1
  %430 = sext i8 %429 to i32
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %.preheader..loopexit.loopexit_crit_edge, label %432

; <label>:432:                                    ; preds = %.preheader.102
  call void @__loop_iteration_test___5()
  %scevgep1.102 = getelementptr i8, i8* %scevgep1.101, i64 1
  %scevgep5.102 = getelementptr i8, i8* %scevgep5.101, i64 1
  br i1 true, label %.preheader.103, label %.loopexit.loopexitsplit

.preheader.103:                                   ; preds = %432
  %scevgep2.103 = getelementptr i8, i8* %scevgep1.102, i64 -1
  %scevgep6.103 = getelementptr i8, i8* %scevgep5.102, i64 -1
  call void @unroll_loop(i32 83)
  %433 = load i8, i8* %scevgep6.103, align 1
  store i8 %433, i8* %scevgep2.103, align 1
  %434 = sext i8 %433 to i32
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %.preheader..loopexit.loopexit_crit_edge, label %436

; <label>:436:                                    ; preds = %.preheader.103
  call void @__loop_iteration_test___5()
  %scevgep1.103 = getelementptr i8, i8* %scevgep1.102, i64 1
  %scevgep5.103 = getelementptr i8, i8* %scevgep5.102, i64 1
  br i1 true, label %.preheader.104, label %.loopexit.loopexitsplit

.preheader.104:                                   ; preds = %436
  %scevgep2.104 = getelementptr i8, i8* %scevgep1.103, i64 -1
  %scevgep6.104 = getelementptr i8, i8* %scevgep5.103, i64 -1
  call void @unroll_loop(i32 83)
  %437 = load i8, i8* %scevgep6.104, align 1
  store i8 %437, i8* %scevgep2.104, align 1
  %438 = sext i8 %437 to i32
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %.preheader..loopexit.loopexit_crit_edge, label %440

; <label>:440:                                    ; preds = %.preheader.104
  call void @__loop_iteration_test___5()
  %scevgep1.104 = getelementptr i8, i8* %scevgep1.103, i64 1
  %scevgep5.104 = getelementptr i8, i8* %scevgep5.103, i64 1
  br i1 true, label %.preheader.105, label %.loopexit.loopexitsplit

.preheader.105:                                   ; preds = %440
  %scevgep2.105 = getelementptr i8, i8* %scevgep1.104, i64 -1
  %scevgep6.105 = getelementptr i8, i8* %scevgep5.104, i64 -1
  call void @unroll_loop(i32 83)
  %441 = load i8, i8* %scevgep6.105, align 1
  store i8 %441, i8* %scevgep2.105, align 1
  %442 = sext i8 %441 to i32
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %.preheader..loopexit.loopexit_crit_edge, label %444

; <label>:444:                                    ; preds = %.preheader.105
  call void @__loop_iteration_test___5()
  %scevgep1.105 = getelementptr i8, i8* %scevgep1.104, i64 1
  %scevgep5.105 = getelementptr i8, i8* %scevgep5.104, i64 1
  br i1 true, label %.preheader.106, label %.loopexit.loopexitsplit

.preheader.106:                                   ; preds = %444
  %scevgep2.106 = getelementptr i8, i8* %scevgep1.105, i64 -1
  %scevgep6.106 = getelementptr i8, i8* %scevgep5.105, i64 -1
  call void @unroll_loop(i32 83)
  %445 = load i8, i8* %scevgep6.106, align 1
  store i8 %445, i8* %scevgep2.106, align 1
  %446 = sext i8 %445 to i32
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %.preheader..loopexit.loopexit_crit_edge, label %448

; <label>:448:                                    ; preds = %.preheader.106
  call void @__loop_iteration_test___5()
  %scevgep1.106 = getelementptr i8, i8* %scevgep1.105, i64 1
  %scevgep5.106 = getelementptr i8, i8* %scevgep5.105, i64 1
  br i1 true, label %.preheader.107, label %.loopexit.loopexitsplit

.preheader.107:                                   ; preds = %448
  %scevgep2.107 = getelementptr i8, i8* %scevgep1.106, i64 -1
  %scevgep6.107 = getelementptr i8, i8* %scevgep5.106, i64 -1
  call void @unroll_loop(i32 83)
  %449 = load i8, i8* %scevgep6.107, align 1
  store i8 %449, i8* %scevgep2.107, align 1
  %450 = sext i8 %449 to i32
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %.preheader..loopexit.loopexit_crit_edge, label %452

; <label>:452:                                    ; preds = %.preheader.107
  call void @__loop_iteration_test___5()
  %scevgep1.107 = getelementptr i8, i8* %scevgep1.106, i64 1
  %scevgep5.107 = getelementptr i8, i8* %scevgep5.106, i64 1
  br i1 true, label %.preheader.108, label %.loopexit.loopexitsplit

.preheader.108:                                   ; preds = %452
  %scevgep2.108 = getelementptr i8, i8* %scevgep1.107, i64 -1
  %scevgep6.108 = getelementptr i8, i8* %scevgep5.107, i64 -1
  call void @unroll_loop(i32 83)
  %453 = load i8, i8* %scevgep6.108, align 1
  store i8 %453, i8* %scevgep2.108, align 1
  %454 = sext i8 %453 to i32
  %455 = icmp eq i32 %454, 0
  br i1 %455, label %.preheader..loopexit.loopexit_crit_edge, label %456

; <label>:456:                                    ; preds = %.preheader.108
  call void @__loop_iteration_test___5()
  %scevgep1.108 = getelementptr i8, i8* %scevgep1.107, i64 1
  %scevgep5.108 = getelementptr i8, i8* %scevgep5.107, i64 1
  br i1 true, label %.preheader.109, label %.loopexit.loopexitsplit

.preheader.109:                                   ; preds = %456
  %scevgep2.109 = getelementptr i8, i8* %scevgep1.108, i64 -1
  %scevgep6.109 = getelementptr i8, i8* %scevgep5.108, i64 -1
  call void @unroll_loop(i32 83)
  %457 = load i8, i8* %scevgep6.109, align 1
  store i8 %457, i8* %scevgep2.109, align 1
  %458 = sext i8 %457 to i32
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %.preheader..loopexit.loopexit_crit_edge, label %460

; <label>:460:                                    ; preds = %.preheader.109
  call void @__loop_iteration_test___5()
  %scevgep1.109 = getelementptr i8, i8* %scevgep1.108, i64 1
  %scevgep5.109 = getelementptr i8, i8* %scevgep5.108, i64 1
  br i1 true, label %.preheader.110, label %.loopexit.loopexitsplit

.preheader.110:                                   ; preds = %460
  %scevgep2.110 = getelementptr i8, i8* %scevgep1.109, i64 -1
  %scevgep6.110 = getelementptr i8, i8* %scevgep5.109, i64 -1
  call void @unroll_loop(i32 83)
  %461 = load i8, i8* %scevgep6.110, align 1
  store i8 %461, i8* %scevgep2.110, align 1
  %462 = sext i8 %461 to i32
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %.preheader..loopexit.loopexit_crit_edge, label %464

; <label>:464:                                    ; preds = %.preheader.110
  call void @__loop_iteration_test___5()
  %scevgep1.110 = getelementptr i8, i8* %scevgep1.109, i64 1
  %scevgep5.110 = getelementptr i8, i8* %scevgep5.109, i64 1
  br i1 true, label %.preheader.111, label %.loopexit.loopexitsplit

.preheader.111:                                   ; preds = %464
  %scevgep2.111 = getelementptr i8, i8* %scevgep1.110, i64 -1
  %scevgep6.111 = getelementptr i8, i8* %scevgep5.110, i64 -1
  call void @unroll_loop(i32 83)
  %465 = load i8, i8* %scevgep6.111, align 1
  store i8 %465, i8* %scevgep2.111, align 1
  %466 = sext i8 %465 to i32
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %.preheader..loopexit.loopexit_crit_edge, label %468

; <label>:468:                                    ; preds = %.preheader.111
  call void @__loop_iteration_test___5()
  %scevgep1.111 = getelementptr i8, i8* %scevgep1.110, i64 1
  %scevgep5.111 = getelementptr i8, i8* %scevgep5.110, i64 1
  br i1 true, label %.preheader.112, label %.loopexit.loopexitsplit

.preheader.112:                                   ; preds = %468
  %scevgep2.112 = getelementptr i8, i8* %scevgep1.111, i64 -1
  %scevgep6.112 = getelementptr i8, i8* %scevgep5.111, i64 -1
  call void @unroll_loop(i32 83)
  %469 = load i8, i8* %scevgep6.112, align 1
  store i8 %469, i8* %scevgep2.112, align 1
  %470 = sext i8 %469 to i32
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %.preheader..loopexit.loopexit_crit_edge, label %472

; <label>:472:                                    ; preds = %.preheader.112
  call void @__loop_iteration_test___5()
  %scevgep1.112 = getelementptr i8, i8* %scevgep1.111, i64 1
  %scevgep5.112 = getelementptr i8, i8* %scevgep5.111, i64 1
  br i1 true, label %.preheader.113, label %.loopexit.loopexitsplit

.preheader.113:                                   ; preds = %472
  %scevgep2.113 = getelementptr i8, i8* %scevgep1.112, i64 -1
  %scevgep6.113 = getelementptr i8, i8* %scevgep5.112, i64 -1
  call void @unroll_loop(i32 83)
  %473 = load i8, i8* %scevgep6.113, align 1
  store i8 %473, i8* %scevgep2.113, align 1
  %474 = sext i8 %473 to i32
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %.preheader..loopexit.loopexit_crit_edge, label %476

; <label>:476:                                    ; preds = %.preheader.113
  call void @__loop_iteration_test___5()
  %scevgep1.113 = getelementptr i8, i8* %scevgep1.112, i64 1
  %scevgep5.113 = getelementptr i8, i8* %scevgep5.112, i64 1
  br i1 true, label %.preheader.114, label %.loopexit.loopexitsplit

.preheader.114:                                   ; preds = %476
  %scevgep2.114 = getelementptr i8, i8* %scevgep1.113, i64 -1
  %scevgep6.114 = getelementptr i8, i8* %scevgep5.113, i64 -1
  call void @unroll_loop(i32 83)
  %477 = load i8, i8* %scevgep6.114, align 1
  store i8 %477, i8* %scevgep2.114, align 1
  %478 = sext i8 %477 to i32
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %.preheader..loopexit.loopexit_crit_edge, label %480

; <label>:480:                                    ; preds = %.preheader.114
  call void @__loop_iteration_test___5()
  %scevgep1.114 = getelementptr i8, i8* %scevgep1.113, i64 1
  %scevgep5.114 = getelementptr i8, i8* %scevgep5.113, i64 1
  br i1 true, label %.preheader.115, label %.loopexit.loopexitsplit

.preheader.115:                                   ; preds = %480
  %scevgep2.115 = getelementptr i8, i8* %scevgep1.114, i64 -1
  %scevgep6.115 = getelementptr i8, i8* %scevgep5.114, i64 -1
  call void @unroll_loop(i32 83)
  %481 = load i8, i8* %scevgep6.115, align 1
  store i8 %481, i8* %scevgep2.115, align 1
  %482 = sext i8 %481 to i32
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %.preheader..loopexit.loopexit_crit_edge, label %484

; <label>:484:                                    ; preds = %.preheader.115
  call void @__loop_iteration_test___5()
  %scevgep1.115 = getelementptr i8, i8* %scevgep1.114, i64 1
  %scevgep5.115 = getelementptr i8, i8* %scevgep5.114, i64 1
  br i1 true, label %.preheader.116, label %.loopexit.loopexitsplit

.preheader.116:                                   ; preds = %484
  %scevgep2.116 = getelementptr i8, i8* %scevgep1.115, i64 -1
  %scevgep6.116 = getelementptr i8, i8* %scevgep5.115, i64 -1
  call void @unroll_loop(i32 83)
  %485 = load i8, i8* %scevgep6.116, align 1
  store i8 %485, i8* %scevgep2.116, align 1
  %486 = sext i8 %485 to i32
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %.preheader..loopexit.loopexit_crit_edge, label %488

; <label>:488:                                    ; preds = %.preheader.116
  call void @__loop_iteration_test___5()
  %scevgep1.116 = getelementptr i8, i8* %scevgep1.115, i64 1
  %scevgep5.116 = getelementptr i8, i8* %scevgep5.115, i64 1
  br i1 true, label %.preheader.117, label %.loopexit.loopexitsplit

.preheader.117:                                   ; preds = %488
  %scevgep2.117 = getelementptr i8, i8* %scevgep1.116, i64 -1
  %scevgep6.117 = getelementptr i8, i8* %scevgep5.116, i64 -1
  call void @unroll_loop(i32 83)
  %489 = load i8, i8* %scevgep6.117, align 1
  store i8 %489, i8* %scevgep2.117, align 1
  %490 = sext i8 %489 to i32
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %.preheader..loopexit.loopexit_crit_edge, label %492

; <label>:492:                                    ; preds = %.preheader.117
  call void @__loop_iteration_test___5()
  %scevgep1.117 = getelementptr i8, i8* %scevgep1.116, i64 1
  %scevgep5.117 = getelementptr i8, i8* %scevgep5.116, i64 1
  br i1 true, label %.preheader.118, label %.loopexit.loopexitsplit

.preheader.118:                                   ; preds = %492
  %scevgep2.118 = getelementptr i8, i8* %scevgep1.117, i64 -1
  %scevgep6.118 = getelementptr i8, i8* %scevgep5.117, i64 -1
  call void @unroll_loop(i32 83)
  %493 = load i8, i8* %scevgep6.118, align 1
  store i8 %493, i8* %scevgep2.118, align 1
  %494 = sext i8 %493 to i32
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %.preheader..loopexit.loopexit_crit_edge, label %496

; <label>:496:                                    ; preds = %.preheader.118
  call void @__loop_iteration_test___5()
  %scevgep1.118 = getelementptr i8, i8* %scevgep1.117, i64 1
  %scevgep5.118 = getelementptr i8, i8* %scevgep5.117, i64 1
  br i1 true, label %.preheader.119, label %.loopexit.loopexitsplit

.preheader.119:                                   ; preds = %496
  %scevgep2.119 = getelementptr i8, i8* %scevgep1.118, i64 -1
  %scevgep6.119 = getelementptr i8, i8* %scevgep5.118, i64 -1
  call void @unroll_loop(i32 83)
  %497 = load i8, i8* %scevgep6.119, align 1
  store i8 %497, i8* %scevgep2.119, align 1
  %498 = sext i8 %497 to i32
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %.preheader..loopexit.loopexit_crit_edge, label %500

; <label>:500:                                    ; preds = %.preheader.119
  call void @__loop_iteration_test___5()
  %scevgep1.119 = getelementptr i8, i8* %scevgep1.118, i64 1
  %scevgep5.119 = getelementptr i8, i8* %scevgep5.118, i64 1
  br i1 true, label %.preheader.120, label %.loopexit.loopexitsplit

.preheader.120:                                   ; preds = %500
  %scevgep2.120 = getelementptr i8, i8* %scevgep1.119, i64 -1
  %scevgep6.120 = getelementptr i8, i8* %scevgep5.119, i64 -1
  call void @unroll_loop(i32 83)
  %501 = load i8, i8* %scevgep6.120, align 1
  store i8 %501, i8* %scevgep2.120, align 1
  %502 = sext i8 %501 to i32
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %.preheader..loopexit.loopexit_crit_edge, label %504

; <label>:504:                                    ; preds = %.preheader.120
  call void @__loop_iteration_test___5()
  %scevgep1.120 = getelementptr i8, i8* %scevgep1.119, i64 1
  %scevgep5.120 = getelementptr i8, i8* %scevgep5.119, i64 1
  br i1 true, label %.preheader.121, label %.loopexit.loopexitsplit

.preheader.121:                                   ; preds = %504
  %scevgep2.121 = getelementptr i8, i8* %scevgep1.120, i64 -1
  %scevgep6.121 = getelementptr i8, i8* %scevgep5.120, i64 -1
  call void @unroll_loop(i32 83)
  %505 = load i8, i8* %scevgep6.121, align 1
  store i8 %505, i8* %scevgep2.121, align 1
  %506 = sext i8 %505 to i32
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %.preheader..loopexit.loopexit_crit_edge, label %508

; <label>:508:                                    ; preds = %.preheader.121
  call void @__loop_iteration_test___5()
  %scevgep1.121 = getelementptr i8, i8* %scevgep1.120, i64 1
  %scevgep5.121 = getelementptr i8, i8* %scevgep5.120, i64 1
  br i1 true, label %.preheader.122, label %.loopexit.loopexitsplit

.preheader.122:                                   ; preds = %508
  %scevgep2.122 = getelementptr i8, i8* %scevgep1.121, i64 -1
  %scevgep6.122 = getelementptr i8, i8* %scevgep5.121, i64 -1
  call void @unroll_loop(i32 83)
  %509 = load i8, i8* %scevgep6.122, align 1
  store i8 %509, i8* %scevgep2.122, align 1
  %510 = sext i8 %509 to i32
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %.preheader..loopexit.loopexit_crit_edge, label %512

; <label>:512:                                    ; preds = %.preheader.122
  call void @__loop_iteration_test___5()
  %scevgep1.122 = getelementptr i8, i8* %scevgep1.121, i64 1
  %scevgep5.122 = getelementptr i8, i8* %scevgep5.121, i64 1
  br i1 true, label %.preheader.123, label %.loopexit.loopexitsplit

.preheader.123:                                   ; preds = %512
  %scevgep2.123 = getelementptr i8, i8* %scevgep1.122, i64 -1
  %scevgep6.123 = getelementptr i8, i8* %scevgep5.122, i64 -1
  call void @unroll_loop(i32 83)
  %513 = load i8, i8* %scevgep6.123, align 1
  store i8 %513, i8* %scevgep2.123, align 1
  %514 = sext i8 %513 to i32
  %515 = icmp eq i32 %514, 0
  br i1 %515, label %.preheader..loopexit.loopexit_crit_edge, label %516

; <label>:516:                                    ; preds = %.preheader.123
  call void @__loop_iteration_test___5()
  %scevgep1.123 = getelementptr i8, i8* %scevgep1.122, i64 1
  %scevgep5.123 = getelementptr i8, i8* %scevgep5.122, i64 1
  br i1 true, label %.preheader.124, label %.loopexit.loopexitsplit

.preheader.124:                                   ; preds = %516
  %scevgep2.124 = getelementptr i8, i8* %scevgep1.123, i64 -1
  %scevgep6.124 = getelementptr i8, i8* %scevgep5.123, i64 -1
  call void @unroll_loop(i32 83)
  %517 = load i8, i8* %scevgep6.124, align 1
  store i8 %517, i8* %scevgep2.124, align 1
  %518 = sext i8 %517 to i32
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %.preheader..loopexit.loopexit_crit_edge, label %520

; <label>:520:                                    ; preds = %.preheader.124
  call void @__loop_iteration_test___5()
  %scevgep1.124 = getelementptr i8, i8* %scevgep1.123, i64 1
  %scevgep5.124 = getelementptr i8, i8* %scevgep5.123, i64 1
  br i1 true, label %.preheader.125, label %.loopexit.loopexitsplit

.preheader.125:                                   ; preds = %520
  %scevgep2.125 = getelementptr i8, i8* %scevgep1.124, i64 -1
  %scevgep6.125 = getelementptr i8, i8* %scevgep5.124, i64 -1
  call void @unroll_loop(i32 83)
  %521 = load i8, i8* %scevgep6.125, align 1
  store i8 %521, i8* %scevgep2.125, align 1
  %522 = sext i8 %521 to i32
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %.preheader..loopexit.loopexit_crit_edge, label %524

; <label>:524:                                    ; preds = %.preheader.125
  call void @__loop_iteration_test___5()
  %scevgep1.125 = getelementptr i8, i8* %scevgep1.124, i64 1
  %scevgep5.125 = getelementptr i8, i8* %scevgep5.124, i64 1
  br i1 true, label %.preheader.126, label %.loopexit.loopexitsplit

.preheader.126:                                   ; preds = %524
  %scevgep2.126 = getelementptr i8, i8* %scevgep1.125, i64 -1
  %scevgep6.126 = getelementptr i8, i8* %scevgep5.125, i64 -1
  call void @unroll_loop(i32 83)
  %525 = load i8, i8* %scevgep6.126, align 1
  store i8 %525, i8* %scevgep2.126, align 1
  %526 = sext i8 %525 to i32
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %.preheader..loopexit.loopexit_crit_edge, label %528

; <label>:528:                                    ; preds = %.preheader.126
  call void @__loop_iteration_test___5()
  %scevgep1.126 = getelementptr i8, i8* %scevgep1.125, i64 1
  %scevgep5.126 = getelementptr i8, i8* %scevgep5.125, i64 1
  br i1 true, label %.preheader.127, label %.loopexit.loopexitsplit

.preheader.127:                                   ; preds = %528
  %scevgep2.127 = getelementptr i8, i8* %scevgep1.126, i64 -1
  %scevgep6.127 = getelementptr i8, i8* %scevgep5.126, i64 -1
  call void @unroll_loop(i32 83)
  %529 = load i8, i8* %scevgep6.127, align 1
  store i8 %529, i8* %scevgep2.127, align 1
  %530 = sext i8 %529 to i32
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %.preheader..loopexit.loopexit_crit_edge, label %532

; <label>:532:                                    ; preds = %.preheader.127
  call void @__loop_iteration_test___5()
  %scevgep1.127 = getelementptr i8, i8* %scevgep1.126, i64 1
  %scevgep5.127 = getelementptr i8, i8* %scevgep5.126, i64 1
  br i1 true, label %.preheader.128, label %.loopexit.loopexitsplit

.preheader.128:                                   ; preds = %532
  %scevgep2.128 = getelementptr i8, i8* %scevgep1.127, i64 -1
  %scevgep6.128 = getelementptr i8, i8* %scevgep5.127, i64 -1
  call void @unroll_loop(i32 83)
  %533 = load i8, i8* %scevgep6.128, align 1
  store i8 %533, i8* %scevgep2.128, align 1
  %534 = sext i8 %533 to i32
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %.preheader..loopexit.loopexit_crit_edge, label %536

; <label>:536:                                    ; preds = %.preheader.128
  call void @__loop_iteration_test___5()
  %scevgep1.128 = getelementptr i8, i8* %scevgep1.127, i64 1
  %scevgep5.128 = getelementptr i8, i8* %scevgep5.127, i64 1
  br i1 true, label %.preheader.129, label %.loopexit.loopexitsplit

.preheader.129:                                   ; preds = %536
  %scevgep2.129 = getelementptr i8, i8* %scevgep1.128, i64 -1
  %scevgep6.129 = getelementptr i8, i8* %scevgep5.128, i64 -1
  call void @unroll_loop(i32 83)
  %537 = load i8, i8* %scevgep6.129, align 1
  store i8 %537, i8* %scevgep2.129, align 1
  %538 = sext i8 %537 to i32
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %.preheader..loopexit.loopexit_crit_edge, label %540

; <label>:540:                                    ; preds = %.preheader.129
  call void @__loop_iteration_test___5()
  %scevgep1.129 = getelementptr i8, i8* %scevgep1.128, i64 1
  %scevgep5.129 = getelementptr i8, i8* %scevgep5.128, i64 1
  br i1 true, label %.preheader.130, label %.loopexit.loopexitsplit

.preheader.130:                                   ; preds = %540
  %scevgep2.130 = getelementptr i8, i8* %scevgep1.129, i64 -1
  %scevgep6.130 = getelementptr i8, i8* %scevgep5.129, i64 -1
  call void @unroll_loop(i32 83)
  %541 = load i8, i8* %scevgep6.130, align 1
  store i8 %541, i8* %scevgep2.130, align 1
  %542 = sext i8 %541 to i32
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %.preheader..loopexit.loopexit_crit_edge, label %544

; <label>:544:                                    ; preds = %.preheader.130
  call void @__loop_iteration_test___5()
  %scevgep1.130 = getelementptr i8, i8* %scevgep1.129, i64 1
  %scevgep5.130 = getelementptr i8, i8* %scevgep5.129, i64 1
  br i1 true, label %.preheader.131, label %.loopexit.loopexitsplit

.preheader.131:                                   ; preds = %544
  %scevgep2.131 = getelementptr i8, i8* %scevgep1.130, i64 -1
  %scevgep6.131 = getelementptr i8, i8* %scevgep5.130, i64 -1
  call void @unroll_loop(i32 83)
  %545 = load i8, i8* %scevgep6.131, align 1
  store i8 %545, i8* %scevgep2.131, align 1
  %546 = sext i8 %545 to i32
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %.preheader..loopexit.loopexit_crit_edge, label %548

; <label>:548:                                    ; preds = %.preheader.131
  call void @__loop_iteration_test___5()
  %scevgep1.131 = getelementptr i8, i8* %scevgep1.130, i64 1
  %scevgep5.131 = getelementptr i8, i8* %scevgep5.130, i64 1
  br i1 true, label %.preheader.132, label %.loopexit.loopexitsplit

.preheader.132:                                   ; preds = %548
  %scevgep2.132 = getelementptr i8, i8* %scevgep1.131, i64 -1
  %scevgep6.132 = getelementptr i8, i8* %scevgep5.131, i64 -1
  call void @unroll_loop(i32 83)
  %549 = load i8, i8* %scevgep6.132, align 1
  store i8 %549, i8* %scevgep2.132, align 1
  %550 = sext i8 %549 to i32
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %.preheader..loopexit.loopexit_crit_edge, label %552

; <label>:552:                                    ; preds = %.preheader.132
  call void @__loop_iteration_test___5()
  %scevgep1.132 = getelementptr i8, i8* %scevgep1.131, i64 1
  %scevgep5.132 = getelementptr i8, i8* %scevgep5.131, i64 1
  br i1 true, label %.preheader.133, label %.loopexit.loopexitsplit

.preheader.133:                                   ; preds = %552
  %scevgep2.133 = getelementptr i8, i8* %scevgep1.132, i64 -1
  %scevgep6.133 = getelementptr i8, i8* %scevgep5.132, i64 -1
  call void @unroll_loop(i32 83)
  %553 = load i8, i8* %scevgep6.133, align 1
  store i8 %553, i8* %scevgep2.133, align 1
  %554 = sext i8 %553 to i32
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %.preheader..loopexit.loopexit_crit_edge, label %556

; <label>:556:                                    ; preds = %.preheader.133
  call void @__loop_iteration_test___5()
  %scevgep1.133 = getelementptr i8, i8* %scevgep1.132, i64 1
  %scevgep5.133 = getelementptr i8, i8* %scevgep5.132, i64 1
  br i1 true, label %.preheader.134, label %.loopexit.loopexitsplit

.preheader.134:                                   ; preds = %556
  %scevgep2.134 = getelementptr i8, i8* %scevgep1.133, i64 -1
  %scevgep6.134 = getelementptr i8, i8* %scevgep5.133, i64 -1
  call void @unroll_loop(i32 83)
  %557 = load i8, i8* %scevgep6.134, align 1
  store i8 %557, i8* %scevgep2.134, align 1
  %558 = sext i8 %557 to i32
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %.preheader..loopexit.loopexit_crit_edge, label %560

; <label>:560:                                    ; preds = %.preheader.134
  call void @__loop_iteration_test___5()
  %scevgep1.134 = getelementptr i8, i8* %scevgep1.133, i64 1
  %scevgep5.134 = getelementptr i8, i8* %scevgep5.133, i64 1
  br i1 true, label %.preheader.135, label %.loopexit.loopexitsplit

.preheader.135:                                   ; preds = %560
  %scevgep2.135 = getelementptr i8, i8* %scevgep1.134, i64 -1
  %scevgep6.135 = getelementptr i8, i8* %scevgep5.134, i64 -1
  call void @unroll_loop(i32 83)
  %561 = load i8, i8* %scevgep6.135, align 1
  store i8 %561, i8* %scevgep2.135, align 1
  %562 = sext i8 %561 to i32
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %.preheader..loopexit.loopexit_crit_edge, label %564

; <label>:564:                                    ; preds = %.preheader.135
  call void @__loop_iteration_test___5()
  %scevgep1.135 = getelementptr i8, i8* %scevgep1.134, i64 1
  %scevgep5.135 = getelementptr i8, i8* %scevgep5.134, i64 1
  br i1 true, label %.preheader.136, label %.loopexit.loopexitsplit

.preheader.136:                                   ; preds = %564
  %scevgep2.136 = getelementptr i8, i8* %scevgep1.135, i64 -1
  %scevgep6.136 = getelementptr i8, i8* %scevgep5.135, i64 -1
  call void @unroll_loop(i32 83)
  %565 = load i8, i8* %scevgep6.136, align 1
  store i8 %565, i8* %scevgep2.136, align 1
  %566 = sext i8 %565 to i32
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %.preheader..loopexit.loopexit_crit_edge, label %568

; <label>:568:                                    ; preds = %.preheader.136
  call void @__loop_iteration_test___5()
  %scevgep1.136 = getelementptr i8, i8* %scevgep1.135, i64 1
  %scevgep5.136 = getelementptr i8, i8* %scevgep5.135, i64 1
  br i1 true, label %.preheader.137, label %.loopexit.loopexitsplit

.preheader.137:                                   ; preds = %568
  %scevgep2.137 = getelementptr i8, i8* %scevgep1.136, i64 -1
  %scevgep6.137 = getelementptr i8, i8* %scevgep5.136, i64 -1
  call void @unroll_loop(i32 83)
  %569 = load i8, i8* %scevgep6.137, align 1
  store i8 %569, i8* %scevgep2.137, align 1
  %570 = sext i8 %569 to i32
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %.preheader..loopexit.loopexit_crit_edge, label %572

; <label>:572:                                    ; preds = %.preheader.137
  call void @__loop_iteration_test___5()
  %scevgep1.137 = getelementptr i8, i8* %scevgep1.136, i64 1
  %scevgep5.137 = getelementptr i8, i8* %scevgep5.136, i64 1
  br i1 true, label %.preheader.138, label %.loopexit.loopexitsplit

.preheader.138:                                   ; preds = %572
  %scevgep2.138 = getelementptr i8, i8* %scevgep1.137, i64 -1
  %scevgep6.138 = getelementptr i8, i8* %scevgep5.137, i64 -1
  call void @unroll_loop(i32 83)
  %573 = load i8, i8* %scevgep6.138, align 1
  store i8 %573, i8* %scevgep2.138, align 1
  %574 = sext i8 %573 to i32
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %.preheader..loopexit.loopexit_crit_edge, label %576

; <label>:576:                                    ; preds = %.preheader.138
  call void @__loop_iteration_test___5()
  %scevgep1.138 = getelementptr i8, i8* %scevgep1.137, i64 1
  %scevgep5.138 = getelementptr i8, i8* %scevgep5.137, i64 1
  br i1 true, label %.preheader.139, label %.loopexit.loopexitsplit

.preheader.139:                                   ; preds = %576
  %scevgep2.139 = getelementptr i8, i8* %scevgep1.138, i64 -1
  %scevgep6.139 = getelementptr i8, i8* %scevgep5.138, i64 -1
  call void @unroll_loop(i32 83)
  %577 = load i8, i8* %scevgep6.139, align 1
  store i8 %577, i8* %scevgep2.139, align 1
  %578 = sext i8 %577 to i32
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %.preheader..loopexit.loopexit_crit_edge, label %580

; <label>:580:                                    ; preds = %.preheader.139
  call void @__loop_iteration_test___5()
  %scevgep1.139 = getelementptr i8, i8* %scevgep1.138, i64 1
  %scevgep5.139 = getelementptr i8, i8* %scevgep5.138, i64 1
  br i1 true, label %.preheader.140, label %.loopexit.loopexitsplit

.preheader.140:                                   ; preds = %580
  %scevgep2.140 = getelementptr i8, i8* %scevgep1.139, i64 -1
  %scevgep6.140 = getelementptr i8, i8* %scevgep5.139, i64 -1
  call void @unroll_loop(i32 83)
  %581 = load i8, i8* %scevgep6.140, align 1
  store i8 %581, i8* %scevgep2.140, align 1
  %582 = sext i8 %581 to i32
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %.preheader..loopexit.loopexit_crit_edge, label %584

; <label>:584:                                    ; preds = %.preheader.140
  call void @__loop_iteration_test___5()
  %scevgep1.140 = getelementptr i8, i8* %scevgep1.139, i64 1
  %scevgep5.140 = getelementptr i8, i8* %scevgep5.139, i64 1
  br i1 true, label %.preheader.141, label %.loopexit.loopexitsplit

.preheader.141:                                   ; preds = %584
  %scevgep2.141 = getelementptr i8, i8* %scevgep1.140, i64 -1
  %scevgep6.141 = getelementptr i8, i8* %scevgep5.140, i64 -1
  call void @unroll_loop(i32 83)
  %585 = load i8, i8* %scevgep6.141, align 1
  store i8 %585, i8* %scevgep2.141, align 1
  %586 = sext i8 %585 to i32
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %.preheader..loopexit.loopexit_crit_edge, label %588

; <label>:588:                                    ; preds = %.preheader.141
  call void @__loop_iteration_test___5()
  %scevgep1.141 = getelementptr i8, i8* %scevgep1.140, i64 1
  %scevgep5.141 = getelementptr i8, i8* %scevgep5.140, i64 1
  br i1 true, label %.preheader.142, label %.loopexit.loopexitsplit

.preheader.142:                                   ; preds = %588
  %scevgep2.142 = getelementptr i8, i8* %scevgep1.141, i64 -1
  %scevgep6.142 = getelementptr i8, i8* %scevgep5.141, i64 -1
  call void @unroll_loop(i32 83)
  %589 = load i8, i8* %scevgep6.142, align 1
  store i8 %589, i8* %scevgep2.142, align 1
  %590 = sext i8 %589 to i32
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %.preheader..loopexit.loopexit_crit_edge, label %592

; <label>:592:                                    ; preds = %.preheader.142
  call void @__loop_iteration_test___5()
  %scevgep1.142 = getelementptr i8, i8* %scevgep1.141, i64 1
  %scevgep5.142 = getelementptr i8, i8* %scevgep5.141, i64 1
  br i1 true, label %.preheader.143, label %.loopexit.loopexitsplit

.preheader.143:                                   ; preds = %592
  %scevgep2.143 = getelementptr i8, i8* %scevgep1.142, i64 -1
  %scevgep6.143 = getelementptr i8, i8* %scevgep5.142, i64 -1
  call void @unroll_loop(i32 83)
  %593 = load i8, i8* %scevgep6.143, align 1
  store i8 %593, i8* %scevgep2.143, align 1
  %594 = sext i8 %593 to i32
  %595 = icmp eq i32 %594, 0
  br i1 %595, label %.preheader..loopexit.loopexit_crit_edge, label %596

; <label>:596:                                    ; preds = %.preheader.143
  call void @__loop_iteration_test___5()
  %scevgep1.143 = getelementptr i8, i8* %scevgep1.142, i64 1
  %scevgep5.143 = getelementptr i8, i8* %scevgep5.142, i64 1
  br i1 true, label %.preheader.144, label %.loopexit.loopexitsplit

.preheader.144:                                   ; preds = %596
  %scevgep2.144 = getelementptr i8, i8* %scevgep1.143, i64 -1
  %scevgep6.144 = getelementptr i8, i8* %scevgep5.143, i64 -1
  call void @unroll_loop(i32 83)
  %597 = load i8, i8* %scevgep6.144, align 1
  store i8 %597, i8* %scevgep2.144, align 1
  %598 = sext i8 %597 to i32
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %.preheader..loopexit.loopexit_crit_edge, label %600

; <label>:600:                                    ; preds = %.preheader.144
  call void @__loop_iteration_test___5()
  %scevgep1.144 = getelementptr i8, i8* %scevgep1.143, i64 1
  %scevgep5.144 = getelementptr i8, i8* %scevgep5.143, i64 1
  br i1 true, label %.preheader.145, label %.loopexit.loopexitsplit

.preheader.145:                                   ; preds = %600
  %scevgep2.145 = getelementptr i8, i8* %scevgep1.144, i64 -1
  %scevgep6.145 = getelementptr i8, i8* %scevgep5.144, i64 -1
  call void @unroll_loop(i32 83)
  %601 = load i8, i8* %scevgep6.145, align 1
  store i8 %601, i8* %scevgep2.145, align 1
  %602 = sext i8 %601 to i32
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %.preheader..loopexit.loopexit_crit_edge, label %604

; <label>:604:                                    ; preds = %.preheader.145
  call void @__loop_iteration_test___5()
  %scevgep1.145 = getelementptr i8, i8* %scevgep1.144, i64 1
  %scevgep5.145 = getelementptr i8, i8* %scevgep5.144, i64 1
  br i1 true, label %.preheader.146, label %.loopexit.loopexitsplit

.preheader.146:                                   ; preds = %604
  %scevgep2.146 = getelementptr i8, i8* %scevgep1.145, i64 -1
  %scevgep6.146 = getelementptr i8, i8* %scevgep5.145, i64 -1
  call void @unroll_loop(i32 83)
  %605 = load i8, i8* %scevgep6.146, align 1
  store i8 %605, i8* %scevgep2.146, align 1
  %606 = sext i8 %605 to i32
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %.preheader..loopexit.loopexit_crit_edge, label %608

; <label>:608:                                    ; preds = %.preheader.146
  call void @__loop_iteration_test___5()
  %scevgep1.146 = getelementptr i8, i8* %scevgep1.145, i64 1
  %scevgep5.146 = getelementptr i8, i8* %scevgep5.145, i64 1
  br i1 true, label %.preheader.147, label %.loopexit.loopexitsplit

.preheader.147:                                   ; preds = %608
  %scevgep2.147 = getelementptr i8, i8* %scevgep1.146, i64 -1
  %scevgep6.147 = getelementptr i8, i8* %scevgep5.146, i64 -1
  call void @unroll_loop(i32 83)
  %609 = load i8, i8* %scevgep6.147, align 1
  store i8 %609, i8* %scevgep2.147, align 1
  %610 = sext i8 %609 to i32
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %.preheader..loopexit.loopexit_crit_edge, label %612

; <label>:612:                                    ; preds = %.preheader.147
  call void @__loop_iteration_test___5()
  %scevgep1.147 = getelementptr i8, i8* %scevgep1.146, i64 1
  %scevgep5.147 = getelementptr i8, i8* %scevgep5.146, i64 1
  br i1 true, label %.preheader.148, label %.loopexit.loopexitsplit

.preheader.148:                                   ; preds = %612
  %scevgep2.148 = getelementptr i8, i8* %scevgep1.147, i64 -1
  %scevgep6.148 = getelementptr i8, i8* %scevgep5.147, i64 -1
  call void @unroll_loop(i32 83)
  %613 = load i8, i8* %scevgep6.148, align 1
  store i8 %613, i8* %scevgep2.148, align 1
  %614 = sext i8 %613 to i32
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %.preheader..loopexit.loopexit_crit_edge, label %616

; <label>:616:                                    ; preds = %.preheader.148
  call void @__loop_iteration_test___5()
  %scevgep1.148 = getelementptr i8, i8* %scevgep1.147, i64 1
  %scevgep5.148 = getelementptr i8, i8* %scevgep5.147, i64 1
  br i1 true, label %.preheader.149, label %.loopexit.loopexitsplit

.preheader.149:                                   ; preds = %616
  %scevgep2.149 = getelementptr i8, i8* %scevgep1.148, i64 -1
  %scevgep6.149 = getelementptr i8, i8* %scevgep5.148, i64 -1
  call void @unroll_loop(i32 83)
  %617 = load i8, i8* %scevgep6.149, align 1
  store i8 %617, i8* %scevgep2.149, align 1
  %618 = sext i8 %617 to i32
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %.preheader..loopexit.loopexit_crit_edge, label %620

; <label>:620:                                    ; preds = %.preheader.149
  call void @__loop_iteration_test___5()
  %scevgep1.149 = getelementptr i8, i8* %scevgep1.148, i64 1
  %scevgep5.149 = getelementptr i8, i8* %scevgep5.148, i64 1
  br i1 true, label %.preheader.150, label %.loopexit.loopexitsplit

.preheader.150:                                   ; preds = %620
  %scevgep2.150 = getelementptr i8, i8* %scevgep1.149, i64 -1
  %scevgep6.150 = getelementptr i8, i8* %scevgep5.149, i64 -1
  call void @unroll_loop(i32 83)
  %621 = load i8, i8* %scevgep6.150, align 1
  store i8 %621, i8* %scevgep2.150, align 1
  %622 = sext i8 %621 to i32
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %.preheader..loopexit.loopexit_crit_edge, label %624

; <label>:624:                                    ; preds = %.preheader.150
  call void @__loop_iteration_test___5()
  %scevgep1.150 = getelementptr i8, i8* %scevgep1.149, i64 1
  %scevgep5.150 = getelementptr i8, i8* %scevgep5.149, i64 1
  br i1 true, label %.preheader.151, label %.loopexit.loopexitsplit

.preheader.151:                                   ; preds = %624
  %scevgep2.151 = getelementptr i8, i8* %scevgep1.150, i64 -1
  %scevgep6.151 = getelementptr i8, i8* %scevgep5.150, i64 -1
  call void @unroll_loop(i32 83)
  %625 = load i8, i8* %scevgep6.151, align 1
  store i8 %625, i8* %scevgep2.151, align 1
  %626 = sext i8 %625 to i32
  %627 = icmp eq i32 %626, 0
  br i1 %627, label %.preheader..loopexit.loopexit_crit_edge, label %628

; <label>:628:                                    ; preds = %.preheader.151
  call void @__loop_iteration_test___5()
  %scevgep1.151 = getelementptr i8, i8* %scevgep1.150, i64 1
  %scevgep5.151 = getelementptr i8, i8* %scevgep5.150, i64 1
  br i1 true, label %.preheader.152, label %.loopexit.loopexitsplit

.preheader.152:                                   ; preds = %628
  %scevgep2.152 = getelementptr i8, i8* %scevgep1.151, i64 -1
  %scevgep6.152 = getelementptr i8, i8* %scevgep5.151, i64 -1
  call void @unroll_loop(i32 83)
  %629 = load i8, i8* %scevgep6.152, align 1
  store i8 %629, i8* %scevgep2.152, align 1
  %630 = sext i8 %629 to i32
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %.preheader..loopexit.loopexit_crit_edge, label %632

; <label>:632:                                    ; preds = %.preheader.152
  call void @__loop_iteration_test___5()
  %scevgep1.152 = getelementptr i8, i8* %scevgep1.151, i64 1
  %scevgep5.152 = getelementptr i8, i8* %scevgep5.151, i64 1
  br i1 true, label %.preheader.153, label %.loopexit.loopexitsplit

.preheader.153:                                   ; preds = %632
  %scevgep2.153 = getelementptr i8, i8* %scevgep1.152, i64 -1
  %scevgep6.153 = getelementptr i8, i8* %scevgep5.152, i64 -1
  call void @unroll_loop(i32 83)
  %633 = load i8, i8* %scevgep6.153, align 1
  store i8 %633, i8* %scevgep2.153, align 1
  %634 = sext i8 %633 to i32
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %.preheader..loopexit.loopexit_crit_edge, label %636

; <label>:636:                                    ; preds = %.preheader.153
  call void @__loop_iteration_test___5()
  %scevgep1.153 = getelementptr i8, i8* %scevgep1.152, i64 1
  %scevgep5.153 = getelementptr i8, i8* %scevgep5.152, i64 1
  br i1 true, label %.preheader.154, label %.loopexit.loopexitsplit

.preheader.154:                                   ; preds = %636
  %scevgep2.154 = getelementptr i8, i8* %scevgep1.153, i64 -1
  %scevgep6.154 = getelementptr i8, i8* %scevgep5.153, i64 -1
  call void @unroll_loop(i32 83)
  %637 = load i8, i8* %scevgep6.154, align 1
  store i8 %637, i8* %scevgep2.154, align 1
  %638 = sext i8 %637 to i32
  %639 = icmp eq i32 %638, 0
  br i1 %639, label %.preheader..loopexit.loopexit_crit_edge, label %640

; <label>:640:                                    ; preds = %.preheader.154
  call void @__loop_iteration_test___5()
  %scevgep1.154 = getelementptr i8, i8* %scevgep1.153, i64 1
  %scevgep5.154 = getelementptr i8, i8* %scevgep5.153, i64 1
  br i1 true, label %.preheader.155, label %.loopexit.loopexitsplit

.preheader.155:                                   ; preds = %640
  %scevgep2.155 = getelementptr i8, i8* %scevgep1.154, i64 -1
  %scevgep6.155 = getelementptr i8, i8* %scevgep5.154, i64 -1
  call void @unroll_loop(i32 83)
  %641 = load i8, i8* %scevgep6.155, align 1
  store i8 %641, i8* %scevgep2.155, align 1
  %642 = sext i8 %641 to i32
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %.preheader..loopexit.loopexit_crit_edge, label %644

; <label>:644:                                    ; preds = %.preheader.155
  call void @__loop_iteration_test___5()
  %scevgep1.155 = getelementptr i8, i8* %scevgep1.154, i64 1
  %scevgep5.155 = getelementptr i8, i8* %scevgep5.154, i64 1
  br i1 true, label %.preheader.156, label %.loopexit.loopexitsplit

.preheader.156:                                   ; preds = %644
  %scevgep2.156 = getelementptr i8, i8* %scevgep1.155, i64 -1
  %scevgep6.156 = getelementptr i8, i8* %scevgep5.155, i64 -1
  call void @unroll_loop(i32 83)
  %645 = load i8, i8* %scevgep6.156, align 1
  store i8 %645, i8* %scevgep2.156, align 1
  %646 = sext i8 %645 to i32
  %647 = icmp eq i32 %646, 0
  br i1 %647, label %.preheader..loopexit.loopexit_crit_edge, label %648

; <label>:648:                                    ; preds = %.preheader.156
  call void @__loop_iteration_test___5()
  %scevgep1.156 = getelementptr i8, i8* %scevgep1.155, i64 1
  %scevgep5.156 = getelementptr i8, i8* %scevgep5.155, i64 1
  br i1 true, label %.preheader.157, label %.loopexit.loopexitsplit

.preheader.157:                                   ; preds = %648
  %scevgep2.157 = getelementptr i8, i8* %scevgep1.156, i64 -1
  %scevgep6.157 = getelementptr i8, i8* %scevgep5.156, i64 -1
  call void @unroll_loop(i32 83)
  %649 = load i8, i8* %scevgep6.157, align 1
  store i8 %649, i8* %scevgep2.157, align 1
  %650 = sext i8 %649 to i32
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %.preheader..loopexit.loopexit_crit_edge, label %652

; <label>:652:                                    ; preds = %.preheader.157
  call void @__loop_iteration_test___5()
  %scevgep1.157 = getelementptr i8, i8* %scevgep1.156, i64 1
  %scevgep5.157 = getelementptr i8, i8* %scevgep5.156, i64 1
  br i1 true, label %.preheader.158, label %.loopexit.loopexitsplit

.preheader.158:                                   ; preds = %652
  %scevgep2.158 = getelementptr i8, i8* %scevgep1.157, i64 -1
  %scevgep6.158 = getelementptr i8, i8* %scevgep5.157, i64 -1
  call void @unroll_loop(i32 83)
  %653 = load i8, i8* %scevgep6.158, align 1
  store i8 %653, i8* %scevgep2.158, align 1
  %654 = sext i8 %653 to i32
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %.preheader..loopexit.loopexit_crit_edge, label %656

; <label>:656:                                    ; preds = %.preheader.158
  call void @__loop_iteration_test___5()
  %scevgep1.158 = getelementptr i8, i8* %scevgep1.157, i64 1
  %scevgep5.158 = getelementptr i8, i8* %scevgep5.157, i64 1
  br i1 true, label %.preheader.159, label %.loopexit.loopexitsplit

.preheader.159:                                   ; preds = %656
  %scevgep2.159 = getelementptr i8, i8* %scevgep1.158, i64 -1
  %scevgep6.159 = getelementptr i8, i8* %scevgep5.158, i64 -1
  call void @unroll_loop(i32 83)
  %657 = load i8, i8* %scevgep6.159, align 1
  store i8 %657, i8* %scevgep2.159, align 1
  %658 = sext i8 %657 to i32
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %.preheader..loopexit.loopexit_crit_edge, label %660

; <label>:660:                                    ; preds = %.preheader.159
  call void @__loop_iteration_test___5()
  %scevgep1.159 = getelementptr i8, i8* %scevgep1.158, i64 1
  %scevgep5.159 = getelementptr i8, i8* %scevgep5.158, i64 1
  br i1 true, label %.preheader.160, label %.loopexit.loopexitsplit

.preheader.160:                                   ; preds = %660
  %scevgep2.160 = getelementptr i8, i8* %scevgep1.159, i64 -1
  %scevgep6.160 = getelementptr i8, i8* %scevgep5.159, i64 -1
  call void @unroll_loop(i32 83)
  %661 = load i8, i8* %scevgep6.160, align 1
  store i8 %661, i8* %scevgep2.160, align 1
  %662 = sext i8 %661 to i32
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %.preheader..loopexit.loopexit_crit_edge, label %664

; <label>:664:                                    ; preds = %.preheader.160
  call void @__loop_iteration_test___5()
  %scevgep1.160 = getelementptr i8, i8* %scevgep1.159, i64 1
  %scevgep5.160 = getelementptr i8, i8* %scevgep5.159, i64 1
  br i1 true, label %.preheader.161, label %.loopexit.loopexitsplit

.preheader.161:                                   ; preds = %664
  %scevgep2.161 = getelementptr i8, i8* %scevgep1.160, i64 -1
  %scevgep6.161 = getelementptr i8, i8* %scevgep5.160, i64 -1
  call void @unroll_loop(i32 83)
  %665 = load i8, i8* %scevgep6.161, align 1
  store i8 %665, i8* %scevgep2.161, align 1
  %666 = sext i8 %665 to i32
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %.preheader..loopexit.loopexit_crit_edge, label %668

; <label>:668:                                    ; preds = %.preheader.161
  call void @__loop_iteration_test___5()
  %scevgep1.161 = getelementptr i8, i8* %scevgep1.160, i64 1
  %scevgep5.161 = getelementptr i8, i8* %scevgep5.160, i64 1
  br i1 true, label %.preheader.162, label %.loopexit.loopexitsplit

.preheader.162:                                   ; preds = %668
  %scevgep2.162 = getelementptr i8, i8* %scevgep1.161, i64 -1
  %scevgep6.162 = getelementptr i8, i8* %scevgep5.161, i64 -1
  call void @unroll_loop(i32 83)
  %669 = load i8, i8* %scevgep6.162, align 1
  store i8 %669, i8* %scevgep2.162, align 1
  %670 = sext i8 %669 to i32
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %.preheader..loopexit.loopexit_crit_edge, label %672

; <label>:672:                                    ; preds = %.preheader.162
  call void @__loop_iteration_test___5()
  %scevgep1.162 = getelementptr i8, i8* %scevgep1.161, i64 1
  %scevgep5.162 = getelementptr i8, i8* %scevgep5.161, i64 1
  br i1 true, label %.preheader.163, label %.loopexit.loopexitsplit

.preheader.163:                                   ; preds = %672
  %scevgep2.163 = getelementptr i8, i8* %scevgep1.162, i64 -1
  %scevgep6.163 = getelementptr i8, i8* %scevgep5.162, i64 -1
  call void @unroll_loop(i32 83)
  %673 = load i8, i8* %scevgep6.163, align 1
  store i8 %673, i8* %scevgep2.163, align 1
  %674 = sext i8 %673 to i32
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %.preheader..loopexit.loopexit_crit_edge, label %676

; <label>:676:                                    ; preds = %.preheader.163
  call void @__loop_iteration_test___5()
  %scevgep1.163 = getelementptr i8, i8* %scevgep1.162, i64 1
  %scevgep5.163 = getelementptr i8, i8* %scevgep5.162, i64 1
  br i1 true, label %.preheader.164, label %.loopexit.loopexitsplit

.preheader.164:                                   ; preds = %676
  %scevgep2.164 = getelementptr i8, i8* %scevgep1.163, i64 -1
  %scevgep6.164 = getelementptr i8, i8* %scevgep5.163, i64 -1
  call void @unroll_loop(i32 83)
  %677 = load i8, i8* %scevgep6.164, align 1
  store i8 %677, i8* %scevgep2.164, align 1
  %678 = sext i8 %677 to i32
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %.preheader..loopexit.loopexit_crit_edge, label %680

; <label>:680:                                    ; preds = %.preheader.164
  call void @__loop_iteration_test___5()
  %scevgep1.164 = getelementptr i8, i8* %scevgep1.163, i64 1
  %scevgep5.164 = getelementptr i8, i8* %scevgep5.163, i64 1
  br i1 true, label %.preheader.165, label %.loopexit.loopexitsplit

.preheader.165:                                   ; preds = %680
  %scevgep2.165 = getelementptr i8, i8* %scevgep1.164, i64 -1
  %scevgep6.165 = getelementptr i8, i8* %scevgep5.164, i64 -1
  call void @unroll_loop(i32 83)
  %681 = load i8, i8* %scevgep6.165, align 1
  store i8 %681, i8* %scevgep2.165, align 1
  %682 = sext i8 %681 to i32
  %683 = icmp eq i32 %682, 0
  br i1 %683, label %.preheader..loopexit.loopexit_crit_edge, label %684

; <label>:684:                                    ; preds = %.preheader.165
  call void @__loop_iteration_test___5()
  %scevgep1.165 = getelementptr i8, i8* %scevgep1.164, i64 1
  %scevgep5.165 = getelementptr i8, i8* %scevgep5.164, i64 1
  br i1 true, label %.preheader.166, label %.loopexit.loopexitsplit

.preheader.166:                                   ; preds = %684
  %scevgep2.166 = getelementptr i8, i8* %scevgep1.165, i64 -1
  %scevgep6.166 = getelementptr i8, i8* %scevgep5.165, i64 -1
  call void @unroll_loop(i32 83)
  %685 = load i8, i8* %scevgep6.166, align 1
  store i8 %685, i8* %scevgep2.166, align 1
  %686 = sext i8 %685 to i32
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %.preheader..loopexit.loopexit_crit_edge, label %688

; <label>:688:                                    ; preds = %.preheader.166
  call void @__loop_iteration_test___5()
  %scevgep1.166 = getelementptr i8, i8* %scevgep1.165, i64 1
  %scevgep5.166 = getelementptr i8, i8* %scevgep5.165, i64 1
  br i1 true, label %.preheader.167, label %.loopexit.loopexitsplit

.preheader.167:                                   ; preds = %688
  %scevgep2.167 = getelementptr i8, i8* %scevgep1.166, i64 -1
  %scevgep6.167 = getelementptr i8, i8* %scevgep5.166, i64 -1
  call void @unroll_loop(i32 83)
  %689 = load i8, i8* %scevgep6.167, align 1
  store i8 %689, i8* %scevgep2.167, align 1
  %690 = sext i8 %689 to i32
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %.preheader..loopexit.loopexit_crit_edge, label %692

; <label>:692:                                    ; preds = %.preheader.167
  call void @__loop_iteration_test___5()
  %scevgep1.167 = getelementptr i8, i8* %scevgep1.166, i64 1
  %scevgep5.167 = getelementptr i8, i8* %scevgep5.166, i64 1
  br i1 true, label %.preheader.168, label %.loopexit.loopexitsplit

.preheader.168:                                   ; preds = %692
  %scevgep2.168 = getelementptr i8, i8* %scevgep1.167, i64 -1
  %scevgep6.168 = getelementptr i8, i8* %scevgep5.167, i64 -1
  call void @unroll_loop(i32 83)
  %693 = load i8, i8* %scevgep6.168, align 1
  store i8 %693, i8* %scevgep2.168, align 1
  %694 = sext i8 %693 to i32
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %.preheader..loopexit.loopexit_crit_edge, label %696

; <label>:696:                                    ; preds = %.preheader.168
  call void @__loop_iteration_test___5()
  %scevgep1.168 = getelementptr i8, i8* %scevgep1.167, i64 1
  %scevgep5.168 = getelementptr i8, i8* %scevgep5.167, i64 1
  br i1 true, label %.preheader.169, label %.loopexit.loopexitsplit

.preheader.169:                                   ; preds = %696
  %scevgep2.169 = getelementptr i8, i8* %scevgep1.168, i64 -1
  %scevgep6.169 = getelementptr i8, i8* %scevgep5.168, i64 -1
  call void @unroll_loop(i32 83)
  %697 = load i8, i8* %scevgep6.169, align 1
  store i8 %697, i8* %scevgep2.169, align 1
  %698 = sext i8 %697 to i32
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %.preheader..loopexit.loopexit_crit_edge, label %700

; <label>:700:                                    ; preds = %.preheader.169
  call void @__loop_iteration_test___5()
  %scevgep1.169 = getelementptr i8, i8* %scevgep1.168, i64 1
  %scevgep5.169 = getelementptr i8, i8* %scevgep5.168, i64 1
  br i1 true, label %.preheader.170, label %.loopexit.loopexitsplit

.preheader.170:                                   ; preds = %700
  %scevgep2.170 = getelementptr i8, i8* %scevgep1.169, i64 -1
  %scevgep6.170 = getelementptr i8, i8* %scevgep5.169, i64 -1
  call void @unroll_loop(i32 83)
  %701 = load i8, i8* %scevgep6.170, align 1
  store i8 %701, i8* %scevgep2.170, align 1
  %702 = sext i8 %701 to i32
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %.preheader..loopexit.loopexit_crit_edge, label %704

; <label>:704:                                    ; preds = %.preheader.170
  call void @__loop_iteration_test___5()
  %scevgep1.170 = getelementptr i8, i8* %scevgep1.169, i64 1
  %scevgep5.170 = getelementptr i8, i8* %scevgep5.169, i64 1
  br i1 true, label %.preheader.171, label %.loopexit.loopexitsplit

.preheader.171:                                   ; preds = %704
  %scevgep2.171 = getelementptr i8, i8* %scevgep1.170, i64 -1
  %scevgep6.171 = getelementptr i8, i8* %scevgep5.170, i64 -1
  call void @unroll_loop(i32 83)
  %705 = load i8, i8* %scevgep6.171, align 1
  store i8 %705, i8* %scevgep2.171, align 1
  %706 = sext i8 %705 to i32
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %.preheader..loopexit.loopexit_crit_edge, label %708

; <label>:708:                                    ; preds = %.preheader.171
  call void @__loop_iteration_test___5()
  %scevgep1.171 = getelementptr i8, i8* %scevgep1.170, i64 1
  %scevgep5.171 = getelementptr i8, i8* %scevgep5.170, i64 1
  br i1 true, label %.preheader.172, label %.loopexit.loopexitsplit

.preheader.172:                                   ; preds = %708
  %scevgep2.172 = getelementptr i8, i8* %scevgep1.171, i64 -1
  %scevgep6.172 = getelementptr i8, i8* %scevgep5.171, i64 -1
  call void @unroll_loop(i32 83)
  %709 = load i8, i8* %scevgep6.172, align 1
  store i8 %709, i8* %scevgep2.172, align 1
  %710 = sext i8 %709 to i32
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %.preheader..loopexit.loopexit_crit_edge, label %712

; <label>:712:                                    ; preds = %.preheader.172
  call void @__loop_iteration_test___5()
  %scevgep1.172 = getelementptr i8, i8* %scevgep1.171, i64 1
  %scevgep5.172 = getelementptr i8, i8* %scevgep5.171, i64 1
  br i1 true, label %.preheader.173, label %.loopexit.loopexitsplit

.preheader.173:                                   ; preds = %712
  %scevgep2.173 = getelementptr i8, i8* %scevgep1.172, i64 -1
  %scevgep6.173 = getelementptr i8, i8* %scevgep5.172, i64 -1
  call void @unroll_loop(i32 83)
  %713 = load i8, i8* %scevgep6.173, align 1
  store i8 %713, i8* %scevgep2.173, align 1
  %714 = sext i8 %713 to i32
  %715 = icmp eq i32 %714, 0
  br i1 %715, label %.preheader..loopexit.loopexit_crit_edge, label %716

; <label>:716:                                    ; preds = %.preheader.173
  call void @__loop_iteration_test___5()
  %scevgep1.173 = getelementptr i8, i8* %scevgep1.172, i64 1
  %scevgep5.173 = getelementptr i8, i8* %scevgep5.172, i64 1
  br i1 true, label %.preheader.174, label %.loopexit.loopexitsplit

.preheader.174:                                   ; preds = %716
  %scevgep2.174 = getelementptr i8, i8* %scevgep1.173, i64 -1
  %scevgep6.174 = getelementptr i8, i8* %scevgep5.173, i64 -1
  call void @unroll_loop(i32 83)
  %717 = load i8, i8* %scevgep6.174, align 1
  store i8 %717, i8* %scevgep2.174, align 1
  %718 = sext i8 %717 to i32
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %.preheader..loopexit.loopexit_crit_edge, label %720

; <label>:720:                                    ; preds = %.preheader.174
  call void @__loop_iteration_test___5()
  %scevgep1.174 = getelementptr i8, i8* %scevgep1.173, i64 1
  %scevgep5.174 = getelementptr i8, i8* %scevgep5.173, i64 1
  br i1 true, label %.preheader.175, label %.loopexit.loopexitsplit

.preheader.175:                                   ; preds = %720
  %scevgep2.175 = getelementptr i8, i8* %scevgep1.174, i64 -1
  %scevgep6.175 = getelementptr i8, i8* %scevgep5.174, i64 -1
  call void @unroll_loop(i32 83)
  %721 = load i8, i8* %scevgep6.175, align 1
  store i8 %721, i8* %scevgep2.175, align 1
  %722 = sext i8 %721 to i32
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %.preheader..loopexit.loopexit_crit_edge, label %724

; <label>:724:                                    ; preds = %.preheader.175
  call void @__loop_iteration_test___5()
  %scevgep1.175 = getelementptr i8, i8* %scevgep1.174, i64 1
  %scevgep5.175 = getelementptr i8, i8* %scevgep5.174, i64 1
  br i1 true, label %.preheader.176, label %.loopexit.loopexitsplit

.preheader.176:                                   ; preds = %724
  %scevgep2.176 = getelementptr i8, i8* %scevgep1.175, i64 -1
  %scevgep6.176 = getelementptr i8, i8* %scevgep5.175, i64 -1
  call void @unroll_loop(i32 83)
  %725 = load i8, i8* %scevgep6.176, align 1
  store i8 %725, i8* %scevgep2.176, align 1
  %726 = sext i8 %725 to i32
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %.preheader..loopexit.loopexit_crit_edge, label %728

; <label>:728:                                    ; preds = %.preheader.176
  call void @__loop_iteration_test___5()
  %scevgep1.176 = getelementptr i8, i8* %scevgep1.175, i64 1
  %scevgep5.176 = getelementptr i8, i8* %scevgep5.175, i64 1
  br i1 true, label %.preheader.177, label %.loopexit.loopexitsplit

.preheader.177:                                   ; preds = %728
  %scevgep2.177 = getelementptr i8, i8* %scevgep1.176, i64 -1
  %scevgep6.177 = getelementptr i8, i8* %scevgep5.176, i64 -1
  call void @unroll_loop(i32 83)
  %729 = load i8, i8* %scevgep6.177, align 1
  store i8 %729, i8* %scevgep2.177, align 1
  %730 = sext i8 %729 to i32
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %.preheader..loopexit.loopexit_crit_edge, label %732

; <label>:732:                                    ; preds = %.preheader.177
  call void @__loop_iteration_test___5()
  %scevgep1.177 = getelementptr i8, i8* %scevgep1.176, i64 1
  %scevgep5.177 = getelementptr i8, i8* %scevgep5.176, i64 1
  br i1 true, label %.preheader.178, label %.loopexit.loopexitsplit

.preheader.178:                                   ; preds = %732
  %scevgep2.178 = getelementptr i8, i8* %scevgep1.177, i64 -1
  %scevgep6.178 = getelementptr i8, i8* %scevgep5.177, i64 -1
  call void @unroll_loop(i32 83)
  %733 = load i8, i8* %scevgep6.178, align 1
  store i8 %733, i8* %scevgep2.178, align 1
  %734 = sext i8 %733 to i32
  %735 = icmp eq i32 %734, 0
  br i1 %735, label %.preheader..loopexit.loopexit_crit_edge, label %736

; <label>:736:                                    ; preds = %.preheader.178
  call void @__loop_iteration_test___5()
  %scevgep1.178 = getelementptr i8, i8* %scevgep1.177, i64 1
  %scevgep5.178 = getelementptr i8, i8* %scevgep5.177, i64 1
  br i1 true, label %.preheader.179, label %.loopexit.loopexitsplit

.preheader.179:                                   ; preds = %736
  %scevgep2.179 = getelementptr i8, i8* %scevgep1.178, i64 -1
  %scevgep6.179 = getelementptr i8, i8* %scevgep5.178, i64 -1
  call void @unroll_loop(i32 83)
  %737 = load i8, i8* %scevgep6.179, align 1
  store i8 %737, i8* %scevgep2.179, align 1
  %738 = sext i8 %737 to i32
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %.preheader..loopexit.loopexit_crit_edge, label %740

; <label>:740:                                    ; preds = %.preheader.179
  call void @__loop_iteration_test___5()
  %scevgep1.179 = getelementptr i8, i8* %scevgep1.178, i64 1
  %scevgep5.179 = getelementptr i8, i8* %scevgep5.178, i64 1
  br i1 true, label %.preheader.180, label %.loopexit.loopexitsplit

.preheader.180:                                   ; preds = %740
  %scevgep2.180 = getelementptr i8, i8* %scevgep1.179, i64 -1
  %scevgep6.180 = getelementptr i8, i8* %scevgep5.179, i64 -1
  call void @unroll_loop(i32 83)
  %741 = load i8, i8* %scevgep6.180, align 1
  store i8 %741, i8* %scevgep2.180, align 1
  %742 = sext i8 %741 to i32
  %743 = icmp eq i32 %742, 0
  br i1 %743, label %.preheader..loopexit.loopexit_crit_edge, label %744

; <label>:744:                                    ; preds = %.preheader.180
  call void @__loop_iteration_test___5()
  %scevgep1.180 = getelementptr i8, i8* %scevgep1.179, i64 1
  %scevgep5.180 = getelementptr i8, i8* %scevgep5.179, i64 1
  br i1 true, label %.preheader.181, label %.loopexit.loopexitsplit

.preheader.181:                                   ; preds = %744
  %scevgep2.181 = getelementptr i8, i8* %scevgep1.180, i64 -1
  %scevgep6.181 = getelementptr i8, i8* %scevgep5.180, i64 -1
  call void @unroll_loop(i32 83)
  %745 = load i8, i8* %scevgep6.181, align 1
  store i8 %745, i8* %scevgep2.181, align 1
  %746 = sext i8 %745 to i32
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %.preheader..loopexit.loopexit_crit_edge, label %748

; <label>:748:                                    ; preds = %.preheader.181
  call void @__loop_iteration_test___5()
  %scevgep1.181 = getelementptr i8, i8* %scevgep1.180, i64 1
  %scevgep5.181 = getelementptr i8, i8* %scevgep5.180, i64 1
  br i1 true, label %.preheader.182, label %.loopexit.loopexitsplit

.preheader.182:                                   ; preds = %748
  %scevgep2.182 = getelementptr i8, i8* %scevgep1.181, i64 -1
  %scevgep6.182 = getelementptr i8, i8* %scevgep5.181, i64 -1
  call void @unroll_loop(i32 83)
  %749 = load i8, i8* %scevgep6.182, align 1
  store i8 %749, i8* %scevgep2.182, align 1
  %750 = sext i8 %749 to i32
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %.preheader..loopexit.loopexit_crit_edge, label %752

; <label>:752:                                    ; preds = %.preheader.182
  call void @__loop_iteration_test___5()
  %scevgep1.182 = getelementptr i8, i8* %scevgep1.181, i64 1
  %scevgep5.182 = getelementptr i8, i8* %scevgep5.181, i64 1
  br i1 true, label %.preheader.183, label %.loopexit.loopexitsplit

.preheader.183:                                   ; preds = %752
  %scevgep2.183 = getelementptr i8, i8* %scevgep1.182, i64 -1
  %scevgep6.183 = getelementptr i8, i8* %scevgep5.182, i64 -1
  call void @unroll_loop(i32 83)
  %753 = load i8, i8* %scevgep6.183, align 1
  store i8 %753, i8* %scevgep2.183, align 1
  %754 = sext i8 %753 to i32
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %.preheader..loopexit.loopexit_crit_edge, label %756

; <label>:756:                                    ; preds = %.preheader.183
  call void @__loop_iteration_test___5()
  %scevgep1.183 = getelementptr i8, i8* %scevgep1.182, i64 1
  %scevgep5.183 = getelementptr i8, i8* %scevgep5.182, i64 1
  br i1 true, label %.preheader.184, label %.loopexit.loopexitsplit

.preheader.184:                                   ; preds = %756
  %scevgep2.184 = getelementptr i8, i8* %scevgep1.183, i64 -1
  %scevgep6.184 = getelementptr i8, i8* %scevgep5.183, i64 -1
  call void @unroll_loop(i32 83)
  %757 = load i8, i8* %scevgep6.184, align 1
  store i8 %757, i8* %scevgep2.184, align 1
  %758 = sext i8 %757 to i32
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %.preheader..loopexit.loopexit_crit_edge, label %760

; <label>:760:                                    ; preds = %.preheader.184
  call void @__loop_iteration_test___5()
  %scevgep1.184 = getelementptr i8, i8* %scevgep1.183, i64 1
  %scevgep5.184 = getelementptr i8, i8* %scevgep5.183, i64 1
  br i1 true, label %.preheader.185, label %.loopexit.loopexitsplit

.preheader.185:                                   ; preds = %760
  %scevgep2.185 = getelementptr i8, i8* %scevgep1.184, i64 -1
  %scevgep6.185 = getelementptr i8, i8* %scevgep5.184, i64 -1
  call void @unroll_loop(i32 83)
  %761 = load i8, i8* %scevgep6.185, align 1
  store i8 %761, i8* %scevgep2.185, align 1
  %762 = sext i8 %761 to i32
  %763 = icmp eq i32 %762, 0
  br i1 %763, label %.preheader..loopexit.loopexit_crit_edge, label %764

; <label>:764:                                    ; preds = %.preheader.185
  call void @__loop_iteration_test___5()
  %scevgep1.185 = getelementptr i8, i8* %scevgep1.184, i64 1
  %scevgep5.185 = getelementptr i8, i8* %scevgep5.184, i64 1
  br i1 true, label %.preheader.186, label %.loopexit.loopexitsplit

.preheader.186:                                   ; preds = %764
  %scevgep2.186 = getelementptr i8, i8* %scevgep1.185, i64 -1
  %scevgep6.186 = getelementptr i8, i8* %scevgep5.185, i64 -1
  call void @unroll_loop(i32 83)
  %765 = load i8, i8* %scevgep6.186, align 1
  store i8 %765, i8* %scevgep2.186, align 1
  %766 = sext i8 %765 to i32
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %.preheader..loopexit.loopexit_crit_edge, label %768

; <label>:768:                                    ; preds = %.preheader.186
  call void @__loop_iteration_test___5()
  %scevgep1.186 = getelementptr i8, i8* %scevgep1.185, i64 1
  %scevgep5.186 = getelementptr i8, i8* %scevgep5.185, i64 1
  br i1 true, label %.preheader.187, label %.loopexit.loopexitsplit

.preheader.187:                                   ; preds = %768
  %scevgep2.187 = getelementptr i8, i8* %scevgep1.186, i64 -1
  %scevgep6.187 = getelementptr i8, i8* %scevgep5.186, i64 -1
  call void @unroll_loop(i32 83)
  %769 = load i8, i8* %scevgep6.187, align 1
  store i8 %769, i8* %scevgep2.187, align 1
  %770 = sext i8 %769 to i32
  %771 = icmp eq i32 %770, 0
  br i1 %771, label %.preheader..loopexit.loopexit_crit_edge, label %772

; <label>:772:                                    ; preds = %.preheader.187
  call void @__loop_iteration_test___5()
  %scevgep1.187 = getelementptr i8, i8* %scevgep1.186, i64 1
  %scevgep5.187 = getelementptr i8, i8* %scevgep5.186, i64 1
  br i1 true, label %.preheader.188, label %.loopexit.loopexitsplit

.preheader.188:                                   ; preds = %772
  %scevgep2.188 = getelementptr i8, i8* %scevgep1.187, i64 -1
  %scevgep6.188 = getelementptr i8, i8* %scevgep5.187, i64 -1
  call void @unroll_loop(i32 83)
  %773 = load i8, i8* %scevgep6.188, align 1
  store i8 %773, i8* %scevgep2.188, align 1
  %774 = sext i8 %773 to i32
  %775 = icmp eq i32 %774, 0
  br i1 %775, label %.preheader..loopexit.loopexit_crit_edge, label %776

; <label>:776:                                    ; preds = %.preheader.188
  call void @__loop_iteration_test___5()
  %scevgep1.188 = getelementptr i8, i8* %scevgep1.187, i64 1
  %scevgep5.188 = getelementptr i8, i8* %scevgep5.187, i64 1
  br i1 true, label %.preheader.189, label %.loopexit.loopexitsplit

.preheader.189:                                   ; preds = %776
  %scevgep2.189 = getelementptr i8, i8* %scevgep1.188, i64 -1
  %scevgep6.189 = getelementptr i8, i8* %scevgep5.188, i64 -1
  call void @unroll_loop(i32 83)
  %777 = load i8, i8* %scevgep6.189, align 1
  store i8 %777, i8* %scevgep2.189, align 1
  %778 = sext i8 %777 to i32
  %779 = icmp eq i32 %778, 0
  br i1 %779, label %.preheader..loopexit.loopexit_crit_edge, label %780

; <label>:780:                                    ; preds = %.preheader.189
  call void @__loop_iteration_test___5()
  %scevgep1.189 = getelementptr i8, i8* %scevgep1.188, i64 1
  %scevgep5.189 = getelementptr i8, i8* %scevgep5.188, i64 1
  br i1 true, label %.preheader.190, label %.loopexit.loopexitsplit

.preheader.190:                                   ; preds = %780
  %scevgep2.190 = getelementptr i8, i8* %scevgep1.189, i64 -1
  %scevgep6.190 = getelementptr i8, i8* %scevgep5.189, i64 -1
  call void @unroll_loop(i32 83)
  %781 = load i8, i8* %scevgep6.190, align 1
  store i8 %781, i8* %scevgep2.190, align 1
  %782 = sext i8 %781 to i32
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %.preheader..loopexit.loopexit_crit_edge, label %784

; <label>:784:                                    ; preds = %.preheader.190
  call void @__loop_iteration_test___5()
  %scevgep1.190 = getelementptr i8, i8* %scevgep1.189, i64 1
  %scevgep5.190 = getelementptr i8, i8* %scevgep5.189, i64 1
  br i1 true, label %.preheader.191, label %.loopexit.loopexitsplit

.preheader.191:                                   ; preds = %784
  %scevgep2.191 = getelementptr i8, i8* %scevgep1.190, i64 -1
  %scevgep6.191 = getelementptr i8, i8* %scevgep5.190, i64 -1
  call void @unroll_loop(i32 83)
  %785 = load i8, i8* %scevgep6.191, align 1
  store i8 %785, i8* %scevgep2.191, align 1
  %786 = sext i8 %785 to i32
  %787 = icmp eq i32 %786, 0
  br i1 %787, label %.preheader..loopexit.loopexit_crit_edge, label %788

; <label>:788:                                    ; preds = %.preheader.191
  call void @__loop_iteration_test___5()
  %scevgep1.191 = getelementptr i8, i8* %scevgep1.190, i64 1
  %scevgep5.191 = getelementptr i8, i8* %scevgep5.190, i64 1
  br i1 true, label %.preheader.192, label %.loopexit.loopexitsplit

.preheader.192:                                   ; preds = %788
  %scevgep2.192 = getelementptr i8, i8* %scevgep1.191, i64 -1
  %scevgep6.192 = getelementptr i8, i8* %scevgep5.191, i64 -1
  call void @unroll_loop(i32 83)
  %789 = load i8, i8* %scevgep6.192, align 1
  store i8 %789, i8* %scevgep2.192, align 1
  %790 = sext i8 %789 to i32
  %791 = icmp eq i32 %790, 0
  br i1 %791, label %.preheader..loopexit.loopexit_crit_edge, label %792

; <label>:792:                                    ; preds = %.preheader.192
  call void @__loop_iteration_test___5()
  %scevgep1.192 = getelementptr i8, i8* %scevgep1.191, i64 1
  %scevgep5.192 = getelementptr i8, i8* %scevgep5.191, i64 1
  br i1 true, label %.preheader.193, label %.loopexit.loopexitsplit

.preheader.193:                                   ; preds = %792
  %scevgep2.193 = getelementptr i8, i8* %scevgep1.192, i64 -1
  %scevgep6.193 = getelementptr i8, i8* %scevgep5.192, i64 -1
  call void @unroll_loop(i32 83)
  %793 = load i8, i8* %scevgep6.193, align 1
  store i8 %793, i8* %scevgep2.193, align 1
  %794 = sext i8 %793 to i32
  %795 = icmp eq i32 %794, 0
  br i1 %795, label %.preheader..loopexit.loopexit_crit_edge, label %796

; <label>:796:                                    ; preds = %.preheader.193
  call void @__loop_iteration_test___5()
  %scevgep1.193 = getelementptr i8, i8* %scevgep1.192, i64 1
  %scevgep5.193 = getelementptr i8, i8* %scevgep5.192, i64 1
  br i1 true, label %.preheader.194, label %.loopexit.loopexitsplit

.preheader.194:                                   ; preds = %796
  %scevgep2.194 = getelementptr i8, i8* %scevgep1.193, i64 -1
  %scevgep6.194 = getelementptr i8, i8* %scevgep5.193, i64 -1
  call void @unroll_loop(i32 83)
  %797 = load i8, i8* %scevgep6.194, align 1
  store i8 %797, i8* %scevgep2.194, align 1
  %798 = sext i8 %797 to i32
  %799 = icmp eq i32 %798, 0
  br i1 %799, label %.preheader..loopexit.loopexit_crit_edge, label %800

; <label>:800:                                    ; preds = %.preheader.194
  call void @__loop_iteration_test___5()
  %scevgep1.194 = getelementptr i8, i8* %scevgep1.193, i64 1
  %scevgep5.194 = getelementptr i8, i8* %scevgep5.193, i64 1
  br i1 true, label %.preheader.195, label %.loopexit.loopexitsplit

.preheader.195:                                   ; preds = %800
  %scevgep2.195 = getelementptr i8, i8* %scevgep1.194, i64 -1
  %scevgep6.195 = getelementptr i8, i8* %scevgep5.194, i64 -1
  call void @unroll_loop(i32 83)
  %801 = load i8, i8* %scevgep6.195, align 1
  store i8 %801, i8* %scevgep2.195, align 1
  %802 = sext i8 %801 to i32
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %.preheader..loopexit.loopexit_crit_edge, label %804

; <label>:804:                                    ; preds = %.preheader.195
  call void @__loop_iteration_test___5()
  %scevgep1.195 = getelementptr i8, i8* %scevgep1.194, i64 1
  %scevgep5.195 = getelementptr i8, i8* %scevgep5.194, i64 1
  br i1 true, label %.preheader.196, label %.loopexit.loopexitsplit

.preheader.196:                                   ; preds = %804
  %scevgep2.196 = getelementptr i8, i8* %scevgep1.195, i64 -1
  %scevgep6.196 = getelementptr i8, i8* %scevgep5.195, i64 -1
  call void @unroll_loop(i32 83)
  %805 = load i8, i8* %scevgep6.196, align 1
  store i8 %805, i8* %scevgep2.196, align 1
  %806 = sext i8 %805 to i32
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %.preheader..loopexit.loopexit_crit_edge, label %808

; <label>:808:                                    ; preds = %.preheader.196
  call void @__loop_iteration_test___5()
  %scevgep1.196 = getelementptr i8, i8* %scevgep1.195, i64 1
  %scevgep5.196 = getelementptr i8, i8* %scevgep5.195, i64 1
  br i1 true, label %.preheader.197, label %.loopexit.loopexitsplit

.preheader.197:                                   ; preds = %808
  %scevgep2.197 = getelementptr i8, i8* %scevgep1.196, i64 -1
  %scevgep6.197 = getelementptr i8, i8* %scevgep5.196, i64 -1
  call void @unroll_loop(i32 83)
  %809 = load i8, i8* %scevgep6.197, align 1
  store i8 %809, i8* %scevgep2.197, align 1
  %810 = sext i8 %809 to i32
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %.preheader..loopexit.loopexit_crit_edge, label %812

; <label>:812:                                    ; preds = %.preheader.197
  call void @__loop_iteration_test___5()
  %scevgep1.197 = getelementptr i8, i8* %scevgep1.196, i64 1
  %scevgep5.197 = getelementptr i8, i8* %scevgep5.196, i64 1
  br i1 true, label %.preheader.198, label %.loopexit.loopexitsplit

.preheader.198:                                   ; preds = %812
  %scevgep2.198 = getelementptr i8, i8* %scevgep1.197, i64 -1
  %scevgep6.198 = getelementptr i8, i8* %scevgep5.197, i64 -1
  call void @unroll_loop(i32 83)
  %813 = load i8, i8* %scevgep6.198, align 1
  store i8 %813, i8* %scevgep2.198, align 1
  %814 = sext i8 %813 to i32
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %.preheader..loopexit.loopexit_crit_edge, label %816

; <label>:816:                                    ; preds = %.preheader.198
  call void @__loop_iteration_test___5()
  %scevgep1.198 = getelementptr i8, i8* %scevgep1.197, i64 1
  %scevgep5.198 = getelementptr i8, i8* %scevgep5.197, i64 1
  br i1 true, label %.preheader.199, label %.loopexit.loopexitsplit

.preheader.199:                                   ; preds = %816
  %scevgep2.199 = getelementptr i8, i8* %scevgep1.198, i64 -1
  %scevgep6.199 = getelementptr i8, i8* %scevgep5.198, i64 -1
  call void @unroll_loop(i32 83)
  %817 = load i8, i8* %scevgep6.199, align 1
  store i8 %817, i8* %scevgep2.199, align 1
  %818 = sext i8 %817 to i32
  %819 = icmp eq i32 %818, 0
  br i1 %819, label %.preheader..loopexit.loopexit_crit_edge, label %820

; <label>:820:                                    ; preds = %.preheader.199
  call void @__loop_iteration_test___5()
  %scevgep1.199 = getelementptr i8, i8* %scevgep1.198, i64 1
  %scevgep5.199 = getelementptr i8, i8* %scevgep5.198, i64 1
  br i1 true, label %.preheader.200, label %.loopexit.loopexitsplit

.preheader.200:                                   ; preds = %820
  %scevgep2.200 = getelementptr i8, i8* %scevgep1.199, i64 -1
  %scevgep6.200 = getelementptr i8, i8* %scevgep5.199, i64 -1
  call void @unroll_loop(i32 83)
  %821 = load i8, i8* %scevgep6.200, align 1
  store i8 %821, i8* %scevgep2.200, align 1
  %822 = sext i8 %821 to i32
  %823 = icmp eq i32 %822, 0
  br i1 %823, label %.preheader..loopexit.loopexit_crit_edge, label %824

; <label>:824:                                    ; preds = %.preheader.200
  call void @__loop_iteration_test___5()
  %scevgep1.200 = getelementptr i8, i8* %scevgep1.199, i64 1
  %scevgep5.200 = getelementptr i8, i8* %scevgep5.199, i64 1
  br i1 true, label %.preheader.201, label %.loopexit.loopexitsplit

.preheader.201:                                   ; preds = %824
  %scevgep2.201 = getelementptr i8, i8* %scevgep1.200, i64 -1
  %scevgep6.201 = getelementptr i8, i8* %scevgep5.200, i64 -1
  call void @unroll_loop(i32 83)
  %825 = load i8, i8* %scevgep6.201, align 1
  store i8 %825, i8* %scevgep2.201, align 1
  %826 = sext i8 %825 to i32
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %.preheader..loopexit.loopexit_crit_edge, label %828

; <label>:828:                                    ; preds = %.preheader.201
  call void @__loop_iteration_test___5()
  %scevgep1.201 = getelementptr i8, i8* %scevgep1.200, i64 1
  %scevgep5.201 = getelementptr i8, i8* %scevgep5.200, i64 1
  br i1 true, label %.preheader.202, label %.loopexit.loopexitsplit

.preheader.202:                                   ; preds = %828
  %scevgep2.202 = getelementptr i8, i8* %scevgep1.201, i64 -1
  %scevgep6.202 = getelementptr i8, i8* %scevgep5.201, i64 -1
  call void @unroll_loop(i32 83)
  %829 = load i8, i8* %scevgep6.202, align 1
  store i8 %829, i8* %scevgep2.202, align 1
  %830 = sext i8 %829 to i32
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %.preheader..loopexit.loopexit_crit_edge, label %832

; <label>:832:                                    ; preds = %.preheader.202
  call void @__loop_iteration_test___5()
  %scevgep1.202 = getelementptr i8, i8* %scevgep1.201, i64 1
  %scevgep5.202 = getelementptr i8, i8* %scevgep5.201, i64 1
  br i1 true, label %.preheader.203, label %.loopexit.loopexitsplit

.preheader.203:                                   ; preds = %832
  %scevgep2.203 = getelementptr i8, i8* %scevgep1.202, i64 -1
  %scevgep6.203 = getelementptr i8, i8* %scevgep5.202, i64 -1
  call void @unroll_loop(i32 83)
  %833 = load i8, i8* %scevgep6.203, align 1
  store i8 %833, i8* %scevgep2.203, align 1
  %834 = sext i8 %833 to i32
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %.preheader..loopexit.loopexit_crit_edge, label %836

; <label>:836:                                    ; preds = %.preheader.203
  call void @__loop_iteration_test___5()
  %scevgep1.203 = getelementptr i8, i8* %scevgep1.202, i64 1
  %scevgep5.203 = getelementptr i8, i8* %scevgep5.202, i64 1
  br i1 true, label %.preheader.204, label %.loopexit.loopexitsplit

.preheader.204:                                   ; preds = %836
  %scevgep2.204 = getelementptr i8, i8* %scevgep1.203, i64 -1
  %scevgep6.204 = getelementptr i8, i8* %scevgep5.203, i64 -1
  call void @unroll_loop(i32 83)
  %837 = load i8, i8* %scevgep6.204, align 1
  store i8 %837, i8* %scevgep2.204, align 1
  %838 = sext i8 %837 to i32
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %.preheader..loopexit.loopexit_crit_edge, label %840

; <label>:840:                                    ; preds = %.preheader.204
  call void @__loop_iteration_test___5()
  %scevgep1.204 = getelementptr i8, i8* %scevgep1.203, i64 1
  %scevgep5.204 = getelementptr i8, i8* %scevgep5.203, i64 1
  br i1 true, label %.preheader.205, label %.loopexit.loopexitsplit

.preheader.205:                                   ; preds = %840
  %scevgep2.205 = getelementptr i8, i8* %scevgep1.204, i64 -1
  %scevgep6.205 = getelementptr i8, i8* %scevgep5.204, i64 -1
  call void @unroll_loop(i32 83)
  %841 = load i8, i8* %scevgep6.205, align 1
  store i8 %841, i8* %scevgep2.205, align 1
  %842 = sext i8 %841 to i32
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %.preheader..loopexit.loopexit_crit_edge, label %844

; <label>:844:                                    ; preds = %.preheader.205
  call void @__loop_iteration_test___5()
  %scevgep1.205 = getelementptr i8, i8* %scevgep1.204, i64 1
  %scevgep5.205 = getelementptr i8, i8* %scevgep5.204, i64 1
  br i1 true, label %.preheader.206, label %.loopexit.loopexitsplit

.preheader.206:                                   ; preds = %844
  %scevgep2.206 = getelementptr i8, i8* %scevgep1.205, i64 -1
  %scevgep6.206 = getelementptr i8, i8* %scevgep5.205, i64 -1
  call void @unroll_loop(i32 83)
  %845 = load i8, i8* %scevgep6.206, align 1
  store i8 %845, i8* %scevgep2.206, align 1
  %846 = sext i8 %845 to i32
  %847 = icmp eq i32 %846, 0
  br i1 %847, label %.preheader..loopexit.loopexit_crit_edge, label %848

; <label>:848:                                    ; preds = %.preheader.206
  call void @__loop_iteration_test___5()
  %scevgep1.206 = getelementptr i8, i8* %scevgep1.205, i64 1
  %scevgep5.206 = getelementptr i8, i8* %scevgep5.205, i64 1
  br i1 true, label %.preheader.207, label %.loopexit.loopexitsplit

.preheader.207:                                   ; preds = %848
  %scevgep2.207 = getelementptr i8, i8* %scevgep1.206, i64 -1
  %scevgep6.207 = getelementptr i8, i8* %scevgep5.206, i64 -1
  call void @unroll_loop(i32 83)
  %849 = load i8, i8* %scevgep6.207, align 1
  store i8 %849, i8* %scevgep2.207, align 1
  %850 = sext i8 %849 to i32
  %851 = icmp eq i32 %850, 0
  br i1 %851, label %.preheader..loopexit.loopexit_crit_edge, label %852

; <label>:852:                                    ; preds = %.preheader.207
  call void @__loop_iteration_test___5()
  %scevgep1.207 = getelementptr i8, i8* %scevgep1.206, i64 1
  %scevgep5.207 = getelementptr i8, i8* %scevgep5.206, i64 1
  br i1 true, label %.preheader.208, label %.loopexit.loopexitsplit

.preheader.208:                                   ; preds = %852
  %scevgep2.208 = getelementptr i8, i8* %scevgep1.207, i64 -1
  %scevgep6.208 = getelementptr i8, i8* %scevgep5.207, i64 -1
  call void @unroll_loop(i32 83)
  %853 = load i8, i8* %scevgep6.208, align 1
  store i8 %853, i8* %scevgep2.208, align 1
  %854 = sext i8 %853 to i32
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %.preheader..loopexit.loopexit_crit_edge, label %856

; <label>:856:                                    ; preds = %.preheader.208
  call void @__loop_iteration_test___5()
  %scevgep1.208 = getelementptr i8, i8* %scevgep1.207, i64 1
  %scevgep5.208 = getelementptr i8, i8* %scevgep5.207, i64 1
  br i1 true, label %.preheader.209, label %.loopexit.loopexitsplit

.preheader.209:                                   ; preds = %856
  %scevgep2.209 = getelementptr i8, i8* %scevgep1.208, i64 -1
  %scevgep6.209 = getelementptr i8, i8* %scevgep5.208, i64 -1
  call void @unroll_loop(i32 83)
  %857 = load i8, i8* %scevgep6.209, align 1
  store i8 %857, i8* %scevgep2.209, align 1
  %858 = sext i8 %857 to i32
  %859 = icmp eq i32 %858, 0
  br i1 %859, label %.preheader..loopexit.loopexit_crit_edge, label %860

; <label>:860:                                    ; preds = %.preheader.209
  call void @__loop_iteration_test___5()
  %scevgep1.209 = getelementptr i8, i8* %scevgep1.208, i64 1
  %scevgep5.209 = getelementptr i8, i8* %scevgep5.208, i64 1
  br i1 true, label %.preheader.210, label %.loopexit.loopexitsplit

.preheader.210:                                   ; preds = %860
  %scevgep2.210 = getelementptr i8, i8* %scevgep1.209, i64 -1
  %scevgep6.210 = getelementptr i8, i8* %scevgep5.209, i64 -1
  call void @unroll_loop(i32 83)
  %861 = load i8, i8* %scevgep6.210, align 1
  store i8 %861, i8* %scevgep2.210, align 1
  %862 = sext i8 %861 to i32
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %.preheader..loopexit.loopexit_crit_edge, label %864

; <label>:864:                                    ; preds = %.preheader.210
  call void @__loop_iteration_test___5()
  %scevgep1.210 = getelementptr i8, i8* %scevgep1.209, i64 1
  %scevgep5.210 = getelementptr i8, i8* %scevgep5.209, i64 1
  br i1 true, label %.preheader.211, label %.loopexit.loopexitsplit

.preheader.211:                                   ; preds = %864
  %scevgep2.211 = getelementptr i8, i8* %scevgep1.210, i64 -1
  %scevgep6.211 = getelementptr i8, i8* %scevgep5.210, i64 -1
  call void @unroll_loop(i32 83)
  %865 = load i8, i8* %scevgep6.211, align 1
  store i8 %865, i8* %scevgep2.211, align 1
  %866 = sext i8 %865 to i32
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %.preheader..loopexit.loopexit_crit_edge, label %868

; <label>:868:                                    ; preds = %.preheader.211
  call void @__loop_iteration_test___5()
  %scevgep1.211 = getelementptr i8, i8* %scevgep1.210, i64 1
  %scevgep5.211 = getelementptr i8, i8* %scevgep5.210, i64 1
  br i1 true, label %.preheader.212, label %.loopexit.loopexitsplit

.preheader.212:                                   ; preds = %868
  %scevgep2.212 = getelementptr i8, i8* %scevgep1.211, i64 -1
  %scevgep6.212 = getelementptr i8, i8* %scevgep5.211, i64 -1
  call void @unroll_loop(i32 83)
  %869 = load i8, i8* %scevgep6.212, align 1
  store i8 %869, i8* %scevgep2.212, align 1
  %870 = sext i8 %869 to i32
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %.preheader..loopexit.loopexit_crit_edge, label %872

; <label>:872:                                    ; preds = %.preheader.212
  call void @__loop_iteration_test___5()
  %scevgep1.212 = getelementptr i8, i8* %scevgep1.211, i64 1
  %scevgep5.212 = getelementptr i8, i8* %scevgep5.211, i64 1
  br i1 true, label %.preheader.213, label %.loopexit.loopexitsplit

.preheader.213:                                   ; preds = %872
  %scevgep2.213 = getelementptr i8, i8* %scevgep1.212, i64 -1
  %scevgep6.213 = getelementptr i8, i8* %scevgep5.212, i64 -1
  call void @unroll_loop(i32 83)
  %873 = load i8, i8* %scevgep6.213, align 1
  store i8 %873, i8* %scevgep2.213, align 1
  %874 = sext i8 %873 to i32
  %875 = icmp eq i32 %874, 0
  br i1 %875, label %.preheader..loopexit.loopexit_crit_edge, label %876

; <label>:876:                                    ; preds = %.preheader.213
  call void @__loop_iteration_test___5()
  %scevgep1.213 = getelementptr i8, i8* %scevgep1.212, i64 1
  %scevgep5.213 = getelementptr i8, i8* %scevgep5.212, i64 1
  br i1 true, label %.preheader.214, label %.loopexit.loopexitsplit

.preheader.214:                                   ; preds = %876
  %scevgep2.214 = getelementptr i8, i8* %scevgep1.213, i64 -1
  %scevgep6.214 = getelementptr i8, i8* %scevgep5.213, i64 -1
  call void @unroll_loop(i32 83)
  %877 = load i8, i8* %scevgep6.214, align 1
  store i8 %877, i8* %scevgep2.214, align 1
  %878 = sext i8 %877 to i32
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %.preheader..loopexit.loopexit_crit_edge, label %880

; <label>:880:                                    ; preds = %.preheader.214
  call void @__loop_iteration_test___5()
  %scevgep1.214 = getelementptr i8, i8* %scevgep1.213, i64 1
  %scevgep5.214 = getelementptr i8, i8* %scevgep5.213, i64 1
  br i1 true, label %.preheader.215, label %.loopexit.loopexitsplit

.preheader.215:                                   ; preds = %880
  %scevgep2.215 = getelementptr i8, i8* %scevgep1.214, i64 -1
  %scevgep6.215 = getelementptr i8, i8* %scevgep5.214, i64 -1
  call void @unroll_loop(i32 83)
  %881 = load i8, i8* %scevgep6.215, align 1
  store i8 %881, i8* %scevgep2.215, align 1
  %882 = sext i8 %881 to i32
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %.preheader..loopexit.loopexit_crit_edge, label %884

; <label>:884:                                    ; preds = %.preheader.215
  call void @__loop_iteration_test___5()
  %scevgep1.215 = getelementptr i8, i8* %scevgep1.214, i64 1
  %scevgep5.215 = getelementptr i8, i8* %scevgep5.214, i64 1
  br i1 true, label %.preheader.216, label %.loopexit.loopexitsplit

.preheader.216:                                   ; preds = %884
  %scevgep2.216 = getelementptr i8, i8* %scevgep1.215, i64 -1
  %scevgep6.216 = getelementptr i8, i8* %scevgep5.215, i64 -1
  call void @unroll_loop(i32 83)
  %885 = load i8, i8* %scevgep6.216, align 1
  store i8 %885, i8* %scevgep2.216, align 1
  %886 = sext i8 %885 to i32
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %.preheader..loopexit.loopexit_crit_edge, label %888

; <label>:888:                                    ; preds = %.preheader.216
  call void @__loop_iteration_test___5()
  %scevgep1.216 = getelementptr i8, i8* %scevgep1.215, i64 1
  %scevgep5.216 = getelementptr i8, i8* %scevgep5.215, i64 1
  br i1 true, label %.preheader.217, label %.loopexit.loopexitsplit

.preheader.217:                                   ; preds = %888
  %scevgep2.217 = getelementptr i8, i8* %scevgep1.216, i64 -1
  %scevgep6.217 = getelementptr i8, i8* %scevgep5.216, i64 -1
  call void @unroll_loop(i32 83)
  %889 = load i8, i8* %scevgep6.217, align 1
  store i8 %889, i8* %scevgep2.217, align 1
  %890 = sext i8 %889 to i32
  %891 = icmp eq i32 %890, 0
  br i1 %891, label %.preheader..loopexit.loopexit_crit_edge, label %892

; <label>:892:                                    ; preds = %.preheader.217
  call void @__loop_iteration_test___5()
  %scevgep1.217 = getelementptr i8, i8* %scevgep1.216, i64 1
  %scevgep5.217 = getelementptr i8, i8* %scevgep5.216, i64 1
  br i1 true, label %.preheader.218, label %.loopexit.loopexitsplit

.preheader.218:                                   ; preds = %892
  %scevgep2.218 = getelementptr i8, i8* %scevgep1.217, i64 -1
  %scevgep6.218 = getelementptr i8, i8* %scevgep5.217, i64 -1
  call void @unroll_loop(i32 83)
  %893 = load i8, i8* %scevgep6.218, align 1
  store i8 %893, i8* %scevgep2.218, align 1
  %894 = sext i8 %893 to i32
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %.preheader..loopexit.loopexit_crit_edge, label %896

; <label>:896:                                    ; preds = %.preheader.218
  call void @__loop_iteration_test___5()
  %scevgep1.218 = getelementptr i8, i8* %scevgep1.217, i64 1
  %scevgep5.218 = getelementptr i8, i8* %scevgep5.217, i64 1
  br i1 true, label %.preheader.219, label %.loopexit.loopexitsplit

.preheader.219:                                   ; preds = %896
  %scevgep2.219 = getelementptr i8, i8* %scevgep1.218, i64 -1
  %scevgep6.219 = getelementptr i8, i8* %scevgep5.218, i64 -1
  call void @unroll_loop(i32 83)
  %897 = load i8, i8* %scevgep6.219, align 1
  store i8 %897, i8* %scevgep2.219, align 1
  %898 = sext i8 %897 to i32
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %.preheader..loopexit.loopexit_crit_edge, label %900

; <label>:900:                                    ; preds = %.preheader.219
  call void @__loop_iteration_test___5()
  %scevgep1.219 = getelementptr i8, i8* %scevgep1.218, i64 1
  %scevgep5.219 = getelementptr i8, i8* %scevgep5.218, i64 1
  br i1 true, label %.preheader.220, label %.loopexit.loopexitsplit

.preheader.220:                                   ; preds = %900
  %scevgep2.220 = getelementptr i8, i8* %scevgep1.219, i64 -1
  %scevgep6.220 = getelementptr i8, i8* %scevgep5.219, i64 -1
  call void @unroll_loop(i32 83)
  %901 = load i8, i8* %scevgep6.220, align 1
  store i8 %901, i8* %scevgep2.220, align 1
  %902 = sext i8 %901 to i32
  %903 = icmp eq i32 %902, 0
  br i1 %903, label %.preheader..loopexit.loopexit_crit_edge, label %904

; <label>:904:                                    ; preds = %.preheader.220
  call void @__loop_iteration_test___5()
  %scevgep1.220 = getelementptr i8, i8* %scevgep1.219, i64 1
  %scevgep5.220 = getelementptr i8, i8* %scevgep5.219, i64 1
  br i1 true, label %.preheader.221, label %.loopexit.loopexitsplit

.preheader.221:                                   ; preds = %904
  %scevgep2.221 = getelementptr i8, i8* %scevgep1.220, i64 -1
  %scevgep6.221 = getelementptr i8, i8* %scevgep5.220, i64 -1
  call void @unroll_loop(i32 83)
  %905 = load i8, i8* %scevgep6.221, align 1
  store i8 %905, i8* %scevgep2.221, align 1
  %906 = sext i8 %905 to i32
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %.preheader..loopexit.loopexit_crit_edge, label %908

; <label>:908:                                    ; preds = %.preheader.221
  call void @__loop_iteration_test___5()
  %scevgep1.221 = getelementptr i8, i8* %scevgep1.220, i64 1
  %scevgep5.221 = getelementptr i8, i8* %scevgep5.220, i64 1
  br i1 true, label %.preheader.222, label %.loopexit.loopexitsplit

.preheader.222:                                   ; preds = %908
  %scevgep2.222 = getelementptr i8, i8* %scevgep1.221, i64 -1
  %scevgep6.222 = getelementptr i8, i8* %scevgep5.221, i64 -1
  call void @unroll_loop(i32 83)
  %909 = load i8, i8* %scevgep6.222, align 1
  store i8 %909, i8* %scevgep2.222, align 1
  %910 = sext i8 %909 to i32
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %.preheader..loopexit.loopexit_crit_edge, label %912

; <label>:912:                                    ; preds = %.preheader.222
  call void @__loop_iteration_test___5()
  %scevgep1.222 = getelementptr i8, i8* %scevgep1.221, i64 1
  %scevgep5.222 = getelementptr i8, i8* %scevgep5.221, i64 1
  br i1 true, label %.preheader.223, label %.loopexit.loopexitsplit

.preheader.223:                                   ; preds = %912
  %scevgep2.223 = getelementptr i8, i8* %scevgep1.222, i64 -1
  %scevgep6.223 = getelementptr i8, i8* %scevgep5.222, i64 -1
  call void @unroll_loop(i32 83)
  %913 = load i8, i8* %scevgep6.223, align 1
  store i8 %913, i8* %scevgep2.223, align 1
  %914 = sext i8 %913 to i32
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %.preheader..loopexit.loopexit_crit_edge, label %916

; <label>:916:                                    ; preds = %.preheader.223
  call void @__loop_iteration_test___5()
  %scevgep1.223 = getelementptr i8, i8* %scevgep1.222, i64 1
  %scevgep5.223 = getelementptr i8, i8* %scevgep5.222, i64 1
  br i1 true, label %.preheader.224, label %.loopexit.loopexitsplit

.preheader.224:                                   ; preds = %916
  %scevgep2.224 = getelementptr i8, i8* %scevgep1.223, i64 -1
  %scevgep6.224 = getelementptr i8, i8* %scevgep5.223, i64 -1
  call void @unroll_loop(i32 83)
  %917 = load i8, i8* %scevgep6.224, align 1
  store i8 %917, i8* %scevgep2.224, align 1
  %918 = sext i8 %917 to i32
  %919 = icmp eq i32 %918, 0
  br i1 %919, label %.preheader..loopexit.loopexit_crit_edge, label %920

; <label>:920:                                    ; preds = %.preheader.224
  call void @__loop_iteration_test___5()
  %scevgep1.224 = getelementptr i8, i8* %scevgep1.223, i64 1
  %scevgep5.224 = getelementptr i8, i8* %scevgep5.223, i64 1
  br i1 true, label %.preheader.225, label %.loopexit.loopexitsplit

.preheader.225:                                   ; preds = %920
  %scevgep2.225 = getelementptr i8, i8* %scevgep1.224, i64 -1
  %scevgep6.225 = getelementptr i8, i8* %scevgep5.224, i64 -1
  call void @unroll_loop(i32 83)
  %921 = load i8, i8* %scevgep6.225, align 1
  store i8 %921, i8* %scevgep2.225, align 1
  %922 = sext i8 %921 to i32
  %923 = icmp eq i32 %922, 0
  br i1 %923, label %.preheader..loopexit.loopexit_crit_edge, label %924

; <label>:924:                                    ; preds = %.preheader.225
  call void @__loop_iteration_test___5()
  %scevgep1.225 = getelementptr i8, i8* %scevgep1.224, i64 1
  %scevgep5.225 = getelementptr i8, i8* %scevgep5.224, i64 1
  br i1 true, label %.preheader.226, label %.loopexit.loopexitsplit

.preheader.226:                                   ; preds = %924
  %scevgep2.226 = getelementptr i8, i8* %scevgep1.225, i64 -1
  %scevgep6.226 = getelementptr i8, i8* %scevgep5.225, i64 -1
  call void @unroll_loop(i32 83)
  %925 = load i8, i8* %scevgep6.226, align 1
  store i8 %925, i8* %scevgep2.226, align 1
  %926 = sext i8 %925 to i32
  %927 = icmp eq i32 %926, 0
  br i1 %927, label %.preheader..loopexit.loopexit_crit_edge, label %928

; <label>:928:                                    ; preds = %.preheader.226
  call void @__loop_iteration_test___5()
  %scevgep1.226 = getelementptr i8, i8* %scevgep1.225, i64 1
  %scevgep5.226 = getelementptr i8, i8* %scevgep5.225, i64 1
  br i1 true, label %.preheader.227, label %.loopexit.loopexitsplit

.preheader.227:                                   ; preds = %928
  %scevgep2.227 = getelementptr i8, i8* %scevgep1.226, i64 -1
  %scevgep6.227 = getelementptr i8, i8* %scevgep5.226, i64 -1
  call void @unroll_loop(i32 83)
  %929 = load i8, i8* %scevgep6.227, align 1
  store i8 %929, i8* %scevgep2.227, align 1
  %930 = sext i8 %929 to i32
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %.preheader..loopexit.loopexit_crit_edge, label %932

; <label>:932:                                    ; preds = %.preheader.227
  call void @__loop_iteration_test___5()
  %scevgep1.227 = getelementptr i8, i8* %scevgep1.226, i64 1
  %scevgep5.227 = getelementptr i8, i8* %scevgep5.226, i64 1
  br i1 true, label %.preheader.228, label %.loopexit.loopexitsplit

.preheader.228:                                   ; preds = %932
  %scevgep2.228 = getelementptr i8, i8* %scevgep1.227, i64 -1
  %scevgep6.228 = getelementptr i8, i8* %scevgep5.227, i64 -1
  call void @unroll_loop(i32 83)
  %933 = load i8, i8* %scevgep6.228, align 1
  store i8 %933, i8* %scevgep2.228, align 1
  %934 = sext i8 %933 to i32
  %935 = icmp eq i32 %934, 0
  br i1 %935, label %.preheader..loopexit.loopexit_crit_edge, label %936

; <label>:936:                                    ; preds = %.preheader.228
  call void @__loop_iteration_test___5()
  %scevgep1.228 = getelementptr i8, i8* %scevgep1.227, i64 1
  %scevgep5.228 = getelementptr i8, i8* %scevgep5.227, i64 1
  br i1 true, label %.preheader.229, label %.loopexit.loopexitsplit

.preheader.229:                                   ; preds = %936
  %scevgep2.229 = getelementptr i8, i8* %scevgep1.228, i64 -1
  %scevgep6.229 = getelementptr i8, i8* %scevgep5.228, i64 -1
  call void @unroll_loop(i32 83)
  %937 = load i8, i8* %scevgep6.229, align 1
  store i8 %937, i8* %scevgep2.229, align 1
  %938 = sext i8 %937 to i32
  %939 = icmp eq i32 %938, 0
  br i1 %939, label %.preheader..loopexit.loopexit_crit_edge, label %940

; <label>:940:                                    ; preds = %.preheader.229
  call void @__loop_iteration_test___5()
  %scevgep1.229 = getelementptr i8, i8* %scevgep1.228, i64 1
  %scevgep5.229 = getelementptr i8, i8* %scevgep5.228, i64 1
  br i1 true, label %.preheader.230, label %.loopexit.loopexitsplit

.preheader.230:                                   ; preds = %940
  %scevgep2.230 = getelementptr i8, i8* %scevgep1.229, i64 -1
  %scevgep6.230 = getelementptr i8, i8* %scevgep5.229, i64 -1
  call void @unroll_loop(i32 83)
  %941 = load i8, i8* %scevgep6.230, align 1
  store i8 %941, i8* %scevgep2.230, align 1
  %942 = sext i8 %941 to i32
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %.preheader..loopexit.loopexit_crit_edge, label %944

; <label>:944:                                    ; preds = %.preheader.230
  call void @__loop_iteration_test___5()
  %scevgep1.230 = getelementptr i8, i8* %scevgep1.229, i64 1
  %scevgep5.230 = getelementptr i8, i8* %scevgep5.229, i64 1
  br i1 true, label %.preheader.231, label %.loopexit.loopexitsplit

.preheader.231:                                   ; preds = %944
  %scevgep2.231 = getelementptr i8, i8* %scevgep1.230, i64 -1
  %scevgep6.231 = getelementptr i8, i8* %scevgep5.230, i64 -1
  call void @unroll_loop(i32 83)
  %945 = load i8, i8* %scevgep6.231, align 1
  store i8 %945, i8* %scevgep2.231, align 1
  %946 = sext i8 %945 to i32
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %.preheader..loopexit.loopexit_crit_edge, label %948

; <label>:948:                                    ; preds = %.preheader.231
  call void @__loop_iteration_test___5()
  %scevgep1.231 = getelementptr i8, i8* %scevgep1.230, i64 1
  %scevgep5.231 = getelementptr i8, i8* %scevgep5.230, i64 1
  br i1 true, label %.preheader.232, label %.loopexit.loopexitsplit

.preheader.232:                                   ; preds = %948
  %scevgep2.232 = getelementptr i8, i8* %scevgep1.231, i64 -1
  %scevgep6.232 = getelementptr i8, i8* %scevgep5.231, i64 -1
  call void @unroll_loop(i32 83)
  %949 = load i8, i8* %scevgep6.232, align 1
  store i8 %949, i8* %scevgep2.232, align 1
  %950 = sext i8 %949 to i32
  %951 = icmp eq i32 %950, 0
  br i1 %951, label %.preheader..loopexit.loopexit_crit_edge, label %952

; <label>:952:                                    ; preds = %.preheader.232
  call void @__loop_iteration_test___5()
  %scevgep1.232 = getelementptr i8, i8* %scevgep1.231, i64 1
  %scevgep5.232 = getelementptr i8, i8* %scevgep5.231, i64 1
  br i1 true, label %.preheader.233, label %.loopexit.loopexitsplit

.preheader.233:                                   ; preds = %952
  %scevgep2.233 = getelementptr i8, i8* %scevgep1.232, i64 -1
  %scevgep6.233 = getelementptr i8, i8* %scevgep5.232, i64 -1
  call void @unroll_loop(i32 83)
  %953 = load i8, i8* %scevgep6.233, align 1
  store i8 %953, i8* %scevgep2.233, align 1
  %954 = sext i8 %953 to i32
  %955 = icmp eq i32 %954, 0
  br i1 %955, label %.preheader..loopexit.loopexit_crit_edge, label %956

; <label>:956:                                    ; preds = %.preheader.233
  call void @__loop_iteration_test___5()
  %scevgep1.233 = getelementptr i8, i8* %scevgep1.232, i64 1
  %scevgep5.233 = getelementptr i8, i8* %scevgep5.232, i64 1
  br i1 true, label %.preheader.234, label %.loopexit.loopexitsplit

.preheader.234:                                   ; preds = %956
  %scevgep2.234 = getelementptr i8, i8* %scevgep1.233, i64 -1
  %scevgep6.234 = getelementptr i8, i8* %scevgep5.233, i64 -1
  call void @unroll_loop(i32 83)
  %957 = load i8, i8* %scevgep6.234, align 1
  store i8 %957, i8* %scevgep2.234, align 1
  %958 = sext i8 %957 to i32
  %959 = icmp eq i32 %958, 0
  br i1 %959, label %.preheader..loopexit.loopexit_crit_edge, label %960

; <label>:960:                                    ; preds = %.preheader.234
  call void @__loop_iteration_test___5()
  %scevgep1.234 = getelementptr i8, i8* %scevgep1.233, i64 1
  %scevgep5.234 = getelementptr i8, i8* %scevgep5.233, i64 1
  br i1 true, label %.preheader.235, label %.loopexit.loopexitsplit

.preheader.235:                                   ; preds = %960
  %scevgep2.235 = getelementptr i8, i8* %scevgep1.234, i64 -1
  %scevgep6.235 = getelementptr i8, i8* %scevgep5.234, i64 -1
  call void @unroll_loop(i32 83)
  %961 = load i8, i8* %scevgep6.235, align 1
  store i8 %961, i8* %scevgep2.235, align 1
  %962 = sext i8 %961 to i32
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %.preheader..loopexit.loopexit_crit_edge, label %964

; <label>:964:                                    ; preds = %.preheader.235
  call void @__loop_iteration_test___5()
  %scevgep1.235 = getelementptr i8, i8* %scevgep1.234, i64 1
  %scevgep5.235 = getelementptr i8, i8* %scevgep5.234, i64 1
  br i1 true, label %.preheader.236, label %.loopexit.loopexitsplit

.preheader.236:                                   ; preds = %964
  %scevgep2.236 = getelementptr i8, i8* %scevgep1.235, i64 -1
  %scevgep6.236 = getelementptr i8, i8* %scevgep5.235, i64 -1
  call void @unroll_loop(i32 83)
  %965 = load i8, i8* %scevgep6.236, align 1
  store i8 %965, i8* %scevgep2.236, align 1
  %966 = sext i8 %965 to i32
  %967 = icmp eq i32 %966, 0
  br i1 %967, label %.preheader..loopexit.loopexit_crit_edge, label %968

; <label>:968:                                    ; preds = %.preheader.236
  call void @__loop_iteration_test___5()
  %scevgep1.236 = getelementptr i8, i8* %scevgep1.235, i64 1
  %scevgep5.236 = getelementptr i8, i8* %scevgep5.235, i64 1
  br i1 true, label %.preheader.237, label %.loopexit.loopexitsplit

.preheader.237:                                   ; preds = %968
  %scevgep2.237 = getelementptr i8, i8* %scevgep1.236, i64 -1
  %scevgep6.237 = getelementptr i8, i8* %scevgep5.236, i64 -1
  call void @unroll_loop(i32 83)
  %969 = load i8, i8* %scevgep6.237, align 1
  store i8 %969, i8* %scevgep2.237, align 1
  %970 = sext i8 %969 to i32
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %.preheader..loopexit.loopexit_crit_edge, label %972

; <label>:972:                                    ; preds = %.preheader.237
  call void @__loop_iteration_test___5()
  %scevgep1.237 = getelementptr i8, i8* %scevgep1.236, i64 1
  %scevgep5.237 = getelementptr i8, i8* %scevgep5.236, i64 1
  br i1 true, label %.preheader.238, label %.loopexit.loopexitsplit

.preheader.238:                                   ; preds = %972
  %scevgep2.238 = getelementptr i8, i8* %scevgep1.237, i64 -1
  %scevgep6.238 = getelementptr i8, i8* %scevgep5.237, i64 -1
  call void @unroll_loop(i32 83)
  %973 = load i8, i8* %scevgep6.238, align 1
  store i8 %973, i8* %scevgep2.238, align 1
  %974 = sext i8 %973 to i32
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %.preheader..loopexit.loopexit_crit_edge, label %976

; <label>:976:                                    ; preds = %.preheader.238
  call void @__loop_iteration_test___5()
  %scevgep1.238 = getelementptr i8, i8* %scevgep1.237, i64 1
  %scevgep5.238 = getelementptr i8, i8* %scevgep5.237, i64 1
  br i1 true, label %.preheader.239, label %.loopexit.loopexitsplit

.preheader.239:                                   ; preds = %976
  %scevgep2.239 = getelementptr i8, i8* %scevgep1.238, i64 -1
  %scevgep6.239 = getelementptr i8, i8* %scevgep5.238, i64 -1
  call void @unroll_loop(i32 83)
  %977 = load i8, i8* %scevgep6.239, align 1
  store i8 %977, i8* %scevgep2.239, align 1
  %978 = sext i8 %977 to i32
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %.preheader..loopexit.loopexit_crit_edge, label %980

; <label>:980:                                    ; preds = %.preheader.239
  call void @__loop_iteration_test___5()
  %scevgep1.239 = getelementptr i8, i8* %scevgep1.238, i64 1
  %scevgep5.239 = getelementptr i8, i8* %scevgep5.238, i64 1
  br i1 true, label %.preheader.240, label %.loopexit.loopexitsplit

.preheader.240:                                   ; preds = %980
  %scevgep2.240 = getelementptr i8, i8* %scevgep1.239, i64 -1
  %scevgep6.240 = getelementptr i8, i8* %scevgep5.239, i64 -1
  call void @unroll_loop(i32 83)
  %981 = load i8, i8* %scevgep6.240, align 1
  store i8 %981, i8* %scevgep2.240, align 1
  %982 = sext i8 %981 to i32
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %.preheader..loopexit.loopexit_crit_edge, label %984

; <label>:984:                                    ; preds = %.preheader.240
  call void @__loop_iteration_test___5()
  %scevgep1.240 = getelementptr i8, i8* %scevgep1.239, i64 1
  %scevgep5.240 = getelementptr i8, i8* %scevgep5.239, i64 1
  br i1 true, label %.preheader.241, label %.loopexit.loopexitsplit

.preheader.241:                                   ; preds = %984
  %scevgep2.241 = getelementptr i8, i8* %scevgep1.240, i64 -1
  %scevgep6.241 = getelementptr i8, i8* %scevgep5.240, i64 -1
  call void @unroll_loop(i32 83)
  %985 = load i8, i8* %scevgep6.241, align 1
  store i8 %985, i8* %scevgep2.241, align 1
  %986 = sext i8 %985 to i32
  %987 = icmp eq i32 %986, 0
  br i1 %987, label %.preheader..loopexit.loopexit_crit_edge, label %988

; <label>:988:                                    ; preds = %.preheader.241
  call void @__loop_iteration_test___5()
  %scevgep1.241 = getelementptr i8, i8* %scevgep1.240, i64 1
  %scevgep5.241 = getelementptr i8, i8* %scevgep5.240, i64 1
  br i1 true, label %.preheader.242, label %.loopexit.loopexitsplit

.preheader.242:                                   ; preds = %988
  %scevgep2.242 = getelementptr i8, i8* %scevgep1.241, i64 -1
  %scevgep6.242 = getelementptr i8, i8* %scevgep5.241, i64 -1
  call void @unroll_loop(i32 83)
  %989 = load i8, i8* %scevgep6.242, align 1
  store i8 %989, i8* %scevgep2.242, align 1
  %990 = sext i8 %989 to i32
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %.preheader..loopexit.loopexit_crit_edge, label %992

; <label>:992:                                    ; preds = %.preheader.242
  call void @__loop_iteration_test___5()
  %scevgep1.242 = getelementptr i8, i8* %scevgep1.241, i64 1
  %scevgep5.242 = getelementptr i8, i8* %scevgep5.241, i64 1
  br i1 true, label %.preheader.243, label %.loopexit.loopexitsplit

.preheader.243:                                   ; preds = %992
  %scevgep2.243 = getelementptr i8, i8* %scevgep1.242, i64 -1
  %scevgep6.243 = getelementptr i8, i8* %scevgep5.242, i64 -1
  call void @unroll_loop(i32 83)
  %993 = load i8, i8* %scevgep6.243, align 1
  store i8 %993, i8* %scevgep2.243, align 1
  %994 = sext i8 %993 to i32
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %.preheader..loopexit.loopexit_crit_edge, label %996

; <label>:996:                                    ; preds = %.preheader.243
  call void @__loop_iteration_test___5()
  %scevgep1.243 = getelementptr i8, i8* %scevgep1.242, i64 1
  %scevgep5.243 = getelementptr i8, i8* %scevgep5.242, i64 1
  br i1 true, label %.preheader.244, label %.loopexit.loopexitsplit

.preheader.244:                                   ; preds = %996
  %scevgep2.244 = getelementptr i8, i8* %scevgep1.243, i64 -1
  %scevgep6.244 = getelementptr i8, i8* %scevgep5.243, i64 -1
  call void @unroll_loop(i32 83)
  %997 = load i8, i8* %scevgep6.244, align 1
  store i8 %997, i8* %scevgep2.244, align 1
  %998 = sext i8 %997 to i32
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %.preheader..loopexit.loopexit_crit_edge, label %1000

; <label>:1000:                                   ; preds = %.preheader.244
  call void @__loop_iteration_test___5()
  %scevgep1.244 = getelementptr i8, i8* %scevgep1.243, i64 1
  %scevgep5.244 = getelementptr i8, i8* %scevgep5.243, i64 1
  br i1 true, label %.preheader.245, label %.loopexit.loopexitsplit

.preheader.245:                                   ; preds = %1000
  %scevgep2.245 = getelementptr i8, i8* %scevgep1.244, i64 -1
  %scevgep6.245 = getelementptr i8, i8* %scevgep5.244, i64 -1
  call void @unroll_loop(i32 83)
  %1001 = load i8, i8* %scevgep6.245, align 1
  store i8 %1001, i8* %scevgep2.245, align 1
  %1002 = sext i8 %1001 to i32
  %1003 = icmp eq i32 %1002, 0
  br i1 %1003, label %.preheader..loopexit.loopexit_crit_edge, label %1004

; <label>:1004:                                   ; preds = %.preheader.245
  call void @__loop_iteration_test___5()
  %scevgep1.245 = getelementptr i8, i8* %scevgep1.244, i64 1
  %scevgep5.245 = getelementptr i8, i8* %scevgep5.244, i64 1
  br i1 true, label %.preheader.246, label %.loopexit.loopexitsplit

.preheader.246:                                   ; preds = %1004
  %scevgep2.246 = getelementptr i8, i8* %scevgep1.245, i64 -1
  %scevgep6.246 = getelementptr i8, i8* %scevgep5.245, i64 -1
  call void @unroll_loop(i32 83)
  %1005 = load i8, i8* %scevgep6.246, align 1
  store i8 %1005, i8* %scevgep2.246, align 1
  %1006 = sext i8 %1005 to i32
  %1007 = icmp eq i32 %1006, 0
  br i1 %1007, label %.preheader..loopexit.loopexit_crit_edge, label %1008

; <label>:1008:                                   ; preds = %.preheader.246
  call void @__loop_iteration_test___5()
  %scevgep1.246 = getelementptr i8, i8* %scevgep1.245, i64 1
  %scevgep5.246 = getelementptr i8, i8* %scevgep5.245, i64 1
  br i1 true, label %.preheader.247, label %.loopexit.loopexitsplit

.preheader.247:                                   ; preds = %1008
  %scevgep2.247 = getelementptr i8, i8* %scevgep1.246, i64 -1
  %scevgep6.247 = getelementptr i8, i8* %scevgep5.246, i64 -1
  call void @unroll_loop(i32 83)
  %1009 = load i8, i8* %scevgep6.247, align 1
  store i8 %1009, i8* %scevgep2.247, align 1
  %1010 = sext i8 %1009 to i32
  %1011 = icmp eq i32 %1010, 0
  br i1 %1011, label %.preheader..loopexit.loopexit_crit_edge, label %1012

; <label>:1012:                                   ; preds = %.preheader.247
  call void @__loop_iteration_test___5()
  %scevgep1.247 = getelementptr i8, i8* %scevgep1.246, i64 1
  %scevgep5.247 = getelementptr i8, i8* %scevgep5.246, i64 1
  br i1 true, label %.preheader.248, label %.loopexit.loopexitsplit

.preheader.248:                                   ; preds = %1012
  %scevgep2.248 = getelementptr i8, i8* %scevgep1.247, i64 -1
  %scevgep6.248 = getelementptr i8, i8* %scevgep5.247, i64 -1
  call void @unroll_loop(i32 83)
  %1013 = load i8, i8* %scevgep6.248, align 1
  store i8 %1013, i8* %scevgep2.248, align 1
  %1014 = sext i8 %1013 to i32
  %1015 = icmp eq i32 %1014, 0
  br i1 %1015, label %.preheader..loopexit.loopexit_crit_edge, label %1016

; <label>:1016:                                   ; preds = %.preheader.248
  call void @__loop_iteration_test___5()
  %scevgep1.248 = getelementptr i8, i8* %scevgep1.247, i64 1
  %scevgep5.248 = getelementptr i8, i8* %scevgep5.247, i64 1
  br i1 true, label %.preheader.249, label %.loopexit.loopexitsplit

.preheader.249:                                   ; preds = %1016
  %scevgep2.249 = getelementptr i8, i8* %scevgep1.248, i64 -1
  %scevgep6.249 = getelementptr i8, i8* %scevgep5.248, i64 -1
  call void @unroll_loop(i32 83)
  %1017 = load i8, i8* %scevgep6.249, align 1
  store i8 %1017, i8* %scevgep2.249, align 1
  %1018 = sext i8 %1017 to i32
  %1019 = icmp eq i32 %1018, 0
  br i1 %1019, label %.preheader..loopexit.loopexit_crit_edge, label %1020

; <label>:1020:                                   ; preds = %.preheader.249
  call void @__loop_iteration_test___5()
  %scevgep1.249 = getelementptr i8, i8* %scevgep1.248, i64 1
  %scevgep5.249 = getelementptr i8, i8* %scevgep5.248, i64 1
  br i1 true, label %.preheader.250, label %.loopexit.loopexitsplit

.preheader.250:                                   ; preds = %1020
  %scevgep2.250 = getelementptr i8, i8* %scevgep1.249, i64 -1
  %scevgep6.250 = getelementptr i8, i8* %scevgep5.249, i64 -1
  call void @unroll_loop(i32 83)
  %1021 = load i8, i8* %scevgep6.250, align 1
  store i8 %1021, i8* %scevgep2.250, align 1
  %1022 = sext i8 %1021 to i32
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %.preheader..loopexit.loopexit_crit_edge, label %1024

; <label>:1024:                                   ; preds = %.preheader.250
  call void @__loop_iteration_test___5()
  %scevgep1.250 = getelementptr i8, i8* %scevgep1.249, i64 1
  %scevgep5.250 = getelementptr i8, i8* %scevgep5.249, i64 1
  br i1 true, label %.preheader.251, label %.loopexit.loopexitsplit

.preheader.251:                                   ; preds = %1024
  %scevgep2.251 = getelementptr i8, i8* %scevgep1.250, i64 -1
  %scevgep6.251 = getelementptr i8, i8* %scevgep5.250, i64 -1
  call void @unroll_loop(i32 83)
  %1025 = load i8, i8* %scevgep6.251, align 1
  store i8 %1025, i8* %scevgep2.251, align 1
  %1026 = sext i8 %1025 to i32
  %1027 = icmp eq i32 %1026, 0
  br i1 %1027, label %.preheader..loopexit.loopexit_crit_edge, label %1028

; <label>:1028:                                   ; preds = %.preheader.251
  call void @__loop_iteration_test___5()
  %scevgep1.251 = getelementptr i8, i8* %scevgep1.250, i64 1
  %scevgep5.251 = getelementptr i8, i8* %scevgep5.250, i64 1
  br i1 true, label %.preheader.252, label %.loopexit.loopexitsplit

.preheader.252:                                   ; preds = %1028
  %scevgep2.252 = getelementptr i8, i8* %scevgep1.251, i64 -1
  %scevgep6.252 = getelementptr i8, i8* %scevgep5.251, i64 -1
  call void @unroll_loop(i32 83)
  %1029 = load i8, i8* %scevgep6.252, align 1
  store i8 %1029, i8* %scevgep2.252, align 1
  %1030 = sext i8 %1029 to i32
  %1031 = icmp eq i32 %1030, 0
  br i1 %1031, label %.preheader..loopexit.loopexit_crit_edge, label %1032

; <label>:1032:                                   ; preds = %.preheader.252
  call void @__loop_iteration_test___5()
  %scevgep1.252 = getelementptr i8, i8* %scevgep1.251, i64 1
  %scevgep5.252 = getelementptr i8, i8* %scevgep5.251, i64 1
  br i1 true, label %.preheader.253, label %.loopexit.loopexitsplit

.preheader.253:                                   ; preds = %1032
  %scevgep2.253 = getelementptr i8, i8* %scevgep1.252, i64 -1
  %scevgep6.253 = getelementptr i8, i8* %scevgep5.252, i64 -1
  call void @unroll_loop(i32 83)
  %1033 = load i8, i8* %scevgep6.253, align 1
  store i8 %1033, i8* %scevgep2.253, align 1
  %1034 = sext i8 %1033 to i32
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %.preheader..loopexit.loopexit_crit_edge, label %1036

; <label>:1036:                                   ; preds = %.preheader.253
  call void @__loop_iteration_test___5()
  %scevgep1.253 = getelementptr i8, i8* %scevgep1.252, i64 1
  %scevgep5.253 = getelementptr i8, i8* %scevgep5.252, i64 1
  br i1 true, label %.preheader.254, label %.loopexit.loopexitsplit

.preheader.254:                                   ; preds = %1036
  %scevgep2.254 = getelementptr i8, i8* %scevgep1.253, i64 -1
  %scevgep6.254 = getelementptr i8, i8* %scevgep5.253, i64 -1
  call void @unroll_loop(i32 83)
  %1037 = load i8, i8* %scevgep6.254, align 1
  store i8 %1037, i8* %scevgep2.254, align 1
  %1038 = sext i8 %1037 to i32
  %1039 = icmp eq i32 %1038, 0
  br i1 %1039, label %.preheader..loopexit.loopexit_crit_edge, label %1040

; <label>:1040:                                   ; preds = %.preheader.254
  call void @__loop_iteration_test___5()
  br label %.loopexit.loopexitsplit
}

declare void @__loop_termination_test___5()

declare void @__loop_iteration_test___5()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @list_add_tail_clone(%struct.generic_list*, i8*) #0 {
  %3 = call noalias i8* @malloc(i64 24) #9, !track !118
  %4 = bitcast i8* %3 to %struct.generic_list*
  %5 = icmp ne i64 10001037, 0
  %6 = icmp ne %struct.generic_list* %4, null
  br i1 true, label %7, label %17

; <label>:7:                                      ; preds = %2
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 2
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 0
  store %struct.generic_list* %0, %struct.generic_list** %9, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  %11 = load %struct.generic_list*, %struct.generic_list** %10, align 8
  %12 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %4, i32 0, i32 1
  store %struct.generic_list* %11, %struct.generic_list** %12, align 8
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  %14 = load %struct.generic_list*, %struct.generic_list** %13, align 8
  %15 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %14, i32 0, i32 0
  store %struct.generic_list* %4, %struct.generic_list** %15, align 8
  %16 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %0, i32 0, i32 1
  store %struct.generic_list* %4, %struct.generic_list** %16, align 8
  br label %17

; <label>:17:                                     ; preds = %7, %2
  %.0 = phi i32 [ 0, %7 ], [ -1, %2 ]
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config_clone_clone_clone_clone_clone(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 2, 0
  br i1 true, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = icmp ne i64 4389383, 0
  %12 = icmp ne %struct._IO_FILE* null, null
  br i1 true, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = bitcast [27 x i8]* @22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 27, i1 false)
  %18 = icmp ne i64 244262, 0
  %19 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %51 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 48)
  br label %55

; <label>:52:                                     ; preds = %._crit_edge
  call void @__loop_iteration_test___3()
  %53 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %54 = icmp ne i8* %53, null
  br i1 %54, label %1675, label %.outer._crit_edge.loopexit.loopexit

; <label>:55:                                     ; preds = %.lr.ph
  call void @unroll_loop(i32 44)
  %56 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %57 = icmp ne i64 244287, 0
  %58 = icmp ne i8* %56, null
  br i1 true, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %56, align 1
  br label %60

; <label>:60:                                     ; preds = %59, %55
  %61 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %62 = icmp ne i64 0, 0
  %63 = icmp ne i8* null, null
  br i1 false, label %64, label %65

; <label>:64:                                     ; preds = %60
  store i8 0, i8* null, align 1
  br label %65

; <label>:65:                                     ; preds = %64, %60
  %66 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %67 = icmp ne i64 0, 0
  %68 = icmp ne i8* null, null
  br i1 false, label %69, label %70

; <label>:69:                                     ; preds = %65
  store i8 0, i8* null, align 1
  br label %70

; <label>:70:                                     ; preds = %69, %65
  %71 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %72 = icmp ne i64 0, 0
  %73 = icmp ne i8* null, null
  br i1 false, label %74, label %75

; <label>:74:                                     ; preds = %70
  store i8 0, i8* null, align 1
  br label %75

; <label>:75:                                     ; preds = %74, %70
  %76 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %77 = load i8*, i8** %26, align 8
  %78 = icmp ne i64 10000581, 0
  %79 = icmp ne i8* %77, null
  %.14 = select i1 true, i32 1, i32 0
  %80 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %75
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6.preheader
  call void @__loop_iteration_test___4()
  %81 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %82 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @24, i32 0, i32 0), i8** %82, align 8
  call void @unroll_loop(i32 45)
  %83 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %84 = load i8*, i8** %83, align 8
  %85 = icmp ne i64 10000592, 0
  %86 = icmp ne i8* %84, null
  %.1 = select i1 true, i32 2, i32 1
  %87 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.13, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6.19, %.lr.ph6.18, %.lr.ph6.17, %.lr.ph6.1626, %.lr.ph6.15, %.lr.ph6.14, %.lr.ph6.1323, %.lr.ph6.12, %.lr.ph6.11, %.lr.ph6.10, %.lr.ph6.9, %.lr.ph6.8, %.lr.ph6.721, %.lr.ph6.618, %.lr.ph6.515, %.lr.ph6.412, %.lr.ph6.39, %.lr.ph6.26, %.lr.ph6.13, %.lr.ph6
  %.1.lcssa.ph = phi i32 [ 2, %.lr.ph6 ], [ 3, %.lr.ph6.13 ], [ 4, %.lr.ph6.26 ], [ 4, %.lr.ph6.39 ], [ %.1.411, %.lr.ph6.412 ], [ %.1.514, %.lr.ph6.515 ], [ %.1.617, %.lr.ph6.618 ], [ %.1.720, %.lr.ph6.721 ], [ %.1.8, %.lr.ph6.8 ], [ %.1.9, %.lr.ph6.9 ], [ %.1.10, %.lr.ph6.10 ], [ %.1.11, %.lr.ph6.11 ], [ %.1.1222, %.lr.ph6.12 ], [ %.1.13, %.lr.ph6.1323 ], [ %.1.14, %.lr.ph6.14 ], [ %.1.1525, %.lr.ph6.15 ], [ %.1.16, %.lr.ph6.1626 ], [ %.1.17, %.lr.ph6.17 ], [ %.1.18, %.lr.ph6.18 ], [ %.1.19, %.lr.ph6.19 ]
  call void @__loop_termination_test___4()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %75
  %.1.lcssa = phi i32 [ 1, %75 ], [ 4, %._crit_edge.loopexit ]
  %88 = load i8*, i8** %27, align 16
  %89 = icmp ne i64 10000581, 0
  %90 = icmp ne i8* %88, null
  br i1 true, label %91, label %52

; <label>:91:                                     ; preds = %._crit_edge.770, %._crit_edge.660, %._crit_edge.550, %._crit_edge.440, %._crit_edge.330, %._crit_edge.220, %._crit_edge.110, %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ 4, %._crit_edge ], [ %.1.lcssa.19, %._crit_edge.110 ], [ %.1.lcssa.219, %._crit_edge.220 ], [ %.1.lcssa.329, %._crit_edge.330 ], [ %.1.lcssa.439, %._crit_edge.440 ], [ %.1.lcssa.549, %._crit_edge.550 ], [ %.1.lcssa.659, %._crit_edge.660 ], [ %.1.lcssa.769, %._crit_edge.770 ]
  %.lcssa = phi i32 [ 1, %._crit_edge ], [ 2, %._crit_edge.110 ], [ 3, %._crit_edge.220 ], [ 4, %._crit_edge.330 ], [ 5, %._crit_edge.440 ], [ 6, %._crit_edge.550 ], [ 7, %._crit_edge.660 ], [ 8, %._crit_edge.770 ]
  call void @__loop_termination_test___3()
  %92 = load i8*, i8** %28, align 16
  %93 = call i32 @strcasecmp(i8* %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %94 = icmp ne i32 0, 0
  br i1 false, label %117, label %95

; <label>:95:                                     ; preds = %91
  %96 = icmp slt i32 4, 2
  %97 = icmp sgt i32 4, 4
  %or.cond = or i1 false, false
  br i1 false, label %98, label %99

; <label>:98:                                     ; preds = %95
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:99:                                     ; preds = %95
  %100 = icmp sgt i32 4, 2
  br i1 true, label %101, label %113

; <label>:101:                                    ; preds = %99
  %102 = load i8*, i8** %34, align 8
  %103 = call i32 @strcasecmp(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %104 = icmp ne i32 0, 0
  br i1 false, label %111, label %105

; <label>:105:                                    ; preds = %101
  %106 = icmp sge i32 4, 3
  br i1 true, label %107, label %110

; <label>:107:                                    ; preds = %105
  %108 = load i8*, i8** %40, align 8
  %109 = call i32 @atoi(i8* %108) #8
  br label %113

; <label>:110:                                    ; preds = %105
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:111:                                    ; preds = %101
  %112 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 1, i8* %112)
  br label %.outer.backedge

; <label>:113:                                    ; preds = %107, %99
  %.08 = phi i32 [ 53, %107 ], [ 53, %99 ]
  %114 = load i8*, i8** %35, align 8
  %115 = call i32 @fwd_add_clone(i8* %114, i32 53)
  %116 = icmp eq i32 0, -1
  br i1 false, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:117:                                    ; preds = %91
  %118 = load i8*, i8** %29, align 16
  %119 = call i32 @strcasecmp(i8* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %132, label %121

; <label>:121:                                    ; preds = %117
  %122 = icmp ne i32 4, 2
  br i1 %122, label %123, label %124

; <label>:123:                                    ; preds = %121
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:124:                                    ; preds = %121
  %125 = load i8*, i8** %32, align 8
  %126 = call i32 @conv_trick_conf(i8* %125)
  %127 = icmp ne i32 %126, 0
  %128 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %129 = load i8*, i8** %33, align 8
  br i1 %127, label %130, label %131

; <label>:130:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:131:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:132:                                    ; preds = %117
  %133 = load i8*, i8** %30, align 16
  %134 = call i32 @strcasecmp(i8* %133, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %140, label %136

; <label>:136:                                    ; preds = %132
  %137 = icmp ne i32 4, 2
  br i1 %137, label %138, label %139

; <label>:138:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:139:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:140:                                    ; preds = %132
  %141 = load i8*, i8** %31, align 16
  %142 = call i32 @strcasecmp(i8* %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %150, label %144

; <label>:144:                                    ; preds = %140
  %145 = icmp ne i32 4, 2
  br i1 %145, label %146, label %147

; <label>:146:                                    ; preds = %144
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:147:                                    ; preds = %144
  %148 = load i8*, i8** %39, align 8
  %149 = call i32 @atoi(i8* %148) #8
  store i32 %149, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:150:                                    ; preds = %140
  %151 = load i8*, i8** %36, align 16
  %152 = call i32 @strcasecmp(i8* %151, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %160, label %154

; <label>:154:                                    ; preds = %150
  %155 = icmp ne i32 4, 2
  br i1 %155, label %156, label %157

; <label>:156:                                    ; preds = %154
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:157:                                    ; preds = %154
  %158 = load i8*, i8** %42, align 8
  %159 = call noalias i8* @strdup(i8* %158) #9, !track !108
  store i8* %159, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:160:                                    ; preds = %150
  %161 = load i8*, i8** %38, align 16
  %162 = call i32 @strcasecmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %209, label %164

; <label>:164:                                    ; preds = %160
  %165 = icmp slt i32 4, 2
  br i1 %165, label %166, label %167

; <label>:166:                                    ; preds = %164
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 1)
  br label %167

; <label>:167:                                    ; preds = %166, %164
  %.7 = phi i32 [ 1, %166 ], [ 0, %164 ]
  br label %168

; <label>:168:                                    ; preds = %168, %167
  %lsr.iv = phi i64 [ %lsr.iv.next, %168 ], [ -1, %167 ]
  %169 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %170 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %170
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %171 = load i8*, i8** %scevgep, align 8
  %172 = icmp ne i8* %171, null
  %173 = icmp ult i64 %169, 30
  %spec.select = select i1 %172, i1 %173, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %168, label %174

; <label>:174:                                    ; preds = %168
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %168 ]
  %175 = trunc i64 %.01.lcssa.wide to i32
  %176 = add nsw i32 %175, 4
  %177 = sub nsw i32 %176, 1
  %178 = icmp sgt i32 %177, 30
  br i1 %178, label %179, label %181

; <label>:179:                                    ; preds = %174
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 1, i32 30)
  %180 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:181:                                    ; preds = %174
  %182 = sub nsw i32 4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 1, i32 %182)
  %183 = add nsw i32 4, -1
  %184 = add nsw i32 %175, 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %185
  store i8* null, i8** %186, align 8
  %187 = icmp ne i32 %183, 0
  br i1 %187, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %181
  %188 = add i32 4, -1
  %189 = sext i32 %188 to i64
  %190 = sext i32 %175 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %189
  %191 = shl i64 %189, 1
  %192 = shl i64 %190, 1
  %193 = add i64 %191, %192
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %193
  %194 = sub i32 1, 4
  %195 = zext i32 %194 to i64
  br label %196

; <label>:196:                                    ; preds = %201, %.lr.ph16
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %201 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %197 = load i8*, i8** %scevgep7, align 8
  %198 = call i32 @strcmp(i8* %197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %201, label %200

; <label>:200:                                    ; preds = %196
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:201:                                    ; preds = %196
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %202 = load i8*, i8** %scevgep8, align 8
  %203 = call noalias i8* @strdup(i8* %202) #9, !track !109
  %204 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %204
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %203, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %205 = icmp ne i32 %194, %tmp
  br i1 %205, label %196, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %201
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %200, %181
  %206 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %207 = icmp ne i8* %206, null
  br i1 %207, label %208, label %.outer.backedge

; <label>:208:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:209:                                    ; preds = %160
  %210 = load i8*, i8** %41, align 16
  %211 = call i32 @strcasecmp(i8* %210, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %219, label %213

; <label>:213:                                    ; preds = %209
  %214 = icmp ne i32 4, 2
  br i1 %214, label %215, label %216

; <label>:215:                                    ; preds = %213
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:216:                                    ; preds = %213
  %217 = load i8*, i8** %45, align 8
  %218 = call i32 @atoi(i8* %217) #8
  store i32 %218, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:219:                                    ; preds = %209
  %220 = load i8*, i8** %43, align 16
  %221 = call i32 @strcasecmp(i8* %220, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %240, label %223

; <label>:223:                                    ; preds = %219
  %224 = icmp ne i32 4, 4
  br i1 %224, label %225, label %226

; <label>:225:                                    ; preds = %223
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:226:                                    ; preds = %223
  %227 = load i8*, i8** %46, align 8
  %228 = load i8*, i8** %47, align 16
  %229 = load i8*, i8** %48, align 8
  %230 = call i32 @atoi(i8* %229) #8
  %231 = call i32 @conv_scoped_conf(i8* %227, i8* %228, i32 %230)
  %232 = icmp ne i32 %231, 0
  %233 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %234 = load i8*, i8** %49, align 8
  %235 = load i8*, i8** %50, align 16
  %236 = load i8*, i8** %51, align 8
  br i1 %232, label %237, label %238

; <label>:237:                                    ; preds = %226
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i8* %236)
  br label %.outer.backedge

; <label>:238:                                    ; preds = %226
  %239 = call i32 @atoi(i8* %236) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i32 %239)
  br label %.outer.backedge

; <label>:240:                                    ; preds = %219
  %241 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 1, i8* %241)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %240, %238, %237, %225, %216, %215, %208, %.loopexit, %179, %157, %156, %147, %146, %139, %138, %131, %130, %123, %113, %111, %110, %98
  %.03.ph.be = phi i32 [ 1, %110 ], [ 1, %111 ], [ 1, %98 ], [ 0, %113 ], [ 1, %123 ], [ 1, %130 ], [ 0, %131 ], [ 1, %138 ], [ 0, %139 ], [ 1, %146 ], [ 0, %147 ], [ 1, %156 ], [ 0, %157 ], [ %180, %179 ], [ %.7, %208 ], [ %.7, %.loopexit ], [ 1, %215 ], [ 0, %216 ], [ 1, %240 ], [ 1, %225 ], [ 1, %237 ], [ 0, %238 ]
  call void @__loop_iteration_test___2()
  %242 = bitcast [9 x i8]* @27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %242, i64 9, i1 false)
  %243 = icmp ne i64 244262, 0
  %244 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.1, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit.loopexit:              ; preds = %1924, %1888, %1852, %1816, %1780, %1744, %1708, %52
  call void @__loop_termination_test___3()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit1:             ; preds = %2367, %2331, %2295, %2259, %2223, %2187, %2151, %289
  call void @__loop_termination_test___6()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit2:             ; preds = %492
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit3:             ; preds = %695
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit4:             ; preds = %898
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit5:             ; preds = %1101
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit6:             ; preds = %1304
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit7:             ; preds = %1507
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit:                       ; preds = %.outer._crit_edge.loopexit.loopexit7, %.outer._crit_edge.loopexit.loopexit6, %.outer._crit_edge.loopexit.loopexit5, %.outer._crit_edge.loopexit.loopexit4, %.outer._crit_edge.loopexit.loopexit3, %.outer._crit_edge.loopexit.loopexit2, %.outer._crit_edge.loopexit.loopexit1, %.outer._crit_edge.loopexit.loopexit
  %.03.lcssa.ph = phi i32 [ 0, %.outer._crit_edge.loopexit.loopexit ], [ 0, %.outer._crit_edge.loopexit.loopexit1 ], [ %.03.ph.be.1, %.outer._crit_edge.loopexit.loopexit2 ], [ %.03.ph.be.2, %.outer._crit_edge.loopexit.loopexit3 ], [ %.03.ph.be.3, %.outer._crit_edge.loopexit.loopexit4 ], [ %.03.ph.be.4, %.outer._crit_edge.loopexit.loopexit5 ], [ %.03.ph.be.5, %.outer._crit_edge.loopexit.loopexit6 ], [ %.03.ph.be.6, %.outer._crit_edge.loopexit.loopexit7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge.7, %.outer.backedge.6, %.outer.backedge.5, %.outer.backedge.4, %.outer.backedge.3, %.outer.backedge.2, %.outer.backedge.1, %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ 0, %.outer.backedge ], [ %.03.ph.be.1, %.outer.backedge.1 ], [ %.03.ph.be.2, %.outer.backedge.2 ], [ %.03.ph.be.3, %.outer.backedge.3 ], [ %.03.ph.be.4, %.outer.backedge.4 ], [ %.03.ph.be.5, %.outer.backedge.5 ], [ %.03.ph.be.6, %.outer.backedge.6 ], [ %.03.ph.be.7, %.outer.backedge.7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.03.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %245 = call i32 @fclose(%struct._IO_FILE* null)
  %246 = icmp ne i32 %.03.lcssa, 0
  br i1 %246, label %247, label %249

; <label>:247:                                    ; preds = %.outer._crit_edge
  %248 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %248, i32 %.03.lcssa)
  br label %.loopexit1

; <label>:249:                                    ; preds = %.outer._crit_edge
  %250 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %250)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %1530, %1327, %1124, %921, %718, %515, %312, %113
  %.0.ph = phi i32 [ -1, %113 ], [ -1, %312 ], [ -1, %515 ], [ -1, %718 ], [ -1, %921 ], [ -1, %1124 ], [ -1, %1327 ], [ -1, %1530 ]
  call void @__loop_termination_test___2()
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %249, %247, %13
  %.0 = phi i32 [ -1, %247 ], [ 0, %249 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0

.lr.ph.1:                                         ; preds = %.outer.backedge
  call void @unroll_loop(i32 48)
  br label %251

; <label>:251:                                    ; preds = %.lr.ph.1
  call void @unroll_loop(i32 44)
  %252 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %253 = icmp ne i64 244269, 0
  %254 = icmp ne i8* %252, null
  br i1 true, label %255, label %256

; <label>:255:                                    ; preds = %251
  store i8 0, i8* %252, align 1
  br label %256

; <label>:256:                                    ; preds = %255, %251
  %257 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %258 = icmp ne i64 0, 0
  %259 = icmp ne i8* null, null
  br i1 false, label %260, label %261

; <label>:260:                                    ; preds = %256
  store i8 0, i8* null, align 1
  br label %261

; <label>:261:                                    ; preds = %260, %256
  %262 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %263 = icmp ne i64 0, 0
  %264 = icmp ne i8* null, null
  br i1 false, label %265, label %266

; <label>:265:                                    ; preds = %261
  store i8 0, i8* null, align 1
  br label %266

; <label>:266:                                    ; preds = %265, %261
  %267 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %268 = icmp ne i64 0, 0
  %269 = icmp ne i8* null, null
  br i1 false, label %270, label %271

; <label>:270:                                    ; preds = %266
  store i8 0, i8* null, align 1
  br label %271

; <label>:271:                                    ; preds = %270, %266
  %272 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %273 = load i8*, i8** %26, align 8
  %274 = icmp ne i64 10001062, 0
  %275 = icmp ne i8* %273, null
  %.14.1 = select i1 true, i32 1, i32 0
  %276 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader.1, label %._crit_edge.1

.lr.ph6.preheader.1:                              ; preds = %271
  br label %.lr.ph6.1

.lr.ph6.1:                                        ; preds = %.lr.ph6.1, %.lr.ph6.preheader.1
  %.15.1 = phi i32 [ %.1.1, %.lr.ph6.1 ], [ 1, %.lr.ph6.preheader.1 ]
  %277 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %278 = sext i32 %.15.1 to i64
  %279 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %278
  store i8* %277, i8** %279, align 8
  call void @unroll_loop(i32 45)
  %280 = sext i32 %.15.1 to i64
  %281 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %280
  %282 = load i8*, i8** %281, align 8
  %283 = icmp ne i8* %282, null
  %284 = add nsw i32 %.15.1, 1
  %285 = icmp slt i32 %284, 30
  %.1.1 = select i1 %283, i32 %284, i32 %.15.1
  %286 = select i1 %283, i1 %285, i1 false
  br i1 %286, label %.lr.ph6.1, label %._crit_edge.loopexit.1

._crit_edge.loopexit.1:                           ; preds = %.lr.ph6.1
  %.1.lcssa.ph.1 = phi i32 [ %.1.1, %.lr.ph6.1 ]
  br label %._crit_edge.1

._crit_edge.1:                                    ; preds = %._crit_edge.loopexit.1, %271
  %.1.lcssa.1 = phi i32 [ 1, %271 ], [ %.1.lcssa.ph.1, %._crit_edge.loopexit.1 ]
  %287 = load i8*, i8** %27, align 16
  %288 = icmp ne i8* %287, null
  br i1 %288, label %292, label %289

; <label>:289:                                    ; preds = %._crit_edge.1
  call void @__loop_iteration_test___6()
  %290 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %291 = icmp ne i8* %290, null
  br i1 %291, label %2118, label %.outer._crit_edge.loopexit.loopexit1

; <label>:292:                                    ; preds = %._crit_edge.1.7, %._crit_edge.1.6, %._crit_edge.1.5, %._crit_edge.1.4, %._crit_edge.1.3, %._crit_edge.1.2, %._crit_edge.1.1, %._crit_edge.1
  %.1.lcssa.lcssa.1 = phi i32 [ %.1.lcssa.1, %._crit_edge.1 ], [ %.1.lcssa.1.1, %._crit_edge.1.1 ], [ %.1.lcssa.1.2, %._crit_edge.1.2 ], [ %.1.lcssa.1.3, %._crit_edge.1.3 ], [ %.1.lcssa.1.4, %._crit_edge.1.4 ], [ %.1.lcssa.1.5, %._crit_edge.1.5 ], [ %.1.lcssa.1.6, %._crit_edge.1.6 ], [ %.1.lcssa.1.7, %._crit_edge.1.7 ]
  %.lcssa.1 = phi i32 [ 2, %._crit_edge.1 ], [ 3, %._crit_edge.1.1 ], [ 4, %._crit_edge.1.2 ], [ 5, %._crit_edge.1.3 ], [ 6, %._crit_edge.1.4 ], [ 7, %._crit_edge.1.5 ], [ 8, %._crit_edge.1.6 ], [ 9, %._crit_edge.1.7 ]
  call void @__loop_termination_test___6()
  %293 = load i8*, i8** %28, align 16
  %294 = call i32 @strcasecmp(i8* %293, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %295 = icmp ne i32 %294, 0
  br i1 %295, label %321, label %296

; <label>:296:                                    ; preds = %292
  %297 = icmp slt i32 %.1.lcssa.lcssa.1, 2
  %298 = icmp sgt i32 %.1.lcssa.lcssa.1, 4
  %or.cond.1 = or i1 %297, %298
  br i1 %or.cond.1, label %319, label %299

; <label>:299:                                    ; preds = %296
  %300 = icmp sgt i32 %.1.lcssa.lcssa.1, 2
  br i1 %300, label %301, label %312

; <label>:301:                                    ; preds = %299
  %302 = load i8*, i8** %34, align 8
  %303 = call i32 @strcasecmp(i8* %302, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %304 = icmp ne i32 %303, 0
  br i1 %304, label %316, label %305

; <label>:305:                                    ; preds = %301
  %306 = icmp sge i32 %.1.lcssa.lcssa.1, 3
  br i1 %306, label %309, label %307

; <label>:307:                                    ; preds = %305
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.1)
  %308 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:309:                                    ; preds = %305
  %310 = load i8*, i8** %40, align 8
  %311 = call i32 @atoi(i8* %310) #8
  br label %312

; <label>:312:                                    ; preds = %309, %299
  %.08.1 = phi i32 [ %311, %309 ], [ 53, %299 ]
  %313 = load i8*, i8** %35, align 8
  %314 = call i32 @fwd_add(i8* %313, i32 %.08.1)
  %315 = icmp eq i32 %314, -1
  br i1 %315, label %.loopexit1.loopexit, label %.outer.backedge.1

; <label>:316:                                    ; preds = %301
  %317 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.1, i8* %317)
  %318 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:319:                                    ; preds = %296
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.1)
  %320 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:321:                                    ; preds = %292
  %322 = load i8*, i8** %29, align 16
  %323 = call i32 @strcasecmp(i8* %322, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %324 = icmp ne i32 %323, 0
  br i1 %324, label %338, label %325

; <label>:325:                                    ; preds = %321
  %326 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %326, label %336, label %327

; <label>:327:                                    ; preds = %325
  %328 = load i8*, i8** %32, align 8
  %329 = call i32 @conv_trick_conf(i8* %328)
  %330 = icmp ne i32 %329, 0
  %331 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %332 = load i8*, i8** %33, align 8
  br i1 %330, label %334, label %333

; <label>:333:                                    ; preds = %327
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %331, i8* %332)
  br label %.outer.backedge.1

; <label>:334:                                    ; preds = %327
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %331, i8* %332)
  %335 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:336:                                    ; preds = %325
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.1)
  %337 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:338:                                    ; preds = %321
  %339 = load i8*, i8** %30, align 16
  %340 = call i32 @strcasecmp(i8* %339, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %341 = icmp ne i32 %340, 0
  br i1 %341, label %347, label %342

; <label>:342:                                    ; preds = %338
  %343 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %343, label %345, label %344

; <label>:344:                                    ; preds = %342
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.1

; <label>:345:                                    ; preds = %342
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.1)
  %346 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:347:                                    ; preds = %338
  %348 = load i8*, i8** %31, align 16
  %349 = call i32 @strcasecmp(i8* %348, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %350 = icmp ne i32 %349, 0
  br i1 %350, label %358, label %351

; <label>:351:                                    ; preds = %347
  %352 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %352, label %356, label %353

; <label>:353:                                    ; preds = %351
  %354 = load i8*, i8** %39, align 8
  %355 = call i32 @atoi(i8* %354) #8
  store i32 %355, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.1

; <label>:356:                                    ; preds = %351
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.1)
  %357 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:358:                                    ; preds = %347
  %359 = load i8*, i8** %36, align 16
  %360 = call i32 @strcasecmp(i8* %359, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %361 = icmp ne i32 %360, 0
  br i1 %361, label %369, label %362

; <label>:362:                                    ; preds = %358
  %363 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %363, label %367, label %364

; <label>:364:                                    ; preds = %362
  %365 = load i8*, i8** %42, align 8
  %366 = call noalias i8* @strdup(i8* %365) #9, !track !108
  store i8* %366, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.1

; <label>:367:                                    ; preds = %362
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.1)
  %368 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:369:                                    ; preds = %358
  %370 = load i8*, i8** %38, align 16
  %371 = call i32 @strcasecmp(i8* %370, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %372 = icmp ne i32 %371, 0
  br i1 %372, label %419, label %373

; <label>:373:                                    ; preds = %369
  %374 = icmp slt i32 %.1.lcssa.lcssa.1, 2
  br i1 %374, label %375, label %377

; <label>:375:                                    ; preds = %373
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.1)
  %376 = add nsw i32 0, 1
  br label %377

; <label>:377:                                    ; preds = %375, %373
  %.7.1 = phi i32 [ %376, %375 ], [ 0, %373 ]
  br label %378

; <label>:378:                                    ; preds = %378, %377
  %lsr.iv.1 = phi i64 [ %lsr.iv.next.1, %378 ], [ -1, %377 ]
  %379 = add i64 %lsr.iv.1, 1
  call void @unroll_loop(i32 46)
  %380 = shl i64 %lsr.iv.1, 3
  %uglygep.1 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %380
  %uglygep3.1 = bitcast i8* %uglygep.1 to i8**
  %scevgep.1 = getelementptr i8*, i8** %uglygep3.1, i64 111
  %381 = load i8*, i8** %scevgep.1, align 8
  %382 = icmp ne i8* %381, null
  %383 = icmp ult i64 %379, 30
  %spec.select.1 = select i1 %382, i1 %383, i1 false
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %spec.select.1, label %378, label %384

; <label>:384:                                    ; preds = %378
  %.01.lcssa.wide.1 = phi i64 [ %lsr.iv.next.1, %378 ]
  %385 = trunc i64 %.01.lcssa.wide.1 to i32
  %386 = add nsw i32 %385, %.1.lcssa.lcssa.1
  %387 = sub nsw i32 %386, 1
  %388 = icmp sgt i32 %387, 30
  br i1 %388, label %417, label %389

; <label>:389:                                    ; preds = %384
  %390 = sub nsw i32 %.1.lcssa.lcssa.1, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.1, i32 %390)
  %391 = add nsw i32 %.1.lcssa.lcssa.1, -1
  %392 = add nsw i32 %385, %.1.lcssa.lcssa.1
  %393 = sext i32 %392 to i64
  %394 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %393
  store i8* null, i8** %394, align 8
  %395 = icmp ne i32 %391, 0
  br i1 %395, label %.lr.ph16.1, label %.loopexit.1

.lr.ph16.1:                                       ; preds = %389
  %396 = add i32 %.1.lcssa.lcssa.1, -1
  %397 = sext i32 %396 to i64
  %398 = sext i32 %385 to i64
  %scevgep4.1 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %397
  %399 = shl i64 %397, 1
  %400 = shl i64 %398, 1
  %401 = add i64 %399, %400
  %scevgep9.1 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %401
  %402 = sub i32 1, %.1.lcssa.lcssa.1
  %403 = zext i32 %402 to i64
  br label %404

; <label>:404:                                    ; preds = %409, %.lr.ph16.1
  %lsr.iv5.1 = phi i64 [ 0, %.lr.ph16.1 ], [ %lsr.iv.next6.1, %409 ]
  call void @unroll_loop(i32 47)
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %405 = load i8*, i8** %scevgep7.1, align 8
  %406 = call i32 @strcmp(i8* %405, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %407 = icmp ne i32 %406, 0
  br i1 %407, label %409, label %408

; <label>:408:                                    ; preds = %404
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.1

; <label>:409:                                    ; preds = %404
  %scevgep8.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %410 = load i8*, i8** %scevgep8.1, align 8
  %411 = call noalias i8* @strdup(i8* %410) #9, !track !109
  %412 = shl i64 %lsr.iv5.1, 1
  %scevgep10.1 = getelementptr i32, i32* %scevgep9.1, i64 %412
  %scevgep1011.1 = bitcast i32* %scevgep10.1 to i8**
  store i8* %411, i8** %scevgep1011.1, align 8
  %lsr.iv.next6.1 = add nsw i64 %lsr.iv5.1, -1
  %tmp.1 = trunc i64 %lsr.iv.next6.1 to i32
  %413 = icmp ne i32 %402, %tmp.1
  br i1 %413, label %404, label %.loopexit.loopexit.1

.loopexit.loopexit.1:                             ; preds = %409
  br label %.loopexit.1

.loopexit.1:                                      ; preds = %.loopexit.loopexit.1, %408, %389
  %414 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %415 = icmp ne i8* %414, null
  br i1 %415, label %416, label %.outer.backedge.1

; <label>:416:                                    ; preds = %.loopexit.1
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.1

; <label>:417:                                    ; preds = %384
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.1, i32 30)
  %418 = add nsw i32 %.7.1, 1
  br label %.outer.backedge.1

; <label>:419:                                    ; preds = %369
  %420 = load i8*, i8** %41, align 16
  %421 = call i32 @strcasecmp(i8* %420, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %422 = icmp ne i32 %421, 0
  br i1 %422, label %430, label %423

; <label>:423:                                    ; preds = %419
  %424 = icmp ne i32 %.1.lcssa.lcssa.1, 2
  br i1 %424, label %428, label %425

; <label>:425:                                    ; preds = %423
  %426 = load i8*, i8** %45, align 8
  %427 = call i32 @atoi(i8* %426) #8
  store i32 %427, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.1

; <label>:428:                                    ; preds = %423
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.1)
  %429 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:430:                                    ; preds = %419
  %431 = load i8*, i8** %43, align 16
  %432 = call i32 @strcasecmp(i8* %431, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %433 = icmp ne i32 %432, 0
  br i1 %433, label %453, label %434

; <label>:434:                                    ; preds = %430
  %435 = icmp ne i32 %.1.lcssa.lcssa.1, 4
  br i1 %435, label %451, label %436

; <label>:436:                                    ; preds = %434
  %437 = load i8*, i8** %46, align 8
  %438 = load i8*, i8** %47, align 16
  %439 = load i8*, i8** %48, align 8
  %440 = call i32 @atoi(i8* %439) #8
  %441 = call i32 @conv_scoped_conf(i8* %437, i8* %438, i32 %440)
  %442 = icmp ne i32 %441, 0
  %443 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %444 = load i8*, i8** %49, align 8
  %445 = load i8*, i8** %50, align 16
  %446 = load i8*, i8** %51, align 8
  br i1 %442, label %449, label %447

; <label>:447:                                    ; preds = %436
  %448 = call i32 @atoi(i8* %446) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %443, i8* %444, i8* %445, i32 %448)
  br label %.outer.backedge.1

; <label>:449:                                    ; preds = %436
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %443, i8* %444, i8* %445, i8* %446)
  %450 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:451:                                    ; preds = %434
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.1)
  %452 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:453:                                    ; preds = %430
  %454 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.1, i8* %454)
  %455 = add nsw i32 0, 1
  br label %.outer.backedge.1

.outer.backedge.1:                                ; preds = %453, %451, %449, %447, %428, %425, %417, %416, %.loopexit.1, %367, %364, %356, %353, %345, %344, %336, %334, %333, %319, %316, %312, %307
  %.03.ph.be.1 = phi i32 [ %308, %307 ], [ %318, %316 ], [ %320, %319 ], [ 0, %312 ], [ %337, %336 ], [ %335, %334 ], [ 0, %333 ], [ %346, %345 ], [ 0, %344 ], [ %357, %356 ], [ 0, %353 ], [ %368, %367 ], [ 0, %364 ], [ %418, %417 ], [ %.7.1, %416 ], [ %.7.1, %.loopexit.1 ], [ %429, %428 ], [ 0, %425 ], [ %455, %453 ], [ %452, %451 ], [ %450, %449 ], [ 0, %447 ]
  call void @__loop_iteration_test___2()
  %456 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %457 = icmp ne i8* %456, null
  br i1 %457, label %.lr.ph.2, label %.outer._crit_edge.loopexit1

.lr.ph.2:                                         ; preds = %.outer.backedge.1
  call void @unroll_loop(i32 48)
  br label %458

; <label>:458:                                    ; preds = %492, %.lr.ph.2
  %.0712.2 = phi i32 [ %.lcssa.1, %.lr.ph.2 ], [ %459, %492 ]
  call void @unroll_loop(i32 44)
  %459 = add nsw i32 %.0712.2, 1
  %460 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %461 = icmp ne i8* %460, null
  br i1 %461, label %462, label %463

; <label>:462:                                    ; preds = %458
  store i8 0, i8* %460, align 1
  br label %463

; <label>:463:                                    ; preds = %462, %458
  %464 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %465 = icmp ne i8* %464, null
  br i1 %465, label %466, label %467

; <label>:466:                                    ; preds = %463
  store i8 0, i8* %464, align 1
  br label %467

; <label>:467:                                    ; preds = %466, %463
  %468 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %469 = icmp ne i8* %468, null
  br i1 %469, label %470, label %471

; <label>:470:                                    ; preds = %467
  store i8 0, i8* %468, align 1
  br label %471

; <label>:471:                                    ; preds = %470, %467
  %472 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %473 = icmp ne i8* %472, null
  br i1 %473, label %474, label %475

; <label>:474:                                    ; preds = %471
  store i8 0, i8* %472, align 1
  br label %475

; <label>:475:                                    ; preds = %474, %471
  %476 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %476, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %477 = load i8*, i8** %26, align 8
  %478 = icmp ne i8* %477, null
  %.14.2 = select i1 %478, i32 1, i32 0
  %479 = select i1 %478, i1 true, i1 false
  br i1 %479, label %.lr.ph6.preheader.2, label %._crit_edge.2

.lr.ph6.preheader.2:                              ; preds = %475
  br label %.lr.ph6.2

.lr.ph6.2:                                        ; preds = %.lr.ph6.2, %.lr.ph6.preheader.2
  %.15.2 = phi i32 [ %.1.2, %.lr.ph6.2 ], [ %.14.2, %.lr.ph6.preheader.2 ]
  %480 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %481 = sext i32 %.15.2 to i64
  %482 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %481
  store i8* %480, i8** %482, align 8
  call void @unroll_loop(i32 45)
  %483 = sext i32 %.15.2 to i64
  %484 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %483
  %485 = load i8*, i8** %484, align 8
  %486 = icmp ne i8* %485, null
  %487 = add nsw i32 %.15.2, 1
  %488 = icmp slt i32 %487, 30
  %.1.2 = select i1 %486, i32 %487, i32 %.15.2
  %489 = select i1 %486, i1 %488, i1 false
  br i1 %489, label %.lr.ph6.2, label %._crit_edge.loopexit.2

._crit_edge.loopexit.2:                           ; preds = %.lr.ph6.2
  %.1.lcssa.ph.2 = phi i32 [ %.1.2, %.lr.ph6.2 ]
  br label %._crit_edge.2

._crit_edge.2:                                    ; preds = %._crit_edge.loopexit.2, %475
  %.1.lcssa.2 = phi i32 [ %.14.2, %475 ], [ %.1.lcssa.ph.2, %._crit_edge.loopexit.2 ]
  %490 = load i8*, i8** %27, align 16
  %491 = icmp ne i8* %490, null
  br i1 %491, label %495, label %492

; <label>:492:                                    ; preds = %._crit_edge.2
  %493 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %494 = icmp ne i8* %493, null
  br i1 %494, label %458, label %.outer._crit_edge.loopexit.loopexit2

; <label>:495:                                    ; preds = %._crit_edge.2
  %.1.lcssa.lcssa.2 = phi i32 [ %.1.lcssa.2, %._crit_edge.2 ]
  %.lcssa.2 = phi i32 [ %459, %._crit_edge.2 ]
  %496 = load i8*, i8** %28, align 16
  %497 = call i32 @strcasecmp(i8* %496, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %498 = icmp ne i32 %497, 0
  br i1 %498, label %524, label %499

; <label>:499:                                    ; preds = %495
  %500 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  %501 = icmp sgt i32 %.1.lcssa.lcssa.2, 4
  %or.cond.2 = or i1 %500, %501
  br i1 %or.cond.2, label %522, label %502

; <label>:502:                                    ; preds = %499
  %503 = icmp sgt i32 %.1.lcssa.lcssa.2, 2
  br i1 %503, label %504, label %515

; <label>:504:                                    ; preds = %502
  %505 = load i8*, i8** %34, align 8
  %506 = call i32 @strcasecmp(i8* %505, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %507 = icmp ne i32 %506, 0
  br i1 %507, label %519, label %508

; <label>:508:                                    ; preds = %504
  %509 = icmp sge i32 %.1.lcssa.lcssa.2, 3
  br i1 %509, label %512, label %510

; <label>:510:                                    ; preds = %508
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.2)
  %511 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:512:                                    ; preds = %508
  %513 = load i8*, i8** %40, align 8
  %514 = call i32 @atoi(i8* %513) #8
  br label %515

; <label>:515:                                    ; preds = %512, %502
  %.08.2 = phi i32 [ %514, %512 ], [ 53, %502 ]
  %516 = load i8*, i8** %35, align 8
  %517 = call i32 @fwd_add(i8* %516, i32 %.08.2)
  %518 = icmp eq i32 %517, -1
  br i1 %518, label %.loopexit1.loopexit, label %.outer.backedge.2

; <label>:519:                                    ; preds = %504
  %520 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.2, i8* %520)
  %521 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:522:                                    ; preds = %499
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.2)
  %523 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:524:                                    ; preds = %495
  %525 = load i8*, i8** %29, align 16
  %526 = call i32 @strcasecmp(i8* %525, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %527 = icmp ne i32 %526, 0
  br i1 %527, label %541, label %528

; <label>:528:                                    ; preds = %524
  %529 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %529, label %539, label %530

; <label>:530:                                    ; preds = %528
  %531 = load i8*, i8** %32, align 8
  %532 = call i32 @conv_trick_conf(i8* %531)
  %533 = icmp ne i32 %532, 0
  %534 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %535 = load i8*, i8** %33, align 8
  br i1 %533, label %537, label %536

; <label>:536:                                    ; preds = %530
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %534, i8* %535)
  br label %.outer.backedge.2

; <label>:537:                                    ; preds = %530
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %534, i8* %535)
  %538 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:539:                                    ; preds = %528
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.2)
  %540 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:541:                                    ; preds = %524
  %542 = load i8*, i8** %30, align 16
  %543 = call i32 @strcasecmp(i8* %542, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %544 = icmp ne i32 %543, 0
  br i1 %544, label %550, label %545

; <label>:545:                                    ; preds = %541
  %546 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %546, label %548, label %547

; <label>:547:                                    ; preds = %545
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.2

; <label>:548:                                    ; preds = %545
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.2)
  %549 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:550:                                    ; preds = %541
  %551 = load i8*, i8** %31, align 16
  %552 = call i32 @strcasecmp(i8* %551, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %553 = icmp ne i32 %552, 0
  br i1 %553, label %561, label %554

; <label>:554:                                    ; preds = %550
  %555 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %555, label %559, label %556

; <label>:556:                                    ; preds = %554
  %557 = load i8*, i8** %39, align 8
  %558 = call i32 @atoi(i8* %557) #8
  store i32 %558, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.2

; <label>:559:                                    ; preds = %554
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.2)
  %560 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:561:                                    ; preds = %550
  %562 = load i8*, i8** %36, align 16
  %563 = call i32 @strcasecmp(i8* %562, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %564 = icmp ne i32 %563, 0
  br i1 %564, label %572, label %565

; <label>:565:                                    ; preds = %561
  %566 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %566, label %570, label %567

; <label>:567:                                    ; preds = %565
  %568 = load i8*, i8** %42, align 8
  %569 = call noalias i8* @strdup(i8* %568) #9, !track !108
  store i8* %569, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.2

; <label>:570:                                    ; preds = %565
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.2)
  %571 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:572:                                    ; preds = %561
  %573 = load i8*, i8** %38, align 16
  %574 = call i32 @strcasecmp(i8* %573, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %575 = icmp ne i32 %574, 0
  br i1 %575, label %622, label %576

; <label>:576:                                    ; preds = %572
  %577 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  br i1 %577, label %578, label %580

; <label>:578:                                    ; preds = %576
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.2)
  %579 = add nsw i32 %.03.ph.be.1, 1
  br label %580

; <label>:580:                                    ; preds = %578, %576
  %.7.2 = phi i32 [ %579, %578 ], [ %.03.ph.be.1, %576 ]
  br label %581

; <label>:581:                                    ; preds = %581, %580
  %lsr.iv.2 = phi i64 [ %lsr.iv.next.2, %581 ], [ -1, %580 ]
  %582 = add i64 %lsr.iv.2, 1
  call void @unroll_loop(i32 46)
  %583 = shl i64 %lsr.iv.2, 3
  %uglygep.2 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %583
  %uglygep3.2 = bitcast i8* %uglygep.2 to i8**
  %scevgep.2 = getelementptr i8*, i8** %uglygep3.2, i64 111
  %584 = load i8*, i8** %scevgep.2, align 8
  %585 = icmp ne i8* %584, null
  %586 = icmp ult i64 %582, 30
  %spec.select.2 = select i1 %585, i1 %586, i1 false
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %spec.select.2, label %581, label %587

; <label>:587:                                    ; preds = %581
  %.01.lcssa.wide.2 = phi i64 [ %lsr.iv.next.2, %581 ]
  %588 = trunc i64 %.01.lcssa.wide.2 to i32
  %589 = add nsw i32 %588, %.1.lcssa.lcssa.2
  %590 = sub nsw i32 %589, 1
  %591 = icmp sgt i32 %590, 30
  br i1 %591, label %620, label %592

; <label>:592:                                    ; preds = %587
  %593 = sub nsw i32 %.1.lcssa.lcssa.2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.2, i32 %593)
  %594 = add nsw i32 %.1.lcssa.lcssa.2, -1
  %595 = add nsw i32 %588, %.1.lcssa.lcssa.2
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %596
  store i8* null, i8** %597, align 8
  %598 = icmp ne i32 %594, 0
  br i1 %598, label %.lr.ph16.2, label %.loopexit.2

.lr.ph16.2:                                       ; preds = %592
  %599 = add i32 %.1.lcssa.lcssa.2, -1
  %600 = sext i32 %599 to i64
  %601 = sext i32 %588 to i64
  %scevgep4.2 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %600
  %602 = shl i64 %600, 1
  %603 = shl i64 %601, 1
  %604 = add i64 %602, %603
  %scevgep9.2 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %604
  %605 = sub i32 1, %.1.lcssa.lcssa.2
  %606 = zext i32 %605 to i64
  br label %607

; <label>:607:                                    ; preds = %612, %.lr.ph16.2
  %lsr.iv5.2 = phi i64 [ 0, %.lr.ph16.2 ], [ %lsr.iv.next6.2, %612 ]
  call void @unroll_loop(i32 47)
  %scevgep7.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %608 = load i8*, i8** %scevgep7.2, align 8
  %609 = call i32 @strcmp(i8* %608, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %610 = icmp ne i32 %609, 0
  br i1 %610, label %612, label %611

; <label>:611:                                    ; preds = %607
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.2

; <label>:612:                                    ; preds = %607
  %scevgep8.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %613 = load i8*, i8** %scevgep8.2, align 8
  %614 = call noalias i8* @strdup(i8* %613) #9, !track !109
  %615 = shl i64 %lsr.iv5.2, 1
  %scevgep10.2 = getelementptr i32, i32* %scevgep9.2, i64 %615
  %scevgep1011.2 = bitcast i32* %scevgep10.2 to i8**
  store i8* %614, i8** %scevgep1011.2, align 8
  %lsr.iv.next6.2 = add nsw i64 %lsr.iv5.2, -1
  %tmp.2 = trunc i64 %lsr.iv.next6.2 to i32
  %616 = icmp ne i32 %605, %tmp.2
  br i1 %616, label %607, label %.loopexit.loopexit.2

.loopexit.loopexit.2:                             ; preds = %612
  br label %.loopexit.2

.loopexit.2:                                      ; preds = %.loopexit.loopexit.2, %611, %592
  %617 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %618 = icmp ne i8* %617, null
  br i1 %618, label %619, label %.outer.backedge.2

; <label>:619:                                    ; preds = %.loopexit.2
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.2

; <label>:620:                                    ; preds = %587
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.2, i32 30)
  %621 = add nsw i32 %.7.2, 1
  br label %.outer.backedge.2

; <label>:622:                                    ; preds = %572
  %623 = load i8*, i8** %41, align 16
  %624 = call i32 @strcasecmp(i8* %623, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %625 = icmp ne i32 %624, 0
  br i1 %625, label %633, label %626

; <label>:626:                                    ; preds = %622
  %627 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %627, label %631, label %628

; <label>:628:                                    ; preds = %626
  %629 = load i8*, i8** %45, align 8
  %630 = call i32 @atoi(i8* %629) #8
  store i32 %630, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.2

; <label>:631:                                    ; preds = %626
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.2)
  %632 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:633:                                    ; preds = %622
  %634 = load i8*, i8** %43, align 16
  %635 = call i32 @strcasecmp(i8* %634, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %636 = icmp ne i32 %635, 0
  br i1 %636, label %656, label %637

; <label>:637:                                    ; preds = %633
  %638 = icmp ne i32 %.1.lcssa.lcssa.2, 4
  br i1 %638, label %654, label %639

; <label>:639:                                    ; preds = %637
  %640 = load i8*, i8** %46, align 8
  %641 = load i8*, i8** %47, align 16
  %642 = load i8*, i8** %48, align 8
  %643 = call i32 @atoi(i8* %642) #8
  %644 = call i32 @conv_scoped_conf(i8* %640, i8* %641, i32 %643)
  %645 = icmp ne i32 %644, 0
  %646 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %647 = load i8*, i8** %49, align 8
  %648 = load i8*, i8** %50, align 16
  %649 = load i8*, i8** %51, align 8
  br i1 %645, label %652, label %650

; <label>:650:                                    ; preds = %639
  %651 = call i32 @atoi(i8* %649) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %646, i8* %647, i8* %648, i32 %651)
  br label %.outer.backedge.2

; <label>:652:                                    ; preds = %639
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %646, i8* %647, i8* %648, i8* %649)
  %653 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:654:                                    ; preds = %637
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.2)
  %655 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

; <label>:656:                                    ; preds = %633
  %657 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.2, i8* %657)
  %658 = add nsw i32 %.03.ph.be.1, 1
  br label %.outer.backedge.2

.outer.backedge.2:                                ; preds = %656, %654, %652, %650, %631, %628, %620, %619, %.loopexit.2, %570, %567, %559, %556, %548, %547, %539, %537, %536, %522, %519, %515, %510
  %.03.ph.be.2 = phi i32 [ %511, %510 ], [ %521, %519 ], [ %523, %522 ], [ %.03.ph.be.1, %515 ], [ %540, %539 ], [ %538, %537 ], [ %.03.ph.be.1, %536 ], [ %549, %548 ], [ %.03.ph.be.1, %547 ], [ %560, %559 ], [ %.03.ph.be.1, %556 ], [ %571, %570 ], [ %.03.ph.be.1, %567 ], [ %621, %620 ], [ %.7.2, %619 ], [ %.7.2, %.loopexit.2 ], [ %632, %631 ], [ %.03.ph.be.1, %628 ], [ %658, %656 ], [ %655, %654 ], [ %653, %652 ], [ %.03.ph.be.1, %650 ]
  call void @__loop_iteration_test___2()
  %659 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %660 = icmp ne i8* %659, null
  br i1 %660, label %.lr.ph.3, label %.outer._crit_edge.loopexit1

.lr.ph.3:                                         ; preds = %.outer.backedge.2
  call void @unroll_loop(i32 48)
  br label %661

; <label>:661:                                    ; preds = %695, %.lr.ph.3
  %.0712.3 = phi i32 [ %.lcssa.2, %.lr.ph.3 ], [ %662, %695 ]
  call void @unroll_loop(i32 44)
  %662 = add nsw i32 %.0712.3, 1
  %663 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %664 = icmp ne i8* %663, null
  br i1 %664, label %665, label %666

; <label>:665:                                    ; preds = %661
  store i8 0, i8* %663, align 1
  br label %666

; <label>:666:                                    ; preds = %665, %661
  %667 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %668 = icmp ne i8* %667, null
  br i1 %668, label %669, label %670

; <label>:669:                                    ; preds = %666
  store i8 0, i8* %667, align 1
  br label %670

; <label>:670:                                    ; preds = %669, %666
  %671 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %672 = icmp ne i8* %671, null
  br i1 %672, label %673, label %674

; <label>:673:                                    ; preds = %670
  store i8 0, i8* %671, align 1
  br label %674

; <label>:674:                                    ; preds = %673, %670
  %675 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %676 = icmp ne i8* %675, null
  br i1 %676, label %677, label %678

; <label>:677:                                    ; preds = %674
  store i8 0, i8* %675, align 1
  br label %678

; <label>:678:                                    ; preds = %677, %674
  %679 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %679, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %680 = load i8*, i8** %26, align 8
  %681 = icmp ne i8* %680, null
  %.14.3 = select i1 %681, i32 1, i32 0
  %682 = select i1 %681, i1 true, i1 false
  br i1 %682, label %.lr.ph6.preheader.3, label %._crit_edge.3

.lr.ph6.preheader.3:                              ; preds = %678
  br label %.lr.ph6.3

.lr.ph6.3:                                        ; preds = %.lr.ph6.3, %.lr.ph6.preheader.3
  %.15.3 = phi i32 [ %.1.3, %.lr.ph6.3 ], [ %.14.3, %.lr.ph6.preheader.3 ]
  %683 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %684 = sext i32 %.15.3 to i64
  %685 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %684
  store i8* %683, i8** %685, align 8
  call void @unroll_loop(i32 45)
  %686 = sext i32 %.15.3 to i64
  %687 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %686
  %688 = load i8*, i8** %687, align 8
  %689 = icmp ne i8* %688, null
  %690 = add nsw i32 %.15.3, 1
  %691 = icmp slt i32 %690, 30
  %.1.3 = select i1 %689, i32 %690, i32 %.15.3
  %692 = select i1 %689, i1 %691, i1 false
  br i1 %692, label %.lr.ph6.3, label %._crit_edge.loopexit.3

._crit_edge.loopexit.3:                           ; preds = %.lr.ph6.3
  %.1.lcssa.ph.3 = phi i32 [ %.1.3, %.lr.ph6.3 ]
  br label %._crit_edge.3

._crit_edge.3:                                    ; preds = %._crit_edge.loopexit.3, %678
  %.1.lcssa.3 = phi i32 [ %.14.3, %678 ], [ %.1.lcssa.ph.3, %._crit_edge.loopexit.3 ]
  %693 = load i8*, i8** %27, align 16
  %694 = icmp ne i8* %693, null
  br i1 %694, label %698, label %695

; <label>:695:                                    ; preds = %._crit_edge.3
  %696 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %697 = icmp ne i8* %696, null
  br i1 %697, label %661, label %.outer._crit_edge.loopexit.loopexit3

; <label>:698:                                    ; preds = %._crit_edge.3
  %.1.lcssa.lcssa.3 = phi i32 [ %.1.lcssa.3, %._crit_edge.3 ]
  %.lcssa.3 = phi i32 [ %662, %._crit_edge.3 ]
  %699 = load i8*, i8** %28, align 16
  %700 = call i32 @strcasecmp(i8* %699, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %701 = icmp ne i32 %700, 0
  br i1 %701, label %727, label %702

; <label>:702:                                    ; preds = %698
  %703 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  %704 = icmp sgt i32 %.1.lcssa.lcssa.3, 4
  %or.cond.3 = or i1 %703, %704
  br i1 %or.cond.3, label %725, label %705

; <label>:705:                                    ; preds = %702
  %706 = icmp sgt i32 %.1.lcssa.lcssa.3, 2
  br i1 %706, label %707, label %718

; <label>:707:                                    ; preds = %705
  %708 = load i8*, i8** %34, align 8
  %709 = call i32 @strcasecmp(i8* %708, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %710 = icmp ne i32 %709, 0
  br i1 %710, label %722, label %711

; <label>:711:                                    ; preds = %707
  %712 = icmp sge i32 %.1.lcssa.lcssa.3, 3
  br i1 %712, label %715, label %713

; <label>:713:                                    ; preds = %711
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.3)
  %714 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:715:                                    ; preds = %711
  %716 = load i8*, i8** %40, align 8
  %717 = call i32 @atoi(i8* %716) #8
  br label %718

; <label>:718:                                    ; preds = %715, %705
  %.08.3 = phi i32 [ %717, %715 ], [ 53, %705 ]
  %719 = load i8*, i8** %35, align 8
  %720 = call i32 @fwd_add(i8* %719, i32 %.08.3)
  %721 = icmp eq i32 %720, -1
  br i1 %721, label %.loopexit1.loopexit, label %.outer.backedge.3

; <label>:722:                                    ; preds = %707
  %723 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.3, i8* %723)
  %724 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:725:                                    ; preds = %702
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.3)
  %726 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:727:                                    ; preds = %698
  %728 = load i8*, i8** %29, align 16
  %729 = call i32 @strcasecmp(i8* %728, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %730 = icmp ne i32 %729, 0
  br i1 %730, label %744, label %731

; <label>:731:                                    ; preds = %727
  %732 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %732, label %742, label %733

; <label>:733:                                    ; preds = %731
  %734 = load i8*, i8** %32, align 8
  %735 = call i32 @conv_trick_conf(i8* %734)
  %736 = icmp ne i32 %735, 0
  %737 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %738 = load i8*, i8** %33, align 8
  br i1 %736, label %740, label %739

; <label>:739:                                    ; preds = %733
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %737, i8* %738)
  br label %.outer.backedge.3

; <label>:740:                                    ; preds = %733
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %737, i8* %738)
  %741 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:742:                                    ; preds = %731
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.3)
  %743 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:744:                                    ; preds = %727
  %745 = load i8*, i8** %30, align 16
  %746 = call i32 @strcasecmp(i8* %745, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %747 = icmp ne i32 %746, 0
  br i1 %747, label %753, label %748

; <label>:748:                                    ; preds = %744
  %749 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %749, label %751, label %750

; <label>:750:                                    ; preds = %748
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.3

; <label>:751:                                    ; preds = %748
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.3)
  %752 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:753:                                    ; preds = %744
  %754 = load i8*, i8** %31, align 16
  %755 = call i32 @strcasecmp(i8* %754, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %756 = icmp ne i32 %755, 0
  br i1 %756, label %764, label %757

; <label>:757:                                    ; preds = %753
  %758 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %758, label %762, label %759

; <label>:759:                                    ; preds = %757
  %760 = load i8*, i8** %39, align 8
  %761 = call i32 @atoi(i8* %760) #8
  store i32 %761, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.3

; <label>:762:                                    ; preds = %757
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.3)
  %763 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:764:                                    ; preds = %753
  %765 = load i8*, i8** %36, align 16
  %766 = call i32 @strcasecmp(i8* %765, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %767 = icmp ne i32 %766, 0
  br i1 %767, label %775, label %768

; <label>:768:                                    ; preds = %764
  %769 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %769, label %773, label %770

; <label>:770:                                    ; preds = %768
  %771 = load i8*, i8** %42, align 8
  %772 = call noalias i8* @strdup(i8* %771) #9, !track !108
  store i8* %772, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.3

; <label>:773:                                    ; preds = %768
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.3)
  %774 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:775:                                    ; preds = %764
  %776 = load i8*, i8** %38, align 16
  %777 = call i32 @strcasecmp(i8* %776, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %778 = icmp ne i32 %777, 0
  br i1 %778, label %825, label %779

; <label>:779:                                    ; preds = %775
  %780 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  br i1 %780, label %781, label %783

; <label>:781:                                    ; preds = %779
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.3)
  %782 = add nsw i32 %.03.ph.be.2, 1
  br label %783

; <label>:783:                                    ; preds = %781, %779
  %.7.3 = phi i32 [ %782, %781 ], [ %.03.ph.be.2, %779 ]
  br label %784

; <label>:784:                                    ; preds = %784, %783
  %lsr.iv.3 = phi i64 [ %lsr.iv.next.3, %784 ], [ -1, %783 ]
  %785 = add i64 %lsr.iv.3, 1
  call void @unroll_loop(i32 46)
  %786 = shl i64 %lsr.iv.3, 3
  %uglygep.3 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %786
  %uglygep3.3 = bitcast i8* %uglygep.3 to i8**
  %scevgep.3 = getelementptr i8*, i8** %uglygep3.3, i64 111
  %787 = load i8*, i8** %scevgep.3, align 8
  %788 = icmp ne i8* %787, null
  %789 = icmp ult i64 %785, 30
  %spec.select.3 = select i1 %788, i1 %789, i1 false
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %spec.select.3, label %784, label %790

; <label>:790:                                    ; preds = %784
  %.01.lcssa.wide.3 = phi i64 [ %lsr.iv.next.3, %784 ]
  %791 = trunc i64 %.01.lcssa.wide.3 to i32
  %792 = add nsw i32 %791, %.1.lcssa.lcssa.3
  %793 = sub nsw i32 %792, 1
  %794 = icmp sgt i32 %793, 30
  br i1 %794, label %823, label %795

; <label>:795:                                    ; preds = %790
  %796 = sub nsw i32 %.1.lcssa.lcssa.3, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.3, i32 %796)
  %797 = add nsw i32 %.1.lcssa.lcssa.3, -1
  %798 = add nsw i32 %791, %.1.lcssa.lcssa.3
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %799
  store i8* null, i8** %800, align 8
  %801 = icmp ne i32 %797, 0
  br i1 %801, label %.lr.ph16.3, label %.loopexit.3

.lr.ph16.3:                                       ; preds = %795
  %802 = add i32 %.1.lcssa.lcssa.3, -1
  %803 = sext i32 %802 to i64
  %804 = sext i32 %791 to i64
  %scevgep4.3 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %803
  %805 = shl i64 %803, 1
  %806 = shl i64 %804, 1
  %807 = add i64 %805, %806
  %scevgep9.3 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %807
  %808 = sub i32 1, %.1.lcssa.lcssa.3
  %809 = zext i32 %808 to i64
  br label %810

; <label>:810:                                    ; preds = %815, %.lr.ph16.3
  %lsr.iv5.3 = phi i64 [ 0, %.lr.ph16.3 ], [ %lsr.iv.next6.3, %815 ]
  call void @unroll_loop(i32 47)
  %scevgep7.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %811 = load i8*, i8** %scevgep7.3, align 8
  %812 = call i32 @strcmp(i8* %811, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %813 = icmp ne i32 %812, 0
  br i1 %813, label %815, label %814

; <label>:814:                                    ; preds = %810
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.3

; <label>:815:                                    ; preds = %810
  %scevgep8.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %816 = load i8*, i8** %scevgep8.3, align 8
  %817 = call noalias i8* @strdup(i8* %816) #9, !track !109
  %818 = shl i64 %lsr.iv5.3, 1
  %scevgep10.3 = getelementptr i32, i32* %scevgep9.3, i64 %818
  %scevgep1011.3 = bitcast i32* %scevgep10.3 to i8**
  store i8* %817, i8** %scevgep1011.3, align 8
  %lsr.iv.next6.3 = add nsw i64 %lsr.iv5.3, -1
  %tmp.3 = trunc i64 %lsr.iv.next6.3 to i32
  %819 = icmp ne i32 %808, %tmp.3
  br i1 %819, label %810, label %.loopexit.loopexit.3

.loopexit.loopexit.3:                             ; preds = %815
  br label %.loopexit.3

.loopexit.3:                                      ; preds = %.loopexit.loopexit.3, %814, %795
  %820 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %821 = icmp ne i8* %820, null
  br i1 %821, label %822, label %.outer.backedge.3

; <label>:822:                                    ; preds = %.loopexit.3
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.3

; <label>:823:                                    ; preds = %790
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.3, i32 30)
  %824 = add nsw i32 %.7.3, 1
  br label %.outer.backedge.3

; <label>:825:                                    ; preds = %775
  %826 = load i8*, i8** %41, align 16
  %827 = call i32 @strcasecmp(i8* %826, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %828 = icmp ne i32 %827, 0
  br i1 %828, label %836, label %829

; <label>:829:                                    ; preds = %825
  %830 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %830, label %834, label %831

; <label>:831:                                    ; preds = %829
  %832 = load i8*, i8** %45, align 8
  %833 = call i32 @atoi(i8* %832) #8
  store i32 %833, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.3

; <label>:834:                                    ; preds = %829
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.3)
  %835 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:836:                                    ; preds = %825
  %837 = load i8*, i8** %43, align 16
  %838 = call i32 @strcasecmp(i8* %837, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %839 = icmp ne i32 %838, 0
  br i1 %839, label %859, label %840

; <label>:840:                                    ; preds = %836
  %841 = icmp ne i32 %.1.lcssa.lcssa.3, 4
  br i1 %841, label %857, label %842

; <label>:842:                                    ; preds = %840
  %843 = load i8*, i8** %46, align 8
  %844 = load i8*, i8** %47, align 16
  %845 = load i8*, i8** %48, align 8
  %846 = call i32 @atoi(i8* %845) #8
  %847 = call i32 @conv_scoped_conf(i8* %843, i8* %844, i32 %846)
  %848 = icmp ne i32 %847, 0
  %849 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %850 = load i8*, i8** %49, align 8
  %851 = load i8*, i8** %50, align 16
  %852 = load i8*, i8** %51, align 8
  br i1 %848, label %855, label %853

; <label>:853:                                    ; preds = %842
  %854 = call i32 @atoi(i8* %852) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %849, i8* %850, i8* %851, i32 %854)
  br label %.outer.backedge.3

; <label>:855:                                    ; preds = %842
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %849, i8* %850, i8* %851, i8* %852)
  %856 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:857:                                    ; preds = %840
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.3)
  %858 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:859:                                    ; preds = %836
  %860 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.3, i8* %860)
  %861 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

.outer.backedge.3:                                ; preds = %859, %857, %855, %853, %834, %831, %823, %822, %.loopexit.3, %773, %770, %762, %759, %751, %750, %742, %740, %739, %725, %722, %718, %713
  %.03.ph.be.3 = phi i32 [ %714, %713 ], [ %724, %722 ], [ %726, %725 ], [ %.03.ph.be.2, %718 ], [ %743, %742 ], [ %741, %740 ], [ %.03.ph.be.2, %739 ], [ %752, %751 ], [ %.03.ph.be.2, %750 ], [ %763, %762 ], [ %.03.ph.be.2, %759 ], [ %774, %773 ], [ %.03.ph.be.2, %770 ], [ %824, %823 ], [ %.7.3, %822 ], [ %.7.3, %.loopexit.3 ], [ %835, %834 ], [ %.03.ph.be.2, %831 ], [ %861, %859 ], [ %858, %857 ], [ %856, %855 ], [ %.03.ph.be.2, %853 ]
  call void @__loop_iteration_test___2()
  %862 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %863 = icmp ne i8* %862, null
  br i1 %863, label %.lr.ph.4, label %.outer._crit_edge.loopexit1

.lr.ph.4:                                         ; preds = %.outer.backedge.3
  call void @unroll_loop(i32 48)
  br label %864

; <label>:864:                                    ; preds = %898, %.lr.ph.4
  %.0712.4 = phi i32 [ %.lcssa.3, %.lr.ph.4 ], [ %865, %898 ]
  call void @unroll_loop(i32 44)
  %865 = add nsw i32 %.0712.4, 1
  %866 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %867 = icmp ne i8* %866, null
  br i1 %867, label %868, label %869

; <label>:868:                                    ; preds = %864
  store i8 0, i8* %866, align 1
  br label %869

; <label>:869:                                    ; preds = %868, %864
  %870 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %871 = icmp ne i8* %870, null
  br i1 %871, label %872, label %873

; <label>:872:                                    ; preds = %869
  store i8 0, i8* %870, align 1
  br label %873

; <label>:873:                                    ; preds = %872, %869
  %874 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %875 = icmp ne i8* %874, null
  br i1 %875, label %876, label %877

; <label>:876:                                    ; preds = %873
  store i8 0, i8* %874, align 1
  br label %877

; <label>:877:                                    ; preds = %876, %873
  %878 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %879 = icmp ne i8* %878, null
  br i1 %879, label %880, label %881

; <label>:880:                                    ; preds = %877
  store i8 0, i8* %878, align 1
  br label %881

; <label>:881:                                    ; preds = %880, %877
  %882 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %882, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %883 = load i8*, i8** %26, align 8
  %884 = icmp ne i8* %883, null
  %.14.4 = select i1 %884, i32 1, i32 0
  %885 = select i1 %884, i1 true, i1 false
  br i1 %885, label %.lr.ph6.preheader.4, label %._crit_edge.4

.lr.ph6.preheader.4:                              ; preds = %881
  br label %.lr.ph6.4

.lr.ph6.4:                                        ; preds = %.lr.ph6.4, %.lr.ph6.preheader.4
  %.15.4 = phi i32 [ %.1.4, %.lr.ph6.4 ], [ %.14.4, %.lr.ph6.preheader.4 ]
  %886 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %887 = sext i32 %.15.4 to i64
  %888 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %887
  store i8* %886, i8** %888, align 8
  call void @unroll_loop(i32 45)
  %889 = sext i32 %.15.4 to i64
  %890 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %889
  %891 = load i8*, i8** %890, align 8
  %892 = icmp ne i8* %891, null
  %893 = add nsw i32 %.15.4, 1
  %894 = icmp slt i32 %893, 30
  %.1.4 = select i1 %892, i32 %893, i32 %.15.4
  %895 = select i1 %892, i1 %894, i1 false
  br i1 %895, label %.lr.ph6.4, label %._crit_edge.loopexit.4

._crit_edge.loopexit.4:                           ; preds = %.lr.ph6.4
  %.1.lcssa.ph.4 = phi i32 [ %.1.4, %.lr.ph6.4 ]
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %._crit_edge.loopexit.4, %881
  %.1.lcssa.4 = phi i32 [ %.14.4, %881 ], [ %.1.lcssa.ph.4, %._crit_edge.loopexit.4 ]
  %896 = load i8*, i8** %27, align 16
  %897 = icmp ne i8* %896, null
  br i1 %897, label %901, label %898

; <label>:898:                                    ; preds = %._crit_edge.4
  %899 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %900 = icmp ne i8* %899, null
  br i1 %900, label %864, label %.outer._crit_edge.loopexit.loopexit4

; <label>:901:                                    ; preds = %._crit_edge.4
  %.1.lcssa.lcssa.4 = phi i32 [ %.1.lcssa.4, %._crit_edge.4 ]
  %.lcssa.4 = phi i32 [ %865, %._crit_edge.4 ]
  %902 = load i8*, i8** %28, align 16
  %903 = call i32 @strcasecmp(i8* %902, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %904 = icmp ne i32 %903, 0
  br i1 %904, label %930, label %905

; <label>:905:                                    ; preds = %901
  %906 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  %907 = icmp sgt i32 %.1.lcssa.lcssa.4, 4
  %or.cond.4 = or i1 %906, %907
  br i1 %or.cond.4, label %928, label %908

; <label>:908:                                    ; preds = %905
  %909 = icmp sgt i32 %.1.lcssa.lcssa.4, 2
  br i1 %909, label %910, label %921

; <label>:910:                                    ; preds = %908
  %911 = load i8*, i8** %34, align 8
  %912 = call i32 @strcasecmp(i8* %911, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %913 = icmp ne i32 %912, 0
  br i1 %913, label %925, label %914

; <label>:914:                                    ; preds = %910
  %915 = icmp sge i32 %.1.lcssa.lcssa.4, 3
  br i1 %915, label %918, label %916

; <label>:916:                                    ; preds = %914
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.4)
  %917 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:918:                                    ; preds = %914
  %919 = load i8*, i8** %40, align 8
  %920 = call i32 @atoi(i8* %919) #8
  br label %921

; <label>:921:                                    ; preds = %918, %908
  %.08.4 = phi i32 [ %920, %918 ], [ 53, %908 ]
  %922 = load i8*, i8** %35, align 8
  %923 = call i32 @fwd_add(i8* %922, i32 %.08.4)
  %924 = icmp eq i32 %923, -1
  br i1 %924, label %.loopexit1.loopexit, label %.outer.backedge.4

; <label>:925:                                    ; preds = %910
  %926 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.4, i8* %926)
  %927 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:928:                                    ; preds = %905
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.4)
  %929 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:930:                                    ; preds = %901
  %931 = load i8*, i8** %29, align 16
  %932 = call i32 @strcasecmp(i8* %931, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %933 = icmp ne i32 %932, 0
  br i1 %933, label %947, label %934

; <label>:934:                                    ; preds = %930
  %935 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %935, label %945, label %936

; <label>:936:                                    ; preds = %934
  %937 = load i8*, i8** %32, align 8
  %938 = call i32 @conv_trick_conf(i8* %937)
  %939 = icmp ne i32 %938, 0
  %940 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %941 = load i8*, i8** %33, align 8
  br i1 %939, label %943, label %942

; <label>:942:                                    ; preds = %936
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %940, i8* %941)
  br label %.outer.backedge.4

; <label>:943:                                    ; preds = %936
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %940, i8* %941)
  %944 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:945:                                    ; preds = %934
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.4)
  %946 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:947:                                    ; preds = %930
  %948 = load i8*, i8** %30, align 16
  %949 = call i32 @strcasecmp(i8* %948, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %950 = icmp ne i32 %949, 0
  br i1 %950, label %956, label %951

; <label>:951:                                    ; preds = %947
  %952 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %952, label %954, label %953

; <label>:953:                                    ; preds = %951
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.4

; <label>:954:                                    ; preds = %951
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.4)
  %955 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:956:                                    ; preds = %947
  %957 = load i8*, i8** %31, align 16
  %958 = call i32 @strcasecmp(i8* %957, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %959 = icmp ne i32 %958, 0
  br i1 %959, label %967, label %960

; <label>:960:                                    ; preds = %956
  %961 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %961, label %965, label %962

; <label>:962:                                    ; preds = %960
  %963 = load i8*, i8** %39, align 8
  %964 = call i32 @atoi(i8* %963) #8
  store i32 %964, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.4

; <label>:965:                                    ; preds = %960
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.4)
  %966 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:967:                                    ; preds = %956
  %968 = load i8*, i8** %36, align 16
  %969 = call i32 @strcasecmp(i8* %968, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %970 = icmp ne i32 %969, 0
  br i1 %970, label %978, label %971

; <label>:971:                                    ; preds = %967
  %972 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %972, label %976, label %973

; <label>:973:                                    ; preds = %971
  %974 = load i8*, i8** %42, align 8
  %975 = call noalias i8* @strdup(i8* %974) #9, !track !108
  store i8* %975, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.4

; <label>:976:                                    ; preds = %971
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.4)
  %977 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:978:                                    ; preds = %967
  %979 = load i8*, i8** %38, align 16
  %980 = call i32 @strcasecmp(i8* %979, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %981 = icmp ne i32 %980, 0
  br i1 %981, label %1028, label %982

; <label>:982:                                    ; preds = %978
  %983 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  br i1 %983, label %984, label %986

; <label>:984:                                    ; preds = %982
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.4)
  %985 = add nsw i32 %.03.ph.be.3, 1
  br label %986

; <label>:986:                                    ; preds = %984, %982
  %.7.4 = phi i32 [ %985, %984 ], [ %.03.ph.be.3, %982 ]
  br label %987

; <label>:987:                                    ; preds = %987, %986
  %lsr.iv.4 = phi i64 [ %lsr.iv.next.4, %987 ], [ -1, %986 ]
  %988 = add i64 %lsr.iv.4, 1
  call void @unroll_loop(i32 46)
  %989 = shl i64 %lsr.iv.4, 3
  %uglygep.4 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %989
  %uglygep3.4 = bitcast i8* %uglygep.4 to i8**
  %scevgep.4 = getelementptr i8*, i8** %uglygep3.4, i64 111
  %990 = load i8*, i8** %scevgep.4, align 8
  %991 = icmp ne i8* %990, null
  %992 = icmp ult i64 %988, 30
  %spec.select.4 = select i1 %991, i1 %992, i1 false
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %spec.select.4, label %987, label %993

; <label>:993:                                    ; preds = %987
  %.01.lcssa.wide.4 = phi i64 [ %lsr.iv.next.4, %987 ]
  %994 = trunc i64 %.01.lcssa.wide.4 to i32
  %995 = add nsw i32 %994, %.1.lcssa.lcssa.4
  %996 = sub nsw i32 %995, 1
  %997 = icmp sgt i32 %996, 30
  br i1 %997, label %1026, label %998

; <label>:998:                                    ; preds = %993
  %999 = sub nsw i32 %.1.lcssa.lcssa.4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.4, i32 %999)
  %1000 = add nsw i32 %.1.lcssa.lcssa.4, -1
  %1001 = add nsw i32 %994, %.1.lcssa.lcssa.4
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1002
  store i8* null, i8** %1003, align 8
  %1004 = icmp ne i32 %1000, 0
  br i1 %1004, label %.lr.ph16.4, label %.loopexit.4

.lr.ph16.4:                                       ; preds = %998
  %1005 = add i32 %.1.lcssa.lcssa.4, -1
  %1006 = sext i32 %1005 to i64
  %1007 = sext i32 %994 to i64
  %scevgep4.4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1006
  %1008 = shl i64 %1006, 1
  %1009 = shl i64 %1007, 1
  %1010 = add i64 %1008, %1009
  %scevgep9.4 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1010
  %1011 = sub i32 1, %.1.lcssa.lcssa.4
  %1012 = zext i32 %1011 to i64
  br label %1013

; <label>:1013:                                   ; preds = %1018, %.lr.ph16.4
  %lsr.iv5.4 = phi i64 [ 0, %.lr.ph16.4 ], [ %lsr.iv.next6.4, %1018 ]
  call void @unroll_loop(i32 47)
  %scevgep7.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1014 = load i8*, i8** %scevgep7.4, align 8
  %1015 = call i32 @strcmp(i8* %1014, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1016 = icmp ne i32 %1015, 0
  br i1 %1016, label %1018, label %1017

; <label>:1017:                                   ; preds = %1013
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.4

; <label>:1018:                                   ; preds = %1013
  %scevgep8.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1019 = load i8*, i8** %scevgep8.4, align 8
  %1020 = call noalias i8* @strdup(i8* %1019) #9, !track !109
  %1021 = shl i64 %lsr.iv5.4, 1
  %scevgep10.4 = getelementptr i32, i32* %scevgep9.4, i64 %1021
  %scevgep1011.4 = bitcast i32* %scevgep10.4 to i8**
  store i8* %1020, i8** %scevgep1011.4, align 8
  %lsr.iv.next6.4 = add nsw i64 %lsr.iv5.4, -1
  %tmp.4 = trunc i64 %lsr.iv.next6.4 to i32
  %1022 = icmp ne i32 %1011, %tmp.4
  br i1 %1022, label %1013, label %.loopexit.loopexit.4

.loopexit.loopexit.4:                             ; preds = %1018
  br label %.loopexit.4

.loopexit.4:                                      ; preds = %.loopexit.loopexit.4, %1017, %998
  %1023 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1024 = icmp ne i8* %1023, null
  br i1 %1024, label %1025, label %.outer.backedge.4

; <label>:1025:                                   ; preds = %.loopexit.4
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.4

; <label>:1026:                                   ; preds = %993
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.4, i32 30)
  %1027 = add nsw i32 %.7.4, 1
  br label %.outer.backedge.4

; <label>:1028:                                   ; preds = %978
  %1029 = load i8*, i8** %41, align 16
  %1030 = call i32 @strcasecmp(i8* %1029, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1031 = icmp ne i32 %1030, 0
  br i1 %1031, label %1039, label %1032

; <label>:1032:                                   ; preds = %1028
  %1033 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %1033, label %1037, label %1034

; <label>:1034:                                   ; preds = %1032
  %1035 = load i8*, i8** %45, align 8
  %1036 = call i32 @atoi(i8* %1035) #8
  store i32 %1036, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.4

; <label>:1037:                                   ; preds = %1032
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.4)
  %1038 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1039:                                   ; preds = %1028
  %1040 = load i8*, i8** %43, align 16
  %1041 = call i32 @strcasecmp(i8* %1040, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1042 = icmp ne i32 %1041, 0
  br i1 %1042, label %1062, label %1043

; <label>:1043:                                   ; preds = %1039
  %1044 = icmp ne i32 %.1.lcssa.lcssa.4, 4
  br i1 %1044, label %1060, label %1045

; <label>:1045:                                   ; preds = %1043
  %1046 = load i8*, i8** %46, align 8
  %1047 = load i8*, i8** %47, align 16
  %1048 = load i8*, i8** %48, align 8
  %1049 = call i32 @atoi(i8* %1048) #8
  %1050 = call i32 @conv_scoped_conf(i8* %1046, i8* %1047, i32 %1049)
  %1051 = icmp ne i32 %1050, 0
  %1052 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1053 = load i8*, i8** %49, align 8
  %1054 = load i8*, i8** %50, align 16
  %1055 = load i8*, i8** %51, align 8
  br i1 %1051, label %1058, label %1056

; <label>:1056:                                   ; preds = %1045
  %1057 = call i32 @atoi(i8* %1055) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1052, i8* %1053, i8* %1054, i32 %1057)
  br label %.outer.backedge.4

; <label>:1058:                                   ; preds = %1045
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1052, i8* %1053, i8* %1054, i8* %1055)
  %1059 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1060:                                   ; preds = %1043
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.4)
  %1061 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1062:                                   ; preds = %1039
  %1063 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.4, i8* %1063)
  %1064 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

.outer.backedge.4:                                ; preds = %1062, %1060, %1058, %1056, %1037, %1034, %1026, %1025, %.loopexit.4, %976, %973, %965, %962, %954, %953, %945, %943, %942, %928, %925, %921, %916
  %.03.ph.be.4 = phi i32 [ %917, %916 ], [ %927, %925 ], [ %929, %928 ], [ %.03.ph.be.3, %921 ], [ %946, %945 ], [ %944, %943 ], [ %.03.ph.be.3, %942 ], [ %955, %954 ], [ %.03.ph.be.3, %953 ], [ %966, %965 ], [ %.03.ph.be.3, %962 ], [ %977, %976 ], [ %.03.ph.be.3, %973 ], [ %1027, %1026 ], [ %.7.4, %1025 ], [ %.7.4, %.loopexit.4 ], [ %1038, %1037 ], [ %.03.ph.be.3, %1034 ], [ %1064, %1062 ], [ %1061, %1060 ], [ %1059, %1058 ], [ %.03.ph.be.3, %1056 ]
  call void @__loop_iteration_test___2()
  %1065 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1066 = icmp ne i8* %1065, null
  br i1 %1066, label %.lr.ph.5, label %.outer._crit_edge.loopexit1

.lr.ph.5:                                         ; preds = %.outer.backedge.4
  call void @unroll_loop(i32 48)
  br label %1067

; <label>:1067:                                   ; preds = %1101, %.lr.ph.5
  %.0712.5 = phi i32 [ %.lcssa.4, %.lr.ph.5 ], [ %1068, %1101 ]
  call void @unroll_loop(i32 44)
  %1068 = add nsw i32 %.0712.5, 1
  %1069 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1070 = icmp ne i8* %1069, null
  br i1 %1070, label %1071, label %1072

; <label>:1071:                                   ; preds = %1067
  store i8 0, i8* %1069, align 1
  br label %1072

; <label>:1072:                                   ; preds = %1071, %1067
  %1073 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1074 = icmp ne i8* %1073, null
  br i1 %1074, label %1075, label %1076

; <label>:1075:                                   ; preds = %1072
  store i8 0, i8* %1073, align 1
  br label %1076

; <label>:1076:                                   ; preds = %1075, %1072
  %1077 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1078 = icmp ne i8* %1077, null
  br i1 %1078, label %1079, label %1080

; <label>:1079:                                   ; preds = %1076
  store i8 0, i8* %1077, align 1
  br label %1080

; <label>:1080:                                   ; preds = %1079, %1076
  %1081 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1082 = icmp ne i8* %1081, null
  br i1 %1082, label %1083, label %1084

; <label>:1083:                                   ; preds = %1080
  store i8 0, i8* %1081, align 1
  br label %1084

; <label>:1084:                                   ; preds = %1083, %1080
  %1085 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1085, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1086 = load i8*, i8** %26, align 8
  %1087 = icmp ne i8* %1086, null
  %.14.5 = select i1 %1087, i32 1, i32 0
  %1088 = select i1 %1087, i1 true, i1 false
  br i1 %1088, label %.lr.ph6.preheader.5, label %._crit_edge.5

.lr.ph6.preheader.5:                              ; preds = %1084
  br label %.lr.ph6.5

.lr.ph6.5:                                        ; preds = %.lr.ph6.5, %.lr.ph6.preheader.5
  %.15.5 = phi i32 [ %.1.5, %.lr.ph6.5 ], [ %.14.5, %.lr.ph6.preheader.5 ]
  %1089 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1090 = sext i32 %.15.5 to i64
  %1091 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1090
  store i8* %1089, i8** %1091, align 8
  call void @unroll_loop(i32 45)
  %1092 = sext i32 %.15.5 to i64
  %1093 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1092
  %1094 = load i8*, i8** %1093, align 8
  %1095 = icmp ne i8* %1094, null
  %1096 = add nsw i32 %.15.5, 1
  %1097 = icmp slt i32 %1096, 30
  %.1.5 = select i1 %1095, i32 %1096, i32 %.15.5
  %1098 = select i1 %1095, i1 %1097, i1 false
  br i1 %1098, label %.lr.ph6.5, label %._crit_edge.loopexit.5

._crit_edge.loopexit.5:                           ; preds = %.lr.ph6.5
  %.1.lcssa.ph.5 = phi i32 [ %.1.5, %.lr.ph6.5 ]
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.loopexit.5, %1084
  %.1.lcssa.5 = phi i32 [ %.14.5, %1084 ], [ %.1.lcssa.ph.5, %._crit_edge.loopexit.5 ]
  %1099 = load i8*, i8** %27, align 16
  %1100 = icmp ne i8* %1099, null
  br i1 %1100, label %1104, label %1101

; <label>:1101:                                   ; preds = %._crit_edge.5
  %1102 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1103 = icmp ne i8* %1102, null
  br i1 %1103, label %1067, label %.outer._crit_edge.loopexit.loopexit5

; <label>:1104:                                   ; preds = %._crit_edge.5
  %.1.lcssa.lcssa.5 = phi i32 [ %.1.lcssa.5, %._crit_edge.5 ]
  %.lcssa.5 = phi i32 [ %1068, %._crit_edge.5 ]
  %1105 = load i8*, i8** %28, align 16
  %1106 = call i32 @strcasecmp(i8* %1105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1107 = icmp ne i32 %1106, 0
  br i1 %1107, label %1133, label %1108

; <label>:1108:                                   ; preds = %1104
  %1109 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  %1110 = icmp sgt i32 %.1.lcssa.lcssa.5, 4
  %or.cond.5 = or i1 %1109, %1110
  br i1 %or.cond.5, label %1131, label %1111

; <label>:1111:                                   ; preds = %1108
  %1112 = icmp sgt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1112, label %1113, label %1124

; <label>:1113:                                   ; preds = %1111
  %1114 = load i8*, i8** %34, align 8
  %1115 = call i32 @strcasecmp(i8* %1114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1116 = icmp ne i32 %1115, 0
  br i1 %1116, label %1128, label %1117

; <label>:1117:                                   ; preds = %1113
  %1118 = icmp sge i32 %.1.lcssa.lcssa.5, 3
  br i1 %1118, label %1121, label %1119

; <label>:1119:                                   ; preds = %1117
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.5)
  %1120 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1121:                                   ; preds = %1117
  %1122 = load i8*, i8** %40, align 8
  %1123 = call i32 @atoi(i8* %1122) #8
  br label %1124

; <label>:1124:                                   ; preds = %1121, %1111
  %.08.5 = phi i32 [ %1123, %1121 ], [ 53, %1111 ]
  %1125 = load i8*, i8** %35, align 8
  %1126 = call i32 @fwd_add(i8* %1125, i32 %.08.5)
  %1127 = icmp eq i32 %1126, -1
  br i1 %1127, label %.loopexit1.loopexit, label %.outer.backedge.5

; <label>:1128:                                   ; preds = %1113
  %1129 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.5, i8* %1129)
  %1130 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1131:                                   ; preds = %1108
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.5)
  %1132 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1133:                                   ; preds = %1104
  %1134 = load i8*, i8** %29, align 16
  %1135 = call i32 @strcasecmp(i8* %1134, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1136 = icmp ne i32 %1135, 0
  br i1 %1136, label %1150, label %1137

; <label>:1137:                                   ; preds = %1133
  %1138 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1138, label %1148, label %1139

; <label>:1139:                                   ; preds = %1137
  %1140 = load i8*, i8** %32, align 8
  %1141 = call i32 @conv_trick_conf(i8* %1140)
  %1142 = icmp ne i32 %1141, 0
  %1143 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1144 = load i8*, i8** %33, align 8
  br i1 %1142, label %1146, label %1145

; <label>:1145:                                   ; preds = %1139
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1143, i8* %1144)
  br label %.outer.backedge.5

; <label>:1146:                                   ; preds = %1139
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1143, i8* %1144)
  %1147 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1148:                                   ; preds = %1137
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.5)
  %1149 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1150:                                   ; preds = %1133
  %1151 = load i8*, i8** %30, align 16
  %1152 = call i32 @strcasecmp(i8* %1151, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1153 = icmp ne i32 %1152, 0
  br i1 %1153, label %1159, label %1154

; <label>:1154:                                   ; preds = %1150
  %1155 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1155, label %1157, label %1156

; <label>:1156:                                   ; preds = %1154
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.5

; <label>:1157:                                   ; preds = %1154
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.5)
  %1158 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1159:                                   ; preds = %1150
  %1160 = load i8*, i8** %31, align 16
  %1161 = call i32 @strcasecmp(i8* %1160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1162 = icmp ne i32 %1161, 0
  br i1 %1162, label %1170, label %1163

; <label>:1163:                                   ; preds = %1159
  %1164 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1164, label %1168, label %1165

; <label>:1165:                                   ; preds = %1163
  %1166 = load i8*, i8** %39, align 8
  %1167 = call i32 @atoi(i8* %1166) #8
  store i32 %1167, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.5

; <label>:1168:                                   ; preds = %1163
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.5)
  %1169 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1170:                                   ; preds = %1159
  %1171 = load i8*, i8** %36, align 16
  %1172 = call i32 @strcasecmp(i8* %1171, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1173 = icmp ne i32 %1172, 0
  br i1 %1173, label %1181, label %1174

; <label>:1174:                                   ; preds = %1170
  %1175 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1175, label %1179, label %1176

; <label>:1176:                                   ; preds = %1174
  %1177 = load i8*, i8** %42, align 8
  %1178 = call noalias i8* @strdup(i8* %1177) #9, !track !108
  store i8* %1178, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.5

; <label>:1179:                                   ; preds = %1174
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.5)
  %1180 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1181:                                   ; preds = %1170
  %1182 = load i8*, i8** %38, align 16
  %1183 = call i32 @strcasecmp(i8* %1182, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1184 = icmp ne i32 %1183, 0
  br i1 %1184, label %1231, label %1185

; <label>:1185:                                   ; preds = %1181
  %1186 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1186, label %1187, label %1189

; <label>:1187:                                   ; preds = %1185
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.5)
  %1188 = add nsw i32 %.03.ph.be.4, 1
  br label %1189

; <label>:1189:                                   ; preds = %1187, %1185
  %.7.5 = phi i32 [ %1188, %1187 ], [ %.03.ph.be.4, %1185 ]
  br label %1190

; <label>:1190:                                   ; preds = %1190, %1189
  %lsr.iv.5 = phi i64 [ %lsr.iv.next.5, %1190 ], [ -1, %1189 ]
  %1191 = add i64 %lsr.iv.5, 1
  call void @unroll_loop(i32 46)
  %1192 = shl i64 %lsr.iv.5, 3
  %uglygep.5 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1192
  %uglygep3.5 = bitcast i8* %uglygep.5 to i8**
  %scevgep.5 = getelementptr i8*, i8** %uglygep3.5, i64 111
  %1193 = load i8*, i8** %scevgep.5, align 8
  %1194 = icmp ne i8* %1193, null
  %1195 = icmp ult i64 %1191, 30
  %spec.select.5 = select i1 %1194, i1 %1195, i1 false
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %spec.select.5, label %1190, label %1196

; <label>:1196:                                   ; preds = %1190
  %.01.lcssa.wide.5 = phi i64 [ %lsr.iv.next.5, %1190 ]
  %1197 = trunc i64 %.01.lcssa.wide.5 to i32
  %1198 = add nsw i32 %1197, %.1.lcssa.lcssa.5
  %1199 = sub nsw i32 %1198, 1
  %1200 = icmp sgt i32 %1199, 30
  br i1 %1200, label %1229, label %1201

; <label>:1201:                                   ; preds = %1196
  %1202 = sub nsw i32 %.1.lcssa.lcssa.5, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.5, i32 %1202)
  %1203 = add nsw i32 %.1.lcssa.lcssa.5, -1
  %1204 = add nsw i32 %1197, %.1.lcssa.lcssa.5
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1205
  store i8* null, i8** %1206, align 8
  %1207 = icmp ne i32 %1203, 0
  br i1 %1207, label %.lr.ph16.5, label %.loopexit.5

.lr.ph16.5:                                       ; preds = %1201
  %1208 = add i32 %.1.lcssa.lcssa.5, -1
  %1209 = sext i32 %1208 to i64
  %1210 = sext i32 %1197 to i64
  %scevgep4.5 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1209
  %1211 = shl i64 %1209, 1
  %1212 = shl i64 %1210, 1
  %1213 = add i64 %1211, %1212
  %scevgep9.5 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1213
  %1214 = sub i32 1, %.1.lcssa.lcssa.5
  %1215 = zext i32 %1214 to i64
  br label %1216

; <label>:1216:                                   ; preds = %1221, %.lr.ph16.5
  %lsr.iv5.5 = phi i64 [ 0, %.lr.ph16.5 ], [ %lsr.iv.next6.5, %1221 ]
  call void @unroll_loop(i32 47)
  %scevgep7.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1217 = load i8*, i8** %scevgep7.5, align 8
  %1218 = call i32 @strcmp(i8* %1217, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1219 = icmp ne i32 %1218, 0
  br i1 %1219, label %1221, label %1220

; <label>:1220:                                   ; preds = %1216
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.5

; <label>:1221:                                   ; preds = %1216
  %scevgep8.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1222 = load i8*, i8** %scevgep8.5, align 8
  %1223 = call noalias i8* @strdup(i8* %1222) #9, !track !109
  %1224 = shl i64 %lsr.iv5.5, 1
  %scevgep10.5 = getelementptr i32, i32* %scevgep9.5, i64 %1224
  %scevgep1011.5 = bitcast i32* %scevgep10.5 to i8**
  store i8* %1223, i8** %scevgep1011.5, align 8
  %lsr.iv.next6.5 = add nsw i64 %lsr.iv5.5, -1
  %tmp.5 = trunc i64 %lsr.iv.next6.5 to i32
  %1225 = icmp ne i32 %1214, %tmp.5
  br i1 %1225, label %1216, label %.loopexit.loopexit.5

.loopexit.loopexit.5:                             ; preds = %1221
  br label %.loopexit.5

.loopexit.5:                                      ; preds = %.loopexit.loopexit.5, %1220, %1201
  %1226 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1227 = icmp ne i8* %1226, null
  br i1 %1227, label %1228, label %.outer.backedge.5

; <label>:1228:                                   ; preds = %.loopexit.5
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.5

; <label>:1229:                                   ; preds = %1196
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.5, i32 30)
  %1230 = add nsw i32 %.7.5, 1
  br label %.outer.backedge.5

; <label>:1231:                                   ; preds = %1181
  %1232 = load i8*, i8** %41, align 16
  %1233 = call i32 @strcasecmp(i8* %1232, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1234 = icmp ne i32 %1233, 0
  br i1 %1234, label %1242, label %1235

; <label>:1235:                                   ; preds = %1231
  %1236 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1236, label %1240, label %1237

; <label>:1237:                                   ; preds = %1235
  %1238 = load i8*, i8** %45, align 8
  %1239 = call i32 @atoi(i8* %1238) #8
  store i32 %1239, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.5

; <label>:1240:                                   ; preds = %1235
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.5)
  %1241 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1242:                                   ; preds = %1231
  %1243 = load i8*, i8** %43, align 16
  %1244 = call i32 @strcasecmp(i8* %1243, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1245 = icmp ne i32 %1244, 0
  br i1 %1245, label %1265, label %1246

; <label>:1246:                                   ; preds = %1242
  %1247 = icmp ne i32 %.1.lcssa.lcssa.5, 4
  br i1 %1247, label %1263, label %1248

; <label>:1248:                                   ; preds = %1246
  %1249 = load i8*, i8** %46, align 8
  %1250 = load i8*, i8** %47, align 16
  %1251 = load i8*, i8** %48, align 8
  %1252 = call i32 @atoi(i8* %1251) #8
  %1253 = call i32 @conv_scoped_conf(i8* %1249, i8* %1250, i32 %1252)
  %1254 = icmp ne i32 %1253, 0
  %1255 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1256 = load i8*, i8** %49, align 8
  %1257 = load i8*, i8** %50, align 16
  %1258 = load i8*, i8** %51, align 8
  br i1 %1254, label %1261, label %1259

; <label>:1259:                                   ; preds = %1248
  %1260 = call i32 @atoi(i8* %1258) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1255, i8* %1256, i8* %1257, i32 %1260)
  br label %.outer.backedge.5

; <label>:1261:                                   ; preds = %1248
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1255, i8* %1256, i8* %1257, i8* %1258)
  %1262 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1263:                                   ; preds = %1246
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.5)
  %1264 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1265:                                   ; preds = %1242
  %1266 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.5, i8* %1266)
  %1267 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

.outer.backedge.5:                                ; preds = %1265, %1263, %1261, %1259, %1240, %1237, %1229, %1228, %.loopexit.5, %1179, %1176, %1168, %1165, %1157, %1156, %1148, %1146, %1145, %1131, %1128, %1124, %1119
  %.03.ph.be.5 = phi i32 [ %1120, %1119 ], [ %1130, %1128 ], [ %1132, %1131 ], [ %.03.ph.be.4, %1124 ], [ %1149, %1148 ], [ %1147, %1146 ], [ %.03.ph.be.4, %1145 ], [ %1158, %1157 ], [ %.03.ph.be.4, %1156 ], [ %1169, %1168 ], [ %.03.ph.be.4, %1165 ], [ %1180, %1179 ], [ %.03.ph.be.4, %1176 ], [ %1230, %1229 ], [ %.7.5, %1228 ], [ %.7.5, %.loopexit.5 ], [ %1241, %1240 ], [ %.03.ph.be.4, %1237 ], [ %1267, %1265 ], [ %1264, %1263 ], [ %1262, %1261 ], [ %.03.ph.be.4, %1259 ]
  call void @__loop_iteration_test___2()
  %1268 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1269 = icmp ne i8* %1268, null
  br i1 %1269, label %.lr.ph.6, label %.outer._crit_edge.loopexit1

.lr.ph.6:                                         ; preds = %.outer.backedge.5
  call void @unroll_loop(i32 48)
  br label %1270

; <label>:1270:                                   ; preds = %1304, %.lr.ph.6
  %.0712.6 = phi i32 [ %.lcssa.5, %.lr.ph.6 ], [ %1271, %1304 ]
  call void @unroll_loop(i32 44)
  %1271 = add nsw i32 %.0712.6, 1
  %1272 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1273 = icmp ne i8* %1272, null
  br i1 %1273, label %1274, label %1275

; <label>:1274:                                   ; preds = %1270
  store i8 0, i8* %1272, align 1
  br label %1275

; <label>:1275:                                   ; preds = %1274, %1270
  %1276 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1277 = icmp ne i8* %1276, null
  br i1 %1277, label %1278, label %1279

; <label>:1278:                                   ; preds = %1275
  store i8 0, i8* %1276, align 1
  br label %1279

; <label>:1279:                                   ; preds = %1278, %1275
  %1280 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1281 = icmp ne i8* %1280, null
  br i1 %1281, label %1282, label %1283

; <label>:1282:                                   ; preds = %1279
  store i8 0, i8* %1280, align 1
  br label %1283

; <label>:1283:                                   ; preds = %1282, %1279
  %1284 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1285 = icmp ne i8* %1284, null
  br i1 %1285, label %1286, label %1287

; <label>:1286:                                   ; preds = %1283
  store i8 0, i8* %1284, align 1
  br label %1287

; <label>:1287:                                   ; preds = %1286, %1283
  %1288 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1288, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1289 = load i8*, i8** %26, align 8
  %1290 = icmp ne i8* %1289, null
  %.14.6 = select i1 %1290, i32 1, i32 0
  %1291 = select i1 %1290, i1 true, i1 false
  br i1 %1291, label %.lr.ph6.preheader.6, label %._crit_edge.6

.lr.ph6.preheader.6:                              ; preds = %1287
  br label %.lr.ph6.6

.lr.ph6.6:                                        ; preds = %.lr.ph6.6, %.lr.ph6.preheader.6
  %.15.6 = phi i32 [ %.1.6, %.lr.ph6.6 ], [ %.14.6, %.lr.ph6.preheader.6 ]
  %1292 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1293 = sext i32 %.15.6 to i64
  %1294 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1293
  store i8* %1292, i8** %1294, align 8
  call void @unroll_loop(i32 45)
  %1295 = sext i32 %.15.6 to i64
  %1296 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1295
  %1297 = load i8*, i8** %1296, align 8
  %1298 = icmp ne i8* %1297, null
  %1299 = add nsw i32 %.15.6, 1
  %1300 = icmp slt i32 %1299, 30
  %.1.6 = select i1 %1298, i32 %1299, i32 %.15.6
  %1301 = select i1 %1298, i1 %1300, i1 false
  br i1 %1301, label %.lr.ph6.6, label %._crit_edge.loopexit.6

._crit_edge.loopexit.6:                           ; preds = %.lr.ph6.6
  %.1.lcssa.ph.6 = phi i32 [ %.1.6, %.lr.ph6.6 ]
  br label %._crit_edge.6

._crit_edge.6:                                    ; preds = %._crit_edge.loopexit.6, %1287
  %.1.lcssa.6 = phi i32 [ %.14.6, %1287 ], [ %.1.lcssa.ph.6, %._crit_edge.loopexit.6 ]
  %1302 = load i8*, i8** %27, align 16
  %1303 = icmp ne i8* %1302, null
  br i1 %1303, label %1307, label %1304

; <label>:1304:                                   ; preds = %._crit_edge.6
  %1305 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1306 = icmp ne i8* %1305, null
  br i1 %1306, label %1270, label %.outer._crit_edge.loopexit.loopexit6

; <label>:1307:                                   ; preds = %._crit_edge.6
  %.1.lcssa.lcssa.6 = phi i32 [ %.1.lcssa.6, %._crit_edge.6 ]
  %.lcssa.6 = phi i32 [ %1271, %._crit_edge.6 ]
  %1308 = load i8*, i8** %28, align 16
  %1309 = call i32 @strcasecmp(i8* %1308, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1310 = icmp ne i32 %1309, 0
  br i1 %1310, label %1336, label %1311

; <label>:1311:                                   ; preds = %1307
  %1312 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  %1313 = icmp sgt i32 %.1.lcssa.lcssa.6, 4
  %or.cond.6 = or i1 %1312, %1313
  br i1 %or.cond.6, label %1334, label %1314

; <label>:1314:                                   ; preds = %1311
  %1315 = icmp sgt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1315, label %1316, label %1327

; <label>:1316:                                   ; preds = %1314
  %1317 = load i8*, i8** %34, align 8
  %1318 = call i32 @strcasecmp(i8* %1317, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1319 = icmp ne i32 %1318, 0
  br i1 %1319, label %1331, label %1320

; <label>:1320:                                   ; preds = %1316
  %1321 = icmp sge i32 %.1.lcssa.lcssa.6, 3
  br i1 %1321, label %1324, label %1322

; <label>:1322:                                   ; preds = %1320
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.6)
  %1323 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1324:                                   ; preds = %1320
  %1325 = load i8*, i8** %40, align 8
  %1326 = call i32 @atoi(i8* %1325) #8
  br label %1327

; <label>:1327:                                   ; preds = %1324, %1314
  %.08.6 = phi i32 [ %1326, %1324 ], [ 53, %1314 ]
  %1328 = load i8*, i8** %35, align 8
  %1329 = call i32 @fwd_add(i8* %1328, i32 %.08.6)
  %1330 = icmp eq i32 %1329, -1
  br i1 %1330, label %.loopexit1.loopexit, label %.outer.backedge.6

; <label>:1331:                                   ; preds = %1316
  %1332 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.6, i8* %1332)
  %1333 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1334:                                   ; preds = %1311
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.6)
  %1335 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1336:                                   ; preds = %1307
  %1337 = load i8*, i8** %29, align 16
  %1338 = call i32 @strcasecmp(i8* %1337, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1339 = icmp ne i32 %1338, 0
  br i1 %1339, label %1353, label %1340

; <label>:1340:                                   ; preds = %1336
  %1341 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1341, label %1351, label %1342

; <label>:1342:                                   ; preds = %1340
  %1343 = load i8*, i8** %32, align 8
  %1344 = call i32 @conv_trick_conf(i8* %1343)
  %1345 = icmp ne i32 %1344, 0
  %1346 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1347 = load i8*, i8** %33, align 8
  br i1 %1345, label %1349, label %1348

; <label>:1348:                                   ; preds = %1342
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1346, i8* %1347)
  br label %.outer.backedge.6

; <label>:1349:                                   ; preds = %1342
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1346, i8* %1347)
  %1350 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1351:                                   ; preds = %1340
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.6)
  %1352 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1353:                                   ; preds = %1336
  %1354 = load i8*, i8** %30, align 16
  %1355 = call i32 @strcasecmp(i8* %1354, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1356 = icmp ne i32 %1355, 0
  br i1 %1356, label %1362, label %1357

; <label>:1357:                                   ; preds = %1353
  %1358 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1358, label %1360, label %1359

; <label>:1359:                                   ; preds = %1357
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.6

; <label>:1360:                                   ; preds = %1357
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.6)
  %1361 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1362:                                   ; preds = %1353
  %1363 = load i8*, i8** %31, align 16
  %1364 = call i32 @strcasecmp(i8* %1363, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1365 = icmp ne i32 %1364, 0
  br i1 %1365, label %1373, label %1366

; <label>:1366:                                   ; preds = %1362
  %1367 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1367, label %1371, label %1368

; <label>:1368:                                   ; preds = %1366
  %1369 = load i8*, i8** %39, align 8
  %1370 = call i32 @atoi(i8* %1369) #8
  store i32 %1370, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.6

; <label>:1371:                                   ; preds = %1366
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.6)
  %1372 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1373:                                   ; preds = %1362
  %1374 = load i8*, i8** %36, align 16
  %1375 = call i32 @strcasecmp(i8* %1374, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1376 = icmp ne i32 %1375, 0
  br i1 %1376, label %1384, label %1377

; <label>:1377:                                   ; preds = %1373
  %1378 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1378, label %1382, label %1379

; <label>:1379:                                   ; preds = %1377
  %1380 = load i8*, i8** %42, align 8
  %1381 = call noalias i8* @strdup(i8* %1380) #9, !track !108
  store i8* %1381, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.6

; <label>:1382:                                   ; preds = %1377
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.6)
  %1383 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1384:                                   ; preds = %1373
  %1385 = load i8*, i8** %38, align 16
  %1386 = call i32 @strcasecmp(i8* %1385, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1387 = icmp ne i32 %1386, 0
  br i1 %1387, label %1434, label %1388

; <label>:1388:                                   ; preds = %1384
  %1389 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1389, label %1390, label %1392

; <label>:1390:                                   ; preds = %1388
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.6)
  %1391 = add nsw i32 %.03.ph.be.5, 1
  br label %1392

; <label>:1392:                                   ; preds = %1390, %1388
  %.7.6 = phi i32 [ %1391, %1390 ], [ %.03.ph.be.5, %1388 ]
  br label %1393

; <label>:1393:                                   ; preds = %1393, %1392
  %lsr.iv.6 = phi i64 [ %lsr.iv.next.6, %1393 ], [ -1, %1392 ]
  %1394 = add i64 %lsr.iv.6, 1
  call void @unroll_loop(i32 46)
  %1395 = shl i64 %lsr.iv.6, 3
  %uglygep.6 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1395
  %uglygep3.6 = bitcast i8* %uglygep.6 to i8**
  %scevgep.6 = getelementptr i8*, i8** %uglygep3.6, i64 111
  %1396 = load i8*, i8** %scevgep.6, align 8
  %1397 = icmp ne i8* %1396, null
  %1398 = icmp ult i64 %1394, 30
  %spec.select.6 = select i1 %1397, i1 %1398, i1 false
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %spec.select.6, label %1393, label %1399

; <label>:1399:                                   ; preds = %1393
  %.01.lcssa.wide.6 = phi i64 [ %lsr.iv.next.6, %1393 ]
  %1400 = trunc i64 %.01.lcssa.wide.6 to i32
  %1401 = add nsw i32 %1400, %.1.lcssa.lcssa.6
  %1402 = sub nsw i32 %1401, 1
  %1403 = icmp sgt i32 %1402, 30
  br i1 %1403, label %1432, label %1404

; <label>:1404:                                   ; preds = %1399
  %1405 = sub nsw i32 %.1.lcssa.lcssa.6, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.6, i32 %1405)
  %1406 = add nsw i32 %.1.lcssa.lcssa.6, -1
  %1407 = add nsw i32 %1400, %.1.lcssa.lcssa.6
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1408
  store i8* null, i8** %1409, align 8
  %1410 = icmp ne i32 %1406, 0
  br i1 %1410, label %.lr.ph16.6, label %.loopexit.6

.lr.ph16.6:                                       ; preds = %1404
  %1411 = add i32 %.1.lcssa.lcssa.6, -1
  %1412 = sext i32 %1411 to i64
  %1413 = sext i32 %1400 to i64
  %scevgep4.6 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1412
  %1414 = shl i64 %1412, 1
  %1415 = shl i64 %1413, 1
  %1416 = add i64 %1414, %1415
  %scevgep9.6 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1416
  %1417 = sub i32 1, %.1.lcssa.lcssa.6
  %1418 = zext i32 %1417 to i64
  br label %1419

; <label>:1419:                                   ; preds = %1424, %.lr.ph16.6
  %lsr.iv5.6 = phi i64 [ 0, %.lr.ph16.6 ], [ %lsr.iv.next6.6, %1424 ]
  call void @unroll_loop(i32 47)
  %scevgep7.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1420 = load i8*, i8** %scevgep7.6, align 8
  %1421 = call i32 @strcmp(i8* %1420, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1422 = icmp ne i32 %1421, 0
  br i1 %1422, label %1424, label %1423

; <label>:1423:                                   ; preds = %1419
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.6

; <label>:1424:                                   ; preds = %1419
  %scevgep8.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1425 = load i8*, i8** %scevgep8.6, align 8
  %1426 = call noalias i8* @strdup(i8* %1425) #9, !track !109
  %1427 = shl i64 %lsr.iv5.6, 1
  %scevgep10.6 = getelementptr i32, i32* %scevgep9.6, i64 %1427
  %scevgep1011.6 = bitcast i32* %scevgep10.6 to i8**
  store i8* %1426, i8** %scevgep1011.6, align 8
  %lsr.iv.next6.6 = add nsw i64 %lsr.iv5.6, -1
  %tmp.6 = trunc i64 %lsr.iv.next6.6 to i32
  %1428 = icmp ne i32 %1417, %tmp.6
  br i1 %1428, label %1419, label %.loopexit.loopexit.6

.loopexit.loopexit.6:                             ; preds = %1424
  br label %.loopexit.6

.loopexit.6:                                      ; preds = %.loopexit.loopexit.6, %1423, %1404
  %1429 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1430 = icmp ne i8* %1429, null
  br i1 %1430, label %1431, label %.outer.backedge.6

; <label>:1431:                                   ; preds = %.loopexit.6
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.6

; <label>:1432:                                   ; preds = %1399
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.6, i32 30)
  %1433 = add nsw i32 %.7.6, 1
  br label %.outer.backedge.6

; <label>:1434:                                   ; preds = %1384
  %1435 = load i8*, i8** %41, align 16
  %1436 = call i32 @strcasecmp(i8* %1435, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1437 = icmp ne i32 %1436, 0
  br i1 %1437, label %1445, label %1438

; <label>:1438:                                   ; preds = %1434
  %1439 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1439, label %1443, label %1440

; <label>:1440:                                   ; preds = %1438
  %1441 = load i8*, i8** %45, align 8
  %1442 = call i32 @atoi(i8* %1441) #8
  store i32 %1442, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.6

; <label>:1443:                                   ; preds = %1438
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.6)
  %1444 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1445:                                   ; preds = %1434
  %1446 = load i8*, i8** %43, align 16
  %1447 = call i32 @strcasecmp(i8* %1446, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1448 = icmp ne i32 %1447, 0
  br i1 %1448, label %1468, label %1449

; <label>:1449:                                   ; preds = %1445
  %1450 = icmp ne i32 %.1.lcssa.lcssa.6, 4
  br i1 %1450, label %1466, label %1451

; <label>:1451:                                   ; preds = %1449
  %1452 = load i8*, i8** %46, align 8
  %1453 = load i8*, i8** %47, align 16
  %1454 = load i8*, i8** %48, align 8
  %1455 = call i32 @atoi(i8* %1454) #8
  %1456 = call i32 @conv_scoped_conf(i8* %1452, i8* %1453, i32 %1455)
  %1457 = icmp ne i32 %1456, 0
  %1458 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1459 = load i8*, i8** %49, align 8
  %1460 = load i8*, i8** %50, align 16
  %1461 = load i8*, i8** %51, align 8
  br i1 %1457, label %1464, label %1462

; <label>:1462:                                   ; preds = %1451
  %1463 = call i32 @atoi(i8* %1461) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1458, i8* %1459, i8* %1460, i32 %1463)
  br label %.outer.backedge.6

; <label>:1464:                                   ; preds = %1451
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1458, i8* %1459, i8* %1460, i8* %1461)
  %1465 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1466:                                   ; preds = %1449
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.6)
  %1467 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1468:                                   ; preds = %1445
  %1469 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.6, i8* %1469)
  %1470 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

.outer.backedge.6:                                ; preds = %1468, %1466, %1464, %1462, %1443, %1440, %1432, %1431, %.loopexit.6, %1382, %1379, %1371, %1368, %1360, %1359, %1351, %1349, %1348, %1334, %1331, %1327, %1322
  %.03.ph.be.6 = phi i32 [ %1323, %1322 ], [ %1333, %1331 ], [ %1335, %1334 ], [ %.03.ph.be.5, %1327 ], [ %1352, %1351 ], [ %1350, %1349 ], [ %.03.ph.be.5, %1348 ], [ %1361, %1360 ], [ %.03.ph.be.5, %1359 ], [ %1372, %1371 ], [ %.03.ph.be.5, %1368 ], [ %1383, %1382 ], [ %.03.ph.be.5, %1379 ], [ %1433, %1432 ], [ %.7.6, %1431 ], [ %.7.6, %.loopexit.6 ], [ %1444, %1443 ], [ %.03.ph.be.5, %1440 ], [ %1470, %1468 ], [ %1467, %1466 ], [ %1465, %1464 ], [ %.03.ph.be.5, %1462 ]
  call void @__loop_iteration_test___2()
  %1471 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1472 = icmp ne i8* %1471, null
  br i1 %1472, label %.lr.ph.7, label %.outer._crit_edge.loopexit1

.lr.ph.7:                                         ; preds = %.outer.backedge.6
  call void @unroll_loop(i32 48)
  br label %1473

; <label>:1473:                                   ; preds = %1507, %.lr.ph.7
  %.0712.7 = phi i32 [ %.lcssa.6, %.lr.ph.7 ], [ %1474, %1507 ]
  call void @unroll_loop(i32 44)
  %1474 = add nsw i32 %.0712.7, 1
  %1475 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1476 = icmp ne i8* %1475, null
  br i1 %1476, label %1477, label %1478

; <label>:1477:                                   ; preds = %1473
  store i8 0, i8* %1475, align 1
  br label %1478

; <label>:1478:                                   ; preds = %1477, %1473
  %1479 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1480 = icmp ne i8* %1479, null
  br i1 %1480, label %1481, label %1482

; <label>:1481:                                   ; preds = %1478
  store i8 0, i8* %1479, align 1
  br label %1482

; <label>:1482:                                   ; preds = %1481, %1478
  %1483 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1484 = icmp ne i8* %1483, null
  br i1 %1484, label %1485, label %1486

; <label>:1485:                                   ; preds = %1482
  store i8 0, i8* %1483, align 1
  br label %1486

; <label>:1486:                                   ; preds = %1485, %1482
  %1487 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1488 = icmp ne i8* %1487, null
  br i1 %1488, label %1489, label %1490

; <label>:1489:                                   ; preds = %1486
  store i8 0, i8* %1487, align 1
  br label %1490

; <label>:1490:                                   ; preds = %1489, %1486
  %1491 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1491, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1492 = load i8*, i8** %26, align 8
  %1493 = icmp ne i8* %1492, null
  %.14.7 = select i1 %1493, i32 1, i32 0
  %1494 = select i1 %1493, i1 true, i1 false
  br i1 %1494, label %.lr.ph6.preheader.7, label %._crit_edge.7

.lr.ph6.preheader.7:                              ; preds = %1490
  br label %.lr.ph6.7

.lr.ph6.7:                                        ; preds = %.lr.ph6.7, %.lr.ph6.preheader.7
  %.15.7 = phi i32 [ %.1.7, %.lr.ph6.7 ], [ %.14.7, %.lr.ph6.preheader.7 ]
  %1495 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1496 = sext i32 %.15.7 to i64
  %1497 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1496
  store i8* %1495, i8** %1497, align 8
  call void @unroll_loop(i32 45)
  %1498 = sext i32 %.15.7 to i64
  %1499 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1498
  %1500 = load i8*, i8** %1499, align 8
  %1501 = icmp ne i8* %1500, null
  %1502 = add nsw i32 %.15.7, 1
  %1503 = icmp slt i32 %1502, 30
  %.1.7 = select i1 %1501, i32 %1502, i32 %.15.7
  %1504 = select i1 %1501, i1 %1503, i1 false
  br i1 %1504, label %.lr.ph6.7, label %._crit_edge.loopexit.7

._crit_edge.loopexit.7:                           ; preds = %.lr.ph6.7
  %.1.lcssa.ph.7 = phi i32 [ %.1.7, %.lr.ph6.7 ]
  br label %._crit_edge.7

._crit_edge.7:                                    ; preds = %._crit_edge.loopexit.7, %1490
  %.1.lcssa.7 = phi i32 [ %.14.7, %1490 ], [ %.1.lcssa.ph.7, %._crit_edge.loopexit.7 ]
  %1505 = load i8*, i8** %27, align 16
  %1506 = icmp ne i8* %1505, null
  br i1 %1506, label %1510, label %1507

; <label>:1507:                                   ; preds = %._crit_edge.7
  %1508 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1509 = icmp ne i8* %1508, null
  br i1 %1509, label %1473, label %.outer._crit_edge.loopexit.loopexit7

; <label>:1510:                                   ; preds = %._crit_edge.7
  %.1.lcssa.lcssa.7 = phi i32 [ %.1.lcssa.7, %._crit_edge.7 ]
  %.lcssa.7 = phi i32 [ %1474, %._crit_edge.7 ]
  %1511 = load i8*, i8** %28, align 16
  %1512 = call i32 @strcasecmp(i8* %1511, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1513 = icmp ne i32 %1512, 0
  br i1 %1513, label %1539, label %1514

; <label>:1514:                                   ; preds = %1510
  %1515 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  %1516 = icmp sgt i32 %.1.lcssa.lcssa.7, 4
  %or.cond.7 = or i1 %1515, %1516
  br i1 %or.cond.7, label %1537, label %1517

; <label>:1517:                                   ; preds = %1514
  %1518 = icmp sgt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1518, label %1519, label %1530

; <label>:1519:                                   ; preds = %1517
  %1520 = load i8*, i8** %34, align 8
  %1521 = call i32 @strcasecmp(i8* %1520, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1522 = icmp ne i32 %1521, 0
  br i1 %1522, label %1534, label %1523

; <label>:1523:                                   ; preds = %1519
  %1524 = icmp sge i32 %.1.lcssa.lcssa.7, 3
  br i1 %1524, label %1527, label %1525

; <label>:1525:                                   ; preds = %1523
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.7)
  %1526 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1527:                                   ; preds = %1523
  %1528 = load i8*, i8** %40, align 8
  %1529 = call i32 @atoi(i8* %1528) #8
  br label %1530

; <label>:1530:                                   ; preds = %1527, %1517
  %.08.7 = phi i32 [ %1529, %1527 ], [ 53, %1517 ]
  %1531 = load i8*, i8** %35, align 8
  %1532 = call i32 @fwd_add(i8* %1531, i32 %.08.7)
  %1533 = icmp eq i32 %1532, -1
  br i1 %1533, label %.loopexit1.loopexit, label %.outer.backedge.7

; <label>:1534:                                   ; preds = %1519
  %1535 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.7, i8* %1535)
  %1536 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1537:                                   ; preds = %1514
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.7)
  %1538 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1539:                                   ; preds = %1510
  %1540 = load i8*, i8** %29, align 16
  %1541 = call i32 @strcasecmp(i8* %1540, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1542 = icmp ne i32 %1541, 0
  br i1 %1542, label %1556, label %1543

; <label>:1543:                                   ; preds = %1539
  %1544 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1544, label %1554, label %1545

; <label>:1545:                                   ; preds = %1543
  %1546 = load i8*, i8** %32, align 8
  %1547 = call i32 @conv_trick_conf(i8* %1546)
  %1548 = icmp ne i32 %1547, 0
  %1549 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1550 = load i8*, i8** %33, align 8
  br i1 %1548, label %1552, label %1551

; <label>:1551:                                   ; preds = %1545
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1549, i8* %1550)
  br label %.outer.backedge.7

; <label>:1552:                                   ; preds = %1545
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1549, i8* %1550)
  %1553 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1554:                                   ; preds = %1543
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.7)
  %1555 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1556:                                   ; preds = %1539
  %1557 = load i8*, i8** %30, align 16
  %1558 = call i32 @strcasecmp(i8* %1557, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1559 = icmp ne i32 %1558, 0
  br i1 %1559, label %1565, label %1560

; <label>:1560:                                   ; preds = %1556
  %1561 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1561, label %1563, label %1562

; <label>:1562:                                   ; preds = %1560
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.7

; <label>:1563:                                   ; preds = %1560
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.7)
  %1564 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1565:                                   ; preds = %1556
  %1566 = load i8*, i8** %31, align 16
  %1567 = call i32 @strcasecmp(i8* %1566, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1568 = icmp ne i32 %1567, 0
  br i1 %1568, label %1576, label %1569

; <label>:1569:                                   ; preds = %1565
  %1570 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1570, label %1574, label %1571

; <label>:1571:                                   ; preds = %1569
  %1572 = load i8*, i8** %39, align 8
  %1573 = call i32 @atoi(i8* %1572) #8
  store i32 %1573, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.7

; <label>:1574:                                   ; preds = %1569
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.7)
  %1575 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1576:                                   ; preds = %1565
  %1577 = load i8*, i8** %36, align 16
  %1578 = call i32 @strcasecmp(i8* %1577, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1579 = icmp ne i32 %1578, 0
  br i1 %1579, label %1587, label %1580

; <label>:1580:                                   ; preds = %1576
  %1581 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1581, label %1585, label %1582

; <label>:1582:                                   ; preds = %1580
  %1583 = load i8*, i8** %42, align 8
  %1584 = call noalias i8* @strdup(i8* %1583) #9, !track !108
  store i8* %1584, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.7

; <label>:1585:                                   ; preds = %1580
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.7)
  %1586 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1587:                                   ; preds = %1576
  %1588 = load i8*, i8** %38, align 16
  %1589 = call i32 @strcasecmp(i8* %1588, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1590 = icmp ne i32 %1589, 0
  br i1 %1590, label %1637, label %1591

; <label>:1591:                                   ; preds = %1587
  %1592 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1592, label %1593, label %1595

; <label>:1593:                                   ; preds = %1591
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.7)
  %1594 = add nsw i32 %.03.ph.be.6, 1
  br label %1595

; <label>:1595:                                   ; preds = %1593, %1591
  %.7.7 = phi i32 [ %1594, %1593 ], [ %.03.ph.be.6, %1591 ]
  br label %1596

; <label>:1596:                                   ; preds = %1596, %1595
  %lsr.iv.7 = phi i64 [ %lsr.iv.next.7, %1596 ], [ -1, %1595 ]
  %1597 = add i64 %lsr.iv.7, 1
  call void @unroll_loop(i32 46)
  %1598 = shl i64 %lsr.iv.7, 3
  %uglygep.7 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1598
  %uglygep3.7 = bitcast i8* %uglygep.7 to i8**
  %scevgep.7 = getelementptr i8*, i8** %uglygep3.7, i64 111
  %1599 = load i8*, i8** %scevgep.7, align 8
  %1600 = icmp ne i8* %1599, null
  %1601 = icmp ult i64 %1597, 30
  %spec.select.7 = select i1 %1600, i1 %1601, i1 false
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %spec.select.7, label %1596, label %1602

; <label>:1602:                                   ; preds = %1596
  %.01.lcssa.wide.7 = phi i64 [ %lsr.iv.next.7, %1596 ]
  %1603 = trunc i64 %.01.lcssa.wide.7 to i32
  %1604 = add nsw i32 %1603, %.1.lcssa.lcssa.7
  %1605 = sub nsw i32 %1604, 1
  %1606 = icmp sgt i32 %1605, 30
  br i1 %1606, label %1635, label %1607

; <label>:1607:                                   ; preds = %1602
  %1608 = sub nsw i32 %.1.lcssa.lcssa.7, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.7, i32 %1608)
  %1609 = add nsw i32 %.1.lcssa.lcssa.7, -1
  %1610 = add nsw i32 %1603, %.1.lcssa.lcssa.7
  %1611 = sext i32 %1610 to i64
  %1612 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1611
  store i8* null, i8** %1612, align 8
  %1613 = icmp ne i32 %1609, 0
  br i1 %1613, label %.lr.ph16.7, label %.loopexit.7

.lr.ph16.7:                                       ; preds = %1607
  %1614 = add i32 %.1.lcssa.lcssa.7, -1
  %1615 = sext i32 %1614 to i64
  %1616 = sext i32 %1603 to i64
  %scevgep4.7 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1615
  %1617 = shl i64 %1615, 1
  %1618 = shl i64 %1616, 1
  %1619 = add i64 %1617, %1618
  %scevgep9.7 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1619
  %1620 = sub i32 1, %.1.lcssa.lcssa.7
  %1621 = zext i32 %1620 to i64
  br label %1622

; <label>:1622:                                   ; preds = %1627, %.lr.ph16.7
  %lsr.iv5.7 = phi i64 [ 0, %.lr.ph16.7 ], [ %lsr.iv.next6.7, %1627 ]
  call void @unroll_loop(i32 47)
  %scevgep7.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1623 = load i8*, i8** %scevgep7.7, align 8
  %1624 = call i32 @strcmp(i8* %1623, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1625 = icmp ne i32 %1624, 0
  br i1 %1625, label %1627, label %1626

; <label>:1626:                                   ; preds = %1622
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.7

; <label>:1627:                                   ; preds = %1622
  %scevgep8.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1628 = load i8*, i8** %scevgep8.7, align 8
  %1629 = call noalias i8* @strdup(i8* %1628) #9, !track !109
  %1630 = shl i64 %lsr.iv5.7, 1
  %scevgep10.7 = getelementptr i32, i32* %scevgep9.7, i64 %1630
  %scevgep1011.7 = bitcast i32* %scevgep10.7 to i8**
  store i8* %1629, i8** %scevgep1011.7, align 8
  %lsr.iv.next6.7 = add nsw i64 %lsr.iv5.7, -1
  %tmp.7 = trunc i64 %lsr.iv.next6.7 to i32
  %1631 = icmp ne i32 %1620, %tmp.7
  br i1 %1631, label %1622, label %.loopexit.loopexit.7

.loopexit.loopexit.7:                             ; preds = %1627
  br label %.loopexit.7

.loopexit.7:                                      ; preds = %.loopexit.loopexit.7, %1626, %1607
  %1632 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1633 = icmp ne i8* %1632, null
  br i1 %1633, label %1634, label %.outer.backedge.7

; <label>:1634:                                   ; preds = %.loopexit.7
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.7

; <label>:1635:                                   ; preds = %1602
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.7, i32 30)
  %1636 = add nsw i32 %.7.7, 1
  br label %.outer.backedge.7

; <label>:1637:                                   ; preds = %1587
  %1638 = load i8*, i8** %41, align 16
  %1639 = call i32 @strcasecmp(i8* %1638, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1640 = icmp ne i32 %1639, 0
  br i1 %1640, label %1648, label %1641

; <label>:1641:                                   ; preds = %1637
  %1642 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1642, label %1646, label %1643

; <label>:1643:                                   ; preds = %1641
  %1644 = load i8*, i8** %45, align 8
  %1645 = call i32 @atoi(i8* %1644) #8
  store i32 %1645, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.7

; <label>:1646:                                   ; preds = %1641
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.7)
  %1647 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1648:                                   ; preds = %1637
  %1649 = load i8*, i8** %43, align 16
  %1650 = call i32 @strcasecmp(i8* %1649, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1651 = icmp ne i32 %1650, 0
  br i1 %1651, label %1671, label %1652

; <label>:1652:                                   ; preds = %1648
  %1653 = icmp ne i32 %.1.lcssa.lcssa.7, 4
  br i1 %1653, label %1669, label %1654

; <label>:1654:                                   ; preds = %1652
  %1655 = load i8*, i8** %46, align 8
  %1656 = load i8*, i8** %47, align 16
  %1657 = load i8*, i8** %48, align 8
  %1658 = call i32 @atoi(i8* %1657) #8
  %1659 = call i32 @conv_scoped_conf(i8* %1655, i8* %1656, i32 %1658)
  %1660 = icmp ne i32 %1659, 0
  %1661 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1662 = load i8*, i8** %49, align 8
  %1663 = load i8*, i8** %50, align 16
  %1664 = load i8*, i8** %51, align 8
  br i1 %1660, label %1667, label %1665

; <label>:1665:                                   ; preds = %1654
  %1666 = call i32 @atoi(i8* %1664) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1661, i8* %1662, i8* %1663, i32 %1666)
  br label %.outer.backedge.7

; <label>:1667:                                   ; preds = %1654
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1661, i8* %1662, i8* %1663, i8* %1664)
  %1668 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1669:                                   ; preds = %1652
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.7)
  %1670 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1671:                                   ; preds = %1648
  %1672 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.7, i8* %1672)
  %1673 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

.outer.backedge.7:                                ; preds = %1671, %1669, %1667, %1665, %1646, %1643, %1635, %1634, %.loopexit.7, %1585, %1582, %1574, %1571, %1563, %1562, %1554, %1552, %1551, %1537, %1534, %1530, %1525
  %.03.ph.be.7 = phi i32 [ %1526, %1525 ], [ %1536, %1534 ], [ %1538, %1537 ], [ %.03.ph.be.6, %1530 ], [ %1555, %1554 ], [ %1553, %1552 ], [ %.03.ph.be.6, %1551 ], [ %1564, %1563 ], [ %.03.ph.be.6, %1562 ], [ %1575, %1574 ], [ %.03.ph.be.6, %1571 ], [ %1586, %1585 ], [ %.03.ph.be.6, %1582 ], [ %1636, %1635 ], [ %.7.7, %1634 ], [ %.7.7, %.loopexit.7 ], [ %1647, %1646 ], [ %.03.ph.be.6, %1643 ], [ %1673, %1671 ], [ %1670, %1669 ], [ %1668, %1667 ], [ %.03.ph.be.6, %1665 ]
  call void @__loop_iteration_test___2()
  %1674 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  br label %.outer._crit_edge.loopexit1

; <label>:1675:                                   ; preds = %52
  call void @unroll_loop(i32 44)
  %1676 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1677 = icmp ne i8* %1676, null
  br i1 %1677, label %1678, label %1679

; <label>:1678:                                   ; preds = %1675
  store i8 0, i8* %1676, align 1
  br label %1679

; <label>:1679:                                   ; preds = %1678, %1675
  %1680 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1681 = icmp ne i8* %1680, null
  br i1 %1681, label %1682, label %1683

; <label>:1682:                                   ; preds = %1679
  store i8 0, i8* %1680, align 1
  br label %1683

; <label>:1683:                                   ; preds = %1682, %1679
  %1684 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1685 = icmp ne i8* %1684, null
  br i1 %1685, label %1686, label %1687

; <label>:1686:                                   ; preds = %1683
  store i8 0, i8* %1684, align 1
  br label %1687

; <label>:1687:                                   ; preds = %1686, %1683
  %1688 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1689 = icmp ne i8* %1688, null
  br i1 %1689, label %1690, label %1691

; <label>:1690:                                   ; preds = %1687
  store i8 0, i8* %1688, align 1
  br label %1691

; <label>:1691:                                   ; preds = %1690, %1687
  %1692 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1692, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1693 = load i8*, i8** %26, align 8
  %1694 = icmp ne i8* %1693, null
  %.14.12 = select i1 %1694, i32 1, i32 0
  %1695 = select i1 %1694, i1 true, i1 false
  br i1 %1695, label %.lr.ph6.preheader.13, label %._crit_edge.110

.lr.ph6.preheader.13:                             ; preds = %1691
  br label %.lr.ph6.16

.lr.ph6.16:                                       ; preds = %.lr.ph6.16, %.lr.ph6.preheader.13
  %.15.14 = phi i32 [ %.1.15, %.lr.ph6.16 ], [ %.14.12, %.lr.ph6.preheader.13 ]
  %1696 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1697 = sext i32 %.15.14 to i64
  %1698 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1697
  store i8* %1696, i8** %1698, align 8
  call void @unroll_loop(i32 45)
  %1699 = sext i32 %.15.14 to i64
  %1700 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1699
  %1701 = load i8*, i8** %1700, align 8
  %1702 = icmp ne i8* %1701, null
  %1703 = add nsw i32 %.15.14, 1
  %1704 = icmp slt i32 %1703, 30
  %.1.15 = select i1 %1702, i32 %1703, i32 %.15.14
  %1705 = select i1 %1702, i1 %1704, i1 false
  br i1 %1705, label %.lr.ph6.16, label %._crit_edge.loopexit.18

._crit_edge.loopexit.18:                          ; preds = %.lr.ph6.16
  %.1.lcssa.ph.17 = phi i32 [ %.1.15, %.lr.ph6.16 ]
  br label %._crit_edge.110

._crit_edge.110:                                  ; preds = %._crit_edge.loopexit.18, %1691
  %.1.lcssa.19 = phi i32 [ %.14.12, %1691 ], [ %.1.lcssa.ph.17, %._crit_edge.loopexit.18 ]
  %1706 = load i8*, i8** %27, align 16
  %1707 = icmp ne i8* %1706, null
  br i1 %1707, label %91, label %1708

; <label>:1708:                                   ; preds = %._crit_edge.110
  call void @__loop_iteration_test___3()
  %1709 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1710 = icmp ne i8* %1709, null
  br i1 %1710, label %1711, label %.outer._crit_edge.loopexit.loopexit

; <label>:1711:                                   ; preds = %1708
  call void @unroll_loop(i32 44)
  %1712 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1713 = icmp ne i8* %1712, null
  br i1 %1713, label %1714, label %1715

; <label>:1714:                                   ; preds = %1711
  store i8 0, i8* %1712, align 1
  br label %1715

; <label>:1715:                                   ; preds = %1714, %1711
  %1716 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1717 = icmp ne i8* %1716, null
  br i1 %1717, label %1718, label %1719

; <label>:1718:                                   ; preds = %1715
  store i8 0, i8* %1716, align 1
  br label %1719

; <label>:1719:                                   ; preds = %1718, %1715
  %1720 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1721 = icmp ne i8* %1720, null
  br i1 %1721, label %1722, label %1723

; <label>:1722:                                   ; preds = %1719
  store i8 0, i8* %1720, align 1
  br label %1723

; <label>:1723:                                   ; preds = %1722, %1719
  %1724 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1725 = icmp ne i8* %1724, null
  br i1 %1725, label %1726, label %1727

; <label>:1726:                                   ; preds = %1723
  store i8 0, i8* %1724, align 1
  br label %1727

; <label>:1727:                                   ; preds = %1726, %1723
  %1728 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1728, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1729 = load i8*, i8** %26, align 8
  %1730 = icmp ne i8* %1729, null
  %.14.212 = select i1 %1730, i32 1, i32 0
  %1731 = select i1 %1730, i1 true, i1 false
  br i1 %1731, label %.lr.ph6.preheader.213, label %._crit_edge.220

.lr.ph6.preheader.213:                            ; preds = %1727
  br label %.lr.ph6.216

.lr.ph6.216:                                      ; preds = %.lr.ph6.216, %.lr.ph6.preheader.213
  %.15.214 = phi i32 [ %.1.215, %.lr.ph6.216 ], [ %.14.212, %.lr.ph6.preheader.213 ]
  %1732 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1733 = sext i32 %.15.214 to i64
  %1734 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1733
  store i8* %1732, i8** %1734, align 8
  call void @unroll_loop(i32 45)
  %1735 = sext i32 %.15.214 to i64
  %1736 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1735
  %1737 = load i8*, i8** %1736, align 8
  %1738 = icmp ne i8* %1737, null
  %1739 = add nsw i32 %.15.214, 1
  %1740 = icmp slt i32 %1739, 30
  %.1.215 = select i1 %1738, i32 %1739, i32 %.15.214
  %1741 = select i1 %1738, i1 %1740, i1 false
  br i1 %1741, label %.lr.ph6.216, label %._crit_edge.loopexit.218

._crit_edge.loopexit.218:                         ; preds = %.lr.ph6.216
  %.1.lcssa.ph.217 = phi i32 [ %.1.215, %.lr.ph6.216 ]
  br label %._crit_edge.220

._crit_edge.220:                                  ; preds = %._crit_edge.loopexit.218, %1727
  %.1.lcssa.219 = phi i32 [ %.14.212, %1727 ], [ %.1.lcssa.ph.217, %._crit_edge.loopexit.218 ]
  %1742 = load i8*, i8** %27, align 16
  %1743 = icmp ne i8* %1742, null
  br i1 %1743, label %91, label %1744

; <label>:1744:                                   ; preds = %._crit_edge.220
  call void @__loop_iteration_test___3()
  %1745 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1746 = icmp ne i8* %1745, null
  br i1 %1746, label %1747, label %.outer._crit_edge.loopexit.loopexit

; <label>:1747:                                   ; preds = %1744
  call void @unroll_loop(i32 44)
  %1748 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1749 = icmp ne i8* %1748, null
  br i1 %1749, label %1750, label %1751

; <label>:1750:                                   ; preds = %1747
  store i8 0, i8* %1748, align 1
  br label %1751

; <label>:1751:                                   ; preds = %1750, %1747
  %1752 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1753 = icmp ne i8* %1752, null
  br i1 %1753, label %1754, label %1755

; <label>:1754:                                   ; preds = %1751
  store i8 0, i8* %1752, align 1
  br label %1755

; <label>:1755:                                   ; preds = %1754, %1751
  %1756 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1757 = icmp ne i8* %1756, null
  br i1 %1757, label %1758, label %1759

; <label>:1758:                                   ; preds = %1755
  store i8 0, i8* %1756, align 1
  br label %1759

; <label>:1759:                                   ; preds = %1758, %1755
  %1760 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1761 = icmp ne i8* %1760, null
  br i1 %1761, label %1762, label %1763

; <label>:1762:                                   ; preds = %1759
  store i8 0, i8* %1760, align 1
  br label %1763

; <label>:1763:                                   ; preds = %1762, %1759
  %1764 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1764, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1765 = load i8*, i8** %26, align 8
  %1766 = icmp ne i8* %1765, null
  %.14.322 = select i1 %1766, i32 1, i32 0
  %1767 = select i1 %1766, i1 true, i1 false
  br i1 %1767, label %.lr.ph6.preheader.323, label %._crit_edge.330

.lr.ph6.preheader.323:                            ; preds = %1763
  br label %.lr.ph6.326

.lr.ph6.326:                                      ; preds = %.lr.ph6.326, %.lr.ph6.preheader.323
  %.15.324 = phi i32 [ %.1.325, %.lr.ph6.326 ], [ %.14.322, %.lr.ph6.preheader.323 ]
  %1768 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1769 = sext i32 %.15.324 to i64
  %1770 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1769
  store i8* %1768, i8** %1770, align 8
  call void @unroll_loop(i32 45)
  %1771 = sext i32 %.15.324 to i64
  %1772 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1771
  %1773 = load i8*, i8** %1772, align 8
  %1774 = icmp ne i8* %1773, null
  %1775 = add nsw i32 %.15.324, 1
  %1776 = icmp slt i32 %1775, 30
  %.1.325 = select i1 %1774, i32 %1775, i32 %.15.324
  %1777 = select i1 %1774, i1 %1776, i1 false
  br i1 %1777, label %.lr.ph6.326, label %._crit_edge.loopexit.328

._crit_edge.loopexit.328:                         ; preds = %.lr.ph6.326
  %.1.lcssa.ph.327 = phi i32 [ %.1.325, %.lr.ph6.326 ]
  br label %._crit_edge.330

._crit_edge.330:                                  ; preds = %._crit_edge.loopexit.328, %1763
  %.1.lcssa.329 = phi i32 [ %.14.322, %1763 ], [ %.1.lcssa.ph.327, %._crit_edge.loopexit.328 ]
  %1778 = load i8*, i8** %27, align 16
  %1779 = icmp ne i8* %1778, null
  br i1 %1779, label %91, label %1780

; <label>:1780:                                   ; preds = %._crit_edge.330
  call void @__loop_iteration_test___3()
  %1781 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1782 = icmp ne i8* %1781, null
  br i1 %1782, label %1783, label %.outer._crit_edge.loopexit.loopexit

; <label>:1783:                                   ; preds = %1780
  call void @unroll_loop(i32 44)
  %1784 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1785 = icmp ne i8* %1784, null
  br i1 %1785, label %1786, label %1787

; <label>:1786:                                   ; preds = %1783
  store i8 0, i8* %1784, align 1
  br label %1787

; <label>:1787:                                   ; preds = %1786, %1783
  %1788 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1789 = icmp ne i8* %1788, null
  br i1 %1789, label %1790, label %1791

; <label>:1790:                                   ; preds = %1787
  store i8 0, i8* %1788, align 1
  br label %1791

; <label>:1791:                                   ; preds = %1790, %1787
  %1792 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1793 = icmp ne i8* %1792, null
  br i1 %1793, label %1794, label %1795

; <label>:1794:                                   ; preds = %1791
  store i8 0, i8* %1792, align 1
  br label %1795

; <label>:1795:                                   ; preds = %1794, %1791
  %1796 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1797 = icmp ne i8* %1796, null
  br i1 %1797, label %1798, label %1799

; <label>:1798:                                   ; preds = %1795
  store i8 0, i8* %1796, align 1
  br label %1799

; <label>:1799:                                   ; preds = %1798, %1795
  %1800 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1800, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1801 = load i8*, i8** %26, align 8
  %1802 = icmp ne i8* %1801, null
  %.14.432 = select i1 %1802, i32 1, i32 0
  %1803 = select i1 %1802, i1 true, i1 false
  br i1 %1803, label %.lr.ph6.preheader.433, label %._crit_edge.440

.lr.ph6.preheader.433:                            ; preds = %1799
  br label %.lr.ph6.436

.lr.ph6.436:                                      ; preds = %.lr.ph6.436, %.lr.ph6.preheader.433
  %.15.434 = phi i32 [ %.1.435, %.lr.ph6.436 ], [ %.14.432, %.lr.ph6.preheader.433 ]
  %1804 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1805 = sext i32 %.15.434 to i64
  %1806 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1805
  store i8* %1804, i8** %1806, align 8
  call void @unroll_loop(i32 45)
  %1807 = sext i32 %.15.434 to i64
  %1808 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1807
  %1809 = load i8*, i8** %1808, align 8
  %1810 = icmp ne i8* %1809, null
  %1811 = add nsw i32 %.15.434, 1
  %1812 = icmp slt i32 %1811, 30
  %.1.435 = select i1 %1810, i32 %1811, i32 %.15.434
  %1813 = select i1 %1810, i1 %1812, i1 false
  br i1 %1813, label %.lr.ph6.436, label %._crit_edge.loopexit.438

._crit_edge.loopexit.438:                         ; preds = %.lr.ph6.436
  %.1.lcssa.ph.437 = phi i32 [ %.1.435, %.lr.ph6.436 ]
  br label %._crit_edge.440

._crit_edge.440:                                  ; preds = %._crit_edge.loopexit.438, %1799
  %.1.lcssa.439 = phi i32 [ %.14.432, %1799 ], [ %.1.lcssa.ph.437, %._crit_edge.loopexit.438 ]
  %1814 = load i8*, i8** %27, align 16
  %1815 = icmp ne i8* %1814, null
  br i1 %1815, label %91, label %1816

; <label>:1816:                                   ; preds = %._crit_edge.440
  call void @__loop_iteration_test___3()
  %1817 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1818 = icmp ne i8* %1817, null
  br i1 %1818, label %1819, label %.outer._crit_edge.loopexit.loopexit

; <label>:1819:                                   ; preds = %1816
  call void @unroll_loop(i32 44)
  %1820 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1821 = icmp ne i8* %1820, null
  br i1 %1821, label %1822, label %1823

; <label>:1822:                                   ; preds = %1819
  store i8 0, i8* %1820, align 1
  br label %1823

; <label>:1823:                                   ; preds = %1822, %1819
  %1824 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1825 = icmp ne i8* %1824, null
  br i1 %1825, label %1826, label %1827

; <label>:1826:                                   ; preds = %1823
  store i8 0, i8* %1824, align 1
  br label %1827

; <label>:1827:                                   ; preds = %1826, %1823
  %1828 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1829 = icmp ne i8* %1828, null
  br i1 %1829, label %1830, label %1831

; <label>:1830:                                   ; preds = %1827
  store i8 0, i8* %1828, align 1
  br label %1831

; <label>:1831:                                   ; preds = %1830, %1827
  %1832 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1833 = icmp ne i8* %1832, null
  br i1 %1833, label %1834, label %1835

; <label>:1834:                                   ; preds = %1831
  store i8 0, i8* %1832, align 1
  br label %1835

; <label>:1835:                                   ; preds = %1834, %1831
  %1836 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1836, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1837 = load i8*, i8** %26, align 8
  %1838 = icmp ne i8* %1837, null
  %.14.542 = select i1 %1838, i32 1, i32 0
  %1839 = select i1 %1838, i1 true, i1 false
  br i1 %1839, label %.lr.ph6.preheader.543, label %._crit_edge.550

.lr.ph6.preheader.543:                            ; preds = %1835
  br label %.lr.ph6.546

.lr.ph6.546:                                      ; preds = %.lr.ph6.546, %.lr.ph6.preheader.543
  %.15.544 = phi i32 [ %.1.545, %.lr.ph6.546 ], [ %.14.542, %.lr.ph6.preheader.543 ]
  %1840 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1841 = sext i32 %.15.544 to i64
  %1842 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1841
  store i8* %1840, i8** %1842, align 8
  call void @unroll_loop(i32 45)
  %1843 = sext i32 %.15.544 to i64
  %1844 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1843
  %1845 = load i8*, i8** %1844, align 8
  %1846 = icmp ne i8* %1845, null
  %1847 = add nsw i32 %.15.544, 1
  %1848 = icmp slt i32 %1847, 30
  %.1.545 = select i1 %1846, i32 %1847, i32 %.15.544
  %1849 = select i1 %1846, i1 %1848, i1 false
  br i1 %1849, label %.lr.ph6.546, label %._crit_edge.loopexit.548

._crit_edge.loopexit.548:                         ; preds = %.lr.ph6.546
  %.1.lcssa.ph.547 = phi i32 [ %.1.545, %.lr.ph6.546 ]
  br label %._crit_edge.550

._crit_edge.550:                                  ; preds = %._crit_edge.loopexit.548, %1835
  %.1.lcssa.549 = phi i32 [ %.14.542, %1835 ], [ %.1.lcssa.ph.547, %._crit_edge.loopexit.548 ]
  %1850 = load i8*, i8** %27, align 16
  %1851 = icmp ne i8* %1850, null
  br i1 %1851, label %91, label %1852

; <label>:1852:                                   ; preds = %._crit_edge.550
  call void @__loop_iteration_test___3()
  %1853 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1854 = icmp ne i8* %1853, null
  br i1 %1854, label %1855, label %.outer._crit_edge.loopexit.loopexit

; <label>:1855:                                   ; preds = %1852
  call void @unroll_loop(i32 44)
  %1856 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1857 = icmp ne i8* %1856, null
  br i1 %1857, label %1858, label %1859

; <label>:1858:                                   ; preds = %1855
  store i8 0, i8* %1856, align 1
  br label %1859

; <label>:1859:                                   ; preds = %1858, %1855
  %1860 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1861 = icmp ne i8* %1860, null
  br i1 %1861, label %1862, label %1863

; <label>:1862:                                   ; preds = %1859
  store i8 0, i8* %1860, align 1
  br label %1863

; <label>:1863:                                   ; preds = %1862, %1859
  %1864 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1865 = icmp ne i8* %1864, null
  br i1 %1865, label %1866, label %1867

; <label>:1866:                                   ; preds = %1863
  store i8 0, i8* %1864, align 1
  br label %1867

; <label>:1867:                                   ; preds = %1866, %1863
  %1868 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1869 = icmp ne i8* %1868, null
  br i1 %1869, label %1870, label %1871

; <label>:1870:                                   ; preds = %1867
  store i8 0, i8* %1868, align 1
  br label %1871

; <label>:1871:                                   ; preds = %1870, %1867
  %1872 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1872, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1873 = load i8*, i8** %26, align 8
  %1874 = icmp ne i8* %1873, null
  %.14.652 = select i1 %1874, i32 1, i32 0
  %1875 = select i1 %1874, i1 true, i1 false
  br i1 %1875, label %.lr.ph6.preheader.653, label %._crit_edge.660

.lr.ph6.preheader.653:                            ; preds = %1871
  br label %.lr.ph6.656

.lr.ph6.656:                                      ; preds = %.lr.ph6.656, %.lr.ph6.preheader.653
  %.15.654 = phi i32 [ %.1.655, %.lr.ph6.656 ], [ %.14.652, %.lr.ph6.preheader.653 ]
  %1876 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1877 = sext i32 %.15.654 to i64
  %1878 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1877
  store i8* %1876, i8** %1878, align 8
  call void @unroll_loop(i32 45)
  %1879 = sext i32 %.15.654 to i64
  %1880 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1879
  %1881 = load i8*, i8** %1880, align 8
  %1882 = icmp ne i8* %1881, null
  %1883 = add nsw i32 %.15.654, 1
  %1884 = icmp slt i32 %1883, 30
  %.1.655 = select i1 %1882, i32 %1883, i32 %.15.654
  %1885 = select i1 %1882, i1 %1884, i1 false
  br i1 %1885, label %.lr.ph6.656, label %._crit_edge.loopexit.658

._crit_edge.loopexit.658:                         ; preds = %.lr.ph6.656
  %.1.lcssa.ph.657 = phi i32 [ %.1.655, %.lr.ph6.656 ]
  br label %._crit_edge.660

._crit_edge.660:                                  ; preds = %._crit_edge.loopexit.658, %1871
  %.1.lcssa.659 = phi i32 [ %.14.652, %1871 ], [ %.1.lcssa.ph.657, %._crit_edge.loopexit.658 ]
  %1886 = load i8*, i8** %27, align 16
  %1887 = icmp ne i8* %1886, null
  br i1 %1887, label %91, label %1888

; <label>:1888:                                   ; preds = %._crit_edge.660
  call void @__loop_iteration_test___3()
  %1889 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1890 = icmp ne i8* %1889, null
  br i1 %1890, label %1891, label %.outer._crit_edge.loopexit.loopexit

; <label>:1891:                                   ; preds = %1888
  call void @unroll_loop(i32 44)
  %1892 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1893 = icmp ne i8* %1892, null
  br i1 %1893, label %1894, label %1895

; <label>:1894:                                   ; preds = %1891
  store i8 0, i8* %1892, align 1
  br label %1895

; <label>:1895:                                   ; preds = %1894, %1891
  %1896 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1897 = icmp ne i8* %1896, null
  br i1 %1897, label %1898, label %1899

; <label>:1898:                                   ; preds = %1895
  store i8 0, i8* %1896, align 1
  br label %1899

; <label>:1899:                                   ; preds = %1898, %1895
  %1900 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1901 = icmp ne i8* %1900, null
  br i1 %1901, label %1902, label %1903

; <label>:1902:                                   ; preds = %1899
  store i8 0, i8* %1900, align 1
  br label %1903

; <label>:1903:                                   ; preds = %1902, %1899
  %1904 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1905 = icmp ne i8* %1904, null
  br i1 %1905, label %1906, label %1907

; <label>:1906:                                   ; preds = %1903
  store i8 0, i8* %1904, align 1
  br label %1907

; <label>:1907:                                   ; preds = %1906, %1903
  %1908 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1908, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1909 = load i8*, i8** %26, align 8
  %1910 = icmp ne i8* %1909, null
  %.14.762 = select i1 %1910, i32 1, i32 0
  %1911 = select i1 %1910, i1 true, i1 false
  br i1 %1911, label %.lr.ph6.preheader.763, label %._crit_edge.770

.lr.ph6.preheader.763:                            ; preds = %1907
  br label %.lr.ph6.766

.lr.ph6.766:                                      ; preds = %.lr.ph6.766, %.lr.ph6.preheader.763
  %.15.764 = phi i32 [ %.1.765, %.lr.ph6.766 ], [ %.14.762, %.lr.ph6.preheader.763 ]
  %1912 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1913 = sext i32 %.15.764 to i64
  %1914 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1913
  store i8* %1912, i8** %1914, align 8
  call void @unroll_loop(i32 45)
  %1915 = sext i32 %.15.764 to i64
  %1916 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1915
  %1917 = load i8*, i8** %1916, align 8
  %1918 = icmp ne i8* %1917, null
  %1919 = add nsw i32 %.15.764, 1
  %1920 = icmp slt i32 %1919, 30
  %.1.765 = select i1 %1918, i32 %1919, i32 %.15.764
  %1921 = select i1 %1918, i1 %1920, i1 false
  br i1 %1921, label %.lr.ph6.766, label %._crit_edge.loopexit.768

._crit_edge.loopexit.768:                         ; preds = %.lr.ph6.766
  %.1.lcssa.ph.767 = phi i32 [ %.1.765, %.lr.ph6.766 ]
  br label %._crit_edge.770

._crit_edge.770:                                  ; preds = %._crit_edge.loopexit.768, %1907
  %.1.lcssa.769 = phi i32 [ %.14.762, %1907 ], [ %.1.lcssa.ph.767, %._crit_edge.loopexit.768 ]
  %1922 = load i8*, i8** %27, align 16
  %1923 = icmp ne i8* %1922, null
  br i1 %1923, label %91, label %1924

; <label>:1924:                                   ; preds = %._crit_edge.770
  call void @__loop_iteration_test___3()
  %1925 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit

.lr.ph6.13:                                       ; preds = %.lr.ph6
  call void @__loop_iteration_test___4()
  %1926 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1927 = sext i32 2 to i64
  %1928 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i8** %1928, align 8
  call void @unroll_loop(i32 45)
  %1929 = sext i32 2 to i64
  %1930 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %1931 = load i8*, i8** %1930, align 8
  %1932 = icmp ne i64 10000601, 0
  %1933 = icmp ne i8* %1931, null
  %1934 = add nsw i32 2, 1
  %1935 = icmp slt i32 3, 30
  %.1.12 = select i1 true, i32 3, i32 2
  %1936 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.26, label %._crit_edge.loopexit

.lr.ph6.26:                                       ; preds = %.lr.ph6.13
  call void @__loop_iteration_test___4()
  %1937 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1938 = sext i32 3 to i64
  %1939 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @26, i32 0, i32 0), i8** %1939, align 8
  call void @unroll_loop(i32 45)
  %1940 = sext i32 3 to i64
  %1941 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %1942 = load i8*, i8** %1941, align 8
  %1943 = icmp ne i64 10000607, 0
  %1944 = icmp ne i8* %1942, null
  %1945 = add nsw i32 3, 1
  %1946 = icmp slt i32 4, 30
  %.1.25 = select i1 true, i32 4, i32 3
  %1947 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.39, label %._crit_edge.loopexit

.lr.ph6.39:                                       ; preds = %.lr.ph6.26
  call void @__loop_iteration_test___4()
  %1948 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1949 = sext i32 4 to i64
  %1950 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  store i8* null, i8** %1950, align 8
  call void @unroll_loop(i32 45)
  %1951 = sext i32 4 to i64
  %1952 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  %1953 = load i8*, i8** %1952, align 8
  %1954 = icmp ne i64 0, 0
  %1955 = icmp ne i8* null, null
  %1956 = add nsw i32 4, 1
  %1957 = icmp slt i32 5, 30
  %.1.38 = select i1 false, i32 5, i32 4
  %1958 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.412, label %._crit_edge.loopexit

.lr.ph6.412:                                      ; preds = %.lr.ph6.39
  call void @__loop_iteration_test___4()
  %1959 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1960 = sext i32 4 to i64
  %1961 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1960
  store i8* %1959, i8** %1961, align 8
  call void @unroll_loop(i32 45)
  %1962 = sext i32 4 to i64
  %1963 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1962
  %1964 = load i8*, i8** %1963, align 8
  %1965 = icmp ne i8* %1964, null
  %1966 = add nsw i32 4, 1
  %1967 = icmp slt i32 %1966, 30
  %.1.411 = select i1 %1965, i32 %1966, i32 4
  %1968 = select i1 %1965, i1 %1967, i1 false
  br i1 %1968, label %.lr.ph6.515, label %._crit_edge.loopexit

.lr.ph6.515:                                      ; preds = %.lr.ph6.412
  call void @__loop_iteration_test___4()
  %1969 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1970 = sext i32 %.1.411 to i64
  %1971 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1970
  store i8* %1969, i8** %1971, align 8
  call void @unroll_loop(i32 45)
  %1972 = sext i32 %.1.411 to i64
  %1973 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1972
  %1974 = load i8*, i8** %1973, align 8
  %1975 = icmp ne i8* %1974, null
  %1976 = add nsw i32 %.1.411, 1
  %1977 = icmp slt i32 %1976, 30
  %.1.514 = select i1 %1975, i32 %1976, i32 %.1.411
  %1978 = select i1 %1975, i1 %1977, i1 false
  br i1 %1978, label %.lr.ph6.618, label %._crit_edge.loopexit

.lr.ph6.618:                                      ; preds = %.lr.ph6.515
  call void @__loop_iteration_test___4()
  %1979 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1980 = sext i32 %.1.514 to i64
  %1981 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1980
  store i8* %1979, i8** %1981, align 8
  call void @unroll_loop(i32 45)
  %1982 = sext i32 %.1.514 to i64
  %1983 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1982
  %1984 = load i8*, i8** %1983, align 8
  %1985 = icmp ne i8* %1984, null
  %1986 = add nsw i32 %.1.514, 1
  %1987 = icmp slt i32 %1986, 30
  %.1.617 = select i1 %1985, i32 %1986, i32 %.1.514
  %1988 = select i1 %1985, i1 %1987, i1 false
  br i1 %1988, label %.lr.ph6.721, label %._crit_edge.loopexit

.lr.ph6.721:                                      ; preds = %.lr.ph6.618
  call void @__loop_iteration_test___4()
  %1989 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1990 = sext i32 %.1.617 to i64
  %1991 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1990
  store i8* %1989, i8** %1991, align 8
  call void @unroll_loop(i32 45)
  %1992 = sext i32 %.1.617 to i64
  %1993 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1992
  %1994 = load i8*, i8** %1993, align 8
  %1995 = icmp ne i8* %1994, null
  %1996 = add nsw i32 %.1.617, 1
  %1997 = icmp slt i32 %1996, 30
  %.1.720 = select i1 %1995, i32 %1996, i32 %.1.617
  %1998 = select i1 %1995, i1 %1997, i1 false
  br i1 %1998, label %.lr.ph6.8, label %._crit_edge.loopexit

.lr.ph6.8:                                        ; preds = %.lr.ph6.721
  call void @__loop_iteration_test___4()
  %1999 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2000 = sext i32 %.1.720 to i64
  %2001 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2000
  store i8* %1999, i8** %2001, align 8
  call void @unroll_loop(i32 45)
  %2002 = sext i32 %.1.720 to i64
  %2003 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2002
  %2004 = load i8*, i8** %2003, align 8
  %2005 = icmp ne i8* %2004, null
  %2006 = add nsw i32 %.1.720, 1
  %2007 = icmp slt i32 %2006, 30
  %.1.8 = select i1 %2005, i32 %2006, i32 %.1.720
  %2008 = select i1 %2005, i1 %2007, i1 false
  br i1 %2008, label %.lr.ph6.9, label %._crit_edge.loopexit

.lr.ph6.9:                                        ; preds = %.lr.ph6.8
  call void @__loop_iteration_test___4()
  %2009 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2010 = sext i32 %.1.8 to i64
  %2011 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2010
  store i8* %2009, i8** %2011, align 8
  call void @unroll_loop(i32 45)
  %2012 = sext i32 %.1.8 to i64
  %2013 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2012
  %2014 = load i8*, i8** %2013, align 8
  %2015 = icmp ne i8* %2014, null
  %2016 = add nsw i32 %.1.8, 1
  %2017 = icmp slt i32 %2016, 30
  %.1.9 = select i1 %2015, i32 %2016, i32 %.1.8
  %2018 = select i1 %2015, i1 %2017, i1 false
  br i1 %2018, label %.lr.ph6.10, label %._crit_edge.loopexit

.lr.ph6.10:                                       ; preds = %.lr.ph6.9
  call void @__loop_iteration_test___4()
  %2019 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2020 = sext i32 %.1.9 to i64
  %2021 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2020
  store i8* %2019, i8** %2021, align 8
  call void @unroll_loop(i32 45)
  %2022 = sext i32 %.1.9 to i64
  %2023 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2022
  %2024 = load i8*, i8** %2023, align 8
  %2025 = icmp ne i8* %2024, null
  %2026 = add nsw i32 %.1.9, 1
  %2027 = icmp slt i32 %2026, 30
  %.1.10 = select i1 %2025, i32 %2026, i32 %.1.9
  %2028 = select i1 %2025, i1 %2027, i1 false
  br i1 %2028, label %.lr.ph6.11, label %._crit_edge.loopexit

.lr.ph6.11:                                       ; preds = %.lr.ph6.10
  call void @__loop_iteration_test___4()
  %2029 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2030 = sext i32 %.1.10 to i64
  %2031 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2030
  store i8* %2029, i8** %2031, align 8
  call void @unroll_loop(i32 45)
  %2032 = sext i32 %.1.10 to i64
  %2033 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2032
  %2034 = load i8*, i8** %2033, align 8
  %2035 = icmp ne i8* %2034, null
  %2036 = add nsw i32 %.1.10, 1
  %2037 = icmp slt i32 %2036, 30
  %.1.11 = select i1 %2035, i32 %2036, i32 %.1.10
  %2038 = select i1 %2035, i1 %2037, i1 false
  br i1 %2038, label %.lr.ph6.12, label %._crit_edge.loopexit

.lr.ph6.12:                                       ; preds = %.lr.ph6.11
  call void @__loop_iteration_test___4()
  %2039 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2040 = sext i32 %.1.11 to i64
  %2041 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2040
  store i8* %2039, i8** %2041, align 8
  call void @unroll_loop(i32 45)
  %2042 = sext i32 %.1.11 to i64
  %2043 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2042
  %2044 = load i8*, i8** %2043, align 8
  %2045 = icmp ne i8* %2044, null
  %2046 = add nsw i32 %.1.11, 1
  %2047 = icmp slt i32 %2046, 30
  %.1.1222 = select i1 %2045, i32 %2046, i32 %.1.11
  %2048 = select i1 %2045, i1 %2047, i1 false
  br i1 %2048, label %.lr.ph6.1323, label %._crit_edge.loopexit

.lr.ph6.1323:                                     ; preds = %.lr.ph6.12
  call void @__loop_iteration_test___4()
  %2049 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2050 = sext i32 %.1.1222 to i64
  %2051 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2050
  store i8* %2049, i8** %2051, align 8
  call void @unroll_loop(i32 45)
  %2052 = sext i32 %.1.1222 to i64
  %2053 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2052
  %2054 = load i8*, i8** %2053, align 8
  %2055 = icmp ne i8* %2054, null
  %2056 = add nsw i32 %.1.1222, 1
  %2057 = icmp slt i32 %2056, 30
  %.1.13 = select i1 %2055, i32 %2056, i32 %.1.1222
  %2058 = select i1 %2055, i1 %2057, i1 false
  br i1 %2058, label %.lr.ph6.14, label %._crit_edge.loopexit

.lr.ph6.14:                                       ; preds = %.lr.ph6.1323
  call void @__loop_iteration_test___4()
  %2059 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2060 = sext i32 %.1.13 to i64
  %2061 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2060
  store i8* %2059, i8** %2061, align 8
  call void @unroll_loop(i32 45)
  %2062 = sext i32 %.1.13 to i64
  %2063 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2062
  %2064 = load i8*, i8** %2063, align 8
  %2065 = icmp ne i8* %2064, null
  %2066 = add nsw i32 %.1.13, 1
  %2067 = icmp slt i32 %2066, 30
  %.1.14 = select i1 %2065, i32 %2066, i32 %.1.13
  %2068 = select i1 %2065, i1 %2067, i1 false
  br i1 %2068, label %.lr.ph6.15, label %._crit_edge.loopexit

.lr.ph6.15:                                       ; preds = %.lr.ph6.14
  call void @__loop_iteration_test___4()
  %2069 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2070 = sext i32 %.1.14 to i64
  %2071 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2070
  store i8* %2069, i8** %2071, align 8
  call void @unroll_loop(i32 45)
  %2072 = sext i32 %.1.14 to i64
  %2073 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2072
  %2074 = load i8*, i8** %2073, align 8
  %2075 = icmp ne i8* %2074, null
  %2076 = add nsw i32 %.1.14, 1
  %2077 = icmp slt i32 %2076, 30
  %.1.1525 = select i1 %2075, i32 %2076, i32 %.1.14
  %2078 = select i1 %2075, i1 %2077, i1 false
  br i1 %2078, label %.lr.ph6.1626, label %._crit_edge.loopexit

.lr.ph6.1626:                                     ; preds = %.lr.ph6.15
  call void @__loop_iteration_test___4()
  %2079 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2080 = sext i32 %.1.1525 to i64
  %2081 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2080
  store i8* %2079, i8** %2081, align 8
  call void @unroll_loop(i32 45)
  %2082 = sext i32 %.1.1525 to i64
  %2083 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2082
  %2084 = load i8*, i8** %2083, align 8
  %2085 = icmp ne i8* %2084, null
  %2086 = add nsw i32 %.1.1525, 1
  %2087 = icmp slt i32 %2086, 30
  %.1.16 = select i1 %2085, i32 %2086, i32 %.1.1525
  %2088 = select i1 %2085, i1 %2087, i1 false
  br i1 %2088, label %.lr.ph6.17, label %._crit_edge.loopexit

.lr.ph6.17:                                       ; preds = %.lr.ph6.1626
  call void @__loop_iteration_test___4()
  %2089 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2090 = sext i32 %.1.16 to i64
  %2091 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2090
  store i8* %2089, i8** %2091, align 8
  call void @unroll_loop(i32 45)
  %2092 = sext i32 %.1.16 to i64
  %2093 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2092
  %2094 = load i8*, i8** %2093, align 8
  %2095 = icmp ne i8* %2094, null
  %2096 = add nsw i32 %.1.16, 1
  %2097 = icmp slt i32 %2096, 30
  %.1.17 = select i1 %2095, i32 %2096, i32 %.1.16
  %2098 = select i1 %2095, i1 %2097, i1 false
  br i1 %2098, label %.lr.ph6.18, label %._crit_edge.loopexit

.lr.ph6.18:                                       ; preds = %.lr.ph6.17
  call void @__loop_iteration_test___4()
  %2099 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2100 = sext i32 %.1.17 to i64
  %2101 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2100
  store i8* %2099, i8** %2101, align 8
  call void @unroll_loop(i32 45)
  %2102 = sext i32 %.1.17 to i64
  %2103 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2102
  %2104 = load i8*, i8** %2103, align 8
  %2105 = icmp ne i8* %2104, null
  %2106 = add nsw i32 %.1.17, 1
  %2107 = icmp slt i32 %2106, 30
  %.1.18 = select i1 %2105, i32 %2106, i32 %.1.17
  %2108 = select i1 %2105, i1 %2107, i1 false
  br i1 %2108, label %.lr.ph6.19, label %._crit_edge.loopexit

.lr.ph6.19:                                       ; preds = %.lr.ph6.18
  call void @__loop_iteration_test___4()
  %2109 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2110 = sext i32 %.1.18 to i64
  %2111 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2110
  store i8* %2109, i8** %2111, align 8
  call void @unroll_loop(i32 45)
  %2112 = sext i32 %.1.18 to i64
  %2113 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2112
  %2114 = load i8*, i8** %2113, align 8
  %2115 = icmp ne i8* %2114, null
  %2116 = add nsw i32 %.1.18, 1
  %2117 = icmp slt i32 %2116, 30
  %.1.19 = select i1 %2115, i32 %2116, i32 %.1.18
  br label %._crit_edge.loopexit

; <label>:2118:                                   ; preds = %289
  call void @unroll_loop(i32 44)
  %2119 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2120 = icmp ne i8* %2119, null
  br i1 %2120, label %2121, label %2122

; <label>:2121:                                   ; preds = %2118
  store i8 0, i8* %2119, align 1
  br label %2122

; <label>:2122:                                   ; preds = %2121, %2118
  %2123 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2124 = icmp ne i8* %2123, null
  br i1 %2124, label %2125, label %2126

; <label>:2125:                                   ; preds = %2122
  store i8 0, i8* %2123, align 1
  br label %2126

; <label>:2126:                                   ; preds = %2125, %2122
  %2127 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2128 = icmp ne i8* %2127, null
  br i1 %2128, label %2129, label %2130

; <label>:2129:                                   ; preds = %2126
  store i8 0, i8* %2127, align 1
  br label %2130

; <label>:2130:                                   ; preds = %2129, %2126
  %2131 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2132 = icmp ne i8* %2131, null
  br i1 %2132, label %2133, label %2134

; <label>:2133:                                   ; preds = %2130
  store i8 0, i8* %2131, align 1
  br label %2134

; <label>:2134:                                   ; preds = %2133, %2130
  %2135 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2135, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2136 = load i8*, i8** %26, align 8
  %2137 = icmp ne i8* %2136, null
  %.14.1.1 = select i1 %2137, i32 1, i32 0
  %2138 = select i1 %2137, i1 true, i1 false
  br i1 %2138, label %.lr.ph6.preheader.1.1, label %._crit_edge.1.1

.lr.ph6.preheader.1.1:                            ; preds = %2134
  br label %.lr.ph6.1.1

.lr.ph6.1.1:                                      ; preds = %.lr.ph6.1.1, %.lr.ph6.preheader.1.1
  %.15.1.1 = phi i32 [ %.1.1.1, %.lr.ph6.1.1 ], [ %.14.1.1, %.lr.ph6.preheader.1.1 ]
  %2139 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2140 = sext i32 %.15.1.1 to i64
  %2141 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2140
  store i8* %2139, i8** %2141, align 8
  call void @unroll_loop(i32 45)
  %2142 = sext i32 %.15.1.1 to i64
  %2143 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2142
  %2144 = load i8*, i8** %2143, align 8
  %2145 = icmp ne i8* %2144, null
  %2146 = add nsw i32 %.15.1.1, 1
  %2147 = icmp slt i32 %2146, 30
  %.1.1.1 = select i1 %2145, i32 %2146, i32 %.15.1.1
  %2148 = select i1 %2145, i1 %2147, i1 false
  br i1 %2148, label %.lr.ph6.1.1, label %._crit_edge.loopexit.1.1

._crit_edge.loopexit.1.1:                         ; preds = %.lr.ph6.1.1
  %.1.lcssa.ph.1.1 = phi i32 [ %.1.1.1, %.lr.ph6.1.1 ]
  br label %._crit_edge.1.1

._crit_edge.1.1:                                  ; preds = %._crit_edge.loopexit.1.1, %2134
  %.1.lcssa.1.1 = phi i32 [ %.14.1.1, %2134 ], [ %.1.lcssa.ph.1.1, %._crit_edge.loopexit.1.1 ]
  %2149 = load i8*, i8** %27, align 16
  %2150 = icmp ne i8* %2149, null
  br i1 %2150, label %292, label %2151

; <label>:2151:                                   ; preds = %._crit_edge.1.1
  call void @__loop_iteration_test___6()
  %2152 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2153 = icmp ne i8* %2152, null
  br i1 %2153, label %2154, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2154:                                   ; preds = %2151
  call void @unroll_loop(i32 44)
  %2155 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2156 = icmp ne i8* %2155, null
  br i1 %2156, label %2157, label %2158

; <label>:2157:                                   ; preds = %2154
  store i8 0, i8* %2155, align 1
  br label %2158

; <label>:2158:                                   ; preds = %2157, %2154
  %2159 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2160 = icmp ne i8* %2159, null
  br i1 %2160, label %2161, label %2162

; <label>:2161:                                   ; preds = %2158
  store i8 0, i8* %2159, align 1
  br label %2162

; <label>:2162:                                   ; preds = %2161, %2158
  %2163 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2164 = icmp ne i8* %2163, null
  br i1 %2164, label %2165, label %2166

; <label>:2165:                                   ; preds = %2162
  store i8 0, i8* %2163, align 1
  br label %2166

; <label>:2166:                                   ; preds = %2165, %2162
  %2167 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2168 = icmp ne i8* %2167, null
  br i1 %2168, label %2169, label %2170

; <label>:2169:                                   ; preds = %2166
  store i8 0, i8* %2167, align 1
  br label %2170

; <label>:2170:                                   ; preds = %2169, %2166
  %2171 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2171, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2172 = load i8*, i8** %26, align 8
  %2173 = icmp ne i8* %2172, null
  %.14.1.2 = select i1 %2173, i32 1, i32 0
  %2174 = select i1 %2173, i1 true, i1 false
  br i1 %2174, label %.lr.ph6.preheader.1.2, label %._crit_edge.1.2

.lr.ph6.preheader.1.2:                            ; preds = %2170
  br label %.lr.ph6.1.2

.lr.ph6.1.2:                                      ; preds = %.lr.ph6.1.2, %.lr.ph6.preheader.1.2
  %.15.1.2 = phi i32 [ %.1.1.2, %.lr.ph6.1.2 ], [ %.14.1.2, %.lr.ph6.preheader.1.2 ]
  %2175 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2176 = sext i32 %.15.1.2 to i64
  %2177 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2176
  store i8* %2175, i8** %2177, align 8
  call void @unroll_loop(i32 45)
  %2178 = sext i32 %.15.1.2 to i64
  %2179 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2178
  %2180 = load i8*, i8** %2179, align 8
  %2181 = icmp ne i8* %2180, null
  %2182 = add nsw i32 %.15.1.2, 1
  %2183 = icmp slt i32 %2182, 30
  %.1.1.2 = select i1 %2181, i32 %2182, i32 %.15.1.2
  %2184 = select i1 %2181, i1 %2183, i1 false
  br i1 %2184, label %.lr.ph6.1.2, label %._crit_edge.loopexit.1.2

._crit_edge.loopexit.1.2:                         ; preds = %.lr.ph6.1.2
  %.1.lcssa.ph.1.2 = phi i32 [ %.1.1.2, %.lr.ph6.1.2 ]
  br label %._crit_edge.1.2

._crit_edge.1.2:                                  ; preds = %._crit_edge.loopexit.1.2, %2170
  %.1.lcssa.1.2 = phi i32 [ %.14.1.2, %2170 ], [ %.1.lcssa.ph.1.2, %._crit_edge.loopexit.1.2 ]
  %2185 = load i8*, i8** %27, align 16
  %2186 = icmp ne i8* %2185, null
  br i1 %2186, label %292, label %2187

; <label>:2187:                                   ; preds = %._crit_edge.1.2
  call void @__loop_iteration_test___6()
  %2188 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2189 = icmp ne i8* %2188, null
  br i1 %2189, label %2190, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2190:                                   ; preds = %2187
  call void @unroll_loop(i32 44)
  %2191 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2192 = icmp ne i8* %2191, null
  br i1 %2192, label %2193, label %2194

; <label>:2193:                                   ; preds = %2190
  store i8 0, i8* %2191, align 1
  br label %2194

; <label>:2194:                                   ; preds = %2193, %2190
  %2195 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2196 = icmp ne i8* %2195, null
  br i1 %2196, label %2197, label %2198

; <label>:2197:                                   ; preds = %2194
  store i8 0, i8* %2195, align 1
  br label %2198

; <label>:2198:                                   ; preds = %2197, %2194
  %2199 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2200 = icmp ne i8* %2199, null
  br i1 %2200, label %2201, label %2202

; <label>:2201:                                   ; preds = %2198
  store i8 0, i8* %2199, align 1
  br label %2202

; <label>:2202:                                   ; preds = %2201, %2198
  %2203 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2204 = icmp ne i8* %2203, null
  br i1 %2204, label %2205, label %2206

; <label>:2205:                                   ; preds = %2202
  store i8 0, i8* %2203, align 1
  br label %2206

; <label>:2206:                                   ; preds = %2205, %2202
  %2207 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2207, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2208 = load i8*, i8** %26, align 8
  %2209 = icmp ne i8* %2208, null
  %.14.1.3 = select i1 %2209, i32 1, i32 0
  %2210 = select i1 %2209, i1 true, i1 false
  br i1 %2210, label %.lr.ph6.preheader.1.3, label %._crit_edge.1.3

.lr.ph6.preheader.1.3:                            ; preds = %2206
  br label %.lr.ph6.1.3

.lr.ph6.1.3:                                      ; preds = %.lr.ph6.1.3, %.lr.ph6.preheader.1.3
  %.15.1.3 = phi i32 [ %.1.1.3, %.lr.ph6.1.3 ], [ %.14.1.3, %.lr.ph6.preheader.1.3 ]
  %2211 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2212 = sext i32 %.15.1.3 to i64
  %2213 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2212
  store i8* %2211, i8** %2213, align 8
  call void @unroll_loop(i32 45)
  %2214 = sext i32 %.15.1.3 to i64
  %2215 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2214
  %2216 = load i8*, i8** %2215, align 8
  %2217 = icmp ne i8* %2216, null
  %2218 = add nsw i32 %.15.1.3, 1
  %2219 = icmp slt i32 %2218, 30
  %.1.1.3 = select i1 %2217, i32 %2218, i32 %.15.1.3
  %2220 = select i1 %2217, i1 %2219, i1 false
  br i1 %2220, label %.lr.ph6.1.3, label %._crit_edge.loopexit.1.3

._crit_edge.loopexit.1.3:                         ; preds = %.lr.ph6.1.3
  %.1.lcssa.ph.1.3 = phi i32 [ %.1.1.3, %.lr.ph6.1.3 ]
  br label %._crit_edge.1.3

._crit_edge.1.3:                                  ; preds = %._crit_edge.loopexit.1.3, %2206
  %.1.lcssa.1.3 = phi i32 [ %.14.1.3, %2206 ], [ %.1.lcssa.ph.1.3, %._crit_edge.loopexit.1.3 ]
  %2221 = load i8*, i8** %27, align 16
  %2222 = icmp ne i8* %2221, null
  br i1 %2222, label %292, label %2223

; <label>:2223:                                   ; preds = %._crit_edge.1.3
  call void @__loop_iteration_test___6()
  %2224 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2225 = icmp ne i8* %2224, null
  br i1 %2225, label %2226, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2226:                                   ; preds = %2223
  call void @unroll_loop(i32 44)
  %2227 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2228 = icmp ne i8* %2227, null
  br i1 %2228, label %2229, label %2230

; <label>:2229:                                   ; preds = %2226
  store i8 0, i8* %2227, align 1
  br label %2230

; <label>:2230:                                   ; preds = %2229, %2226
  %2231 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2232 = icmp ne i8* %2231, null
  br i1 %2232, label %2233, label %2234

; <label>:2233:                                   ; preds = %2230
  store i8 0, i8* %2231, align 1
  br label %2234

; <label>:2234:                                   ; preds = %2233, %2230
  %2235 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2236 = icmp ne i8* %2235, null
  br i1 %2236, label %2237, label %2238

; <label>:2237:                                   ; preds = %2234
  store i8 0, i8* %2235, align 1
  br label %2238

; <label>:2238:                                   ; preds = %2237, %2234
  %2239 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2240 = icmp ne i8* %2239, null
  br i1 %2240, label %2241, label %2242

; <label>:2241:                                   ; preds = %2238
  store i8 0, i8* %2239, align 1
  br label %2242

; <label>:2242:                                   ; preds = %2241, %2238
  %2243 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2243, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2244 = load i8*, i8** %26, align 8
  %2245 = icmp ne i8* %2244, null
  %.14.1.4 = select i1 %2245, i32 1, i32 0
  %2246 = select i1 %2245, i1 true, i1 false
  br i1 %2246, label %.lr.ph6.preheader.1.4, label %._crit_edge.1.4

.lr.ph6.preheader.1.4:                            ; preds = %2242
  br label %.lr.ph6.1.4

.lr.ph6.1.4:                                      ; preds = %.lr.ph6.1.4, %.lr.ph6.preheader.1.4
  %.15.1.4 = phi i32 [ %.1.1.4, %.lr.ph6.1.4 ], [ %.14.1.4, %.lr.ph6.preheader.1.4 ]
  %2247 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2248 = sext i32 %.15.1.4 to i64
  %2249 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2248
  store i8* %2247, i8** %2249, align 8
  call void @unroll_loop(i32 45)
  %2250 = sext i32 %.15.1.4 to i64
  %2251 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2250
  %2252 = load i8*, i8** %2251, align 8
  %2253 = icmp ne i8* %2252, null
  %2254 = add nsw i32 %.15.1.4, 1
  %2255 = icmp slt i32 %2254, 30
  %.1.1.4 = select i1 %2253, i32 %2254, i32 %.15.1.4
  %2256 = select i1 %2253, i1 %2255, i1 false
  br i1 %2256, label %.lr.ph6.1.4, label %._crit_edge.loopexit.1.4

._crit_edge.loopexit.1.4:                         ; preds = %.lr.ph6.1.4
  %.1.lcssa.ph.1.4 = phi i32 [ %.1.1.4, %.lr.ph6.1.4 ]
  br label %._crit_edge.1.4

._crit_edge.1.4:                                  ; preds = %._crit_edge.loopexit.1.4, %2242
  %.1.lcssa.1.4 = phi i32 [ %.14.1.4, %2242 ], [ %.1.lcssa.ph.1.4, %._crit_edge.loopexit.1.4 ]
  %2257 = load i8*, i8** %27, align 16
  %2258 = icmp ne i8* %2257, null
  br i1 %2258, label %292, label %2259

; <label>:2259:                                   ; preds = %._crit_edge.1.4
  call void @__loop_iteration_test___6()
  %2260 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2261 = icmp ne i8* %2260, null
  br i1 %2261, label %2262, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2262:                                   ; preds = %2259
  call void @unroll_loop(i32 44)
  %2263 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2264 = icmp ne i8* %2263, null
  br i1 %2264, label %2265, label %2266

; <label>:2265:                                   ; preds = %2262
  store i8 0, i8* %2263, align 1
  br label %2266

; <label>:2266:                                   ; preds = %2265, %2262
  %2267 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2268 = icmp ne i8* %2267, null
  br i1 %2268, label %2269, label %2270

; <label>:2269:                                   ; preds = %2266
  store i8 0, i8* %2267, align 1
  br label %2270

; <label>:2270:                                   ; preds = %2269, %2266
  %2271 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2272 = icmp ne i8* %2271, null
  br i1 %2272, label %2273, label %2274

; <label>:2273:                                   ; preds = %2270
  store i8 0, i8* %2271, align 1
  br label %2274

; <label>:2274:                                   ; preds = %2273, %2270
  %2275 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2276 = icmp ne i8* %2275, null
  br i1 %2276, label %2277, label %2278

; <label>:2277:                                   ; preds = %2274
  store i8 0, i8* %2275, align 1
  br label %2278

; <label>:2278:                                   ; preds = %2277, %2274
  %2279 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2279, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2280 = load i8*, i8** %26, align 8
  %2281 = icmp ne i8* %2280, null
  %.14.1.5 = select i1 %2281, i32 1, i32 0
  %2282 = select i1 %2281, i1 true, i1 false
  br i1 %2282, label %.lr.ph6.preheader.1.5, label %._crit_edge.1.5

.lr.ph6.preheader.1.5:                            ; preds = %2278
  br label %.lr.ph6.1.5

.lr.ph6.1.5:                                      ; preds = %.lr.ph6.1.5, %.lr.ph6.preheader.1.5
  %.15.1.5 = phi i32 [ %.1.1.5, %.lr.ph6.1.5 ], [ %.14.1.5, %.lr.ph6.preheader.1.5 ]
  %2283 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2284 = sext i32 %.15.1.5 to i64
  %2285 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2284
  store i8* %2283, i8** %2285, align 8
  call void @unroll_loop(i32 45)
  %2286 = sext i32 %.15.1.5 to i64
  %2287 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2286
  %2288 = load i8*, i8** %2287, align 8
  %2289 = icmp ne i8* %2288, null
  %2290 = add nsw i32 %.15.1.5, 1
  %2291 = icmp slt i32 %2290, 30
  %.1.1.5 = select i1 %2289, i32 %2290, i32 %.15.1.5
  %2292 = select i1 %2289, i1 %2291, i1 false
  br i1 %2292, label %.lr.ph6.1.5, label %._crit_edge.loopexit.1.5

._crit_edge.loopexit.1.5:                         ; preds = %.lr.ph6.1.5
  %.1.lcssa.ph.1.5 = phi i32 [ %.1.1.5, %.lr.ph6.1.5 ]
  br label %._crit_edge.1.5

._crit_edge.1.5:                                  ; preds = %._crit_edge.loopexit.1.5, %2278
  %.1.lcssa.1.5 = phi i32 [ %.14.1.5, %2278 ], [ %.1.lcssa.ph.1.5, %._crit_edge.loopexit.1.5 ]
  %2293 = load i8*, i8** %27, align 16
  %2294 = icmp ne i8* %2293, null
  br i1 %2294, label %292, label %2295

; <label>:2295:                                   ; preds = %._crit_edge.1.5
  call void @__loop_iteration_test___6()
  %2296 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2297 = icmp ne i8* %2296, null
  br i1 %2297, label %2298, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2298:                                   ; preds = %2295
  call void @unroll_loop(i32 44)
  %2299 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2300 = icmp ne i8* %2299, null
  br i1 %2300, label %2301, label %2302

; <label>:2301:                                   ; preds = %2298
  store i8 0, i8* %2299, align 1
  br label %2302

; <label>:2302:                                   ; preds = %2301, %2298
  %2303 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2304 = icmp ne i8* %2303, null
  br i1 %2304, label %2305, label %2306

; <label>:2305:                                   ; preds = %2302
  store i8 0, i8* %2303, align 1
  br label %2306

; <label>:2306:                                   ; preds = %2305, %2302
  %2307 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2308 = icmp ne i8* %2307, null
  br i1 %2308, label %2309, label %2310

; <label>:2309:                                   ; preds = %2306
  store i8 0, i8* %2307, align 1
  br label %2310

; <label>:2310:                                   ; preds = %2309, %2306
  %2311 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2312 = icmp ne i8* %2311, null
  br i1 %2312, label %2313, label %2314

; <label>:2313:                                   ; preds = %2310
  store i8 0, i8* %2311, align 1
  br label %2314

; <label>:2314:                                   ; preds = %2313, %2310
  %2315 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2315, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2316 = load i8*, i8** %26, align 8
  %2317 = icmp ne i8* %2316, null
  %.14.1.6 = select i1 %2317, i32 1, i32 0
  %2318 = select i1 %2317, i1 true, i1 false
  br i1 %2318, label %.lr.ph6.preheader.1.6, label %._crit_edge.1.6

.lr.ph6.preheader.1.6:                            ; preds = %2314
  br label %.lr.ph6.1.6

.lr.ph6.1.6:                                      ; preds = %.lr.ph6.1.6, %.lr.ph6.preheader.1.6
  %.15.1.6 = phi i32 [ %.1.1.6, %.lr.ph6.1.6 ], [ %.14.1.6, %.lr.ph6.preheader.1.6 ]
  %2319 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2320 = sext i32 %.15.1.6 to i64
  %2321 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2320
  store i8* %2319, i8** %2321, align 8
  call void @unroll_loop(i32 45)
  %2322 = sext i32 %.15.1.6 to i64
  %2323 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2322
  %2324 = load i8*, i8** %2323, align 8
  %2325 = icmp ne i8* %2324, null
  %2326 = add nsw i32 %.15.1.6, 1
  %2327 = icmp slt i32 %2326, 30
  %.1.1.6 = select i1 %2325, i32 %2326, i32 %.15.1.6
  %2328 = select i1 %2325, i1 %2327, i1 false
  br i1 %2328, label %.lr.ph6.1.6, label %._crit_edge.loopexit.1.6

._crit_edge.loopexit.1.6:                         ; preds = %.lr.ph6.1.6
  %.1.lcssa.ph.1.6 = phi i32 [ %.1.1.6, %.lr.ph6.1.6 ]
  br label %._crit_edge.1.6

._crit_edge.1.6:                                  ; preds = %._crit_edge.loopexit.1.6, %2314
  %.1.lcssa.1.6 = phi i32 [ %.14.1.6, %2314 ], [ %.1.lcssa.ph.1.6, %._crit_edge.loopexit.1.6 ]
  %2329 = load i8*, i8** %27, align 16
  %2330 = icmp ne i8* %2329, null
  br i1 %2330, label %292, label %2331

; <label>:2331:                                   ; preds = %._crit_edge.1.6
  call void @__loop_iteration_test___6()
  %2332 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2333 = icmp ne i8* %2332, null
  br i1 %2333, label %2334, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2334:                                   ; preds = %2331
  call void @unroll_loop(i32 44)
  %2335 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2336 = icmp ne i8* %2335, null
  br i1 %2336, label %2337, label %2338

; <label>:2337:                                   ; preds = %2334
  store i8 0, i8* %2335, align 1
  br label %2338

; <label>:2338:                                   ; preds = %2337, %2334
  %2339 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2340 = icmp ne i8* %2339, null
  br i1 %2340, label %2341, label %2342

; <label>:2341:                                   ; preds = %2338
  store i8 0, i8* %2339, align 1
  br label %2342

; <label>:2342:                                   ; preds = %2341, %2338
  %2343 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2344 = icmp ne i8* %2343, null
  br i1 %2344, label %2345, label %2346

; <label>:2345:                                   ; preds = %2342
  store i8 0, i8* %2343, align 1
  br label %2346

; <label>:2346:                                   ; preds = %2345, %2342
  %2347 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2348 = icmp ne i8* %2347, null
  br i1 %2348, label %2349, label %2350

; <label>:2349:                                   ; preds = %2346
  store i8 0, i8* %2347, align 1
  br label %2350

; <label>:2350:                                   ; preds = %2349, %2346
  %2351 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2351, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2352 = load i8*, i8** %26, align 8
  %2353 = icmp ne i8* %2352, null
  %.14.1.7 = select i1 %2353, i32 1, i32 0
  %2354 = select i1 %2353, i1 true, i1 false
  br i1 %2354, label %.lr.ph6.preheader.1.7, label %._crit_edge.1.7

.lr.ph6.preheader.1.7:                            ; preds = %2350
  br label %.lr.ph6.1.7

.lr.ph6.1.7:                                      ; preds = %.lr.ph6.1.7, %.lr.ph6.preheader.1.7
  %.15.1.7 = phi i32 [ %.1.1.7, %.lr.ph6.1.7 ], [ %.14.1.7, %.lr.ph6.preheader.1.7 ]
  %2355 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2356 = sext i32 %.15.1.7 to i64
  %2357 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2356
  store i8* %2355, i8** %2357, align 8
  call void @unroll_loop(i32 45)
  %2358 = sext i32 %.15.1.7 to i64
  %2359 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2358
  %2360 = load i8*, i8** %2359, align 8
  %2361 = icmp ne i8* %2360, null
  %2362 = add nsw i32 %.15.1.7, 1
  %2363 = icmp slt i32 %2362, 30
  %.1.1.7 = select i1 %2361, i32 %2362, i32 %.15.1.7
  %2364 = select i1 %2361, i1 %2363, i1 false
  br i1 %2364, label %.lr.ph6.1.7, label %._crit_edge.loopexit.1.7

._crit_edge.loopexit.1.7:                         ; preds = %.lr.ph6.1.7
  %.1.lcssa.ph.1.7 = phi i32 [ %.1.1.7, %.lr.ph6.1.7 ]
  br label %._crit_edge.1.7

._crit_edge.1.7:                                  ; preds = %._crit_edge.loopexit.1.7, %2350
  %.1.lcssa.1.7 = phi i32 [ %.14.1.7, %2350 ], [ %.1.lcssa.ph.1.7, %._crit_edge.loopexit.1.7 ]
  %2365 = load i8*, i8** %27, align 16
  %2366 = icmp ne i8* %2365, null
  br i1 %2366, label %292, label %2367

; <label>:2367:                                   ; preds = %._crit_edge.1.7
  call void @__loop_iteration_test___6()
  %2368 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit1
}

declare void @__loop_termination_test___6()

declare void @__loop_iteration_test___6()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config_clone_clone_clone_clone_clone_clone(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 2, 0
  br i1 true, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = icmp ne i64 4389383, 0
  %12 = icmp ne %struct._IO_FILE* null, null
  br i1 true, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = bitcast [27 x i8]* @22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 27, i1 false)
  %18 = icmp ne i64 244262, 0
  %19 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %51 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 48)
  br label %55

; <label>:52:                                     ; preds = %._crit_edge
  call void @__loop_iteration_test___3()
  %53 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %54 = icmp ne i8* %53, null
  br i1 %54, label %1674, label %.outer._crit_edge.loopexit.loopexit

; <label>:55:                                     ; preds = %.lr.ph
  call void @unroll_loop(i32 44)
  %56 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %57 = icmp ne i64 244287, 0
  %58 = icmp ne i8* %56, null
  br i1 true, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %56, align 1
  br label %60

; <label>:60:                                     ; preds = %59, %55
  %61 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %62 = icmp ne i64 0, 0
  %63 = icmp ne i8* null, null
  br i1 false, label %64, label %65

; <label>:64:                                     ; preds = %60
  store i8 0, i8* null, align 1
  br label %65

; <label>:65:                                     ; preds = %64, %60
  %66 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %67 = icmp ne i64 0, 0
  %68 = icmp ne i8* null, null
  br i1 false, label %69, label %70

; <label>:69:                                     ; preds = %65
  store i8 0, i8* null, align 1
  br label %70

; <label>:70:                                     ; preds = %69, %65
  %71 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %72 = icmp ne i64 0, 0
  %73 = icmp ne i8* null, null
  br i1 false, label %74, label %75

; <label>:74:                                     ; preds = %70
  store i8 0, i8* null, align 1
  br label %75

; <label>:75:                                     ; preds = %74, %70
  %76 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %77 = load i8*, i8** %26, align 8
  %78 = icmp ne i64 10000581, 0
  %79 = icmp ne i8* %77, null
  %.14 = select i1 true, i32 1, i32 0
  %80 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %75
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6.preheader
  call void @__loop_iteration_test___4()
  %81 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %82 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @24, i32 0, i32 0), i8** %82, align 8
  call void @unroll_loop(i32 45)
  %83 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %84 = load i8*, i8** %83, align 8
  %85 = icmp ne i64 10000592, 0
  %86 = icmp ne i8* %84, null
  %.1 = select i1 true, i32 2, i32 1
  %87 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.13, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6.19, %.lr.ph6.18, %.lr.ph6.17, %.lr.ph6.1626, %.lr.ph6.15, %.lr.ph6.14, %.lr.ph6.1323, %.lr.ph6.12, %.lr.ph6.11, %.lr.ph6.10, %.lr.ph6.9, %.lr.ph6.8, %.lr.ph6.721, %.lr.ph6.618, %.lr.ph6.515, %.lr.ph6.412, %.lr.ph6.39, %.lr.ph6.26, %.lr.ph6.13, %.lr.ph6
  %.1.lcssa.ph = phi i32 [ 2, %.lr.ph6 ], [ 3, %.lr.ph6.13 ], [ 4, %.lr.ph6.26 ], [ 4, %.lr.ph6.39 ], [ %.1.411, %.lr.ph6.412 ], [ %.1.514, %.lr.ph6.515 ], [ %.1.617, %.lr.ph6.618 ], [ %.1.720, %.lr.ph6.721 ], [ %.1.8, %.lr.ph6.8 ], [ %.1.9, %.lr.ph6.9 ], [ %.1.10, %.lr.ph6.10 ], [ %.1.11, %.lr.ph6.11 ], [ %.1.1222, %.lr.ph6.12 ], [ %.1.13, %.lr.ph6.1323 ], [ %.1.14, %.lr.ph6.14 ], [ %.1.1525, %.lr.ph6.15 ], [ %.1.16, %.lr.ph6.1626 ], [ %.1.17, %.lr.ph6.17 ], [ %.1.18, %.lr.ph6.18 ], [ %.1.19, %.lr.ph6.19 ]
  call void @__loop_termination_test___4()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %75
  %.1.lcssa = phi i32 [ 1, %75 ], [ 4, %._crit_edge.loopexit ]
  %88 = load i8*, i8** %27, align 16
  %89 = icmp ne i64 10000581, 0
  %90 = icmp ne i8* %88, null
  br i1 true, label %91, label %52

; <label>:91:                                     ; preds = %._crit_edge.770, %._crit_edge.660, %._crit_edge.550, %._crit_edge.440, %._crit_edge.330, %._crit_edge.220, %._crit_edge.110, %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ 4, %._crit_edge ], [ %.1.lcssa.19, %._crit_edge.110 ], [ %.1.lcssa.219, %._crit_edge.220 ], [ %.1.lcssa.329, %._crit_edge.330 ], [ %.1.lcssa.439, %._crit_edge.440 ], [ %.1.lcssa.549, %._crit_edge.550 ], [ %.1.lcssa.659, %._crit_edge.660 ], [ %.1.lcssa.769, %._crit_edge.770 ]
  %.lcssa = phi i32 [ 1, %._crit_edge ], [ 2, %._crit_edge.110 ], [ 3, %._crit_edge.220 ], [ 4, %._crit_edge.330 ], [ 5, %._crit_edge.440 ], [ 6, %._crit_edge.550 ], [ 7, %._crit_edge.660 ], [ 8, %._crit_edge.770 ]
  call void @__loop_termination_test___3()
  %92 = load i8*, i8** %28, align 16
  %93 = call i32 @strcasecmp(i8* %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %94 = icmp ne i32 0, 0
  br i1 false, label %117, label %95

; <label>:95:                                     ; preds = %91
  %96 = icmp slt i32 4, 2
  %97 = icmp sgt i32 4, 4
  %or.cond = or i1 false, false
  br i1 false, label %98, label %99

; <label>:98:                                     ; preds = %95
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:99:                                     ; preds = %95
  %100 = icmp sgt i32 4, 2
  br i1 true, label %101, label %113

; <label>:101:                                    ; preds = %99
  %102 = load i8*, i8** %34, align 8
  %103 = call i32 @strcasecmp(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %104 = icmp ne i32 0, 0
  br i1 false, label %111, label %105

; <label>:105:                                    ; preds = %101
  %106 = icmp sge i32 4, 3
  br i1 true, label %107, label %110

; <label>:107:                                    ; preds = %105
  %108 = load i8*, i8** %40, align 8
  %109 = call i32 @atoi(i8* %108) #8
  br label %113

; <label>:110:                                    ; preds = %105
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:111:                                    ; preds = %101
  %112 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 1, i8* %112)
  br label %.outer.backedge

; <label>:113:                                    ; preds = %107, %99
  %.08 = phi i32 [ 53, %107 ], [ 53, %99 ]
  %114 = load i8*, i8** %35, align 8
  %115 = call i32 @fwd_add_clone(i8* %114, i32 53)
  %116 = icmp eq i32 0, -1
  br i1 false, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:117:                                    ; preds = %91
  %118 = load i8*, i8** %29, align 16
  %119 = call i32 @strcasecmp(i8* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %132, label %121

; <label>:121:                                    ; preds = %117
  %122 = icmp ne i32 4, 2
  br i1 %122, label %123, label %124

; <label>:123:                                    ; preds = %121
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:124:                                    ; preds = %121
  %125 = load i8*, i8** %32, align 8
  %126 = call i32 @conv_trick_conf(i8* %125)
  %127 = icmp ne i32 %126, 0
  %128 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %129 = load i8*, i8** %33, align 8
  br i1 %127, label %130, label %131

; <label>:130:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:131:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:132:                                    ; preds = %117
  %133 = load i8*, i8** %30, align 16
  %134 = call i32 @strcasecmp(i8* %133, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %140, label %136

; <label>:136:                                    ; preds = %132
  %137 = icmp ne i32 4, 2
  br i1 %137, label %138, label %139

; <label>:138:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:139:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:140:                                    ; preds = %132
  %141 = load i8*, i8** %31, align 16
  %142 = call i32 @strcasecmp(i8* %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %150, label %144

; <label>:144:                                    ; preds = %140
  %145 = icmp ne i32 4, 2
  br i1 %145, label %146, label %147

; <label>:146:                                    ; preds = %144
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:147:                                    ; preds = %144
  %148 = load i8*, i8** %39, align 8
  %149 = call i32 @atoi(i8* %148) #8
  store i32 %149, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:150:                                    ; preds = %140
  %151 = load i8*, i8** %36, align 16
  %152 = call i32 @strcasecmp(i8* %151, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %160, label %154

; <label>:154:                                    ; preds = %150
  %155 = icmp ne i32 4, 2
  br i1 %155, label %156, label %157

; <label>:156:                                    ; preds = %154
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:157:                                    ; preds = %154
  %158 = load i8*, i8** %42, align 8
  %159 = call noalias i8* @strdup(i8* %158) #9, !track !108
  store i8* %159, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:160:                                    ; preds = %150
  %161 = load i8*, i8** %38, align 16
  %162 = call i32 @strcasecmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %209, label %164

; <label>:164:                                    ; preds = %160
  %165 = icmp slt i32 4, 2
  br i1 %165, label %166, label %167

; <label>:166:                                    ; preds = %164
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 1)
  br label %167

; <label>:167:                                    ; preds = %166, %164
  %.7 = phi i32 [ 1, %166 ], [ 0, %164 ]
  br label %168

; <label>:168:                                    ; preds = %168, %167
  %lsr.iv = phi i64 [ %lsr.iv.next, %168 ], [ -1, %167 ]
  %169 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %170 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %170
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %171 = load i8*, i8** %scevgep, align 8
  %172 = icmp ne i8* %171, null
  %173 = icmp ult i64 %169, 30
  %spec.select = select i1 %172, i1 %173, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %168, label %174

; <label>:174:                                    ; preds = %168
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %168 ]
  %175 = trunc i64 %.01.lcssa.wide to i32
  %176 = add nsw i32 %175, 4
  %177 = sub nsw i32 %176, 1
  %178 = icmp sgt i32 %177, 30
  br i1 %178, label %179, label %181

; <label>:179:                                    ; preds = %174
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 1, i32 30)
  %180 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:181:                                    ; preds = %174
  %182 = sub nsw i32 4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 1, i32 %182)
  %183 = add nsw i32 4, -1
  %184 = add nsw i32 %175, 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %185
  store i8* null, i8** %186, align 8
  %187 = icmp ne i32 %183, 0
  br i1 %187, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %181
  %188 = add i32 4, -1
  %189 = sext i32 %188 to i64
  %190 = sext i32 %175 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %189
  %191 = shl i64 %189, 1
  %192 = shl i64 %190, 1
  %193 = add i64 %191, %192
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %193
  %194 = sub i32 1, 4
  %195 = zext i32 %194 to i64
  br label %196

; <label>:196:                                    ; preds = %201, %.lr.ph16
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %201 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %197 = load i8*, i8** %scevgep7, align 8
  %198 = call i32 @strcmp(i8* %197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %201, label %200

; <label>:200:                                    ; preds = %196
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:201:                                    ; preds = %196
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %202 = load i8*, i8** %scevgep8, align 8
  %203 = call noalias i8* @strdup(i8* %202) #9, !track !109
  %204 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %204
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %203, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %205 = icmp ne i32 %194, %tmp
  br i1 %205, label %196, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %201
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %200, %181
  %206 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %207 = icmp ne i8* %206, null
  br i1 %207, label %208, label %.outer.backedge

; <label>:208:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:209:                                    ; preds = %160
  %210 = load i8*, i8** %41, align 16
  %211 = call i32 @strcasecmp(i8* %210, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %219, label %213

; <label>:213:                                    ; preds = %209
  %214 = icmp ne i32 4, 2
  br i1 %214, label %215, label %216

; <label>:215:                                    ; preds = %213
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:216:                                    ; preds = %213
  %217 = load i8*, i8** %45, align 8
  %218 = call i32 @atoi(i8* %217) #8
  store i32 %218, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:219:                                    ; preds = %209
  %220 = load i8*, i8** %43, align 16
  %221 = call i32 @strcasecmp(i8* %220, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %240, label %223

; <label>:223:                                    ; preds = %219
  %224 = icmp ne i32 4, 4
  br i1 %224, label %225, label %226

; <label>:225:                                    ; preds = %223
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:226:                                    ; preds = %223
  %227 = load i8*, i8** %46, align 8
  %228 = load i8*, i8** %47, align 16
  %229 = load i8*, i8** %48, align 8
  %230 = call i32 @atoi(i8* %229) #8
  %231 = call i32 @conv_scoped_conf(i8* %227, i8* %228, i32 %230)
  %232 = icmp ne i32 %231, 0
  %233 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %234 = load i8*, i8** %49, align 8
  %235 = load i8*, i8** %50, align 16
  %236 = load i8*, i8** %51, align 8
  br i1 %232, label %237, label %238

; <label>:237:                                    ; preds = %226
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i8* %236)
  br label %.outer.backedge

; <label>:238:                                    ; preds = %226
  %239 = call i32 @atoi(i8* %236) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i32 %239)
  br label %.outer.backedge

; <label>:240:                                    ; preds = %219
  %241 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 1, i8* %241)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %240, %238, %237, %225, %216, %215, %208, %.loopexit, %179, %157, %156, %147, %146, %139, %138, %131, %130, %123, %113, %111, %110, %98
  %.03.ph.be = phi i32 [ 1, %110 ], [ 1, %111 ], [ 1, %98 ], [ 0, %113 ], [ 1, %123 ], [ 1, %130 ], [ 0, %131 ], [ 1, %138 ], [ 0, %139 ], [ 1, %146 ], [ 0, %147 ], [ 1, %156 ], [ 0, %157 ], [ %180, %179 ], [ %.7, %208 ], [ %.7, %.loopexit ], [ 1, %215 ], [ 0, %216 ], [ 1, %240 ], [ 1, %225 ], [ 1, %237 ], [ 0, %238 ]
  call void @__loop_iteration_test___2()
  %242 = bitcast [9 x i8]* @27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %242, i64 9, i1 false)
  %243 = icmp ne i64 244262, 0
  %244 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.1, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit.loopexit:              ; preds = %1923, %1887, %1851, %1815, %1779, %1743, %1707, %52
  call void @__loop_termination_test___3()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit1:             ; preds = %2366, %2330, %2294, %2258, %2222, %2186, %2150, %287
  call void @__loop_termination_test___6()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit2:             ; preds = %491
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit3:             ; preds = %694
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit4:             ; preds = %897
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit5:             ; preds = %1100
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit6:             ; preds = %1303
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit7:             ; preds = %1506
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit:                       ; preds = %.outer._crit_edge.loopexit.loopexit7, %.outer._crit_edge.loopexit.loopexit6, %.outer._crit_edge.loopexit.loopexit5, %.outer._crit_edge.loopexit.loopexit4, %.outer._crit_edge.loopexit.loopexit3, %.outer._crit_edge.loopexit.loopexit2, %.outer._crit_edge.loopexit.loopexit1, %.outer._crit_edge.loopexit.loopexit
  %.03.lcssa.ph = phi i32 [ 0, %.outer._crit_edge.loopexit.loopexit ], [ 0, %.outer._crit_edge.loopexit.loopexit1 ], [ 0, %.outer._crit_edge.loopexit.loopexit2 ], [ %.03.ph.be.2, %.outer._crit_edge.loopexit.loopexit3 ], [ %.03.ph.be.3, %.outer._crit_edge.loopexit.loopexit4 ], [ %.03.ph.be.4, %.outer._crit_edge.loopexit.loopexit5 ], [ %.03.ph.be.5, %.outer._crit_edge.loopexit.loopexit6 ], [ %.03.ph.be.6, %.outer._crit_edge.loopexit.loopexit7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge.7, %.outer.backedge.6, %.outer.backedge.5, %.outer.backedge.4, %.outer.backedge.3, %.outer.backedge.2, %.outer.backedge.1, %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ 0, %.outer.backedge ], [ 0, %.outer.backedge.1 ], [ %.03.ph.be.2, %.outer.backedge.2 ], [ %.03.ph.be.3, %.outer.backedge.3 ], [ %.03.ph.be.4, %.outer.backedge.4 ], [ %.03.ph.be.5, %.outer.backedge.5 ], [ %.03.ph.be.6, %.outer.backedge.6 ], [ %.03.ph.be.7, %.outer.backedge.7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.03.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %245 = call i32 @fclose(%struct._IO_FILE* null)
  %246 = icmp ne i32 %.03.lcssa, 0
  br i1 %246, label %247, label %249

; <label>:247:                                    ; preds = %.outer._crit_edge
  %248 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %248, i32 %.03.lcssa)
  br label %.loopexit1

; <label>:249:                                    ; preds = %.outer._crit_edge
  %250 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %250)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %1529, %1326, %1123, %920, %717, %514, %310, %113
  %.0.ph = phi i32 [ -1, %113 ], [ -1, %310 ], [ -1, %514 ], [ -1, %717 ], [ -1, %920 ], [ -1, %1123 ], [ -1, %1326 ], [ -1, %1529 ]
  call void @__loop_termination_test___2()
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %249, %247, %13
  %.0 = phi i32 [ -1, %247 ], [ 0, %249 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0

.lr.ph.1:                                         ; preds = %.outer.backedge
  call void @unroll_loop(i32 48)
  br label %251

; <label>:251:                                    ; preds = %.lr.ph.1
  call void @unroll_loop(i32 44)
  %252 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %253 = icmp ne i64 244269, 0
  %254 = icmp ne i8* %252, null
  br i1 true, label %255, label %256

; <label>:255:                                    ; preds = %251
  store i8 0, i8* %252, align 1
  br label %256

; <label>:256:                                    ; preds = %255, %251
  %257 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %258 = icmp ne i64 0, 0
  %259 = icmp ne i8* null, null
  br i1 false, label %260, label %261

; <label>:260:                                    ; preds = %256
  store i8 0, i8* null, align 1
  br label %261

; <label>:261:                                    ; preds = %260, %256
  %262 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %263 = icmp ne i64 0, 0
  %264 = icmp ne i8* null, null
  br i1 false, label %265, label %266

; <label>:265:                                    ; preds = %261
  store i8 0, i8* null, align 1
  br label %266

; <label>:266:                                    ; preds = %265, %261
  %267 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %268 = icmp ne i64 0, 0
  %269 = icmp ne i8* null, null
  br i1 false, label %270, label %271

; <label>:270:                                    ; preds = %266
  store i8 0, i8* null, align 1
  br label %271

; <label>:271:                                    ; preds = %270, %266
  %272 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %273 = load i8*, i8** %26, align 8
  %274 = icmp ne i64 10001062, 0
  %275 = icmp ne i8* %273, null
  %.14.1 = select i1 true, i32 1, i32 0
  %276 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader.1, label %._crit_edge.1

.lr.ph6.preheader.1:                              ; preds = %271
  br label %.lr.ph6.1

.lr.ph6.1:                                        ; preds = %.lr.ph6.preheader.1
  call void @__loop_iteration_test___7()
  %277 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %278 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @29, i32 0, i32 0), i8** %278, align 8
  call void @unroll_loop(i32 45)
  %279 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %280 = load i8*, i8** %279, align 8
  %281 = icmp ne i64 10001068, 0
  %282 = icmp ne i8* %280, null
  %.1.1 = select i1 true, i32 2, i32 1
  %283 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.1.13, label %._crit_edge.loopexit.1

._crit_edge.loopexit.1:                           ; preds = %.lr.ph6.1.19, %.lr.ph6.1.18, %.lr.ph6.1.17, %.lr.ph6.1.16, %.lr.ph6.1.15, %.lr.ph6.1.14, %.lr.ph6.1.1323, %.lr.ph6.1.12, %.lr.ph6.1.11, %.lr.ph6.1.10, %.lr.ph6.1.9, %.lr.ph6.1.8, %.lr.ph6.1.721, %.lr.ph6.1.618, %.lr.ph6.1.515, %.lr.ph6.1.412, %.lr.ph6.1.39, %.lr.ph6.1.26, %.lr.ph6.1.13, %.lr.ph6.1
  %.1.lcssa.ph.1 = phi i32 [ 2, %.lr.ph6.1 ], [ 2, %.lr.ph6.1.13 ], [ %.1.1.25, %.lr.ph6.1.26 ], [ %.1.1.38, %.lr.ph6.1.39 ], [ %.1.1.411, %.lr.ph6.1.412 ], [ %.1.1.514, %.lr.ph6.1.515 ], [ %.1.1.617, %.lr.ph6.1.618 ], [ %.1.1.720, %.lr.ph6.1.721 ], [ %.1.1.8, %.lr.ph6.1.8 ], [ %.1.1.9, %.lr.ph6.1.9 ], [ %.1.1.10, %.lr.ph6.1.10 ], [ %.1.1.11, %.lr.ph6.1.11 ], [ %.1.1.1222, %.lr.ph6.1.12 ], [ %.1.1.13, %.lr.ph6.1.1323 ], [ %.1.1.14, %.lr.ph6.1.14 ], [ %.1.1.15, %.lr.ph6.1.15 ], [ %.1.1.16, %.lr.ph6.1.16 ], [ %.1.1.17, %.lr.ph6.1.17 ], [ %.1.1.18, %.lr.ph6.1.18 ], [ %.1.1.19, %.lr.ph6.1.19 ]
  call void @__loop_termination_test___7()
  br label %._crit_edge.1

._crit_edge.1:                                    ; preds = %._crit_edge.loopexit.1, %271
  %.1.lcssa.1 = phi i32 [ 1, %271 ], [ 2, %._crit_edge.loopexit.1 ]
  %284 = load i8*, i8** %27, align 16
  %285 = icmp ne i64 10001062, 0
  %286 = icmp ne i8* %284, null
  br i1 true, label %290, label %287

; <label>:287:                                    ; preds = %._crit_edge.1
  call void @__loop_iteration_test___6()
  %288 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %289 = icmp ne i8* %288, null
  br i1 %289, label %2117, label %.outer._crit_edge.loopexit.loopexit1

; <label>:290:                                    ; preds = %._crit_edge.1.7, %._crit_edge.1.6, %._crit_edge.1.5, %._crit_edge.1.4, %._crit_edge.1.3, %._crit_edge.1.2, %._crit_edge.1.1, %._crit_edge.1
  %.1.lcssa.lcssa.1 = phi i32 [ 2, %._crit_edge.1 ], [ %.1.lcssa.1.1, %._crit_edge.1.1 ], [ %.1.lcssa.1.2, %._crit_edge.1.2 ], [ %.1.lcssa.1.3, %._crit_edge.1.3 ], [ %.1.lcssa.1.4, %._crit_edge.1.4 ], [ %.1.lcssa.1.5, %._crit_edge.1.5 ], [ %.1.lcssa.1.6, %._crit_edge.1.6 ], [ %.1.lcssa.1.7, %._crit_edge.1.7 ]
  %.lcssa.1 = phi i32 [ 2, %._crit_edge.1 ], [ 3, %._crit_edge.1.1 ], [ 4, %._crit_edge.1.2 ], [ 5, %._crit_edge.1.3 ], [ 6, %._crit_edge.1.4 ], [ 7, %._crit_edge.1.5 ], [ 8, %._crit_edge.1.6 ], [ 9, %._crit_edge.1.7 ]
  call void @__loop_termination_test___6()
  %291 = load i8*, i8** %28, align 16
  %292 = call i32 @strcasecmp(i8* %291, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %293 = icmp ne i32 10, 0
  br i1 true, label %319, label %294

; <label>:294:                                    ; preds = %290
  %295 = icmp slt i32 2, 2
  %296 = icmp sgt i32 2, 4
  %or.cond.1 = or i1 %295, %296
  br i1 %or.cond.1, label %317, label %297

; <label>:297:                                    ; preds = %294
  %298 = icmp sgt i32 2, 2
  br i1 %298, label %299, label %310

; <label>:299:                                    ; preds = %297
  %300 = load i8*, i8** %34, align 8
  %301 = call i32 @strcasecmp(i8* %300, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %302 = icmp ne i32 %301, 0
  br i1 %302, label %314, label %303

; <label>:303:                                    ; preds = %299
  %304 = icmp sge i32 2, 3
  br i1 %304, label %307, label %305

; <label>:305:                                    ; preds = %303
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 2)
  %306 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:307:                                    ; preds = %303
  %308 = load i8*, i8** %40, align 8
  %309 = call i32 @atoi(i8* %308) #8
  br label %310

; <label>:310:                                    ; preds = %307, %297
  %.08.1 = phi i32 [ %309, %307 ], [ 53, %297 ]
  %311 = load i8*, i8** %35, align 8
  %312 = call i32 @fwd_add(i8* %311, i32 %.08.1)
  %313 = icmp eq i32 %312, -1
  br i1 %313, label %.loopexit1.loopexit, label %.outer.backedge.1

; <label>:314:                                    ; preds = %299
  %315 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 2, i8* %315)
  %316 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:317:                                    ; preds = %294
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 2)
  %318 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:319:                                    ; preds = %290
  %320 = load i8*, i8** %29, align 16
  %321 = call i32 @strcasecmp(i8* %320, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %322 = icmp ne i32 -3, 0
  br i1 true, label %336, label %323

; <label>:323:                                    ; preds = %319
  %324 = icmp ne i32 2, 2
  br i1 %324, label %334, label %325

; <label>:325:                                    ; preds = %323
  %326 = load i8*, i8** %32, align 8
  %327 = call i32 @conv_trick_conf(i8* %326)
  %328 = icmp ne i32 %327, 0
  %329 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %330 = load i8*, i8** %33, align 8
  br i1 %328, label %332, label %331

; <label>:331:                                    ; preds = %325
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %329, i8* %330)
  br label %.outer.backedge.1

; <label>:332:                                    ; preds = %325
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %329, i8* %330)
  %333 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:334:                                    ; preds = %323
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 2)
  %335 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:336:                                    ; preds = %319
  %337 = load i8*, i8** %30, align 16
  %338 = call i32 @strcasecmp(i8* %337, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %339 = icmp ne i32 15, 0
  br i1 true, label %345, label %340

; <label>:340:                                    ; preds = %336
  %341 = icmp ne i32 2, 2
  br i1 %341, label %343, label %342

; <label>:342:                                    ; preds = %340
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.1

; <label>:343:                                    ; preds = %340
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 2)
  %344 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:345:                                    ; preds = %336
  %346 = load i8*, i8** %31, align 16
  %347 = call i32 @strcasecmp(i8* %346, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %348 = icmp ne i32 -2, 0
  br i1 true, label %356, label %349

; <label>:349:                                    ; preds = %345
  %350 = icmp ne i32 2, 2
  br i1 %350, label %354, label %351

; <label>:351:                                    ; preds = %349
  %352 = load i8*, i8** %39, align 8
  %353 = call i32 @atoi(i8* %352) #8
  store i32 %353, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.1

; <label>:354:                                    ; preds = %349
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 2)
  %355 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:356:                                    ; preds = %345
  %357 = load i8*, i8** %36, align 16
  %358 = call i32 @strcasecmp(i8* %357, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %359 = icmp ne i32 6, 0
  br i1 true, label %367, label %360

; <label>:360:                                    ; preds = %356
  %361 = icmp ne i32 2, 2
  br i1 %361, label %365, label %362

; <label>:362:                                    ; preds = %360
  %363 = load i8*, i8** %42, align 8
  %364 = call noalias i8* @strdup(i8* %363) #9, !track !108
  store i8* %364, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.1

; <label>:365:                                    ; preds = %360
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 2)
  %366 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:367:                                    ; preds = %356
  %368 = load i8*, i8** %38, align 16
  %369 = call i32 @strcasecmp(i8* %368, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %370 = icmp ne i32 7, 0
  br i1 true, label %417, label %371

; <label>:371:                                    ; preds = %367
  %372 = icmp slt i32 2, 2
  br i1 %372, label %373, label %375

; <label>:373:                                    ; preds = %371
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 2)
  %374 = add nsw i32 0, 1
  br label %375

; <label>:375:                                    ; preds = %373, %371
  %.7.1 = phi i32 [ %374, %373 ], [ 0, %371 ]
  br label %376

; <label>:376:                                    ; preds = %376, %375
  %lsr.iv.1 = phi i64 [ %lsr.iv.next.1, %376 ], [ -1, %375 ]
  %377 = add i64 %lsr.iv.1, 1
  call void @unroll_loop(i32 46)
  %378 = shl i64 %lsr.iv.1, 3
  %uglygep.1 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %378
  %uglygep3.1 = bitcast i8* %uglygep.1 to i8**
  %scevgep.1 = getelementptr i8*, i8** %uglygep3.1, i64 111
  %379 = load i8*, i8** %scevgep.1, align 8
  %380 = icmp ne i8* %379, null
  %381 = icmp ult i64 %377, 30
  %spec.select.1 = select i1 %380, i1 %381, i1 false
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %spec.select.1, label %376, label %382

; <label>:382:                                    ; preds = %376
  %.01.lcssa.wide.1 = phi i64 [ %lsr.iv.next.1, %376 ]
  %383 = trunc i64 %.01.lcssa.wide.1 to i32
  %384 = add nsw i32 %383, 2
  %385 = sub nsw i32 %384, 1
  %386 = icmp sgt i32 %385, 30
  br i1 %386, label %415, label %387

; <label>:387:                                    ; preds = %382
  %388 = sub nsw i32 2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 2, i32 %388)
  %389 = add nsw i32 2, -1
  %390 = add nsw i32 %383, 2
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %391
  store i8* null, i8** %392, align 8
  %393 = icmp ne i32 %389, 0
  br i1 %393, label %.lr.ph16.1, label %.loopexit.1

.lr.ph16.1:                                       ; preds = %387
  %394 = add i32 2, -1
  %395 = sext i32 %394 to i64
  %396 = sext i32 %383 to i64
  %scevgep4.1 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %395
  %397 = shl i64 %395, 1
  %398 = shl i64 %396, 1
  %399 = add i64 %397, %398
  %scevgep9.1 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %399
  %400 = sub i32 1, 2
  %401 = zext i32 %400 to i64
  br label %402

; <label>:402:                                    ; preds = %407, %.lr.ph16.1
  %lsr.iv5.1 = phi i64 [ 0, %.lr.ph16.1 ], [ %lsr.iv.next6.1, %407 ]
  call void @unroll_loop(i32 47)
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %403 = load i8*, i8** %scevgep7.1, align 8
  %404 = call i32 @strcmp(i8* %403, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %405 = icmp ne i32 %404, 0
  br i1 %405, label %407, label %406

; <label>:406:                                    ; preds = %402
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.1

; <label>:407:                                    ; preds = %402
  %scevgep8.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %408 = load i8*, i8** %scevgep8.1, align 8
  %409 = call noalias i8* @strdup(i8* %408) #9, !track !109
  %410 = shl i64 %lsr.iv5.1, 1
  %scevgep10.1 = getelementptr i32, i32* %scevgep9.1, i64 %410
  %scevgep1011.1 = bitcast i32* %scevgep10.1 to i8**
  store i8* %409, i8** %scevgep1011.1, align 8
  %lsr.iv.next6.1 = add nsw i64 %lsr.iv5.1, -1
  %tmp.1 = trunc i64 %lsr.iv.next6.1 to i32
  %411 = icmp ne i32 %400, %tmp.1
  br i1 %411, label %402, label %.loopexit.loopexit.1

.loopexit.loopexit.1:                             ; preds = %407
  br label %.loopexit.1

.loopexit.1:                                      ; preds = %.loopexit.loopexit.1, %406, %387
  %412 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %413 = icmp ne i8* %412, null
  br i1 %413, label %414, label %.outer.backedge.1

; <label>:414:                                    ; preds = %.loopexit.1
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.1

; <label>:415:                                    ; preds = %382
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 2, i32 30)
  %416 = add nsw i32 %.7.1, 1
  br label %.outer.backedge.1

; <label>:417:                                    ; preds = %367
  %418 = load i8*, i8** %41, align 16
  %419 = call i32 @strcasecmp(i8* %418, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %420 = icmp ne i32 0, 0
  br i1 false, label %428, label %421

; <label>:421:                                    ; preds = %417
  %422 = icmp ne i32 2, 2
  br i1 false, label %426, label %423

; <label>:423:                                    ; preds = %421
  %424 = load i8*, i8** %45, align 8
  %425 = call i32 @atoi(i8* %424) #8
  store i32 53, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.1

; <label>:426:                                    ; preds = %421
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 2)
  %427 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:428:                                    ; preds = %417
  %429 = load i8*, i8** %43, align 16
  %430 = call i32 @strcasecmp(i8* %429, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %431 = icmp ne i32 %430, 0
  br i1 %431, label %451, label %432

; <label>:432:                                    ; preds = %428
  %433 = icmp ne i32 2, 4
  br i1 %433, label %449, label %434

; <label>:434:                                    ; preds = %432
  %435 = load i8*, i8** %46, align 8
  %436 = load i8*, i8** %47, align 16
  %437 = load i8*, i8** %48, align 8
  %438 = call i32 @atoi(i8* %437) #8
  %439 = call i32 @conv_scoped_conf(i8* %435, i8* %436, i32 %438)
  %440 = icmp ne i32 %439, 0
  %441 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %442 = load i8*, i8** %49, align 8
  %443 = load i8*, i8** %50, align 16
  %444 = load i8*, i8** %51, align 8
  br i1 %440, label %447, label %445

; <label>:445:                                    ; preds = %434
  %446 = call i32 @atoi(i8* %444) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %441, i8* %442, i8* %443, i32 %446)
  br label %.outer.backedge.1

; <label>:447:                                    ; preds = %434
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %441, i8* %442, i8* %443, i8* %444)
  %448 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:449:                                    ; preds = %432
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 2)
  %450 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:451:                                    ; preds = %428
  %452 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 2, i8* %452)
  %453 = add nsw i32 0, 1
  br label %.outer.backedge.1

.outer.backedge.1:                                ; preds = %451, %449, %447, %445, %426, %423, %415, %414, %.loopexit.1, %365, %362, %354, %351, %343, %342, %334, %332, %331, %317, %314, %310, %305
  %.03.ph.be.1 = phi i32 [ %306, %305 ], [ %316, %314 ], [ %318, %317 ], [ 0, %310 ], [ %335, %334 ], [ %333, %332 ], [ 0, %331 ], [ %344, %343 ], [ 0, %342 ], [ %355, %354 ], [ 0, %351 ], [ %366, %365 ], [ 0, %362 ], [ %416, %415 ], [ %.7.1, %414 ], [ %.7.1, %.loopexit.1 ], [ %427, %426 ], [ 0, %423 ], [ %453, %451 ], [ %450, %449 ], [ %448, %447 ], [ 0, %445 ]
  call void @__loop_iteration_test___2()
  %454 = bitcast [22 x i8]* @30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %454, i64 22, i1 false)
  %455 = icmp ne i64 244262, 0
  %456 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.2, label %.outer._crit_edge.loopexit1

.lr.ph.2:                                         ; preds = %.outer.backedge.1
  call void @unroll_loop(i32 48)
  br label %457

; <label>:457:                                    ; preds = %491, %.lr.ph.2
  %.0712.2 = phi i32 [ 2, %.lr.ph.2 ], [ %458, %491 ]
  call void @unroll_loop(i32 44)
  %458 = add nsw i32 %.0712.2, 1
  %459 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %460 = icmp ne i8* %459, null
  br i1 %460, label %461, label %462

; <label>:461:                                    ; preds = %457
  store i8 0, i8* %459, align 1
  br label %462

; <label>:462:                                    ; preds = %461, %457
  %463 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %464 = icmp ne i8* %463, null
  br i1 %464, label %465, label %466

; <label>:465:                                    ; preds = %462
  store i8 0, i8* %463, align 1
  br label %466

; <label>:466:                                    ; preds = %465, %462
  %467 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %468 = icmp ne i8* %467, null
  br i1 %468, label %469, label %470

; <label>:469:                                    ; preds = %466
  store i8 0, i8* %467, align 1
  br label %470

; <label>:470:                                    ; preds = %469, %466
  %471 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %472 = icmp ne i8* %471, null
  br i1 %472, label %473, label %474

; <label>:473:                                    ; preds = %470
  store i8 0, i8* %471, align 1
  br label %474

; <label>:474:                                    ; preds = %473, %470
  %475 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %475, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %476 = load i8*, i8** %26, align 8
  %477 = icmp ne i8* %476, null
  %.14.2 = select i1 %477, i32 1, i32 0
  %478 = select i1 %477, i1 true, i1 false
  br i1 %478, label %.lr.ph6.preheader.2, label %._crit_edge.2

.lr.ph6.preheader.2:                              ; preds = %474
  br label %.lr.ph6.2

.lr.ph6.2:                                        ; preds = %.lr.ph6.2, %.lr.ph6.preheader.2
  %.15.2 = phi i32 [ %.1.2, %.lr.ph6.2 ], [ %.14.2, %.lr.ph6.preheader.2 ]
  %479 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %480 = sext i32 %.15.2 to i64
  %481 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %480
  store i8* %479, i8** %481, align 8
  call void @unroll_loop(i32 45)
  %482 = sext i32 %.15.2 to i64
  %483 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %482
  %484 = load i8*, i8** %483, align 8
  %485 = icmp ne i8* %484, null
  %486 = add nsw i32 %.15.2, 1
  %487 = icmp slt i32 %486, 30
  %.1.2 = select i1 %485, i32 %486, i32 %.15.2
  %488 = select i1 %485, i1 %487, i1 false
  br i1 %488, label %.lr.ph6.2, label %._crit_edge.loopexit.2

._crit_edge.loopexit.2:                           ; preds = %.lr.ph6.2
  %.1.lcssa.ph.2 = phi i32 [ %.1.2, %.lr.ph6.2 ]
  br label %._crit_edge.2

._crit_edge.2:                                    ; preds = %._crit_edge.loopexit.2, %474
  %.1.lcssa.2 = phi i32 [ %.14.2, %474 ], [ %.1.lcssa.ph.2, %._crit_edge.loopexit.2 ]
  %489 = load i8*, i8** %27, align 16
  %490 = icmp ne i8* %489, null
  br i1 %490, label %494, label %491

; <label>:491:                                    ; preds = %._crit_edge.2
  %492 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %493 = icmp ne i8* %492, null
  br i1 %493, label %457, label %.outer._crit_edge.loopexit.loopexit2

; <label>:494:                                    ; preds = %._crit_edge.2
  %.1.lcssa.lcssa.2 = phi i32 [ %.1.lcssa.2, %._crit_edge.2 ]
  %.lcssa.2 = phi i32 [ %458, %._crit_edge.2 ]
  %495 = load i8*, i8** %28, align 16
  %496 = call i32 @strcasecmp(i8* %495, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %497 = icmp ne i32 %496, 0
  br i1 %497, label %523, label %498

; <label>:498:                                    ; preds = %494
  %499 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  %500 = icmp sgt i32 %.1.lcssa.lcssa.2, 4
  %or.cond.2 = or i1 %499, %500
  br i1 %or.cond.2, label %521, label %501

; <label>:501:                                    ; preds = %498
  %502 = icmp sgt i32 %.1.lcssa.lcssa.2, 2
  br i1 %502, label %503, label %514

; <label>:503:                                    ; preds = %501
  %504 = load i8*, i8** %34, align 8
  %505 = call i32 @strcasecmp(i8* %504, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %506 = icmp ne i32 %505, 0
  br i1 %506, label %518, label %507

; <label>:507:                                    ; preds = %503
  %508 = icmp sge i32 %.1.lcssa.lcssa.2, 3
  br i1 %508, label %511, label %509

; <label>:509:                                    ; preds = %507
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.2)
  %510 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:511:                                    ; preds = %507
  %512 = load i8*, i8** %40, align 8
  %513 = call i32 @atoi(i8* %512) #8
  br label %514

; <label>:514:                                    ; preds = %511, %501
  %.08.2 = phi i32 [ %513, %511 ], [ 53, %501 ]
  %515 = load i8*, i8** %35, align 8
  %516 = call i32 @fwd_add(i8* %515, i32 %.08.2)
  %517 = icmp eq i32 %516, -1
  br i1 %517, label %.loopexit1.loopexit, label %.outer.backedge.2

; <label>:518:                                    ; preds = %503
  %519 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.2, i8* %519)
  %520 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:521:                                    ; preds = %498
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.2)
  %522 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:523:                                    ; preds = %494
  %524 = load i8*, i8** %29, align 16
  %525 = call i32 @strcasecmp(i8* %524, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %526 = icmp ne i32 %525, 0
  br i1 %526, label %540, label %527

; <label>:527:                                    ; preds = %523
  %528 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %528, label %538, label %529

; <label>:529:                                    ; preds = %527
  %530 = load i8*, i8** %32, align 8
  %531 = call i32 @conv_trick_conf(i8* %530)
  %532 = icmp ne i32 %531, 0
  %533 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %534 = load i8*, i8** %33, align 8
  br i1 %532, label %536, label %535

; <label>:535:                                    ; preds = %529
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %533, i8* %534)
  br label %.outer.backedge.2

; <label>:536:                                    ; preds = %529
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %533, i8* %534)
  %537 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:538:                                    ; preds = %527
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.2)
  %539 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:540:                                    ; preds = %523
  %541 = load i8*, i8** %30, align 16
  %542 = call i32 @strcasecmp(i8* %541, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %543 = icmp ne i32 %542, 0
  br i1 %543, label %549, label %544

; <label>:544:                                    ; preds = %540
  %545 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %545, label %547, label %546

; <label>:546:                                    ; preds = %544
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.2

; <label>:547:                                    ; preds = %544
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.2)
  %548 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:549:                                    ; preds = %540
  %550 = load i8*, i8** %31, align 16
  %551 = call i32 @strcasecmp(i8* %550, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %552 = icmp ne i32 %551, 0
  br i1 %552, label %560, label %553

; <label>:553:                                    ; preds = %549
  %554 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %554, label %558, label %555

; <label>:555:                                    ; preds = %553
  %556 = load i8*, i8** %39, align 8
  %557 = call i32 @atoi(i8* %556) #8
  store i32 %557, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.2

; <label>:558:                                    ; preds = %553
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.2)
  %559 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:560:                                    ; preds = %549
  %561 = load i8*, i8** %36, align 16
  %562 = call i32 @strcasecmp(i8* %561, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %563 = icmp ne i32 %562, 0
  br i1 %563, label %571, label %564

; <label>:564:                                    ; preds = %560
  %565 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %565, label %569, label %566

; <label>:566:                                    ; preds = %564
  %567 = load i8*, i8** %42, align 8
  %568 = call noalias i8* @strdup(i8* %567) #9, !track !108
  store i8* %568, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.2

; <label>:569:                                    ; preds = %564
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.2)
  %570 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:571:                                    ; preds = %560
  %572 = load i8*, i8** %38, align 16
  %573 = call i32 @strcasecmp(i8* %572, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %574 = icmp ne i32 %573, 0
  br i1 %574, label %621, label %575

; <label>:575:                                    ; preds = %571
  %576 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  br i1 %576, label %577, label %579

; <label>:577:                                    ; preds = %575
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.2)
  %578 = add nsw i32 0, 1
  br label %579

; <label>:579:                                    ; preds = %577, %575
  %.7.2 = phi i32 [ %578, %577 ], [ 0, %575 ]
  br label %580

; <label>:580:                                    ; preds = %580, %579
  %lsr.iv.2 = phi i64 [ %lsr.iv.next.2, %580 ], [ -1, %579 ]
  %581 = add i64 %lsr.iv.2, 1
  call void @unroll_loop(i32 46)
  %582 = shl i64 %lsr.iv.2, 3
  %uglygep.2 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %582
  %uglygep3.2 = bitcast i8* %uglygep.2 to i8**
  %scevgep.2 = getelementptr i8*, i8** %uglygep3.2, i64 111
  %583 = load i8*, i8** %scevgep.2, align 8
  %584 = icmp ne i8* %583, null
  %585 = icmp ult i64 %581, 30
  %spec.select.2 = select i1 %584, i1 %585, i1 false
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %spec.select.2, label %580, label %586

; <label>:586:                                    ; preds = %580
  %.01.lcssa.wide.2 = phi i64 [ %lsr.iv.next.2, %580 ]
  %587 = trunc i64 %.01.lcssa.wide.2 to i32
  %588 = add nsw i32 %587, %.1.lcssa.lcssa.2
  %589 = sub nsw i32 %588, 1
  %590 = icmp sgt i32 %589, 30
  br i1 %590, label %619, label %591

; <label>:591:                                    ; preds = %586
  %592 = sub nsw i32 %.1.lcssa.lcssa.2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.2, i32 %592)
  %593 = add nsw i32 %.1.lcssa.lcssa.2, -1
  %594 = add nsw i32 %587, %.1.lcssa.lcssa.2
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %595
  store i8* null, i8** %596, align 8
  %597 = icmp ne i32 %593, 0
  br i1 %597, label %.lr.ph16.2, label %.loopexit.2

.lr.ph16.2:                                       ; preds = %591
  %598 = add i32 %.1.lcssa.lcssa.2, -1
  %599 = sext i32 %598 to i64
  %600 = sext i32 %587 to i64
  %scevgep4.2 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %599
  %601 = shl i64 %599, 1
  %602 = shl i64 %600, 1
  %603 = add i64 %601, %602
  %scevgep9.2 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %603
  %604 = sub i32 1, %.1.lcssa.lcssa.2
  %605 = zext i32 %604 to i64
  br label %606

; <label>:606:                                    ; preds = %611, %.lr.ph16.2
  %lsr.iv5.2 = phi i64 [ 0, %.lr.ph16.2 ], [ %lsr.iv.next6.2, %611 ]
  call void @unroll_loop(i32 47)
  %scevgep7.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %607 = load i8*, i8** %scevgep7.2, align 8
  %608 = call i32 @strcmp(i8* %607, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %609 = icmp ne i32 %608, 0
  br i1 %609, label %611, label %610

; <label>:610:                                    ; preds = %606
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.2

; <label>:611:                                    ; preds = %606
  %scevgep8.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %612 = load i8*, i8** %scevgep8.2, align 8
  %613 = call noalias i8* @strdup(i8* %612) #9, !track !109
  %614 = shl i64 %lsr.iv5.2, 1
  %scevgep10.2 = getelementptr i32, i32* %scevgep9.2, i64 %614
  %scevgep1011.2 = bitcast i32* %scevgep10.2 to i8**
  store i8* %613, i8** %scevgep1011.2, align 8
  %lsr.iv.next6.2 = add nsw i64 %lsr.iv5.2, -1
  %tmp.2 = trunc i64 %lsr.iv.next6.2 to i32
  %615 = icmp ne i32 %604, %tmp.2
  br i1 %615, label %606, label %.loopexit.loopexit.2

.loopexit.loopexit.2:                             ; preds = %611
  br label %.loopexit.2

.loopexit.2:                                      ; preds = %.loopexit.loopexit.2, %610, %591
  %616 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %617 = icmp ne i8* %616, null
  br i1 %617, label %618, label %.outer.backedge.2

; <label>:618:                                    ; preds = %.loopexit.2
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.2

; <label>:619:                                    ; preds = %586
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.2, i32 30)
  %620 = add nsw i32 %.7.2, 1
  br label %.outer.backedge.2

; <label>:621:                                    ; preds = %571
  %622 = load i8*, i8** %41, align 16
  %623 = call i32 @strcasecmp(i8* %622, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %624 = icmp ne i32 %623, 0
  br i1 %624, label %632, label %625

; <label>:625:                                    ; preds = %621
  %626 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %626, label %630, label %627

; <label>:627:                                    ; preds = %625
  %628 = load i8*, i8** %45, align 8
  %629 = call i32 @atoi(i8* %628) #8
  store i32 %629, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.2

; <label>:630:                                    ; preds = %625
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.2)
  %631 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:632:                                    ; preds = %621
  %633 = load i8*, i8** %43, align 16
  %634 = call i32 @strcasecmp(i8* %633, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %635 = icmp ne i32 %634, 0
  br i1 %635, label %655, label %636

; <label>:636:                                    ; preds = %632
  %637 = icmp ne i32 %.1.lcssa.lcssa.2, 4
  br i1 %637, label %653, label %638

; <label>:638:                                    ; preds = %636
  %639 = load i8*, i8** %46, align 8
  %640 = load i8*, i8** %47, align 16
  %641 = load i8*, i8** %48, align 8
  %642 = call i32 @atoi(i8* %641) #8
  %643 = call i32 @conv_scoped_conf(i8* %639, i8* %640, i32 %642)
  %644 = icmp ne i32 %643, 0
  %645 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %646 = load i8*, i8** %49, align 8
  %647 = load i8*, i8** %50, align 16
  %648 = load i8*, i8** %51, align 8
  br i1 %644, label %651, label %649

; <label>:649:                                    ; preds = %638
  %650 = call i32 @atoi(i8* %648) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %645, i8* %646, i8* %647, i32 %650)
  br label %.outer.backedge.2

; <label>:651:                                    ; preds = %638
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %645, i8* %646, i8* %647, i8* %648)
  %652 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:653:                                    ; preds = %636
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.2)
  %654 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:655:                                    ; preds = %632
  %656 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.2, i8* %656)
  %657 = add nsw i32 0, 1
  br label %.outer.backedge.2

.outer.backedge.2:                                ; preds = %655, %653, %651, %649, %630, %627, %619, %618, %.loopexit.2, %569, %566, %558, %555, %547, %546, %538, %536, %535, %521, %518, %514, %509
  %.03.ph.be.2 = phi i32 [ %510, %509 ], [ %520, %518 ], [ %522, %521 ], [ 0, %514 ], [ %539, %538 ], [ %537, %536 ], [ 0, %535 ], [ %548, %547 ], [ 0, %546 ], [ %559, %558 ], [ 0, %555 ], [ %570, %569 ], [ 0, %566 ], [ %620, %619 ], [ %.7.2, %618 ], [ %.7.2, %.loopexit.2 ], [ %631, %630 ], [ 0, %627 ], [ %657, %655 ], [ %654, %653 ], [ %652, %651 ], [ 0, %649 ]
  call void @__loop_iteration_test___2()
  %658 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %659 = icmp ne i8* %658, null
  br i1 %659, label %.lr.ph.3, label %.outer._crit_edge.loopexit1

.lr.ph.3:                                         ; preds = %.outer.backedge.2
  call void @unroll_loop(i32 48)
  br label %660

; <label>:660:                                    ; preds = %694, %.lr.ph.3
  %.0712.3 = phi i32 [ %.lcssa.2, %.lr.ph.3 ], [ %661, %694 ]
  call void @unroll_loop(i32 44)
  %661 = add nsw i32 %.0712.3, 1
  %662 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %663 = icmp ne i8* %662, null
  br i1 %663, label %664, label %665

; <label>:664:                                    ; preds = %660
  store i8 0, i8* %662, align 1
  br label %665

; <label>:665:                                    ; preds = %664, %660
  %666 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %667 = icmp ne i8* %666, null
  br i1 %667, label %668, label %669

; <label>:668:                                    ; preds = %665
  store i8 0, i8* %666, align 1
  br label %669

; <label>:669:                                    ; preds = %668, %665
  %670 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %671 = icmp ne i8* %670, null
  br i1 %671, label %672, label %673

; <label>:672:                                    ; preds = %669
  store i8 0, i8* %670, align 1
  br label %673

; <label>:673:                                    ; preds = %672, %669
  %674 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %675 = icmp ne i8* %674, null
  br i1 %675, label %676, label %677

; <label>:676:                                    ; preds = %673
  store i8 0, i8* %674, align 1
  br label %677

; <label>:677:                                    ; preds = %676, %673
  %678 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %678, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %679 = load i8*, i8** %26, align 8
  %680 = icmp ne i8* %679, null
  %.14.3 = select i1 %680, i32 1, i32 0
  %681 = select i1 %680, i1 true, i1 false
  br i1 %681, label %.lr.ph6.preheader.3, label %._crit_edge.3

.lr.ph6.preheader.3:                              ; preds = %677
  br label %.lr.ph6.3

.lr.ph6.3:                                        ; preds = %.lr.ph6.3, %.lr.ph6.preheader.3
  %.15.3 = phi i32 [ %.1.3, %.lr.ph6.3 ], [ %.14.3, %.lr.ph6.preheader.3 ]
  %682 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %683 = sext i32 %.15.3 to i64
  %684 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %683
  store i8* %682, i8** %684, align 8
  call void @unroll_loop(i32 45)
  %685 = sext i32 %.15.3 to i64
  %686 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %685
  %687 = load i8*, i8** %686, align 8
  %688 = icmp ne i8* %687, null
  %689 = add nsw i32 %.15.3, 1
  %690 = icmp slt i32 %689, 30
  %.1.3 = select i1 %688, i32 %689, i32 %.15.3
  %691 = select i1 %688, i1 %690, i1 false
  br i1 %691, label %.lr.ph6.3, label %._crit_edge.loopexit.3

._crit_edge.loopexit.3:                           ; preds = %.lr.ph6.3
  %.1.lcssa.ph.3 = phi i32 [ %.1.3, %.lr.ph6.3 ]
  br label %._crit_edge.3

._crit_edge.3:                                    ; preds = %._crit_edge.loopexit.3, %677
  %.1.lcssa.3 = phi i32 [ %.14.3, %677 ], [ %.1.lcssa.ph.3, %._crit_edge.loopexit.3 ]
  %692 = load i8*, i8** %27, align 16
  %693 = icmp ne i8* %692, null
  br i1 %693, label %697, label %694

; <label>:694:                                    ; preds = %._crit_edge.3
  %695 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %696 = icmp ne i8* %695, null
  br i1 %696, label %660, label %.outer._crit_edge.loopexit.loopexit3

; <label>:697:                                    ; preds = %._crit_edge.3
  %.1.lcssa.lcssa.3 = phi i32 [ %.1.lcssa.3, %._crit_edge.3 ]
  %.lcssa.3 = phi i32 [ %661, %._crit_edge.3 ]
  %698 = load i8*, i8** %28, align 16
  %699 = call i32 @strcasecmp(i8* %698, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %700 = icmp ne i32 %699, 0
  br i1 %700, label %726, label %701

; <label>:701:                                    ; preds = %697
  %702 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  %703 = icmp sgt i32 %.1.lcssa.lcssa.3, 4
  %or.cond.3 = or i1 %702, %703
  br i1 %or.cond.3, label %724, label %704

; <label>:704:                                    ; preds = %701
  %705 = icmp sgt i32 %.1.lcssa.lcssa.3, 2
  br i1 %705, label %706, label %717

; <label>:706:                                    ; preds = %704
  %707 = load i8*, i8** %34, align 8
  %708 = call i32 @strcasecmp(i8* %707, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %709 = icmp ne i32 %708, 0
  br i1 %709, label %721, label %710

; <label>:710:                                    ; preds = %706
  %711 = icmp sge i32 %.1.lcssa.lcssa.3, 3
  br i1 %711, label %714, label %712

; <label>:712:                                    ; preds = %710
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.3)
  %713 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:714:                                    ; preds = %710
  %715 = load i8*, i8** %40, align 8
  %716 = call i32 @atoi(i8* %715) #8
  br label %717

; <label>:717:                                    ; preds = %714, %704
  %.08.3 = phi i32 [ %716, %714 ], [ 53, %704 ]
  %718 = load i8*, i8** %35, align 8
  %719 = call i32 @fwd_add(i8* %718, i32 %.08.3)
  %720 = icmp eq i32 %719, -1
  br i1 %720, label %.loopexit1.loopexit, label %.outer.backedge.3

; <label>:721:                                    ; preds = %706
  %722 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.3, i8* %722)
  %723 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:724:                                    ; preds = %701
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.3)
  %725 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:726:                                    ; preds = %697
  %727 = load i8*, i8** %29, align 16
  %728 = call i32 @strcasecmp(i8* %727, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %729 = icmp ne i32 %728, 0
  br i1 %729, label %743, label %730

; <label>:730:                                    ; preds = %726
  %731 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %731, label %741, label %732

; <label>:732:                                    ; preds = %730
  %733 = load i8*, i8** %32, align 8
  %734 = call i32 @conv_trick_conf(i8* %733)
  %735 = icmp ne i32 %734, 0
  %736 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %737 = load i8*, i8** %33, align 8
  br i1 %735, label %739, label %738

; <label>:738:                                    ; preds = %732
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %736, i8* %737)
  br label %.outer.backedge.3

; <label>:739:                                    ; preds = %732
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %736, i8* %737)
  %740 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:741:                                    ; preds = %730
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.3)
  %742 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:743:                                    ; preds = %726
  %744 = load i8*, i8** %30, align 16
  %745 = call i32 @strcasecmp(i8* %744, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %746 = icmp ne i32 %745, 0
  br i1 %746, label %752, label %747

; <label>:747:                                    ; preds = %743
  %748 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %748, label %750, label %749

; <label>:749:                                    ; preds = %747
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.3

; <label>:750:                                    ; preds = %747
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.3)
  %751 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:752:                                    ; preds = %743
  %753 = load i8*, i8** %31, align 16
  %754 = call i32 @strcasecmp(i8* %753, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %755 = icmp ne i32 %754, 0
  br i1 %755, label %763, label %756

; <label>:756:                                    ; preds = %752
  %757 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %757, label %761, label %758

; <label>:758:                                    ; preds = %756
  %759 = load i8*, i8** %39, align 8
  %760 = call i32 @atoi(i8* %759) #8
  store i32 %760, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.3

; <label>:761:                                    ; preds = %756
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.3)
  %762 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:763:                                    ; preds = %752
  %764 = load i8*, i8** %36, align 16
  %765 = call i32 @strcasecmp(i8* %764, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %766 = icmp ne i32 %765, 0
  br i1 %766, label %774, label %767

; <label>:767:                                    ; preds = %763
  %768 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %768, label %772, label %769

; <label>:769:                                    ; preds = %767
  %770 = load i8*, i8** %42, align 8
  %771 = call noalias i8* @strdup(i8* %770) #9, !track !108
  store i8* %771, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.3

; <label>:772:                                    ; preds = %767
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.3)
  %773 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:774:                                    ; preds = %763
  %775 = load i8*, i8** %38, align 16
  %776 = call i32 @strcasecmp(i8* %775, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %777 = icmp ne i32 %776, 0
  br i1 %777, label %824, label %778

; <label>:778:                                    ; preds = %774
  %779 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  br i1 %779, label %780, label %782

; <label>:780:                                    ; preds = %778
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.3)
  %781 = add nsw i32 %.03.ph.be.2, 1
  br label %782

; <label>:782:                                    ; preds = %780, %778
  %.7.3 = phi i32 [ %781, %780 ], [ %.03.ph.be.2, %778 ]
  br label %783

; <label>:783:                                    ; preds = %783, %782
  %lsr.iv.3 = phi i64 [ %lsr.iv.next.3, %783 ], [ -1, %782 ]
  %784 = add i64 %lsr.iv.3, 1
  call void @unroll_loop(i32 46)
  %785 = shl i64 %lsr.iv.3, 3
  %uglygep.3 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %785
  %uglygep3.3 = bitcast i8* %uglygep.3 to i8**
  %scevgep.3 = getelementptr i8*, i8** %uglygep3.3, i64 111
  %786 = load i8*, i8** %scevgep.3, align 8
  %787 = icmp ne i8* %786, null
  %788 = icmp ult i64 %784, 30
  %spec.select.3 = select i1 %787, i1 %788, i1 false
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %spec.select.3, label %783, label %789

; <label>:789:                                    ; preds = %783
  %.01.lcssa.wide.3 = phi i64 [ %lsr.iv.next.3, %783 ]
  %790 = trunc i64 %.01.lcssa.wide.3 to i32
  %791 = add nsw i32 %790, %.1.lcssa.lcssa.3
  %792 = sub nsw i32 %791, 1
  %793 = icmp sgt i32 %792, 30
  br i1 %793, label %822, label %794

; <label>:794:                                    ; preds = %789
  %795 = sub nsw i32 %.1.lcssa.lcssa.3, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.3, i32 %795)
  %796 = add nsw i32 %.1.lcssa.lcssa.3, -1
  %797 = add nsw i32 %790, %.1.lcssa.lcssa.3
  %798 = sext i32 %797 to i64
  %799 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %798
  store i8* null, i8** %799, align 8
  %800 = icmp ne i32 %796, 0
  br i1 %800, label %.lr.ph16.3, label %.loopexit.3

.lr.ph16.3:                                       ; preds = %794
  %801 = add i32 %.1.lcssa.lcssa.3, -1
  %802 = sext i32 %801 to i64
  %803 = sext i32 %790 to i64
  %scevgep4.3 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %802
  %804 = shl i64 %802, 1
  %805 = shl i64 %803, 1
  %806 = add i64 %804, %805
  %scevgep9.3 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %806
  %807 = sub i32 1, %.1.lcssa.lcssa.3
  %808 = zext i32 %807 to i64
  br label %809

; <label>:809:                                    ; preds = %814, %.lr.ph16.3
  %lsr.iv5.3 = phi i64 [ 0, %.lr.ph16.3 ], [ %lsr.iv.next6.3, %814 ]
  call void @unroll_loop(i32 47)
  %scevgep7.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %810 = load i8*, i8** %scevgep7.3, align 8
  %811 = call i32 @strcmp(i8* %810, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %812 = icmp ne i32 %811, 0
  br i1 %812, label %814, label %813

; <label>:813:                                    ; preds = %809
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.3

; <label>:814:                                    ; preds = %809
  %scevgep8.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %815 = load i8*, i8** %scevgep8.3, align 8
  %816 = call noalias i8* @strdup(i8* %815) #9, !track !109
  %817 = shl i64 %lsr.iv5.3, 1
  %scevgep10.3 = getelementptr i32, i32* %scevgep9.3, i64 %817
  %scevgep1011.3 = bitcast i32* %scevgep10.3 to i8**
  store i8* %816, i8** %scevgep1011.3, align 8
  %lsr.iv.next6.3 = add nsw i64 %lsr.iv5.3, -1
  %tmp.3 = trunc i64 %lsr.iv.next6.3 to i32
  %818 = icmp ne i32 %807, %tmp.3
  br i1 %818, label %809, label %.loopexit.loopexit.3

.loopexit.loopexit.3:                             ; preds = %814
  br label %.loopexit.3

.loopexit.3:                                      ; preds = %.loopexit.loopexit.3, %813, %794
  %819 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %820 = icmp ne i8* %819, null
  br i1 %820, label %821, label %.outer.backedge.3

; <label>:821:                                    ; preds = %.loopexit.3
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.3

; <label>:822:                                    ; preds = %789
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.3, i32 30)
  %823 = add nsw i32 %.7.3, 1
  br label %.outer.backedge.3

; <label>:824:                                    ; preds = %774
  %825 = load i8*, i8** %41, align 16
  %826 = call i32 @strcasecmp(i8* %825, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %827 = icmp ne i32 %826, 0
  br i1 %827, label %835, label %828

; <label>:828:                                    ; preds = %824
  %829 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %829, label %833, label %830

; <label>:830:                                    ; preds = %828
  %831 = load i8*, i8** %45, align 8
  %832 = call i32 @atoi(i8* %831) #8
  store i32 %832, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.3

; <label>:833:                                    ; preds = %828
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.3)
  %834 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:835:                                    ; preds = %824
  %836 = load i8*, i8** %43, align 16
  %837 = call i32 @strcasecmp(i8* %836, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %838 = icmp ne i32 %837, 0
  br i1 %838, label %858, label %839

; <label>:839:                                    ; preds = %835
  %840 = icmp ne i32 %.1.lcssa.lcssa.3, 4
  br i1 %840, label %856, label %841

; <label>:841:                                    ; preds = %839
  %842 = load i8*, i8** %46, align 8
  %843 = load i8*, i8** %47, align 16
  %844 = load i8*, i8** %48, align 8
  %845 = call i32 @atoi(i8* %844) #8
  %846 = call i32 @conv_scoped_conf(i8* %842, i8* %843, i32 %845)
  %847 = icmp ne i32 %846, 0
  %848 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %849 = load i8*, i8** %49, align 8
  %850 = load i8*, i8** %50, align 16
  %851 = load i8*, i8** %51, align 8
  br i1 %847, label %854, label %852

; <label>:852:                                    ; preds = %841
  %853 = call i32 @atoi(i8* %851) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %848, i8* %849, i8* %850, i32 %853)
  br label %.outer.backedge.3

; <label>:854:                                    ; preds = %841
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %848, i8* %849, i8* %850, i8* %851)
  %855 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:856:                                    ; preds = %839
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.3)
  %857 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:858:                                    ; preds = %835
  %859 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.3, i8* %859)
  %860 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

.outer.backedge.3:                                ; preds = %858, %856, %854, %852, %833, %830, %822, %821, %.loopexit.3, %772, %769, %761, %758, %750, %749, %741, %739, %738, %724, %721, %717, %712
  %.03.ph.be.3 = phi i32 [ %713, %712 ], [ %723, %721 ], [ %725, %724 ], [ %.03.ph.be.2, %717 ], [ %742, %741 ], [ %740, %739 ], [ %.03.ph.be.2, %738 ], [ %751, %750 ], [ %.03.ph.be.2, %749 ], [ %762, %761 ], [ %.03.ph.be.2, %758 ], [ %773, %772 ], [ %.03.ph.be.2, %769 ], [ %823, %822 ], [ %.7.3, %821 ], [ %.7.3, %.loopexit.3 ], [ %834, %833 ], [ %.03.ph.be.2, %830 ], [ %860, %858 ], [ %857, %856 ], [ %855, %854 ], [ %.03.ph.be.2, %852 ]
  call void @__loop_iteration_test___2()
  %861 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %862 = icmp ne i8* %861, null
  br i1 %862, label %.lr.ph.4, label %.outer._crit_edge.loopexit1

.lr.ph.4:                                         ; preds = %.outer.backedge.3
  call void @unroll_loop(i32 48)
  br label %863

; <label>:863:                                    ; preds = %897, %.lr.ph.4
  %.0712.4 = phi i32 [ %.lcssa.3, %.lr.ph.4 ], [ %864, %897 ]
  call void @unroll_loop(i32 44)
  %864 = add nsw i32 %.0712.4, 1
  %865 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %866 = icmp ne i8* %865, null
  br i1 %866, label %867, label %868

; <label>:867:                                    ; preds = %863
  store i8 0, i8* %865, align 1
  br label %868

; <label>:868:                                    ; preds = %867, %863
  %869 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %870 = icmp ne i8* %869, null
  br i1 %870, label %871, label %872

; <label>:871:                                    ; preds = %868
  store i8 0, i8* %869, align 1
  br label %872

; <label>:872:                                    ; preds = %871, %868
  %873 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %874 = icmp ne i8* %873, null
  br i1 %874, label %875, label %876

; <label>:875:                                    ; preds = %872
  store i8 0, i8* %873, align 1
  br label %876

; <label>:876:                                    ; preds = %875, %872
  %877 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %878 = icmp ne i8* %877, null
  br i1 %878, label %879, label %880

; <label>:879:                                    ; preds = %876
  store i8 0, i8* %877, align 1
  br label %880

; <label>:880:                                    ; preds = %879, %876
  %881 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %881, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %882 = load i8*, i8** %26, align 8
  %883 = icmp ne i8* %882, null
  %.14.4 = select i1 %883, i32 1, i32 0
  %884 = select i1 %883, i1 true, i1 false
  br i1 %884, label %.lr.ph6.preheader.4, label %._crit_edge.4

.lr.ph6.preheader.4:                              ; preds = %880
  br label %.lr.ph6.4

.lr.ph6.4:                                        ; preds = %.lr.ph6.4, %.lr.ph6.preheader.4
  %.15.4 = phi i32 [ %.1.4, %.lr.ph6.4 ], [ %.14.4, %.lr.ph6.preheader.4 ]
  %885 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %886 = sext i32 %.15.4 to i64
  %887 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %886
  store i8* %885, i8** %887, align 8
  call void @unroll_loop(i32 45)
  %888 = sext i32 %.15.4 to i64
  %889 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %888
  %890 = load i8*, i8** %889, align 8
  %891 = icmp ne i8* %890, null
  %892 = add nsw i32 %.15.4, 1
  %893 = icmp slt i32 %892, 30
  %.1.4 = select i1 %891, i32 %892, i32 %.15.4
  %894 = select i1 %891, i1 %893, i1 false
  br i1 %894, label %.lr.ph6.4, label %._crit_edge.loopexit.4

._crit_edge.loopexit.4:                           ; preds = %.lr.ph6.4
  %.1.lcssa.ph.4 = phi i32 [ %.1.4, %.lr.ph6.4 ]
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %._crit_edge.loopexit.4, %880
  %.1.lcssa.4 = phi i32 [ %.14.4, %880 ], [ %.1.lcssa.ph.4, %._crit_edge.loopexit.4 ]
  %895 = load i8*, i8** %27, align 16
  %896 = icmp ne i8* %895, null
  br i1 %896, label %900, label %897

; <label>:897:                                    ; preds = %._crit_edge.4
  %898 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %899 = icmp ne i8* %898, null
  br i1 %899, label %863, label %.outer._crit_edge.loopexit.loopexit4

; <label>:900:                                    ; preds = %._crit_edge.4
  %.1.lcssa.lcssa.4 = phi i32 [ %.1.lcssa.4, %._crit_edge.4 ]
  %.lcssa.4 = phi i32 [ %864, %._crit_edge.4 ]
  %901 = load i8*, i8** %28, align 16
  %902 = call i32 @strcasecmp(i8* %901, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %903 = icmp ne i32 %902, 0
  br i1 %903, label %929, label %904

; <label>:904:                                    ; preds = %900
  %905 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  %906 = icmp sgt i32 %.1.lcssa.lcssa.4, 4
  %or.cond.4 = or i1 %905, %906
  br i1 %or.cond.4, label %927, label %907

; <label>:907:                                    ; preds = %904
  %908 = icmp sgt i32 %.1.lcssa.lcssa.4, 2
  br i1 %908, label %909, label %920

; <label>:909:                                    ; preds = %907
  %910 = load i8*, i8** %34, align 8
  %911 = call i32 @strcasecmp(i8* %910, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %912 = icmp ne i32 %911, 0
  br i1 %912, label %924, label %913

; <label>:913:                                    ; preds = %909
  %914 = icmp sge i32 %.1.lcssa.lcssa.4, 3
  br i1 %914, label %917, label %915

; <label>:915:                                    ; preds = %913
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.4)
  %916 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:917:                                    ; preds = %913
  %918 = load i8*, i8** %40, align 8
  %919 = call i32 @atoi(i8* %918) #8
  br label %920

; <label>:920:                                    ; preds = %917, %907
  %.08.4 = phi i32 [ %919, %917 ], [ 53, %907 ]
  %921 = load i8*, i8** %35, align 8
  %922 = call i32 @fwd_add(i8* %921, i32 %.08.4)
  %923 = icmp eq i32 %922, -1
  br i1 %923, label %.loopexit1.loopexit, label %.outer.backedge.4

; <label>:924:                                    ; preds = %909
  %925 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.4, i8* %925)
  %926 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:927:                                    ; preds = %904
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.4)
  %928 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:929:                                    ; preds = %900
  %930 = load i8*, i8** %29, align 16
  %931 = call i32 @strcasecmp(i8* %930, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %932 = icmp ne i32 %931, 0
  br i1 %932, label %946, label %933

; <label>:933:                                    ; preds = %929
  %934 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %934, label %944, label %935

; <label>:935:                                    ; preds = %933
  %936 = load i8*, i8** %32, align 8
  %937 = call i32 @conv_trick_conf(i8* %936)
  %938 = icmp ne i32 %937, 0
  %939 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %940 = load i8*, i8** %33, align 8
  br i1 %938, label %942, label %941

; <label>:941:                                    ; preds = %935
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %939, i8* %940)
  br label %.outer.backedge.4

; <label>:942:                                    ; preds = %935
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %939, i8* %940)
  %943 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:944:                                    ; preds = %933
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.4)
  %945 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:946:                                    ; preds = %929
  %947 = load i8*, i8** %30, align 16
  %948 = call i32 @strcasecmp(i8* %947, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %949 = icmp ne i32 %948, 0
  br i1 %949, label %955, label %950

; <label>:950:                                    ; preds = %946
  %951 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %951, label %953, label %952

; <label>:952:                                    ; preds = %950
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.4

; <label>:953:                                    ; preds = %950
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.4)
  %954 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:955:                                    ; preds = %946
  %956 = load i8*, i8** %31, align 16
  %957 = call i32 @strcasecmp(i8* %956, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %958 = icmp ne i32 %957, 0
  br i1 %958, label %966, label %959

; <label>:959:                                    ; preds = %955
  %960 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %960, label %964, label %961

; <label>:961:                                    ; preds = %959
  %962 = load i8*, i8** %39, align 8
  %963 = call i32 @atoi(i8* %962) #8
  store i32 %963, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.4

; <label>:964:                                    ; preds = %959
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.4)
  %965 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:966:                                    ; preds = %955
  %967 = load i8*, i8** %36, align 16
  %968 = call i32 @strcasecmp(i8* %967, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %969 = icmp ne i32 %968, 0
  br i1 %969, label %977, label %970

; <label>:970:                                    ; preds = %966
  %971 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %971, label %975, label %972

; <label>:972:                                    ; preds = %970
  %973 = load i8*, i8** %42, align 8
  %974 = call noalias i8* @strdup(i8* %973) #9, !track !108
  store i8* %974, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.4

; <label>:975:                                    ; preds = %970
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.4)
  %976 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:977:                                    ; preds = %966
  %978 = load i8*, i8** %38, align 16
  %979 = call i32 @strcasecmp(i8* %978, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %980 = icmp ne i32 %979, 0
  br i1 %980, label %1027, label %981

; <label>:981:                                    ; preds = %977
  %982 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  br i1 %982, label %983, label %985

; <label>:983:                                    ; preds = %981
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.4)
  %984 = add nsw i32 %.03.ph.be.3, 1
  br label %985

; <label>:985:                                    ; preds = %983, %981
  %.7.4 = phi i32 [ %984, %983 ], [ %.03.ph.be.3, %981 ]
  br label %986

; <label>:986:                                    ; preds = %986, %985
  %lsr.iv.4 = phi i64 [ %lsr.iv.next.4, %986 ], [ -1, %985 ]
  %987 = add i64 %lsr.iv.4, 1
  call void @unroll_loop(i32 46)
  %988 = shl i64 %lsr.iv.4, 3
  %uglygep.4 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %988
  %uglygep3.4 = bitcast i8* %uglygep.4 to i8**
  %scevgep.4 = getelementptr i8*, i8** %uglygep3.4, i64 111
  %989 = load i8*, i8** %scevgep.4, align 8
  %990 = icmp ne i8* %989, null
  %991 = icmp ult i64 %987, 30
  %spec.select.4 = select i1 %990, i1 %991, i1 false
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %spec.select.4, label %986, label %992

; <label>:992:                                    ; preds = %986
  %.01.lcssa.wide.4 = phi i64 [ %lsr.iv.next.4, %986 ]
  %993 = trunc i64 %.01.lcssa.wide.4 to i32
  %994 = add nsw i32 %993, %.1.lcssa.lcssa.4
  %995 = sub nsw i32 %994, 1
  %996 = icmp sgt i32 %995, 30
  br i1 %996, label %1025, label %997

; <label>:997:                                    ; preds = %992
  %998 = sub nsw i32 %.1.lcssa.lcssa.4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.4, i32 %998)
  %999 = add nsw i32 %.1.lcssa.lcssa.4, -1
  %1000 = add nsw i32 %993, %.1.lcssa.lcssa.4
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1001
  store i8* null, i8** %1002, align 8
  %1003 = icmp ne i32 %999, 0
  br i1 %1003, label %.lr.ph16.4, label %.loopexit.4

.lr.ph16.4:                                       ; preds = %997
  %1004 = add i32 %.1.lcssa.lcssa.4, -1
  %1005 = sext i32 %1004 to i64
  %1006 = sext i32 %993 to i64
  %scevgep4.4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1005
  %1007 = shl i64 %1005, 1
  %1008 = shl i64 %1006, 1
  %1009 = add i64 %1007, %1008
  %scevgep9.4 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1009
  %1010 = sub i32 1, %.1.lcssa.lcssa.4
  %1011 = zext i32 %1010 to i64
  br label %1012

; <label>:1012:                                   ; preds = %1017, %.lr.ph16.4
  %lsr.iv5.4 = phi i64 [ 0, %.lr.ph16.4 ], [ %lsr.iv.next6.4, %1017 ]
  call void @unroll_loop(i32 47)
  %scevgep7.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1013 = load i8*, i8** %scevgep7.4, align 8
  %1014 = call i32 @strcmp(i8* %1013, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1015 = icmp ne i32 %1014, 0
  br i1 %1015, label %1017, label %1016

; <label>:1016:                                   ; preds = %1012
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.4

; <label>:1017:                                   ; preds = %1012
  %scevgep8.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1018 = load i8*, i8** %scevgep8.4, align 8
  %1019 = call noalias i8* @strdup(i8* %1018) #9, !track !109
  %1020 = shl i64 %lsr.iv5.4, 1
  %scevgep10.4 = getelementptr i32, i32* %scevgep9.4, i64 %1020
  %scevgep1011.4 = bitcast i32* %scevgep10.4 to i8**
  store i8* %1019, i8** %scevgep1011.4, align 8
  %lsr.iv.next6.4 = add nsw i64 %lsr.iv5.4, -1
  %tmp.4 = trunc i64 %lsr.iv.next6.4 to i32
  %1021 = icmp ne i32 %1010, %tmp.4
  br i1 %1021, label %1012, label %.loopexit.loopexit.4

.loopexit.loopexit.4:                             ; preds = %1017
  br label %.loopexit.4

.loopexit.4:                                      ; preds = %.loopexit.loopexit.4, %1016, %997
  %1022 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1023 = icmp ne i8* %1022, null
  br i1 %1023, label %1024, label %.outer.backedge.4

; <label>:1024:                                   ; preds = %.loopexit.4
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.4

; <label>:1025:                                   ; preds = %992
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.4, i32 30)
  %1026 = add nsw i32 %.7.4, 1
  br label %.outer.backedge.4

; <label>:1027:                                   ; preds = %977
  %1028 = load i8*, i8** %41, align 16
  %1029 = call i32 @strcasecmp(i8* %1028, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1030 = icmp ne i32 %1029, 0
  br i1 %1030, label %1038, label %1031

; <label>:1031:                                   ; preds = %1027
  %1032 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %1032, label %1036, label %1033

; <label>:1033:                                   ; preds = %1031
  %1034 = load i8*, i8** %45, align 8
  %1035 = call i32 @atoi(i8* %1034) #8
  store i32 %1035, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.4

; <label>:1036:                                   ; preds = %1031
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.4)
  %1037 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1038:                                   ; preds = %1027
  %1039 = load i8*, i8** %43, align 16
  %1040 = call i32 @strcasecmp(i8* %1039, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1041 = icmp ne i32 %1040, 0
  br i1 %1041, label %1061, label %1042

; <label>:1042:                                   ; preds = %1038
  %1043 = icmp ne i32 %.1.lcssa.lcssa.4, 4
  br i1 %1043, label %1059, label %1044

; <label>:1044:                                   ; preds = %1042
  %1045 = load i8*, i8** %46, align 8
  %1046 = load i8*, i8** %47, align 16
  %1047 = load i8*, i8** %48, align 8
  %1048 = call i32 @atoi(i8* %1047) #8
  %1049 = call i32 @conv_scoped_conf(i8* %1045, i8* %1046, i32 %1048)
  %1050 = icmp ne i32 %1049, 0
  %1051 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1052 = load i8*, i8** %49, align 8
  %1053 = load i8*, i8** %50, align 16
  %1054 = load i8*, i8** %51, align 8
  br i1 %1050, label %1057, label %1055

; <label>:1055:                                   ; preds = %1044
  %1056 = call i32 @atoi(i8* %1054) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1051, i8* %1052, i8* %1053, i32 %1056)
  br label %.outer.backedge.4

; <label>:1057:                                   ; preds = %1044
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1051, i8* %1052, i8* %1053, i8* %1054)
  %1058 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1059:                                   ; preds = %1042
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.4)
  %1060 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1061:                                   ; preds = %1038
  %1062 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.4, i8* %1062)
  %1063 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

.outer.backedge.4:                                ; preds = %1061, %1059, %1057, %1055, %1036, %1033, %1025, %1024, %.loopexit.4, %975, %972, %964, %961, %953, %952, %944, %942, %941, %927, %924, %920, %915
  %.03.ph.be.4 = phi i32 [ %916, %915 ], [ %926, %924 ], [ %928, %927 ], [ %.03.ph.be.3, %920 ], [ %945, %944 ], [ %943, %942 ], [ %.03.ph.be.3, %941 ], [ %954, %953 ], [ %.03.ph.be.3, %952 ], [ %965, %964 ], [ %.03.ph.be.3, %961 ], [ %976, %975 ], [ %.03.ph.be.3, %972 ], [ %1026, %1025 ], [ %.7.4, %1024 ], [ %.7.4, %.loopexit.4 ], [ %1037, %1036 ], [ %.03.ph.be.3, %1033 ], [ %1063, %1061 ], [ %1060, %1059 ], [ %1058, %1057 ], [ %.03.ph.be.3, %1055 ]
  call void @__loop_iteration_test___2()
  %1064 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1065 = icmp ne i8* %1064, null
  br i1 %1065, label %.lr.ph.5, label %.outer._crit_edge.loopexit1

.lr.ph.5:                                         ; preds = %.outer.backedge.4
  call void @unroll_loop(i32 48)
  br label %1066

; <label>:1066:                                   ; preds = %1100, %.lr.ph.5
  %.0712.5 = phi i32 [ %.lcssa.4, %.lr.ph.5 ], [ %1067, %1100 ]
  call void @unroll_loop(i32 44)
  %1067 = add nsw i32 %.0712.5, 1
  %1068 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1069 = icmp ne i8* %1068, null
  br i1 %1069, label %1070, label %1071

; <label>:1070:                                   ; preds = %1066
  store i8 0, i8* %1068, align 1
  br label %1071

; <label>:1071:                                   ; preds = %1070, %1066
  %1072 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1073 = icmp ne i8* %1072, null
  br i1 %1073, label %1074, label %1075

; <label>:1074:                                   ; preds = %1071
  store i8 0, i8* %1072, align 1
  br label %1075

; <label>:1075:                                   ; preds = %1074, %1071
  %1076 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1077 = icmp ne i8* %1076, null
  br i1 %1077, label %1078, label %1079

; <label>:1078:                                   ; preds = %1075
  store i8 0, i8* %1076, align 1
  br label %1079

; <label>:1079:                                   ; preds = %1078, %1075
  %1080 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1081 = icmp ne i8* %1080, null
  br i1 %1081, label %1082, label %1083

; <label>:1082:                                   ; preds = %1079
  store i8 0, i8* %1080, align 1
  br label %1083

; <label>:1083:                                   ; preds = %1082, %1079
  %1084 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1084, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1085 = load i8*, i8** %26, align 8
  %1086 = icmp ne i8* %1085, null
  %.14.5 = select i1 %1086, i32 1, i32 0
  %1087 = select i1 %1086, i1 true, i1 false
  br i1 %1087, label %.lr.ph6.preheader.5, label %._crit_edge.5

.lr.ph6.preheader.5:                              ; preds = %1083
  br label %.lr.ph6.5

.lr.ph6.5:                                        ; preds = %.lr.ph6.5, %.lr.ph6.preheader.5
  %.15.5 = phi i32 [ %.1.5, %.lr.ph6.5 ], [ %.14.5, %.lr.ph6.preheader.5 ]
  %1088 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1089 = sext i32 %.15.5 to i64
  %1090 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1089
  store i8* %1088, i8** %1090, align 8
  call void @unroll_loop(i32 45)
  %1091 = sext i32 %.15.5 to i64
  %1092 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1091
  %1093 = load i8*, i8** %1092, align 8
  %1094 = icmp ne i8* %1093, null
  %1095 = add nsw i32 %.15.5, 1
  %1096 = icmp slt i32 %1095, 30
  %.1.5 = select i1 %1094, i32 %1095, i32 %.15.5
  %1097 = select i1 %1094, i1 %1096, i1 false
  br i1 %1097, label %.lr.ph6.5, label %._crit_edge.loopexit.5

._crit_edge.loopexit.5:                           ; preds = %.lr.ph6.5
  %.1.lcssa.ph.5 = phi i32 [ %.1.5, %.lr.ph6.5 ]
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.loopexit.5, %1083
  %.1.lcssa.5 = phi i32 [ %.14.5, %1083 ], [ %.1.lcssa.ph.5, %._crit_edge.loopexit.5 ]
  %1098 = load i8*, i8** %27, align 16
  %1099 = icmp ne i8* %1098, null
  br i1 %1099, label %1103, label %1100

; <label>:1100:                                   ; preds = %._crit_edge.5
  %1101 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1102 = icmp ne i8* %1101, null
  br i1 %1102, label %1066, label %.outer._crit_edge.loopexit.loopexit5

; <label>:1103:                                   ; preds = %._crit_edge.5
  %.1.lcssa.lcssa.5 = phi i32 [ %.1.lcssa.5, %._crit_edge.5 ]
  %.lcssa.5 = phi i32 [ %1067, %._crit_edge.5 ]
  %1104 = load i8*, i8** %28, align 16
  %1105 = call i32 @strcasecmp(i8* %1104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1106 = icmp ne i32 %1105, 0
  br i1 %1106, label %1132, label %1107

; <label>:1107:                                   ; preds = %1103
  %1108 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  %1109 = icmp sgt i32 %.1.lcssa.lcssa.5, 4
  %or.cond.5 = or i1 %1108, %1109
  br i1 %or.cond.5, label %1130, label %1110

; <label>:1110:                                   ; preds = %1107
  %1111 = icmp sgt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1111, label %1112, label %1123

; <label>:1112:                                   ; preds = %1110
  %1113 = load i8*, i8** %34, align 8
  %1114 = call i32 @strcasecmp(i8* %1113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1115 = icmp ne i32 %1114, 0
  br i1 %1115, label %1127, label %1116

; <label>:1116:                                   ; preds = %1112
  %1117 = icmp sge i32 %.1.lcssa.lcssa.5, 3
  br i1 %1117, label %1120, label %1118

; <label>:1118:                                   ; preds = %1116
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.5)
  %1119 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1120:                                   ; preds = %1116
  %1121 = load i8*, i8** %40, align 8
  %1122 = call i32 @atoi(i8* %1121) #8
  br label %1123

; <label>:1123:                                   ; preds = %1120, %1110
  %.08.5 = phi i32 [ %1122, %1120 ], [ 53, %1110 ]
  %1124 = load i8*, i8** %35, align 8
  %1125 = call i32 @fwd_add(i8* %1124, i32 %.08.5)
  %1126 = icmp eq i32 %1125, -1
  br i1 %1126, label %.loopexit1.loopexit, label %.outer.backedge.5

; <label>:1127:                                   ; preds = %1112
  %1128 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.5, i8* %1128)
  %1129 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1130:                                   ; preds = %1107
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.5)
  %1131 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1132:                                   ; preds = %1103
  %1133 = load i8*, i8** %29, align 16
  %1134 = call i32 @strcasecmp(i8* %1133, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1135 = icmp ne i32 %1134, 0
  br i1 %1135, label %1149, label %1136

; <label>:1136:                                   ; preds = %1132
  %1137 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1137, label %1147, label %1138

; <label>:1138:                                   ; preds = %1136
  %1139 = load i8*, i8** %32, align 8
  %1140 = call i32 @conv_trick_conf(i8* %1139)
  %1141 = icmp ne i32 %1140, 0
  %1142 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1143 = load i8*, i8** %33, align 8
  br i1 %1141, label %1145, label %1144

; <label>:1144:                                   ; preds = %1138
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1142, i8* %1143)
  br label %.outer.backedge.5

; <label>:1145:                                   ; preds = %1138
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1142, i8* %1143)
  %1146 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1147:                                   ; preds = %1136
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.5)
  %1148 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1149:                                   ; preds = %1132
  %1150 = load i8*, i8** %30, align 16
  %1151 = call i32 @strcasecmp(i8* %1150, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1152 = icmp ne i32 %1151, 0
  br i1 %1152, label %1158, label %1153

; <label>:1153:                                   ; preds = %1149
  %1154 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1154, label %1156, label %1155

; <label>:1155:                                   ; preds = %1153
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.5

; <label>:1156:                                   ; preds = %1153
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.5)
  %1157 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1158:                                   ; preds = %1149
  %1159 = load i8*, i8** %31, align 16
  %1160 = call i32 @strcasecmp(i8* %1159, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1161 = icmp ne i32 %1160, 0
  br i1 %1161, label %1169, label %1162

; <label>:1162:                                   ; preds = %1158
  %1163 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1163, label %1167, label %1164

; <label>:1164:                                   ; preds = %1162
  %1165 = load i8*, i8** %39, align 8
  %1166 = call i32 @atoi(i8* %1165) #8
  store i32 %1166, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.5

; <label>:1167:                                   ; preds = %1162
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.5)
  %1168 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1169:                                   ; preds = %1158
  %1170 = load i8*, i8** %36, align 16
  %1171 = call i32 @strcasecmp(i8* %1170, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1172 = icmp ne i32 %1171, 0
  br i1 %1172, label %1180, label %1173

; <label>:1173:                                   ; preds = %1169
  %1174 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1174, label %1178, label %1175

; <label>:1175:                                   ; preds = %1173
  %1176 = load i8*, i8** %42, align 8
  %1177 = call noalias i8* @strdup(i8* %1176) #9, !track !108
  store i8* %1177, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.5

; <label>:1178:                                   ; preds = %1173
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.5)
  %1179 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1180:                                   ; preds = %1169
  %1181 = load i8*, i8** %38, align 16
  %1182 = call i32 @strcasecmp(i8* %1181, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1183 = icmp ne i32 %1182, 0
  br i1 %1183, label %1230, label %1184

; <label>:1184:                                   ; preds = %1180
  %1185 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1185, label %1186, label %1188

; <label>:1186:                                   ; preds = %1184
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.5)
  %1187 = add nsw i32 %.03.ph.be.4, 1
  br label %1188

; <label>:1188:                                   ; preds = %1186, %1184
  %.7.5 = phi i32 [ %1187, %1186 ], [ %.03.ph.be.4, %1184 ]
  br label %1189

; <label>:1189:                                   ; preds = %1189, %1188
  %lsr.iv.5 = phi i64 [ %lsr.iv.next.5, %1189 ], [ -1, %1188 ]
  %1190 = add i64 %lsr.iv.5, 1
  call void @unroll_loop(i32 46)
  %1191 = shl i64 %lsr.iv.5, 3
  %uglygep.5 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1191
  %uglygep3.5 = bitcast i8* %uglygep.5 to i8**
  %scevgep.5 = getelementptr i8*, i8** %uglygep3.5, i64 111
  %1192 = load i8*, i8** %scevgep.5, align 8
  %1193 = icmp ne i8* %1192, null
  %1194 = icmp ult i64 %1190, 30
  %spec.select.5 = select i1 %1193, i1 %1194, i1 false
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %spec.select.5, label %1189, label %1195

; <label>:1195:                                   ; preds = %1189
  %.01.lcssa.wide.5 = phi i64 [ %lsr.iv.next.5, %1189 ]
  %1196 = trunc i64 %.01.lcssa.wide.5 to i32
  %1197 = add nsw i32 %1196, %.1.lcssa.lcssa.5
  %1198 = sub nsw i32 %1197, 1
  %1199 = icmp sgt i32 %1198, 30
  br i1 %1199, label %1228, label %1200

; <label>:1200:                                   ; preds = %1195
  %1201 = sub nsw i32 %.1.lcssa.lcssa.5, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.5, i32 %1201)
  %1202 = add nsw i32 %.1.lcssa.lcssa.5, -1
  %1203 = add nsw i32 %1196, %.1.lcssa.lcssa.5
  %1204 = sext i32 %1203 to i64
  %1205 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1204
  store i8* null, i8** %1205, align 8
  %1206 = icmp ne i32 %1202, 0
  br i1 %1206, label %.lr.ph16.5, label %.loopexit.5

.lr.ph16.5:                                       ; preds = %1200
  %1207 = add i32 %.1.lcssa.lcssa.5, -1
  %1208 = sext i32 %1207 to i64
  %1209 = sext i32 %1196 to i64
  %scevgep4.5 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1208
  %1210 = shl i64 %1208, 1
  %1211 = shl i64 %1209, 1
  %1212 = add i64 %1210, %1211
  %scevgep9.5 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1212
  %1213 = sub i32 1, %.1.lcssa.lcssa.5
  %1214 = zext i32 %1213 to i64
  br label %1215

; <label>:1215:                                   ; preds = %1220, %.lr.ph16.5
  %lsr.iv5.5 = phi i64 [ 0, %.lr.ph16.5 ], [ %lsr.iv.next6.5, %1220 ]
  call void @unroll_loop(i32 47)
  %scevgep7.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1216 = load i8*, i8** %scevgep7.5, align 8
  %1217 = call i32 @strcmp(i8* %1216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1218 = icmp ne i32 %1217, 0
  br i1 %1218, label %1220, label %1219

; <label>:1219:                                   ; preds = %1215
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.5

; <label>:1220:                                   ; preds = %1215
  %scevgep8.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1221 = load i8*, i8** %scevgep8.5, align 8
  %1222 = call noalias i8* @strdup(i8* %1221) #9, !track !109
  %1223 = shl i64 %lsr.iv5.5, 1
  %scevgep10.5 = getelementptr i32, i32* %scevgep9.5, i64 %1223
  %scevgep1011.5 = bitcast i32* %scevgep10.5 to i8**
  store i8* %1222, i8** %scevgep1011.5, align 8
  %lsr.iv.next6.5 = add nsw i64 %lsr.iv5.5, -1
  %tmp.5 = trunc i64 %lsr.iv.next6.5 to i32
  %1224 = icmp ne i32 %1213, %tmp.5
  br i1 %1224, label %1215, label %.loopexit.loopexit.5

.loopexit.loopexit.5:                             ; preds = %1220
  br label %.loopexit.5

.loopexit.5:                                      ; preds = %.loopexit.loopexit.5, %1219, %1200
  %1225 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1226 = icmp ne i8* %1225, null
  br i1 %1226, label %1227, label %.outer.backedge.5

; <label>:1227:                                   ; preds = %.loopexit.5
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.5

; <label>:1228:                                   ; preds = %1195
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.5, i32 30)
  %1229 = add nsw i32 %.7.5, 1
  br label %.outer.backedge.5

; <label>:1230:                                   ; preds = %1180
  %1231 = load i8*, i8** %41, align 16
  %1232 = call i32 @strcasecmp(i8* %1231, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1233 = icmp ne i32 %1232, 0
  br i1 %1233, label %1241, label %1234

; <label>:1234:                                   ; preds = %1230
  %1235 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1235, label %1239, label %1236

; <label>:1236:                                   ; preds = %1234
  %1237 = load i8*, i8** %45, align 8
  %1238 = call i32 @atoi(i8* %1237) #8
  store i32 %1238, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.5

; <label>:1239:                                   ; preds = %1234
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.5)
  %1240 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1241:                                   ; preds = %1230
  %1242 = load i8*, i8** %43, align 16
  %1243 = call i32 @strcasecmp(i8* %1242, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1244 = icmp ne i32 %1243, 0
  br i1 %1244, label %1264, label %1245

; <label>:1245:                                   ; preds = %1241
  %1246 = icmp ne i32 %.1.lcssa.lcssa.5, 4
  br i1 %1246, label %1262, label %1247

; <label>:1247:                                   ; preds = %1245
  %1248 = load i8*, i8** %46, align 8
  %1249 = load i8*, i8** %47, align 16
  %1250 = load i8*, i8** %48, align 8
  %1251 = call i32 @atoi(i8* %1250) #8
  %1252 = call i32 @conv_scoped_conf(i8* %1248, i8* %1249, i32 %1251)
  %1253 = icmp ne i32 %1252, 0
  %1254 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1255 = load i8*, i8** %49, align 8
  %1256 = load i8*, i8** %50, align 16
  %1257 = load i8*, i8** %51, align 8
  br i1 %1253, label %1260, label %1258

; <label>:1258:                                   ; preds = %1247
  %1259 = call i32 @atoi(i8* %1257) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1254, i8* %1255, i8* %1256, i32 %1259)
  br label %.outer.backedge.5

; <label>:1260:                                   ; preds = %1247
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1254, i8* %1255, i8* %1256, i8* %1257)
  %1261 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1262:                                   ; preds = %1245
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.5)
  %1263 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1264:                                   ; preds = %1241
  %1265 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.5, i8* %1265)
  %1266 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

.outer.backedge.5:                                ; preds = %1264, %1262, %1260, %1258, %1239, %1236, %1228, %1227, %.loopexit.5, %1178, %1175, %1167, %1164, %1156, %1155, %1147, %1145, %1144, %1130, %1127, %1123, %1118
  %.03.ph.be.5 = phi i32 [ %1119, %1118 ], [ %1129, %1127 ], [ %1131, %1130 ], [ %.03.ph.be.4, %1123 ], [ %1148, %1147 ], [ %1146, %1145 ], [ %.03.ph.be.4, %1144 ], [ %1157, %1156 ], [ %.03.ph.be.4, %1155 ], [ %1168, %1167 ], [ %.03.ph.be.4, %1164 ], [ %1179, %1178 ], [ %.03.ph.be.4, %1175 ], [ %1229, %1228 ], [ %.7.5, %1227 ], [ %.7.5, %.loopexit.5 ], [ %1240, %1239 ], [ %.03.ph.be.4, %1236 ], [ %1266, %1264 ], [ %1263, %1262 ], [ %1261, %1260 ], [ %.03.ph.be.4, %1258 ]
  call void @__loop_iteration_test___2()
  %1267 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1268 = icmp ne i8* %1267, null
  br i1 %1268, label %.lr.ph.6, label %.outer._crit_edge.loopexit1

.lr.ph.6:                                         ; preds = %.outer.backedge.5
  call void @unroll_loop(i32 48)
  br label %1269

; <label>:1269:                                   ; preds = %1303, %.lr.ph.6
  %.0712.6 = phi i32 [ %.lcssa.5, %.lr.ph.6 ], [ %1270, %1303 ]
  call void @unroll_loop(i32 44)
  %1270 = add nsw i32 %.0712.6, 1
  %1271 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1272 = icmp ne i8* %1271, null
  br i1 %1272, label %1273, label %1274

; <label>:1273:                                   ; preds = %1269
  store i8 0, i8* %1271, align 1
  br label %1274

; <label>:1274:                                   ; preds = %1273, %1269
  %1275 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1276 = icmp ne i8* %1275, null
  br i1 %1276, label %1277, label %1278

; <label>:1277:                                   ; preds = %1274
  store i8 0, i8* %1275, align 1
  br label %1278

; <label>:1278:                                   ; preds = %1277, %1274
  %1279 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1280 = icmp ne i8* %1279, null
  br i1 %1280, label %1281, label %1282

; <label>:1281:                                   ; preds = %1278
  store i8 0, i8* %1279, align 1
  br label %1282

; <label>:1282:                                   ; preds = %1281, %1278
  %1283 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1284 = icmp ne i8* %1283, null
  br i1 %1284, label %1285, label %1286

; <label>:1285:                                   ; preds = %1282
  store i8 0, i8* %1283, align 1
  br label %1286

; <label>:1286:                                   ; preds = %1285, %1282
  %1287 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1287, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1288 = load i8*, i8** %26, align 8
  %1289 = icmp ne i8* %1288, null
  %.14.6 = select i1 %1289, i32 1, i32 0
  %1290 = select i1 %1289, i1 true, i1 false
  br i1 %1290, label %.lr.ph6.preheader.6, label %._crit_edge.6

.lr.ph6.preheader.6:                              ; preds = %1286
  br label %.lr.ph6.6

.lr.ph6.6:                                        ; preds = %.lr.ph6.6, %.lr.ph6.preheader.6
  %.15.6 = phi i32 [ %.1.6, %.lr.ph6.6 ], [ %.14.6, %.lr.ph6.preheader.6 ]
  %1291 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1292 = sext i32 %.15.6 to i64
  %1293 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1292
  store i8* %1291, i8** %1293, align 8
  call void @unroll_loop(i32 45)
  %1294 = sext i32 %.15.6 to i64
  %1295 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1294
  %1296 = load i8*, i8** %1295, align 8
  %1297 = icmp ne i8* %1296, null
  %1298 = add nsw i32 %.15.6, 1
  %1299 = icmp slt i32 %1298, 30
  %.1.6 = select i1 %1297, i32 %1298, i32 %.15.6
  %1300 = select i1 %1297, i1 %1299, i1 false
  br i1 %1300, label %.lr.ph6.6, label %._crit_edge.loopexit.6

._crit_edge.loopexit.6:                           ; preds = %.lr.ph6.6
  %.1.lcssa.ph.6 = phi i32 [ %.1.6, %.lr.ph6.6 ]
  br label %._crit_edge.6

._crit_edge.6:                                    ; preds = %._crit_edge.loopexit.6, %1286
  %.1.lcssa.6 = phi i32 [ %.14.6, %1286 ], [ %.1.lcssa.ph.6, %._crit_edge.loopexit.6 ]
  %1301 = load i8*, i8** %27, align 16
  %1302 = icmp ne i8* %1301, null
  br i1 %1302, label %1306, label %1303

; <label>:1303:                                   ; preds = %._crit_edge.6
  %1304 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1305 = icmp ne i8* %1304, null
  br i1 %1305, label %1269, label %.outer._crit_edge.loopexit.loopexit6

; <label>:1306:                                   ; preds = %._crit_edge.6
  %.1.lcssa.lcssa.6 = phi i32 [ %.1.lcssa.6, %._crit_edge.6 ]
  %.lcssa.6 = phi i32 [ %1270, %._crit_edge.6 ]
  %1307 = load i8*, i8** %28, align 16
  %1308 = call i32 @strcasecmp(i8* %1307, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1309 = icmp ne i32 %1308, 0
  br i1 %1309, label %1335, label %1310

; <label>:1310:                                   ; preds = %1306
  %1311 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  %1312 = icmp sgt i32 %.1.lcssa.lcssa.6, 4
  %or.cond.6 = or i1 %1311, %1312
  br i1 %or.cond.6, label %1333, label %1313

; <label>:1313:                                   ; preds = %1310
  %1314 = icmp sgt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1314, label %1315, label %1326

; <label>:1315:                                   ; preds = %1313
  %1316 = load i8*, i8** %34, align 8
  %1317 = call i32 @strcasecmp(i8* %1316, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1318 = icmp ne i32 %1317, 0
  br i1 %1318, label %1330, label %1319

; <label>:1319:                                   ; preds = %1315
  %1320 = icmp sge i32 %.1.lcssa.lcssa.6, 3
  br i1 %1320, label %1323, label %1321

; <label>:1321:                                   ; preds = %1319
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.6)
  %1322 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1323:                                   ; preds = %1319
  %1324 = load i8*, i8** %40, align 8
  %1325 = call i32 @atoi(i8* %1324) #8
  br label %1326

; <label>:1326:                                   ; preds = %1323, %1313
  %.08.6 = phi i32 [ %1325, %1323 ], [ 53, %1313 ]
  %1327 = load i8*, i8** %35, align 8
  %1328 = call i32 @fwd_add(i8* %1327, i32 %.08.6)
  %1329 = icmp eq i32 %1328, -1
  br i1 %1329, label %.loopexit1.loopexit, label %.outer.backedge.6

; <label>:1330:                                   ; preds = %1315
  %1331 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.6, i8* %1331)
  %1332 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1333:                                   ; preds = %1310
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.6)
  %1334 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1335:                                   ; preds = %1306
  %1336 = load i8*, i8** %29, align 16
  %1337 = call i32 @strcasecmp(i8* %1336, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1338 = icmp ne i32 %1337, 0
  br i1 %1338, label %1352, label %1339

; <label>:1339:                                   ; preds = %1335
  %1340 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1340, label %1350, label %1341

; <label>:1341:                                   ; preds = %1339
  %1342 = load i8*, i8** %32, align 8
  %1343 = call i32 @conv_trick_conf(i8* %1342)
  %1344 = icmp ne i32 %1343, 0
  %1345 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1346 = load i8*, i8** %33, align 8
  br i1 %1344, label %1348, label %1347

; <label>:1347:                                   ; preds = %1341
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1345, i8* %1346)
  br label %.outer.backedge.6

; <label>:1348:                                   ; preds = %1341
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1345, i8* %1346)
  %1349 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1350:                                   ; preds = %1339
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.6)
  %1351 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1352:                                   ; preds = %1335
  %1353 = load i8*, i8** %30, align 16
  %1354 = call i32 @strcasecmp(i8* %1353, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1355 = icmp ne i32 %1354, 0
  br i1 %1355, label %1361, label %1356

; <label>:1356:                                   ; preds = %1352
  %1357 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1357, label %1359, label %1358

; <label>:1358:                                   ; preds = %1356
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.6

; <label>:1359:                                   ; preds = %1356
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.6)
  %1360 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1361:                                   ; preds = %1352
  %1362 = load i8*, i8** %31, align 16
  %1363 = call i32 @strcasecmp(i8* %1362, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1364 = icmp ne i32 %1363, 0
  br i1 %1364, label %1372, label %1365

; <label>:1365:                                   ; preds = %1361
  %1366 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1366, label %1370, label %1367

; <label>:1367:                                   ; preds = %1365
  %1368 = load i8*, i8** %39, align 8
  %1369 = call i32 @atoi(i8* %1368) #8
  store i32 %1369, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.6

; <label>:1370:                                   ; preds = %1365
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.6)
  %1371 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1372:                                   ; preds = %1361
  %1373 = load i8*, i8** %36, align 16
  %1374 = call i32 @strcasecmp(i8* %1373, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1375 = icmp ne i32 %1374, 0
  br i1 %1375, label %1383, label %1376

; <label>:1376:                                   ; preds = %1372
  %1377 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1377, label %1381, label %1378

; <label>:1378:                                   ; preds = %1376
  %1379 = load i8*, i8** %42, align 8
  %1380 = call noalias i8* @strdup(i8* %1379) #9, !track !108
  store i8* %1380, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.6

; <label>:1381:                                   ; preds = %1376
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.6)
  %1382 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1383:                                   ; preds = %1372
  %1384 = load i8*, i8** %38, align 16
  %1385 = call i32 @strcasecmp(i8* %1384, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1386 = icmp ne i32 %1385, 0
  br i1 %1386, label %1433, label %1387

; <label>:1387:                                   ; preds = %1383
  %1388 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1388, label %1389, label %1391

; <label>:1389:                                   ; preds = %1387
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.6)
  %1390 = add nsw i32 %.03.ph.be.5, 1
  br label %1391

; <label>:1391:                                   ; preds = %1389, %1387
  %.7.6 = phi i32 [ %1390, %1389 ], [ %.03.ph.be.5, %1387 ]
  br label %1392

; <label>:1392:                                   ; preds = %1392, %1391
  %lsr.iv.6 = phi i64 [ %lsr.iv.next.6, %1392 ], [ -1, %1391 ]
  %1393 = add i64 %lsr.iv.6, 1
  call void @unroll_loop(i32 46)
  %1394 = shl i64 %lsr.iv.6, 3
  %uglygep.6 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1394
  %uglygep3.6 = bitcast i8* %uglygep.6 to i8**
  %scevgep.6 = getelementptr i8*, i8** %uglygep3.6, i64 111
  %1395 = load i8*, i8** %scevgep.6, align 8
  %1396 = icmp ne i8* %1395, null
  %1397 = icmp ult i64 %1393, 30
  %spec.select.6 = select i1 %1396, i1 %1397, i1 false
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %spec.select.6, label %1392, label %1398

; <label>:1398:                                   ; preds = %1392
  %.01.lcssa.wide.6 = phi i64 [ %lsr.iv.next.6, %1392 ]
  %1399 = trunc i64 %.01.lcssa.wide.6 to i32
  %1400 = add nsw i32 %1399, %.1.lcssa.lcssa.6
  %1401 = sub nsw i32 %1400, 1
  %1402 = icmp sgt i32 %1401, 30
  br i1 %1402, label %1431, label %1403

; <label>:1403:                                   ; preds = %1398
  %1404 = sub nsw i32 %.1.lcssa.lcssa.6, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.6, i32 %1404)
  %1405 = add nsw i32 %.1.lcssa.lcssa.6, -1
  %1406 = add nsw i32 %1399, %.1.lcssa.lcssa.6
  %1407 = sext i32 %1406 to i64
  %1408 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1407
  store i8* null, i8** %1408, align 8
  %1409 = icmp ne i32 %1405, 0
  br i1 %1409, label %.lr.ph16.6, label %.loopexit.6

.lr.ph16.6:                                       ; preds = %1403
  %1410 = add i32 %.1.lcssa.lcssa.6, -1
  %1411 = sext i32 %1410 to i64
  %1412 = sext i32 %1399 to i64
  %scevgep4.6 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1411
  %1413 = shl i64 %1411, 1
  %1414 = shl i64 %1412, 1
  %1415 = add i64 %1413, %1414
  %scevgep9.6 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1415
  %1416 = sub i32 1, %.1.lcssa.lcssa.6
  %1417 = zext i32 %1416 to i64
  br label %1418

; <label>:1418:                                   ; preds = %1423, %.lr.ph16.6
  %lsr.iv5.6 = phi i64 [ 0, %.lr.ph16.6 ], [ %lsr.iv.next6.6, %1423 ]
  call void @unroll_loop(i32 47)
  %scevgep7.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1419 = load i8*, i8** %scevgep7.6, align 8
  %1420 = call i32 @strcmp(i8* %1419, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1421 = icmp ne i32 %1420, 0
  br i1 %1421, label %1423, label %1422

; <label>:1422:                                   ; preds = %1418
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.6

; <label>:1423:                                   ; preds = %1418
  %scevgep8.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1424 = load i8*, i8** %scevgep8.6, align 8
  %1425 = call noalias i8* @strdup(i8* %1424) #9, !track !109
  %1426 = shl i64 %lsr.iv5.6, 1
  %scevgep10.6 = getelementptr i32, i32* %scevgep9.6, i64 %1426
  %scevgep1011.6 = bitcast i32* %scevgep10.6 to i8**
  store i8* %1425, i8** %scevgep1011.6, align 8
  %lsr.iv.next6.6 = add nsw i64 %lsr.iv5.6, -1
  %tmp.6 = trunc i64 %lsr.iv.next6.6 to i32
  %1427 = icmp ne i32 %1416, %tmp.6
  br i1 %1427, label %1418, label %.loopexit.loopexit.6

.loopexit.loopexit.6:                             ; preds = %1423
  br label %.loopexit.6

.loopexit.6:                                      ; preds = %.loopexit.loopexit.6, %1422, %1403
  %1428 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1429 = icmp ne i8* %1428, null
  br i1 %1429, label %1430, label %.outer.backedge.6

; <label>:1430:                                   ; preds = %.loopexit.6
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.6

; <label>:1431:                                   ; preds = %1398
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.6, i32 30)
  %1432 = add nsw i32 %.7.6, 1
  br label %.outer.backedge.6

; <label>:1433:                                   ; preds = %1383
  %1434 = load i8*, i8** %41, align 16
  %1435 = call i32 @strcasecmp(i8* %1434, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1436 = icmp ne i32 %1435, 0
  br i1 %1436, label %1444, label %1437

; <label>:1437:                                   ; preds = %1433
  %1438 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1438, label %1442, label %1439

; <label>:1439:                                   ; preds = %1437
  %1440 = load i8*, i8** %45, align 8
  %1441 = call i32 @atoi(i8* %1440) #8
  store i32 %1441, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.6

; <label>:1442:                                   ; preds = %1437
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.6)
  %1443 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1444:                                   ; preds = %1433
  %1445 = load i8*, i8** %43, align 16
  %1446 = call i32 @strcasecmp(i8* %1445, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1447 = icmp ne i32 %1446, 0
  br i1 %1447, label %1467, label %1448

; <label>:1448:                                   ; preds = %1444
  %1449 = icmp ne i32 %.1.lcssa.lcssa.6, 4
  br i1 %1449, label %1465, label %1450

; <label>:1450:                                   ; preds = %1448
  %1451 = load i8*, i8** %46, align 8
  %1452 = load i8*, i8** %47, align 16
  %1453 = load i8*, i8** %48, align 8
  %1454 = call i32 @atoi(i8* %1453) #8
  %1455 = call i32 @conv_scoped_conf(i8* %1451, i8* %1452, i32 %1454)
  %1456 = icmp ne i32 %1455, 0
  %1457 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1458 = load i8*, i8** %49, align 8
  %1459 = load i8*, i8** %50, align 16
  %1460 = load i8*, i8** %51, align 8
  br i1 %1456, label %1463, label %1461

; <label>:1461:                                   ; preds = %1450
  %1462 = call i32 @atoi(i8* %1460) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1457, i8* %1458, i8* %1459, i32 %1462)
  br label %.outer.backedge.6

; <label>:1463:                                   ; preds = %1450
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1457, i8* %1458, i8* %1459, i8* %1460)
  %1464 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1465:                                   ; preds = %1448
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.6)
  %1466 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1467:                                   ; preds = %1444
  %1468 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.6, i8* %1468)
  %1469 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

.outer.backedge.6:                                ; preds = %1467, %1465, %1463, %1461, %1442, %1439, %1431, %1430, %.loopexit.6, %1381, %1378, %1370, %1367, %1359, %1358, %1350, %1348, %1347, %1333, %1330, %1326, %1321
  %.03.ph.be.6 = phi i32 [ %1322, %1321 ], [ %1332, %1330 ], [ %1334, %1333 ], [ %.03.ph.be.5, %1326 ], [ %1351, %1350 ], [ %1349, %1348 ], [ %.03.ph.be.5, %1347 ], [ %1360, %1359 ], [ %.03.ph.be.5, %1358 ], [ %1371, %1370 ], [ %.03.ph.be.5, %1367 ], [ %1382, %1381 ], [ %.03.ph.be.5, %1378 ], [ %1432, %1431 ], [ %.7.6, %1430 ], [ %.7.6, %.loopexit.6 ], [ %1443, %1442 ], [ %.03.ph.be.5, %1439 ], [ %1469, %1467 ], [ %1466, %1465 ], [ %1464, %1463 ], [ %.03.ph.be.5, %1461 ]
  call void @__loop_iteration_test___2()
  %1470 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1471 = icmp ne i8* %1470, null
  br i1 %1471, label %.lr.ph.7, label %.outer._crit_edge.loopexit1

.lr.ph.7:                                         ; preds = %.outer.backedge.6
  call void @unroll_loop(i32 48)
  br label %1472

; <label>:1472:                                   ; preds = %1506, %.lr.ph.7
  %.0712.7 = phi i32 [ %.lcssa.6, %.lr.ph.7 ], [ %1473, %1506 ]
  call void @unroll_loop(i32 44)
  %1473 = add nsw i32 %.0712.7, 1
  %1474 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1475 = icmp ne i8* %1474, null
  br i1 %1475, label %1476, label %1477

; <label>:1476:                                   ; preds = %1472
  store i8 0, i8* %1474, align 1
  br label %1477

; <label>:1477:                                   ; preds = %1476, %1472
  %1478 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1479 = icmp ne i8* %1478, null
  br i1 %1479, label %1480, label %1481

; <label>:1480:                                   ; preds = %1477
  store i8 0, i8* %1478, align 1
  br label %1481

; <label>:1481:                                   ; preds = %1480, %1477
  %1482 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1483 = icmp ne i8* %1482, null
  br i1 %1483, label %1484, label %1485

; <label>:1484:                                   ; preds = %1481
  store i8 0, i8* %1482, align 1
  br label %1485

; <label>:1485:                                   ; preds = %1484, %1481
  %1486 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1487 = icmp ne i8* %1486, null
  br i1 %1487, label %1488, label %1489

; <label>:1488:                                   ; preds = %1485
  store i8 0, i8* %1486, align 1
  br label %1489

; <label>:1489:                                   ; preds = %1488, %1485
  %1490 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1490, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1491 = load i8*, i8** %26, align 8
  %1492 = icmp ne i8* %1491, null
  %.14.7 = select i1 %1492, i32 1, i32 0
  %1493 = select i1 %1492, i1 true, i1 false
  br i1 %1493, label %.lr.ph6.preheader.7, label %._crit_edge.7

.lr.ph6.preheader.7:                              ; preds = %1489
  br label %.lr.ph6.7

.lr.ph6.7:                                        ; preds = %.lr.ph6.7, %.lr.ph6.preheader.7
  %.15.7 = phi i32 [ %.1.7, %.lr.ph6.7 ], [ %.14.7, %.lr.ph6.preheader.7 ]
  %1494 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1495 = sext i32 %.15.7 to i64
  %1496 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1495
  store i8* %1494, i8** %1496, align 8
  call void @unroll_loop(i32 45)
  %1497 = sext i32 %.15.7 to i64
  %1498 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1497
  %1499 = load i8*, i8** %1498, align 8
  %1500 = icmp ne i8* %1499, null
  %1501 = add nsw i32 %.15.7, 1
  %1502 = icmp slt i32 %1501, 30
  %.1.7 = select i1 %1500, i32 %1501, i32 %.15.7
  %1503 = select i1 %1500, i1 %1502, i1 false
  br i1 %1503, label %.lr.ph6.7, label %._crit_edge.loopexit.7

._crit_edge.loopexit.7:                           ; preds = %.lr.ph6.7
  %.1.lcssa.ph.7 = phi i32 [ %.1.7, %.lr.ph6.7 ]
  br label %._crit_edge.7

._crit_edge.7:                                    ; preds = %._crit_edge.loopexit.7, %1489
  %.1.lcssa.7 = phi i32 [ %.14.7, %1489 ], [ %.1.lcssa.ph.7, %._crit_edge.loopexit.7 ]
  %1504 = load i8*, i8** %27, align 16
  %1505 = icmp ne i8* %1504, null
  br i1 %1505, label %1509, label %1506

; <label>:1506:                                   ; preds = %._crit_edge.7
  %1507 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1508 = icmp ne i8* %1507, null
  br i1 %1508, label %1472, label %.outer._crit_edge.loopexit.loopexit7

; <label>:1509:                                   ; preds = %._crit_edge.7
  %.1.lcssa.lcssa.7 = phi i32 [ %.1.lcssa.7, %._crit_edge.7 ]
  %.lcssa.7 = phi i32 [ %1473, %._crit_edge.7 ]
  %1510 = load i8*, i8** %28, align 16
  %1511 = call i32 @strcasecmp(i8* %1510, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1512 = icmp ne i32 %1511, 0
  br i1 %1512, label %1538, label %1513

; <label>:1513:                                   ; preds = %1509
  %1514 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  %1515 = icmp sgt i32 %.1.lcssa.lcssa.7, 4
  %or.cond.7 = or i1 %1514, %1515
  br i1 %or.cond.7, label %1536, label %1516

; <label>:1516:                                   ; preds = %1513
  %1517 = icmp sgt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1517, label %1518, label %1529

; <label>:1518:                                   ; preds = %1516
  %1519 = load i8*, i8** %34, align 8
  %1520 = call i32 @strcasecmp(i8* %1519, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1521 = icmp ne i32 %1520, 0
  br i1 %1521, label %1533, label %1522

; <label>:1522:                                   ; preds = %1518
  %1523 = icmp sge i32 %.1.lcssa.lcssa.7, 3
  br i1 %1523, label %1526, label %1524

; <label>:1524:                                   ; preds = %1522
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.7)
  %1525 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1526:                                   ; preds = %1522
  %1527 = load i8*, i8** %40, align 8
  %1528 = call i32 @atoi(i8* %1527) #8
  br label %1529

; <label>:1529:                                   ; preds = %1526, %1516
  %.08.7 = phi i32 [ %1528, %1526 ], [ 53, %1516 ]
  %1530 = load i8*, i8** %35, align 8
  %1531 = call i32 @fwd_add(i8* %1530, i32 %.08.7)
  %1532 = icmp eq i32 %1531, -1
  br i1 %1532, label %.loopexit1.loopexit, label %.outer.backedge.7

; <label>:1533:                                   ; preds = %1518
  %1534 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.7, i8* %1534)
  %1535 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1536:                                   ; preds = %1513
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.7)
  %1537 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1538:                                   ; preds = %1509
  %1539 = load i8*, i8** %29, align 16
  %1540 = call i32 @strcasecmp(i8* %1539, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1541 = icmp ne i32 %1540, 0
  br i1 %1541, label %1555, label %1542

; <label>:1542:                                   ; preds = %1538
  %1543 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1543, label %1553, label %1544

; <label>:1544:                                   ; preds = %1542
  %1545 = load i8*, i8** %32, align 8
  %1546 = call i32 @conv_trick_conf(i8* %1545)
  %1547 = icmp ne i32 %1546, 0
  %1548 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1549 = load i8*, i8** %33, align 8
  br i1 %1547, label %1551, label %1550

; <label>:1550:                                   ; preds = %1544
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1548, i8* %1549)
  br label %.outer.backedge.7

; <label>:1551:                                   ; preds = %1544
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1548, i8* %1549)
  %1552 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1553:                                   ; preds = %1542
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.7)
  %1554 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1555:                                   ; preds = %1538
  %1556 = load i8*, i8** %30, align 16
  %1557 = call i32 @strcasecmp(i8* %1556, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1558 = icmp ne i32 %1557, 0
  br i1 %1558, label %1564, label %1559

; <label>:1559:                                   ; preds = %1555
  %1560 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1560, label %1562, label %1561

; <label>:1561:                                   ; preds = %1559
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.7

; <label>:1562:                                   ; preds = %1559
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.7)
  %1563 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1564:                                   ; preds = %1555
  %1565 = load i8*, i8** %31, align 16
  %1566 = call i32 @strcasecmp(i8* %1565, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1567 = icmp ne i32 %1566, 0
  br i1 %1567, label %1575, label %1568

; <label>:1568:                                   ; preds = %1564
  %1569 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1569, label %1573, label %1570

; <label>:1570:                                   ; preds = %1568
  %1571 = load i8*, i8** %39, align 8
  %1572 = call i32 @atoi(i8* %1571) #8
  store i32 %1572, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.7

; <label>:1573:                                   ; preds = %1568
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.7)
  %1574 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1575:                                   ; preds = %1564
  %1576 = load i8*, i8** %36, align 16
  %1577 = call i32 @strcasecmp(i8* %1576, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1578 = icmp ne i32 %1577, 0
  br i1 %1578, label %1586, label %1579

; <label>:1579:                                   ; preds = %1575
  %1580 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1580, label %1584, label %1581

; <label>:1581:                                   ; preds = %1579
  %1582 = load i8*, i8** %42, align 8
  %1583 = call noalias i8* @strdup(i8* %1582) #9, !track !108
  store i8* %1583, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.7

; <label>:1584:                                   ; preds = %1579
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.7)
  %1585 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1586:                                   ; preds = %1575
  %1587 = load i8*, i8** %38, align 16
  %1588 = call i32 @strcasecmp(i8* %1587, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1589 = icmp ne i32 %1588, 0
  br i1 %1589, label %1636, label %1590

; <label>:1590:                                   ; preds = %1586
  %1591 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1591, label %1592, label %1594

; <label>:1592:                                   ; preds = %1590
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.7)
  %1593 = add nsw i32 %.03.ph.be.6, 1
  br label %1594

; <label>:1594:                                   ; preds = %1592, %1590
  %.7.7 = phi i32 [ %1593, %1592 ], [ %.03.ph.be.6, %1590 ]
  br label %1595

; <label>:1595:                                   ; preds = %1595, %1594
  %lsr.iv.7 = phi i64 [ %lsr.iv.next.7, %1595 ], [ -1, %1594 ]
  %1596 = add i64 %lsr.iv.7, 1
  call void @unroll_loop(i32 46)
  %1597 = shl i64 %lsr.iv.7, 3
  %uglygep.7 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1597
  %uglygep3.7 = bitcast i8* %uglygep.7 to i8**
  %scevgep.7 = getelementptr i8*, i8** %uglygep3.7, i64 111
  %1598 = load i8*, i8** %scevgep.7, align 8
  %1599 = icmp ne i8* %1598, null
  %1600 = icmp ult i64 %1596, 30
  %spec.select.7 = select i1 %1599, i1 %1600, i1 false
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %spec.select.7, label %1595, label %1601

; <label>:1601:                                   ; preds = %1595
  %.01.lcssa.wide.7 = phi i64 [ %lsr.iv.next.7, %1595 ]
  %1602 = trunc i64 %.01.lcssa.wide.7 to i32
  %1603 = add nsw i32 %1602, %.1.lcssa.lcssa.7
  %1604 = sub nsw i32 %1603, 1
  %1605 = icmp sgt i32 %1604, 30
  br i1 %1605, label %1634, label %1606

; <label>:1606:                                   ; preds = %1601
  %1607 = sub nsw i32 %.1.lcssa.lcssa.7, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.7, i32 %1607)
  %1608 = add nsw i32 %.1.lcssa.lcssa.7, -1
  %1609 = add nsw i32 %1602, %.1.lcssa.lcssa.7
  %1610 = sext i32 %1609 to i64
  %1611 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1610
  store i8* null, i8** %1611, align 8
  %1612 = icmp ne i32 %1608, 0
  br i1 %1612, label %.lr.ph16.7, label %.loopexit.7

.lr.ph16.7:                                       ; preds = %1606
  %1613 = add i32 %.1.lcssa.lcssa.7, -1
  %1614 = sext i32 %1613 to i64
  %1615 = sext i32 %1602 to i64
  %scevgep4.7 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1614
  %1616 = shl i64 %1614, 1
  %1617 = shl i64 %1615, 1
  %1618 = add i64 %1616, %1617
  %scevgep9.7 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1618
  %1619 = sub i32 1, %.1.lcssa.lcssa.7
  %1620 = zext i32 %1619 to i64
  br label %1621

; <label>:1621:                                   ; preds = %1626, %.lr.ph16.7
  %lsr.iv5.7 = phi i64 [ 0, %.lr.ph16.7 ], [ %lsr.iv.next6.7, %1626 ]
  call void @unroll_loop(i32 47)
  %scevgep7.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1622 = load i8*, i8** %scevgep7.7, align 8
  %1623 = call i32 @strcmp(i8* %1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1624 = icmp ne i32 %1623, 0
  br i1 %1624, label %1626, label %1625

; <label>:1625:                                   ; preds = %1621
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.7

; <label>:1626:                                   ; preds = %1621
  %scevgep8.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1627 = load i8*, i8** %scevgep8.7, align 8
  %1628 = call noalias i8* @strdup(i8* %1627) #9, !track !109
  %1629 = shl i64 %lsr.iv5.7, 1
  %scevgep10.7 = getelementptr i32, i32* %scevgep9.7, i64 %1629
  %scevgep1011.7 = bitcast i32* %scevgep10.7 to i8**
  store i8* %1628, i8** %scevgep1011.7, align 8
  %lsr.iv.next6.7 = add nsw i64 %lsr.iv5.7, -1
  %tmp.7 = trunc i64 %lsr.iv.next6.7 to i32
  %1630 = icmp ne i32 %1619, %tmp.7
  br i1 %1630, label %1621, label %.loopexit.loopexit.7

.loopexit.loopexit.7:                             ; preds = %1626
  br label %.loopexit.7

.loopexit.7:                                      ; preds = %.loopexit.loopexit.7, %1625, %1606
  %1631 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1632 = icmp ne i8* %1631, null
  br i1 %1632, label %1633, label %.outer.backedge.7

; <label>:1633:                                   ; preds = %.loopexit.7
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.7

; <label>:1634:                                   ; preds = %1601
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.7, i32 30)
  %1635 = add nsw i32 %.7.7, 1
  br label %.outer.backedge.7

; <label>:1636:                                   ; preds = %1586
  %1637 = load i8*, i8** %41, align 16
  %1638 = call i32 @strcasecmp(i8* %1637, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1639 = icmp ne i32 %1638, 0
  br i1 %1639, label %1647, label %1640

; <label>:1640:                                   ; preds = %1636
  %1641 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1641, label %1645, label %1642

; <label>:1642:                                   ; preds = %1640
  %1643 = load i8*, i8** %45, align 8
  %1644 = call i32 @atoi(i8* %1643) #8
  store i32 %1644, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.7

; <label>:1645:                                   ; preds = %1640
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.7)
  %1646 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1647:                                   ; preds = %1636
  %1648 = load i8*, i8** %43, align 16
  %1649 = call i32 @strcasecmp(i8* %1648, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1650 = icmp ne i32 %1649, 0
  br i1 %1650, label %1670, label %1651

; <label>:1651:                                   ; preds = %1647
  %1652 = icmp ne i32 %.1.lcssa.lcssa.7, 4
  br i1 %1652, label %1668, label %1653

; <label>:1653:                                   ; preds = %1651
  %1654 = load i8*, i8** %46, align 8
  %1655 = load i8*, i8** %47, align 16
  %1656 = load i8*, i8** %48, align 8
  %1657 = call i32 @atoi(i8* %1656) #8
  %1658 = call i32 @conv_scoped_conf(i8* %1654, i8* %1655, i32 %1657)
  %1659 = icmp ne i32 %1658, 0
  %1660 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1661 = load i8*, i8** %49, align 8
  %1662 = load i8*, i8** %50, align 16
  %1663 = load i8*, i8** %51, align 8
  br i1 %1659, label %1666, label %1664

; <label>:1664:                                   ; preds = %1653
  %1665 = call i32 @atoi(i8* %1663) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1660, i8* %1661, i8* %1662, i32 %1665)
  br label %.outer.backedge.7

; <label>:1666:                                   ; preds = %1653
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1660, i8* %1661, i8* %1662, i8* %1663)
  %1667 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1668:                                   ; preds = %1651
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.7)
  %1669 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1670:                                   ; preds = %1647
  %1671 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.7, i8* %1671)
  %1672 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

.outer.backedge.7:                                ; preds = %1670, %1668, %1666, %1664, %1645, %1642, %1634, %1633, %.loopexit.7, %1584, %1581, %1573, %1570, %1562, %1561, %1553, %1551, %1550, %1536, %1533, %1529, %1524
  %.03.ph.be.7 = phi i32 [ %1525, %1524 ], [ %1535, %1533 ], [ %1537, %1536 ], [ %.03.ph.be.6, %1529 ], [ %1554, %1553 ], [ %1552, %1551 ], [ %.03.ph.be.6, %1550 ], [ %1563, %1562 ], [ %.03.ph.be.6, %1561 ], [ %1574, %1573 ], [ %.03.ph.be.6, %1570 ], [ %1585, %1584 ], [ %.03.ph.be.6, %1581 ], [ %1635, %1634 ], [ %.7.7, %1633 ], [ %.7.7, %.loopexit.7 ], [ %1646, %1645 ], [ %.03.ph.be.6, %1642 ], [ %1672, %1670 ], [ %1669, %1668 ], [ %1667, %1666 ], [ %.03.ph.be.6, %1664 ]
  call void @__loop_iteration_test___2()
  %1673 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  br label %.outer._crit_edge.loopexit1

; <label>:1674:                                   ; preds = %52
  call void @unroll_loop(i32 44)
  %1675 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1676 = icmp ne i8* %1675, null
  br i1 %1676, label %1677, label %1678

; <label>:1677:                                   ; preds = %1674
  store i8 0, i8* %1675, align 1
  br label %1678

; <label>:1678:                                   ; preds = %1677, %1674
  %1679 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1680 = icmp ne i8* %1679, null
  br i1 %1680, label %1681, label %1682

; <label>:1681:                                   ; preds = %1678
  store i8 0, i8* %1679, align 1
  br label %1682

; <label>:1682:                                   ; preds = %1681, %1678
  %1683 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1684 = icmp ne i8* %1683, null
  br i1 %1684, label %1685, label %1686

; <label>:1685:                                   ; preds = %1682
  store i8 0, i8* %1683, align 1
  br label %1686

; <label>:1686:                                   ; preds = %1685, %1682
  %1687 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1688 = icmp ne i8* %1687, null
  br i1 %1688, label %1689, label %1690

; <label>:1689:                                   ; preds = %1686
  store i8 0, i8* %1687, align 1
  br label %1690

; <label>:1690:                                   ; preds = %1689, %1686
  %1691 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1691, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1692 = load i8*, i8** %26, align 8
  %1693 = icmp ne i8* %1692, null
  %.14.12 = select i1 %1693, i32 1, i32 0
  %1694 = select i1 %1693, i1 true, i1 false
  br i1 %1694, label %.lr.ph6.preheader.13, label %._crit_edge.110

.lr.ph6.preheader.13:                             ; preds = %1690
  br label %.lr.ph6.16

.lr.ph6.16:                                       ; preds = %.lr.ph6.16, %.lr.ph6.preheader.13
  %.15.14 = phi i32 [ %.1.15, %.lr.ph6.16 ], [ %.14.12, %.lr.ph6.preheader.13 ]
  %1695 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1696 = sext i32 %.15.14 to i64
  %1697 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1696
  store i8* %1695, i8** %1697, align 8
  call void @unroll_loop(i32 45)
  %1698 = sext i32 %.15.14 to i64
  %1699 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1698
  %1700 = load i8*, i8** %1699, align 8
  %1701 = icmp ne i8* %1700, null
  %1702 = add nsw i32 %.15.14, 1
  %1703 = icmp slt i32 %1702, 30
  %.1.15 = select i1 %1701, i32 %1702, i32 %.15.14
  %1704 = select i1 %1701, i1 %1703, i1 false
  br i1 %1704, label %.lr.ph6.16, label %._crit_edge.loopexit.18

._crit_edge.loopexit.18:                          ; preds = %.lr.ph6.16
  %.1.lcssa.ph.17 = phi i32 [ %.1.15, %.lr.ph6.16 ]
  br label %._crit_edge.110

._crit_edge.110:                                  ; preds = %._crit_edge.loopexit.18, %1690
  %.1.lcssa.19 = phi i32 [ %.14.12, %1690 ], [ %.1.lcssa.ph.17, %._crit_edge.loopexit.18 ]
  %1705 = load i8*, i8** %27, align 16
  %1706 = icmp ne i8* %1705, null
  br i1 %1706, label %91, label %1707

; <label>:1707:                                   ; preds = %._crit_edge.110
  call void @__loop_iteration_test___3()
  %1708 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1709 = icmp ne i8* %1708, null
  br i1 %1709, label %1710, label %.outer._crit_edge.loopexit.loopexit

; <label>:1710:                                   ; preds = %1707
  call void @unroll_loop(i32 44)
  %1711 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1712 = icmp ne i8* %1711, null
  br i1 %1712, label %1713, label %1714

; <label>:1713:                                   ; preds = %1710
  store i8 0, i8* %1711, align 1
  br label %1714

; <label>:1714:                                   ; preds = %1713, %1710
  %1715 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1716 = icmp ne i8* %1715, null
  br i1 %1716, label %1717, label %1718

; <label>:1717:                                   ; preds = %1714
  store i8 0, i8* %1715, align 1
  br label %1718

; <label>:1718:                                   ; preds = %1717, %1714
  %1719 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1720 = icmp ne i8* %1719, null
  br i1 %1720, label %1721, label %1722

; <label>:1721:                                   ; preds = %1718
  store i8 0, i8* %1719, align 1
  br label %1722

; <label>:1722:                                   ; preds = %1721, %1718
  %1723 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1724 = icmp ne i8* %1723, null
  br i1 %1724, label %1725, label %1726

; <label>:1725:                                   ; preds = %1722
  store i8 0, i8* %1723, align 1
  br label %1726

; <label>:1726:                                   ; preds = %1725, %1722
  %1727 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1727, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1728 = load i8*, i8** %26, align 8
  %1729 = icmp ne i8* %1728, null
  %.14.212 = select i1 %1729, i32 1, i32 0
  %1730 = select i1 %1729, i1 true, i1 false
  br i1 %1730, label %.lr.ph6.preheader.213, label %._crit_edge.220

.lr.ph6.preheader.213:                            ; preds = %1726
  br label %.lr.ph6.216

.lr.ph6.216:                                      ; preds = %.lr.ph6.216, %.lr.ph6.preheader.213
  %.15.214 = phi i32 [ %.1.215, %.lr.ph6.216 ], [ %.14.212, %.lr.ph6.preheader.213 ]
  %1731 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1732 = sext i32 %.15.214 to i64
  %1733 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1732
  store i8* %1731, i8** %1733, align 8
  call void @unroll_loop(i32 45)
  %1734 = sext i32 %.15.214 to i64
  %1735 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1734
  %1736 = load i8*, i8** %1735, align 8
  %1737 = icmp ne i8* %1736, null
  %1738 = add nsw i32 %.15.214, 1
  %1739 = icmp slt i32 %1738, 30
  %.1.215 = select i1 %1737, i32 %1738, i32 %.15.214
  %1740 = select i1 %1737, i1 %1739, i1 false
  br i1 %1740, label %.lr.ph6.216, label %._crit_edge.loopexit.218

._crit_edge.loopexit.218:                         ; preds = %.lr.ph6.216
  %.1.lcssa.ph.217 = phi i32 [ %.1.215, %.lr.ph6.216 ]
  br label %._crit_edge.220

._crit_edge.220:                                  ; preds = %._crit_edge.loopexit.218, %1726
  %.1.lcssa.219 = phi i32 [ %.14.212, %1726 ], [ %.1.lcssa.ph.217, %._crit_edge.loopexit.218 ]
  %1741 = load i8*, i8** %27, align 16
  %1742 = icmp ne i8* %1741, null
  br i1 %1742, label %91, label %1743

; <label>:1743:                                   ; preds = %._crit_edge.220
  call void @__loop_iteration_test___3()
  %1744 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1745 = icmp ne i8* %1744, null
  br i1 %1745, label %1746, label %.outer._crit_edge.loopexit.loopexit

; <label>:1746:                                   ; preds = %1743
  call void @unroll_loop(i32 44)
  %1747 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1748 = icmp ne i8* %1747, null
  br i1 %1748, label %1749, label %1750

; <label>:1749:                                   ; preds = %1746
  store i8 0, i8* %1747, align 1
  br label %1750

; <label>:1750:                                   ; preds = %1749, %1746
  %1751 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1752 = icmp ne i8* %1751, null
  br i1 %1752, label %1753, label %1754

; <label>:1753:                                   ; preds = %1750
  store i8 0, i8* %1751, align 1
  br label %1754

; <label>:1754:                                   ; preds = %1753, %1750
  %1755 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1756 = icmp ne i8* %1755, null
  br i1 %1756, label %1757, label %1758

; <label>:1757:                                   ; preds = %1754
  store i8 0, i8* %1755, align 1
  br label %1758

; <label>:1758:                                   ; preds = %1757, %1754
  %1759 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1760 = icmp ne i8* %1759, null
  br i1 %1760, label %1761, label %1762

; <label>:1761:                                   ; preds = %1758
  store i8 0, i8* %1759, align 1
  br label %1762

; <label>:1762:                                   ; preds = %1761, %1758
  %1763 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1763, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1764 = load i8*, i8** %26, align 8
  %1765 = icmp ne i8* %1764, null
  %.14.322 = select i1 %1765, i32 1, i32 0
  %1766 = select i1 %1765, i1 true, i1 false
  br i1 %1766, label %.lr.ph6.preheader.323, label %._crit_edge.330

.lr.ph6.preheader.323:                            ; preds = %1762
  br label %.lr.ph6.326

.lr.ph6.326:                                      ; preds = %.lr.ph6.326, %.lr.ph6.preheader.323
  %.15.324 = phi i32 [ %.1.325, %.lr.ph6.326 ], [ %.14.322, %.lr.ph6.preheader.323 ]
  %1767 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1768 = sext i32 %.15.324 to i64
  %1769 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1768
  store i8* %1767, i8** %1769, align 8
  call void @unroll_loop(i32 45)
  %1770 = sext i32 %.15.324 to i64
  %1771 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1770
  %1772 = load i8*, i8** %1771, align 8
  %1773 = icmp ne i8* %1772, null
  %1774 = add nsw i32 %.15.324, 1
  %1775 = icmp slt i32 %1774, 30
  %.1.325 = select i1 %1773, i32 %1774, i32 %.15.324
  %1776 = select i1 %1773, i1 %1775, i1 false
  br i1 %1776, label %.lr.ph6.326, label %._crit_edge.loopexit.328

._crit_edge.loopexit.328:                         ; preds = %.lr.ph6.326
  %.1.lcssa.ph.327 = phi i32 [ %.1.325, %.lr.ph6.326 ]
  br label %._crit_edge.330

._crit_edge.330:                                  ; preds = %._crit_edge.loopexit.328, %1762
  %.1.lcssa.329 = phi i32 [ %.14.322, %1762 ], [ %.1.lcssa.ph.327, %._crit_edge.loopexit.328 ]
  %1777 = load i8*, i8** %27, align 16
  %1778 = icmp ne i8* %1777, null
  br i1 %1778, label %91, label %1779

; <label>:1779:                                   ; preds = %._crit_edge.330
  call void @__loop_iteration_test___3()
  %1780 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1781 = icmp ne i8* %1780, null
  br i1 %1781, label %1782, label %.outer._crit_edge.loopexit.loopexit

; <label>:1782:                                   ; preds = %1779
  call void @unroll_loop(i32 44)
  %1783 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1784 = icmp ne i8* %1783, null
  br i1 %1784, label %1785, label %1786

; <label>:1785:                                   ; preds = %1782
  store i8 0, i8* %1783, align 1
  br label %1786

; <label>:1786:                                   ; preds = %1785, %1782
  %1787 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1788 = icmp ne i8* %1787, null
  br i1 %1788, label %1789, label %1790

; <label>:1789:                                   ; preds = %1786
  store i8 0, i8* %1787, align 1
  br label %1790

; <label>:1790:                                   ; preds = %1789, %1786
  %1791 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1792 = icmp ne i8* %1791, null
  br i1 %1792, label %1793, label %1794

; <label>:1793:                                   ; preds = %1790
  store i8 0, i8* %1791, align 1
  br label %1794

; <label>:1794:                                   ; preds = %1793, %1790
  %1795 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1796 = icmp ne i8* %1795, null
  br i1 %1796, label %1797, label %1798

; <label>:1797:                                   ; preds = %1794
  store i8 0, i8* %1795, align 1
  br label %1798

; <label>:1798:                                   ; preds = %1797, %1794
  %1799 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1799, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1800 = load i8*, i8** %26, align 8
  %1801 = icmp ne i8* %1800, null
  %.14.432 = select i1 %1801, i32 1, i32 0
  %1802 = select i1 %1801, i1 true, i1 false
  br i1 %1802, label %.lr.ph6.preheader.433, label %._crit_edge.440

.lr.ph6.preheader.433:                            ; preds = %1798
  br label %.lr.ph6.436

.lr.ph6.436:                                      ; preds = %.lr.ph6.436, %.lr.ph6.preheader.433
  %.15.434 = phi i32 [ %.1.435, %.lr.ph6.436 ], [ %.14.432, %.lr.ph6.preheader.433 ]
  %1803 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1804 = sext i32 %.15.434 to i64
  %1805 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1804
  store i8* %1803, i8** %1805, align 8
  call void @unroll_loop(i32 45)
  %1806 = sext i32 %.15.434 to i64
  %1807 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1806
  %1808 = load i8*, i8** %1807, align 8
  %1809 = icmp ne i8* %1808, null
  %1810 = add nsw i32 %.15.434, 1
  %1811 = icmp slt i32 %1810, 30
  %.1.435 = select i1 %1809, i32 %1810, i32 %.15.434
  %1812 = select i1 %1809, i1 %1811, i1 false
  br i1 %1812, label %.lr.ph6.436, label %._crit_edge.loopexit.438

._crit_edge.loopexit.438:                         ; preds = %.lr.ph6.436
  %.1.lcssa.ph.437 = phi i32 [ %.1.435, %.lr.ph6.436 ]
  br label %._crit_edge.440

._crit_edge.440:                                  ; preds = %._crit_edge.loopexit.438, %1798
  %.1.lcssa.439 = phi i32 [ %.14.432, %1798 ], [ %.1.lcssa.ph.437, %._crit_edge.loopexit.438 ]
  %1813 = load i8*, i8** %27, align 16
  %1814 = icmp ne i8* %1813, null
  br i1 %1814, label %91, label %1815

; <label>:1815:                                   ; preds = %._crit_edge.440
  call void @__loop_iteration_test___3()
  %1816 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1817 = icmp ne i8* %1816, null
  br i1 %1817, label %1818, label %.outer._crit_edge.loopexit.loopexit

; <label>:1818:                                   ; preds = %1815
  call void @unroll_loop(i32 44)
  %1819 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1820 = icmp ne i8* %1819, null
  br i1 %1820, label %1821, label %1822

; <label>:1821:                                   ; preds = %1818
  store i8 0, i8* %1819, align 1
  br label %1822

; <label>:1822:                                   ; preds = %1821, %1818
  %1823 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1824 = icmp ne i8* %1823, null
  br i1 %1824, label %1825, label %1826

; <label>:1825:                                   ; preds = %1822
  store i8 0, i8* %1823, align 1
  br label %1826

; <label>:1826:                                   ; preds = %1825, %1822
  %1827 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1828 = icmp ne i8* %1827, null
  br i1 %1828, label %1829, label %1830

; <label>:1829:                                   ; preds = %1826
  store i8 0, i8* %1827, align 1
  br label %1830

; <label>:1830:                                   ; preds = %1829, %1826
  %1831 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1832 = icmp ne i8* %1831, null
  br i1 %1832, label %1833, label %1834

; <label>:1833:                                   ; preds = %1830
  store i8 0, i8* %1831, align 1
  br label %1834

; <label>:1834:                                   ; preds = %1833, %1830
  %1835 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1835, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1836 = load i8*, i8** %26, align 8
  %1837 = icmp ne i8* %1836, null
  %.14.542 = select i1 %1837, i32 1, i32 0
  %1838 = select i1 %1837, i1 true, i1 false
  br i1 %1838, label %.lr.ph6.preheader.543, label %._crit_edge.550

.lr.ph6.preheader.543:                            ; preds = %1834
  br label %.lr.ph6.546

.lr.ph6.546:                                      ; preds = %.lr.ph6.546, %.lr.ph6.preheader.543
  %.15.544 = phi i32 [ %.1.545, %.lr.ph6.546 ], [ %.14.542, %.lr.ph6.preheader.543 ]
  %1839 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1840 = sext i32 %.15.544 to i64
  %1841 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1840
  store i8* %1839, i8** %1841, align 8
  call void @unroll_loop(i32 45)
  %1842 = sext i32 %.15.544 to i64
  %1843 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1842
  %1844 = load i8*, i8** %1843, align 8
  %1845 = icmp ne i8* %1844, null
  %1846 = add nsw i32 %.15.544, 1
  %1847 = icmp slt i32 %1846, 30
  %.1.545 = select i1 %1845, i32 %1846, i32 %.15.544
  %1848 = select i1 %1845, i1 %1847, i1 false
  br i1 %1848, label %.lr.ph6.546, label %._crit_edge.loopexit.548

._crit_edge.loopexit.548:                         ; preds = %.lr.ph6.546
  %.1.lcssa.ph.547 = phi i32 [ %.1.545, %.lr.ph6.546 ]
  br label %._crit_edge.550

._crit_edge.550:                                  ; preds = %._crit_edge.loopexit.548, %1834
  %.1.lcssa.549 = phi i32 [ %.14.542, %1834 ], [ %.1.lcssa.ph.547, %._crit_edge.loopexit.548 ]
  %1849 = load i8*, i8** %27, align 16
  %1850 = icmp ne i8* %1849, null
  br i1 %1850, label %91, label %1851

; <label>:1851:                                   ; preds = %._crit_edge.550
  call void @__loop_iteration_test___3()
  %1852 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1853 = icmp ne i8* %1852, null
  br i1 %1853, label %1854, label %.outer._crit_edge.loopexit.loopexit

; <label>:1854:                                   ; preds = %1851
  call void @unroll_loop(i32 44)
  %1855 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1856 = icmp ne i8* %1855, null
  br i1 %1856, label %1857, label %1858

; <label>:1857:                                   ; preds = %1854
  store i8 0, i8* %1855, align 1
  br label %1858

; <label>:1858:                                   ; preds = %1857, %1854
  %1859 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1860 = icmp ne i8* %1859, null
  br i1 %1860, label %1861, label %1862

; <label>:1861:                                   ; preds = %1858
  store i8 0, i8* %1859, align 1
  br label %1862

; <label>:1862:                                   ; preds = %1861, %1858
  %1863 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1864 = icmp ne i8* %1863, null
  br i1 %1864, label %1865, label %1866

; <label>:1865:                                   ; preds = %1862
  store i8 0, i8* %1863, align 1
  br label %1866

; <label>:1866:                                   ; preds = %1865, %1862
  %1867 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1868 = icmp ne i8* %1867, null
  br i1 %1868, label %1869, label %1870

; <label>:1869:                                   ; preds = %1866
  store i8 0, i8* %1867, align 1
  br label %1870

; <label>:1870:                                   ; preds = %1869, %1866
  %1871 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1871, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1872 = load i8*, i8** %26, align 8
  %1873 = icmp ne i8* %1872, null
  %.14.652 = select i1 %1873, i32 1, i32 0
  %1874 = select i1 %1873, i1 true, i1 false
  br i1 %1874, label %.lr.ph6.preheader.653, label %._crit_edge.660

.lr.ph6.preheader.653:                            ; preds = %1870
  br label %.lr.ph6.656

.lr.ph6.656:                                      ; preds = %.lr.ph6.656, %.lr.ph6.preheader.653
  %.15.654 = phi i32 [ %.1.655, %.lr.ph6.656 ], [ %.14.652, %.lr.ph6.preheader.653 ]
  %1875 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1876 = sext i32 %.15.654 to i64
  %1877 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1876
  store i8* %1875, i8** %1877, align 8
  call void @unroll_loop(i32 45)
  %1878 = sext i32 %.15.654 to i64
  %1879 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1878
  %1880 = load i8*, i8** %1879, align 8
  %1881 = icmp ne i8* %1880, null
  %1882 = add nsw i32 %.15.654, 1
  %1883 = icmp slt i32 %1882, 30
  %.1.655 = select i1 %1881, i32 %1882, i32 %.15.654
  %1884 = select i1 %1881, i1 %1883, i1 false
  br i1 %1884, label %.lr.ph6.656, label %._crit_edge.loopexit.658

._crit_edge.loopexit.658:                         ; preds = %.lr.ph6.656
  %.1.lcssa.ph.657 = phi i32 [ %.1.655, %.lr.ph6.656 ]
  br label %._crit_edge.660

._crit_edge.660:                                  ; preds = %._crit_edge.loopexit.658, %1870
  %.1.lcssa.659 = phi i32 [ %.14.652, %1870 ], [ %.1.lcssa.ph.657, %._crit_edge.loopexit.658 ]
  %1885 = load i8*, i8** %27, align 16
  %1886 = icmp ne i8* %1885, null
  br i1 %1886, label %91, label %1887

; <label>:1887:                                   ; preds = %._crit_edge.660
  call void @__loop_iteration_test___3()
  %1888 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1889 = icmp ne i8* %1888, null
  br i1 %1889, label %1890, label %.outer._crit_edge.loopexit.loopexit

; <label>:1890:                                   ; preds = %1887
  call void @unroll_loop(i32 44)
  %1891 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1892 = icmp ne i8* %1891, null
  br i1 %1892, label %1893, label %1894

; <label>:1893:                                   ; preds = %1890
  store i8 0, i8* %1891, align 1
  br label %1894

; <label>:1894:                                   ; preds = %1893, %1890
  %1895 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1896 = icmp ne i8* %1895, null
  br i1 %1896, label %1897, label %1898

; <label>:1897:                                   ; preds = %1894
  store i8 0, i8* %1895, align 1
  br label %1898

; <label>:1898:                                   ; preds = %1897, %1894
  %1899 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1900 = icmp ne i8* %1899, null
  br i1 %1900, label %1901, label %1902

; <label>:1901:                                   ; preds = %1898
  store i8 0, i8* %1899, align 1
  br label %1902

; <label>:1902:                                   ; preds = %1901, %1898
  %1903 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1904 = icmp ne i8* %1903, null
  br i1 %1904, label %1905, label %1906

; <label>:1905:                                   ; preds = %1902
  store i8 0, i8* %1903, align 1
  br label %1906

; <label>:1906:                                   ; preds = %1905, %1902
  %1907 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1907, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1908 = load i8*, i8** %26, align 8
  %1909 = icmp ne i8* %1908, null
  %.14.762 = select i1 %1909, i32 1, i32 0
  %1910 = select i1 %1909, i1 true, i1 false
  br i1 %1910, label %.lr.ph6.preheader.763, label %._crit_edge.770

.lr.ph6.preheader.763:                            ; preds = %1906
  br label %.lr.ph6.766

.lr.ph6.766:                                      ; preds = %.lr.ph6.766, %.lr.ph6.preheader.763
  %.15.764 = phi i32 [ %.1.765, %.lr.ph6.766 ], [ %.14.762, %.lr.ph6.preheader.763 ]
  %1911 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1912 = sext i32 %.15.764 to i64
  %1913 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1912
  store i8* %1911, i8** %1913, align 8
  call void @unroll_loop(i32 45)
  %1914 = sext i32 %.15.764 to i64
  %1915 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1914
  %1916 = load i8*, i8** %1915, align 8
  %1917 = icmp ne i8* %1916, null
  %1918 = add nsw i32 %.15.764, 1
  %1919 = icmp slt i32 %1918, 30
  %.1.765 = select i1 %1917, i32 %1918, i32 %.15.764
  %1920 = select i1 %1917, i1 %1919, i1 false
  br i1 %1920, label %.lr.ph6.766, label %._crit_edge.loopexit.768

._crit_edge.loopexit.768:                         ; preds = %.lr.ph6.766
  %.1.lcssa.ph.767 = phi i32 [ %.1.765, %.lr.ph6.766 ]
  br label %._crit_edge.770

._crit_edge.770:                                  ; preds = %._crit_edge.loopexit.768, %1906
  %.1.lcssa.769 = phi i32 [ %.14.762, %1906 ], [ %.1.lcssa.ph.767, %._crit_edge.loopexit.768 ]
  %1921 = load i8*, i8** %27, align 16
  %1922 = icmp ne i8* %1921, null
  br i1 %1922, label %91, label %1923

; <label>:1923:                                   ; preds = %._crit_edge.770
  call void @__loop_iteration_test___3()
  %1924 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit

.lr.ph6.13:                                       ; preds = %.lr.ph6
  call void @__loop_iteration_test___4()
  %1925 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1926 = sext i32 2 to i64
  %1927 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i8** %1927, align 8
  call void @unroll_loop(i32 45)
  %1928 = sext i32 2 to i64
  %1929 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %1930 = load i8*, i8** %1929, align 8
  %1931 = icmp ne i64 10000601, 0
  %1932 = icmp ne i8* %1930, null
  %1933 = add nsw i32 2, 1
  %1934 = icmp slt i32 3, 30
  %.1.12 = select i1 true, i32 3, i32 2
  %1935 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.26, label %._crit_edge.loopexit

.lr.ph6.26:                                       ; preds = %.lr.ph6.13
  call void @__loop_iteration_test___4()
  %1936 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1937 = sext i32 3 to i64
  %1938 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @26, i32 0, i32 0), i8** %1938, align 8
  call void @unroll_loop(i32 45)
  %1939 = sext i32 3 to i64
  %1940 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %1941 = load i8*, i8** %1940, align 8
  %1942 = icmp ne i64 10000607, 0
  %1943 = icmp ne i8* %1941, null
  %1944 = add nsw i32 3, 1
  %1945 = icmp slt i32 4, 30
  %.1.25 = select i1 true, i32 4, i32 3
  %1946 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.39, label %._crit_edge.loopexit

.lr.ph6.39:                                       ; preds = %.lr.ph6.26
  call void @__loop_iteration_test___4()
  %1947 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1948 = sext i32 4 to i64
  %1949 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  store i8* null, i8** %1949, align 8
  call void @unroll_loop(i32 45)
  %1950 = sext i32 4 to i64
  %1951 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  %1952 = load i8*, i8** %1951, align 8
  %1953 = icmp ne i64 0, 0
  %1954 = icmp ne i8* null, null
  %1955 = add nsw i32 4, 1
  %1956 = icmp slt i32 5, 30
  %.1.38 = select i1 false, i32 5, i32 4
  %1957 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.412, label %._crit_edge.loopexit

.lr.ph6.412:                                      ; preds = %.lr.ph6.39
  call void @__loop_iteration_test___4()
  %1958 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1959 = sext i32 4 to i64
  %1960 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1959
  store i8* %1958, i8** %1960, align 8
  call void @unroll_loop(i32 45)
  %1961 = sext i32 4 to i64
  %1962 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1961
  %1963 = load i8*, i8** %1962, align 8
  %1964 = icmp ne i8* %1963, null
  %1965 = add nsw i32 4, 1
  %1966 = icmp slt i32 %1965, 30
  %.1.411 = select i1 %1964, i32 %1965, i32 4
  %1967 = select i1 %1964, i1 %1966, i1 false
  br i1 %1967, label %.lr.ph6.515, label %._crit_edge.loopexit

.lr.ph6.515:                                      ; preds = %.lr.ph6.412
  call void @__loop_iteration_test___4()
  %1968 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1969 = sext i32 %.1.411 to i64
  %1970 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1969
  store i8* %1968, i8** %1970, align 8
  call void @unroll_loop(i32 45)
  %1971 = sext i32 %.1.411 to i64
  %1972 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1971
  %1973 = load i8*, i8** %1972, align 8
  %1974 = icmp ne i8* %1973, null
  %1975 = add nsw i32 %.1.411, 1
  %1976 = icmp slt i32 %1975, 30
  %.1.514 = select i1 %1974, i32 %1975, i32 %.1.411
  %1977 = select i1 %1974, i1 %1976, i1 false
  br i1 %1977, label %.lr.ph6.618, label %._crit_edge.loopexit

.lr.ph6.618:                                      ; preds = %.lr.ph6.515
  call void @__loop_iteration_test___4()
  %1978 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1979 = sext i32 %.1.514 to i64
  %1980 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1979
  store i8* %1978, i8** %1980, align 8
  call void @unroll_loop(i32 45)
  %1981 = sext i32 %.1.514 to i64
  %1982 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1981
  %1983 = load i8*, i8** %1982, align 8
  %1984 = icmp ne i8* %1983, null
  %1985 = add nsw i32 %.1.514, 1
  %1986 = icmp slt i32 %1985, 30
  %.1.617 = select i1 %1984, i32 %1985, i32 %.1.514
  %1987 = select i1 %1984, i1 %1986, i1 false
  br i1 %1987, label %.lr.ph6.721, label %._crit_edge.loopexit

.lr.ph6.721:                                      ; preds = %.lr.ph6.618
  call void @__loop_iteration_test___4()
  %1988 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1989 = sext i32 %.1.617 to i64
  %1990 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1989
  store i8* %1988, i8** %1990, align 8
  call void @unroll_loop(i32 45)
  %1991 = sext i32 %.1.617 to i64
  %1992 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1991
  %1993 = load i8*, i8** %1992, align 8
  %1994 = icmp ne i8* %1993, null
  %1995 = add nsw i32 %.1.617, 1
  %1996 = icmp slt i32 %1995, 30
  %.1.720 = select i1 %1994, i32 %1995, i32 %.1.617
  %1997 = select i1 %1994, i1 %1996, i1 false
  br i1 %1997, label %.lr.ph6.8, label %._crit_edge.loopexit

.lr.ph6.8:                                        ; preds = %.lr.ph6.721
  call void @__loop_iteration_test___4()
  %1998 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1999 = sext i32 %.1.720 to i64
  %2000 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1999
  store i8* %1998, i8** %2000, align 8
  call void @unroll_loop(i32 45)
  %2001 = sext i32 %.1.720 to i64
  %2002 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2001
  %2003 = load i8*, i8** %2002, align 8
  %2004 = icmp ne i8* %2003, null
  %2005 = add nsw i32 %.1.720, 1
  %2006 = icmp slt i32 %2005, 30
  %.1.8 = select i1 %2004, i32 %2005, i32 %.1.720
  %2007 = select i1 %2004, i1 %2006, i1 false
  br i1 %2007, label %.lr.ph6.9, label %._crit_edge.loopexit

.lr.ph6.9:                                        ; preds = %.lr.ph6.8
  call void @__loop_iteration_test___4()
  %2008 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2009 = sext i32 %.1.8 to i64
  %2010 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2009
  store i8* %2008, i8** %2010, align 8
  call void @unroll_loop(i32 45)
  %2011 = sext i32 %.1.8 to i64
  %2012 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2011
  %2013 = load i8*, i8** %2012, align 8
  %2014 = icmp ne i8* %2013, null
  %2015 = add nsw i32 %.1.8, 1
  %2016 = icmp slt i32 %2015, 30
  %.1.9 = select i1 %2014, i32 %2015, i32 %.1.8
  %2017 = select i1 %2014, i1 %2016, i1 false
  br i1 %2017, label %.lr.ph6.10, label %._crit_edge.loopexit

.lr.ph6.10:                                       ; preds = %.lr.ph6.9
  call void @__loop_iteration_test___4()
  %2018 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2019 = sext i32 %.1.9 to i64
  %2020 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2019
  store i8* %2018, i8** %2020, align 8
  call void @unroll_loop(i32 45)
  %2021 = sext i32 %.1.9 to i64
  %2022 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2021
  %2023 = load i8*, i8** %2022, align 8
  %2024 = icmp ne i8* %2023, null
  %2025 = add nsw i32 %.1.9, 1
  %2026 = icmp slt i32 %2025, 30
  %.1.10 = select i1 %2024, i32 %2025, i32 %.1.9
  %2027 = select i1 %2024, i1 %2026, i1 false
  br i1 %2027, label %.lr.ph6.11, label %._crit_edge.loopexit

.lr.ph6.11:                                       ; preds = %.lr.ph6.10
  call void @__loop_iteration_test___4()
  %2028 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2029 = sext i32 %.1.10 to i64
  %2030 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2029
  store i8* %2028, i8** %2030, align 8
  call void @unroll_loop(i32 45)
  %2031 = sext i32 %.1.10 to i64
  %2032 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2031
  %2033 = load i8*, i8** %2032, align 8
  %2034 = icmp ne i8* %2033, null
  %2035 = add nsw i32 %.1.10, 1
  %2036 = icmp slt i32 %2035, 30
  %.1.11 = select i1 %2034, i32 %2035, i32 %.1.10
  %2037 = select i1 %2034, i1 %2036, i1 false
  br i1 %2037, label %.lr.ph6.12, label %._crit_edge.loopexit

.lr.ph6.12:                                       ; preds = %.lr.ph6.11
  call void @__loop_iteration_test___4()
  %2038 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2039 = sext i32 %.1.11 to i64
  %2040 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2039
  store i8* %2038, i8** %2040, align 8
  call void @unroll_loop(i32 45)
  %2041 = sext i32 %.1.11 to i64
  %2042 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2041
  %2043 = load i8*, i8** %2042, align 8
  %2044 = icmp ne i8* %2043, null
  %2045 = add nsw i32 %.1.11, 1
  %2046 = icmp slt i32 %2045, 30
  %.1.1222 = select i1 %2044, i32 %2045, i32 %.1.11
  %2047 = select i1 %2044, i1 %2046, i1 false
  br i1 %2047, label %.lr.ph6.1323, label %._crit_edge.loopexit

.lr.ph6.1323:                                     ; preds = %.lr.ph6.12
  call void @__loop_iteration_test___4()
  %2048 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2049 = sext i32 %.1.1222 to i64
  %2050 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2049
  store i8* %2048, i8** %2050, align 8
  call void @unroll_loop(i32 45)
  %2051 = sext i32 %.1.1222 to i64
  %2052 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2051
  %2053 = load i8*, i8** %2052, align 8
  %2054 = icmp ne i8* %2053, null
  %2055 = add nsw i32 %.1.1222, 1
  %2056 = icmp slt i32 %2055, 30
  %.1.13 = select i1 %2054, i32 %2055, i32 %.1.1222
  %2057 = select i1 %2054, i1 %2056, i1 false
  br i1 %2057, label %.lr.ph6.14, label %._crit_edge.loopexit

.lr.ph6.14:                                       ; preds = %.lr.ph6.1323
  call void @__loop_iteration_test___4()
  %2058 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2059 = sext i32 %.1.13 to i64
  %2060 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2059
  store i8* %2058, i8** %2060, align 8
  call void @unroll_loop(i32 45)
  %2061 = sext i32 %.1.13 to i64
  %2062 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2061
  %2063 = load i8*, i8** %2062, align 8
  %2064 = icmp ne i8* %2063, null
  %2065 = add nsw i32 %.1.13, 1
  %2066 = icmp slt i32 %2065, 30
  %.1.14 = select i1 %2064, i32 %2065, i32 %.1.13
  %2067 = select i1 %2064, i1 %2066, i1 false
  br i1 %2067, label %.lr.ph6.15, label %._crit_edge.loopexit

.lr.ph6.15:                                       ; preds = %.lr.ph6.14
  call void @__loop_iteration_test___4()
  %2068 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2069 = sext i32 %.1.14 to i64
  %2070 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2069
  store i8* %2068, i8** %2070, align 8
  call void @unroll_loop(i32 45)
  %2071 = sext i32 %.1.14 to i64
  %2072 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2071
  %2073 = load i8*, i8** %2072, align 8
  %2074 = icmp ne i8* %2073, null
  %2075 = add nsw i32 %.1.14, 1
  %2076 = icmp slt i32 %2075, 30
  %.1.1525 = select i1 %2074, i32 %2075, i32 %.1.14
  %2077 = select i1 %2074, i1 %2076, i1 false
  br i1 %2077, label %.lr.ph6.1626, label %._crit_edge.loopexit

.lr.ph6.1626:                                     ; preds = %.lr.ph6.15
  call void @__loop_iteration_test___4()
  %2078 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2079 = sext i32 %.1.1525 to i64
  %2080 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2079
  store i8* %2078, i8** %2080, align 8
  call void @unroll_loop(i32 45)
  %2081 = sext i32 %.1.1525 to i64
  %2082 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2081
  %2083 = load i8*, i8** %2082, align 8
  %2084 = icmp ne i8* %2083, null
  %2085 = add nsw i32 %.1.1525, 1
  %2086 = icmp slt i32 %2085, 30
  %.1.16 = select i1 %2084, i32 %2085, i32 %.1.1525
  %2087 = select i1 %2084, i1 %2086, i1 false
  br i1 %2087, label %.lr.ph6.17, label %._crit_edge.loopexit

.lr.ph6.17:                                       ; preds = %.lr.ph6.1626
  call void @__loop_iteration_test___4()
  %2088 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2089 = sext i32 %.1.16 to i64
  %2090 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2089
  store i8* %2088, i8** %2090, align 8
  call void @unroll_loop(i32 45)
  %2091 = sext i32 %.1.16 to i64
  %2092 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2091
  %2093 = load i8*, i8** %2092, align 8
  %2094 = icmp ne i8* %2093, null
  %2095 = add nsw i32 %.1.16, 1
  %2096 = icmp slt i32 %2095, 30
  %.1.17 = select i1 %2094, i32 %2095, i32 %.1.16
  %2097 = select i1 %2094, i1 %2096, i1 false
  br i1 %2097, label %.lr.ph6.18, label %._crit_edge.loopexit

.lr.ph6.18:                                       ; preds = %.lr.ph6.17
  call void @__loop_iteration_test___4()
  %2098 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2099 = sext i32 %.1.17 to i64
  %2100 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2099
  store i8* %2098, i8** %2100, align 8
  call void @unroll_loop(i32 45)
  %2101 = sext i32 %.1.17 to i64
  %2102 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2101
  %2103 = load i8*, i8** %2102, align 8
  %2104 = icmp ne i8* %2103, null
  %2105 = add nsw i32 %.1.17, 1
  %2106 = icmp slt i32 %2105, 30
  %.1.18 = select i1 %2104, i32 %2105, i32 %.1.17
  %2107 = select i1 %2104, i1 %2106, i1 false
  br i1 %2107, label %.lr.ph6.19, label %._crit_edge.loopexit

.lr.ph6.19:                                       ; preds = %.lr.ph6.18
  call void @__loop_iteration_test___4()
  %2108 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2109 = sext i32 %.1.18 to i64
  %2110 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2109
  store i8* %2108, i8** %2110, align 8
  call void @unroll_loop(i32 45)
  %2111 = sext i32 %.1.18 to i64
  %2112 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2111
  %2113 = load i8*, i8** %2112, align 8
  %2114 = icmp ne i8* %2113, null
  %2115 = add nsw i32 %.1.18, 1
  %2116 = icmp slt i32 %2115, 30
  %.1.19 = select i1 %2114, i32 %2115, i32 %.1.18
  br label %._crit_edge.loopexit

; <label>:2117:                                   ; preds = %287
  call void @unroll_loop(i32 44)
  %2118 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2119 = icmp ne i8* %2118, null
  br i1 %2119, label %2120, label %2121

; <label>:2120:                                   ; preds = %2117
  store i8 0, i8* %2118, align 1
  br label %2121

; <label>:2121:                                   ; preds = %2120, %2117
  %2122 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2123 = icmp ne i8* %2122, null
  br i1 %2123, label %2124, label %2125

; <label>:2124:                                   ; preds = %2121
  store i8 0, i8* %2122, align 1
  br label %2125

; <label>:2125:                                   ; preds = %2124, %2121
  %2126 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2127 = icmp ne i8* %2126, null
  br i1 %2127, label %2128, label %2129

; <label>:2128:                                   ; preds = %2125
  store i8 0, i8* %2126, align 1
  br label %2129

; <label>:2129:                                   ; preds = %2128, %2125
  %2130 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2131 = icmp ne i8* %2130, null
  br i1 %2131, label %2132, label %2133

; <label>:2132:                                   ; preds = %2129
  store i8 0, i8* %2130, align 1
  br label %2133

; <label>:2133:                                   ; preds = %2132, %2129
  %2134 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2134, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2135 = load i8*, i8** %26, align 8
  %2136 = icmp ne i8* %2135, null
  %.14.1.1 = select i1 %2136, i32 1, i32 0
  %2137 = select i1 %2136, i1 true, i1 false
  br i1 %2137, label %.lr.ph6.preheader.1.1, label %._crit_edge.1.1

.lr.ph6.preheader.1.1:                            ; preds = %2133
  br label %.lr.ph6.1.1

.lr.ph6.1.1:                                      ; preds = %.lr.ph6.1.1, %.lr.ph6.preheader.1.1
  %.15.1.1 = phi i32 [ %.1.1.1, %.lr.ph6.1.1 ], [ %.14.1.1, %.lr.ph6.preheader.1.1 ]
  %2138 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2139 = sext i32 %.15.1.1 to i64
  %2140 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2139
  store i8* %2138, i8** %2140, align 8
  call void @unroll_loop(i32 45)
  %2141 = sext i32 %.15.1.1 to i64
  %2142 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2141
  %2143 = load i8*, i8** %2142, align 8
  %2144 = icmp ne i8* %2143, null
  %2145 = add nsw i32 %.15.1.1, 1
  %2146 = icmp slt i32 %2145, 30
  %.1.1.1 = select i1 %2144, i32 %2145, i32 %.15.1.1
  %2147 = select i1 %2144, i1 %2146, i1 false
  br i1 %2147, label %.lr.ph6.1.1, label %._crit_edge.loopexit.1.1

._crit_edge.loopexit.1.1:                         ; preds = %.lr.ph6.1.1
  %.1.lcssa.ph.1.1 = phi i32 [ %.1.1.1, %.lr.ph6.1.1 ]
  br label %._crit_edge.1.1

._crit_edge.1.1:                                  ; preds = %._crit_edge.loopexit.1.1, %2133
  %.1.lcssa.1.1 = phi i32 [ %.14.1.1, %2133 ], [ %.1.lcssa.ph.1.1, %._crit_edge.loopexit.1.1 ]
  %2148 = load i8*, i8** %27, align 16
  %2149 = icmp ne i8* %2148, null
  br i1 %2149, label %290, label %2150

; <label>:2150:                                   ; preds = %._crit_edge.1.1
  call void @__loop_iteration_test___6()
  %2151 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2152 = icmp ne i8* %2151, null
  br i1 %2152, label %2153, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2153:                                   ; preds = %2150
  call void @unroll_loop(i32 44)
  %2154 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2155 = icmp ne i8* %2154, null
  br i1 %2155, label %2156, label %2157

; <label>:2156:                                   ; preds = %2153
  store i8 0, i8* %2154, align 1
  br label %2157

; <label>:2157:                                   ; preds = %2156, %2153
  %2158 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2159 = icmp ne i8* %2158, null
  br i1 %2159, label %2160, label %2161

; <label>:2160:                                   ; preds = %2157
  store i8 0, i8* %2158, align 1
  br label %2161

; <label>:2161:                                   ; preds = %2160, %2157
  %2162 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2163 = icmp ne i8* %2162, null
  br i1 %2163, label %2164, label %2165

; <label>:2164:                                   ; preds = %2161
  store i8 0, i8* %2162, align 1
  br label %2165

; <label>:2165:                                   ; preds = %2164, %2161
  %2166 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2167 = icmp ne i8* %2166, null
  br i1 %2167, label %2168, label %2169

; <label>:2168:                                   ; preds = %2165
  store i8 0, i8* %2166, align 1
  br label %2169

; <label>:2169:                                   ; preds = %2168, %2165
  %2170 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2170, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2171 = load i8*, i8** %26, align 8
  %2172 = icmp ne i8* %2171, null
  %.14.1.2 = select i1 %2172, i32 1, i32 0
  %2173 = select i1 %2172, i1 true, i1 false
  br i1 %2173, label %.lr.ph6.preheader.1.2, label %._crit_edge.1.2

.lr.ph6.preheader.1.2:                            ; preds = %2169
  br label %.lr.ph6.1.2

.lr.ph6.1.2:                                      ; preds = %.lr.ph6.1.2, %.lr.ph6.preheader.1.2
  %.15.1.2 = phi i32 [ %.1.1.2, %.lr.ph6.1.2 ], [ %.14.1.2, %.lr.ph6.preheader.1.2 ]
  %2174 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2175 = sext i32 %.15.1.2 to i64
  %2176 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2175
  store i8* %2174, i8** %2176, align 8
  call void @unroll_loop(i32 45)
  %2177 = sext i32 %.15.1.2 to i64
  %2178 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2177
  %2179 = load i8*, i8** %2178, align 8
  %2180 = icmp ne i8* %2179, null
  %2181 = add nsw i32 %.15.1.2, 1
  %2182 = icmp slt i32 %2181, 30
  %.1.1.2 = select i1 %2180, i32 %2181, i32 %.15.1.2
  %2183 = select i1 %2180, i1 %2182, i1 false
  br i1 %2183, label %.lr.ph6.1.2, label %._crit_edge.loopexit.1.2

._crit_edge.loopexit.1.2:                         ; preds = %.lr.ph6.1.2
  %.1.lcssa.ph.1.2 = phi i32 [ %.1.1.2, %.lr.ph6.1.2 ]
  br label %._crit_edge.1.2

._crit_edge.1.2:                                  ; preds = %._crit_edge.loopexit.1.2, %2169
  %.1.lcssa.1.2 = phi i32 [ %.14.1.2, %2169 ], [ %.1.lcssa.ph.1.2, %._crit_edge.loopexit.1.2 ]
  %2184 = load i8*, i8** %27, align 16
  %2185 = icmp ne i8* %2184, null
  br i1 %2185, label %290, label %2186

; <label>:2186:                                   ; preds = %._crit_edge.1.2
  call void @__loop_iteration_test___6()
  %2187 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2188 = icmp ne i8* %2187, null
  br i1 %2188, label %2189, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2189:                                   ; preds = %2186
  call void @unroll_loop(i32 44)
  %2190 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2191 = icmp ne i8* %2190, null
  br i1 %2191, label %2192, label %2193

; <label>:2192:                                   ; preds = %2189
  store i8 0, i8* %2190, align 1
  br label %2193

; <label>:2193:                                   ; preds = %2192, %2189
  %2194 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2195 = icmp ne i8* %2194, null
  br i1 %2195, label %2196, label %2197

; <label>:2196:                                   ; preds = %2193
  store i8 0, i8* %2194, align 1
  br label %2197

; <label>:2197:                                   ; preds = %2196, %2193
  %2198 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2199 = icmp ne i8* %2198, null
  br i1 %2199, label %2200, label %2201

; <label>:2200:                                   ; preds = %2197
  store i8 0, i8* %2198, align 1
  br label %2201

; <label>:2201:                                   ; preds = %2200, %2197
  %2202 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2203 = icmp ne i8* %2202, null
  br i1 %2203, label %2204, label %2205

; <label>:2204:                                   ; preds = %2201
  store i8 0, i8* %2202, align 1
  br label %2205

; <label>:2205:                                   ; preds = %2204, %2201
  %2206 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2206, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2207 = load i8*, i8** %26, align 8
  %2208 = icmp ne i8* %2207, null
  %.14.1.3 = select i1 %2208, i32 1, i32 0
  %2209 = select i1 %2208, i1 true, i1 false
  br i1 %2209, label %.lr.ph6.preheader.1.3, label %._crit_edge.1.3

.lr.ph6.preheader.1.3:                            ; preds = %2205
  br label %.lr.ph6.1.3

.lr.ph6.1.3:                                      ; preds = %.lr.ph6.1.3, %.lr.ph6.preheader.1.3
  %.15.1.3 = phi i32 [ %.1.1.3, %.lr.ph6.1.3 ], [ %.14.1.3, %.lr.ph6.preheader.1.3 ]
  %2210 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2211 = sext i32 %.15.1.3 to i64
  %2212 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2211
  store i8* %2210, i8** %2212, align 8
  call void @unroll_loop(i32 45)
  %2213 = sext i32 %.15.1.3 to i64
  %2214 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2213
  %2215 = load i8*, i8** %2214, align 8
  %2216 = icmp ne i8* %2215, null
  %2217 = add nsw i32 %.15.1.3, 1
  %2218 = icmp slt i32 %2217, 30
  %.1.1.3 = select i1 %2216, i32 %2217, i32 %.15.1.3
  %2219 = select i1 %2216, i1 %2218, i1 false
  br i1 %2219, label %.lr.ph6.1.3, label %._crit_edge.loopexit.1.3

._crit_edge.loopexit.1.3:                         ; preds = %.lr.ph6.1.3
  %.1.lcssa.ph.1.3 = phi i32 [ %.1.1.3, %.lr.ph6.1.3 ]
  br label %._crit_edge.1.3

._crit_edge.1.3:                                  ; preds = %._crit_edge.loopexit.1.3, %2205
  %.1.lcssa.1.3 = phi i32 [ %.14.1.3, %2205 ], [ %.1.lcssa.ph.1.3, %._crit_edge.loopexit.1.3 ]
  %2220 = load i8*, i8** %27, align 16
  %2221 = icmp ne i8* %2220, null
  br i1 %2221, label %290, label %2222

; <label>:2222:                                   ; preds = %._crit_edge.1.3
  call void @__loop_iteration_test___6()
  %2223 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2224 = icmp ne i8* %2223, null
  br i1 %2224, label %2225, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2225:                                   ; preds = %2222
  call void @unroll_loop(i32 44)
  %2226 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2227 = icmp ne i8* %2226, null
  br i1 %2227, label %2228, label %2229

; <label>:2228:                                   ; preds = %2225
  store i8 0, i8* %2226, align 1
  br label %2229

; <label>:2229:                                   ; preds = %2228, %2225
  %2230 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2231 = icmp ne i8* %2230, null
  br i1 %2231, label %2232, label %2233

; <label>:2232:                                   ; preds = %2229
  store i8 0, i8* %2230, align 1
  br label %2233

; <label>:2233:                                   ; preds = %2232, %2229
  %2234 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2235 = icmp ne i8* %2234, null
  br i1 %2235, label %2236, label %2237

; <label>:2236:                                   ; preds = %2233
  store i8 0, i8* %2234, align 1
  br label %2237

; <label>:2237:                                   ; preds = %2236, %2233
  %2238 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2239 = icmp ne i8* %2238, null
  br i1 %2239, label %2240, label %2241

; <label>:2240:                                   ; preds = %2237
  store i8 0, i8* %2238, align 1
  br label %2241

; <label>:2241:                                   ; preds = %2240, %2237
  %2242 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2242, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2243 = load i8*, i8** %26, align 8
  %2244 = icmp ne i8* %2243, null
  %.14.1.4 = select i1 %2244, i32 1, i32 0
  %2245 = select i1 %2244, i1 true, i1 false
  br i1 %2245, label %.lr.ph6.preheader.1.4, label %._crit_edge.1.4

.lr.ph6.preheader.1.4:                            ; preds = %2241
  br label %.lr.ph6.1.4

.lr.ph6.1.4:                                      ; preds = %.lr.ph6.1.4, %.lr.ph6.preheader.1.4
  %.15.1.4 = phi i32 [ %.1.1.4, %.lr.ph6.1.4 ], [ %.14.1.4, %.lr.ph6.preheader.1.4 ]
  %2246 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2247 = sext i32 %.15.1.4 to i64
  %2248 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2247
  store i8* %2246, i8** %2248, align 8
  call void @unroll_loop(i32 45)
  %2249 = sext i32 %.15.1.4 to i64
  %2250 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2249
  %2251 = load i8*, i8** %2250, align 8
  %2252 = icmp ne i8* %2251, null
  %2253 = add nsw i32 %.15.1.4, 1
  %2254 = icmp slt i32 %2253, 30
  %.1.1.4 = select i1 %2252, i32 %2253, i32 %.15.1.4
  %2255 = select i1 %2252, i1 %2254, i1 false
  br i1 %2255, label %.lr.ph6.1.4, label %._crit_edge.loopexit.1.4

._crit_edge.loopexit.1.4:                         ; preds = %.lr.ph6.1.4
  %.1.lcssa.ph.1.4 = phi i32 [ %.1.1.4, %.lr.ph6.1.4 ]
  br label %._crit_edge.1.4

._crit_edge.1.4:                                  ; preds = %._crit_edge.loopexit.1.4, %2241
  %.1.lcssa.1.4 = phi i32 [ %.14.1.4, %2241 ], [ %.1.lcssa.ph.1.4, %._crit_edge.loopexit.1.4 ]
  %2256 = load i8*, i8** %27, align 16
  %2257 = icmp ne i8* %2256, null
  br i1 %2257, label %290, label %2258

; <label>:2258:                                   ; preds = %._crit_edge.1.4
  call void @__loop_iteration_test___6()
  %2259 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2260 = icmp ne i8* %2259, null
  br i1 %2260, label %2261, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2261:                                   ; preds = %2258
  call void @unroll_loop(i32 44)
  %2262 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2263 = icmp ne i8* %2262, null
  br i1 %2263, label %2264, label %2265

; <label>:2264:                                   ; preds = %2261
  store i8 0, i8* %2262, align 1
  br label %2265

; <label>:2265:                                   ; preds = %2264, %2261
  %2266 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2267 = icmp ne i8* %2266, null
  br i1 %2267, label %2268, label %2269

; <label>:2268:                                   ; preds = %2265
  store i8 0, i8* %2266, align 1
  br label %2269

; <label>:2269:                                   ; preds = %2268, %2265
  %2270 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2271 = icmp ne i8* %2270, null
  br i1 %2271, label %2272, label %2273

; <label>:2272:                                   ; preds = %2269
  store i8 0, i8* %2270, align 1
  br label %2273

; <label>:2273:                                   ; preds = %2272, %2269
  %2274 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2275 = icmp ne i8* %2274, null
  br i1 %2275, label %2276, label %2277

; <label>:2276:                                   ; preds = %2273
  store i8 0, i8* %2274, align 1
  br label %2277

; <label>:2277:                                   ; preds = %2276, %2273
  %2278 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2278, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2279 = load i8*, i8** %26, align 8
  %2280 = icmp ne i8* %2279, null
  %.14.1.5 = select i1 %2280, i32 1, i32 0
  %2281 = select i1 %2280, i1 true, i1 false
  br i1 %2281, label %.lr.ph6.preheader.1.5, label %._crit_edge.1.5

.lr.ph6.preheader.1.5:                            ; preds = %2277
  br label %.lr.ph6.1.5

.lr.ph6.1.5:                                      ; preds = %.lr.ph6.1.5, %.lr.ph6.preheader.1.5
  %.15.1.5 = phi i32 [ %.1.1.5, %.lr.ph6.1.5 ], [ %.14.1.5, %.lr.ph6.preheader.1.5 ]
  %2282 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2283 = sext i32 %.15.1.5 to i64
  %2284 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2283
  store i8* %2282, i8** %2284, align 8
  call void @unroll_loop(i32 45)
  %2285 = sext i32 %.15.1.5 to i64
  %2286 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2285
  %2287 = load i8*, i8** %2286, align 8
  %2288 = icmp ne i8* %2287, null
  %2289 = add nsw i32 %.15.1.5, 1
  %2290 = icmp slt i32 %2289, 30
  %.1.1.5 = select i1 %2288, i32 %2289, i32 %.15.1.5
  %2291 = select i1 %2288, i1 %2290, i1 false
  br i1 %2291, label %.lr.ph6.1.5, label %._crit_edge.loopexit.1.5

._crit_edge.loopexit.1.5:                         ; preds = %.lr.ph6.1.5
  %.1.lcssa.ph.1.5 = phi i32 [ %.1.1.5, %.lr.ph6.1.5 ]
  br label %._crit_edge.1.5

._crit_edge.1.5:                                  ; preds = %._crit_edge.loopexit.1.5, %2277
  %.1.lcssa.1.5 = phi i32 [ %.14.1.5, %2277 ], [ %.1.lcssa.ph.1.5, %._crit_edge.loopexit.1.5 ]
  %2292 = load i8*, i8** %27, align 16
  %2293 = icmp ne i8* %2292, null
  br i1 %2293, label %290, label %2294

; <label>:2294:                                   ; preds = %._crit_edge.1.5
  call void @__loop_iteration_test___6()
  %2295 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2296 = icmp ne i8* %2295, null
  br i1 %2296, label %2297, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2297:                                   ; preds = %2294
  call void @unroll_loop(i32 44)
  %2298 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2299 = icmp ne i8* %2298, null
  br i1 %2299, label %2300, label %2301

; <label>:2300:                                   ; preds = %2297
  store i8 0, i8* %2298, align 1
  br label %2301

; <label>:2301:                                   ; preds = %2300, %2297
  %2302 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2303 = icmp ne i8* %2302, null
  br i1 %2303, label %2304, label %2305

; <label>:2304:                                   ; preds = %2301
  store i8 0, i8* %2302, align 1
  br label %2305

; <label>:2305:                                   ; preds = %2304, %2301
  %2306 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2307 = icmp ne i8* %2306, null
  br i1 %2307, label %2308, label %2309

; <label>:2308:                                   ; preds = %2305
  store i8 0, i8* %2306, align 1
  br label %2309

; <label>:2309:                                   ; preds = %2308, %2305
  %2310 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2311 = icmp ne i8* %2310, null
  br i1 %2311, label %2312, label %2313

; <label>:2312:                                   ; preds = %2309
  store i8 0, i8* %2310, align 1
  br label %2313

; <label>:2313:                                   ; preds = %2312, %2309
  %2314 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2314, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2315 = load i8*, i8** %26, align 8
  %2316 = icmp ne i8* %2315, null
  %.14.1.6 = select i1 %2316, i32 1, i32 0
  %2317 = select i1 %2316, i1 true, i1 false
  br i1 %2317, label %.lr.ph6.preheader.1.6, label %._crit_edge.1.6

.lr.ph6.preheader.1.6:                            ; preds = %2313
  br label %.lr.ph6.1.6

.lr.ph6.1.6:                                      ; preds = %.lr.ph6.1.6, %.lr.ph6.preheader.1.6
  %.15.1.6 = phi i32 [ %.1.1.6, %.lr.ph6.1.6 ], [ %.14.1.6, %.lr.ph6.preheader.1.6 ]
  %2318 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2319 = sext i32 %.15.1.6 to i64
  %2320 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2319
  store i8* %2318, i8** %2320, align 8
  call void @unroll_loop(i32 45)
  %2321 = sext i32 %.15.1.6 to i64
  %2322 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2321
  %2323 = load i8*, i8** %2322, align 8
  %2324 = icmp ne i8* %2323, null
  %2325 = add nsw i32 %.15.1.6, 1
  %2326 = icmp slt i32 %2325, 30
  %.1.1.6 = select i1 %2324, i32 %2325, i32 %.15.1.6
  %2327 = select i1 %2324, i1 %2326, i1 false
  br i1 %2327, label %.lr.ph6.1.6, label %._crit_edge.loopexit.1.6

._crit_edge.loopexit.1.6:                         ; preds = %.lr.ph6.1.6
  %.1.lcssa.ph.1.6 = phi i32 [ %.1.1.6, %.lr.ph6.1.6 ]
  br label %._crit_edge.1.6

._crit_edge.1.6:                                  ; preds = %._crit_edge.loopexit.1.6, %2313
  %.1.lcssa.1.6 = phi i32 [ %.14.1.6, %2313 ], [ %.1.lcssa.ph.1.6, %._crit_edge.loopexit.1.6 ]
  %2328 = load i8*, i8** %27, align 16
  %2329 = icmp ne i8* %2328, null
  br i1 %2329, label %290, label %2330

; <label>:2330:                                   ; preds = %._crit_edge.1.6
  call void @__loop_iteration_test___6()
  %2331 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2332 = icmp ne i8* %2331, null
  br i1 %2332, label %2333, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2333:                                   ; preds = %2330
  call void @unroll_loop(i32 44)
  %2334 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2335 = icmp ne i8* %2334, null
  br i1 %2335, label %2336, label %2337

; <label>:2336:                                   ; preds = %2333
  store i8 0, i8* %2334, align 1
  br label %2337

; <label>:2337:                                   ; preds = %2336, %2333
  %2338 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2339 = icmp ne i8* %2338, null
  br i1 %2339, label %2340, label %2341

; <label>:2340:                                   ; preds = %2337
  store i8 0, i8* %2338, align 1
  br label %2341

; <label>:2341:                                   ; preds = %2340, %2337
  %2342 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2343 = icmp ne i8* %2342, null
  br i1 %2343, label %2344, label %2345

; <label>:2344:                                   ; preds = %2341
  store i8 0, i8* %2342, align 1
  br label %2345

; <label>:2345:                                   ; preds = %2344, %2341
  %2346 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2347 = icmp ne i8* %2346, null
  br i1 %2347, label %2348, label %2349

; <label>:2348:                                   ; preds = %2345
  store i8 0, i8* %2346, align 1
  br label %2349

; <label>:2349:                                   ; preds = %2348, %2345
  %2350 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2350, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2351 = load i8*, i8** %26, align 8
  %2352 = icmp ne i8* %2351, null
  %.14.1.7 = select i1 %2352, i32 1, i32 0
  %2353 = select i1 %2352, i1 true, i1 false
  br i1 %2353, label %.lr.ph6.preheader.1.7, label %._crit_edge.1.7

.lr.ph6.preheader.1.7:                            ; preds = %2349
  br label %.lr.ph6.1.7

.lr.ph6.1.7:                                      ; preds = %.lr.ph6.1.7, %.lr.ph6.preheader.1.7
  %.15.1.7 = phi i32 [ %.1.1.7, %.lr.ph6.1.7 ], [ %.14.1.7, %.lr.ph6.preheader.1.7 ]
  %2354 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2355 = sext i32 %.15.1.7 to i64
  %2356 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2355
  store i8* %2354, i8** %2356, align 8
  call void @unroll_loop(i32 45)
  %2357 = sext i32 %.15.1.7 to i64
  %2358 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2357
  %2359 = load i8*, i8** %2358, align 8
  %2360 = icmp ne i8* %2359, null
  %2361 = add nsw i32 %.15.1.7, 1
  %2362 = icmp slt i32 %2361, 30
  %.1.1.7 = select i1 %2360, i32 %2361, i32 %.15.1.7
  %2363 = select i1 %2360, i1 %2362, i1 false
  br i1 %2363, label %.lr.ph6.1.7, label %._crit_edge.loopexit.1.7

._crit_edge.loopexit.1.7:                         ; preds = %.lr.ph6.1.7
  %.1.lcssa.ph.1.7 = phi i32 [ %.1.1.7, %.lr.ph6.1.7 ]
  br label %._crit_edge.1.7

._crit_edge.1.7:                                  ; preds = %._crit_edge.loopexit.1.7, %2349
  %.1.lcssa.1.7 = phi i32 [ %.14.1.7, %2349 ], [ %.1.lcssa.ph.1.7, %._crit_edge.loopexit.1.7 ]
  %2364 = load i8*, i8** %27, align 16
  %2365 = icmp ne i8* %2364, null
  br i1 %2365, label %290, label %2366

; <label>:2366:                                   ; preds = %._crit_edge.1.7
  call void @__loop_iteration_test___6()
  %2367 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit1

.lr.ph6.1.13:                                     ; preds = %.lr.ph6.1
  call void @__loop_iteration_test___7()
  %2368 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2369 = sext i32 2 to i64
  %2370 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* null, i8** %2370, align 8
  call void @unroll_loop(i32 45)
  %2371 = sext i32 2 to i64
  %2372 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %2373 = load i8*, i8** %2372, align 8
  %2374 = icmp ne i64 0, 0
  %2375 = icmp ne i8* null, null
  %2376 = add nsw i32 2, 1
  %2377 = icmp slt i32 3, 30
  %.1.1.12 = select i1 false, i32 3, i32 2
  %2378 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.1.26, label %._crit_edge.loopexit.1

.lr.ph6.1.26:                                     ; preds = %.lr.ph6.1.13
  call void @__loop_iteration_test___7()
  %2379 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2380 = sext i32 2 to i64
  %2381 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2380
  store i8* %2379, i8** %2381, align 8
  call void @unroll_loop(i32 45)
  %2382 = sext i32 2 to i64
  %2383 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2382
  %2384 = load i8*, i8** %2383, align 8
  %2385 = icmp ne i8* %2384, null
  %2386 = add nsw i32 2, 1
  %2387 = icmp slt i32 %2386, 30
  %.1.1.25 = select i1 %2385, i32 %2386, i32 2
  %2388 = select i1 %2385, i1 %2387, i1 false
  br i1 %2388, label %.lr.ph6.1.39, label %._crit_edge.loopexit.1

.lr.ph6.1.39:                                     ; preds = %.lr.ph6.1.26
  call void @__loop_iteration_test___7()
  %2389 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2390 = sext i32 %.1.1.25 to i64
  %2391 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2390
  store i8* %2389, i8** %2391, align 8
  call void @unroll_loop(i32 45)
  %2392 = sext i32 %.1.1.25 to i64
  %2393 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2392
  %2394 = load i8*, i8** %2393, align 8
  %2395 = icmp ne i8* %2394, null
  %2396 = add nsw i32 %.1.1.25, 1
  %2397 = icmp slt i32 %2396, 30
  %.1.1.38 = select i1 %2395, i32 %2396, i32 %.1.1.25
  %2398 = select i1 %2395, i1 %2397, i1 false
  br i1 %2398, label %.lr.ph6.1.412, label %._crit_edge.loopexit.1

.lr.ph6.1.412:                                    ; preds = %.lr.ph6.1.39
  call void @__loop_iteration_test___7()
  %2399 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2400 = sext i32 %.1.1.38 to i64
  %2401 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2400
  store i8* %2399, i8** %2401, align 8
  call void @unroll_loop(i32 45)
  %2402 = sext i32 %.1.1.38 to i64
  %2403 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2402
  %2404 = load i8*, i8** %2403, align 8
  %2405 = icmp ne i8* %2404, null
  %2406 = add nsw i32 %.1.1.38, 1
  %2407 = icmp slt i32 %2406, 30
  %.1.1.411 = select i1 %2405, i32 %2406, i32 %.1.1.38
  %2408 = select i1 %2405, i1 %2407, i1 false
  br i1 %2408, label %.lr.ph6.1.515, label %._crit_edge.loopexit.1

.lr.ph6.1.515:                                    ; preds = %.lr.ph6.1.412
  call void @__loop_iteration_test___7()
  %2409 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2410 = sext i32 %.1.1.411 to i64
  %2411 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2410
  store i8* %2409, i8** %2411, align 8
  call void @unroll_loop(i32 45)
  %2412 = sext i32 %.1.1.411 to i64
  %2413 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2412
  %2414 = load i8*, i8** %2413, align 8
  %2415 = icmp ne i8* %2414, null
  %2416 = add nsw i32 %.1.1.411, 1
  %2417 = icmp slt i32 %2416, 30
  %.1.1.514 = select i1 %2415, i32 %2416, i32 %.1.1.411
  %2418 = select i1 %2415, i1 %2417, i1 false
  br i1 %2418, label %.lr.ph6.1.618, label %._crit_edge.loopexit.1

.lr.ph6.1.618:                                    ; preds = %.lr.ph6.1.515
  call void @__loop_iteration_test___7()
  %2419 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2420 = sext i32 %.1.1.514 to i64
  %2421 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2420
  store i8* %2419, i8** %2421, align 8
  call void @unroll_loop(i32 45)
  %2422 = sext i32 %.1.1.514 to i64
  %2423 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2422
  %2424 = load i8*, i8** %2423, align 8
  %2425 = icmp ne i8* %2424, null
  %2426 = add nsw i32 %.1.1.514, 1
  %2427 = icmp slt i32 %2426, 30
  %.1.1.617 = select i1 %2425, i32 %2426, i32 %.1.1.514
  %2428 = select i1 %2425, i1 %2427, i1 false
  br i1 %2428, label %.lr.ph6.1.721, label %._crit_edge.loopexit.1

.lr.ph6.1.721:                                    ; preds = %.lr.ph6.1.618
  call void @__loop_iteration_test___7()
  %2429 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2430 = sext i32 %.1.1.617 to i64
  %2431 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2430
  store i8* %2429, i8** %2431, align 8
  call void @unroll_loop(i32 45)
  %2432 = sext i32 %.1.1.617 to i64
  %2433 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2432
  %2434 = load i8*, i8** %2433, align 8
  %2435 = icmp ne i8* %2434, null
  %2436 = add nsw i32 %.1.1.617, 1
  %2437 = icmp slt i32 %2436, 30
  %.1.1.720 = select i1 %2435, i32 %2436, i32 %.1.1.617
  %2438 = select i1 %2435, i1 %2437, i1 false
  br i1 %2438, label %.lr.ph6.1.8, label %._crit_edge.loopexit.1

.lr.ph6.1.8:                                      ; preds = %.lr.ph6.1.721
  call void @__loop_iteration_test___7()
  %2439 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2440 = sext i32 %.1.1.720 to i64
  %2441 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2440
  store i8* %2439, i8** %2441, align 8
  call void @unroll_loop(i32 45)
  %2442 = sext i32 %.1.1.720 to i64
  %2443 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2442
  %2444 = load i8*, i8** %2443, align 8
  %2445 = icmp ne i8* %2444, null
  %2446 = add nsw i32 %.1.1.720, 1
  %2447 = icmp slt i32 %2446, 30
  %.1.1.8 = select i1 %2445, i32 %2446, i32 %.1.1.720
  %2448 = select i1 %2445, i1 %2447, i1 false
  br i1 %2448, label %.lr.ph6.1.9, label %._crit_edge.loopexit.1

.lr.ph6.1.9:                                      ; preds = %.lr.ph6.1.8
  call void @__loop_iteration_test___7()
  %2449 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2450 = sext i32 %.1.1.8 to i64
  %2451 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2450
  store i8* %2449, i8** %2451, align 8
  call void @unroll_loop(i32 45)
  %2452 = sext i32 %.1.1.8 to i64
  %2453 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2452
  %2454 = load i8*, i8** %2453, align 8
  %2455 = icmp ne i8* %2454, null
  %2456 = add nsw i32 %.1.1.8, 1
  %2457 = icmp slt i32 %2456, 30
  %.1.1.9 = select i1 %2455, i32 %2456, i32 %.1.1.8
  %2458 = select i1 %2455, i1 %2457, i1 false
  br i1 %2458, label %.lr.ph6.1.10, label %._crit_edge.loopexit.1

.lr.ph6.1.10:                                     ; preds = %.lr.ph6.1.9
  call void @__loop_iteration_test___7()
  %2459 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2460 = sext i32 %.1.1.9 to i64
  %2461 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2460
  store i8* %2459, i8** %2461, align 8
  call void @unroll_loop(i32 45)
  %2462 = sext i32 %.1.1.9 to i64
  %2463 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2462
  %2464 = load i8*, i8** %2463, align 8
  %2465 = icmp ne i8* %2464, null
  %2466 = add nsw i32 %.1.1.9, 1
  %2467 = icmp slt i32 %2466, 30
  %.1.1.10 = select i1 %2465, i32 %2466, i32 %.1.1.9
  %2468 = select i1 %2465, i1 %2467, i1 false
  br i1 %2468, label %.lr.ph6.1.11, label %._crit_edge.loopexit.1

.lr.ph6.1.11:                                     ; preds = %.lr.ph6.1.10
  call void @__loop_iteration_test___7()
  %2469 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2470 = sext i32 %.1.1.10 to i64
  %2471 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2470
  store i8* %2469, i8** %2471, align 8
  call void @unroll_loop(i32 45)
  %2472 = sext i32 %.1.1.10 to i64
  %2473 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2472
  %2474 = load i8*, i8** %2473, align 8
  %2475 = icmp ne i8* %2474, null
  %2476 = add nsw i32 %.1.1.10, 1
  %2477 = icmp slt i32 %2476, 30
  %.1.1.11 = select i1 %2475, i32 %2476, i32 %.1.1.10
  %2478 = select i1 %2475, i1 %2477, i1 false
  br i1 %2478, label %.lr.ph6.1.12, label %._crit_edge.loopexit.1

.lr.ph6.1.12:                                     ; preds = %.lr.ph6.1.11
  call void @__loop_iteration_test___7()
  %2479 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2480 = sext i32 %.1.1.11 to i64
  %2481 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2480
  store i8* %2479, i8** %2481, align 8
  call void @unroll_loop(i32 45)
  %2482 = sext i32 %.1.1.11 to i64
  %2483 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2482
  %2484 = load i8*, i8** %2483, align 8
  %2485 = icmp ne i8* %2484, null
  %2486 = add nsw i32 %.1.1.11, 1
  %2487 = icmp slt i32 %2486, 30
  %.1.1.1222 = select i1 %2485, i32 %2486, i32 %.1.1.11
  %2488 = select i1 %2485, i1 %2487, i1 false
  br i1 %2488, label %.lr.ph6.1.1323, label %._crit_edge.loopexit.1

.lr.ph6.1.1323:                                   ; preds = %.lr.ph6.1.12
  call void @__loop_iteration_test___7()
  %2489 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2490 = sext i32 %.1.1.1222 to i64
  %2491 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2490
  store i8* %2489, i8** %2491, align 8
  call void @unroll_loop(i32 45)
  %2492 = sext i32 %.1.1.1222 to i64
  %2493 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2492
  %2494 = load i8*, i8** %2493, align 8
  %2495 = icmp ne i8* %2494, null
  %2496 = add nsw i32 %.1.1.1222, 1
  %2497 = icmp slt i32 %2496, 30
  %.1.1.13 = select i1 %2495, i32 %2496, i32 %.1.1.1222
  %2498 = select i1 %2495, i1 %2497, i1 false
  br i1 %2498, label %.lr.ph6.1.14, label %._crit_edge.loopexit.1

.lr.ph6.1.14:                                     ; preds = %.lr.ph6.1.1323
  call void @__loop_iteration_test___7()
  %2499 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2500 = sext i32 %.1.1.13 to i64
  %2501 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2500
  store i8* %2499, i8** %2501, align 8
  call void @unroll_loop(i32 45)
  %2502 = sext i32 %.1.1.13 to i64
  %2503 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2502
  %2504 = load i8*, i8** %2503, align 8
  %2505 = icmp ne i8* %2504, null
  %2506 = add nsw i32 %.1.1.13, 1
  %2507 = icmp slt i32 %2506, 30
  %.1.1.14 = select i1 %2505, i32 %2506, i32 %.1.1.13
  %2508 = select i1 %2505, i1 %2507, i1 false
  br i1 %2508, label %.lr.ph6.1.15, label %._crit_edge.loopexit.1

.lr.ph6.1.15:                                     ; preds = %.lr.ph6.1.14
  call void @__loop_iteration_test___7()
  %2509 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2510 = sext i32 %.1.1.14 to i64
  %2511 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2510
  store i8* %2509, i8** %2511, align 8
  call void @unroll_loop(i32 45)
  %2512 = sext i32 %.1.1.14 to i64
  %2513 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2512
  %2514 = load i8*, i8** %2513, align 8
  %2515 = icmp ne i8* %2514, null
  %2516 = add nsw i32 %.1.1.14, 1
  %2517 = icmp slt i32 %2516, 30
  %.1.1.15 = select i1 %2515, i32 %2516, i32 %.1.1.14
  %2518 = select i1 %2515, i1 %2517, i1 false
  br i1 %2518, label %.lr.ph6.1.16, label %._crit_edge.loopexit.1

.lr.ph6.1.16:                                     ; preds = %.lr.ph6.1.15
  call void @__loop_iteration_test___7()
  %2519 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2520 = sext i32 %.1.1.15 to i64
  %2521 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2520
  store i8* %2519, i8** %2521, align 8
  call void @unroll_loop(i32 45)
  %2522 = sext i32 %.1.1.15 to i64
  %2523 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2522
  %2524 = load i8*, i8** %2523, align 8
  %2525 = icmp ne i8* %2524, null
  %2526 = add nsw i32 %.1.1.15, 1
  %2527 = icmp slt i32 %2526, 30
  %.1.1.16 = select i1 %2525, i32 %2526, i32 %.1.1.15
  %2528 = select i1 %2525, i1 %2527, i1 false
  br i1 %2528, label %.lr.ph6.1.17, label %._crit_edge.loopexit.1

.lr.ph6.1.17:                                     ; preds = %.lr.ph6.1.16
  call void @__loop_iteration_test___7()
  %2529 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2530 = sext i32 %.1.1.16 to i64
  %2531 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2530
  store i8* %2529, i8** %2531, align 8
  call void @unroll_loop(i32 45)
  %2532 = sext i32 %.1.1.16 to i64
  %2533 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2532
  %2534 = load i8*, i8** %2533, align 8
  %2535 = icmp ne i8* %2534, null
  %2536 = add nsw i32 %.1.1.16, 1
  %2537 = icmp slt i32 %2536, 30
  %.1.1.17 = select i1 %2535, i32 %2536, i32 %.1.1.16
  %2538 = select i1 %2535, i1 %2537, i1 false
  br i1 %2538, label %.lr.ph6.1.18, label %._crit_edge.loopexit.1

.lr.ph6.1.18:                                     ; preds = %.lr.ph6.1.17
  call void @__loop_iteration_test___7()
  %2539 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2540 = sext i32 %.1.1.17 to i64
  %2541 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2540
  store i8* %2539, i8** %2541, align 8
  call void @unroll_loop(i32 45)
  %2542 = sext i32 %.1.1.17 to i64
  %2543 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2542
  %2544 = load i8*, i8** %2543, align 8
  %2545 = icmp ne i8* %2544, null
  %2546 = add nsw i32 %.1.1.17, 1
  %2547 = icmp slt i32 %2546, 30
  %.1.1.18 = select i1 %2545, i32 %2546, i32 %.1.1.17
  %2548 = select i1 %2545, i1 %2547, i1 false
  br i1 %2548, label %.lr.ph6.1.19, label %._crit_edge.loopexit.1

.lr.ph6.1.19:                                     ; preds = %.lr.ph6.1.18
  call void @__loop_iteration_test___7()
  %2549 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2550 = sext i32 %.1.1.18 to i64
  %2551 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2550
  store i8* %2549, i8** %2551, align 8
  call void @unroll_loop(i32 45)
  %2552 = sext i32 %.1.1.18 to i64
  %2553 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2552
  %2554 = load i8*, i8** %2553, align 8
  %2555 = icmp ne i8* %2554, null
  %2556 = add nsw i32 %.1.1.18, 1
  %2557 = icmp slt i32 %2556, 30
  %.1.1.19 = select i1 %2555, i32 %2556, i32 %.1.1.18
  br label %._crit_edge.loopexit.1
}

declare void @__loop_termination_test___7()

declare void @__loop_iteration_test___7()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config_clone_clone_clone_clone_clone_clone_clone(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 2, 0
  br i1 true, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = icmp ne i64 4389383, 0
  %12 = icmp ne %struct._IO_FILE* null, null
  br i1 true, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = bitcast [27 x i8]* @22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 27, i1 false)
  %18 = icmp ne i64 244262, 0
  %19 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %51 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 48)
  br label %55

; <label>:52:                                     ; preds = %._crit_edge
  call void @__loop_iteration_test___3()
  %53 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %54 = icmp ne i8* %53, null
  br i1 %54, label %1678, label %.outer._crit_edge.loopexit.loopexit

; <label>:55:                                     ; preds = %.lr.ph
  call void @unroll_loop(i32 44)
  %56 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %57 = icmp ne i64 244287, 0
  %58 = icmp ne i8* %56, null
  br i1 true, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %56, align 1
  br label %60

; <label>:60:                                     ; preds = %59, %55
  %61 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %62 = icmp ne i64 0, 0
  %63 = icmp ne i8* null, null
  br i1 false, label %64, label %65

; <label>:64:                                     ; preds = %60
  store i8 0, i8* null, align 1
  br label %65

; <label>:65:                                     ; preds = %64, %60
  %66 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %67 = icmp ne i64 0, 0
  %68 = icmp ne i8* null, null
  br i1 false, label %69, label %70

; <label>:69:                                     ; preds = %65
  store i8 0, i8* null, align 1
  br label %70

; <label>:70:                                     ; preds = %69, %65
  %71 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %72 = icmp ne i64 0, 0
  %73 = icmp ne i8* null, null
  br i1 false, label %74, label %75

; <label>:74:                                     ; preds = %70
  store i8 0, i8* null, align 1
  br label %75

; <label>:75:                                     ; preds = %74, %70
  %76 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %77 = load i8*, i8** %26, align 8
  %78 = icmp ne i64 10000581, 0
  %79 = icmp ne i8* %77, null
  %.14 = select i1 true, i32 1, i32 0
  %80 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %75
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6.preheader
  call void @__loop_iteration_test___4()
  %81 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %82 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @24, i32 0, i32 0), i8** %82, align 8
  call void @unroll_loop(i32 45)
  %83 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %84 = load i8*, i8** %83, align 8
  %85 = icmp ne i64 10000592, 0
  %86 = icmp ne i8* %84, null
  %.1 = select i1 true, i32 2, i32 1
  %87 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.13, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6.19, %.lr.ph6.18, %.lr.ph6.17, %.lr.ph6.1626, %.lr.ph6.15, %.lr.ph6.14, %.lr.ph6.1323, %.lr.ph6.12, %.lr.ph6.11, %.lr.ph6.10, %.lr.ph6.9, %.lr.ph6.8, %.lr.ph6.721, %.lr.ph6.618, %.lr.ph6.515, %.lr.ph6.412, %.lr.ph6.39, %.lr.ph6.26, %.lr.ph6.13, %.lr.ph6
  %.1.lcssa.ph = phi i32 [ 2, %.lr.ph6 ], [ 3, %.lr.ph6.13 ], [ 4, %.lr.ph6.26 ], [ 4, %.lr.ph6.39 ], [ %.1.411, %.lr.ph6.412 ], [ %.1.514, %.lr.ph6.515 ], [ %.1.617, %.lr.ph6.618 ], [ %.1.720, %.lr.ph6.721 ], [ %.1.8, %.lr.ph6.8 ], [ %.1.9, %.lr.ph6.9 ], [ %.1.10, %.lr.ph6.10 ], [ %.1.11, %.lr.ph6.11 ], [ %.1.1222, %.lr.ph6.12 ], [ %.1.13, %.lr.ph6.1323 ], [ %.1.14, %.lr.ph6.14 ], [ %.1.1525, %.lr.ph6.15 ], [ %.1.16, %.lr.ph6.1626 ], [ %.1.17, %.lr.ph6.17 ], [ %.1.18, %.lr.ph6.18 ], [ %.1.19, %.lr.ph6.19 ]
  call void @__loop_termination_test___4()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %75
  %.1.lcssa = phi i32 [ 1, %75 ], [ 4, %._crit_edge.loopexit ]
  %88 = load i8*, i8** %27, align 16
  %89 = icmp ne i64 10000581, 0
  %90 = icmp ne i8* %88, null
  br i1 true, label %91, label %52

; <label>:91:                                     ; preds = %._crit_edge.770, %._crit_edge.660, %._crit_edge.550, %._crit_edge.440, %._crit_edge.330, %._crit_edge.220, %._crit_edge.110, %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ 4, %._crit_edge ], [ %.1.lcssa.19, %._crit_edge.110 ], [ %.1.lcssa.219, %._crit_edge.220 ], [ %.1.lcssa.329, %._crit_edge.330 ], [ %.1.lcssa.439, %._crit_edge.440 ], [ %.1.lcssa.549, %._crit_edge.550 ], [ %.1.lcssa.659, %._crit_edge.660 ], [ %.1.lcssa.769, %._crit_edge.770 ]
  %.lcssa = phi i32 [ 1, %._crit_edge ], [ 2, %._crit_edge.110 ], [ 3, %._crit_edge.220 ], [ 4, %._crit_edge.330 ], [ 5, %._crit_edge.440 ], [ 6, %._crit_edge.550 ], [ 7, %._crit_edge.660 ], [ 8, %._crit_edge.770 ]
  call void @__loop_termination_test___3()
  %92 = load i8*, i8** %28, align 16
  %93 = call i32 @strcasecmp(i8* %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %94 = icmp ne i32 0, 0
  br i1 false, label %117, label %95

; <label>:95:                                     ; preds = %91
  %96 = icmp slt i32 4, 2
  %97 = icmp sgt i32 4, 4
  %or.cond = or i1 false, false
  br i1 false, label %98, label %99

; <label>:98:                                     ; preds = %95
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:99:                                     ; preds = %95
  %100 = icmp sgt i32 4, 2
  br i1 true, label %101, label %113

; <label>:101:                                    ; preds = %99
  %102 = load i8*, i8** %34, align 8
  %103 = call i32 @strcasecmp(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %104 = icmp ne i32 0, 0
  br i1 false, label %111, label %105

; <label>:105:                                    ; preds = %101
  %106 = icmp sge i32 4, 3
  br i1 true, label %107, label %110

; <label>:107:                                    ; preds = %105
  %108 = load i8*, i8** %40, align 8
  %109 = call i32 @atoi(i8* %108) #8
  br label %113

; <label>:110:                                    ; preds = %105
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:111:                                    ; preds = %101
  %112 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 1, i8* %112)
  br label %.outer.backedge

; <label>:113:                                    ; preds = %107, %99
  %.08 = phi i32 [ 53, %107 ], [ 53, %99 ]
  %114 = load i8*, i8** %35, align 8
  %115 = call i32 @fwd_add_clone(i8* %114, i32 53)
  %116 = icmp eq i32 0, -1
  br i1 false, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:117:                                    ; preds = %91
  %118 = load i8*, i8** %29, align 16
  %119 = call i32 @strcasecmp(i8* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %132, label %121

; <label>:121:                                    ; preds = %117
  %122 = icmp ne i32 4, 2
  br i1 %122, label %123, label %124

; <label>:123:                                    ; preds = %121
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:124:                                    ; preds = %121
  %125 = load i8*, i8** %32, align 8
  %126 = call i32 @conv_trick_conf(i8* %125)
  %127 = icmp ne i32 %126, 0
  %128 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %129 = load i8*, i8** %33, align 8
  br i1 %127, label %130, label %131

; <label>:130:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:131:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:132:                                    ; preds = %117
  %133 = load i8*, i8** %30, align 16
  %134 = call i32 @strcasecmp(i8* %133, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %140, label %136

; <label>:136:                                    ; preds = %132
  %137 = icmp ne i32 4, 2
  br i1 %137, label %138, label %139

; <label>:138:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:139:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:140:                                    ; preds = %132
  %141 = load i8*, i8** %31, align 16
  %142 = call i32 @strcasecmp(i8* %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %150, label %144

; <label>:144:                                    ; preds = %140
  %145 = icmp ne i32 4, 2
  br i1 %145, label %146, label %147

; <label>:146:                                    ; preds = %144
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:147:                                    ; preds = %144
  %148 = load i8*, i8** %39, align 8
  %149 = call i32 @atoi(i8* %148) #8
  store i32 %149, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:150:                                    ; preds = %140
  %151 = load i8*, i8** %36, align 16
  %152 = call i32 @strcasecmp(i8* %151, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %160, label %154

; <label>:154:                                    ; preds = %150
  %155 = icmp ne i32 4, 2
  br i1 %155, label %156, label %157

; <label>:156:                                    ; preds = %154
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:157:                                    ; preds = %154
  %158 = load i8*, i8** %42, align 8
  %159 = call noalias i8* @strdup(i8* %158) #9, !track !108
  store i8* %159, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:160:                                    ; preds = %150
  %161 = load i8*, i8** %38, align 16
  %162 = call i32 @strcasecmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %209, label %164

; <label>:164:                                    ; preds = %160
  %165 = icmp slt i32 4, 2
  br i1 %165, label %166, label %167

; <label>:166:                                    ; preds = %164
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 1)
  br label %167

; <label>:167:                                    ; preds = %166, %164
  %.7 = phi i32 [ 1, %166 ], [ 0, %164 ]
  br label %168

; <label>:168:                                    ; preds = %168, %167
  %lsr.iv = phi i64 [ %lsr.iv.next, %168 ], [ -1, %167 ]
  %169 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %170 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %170
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %171 = load i8*, i8** %scevgep, align 8
  %172 = icmp ne i8* %171, null
  %173 = icmp ult i64 %169, 30
  %spec.select = select i1 %172, i1 %173, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %168, label %174

; <label>:174:                                    ; preds = %168
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %168 ]
  %175 = trunc i64 %.01.lcssa.wide to i32
  %176 = add nsw i32 %175, 4
  %177 = sub nsw i32 %176, 1
  %178 = icmp sgt i32 %177, 30
  br i1 %178, label %179, label %181

; <label>:179:                                    ; preds = %174
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 1, i32 30)
  %180 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:181:                                    ; preds = %174
  %182 = sub nsw i32 4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 1, i32 %182)
  %183 = add nsw i32 4, -1
  %184 = add nsw i32 %175, 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %185
  store i8* null, i8** %186, align 8
  %187 = icmp ne i32 %183, 0
  br i1 %187, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %181
  %188 = add i32 4, -1
  %189 = sext i32 %188 to i64
  %190 = sext i32 %175 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %189
  %191 = shl i64 %189, 1
  %192 = shl i64 %190, 1
  %193 = add i64 %191, %192
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %193
  %194 = sub i32 1, 4
  %195 = zext i32 %194 to i64
  br label %196

; <label>:196:                                    ; preds = %201, %.lr.ph16
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %201 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %197 = load i8*, i8** %scevgep7, align 8
  %198 = call i32 @strcmp(i8* %197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %201, label %200

; <label>:200:                                    ; preds = %196
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:201:                                    ; preds = %196
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %202 = load i8*, i8** %scevgep8, align 8
  %203 = call noalias i8* @strdup(i8* %202) #9, !track !109
  %204 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %204
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %203, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %205 = icmp ne i32 %194, %tmp
  br i1 %205, label %196, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %201
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %200, %181
  %206 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %207 = icmp ne i8* %206, null
  br i1 %207, label %208, label %.outer.backedge

; <label>:208:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:209:                                    ; preds = %160
  %210 = load i8*, i8** %41, align 16
  %211 = call i32 @strcasecmp(i8* %210, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %219, label %213

; <label>:213:                                    ; preds = %209
  %214 = icmp ne i32 4, 2
  br i1 %214, label %215, label %216

; <label>:215:                                    ; preds = %213
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:216:                                    ; preds = %213
  %217 = load i8*, i8** %45, align 8
  %218 = call i32 @atoi(i8* %217) #8
  store i32 %218, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:219:                                    ; preds = %209
  %220 = load i8*, i8** %43, align 16
  %221 = call i32 @strcasecmp(i8* %220, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %240, label %223

; <label>:223:                                    ; preds = %219
  %224 = icmp ne i32 4, 4
  br i1 %224, label %225, label %226

; <label>:225:                                    ; preds = %223
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:226:                                    ; preds = %223
  %227 = load i8*, i8** %46, align 8
  %228 = load i8*, i8** %47, align 16
  %229 = load i8*, i8** %48, align 8
  %230 = call i32 @atoi(i8* %229) #8
  %231 = call i32 @conv_scoped_conf(i8* %227, i8* %228, i32 %230)
  %232 = icmp ne i32 %231, 0
  %233 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %234 = load i8*, i8** %49, align 8
  %235 = load i8*, i8** %50, align 16
  %236 = load i8*, i8** %51, align 8
  br i1 %232, label %237, label %238

; <label>:237:                                    ; preds = %226
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i8* %236)
  br label %.outer.backedge

; <label>:238:                                    ; preds = %226
  %239 = call i32 @atoi(i8* %236) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i32 %239)
  br label %.outer.backedge

; <label>:240:                                    ; preds = %219
  %241 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 1, i8* %241)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %240, %238, %237, %225, %216, %215, %208, %.loopexit, %179, %157, %156, %147, %146, %139, %138, %131, %130, %123, %113, %111, %110, %98
  %.03.ph.be = phi i32 [ 1, %110 ], [ 1, %111 ], [ 1, %98 ], [ 0, %113 ], [ 1, %123 ], [ 1, %130 ], [ 0, %131 ], [ 1, %138 ], [ 0, %139 ], [ 1, %146 ], [ 0, %147 ], [ 1, %156 ], [ 0, %157 ], [ %180, %179 ], [ %.7, %208 ], [ %.7, %.loopexit ], [ 1, %215 ], [ 0, %216 ], [ 1, %240 ], [ 1, %225 ], [ 1, %237 ], [ 0, %238 ]
  call void @__loop_iteration_test___2()
  %242 = bitcast [9 x i8]* @27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %242, i64 9, i1 false)
  %243 = icmp ne i64 244262, 0
  %244 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.1, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit.loopexit:              ; preds = %1927, %1891, %1855, %1819, %1783, %1747, %1711, %52
  call void @__loop_termination_test___3()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit1:             ; preds = %2370, %2334, %2298, %2262, %2226, %2190, %2154, %287
  call void @__loop_termination_test___6()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit2:             ; preds = %2811, %2775, %2739, %2703, %2667, %2631, %2595, %495
  call void @__loop_termination_test___8()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit3:             ; preds = %698
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit4:             ; preds = %901
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit5:             ; preds = %1104
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit6:             ; preds = %1307
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit7:             ; preds = %1510
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit:                       ; preds = %.outer._crit_edge.loopexit.loopexit7, %.outer._crit_edge.loopexit.loopexit6, %.outer._crit_edge.loopexit.loopexit5, %.outer._crit_edge.loopexit.loopexit4, %.outer._crit_edge.loopexit.loopexit3, %.outer._crit_edge.loopexit.loopexit2, %.outer._crit_edge.loopexit.loopexit1, %.outer._crit_edge.loopexit.loopexit
  %.03.lcssa.ph = phi i32 [ 0, %.outer._crit_edge.loopexit.loopexit ], [ 0, %.outer._crit_edge.loopexit.loopexit1 ], [ 0, %.outer._crit_edge.loopexit.loopexit2 ], [ %.03.ph.be.2, %.outer._crit_edge.loopexit.loopexit3 ], [ %.03.ph.be.3, %.outer._crit_edge.loopexit.loopexit4 ], [ %.03.ph.be.4, %.outer._crit_edge.loopexit.loopexit5 ], [ %.03.ph.be.5, %.outer._crit_edge.loopexit.loopexit6 ], [ %.03.ph.be.6, %.outer._crit_edge.loopexit.loopexit7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge.7, %.outer.backedge.6, %.outer.backedge.5, %.outer.backedge.4, %.outer.backedge.3, %.outer.backedge.2, %.outer.backedge.1, %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ 0, %.outer.backedge ], [ 0, %.outer.backedge.1 ], [ %.03.ph.be.2, %.outer.backedge.2 ], [ %.03.ph.be.3, %.outer.backedge.3 ], [ %.03.ph.be.4, %.outer.backedge.4 ], [ %.03.ph.be.5, %.outer.backedge.5 ], [ %.03.ph.be.6, %.outer.backedge.6 ], [ %.03.ph.be.7, %.outer.backedge.7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ %.03.lcssa.ph2, %.outer._crit_edge.loopexit1 ]
  %245 = call i32 @fclose(%struct._IO_FILE* null)
  %246 = icmp ne i32 %.03.lcssa, 0
  br i1 %246, label %247, label %249

; <label>:247:                                    ; preds = %.outer._crit_edge
  %248 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %248, i32 %.03.lcssa)
  br label %.loopexit1

; <label>:249:                                    ; preds = %.outer._crit_edge
  %250 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %250)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %1533, %1330, %1127, %924, %721, %518, %310, %113
  %.0.ph = phi i32 [ -1, %113 ], [ -1, %310 ], [ -1, %518 ], [ -1, %721 ], [ -1, %924 ], [ -1, %1127 ], [ -1, %1330 ], [ -1, %1533 ]
  call void @__loop_termination_test___2()
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %249, %247, %13
  %.0 = phi i32 [ -1, %247 ], [ 0, %249 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 %.0

.lr.ph.1:                                         ; preds = %.outer.backedge
  call void @unroll_loop(i32 48)
  br label %251

; <label>:251:                                    ; preds = %.lr.ph.1
  call void @unroll_loop(i32 44)
  %252 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %253 = icmp ne i64 244269, 0
  %254 = icmp ne i8* %252, null
  br i1 true, label %255, label %256

; <label>:255:                                    ; preds = %251
  store i8 0, i8* %252, align 1
  br label %256

; <label>:256:                                    ; preds = %255, %251
  %257 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %258 = icmp ne i64 0, 0
  %259 = icmp ne i8* null, null
  br i1 false, label %260, label %261

; <label>:260:                                    ; preds = %256
  store i8 0, i8* null, align 1
  br label %261

; <label>:261:                                    ; preds = %260, %256
  %262 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %263 = icmp ne i64 0, 0
  %264 = icmp ne i8* null, null
  br i1 false, label %265, label %266

; <label>:265:                                    ; preds = %261
  store i8 0, i8* null, align 1
  br label %266

; <label>:266:                                    ; preds = %265, %261
  %267 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %268 = icmp ne i64 0, 0
  %269 = icmp ne i8* null, null
  br i1 false, label %270, label %271

; <label>:270:                                    ; preds = %266
  store i8 0, i8* null, align 1
  br label %271

; <label>:271:                                    ; preds = %270, %266
  %272 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %273 = load i8*, i8** %26, align 8
  %274 = icmp ne i64 10001062, 0
  %275 = icmp ne i8* %273, null
  %.14.1 = select i1 true, i32 1, i32 0
  %276 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader.1, label %._crit_edge.1

.lr.ph6.preheader.1:                              ; preds = %271
  br label %.lr.ph6.1

.lr.ph6.1:                                        ; preds = %.lr.ph6.preheader.1
  call void @__loop_iteration_test___7()
  %277 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %278 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @29, i32 0, i32 0), i8** %278, align 8
  call void @unroll_loop(i32 45)
  %279 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %280 = load i8*, i8** %279, align 8
  %281 = icmp ne i64 10001068, 0
  %282 = icmp ne i8* %280, null
  %.1.1 = select i1 true, i32 2, i32 1
  %283 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.1.13, label %._crit_edge.loopexit.1

._crit_edge.loopexit.1:                           ; preds = %.lr.ph6.1.19, %.lr.ph6.1.18, %.lr.ph6.1.17, %.lr.ph6.1.16, %.lr.ph6.1.15, %.lr.ph6.1.14, %.lr.ph6.1.1323, %.lr.ph6.1.12, %.lr.ph6.1.11, %.lr.ph6.1.10, %.lr.ph6.1.9, %.lr.ph6.1.8, %.lr.ph6.1.721, %.lr.ph6.1.618, %.lr.ph6.1.515, %.lr.ph6.1.412, %.lr.ph6.1.39, %.lr.ph6.1.26, %.lr.ph6.1.13, %.lr.ph6.1
  %.1.lcssa.ph.1 = phi i32 [ 2, %.lr.ph6.1 ], [ 2, %.lr.ph6.1.13 ], [ %.1.1.25, %.lr.ph6.1.26 ], [ %.1.1.38, %.lr.ph6.1.39 ], [ %.1.1.411, %.lr.ph6.1.412 ], [ %.1.1.514, %.lr.ph6.1.515 ], [ %.1.1.617, %.lr.ph6.1.618 ], [ %.1.1.720, %.lr.ph6.1.721 ], [ %.1.1.8, %.lr.ph6.1.8 ], [ %.1.1.9, %.lr.ph6.1.9 ], [ %.1.1.10, %.lr.ph6.1.10 ], [ %.1.1.11, %.lr.ph6.1.11 ], [ %.1.1.1222, %.lr.ph6.1.12 ], [ %.1.1.13, %.lr.ph6.1.1323 ], [ %.1.1.14, %.lr.ph6.1.14 ], [ %.1.1.15, %.lr.ph6.1.15 ], [ %.1.1.16, %.lr.ph6.1.16 ], [ %.1.1.17, %.lr.ph6.1.17 ], [ %.1.1.18, %.lr.ph6.1.18 ], [ %.1.1.19, %.lr.ph6.1.19 ]
  call void @__loop_termination_test___7()
  br label %._crit_edge.1

._crit_edge.1:                                    ; preds = %._crit_edge.loopexit.1, %271
  %.1.lcssa.1 = phi i32 [ 1, %271 ], [ 2, %._crit_edge.loopexit.1 ]
  %284 = load i8*, i8** %27, align 16
  %285 = icmp ne i64 10001062, 0
  %286 = icmp ne i8* %284, null
  br i1 true, label %290, label %287

; <label>:287:                                    ; preds = %._crit_edge.1
  call void @__loop_iteration_test___6()
  %288 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %289 = icmp ne i8* %288, null
  br i1 %289, label %2121, label %.outer._crit_edge.loopexit.loopexit1

; <label>:290:                                    ; preds = %._crit_edge.1.7, %._crit_edge.1.6, %._crit_edge.1.5, %._crit_edge.1.4, %._crit_edge.1.3, %._crit_edge.1.2, %._crit_edge.1.1, %._crit_edge.1
  %.1.lcssa.lcssa.1 = phi i32 [ 2, %._crit_edge.1 ], [ %.1.lcssa.1.1, %._crit_edge.1.1 ], [ %.1.lcssa.1.2, %._crit_edge.1.2 ], [ %.1.lcssa.1.3, %._crit_edge.1.3 ], [ %.1.lcssa.1.4, %._crit_edge.1.4 ], [ %.1.lcssa.1.5, %._crit_edge.1.5 ], [ %.1.lcssa.1.6, %._crit_edge.1.6 ], [ %.1.lcssa.1.7, %._crit_edge.1.7 ]
  %.lcssa.1 = phi i32 [ 2, %._crit_edge.1 ], [ 3, %._crit_edge.1.1 ], [ 4, %._crit_edge.1.2 ], [ 5, %._crit_edge.1.3 ], [ 6, %._crit_edge.1.4 ], [ 7, %._crit_edge.1.5 ], [ 8, %._crit_edge.1.6 ], [ 9, %._crit_edge.1.7 ]
  call void @__loop_termination_test___6()
  %291 = load i8*, i8** %28, align 16
  %292 = call i32 @strcasecmp(i8* %291, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %293 = icmp ne i32 10, 0
  br i1 true, label %319, label %294

; <label>:294:                                    ; preds = %290
  %295 = icmp slt i32 2, 2
  %296 = icmp sgt i32 2, 4
  %or.cond.1 = or i1 %295, %296
  br i1 %or.cond.1, label %317, label %297

; <label>:297:                                    ; preds = %294
  %298 = icmp sgt i32 2, 2
  br i1 %298, label %299, label %310

; <label>:299:                                    ; preds = %297
  %300 = load i8*, i8** %34, align 8
  %301 = call i32 @strcasecmp(i8* %300, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %302 = icmp ne i32 %301, 0
  br i1 %302, label %314, label %303

; <label>:303:                                    ; preds = %299
  %304 = icmp sge i32 2, 3
  br i1 %304, label %307, label %305

; <label>:305:                                    ; preds = %303
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 2)
  %306 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:307:                                    ; preds = %303
  %308 = load i8*, i8** %40, align 8
  %309 = call i32 @atoi(i8* %308) #8
  br label %310

; <label>:310:                                    ; preds = %307, %297
  %.08.1 = phi i32 [ %309, %307 ], [ 53, %297 ]
  %311 = load i8*, i8** %35, align 8
  %312 = call i32 @fwd_add(i8* %311, i32 %.08.1)
  %313 = icmp eq i32 %312, -1
  br i1 %313, label %.loopexit1.loopexit, label %.outer.backedge.1

; <label>:314:                                    ; preds = %299
  %315 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 2, i8* %315)
  %316 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:317:                                    ; preds = %294
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 2)
  %318 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:319:                                    ; preds = %290
  %320 = load i8*, i8** %29, align 16
  %321 = call i32 @strcasecmp(i8* %320, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %322 = icmp ne i32 -3, 0
  br i1 true, label %336, label %323

; <label>:323:                                    ; preds = %319
  %324 = icmp ne i32 2, 2
  br i1 %324, label %334, label %325

; <label>:325:                                    ; preds = %323
  %326 = load i8*, i8** %32, align 8
  %327 = call i32 @conv_trick_conf(i8* %326)
  %328 = icmp ne i32 %327, 0
  %329 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %330 = load i8*, i8** %33, align 8
  br i1 %328, label %332, label %331

; <label>:331:                                    ; preds = %325
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %329, i8* %330)
  br label %.outer.backedge.1

; <label>:332:                                    ; preds = %325
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %329, i8* %330)
  %333 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:334:                                    ; preds = %323
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 2)
  %335 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:336:                                    ; preds = %319
  %337 = load i8*, i8** %30, align 16
  %338 = call i32 @strcasecmp(i8* %337, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %339 = icmp ne i32 15, 0
  br i1 true, label %345, label %340

; <label>:340:                                    ; preds = %336
  %341 = icmp ne i32 2, 2
  br i1 %341, label %343, label %342

; <label>:342:                                    ; preds = %340
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.1

; <label>:343:                                    ; preds = %340
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 2)
  %344 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:345:                                    ; preds = %336
  %346 = load i8*, i8** %31, align 16
  %347 = call i32 @strcasecmp(i8* %346, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %348 = icmp ne i32 -2, 0
  br i1 true, label %356, label %349

; <label>:349:                                    ; preds = %345
  %350 = icmp ne i32 2, 2
  br i1 %350, label %354, label %351

; <label>:351:                                    ; preds = %349
  %352 = load i8*, i8** %39, align 8
  %353 = call i32 @atoi(i8* %352) #8
  store i32 %353, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.1

; <label>:354:                                    ; preds = %349
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 2)
  %355 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:356:                                    ; preds = %345
  %357 = load i8*, i8** %36, align 16
  %358 = call i32 @strcasecmp(i8* %357, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %359 = icmp ne i32 6, 0
  br i1 true, label %367, label %360

; <label>:360:                                    ; preds = %356
  %361 = icmp ne i32 2, 2
  br i1 %361, label %365, label %362

; <label>:362:                                    ; preds = %360
  %363 = load i8*, i8** %42, align 8
  %364 = call noalias i8* @strdup(i8* %363) #9, !track !108
  store i8* %364, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.1

; <label>:365:                                    ; preds = %360
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 2)
  %366 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:367:                                    ; preds = %356
  %368 = load i8*, i8** %38, align 16
  %369 = call i32 @strcasecmp(i8* %368, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %370 = icmp ne i32 7, 0
  br i1 true, label %417, label %371

; <label>:371:                                    ; preds = %367
  %372 = icmp slt i32 2, 2
  br i1 %372, label %373, label %375

; <label>:373:                                    ; preds = %371
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 2)
  %374 = add nsw i32 0, 1
  br label %375

; <label>:375:                                    ; preds = %373, %371
  %.7.1 = phi i32 [ %374, %373 ], [ 0, %371 ]
  br label %376

; <label>:376:                                    ; preds = %376, %375
  %lsr.iv.1 = phi i64 [ %lsr.iv.next.1, %376 ], [ -1, %375 ]
  %377 = add i64 %lsr.iv.1, 1
  call void @unroll_loop(i32 46)
  %378 = shl i64 %lsr.iv.1, 3
  %uglygep.1 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %378
  %uglygep3.1 = bitcast i8* %uglygep.1 to i8**
  %scevgep.1 = getelementptr i8*, i8** %uglygep3.1, i64 111
  %379 = load i8*, i8** %scevgep.1, align 8
  %380 = icmp ne i8* %379, null
  %381 = icmp ult i64 %377, 30
  %spec.select.1 = select i1 %380, i1 %381, i1 false
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %spec.select.1, label %376, label %382

; <label>:382:                                    ; preds = %376
  %.01.lcssa.wide.1 = phi i64 [ %lsr.iv.next.1, %376 ]
  %383 = trunc i64 %.01.lcssa.wide.1 to i32
  %384 = add nsw i32 %383, 2
  %385 = sub nsw i32 %384, 1
  %386 = icmp sgt i32 %385, 30
  br i1 %386, label %415, label %387

; <label>:387:                                    ; preds = %382
  %388 = sub nsw i32 2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 2, i32 %388)
  %389 = add nsw i32 2, -1
  %390 = add nsw i32 %383, 2
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %391
  store i8* null, i8** %392, align 8
  %393 = icmp ne i32 %389, 0
  br i1 %393, label %.lr.ph16.1, label %.loopexit.1

.lr.ph16.1:                                       ; preds = %387
  %394 = add i32 2, -1
  %395 = sext i32 %394 to i64
  %396 = sext i32 %383 to i64
  %scevgep4.1 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %395
  %397 = shl i64 %395, 1
  %398 = shl i64 %396, 1
  %399 = add i64 %397, %398
  %scevgep9.1 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %399
  %400 = sub i32 1, 2
  %401 = zext i32 %400 to i64
  br label %402

; <label>:402:                                    ; preds = %407, %.lr.ph16.1
  %lsr.iv5.1 = phi i64 [ 0, %.lr.ph16.1 ], [ %lsr.iv.next6.1, %407 ]
  call void @unroll_loop(i32 47)
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %403 = load i8*, i8** %scevgep7.1, align 8
  %404 = call i32 @strcmp(i8* %403, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %405 = icmp ne i32 %404, 0
  br i1 %405, label %407, label %406

; <label>:406:                                    ; preds = %402
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.1

; <label>:407:                                    ; preds = %402
  %scevgep8.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %408 = load i8*, i8** %scevgep8.1, align 8
  %409 = call noalias i8* @strdup(i8* %408) #9, !track !109
  %410 = shl i64 %lsr.iv5.1, 1
  %scevgep10.1 = getelementptr i32, i32* %scevgep9.1, i64 %410
  %scevgep1011.1 = bitcast i32* %scevgep10.1 to i8**
  store i8* %409, i8** %scevgep1011.1, align 8
  %lsr.iv.next6.1 = add nsw i64 %lsr.iv5.1, -1
  %tmp.1 = trunc i64 %lsr.iv.next6.1 to i32
  %411 = icmp ne i32 %400, %tmp.1
  br i1 %411, label %402, label %.loopexit.loopexit.1

.loopexit.loopexit.1:                             ; preds = %407
  br label %.loopexit.1

.loopexit.1:                                      ; preds = %.loopexit.loopexit.1, %406, %387
  %412 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %413 = icmp ne i8* %412, null
  br i1 %413, label %414, label %.outer.backedge.1

; <label>:414:                                    ; preds = %.loopexit.1
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.1

; <label>:415:                                    ; preds = %382
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 2, i32 30)
  %416 = add nsw i32 %.7.1, 1
  br label %.outer.backedge.1

; <label>:417:                                    ; preds = %367
  %418 = load i8*, i8** %41, align 16
  %419 = call i32 @strcasecmp(i8* %418, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %420 = icmp ne i32 0, 0
  br i1 false, label %428, label %421

; <label>:421:                                    ; preds = %417
  %422 = icmp ne i32 2, 2
  br i1 false, label %426, label %423

; <label>:423:                                    ; preds = %421
  %424 = load i8*, i8** %45, align 8
  %425 = call i32 @atoi(i8* %424) #8
  store i32 53, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.1

; <label>:426:                                    ; preds = %421
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 2)
  %427 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:428:                                    ; preds = %417
  %429 = load i8*, i8** %43, align 16
  %430 = call i32 @strcasecmp(i8* %429, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %431 = icmp ne i32 %430, 0
  br i1 %431, label %451, label %432

; <label>:432:                                    ; preds = %428
  %433 = icmp ne i32 2, 4
  br i1 %433, label %449, label %434

; <label>:434:                                    ; preds = %432
  %435 = load i8*, i8** %46, align 8
  %436 = load i8*, i8** %47, align 16
  %437 = load i8*, i8** %48, align 8
  %438 = call i32 @atoi(i8* %437) #8
  %439 = call i32 @conv_scoped_conf(i8* %435, i8* %436, i32 %438)
  %440 = icmp ne i32 %439, 0
  %441 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %442 = load i8*, i8** %49, align 8
  %443 = load i8*, i8** %50, align 16
  %444 = load i8*, i8** %51, align 8
  br i1 %440, label %447, label %445

; <label>:445:                                    ; preds = %434
  %446 = call i32 @atoi(i8* %444) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %441, i8* %442, i8* %443, i32 %446)
  br label %.outer.backedge.1

; <label>:447:                                    ; preds = %434
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %441, i8* %442, i8* %443, i8* %444)
  %448 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:449:                                    ; preds = %432
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 2)
  %450 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:451:                                    ; preds = %428
  %452 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 2, i8* %452)
  %453 = add nsw i32 0, 1
  br label %.outer.backedge.1

.outer.backedge.1:                                ; preds = %451, %449, %447, %445, %426, %423, %415, %414, %.loopexit.1, %365, %362, %354, %351, %343, %342, %334, %332, %331, %317, %314, %310, %305
  %.03.ph.be.1 = phi i32 [ %306, %305 ], [ %316, %314 ], [ %318, %317 ], [ 0, %310 ], [ %335, %334 ], [ %333, %332 ], [ 0, %331 ], [ %344, %343 ], [ 0, %342 ], [ %355, %354 ], [ 0, %351 ], [ %366, %365 ], [ 0, %362 ], [ %416, %415 ], [ %.7.1, %414 ], [ %.7.1, %.loopexit.1 ], [ %427, %426 ], [ 0, %423 ], [ %453, %451 ], [ %450, %449 ], [ %448, %447 ], [ 0, %445 ]
  call void @__loop_iteration_test___2()
  %454 = bitcast [22 x i8]* @30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %454, i64 22, i1 false)
  %455 = icmp ne i64 244262, 0
  %456 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.2, label %.outer._crit_edge.loopexit1

.lr.ph.2:                                         ; preds = %.outer.backedge.1
  call void @unroll_loop(i32 48)
  br label %457

; <label>:457:                                    ; preds = %.lr.ph.2
  call void @unroll_loop(i32 44)
  %458 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %459 = icmp ne i64 244282, 0
  %460 = icmp ne i8* %458, null
  br i1 true, label %461, label %462

; <label>:461:                                    ; preds = %457
  store i8 0, i8* %458, align 1
  br label %462

; <label>:462:                                    ; preds = %461, %457
  %463 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %464 = icmp ne i64 0, 0
  %465 = icmp ne i8* null, null
  br i1 false, label %466, label %467

; <label>:466:                                    ; preds = %462
  store i8 0, i8* null, align 1
  br label %467

; <label>:467:                                    ; preds = %466, %462
  %468 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %469 = icmp ne i64 0, 0
  %470 = icmp ne i8* null, null
  br i1 false, label %471, label %472

; <label>:471:                                    ; preds = %467
  store i8 0, i8* null, align 1
  br label %472

; <label>:472:                                    ; preds = %471, %467
  %473 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %474 = icmp ne i64 0, 0
  %475 = icmp ne i8* null, null
  br i1 false, label %476, label %477

; <label>:476:                                    ; preds = %472
  store i8 0, i8* null, align 1
  br label %477

; <label>:477:                                    ; preds = %476, %472
  %478 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @31, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %479 = load i8*, i8** %26, align 8
  %480 = icmp ne i64 10001072, 0
  %481 = icmp ne i8* %479, null
  %.14.2 = select i1 true, i32 1, i32 0
  %482 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader.2, label %._crit_edge.2

.lr.ph6.preheader.2:                              ; preds = %477
  br label %.lr.ph6.2

.lr.ph6.2:                                        ; preds = %.lr.ph6.2, %.lr.ph6.preheader.2
  %.15.2 = phi i32 [ %.1.2, %.lr.ph6.2 ], [ 1, %.lr.ph6.preheader.2 ]
  %483 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %484 = sext i32 %.15.2 to i64
  %485 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %484
  store i8* %483, i8** %485, align 8
  call void @unroll_loop(i32 45)
  %486 = sext i32 %.15.2 to i64
  %487 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %486
  %488 = load i8*, i8** %487, align 8
  %489 = icmp ne i8* %488, null
  %490 = add nsw i32 %.15.2, 1
  %491 = icmp slt i32 %490, 30
  %.1.2 = select i1 %489, i32 %490, i32 %.15.2
  %492 = select i1 %489, i1 %491, i1 false
  br i1 %492, label %.lr.ph6.2, label %._crit_edge.loopexit.2

._crit_edge.loopexit.2:                           ; preds = %.lr.ph6.2
  %.1.lcssa.ph.2 = phi i32 [ %.1.2, %.lr.ph6.2 ]
  br label %._crit_edge.2

._crit_edge.2:                                    ; preds = %._crit_edge.loopexit.2, %477
  %.1.lcssa.2 = phi i32 [ 1, %477 ], [ %.1.lcssa.ph.2, %._crit_edge.loopexit.2 ]
  %493 = load i8*, i8** %27, align 16
  %494 = icmp ne i8* %493, null
  br i1 %494, label %498, label %495

; <label>:495:                                    ; preds = %._crit_edge.2
  call void @__loop_iteration_test___8()
  %496 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %497 = icmp ne i8* %496, null
  br i1 %497, label %2562, label %.outer._crit_edge.loopexit.loopexit2

; <label>:498:                                    ; preds = %._crit_edge.2.7, %._crit_edge.2.6, %._crit_edge.2.5, %._crit_edge.2.4, %._crit_edge.2.3, %._crit_edge.2.2, %._crit_edge.2.1, %._crit_edge.2
  %.1.lcssa.lcssa.2 = phi i32 [ %.1.lcssa.2, %._crit_edge.2 ], [ %.1.lcssa.2.1, %._crit_edge.2.1 ], [ %.1.lcssa.2.2, %._crit_edge.2.2 ], [ %.1.lcssa.2.3, %._crit_edge.2.3 ], [ %.1.lcssa.2.4, %._crit_edge.2.4 ], [ %.1.lcssa.2.5, %._crit_edge.2.5 ], [ %.1.lcssa.2.6, %._crit_edge.2.6 ], [ %.1.lcssa.2.7, %._crit_edge.2.7 ]
  %.lcssa.2 = phi i32 [ 3, %._crit_edge.2 ], [ 4, %._crit_edge.2.1 ], [ 5, %._crit_edge.2.2 ], [ 6, %._crit_edge.2.3 ], [ 7, %._crit_edge.2.4 ], [ 8, %._crit_edge.2.5 ], [ 9, %._crit_edge.2.6 ], [ 10, %._crit_edge.2.7 ]
  call void @__loop_termination_test___8()
  %499 = load i8*, i8** %28, align 16
  %500 = call i32 @strcasecmp(i8* %499, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %501 = icmp ne i32 %500, 0
  br i1 %501, label %527, label %502

; <label>:502:                                    ; preds = %498
  %503 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  %504 = icmp sgt i32 %.1.lcssa.lcssa.2, 4
  %or.cond.2 = or i1 %503, %504
  br i1 %or.cond.2, label %525, label %505

; <label>:505:                                    ; preds = %502
  %506 = icmp sgt i32 %.1.lcssa.lcssa.2, 2
  br i1 %506, label %507, label %518

; <label>:507:                                    ; preds = %505
  %508 = load i8*, i8** %34, align 8
  %509 = call i32 @strcasecmp(i8* %508, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %510 = icmp ne i32 %509, 0
  br i1 %510, label %522, label %511

; <label>:511:                                    ; preds = %507
  %512 = icmp sge i32 %.1.lcssa.lcssa.2, 3
  br i1 %512, label %515, label %513

; <label>:513:                                    ; preds = %511
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.2)
  %514 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:515:                                    ; preds = %511
  %516 = load i8*, i8** %40, align 8
  %517 = call i32 @atoi(i8* %516) #8
  br label %518

; <label>:518:                                    ; preds = %515, %505
  %.08.2 = phi i32 [ %517, %515 ], [ 53, %505 ]
  %519 = load i8*, i8** %35, align 8
  %520 = call i32 @fwd_add(i8* %519, i32 %.08.2)
  %521 = icmp eq i32 %520, -1
  br i1 %521, label %.loopexit1.loopexit, label %.outer.backedge.2

; <label>:522:                                    ; preds = %507
  %523 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.2, i8* %523)
  %524 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:525:                                    ; preds = %502
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.2)
  %526 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:527:                                    ; preds = %498
  %528 = load i8*, i8** %29, align 16
  %529 = call i32 @strcasecmp(i8* %528, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %530 = icmp ne i32 %529, 0
  br i1 %530, label %544, label %531

; <label>:531:                                    ; preds = %527
  %532 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %532, label %542, label %533

; <label>:533:                                    ; preds = %531
  %534 = load i8*, i8** %32, align 8
  %535 = call i32 @conv_trick_conf(i8* %534)
  %536 = icmp ne i32 %535, 0
  %537 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %538 = load i8*, i8** %33, align 8
  br i1 %536, label %540, label %539

; <label>:539:                                    ; preds = %533
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %537, i8* %538)
  br label %.outer.backedge.2

; <label>:540:                                    ; preds = %533
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %537, i8* %538)
  %541 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:542:                                    ; preds = %531
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.2)
  %543 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:544:                                    ; preds = %527
  %545 = load i8*, i8** %30, align 16
  %546 = call i32 @strcasecmp(i8* %545, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %547 = icmp ne i32 %546, 0
  br i1 %547, label %553, label %548

; <label>:548:                                    ; preds = %544
  %549 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %549, label %551, label %550

; <label>:550:                                    ; preds = %548
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.2

; <label>:551:                                    ; preds = %548
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.2)
  %552 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:553:                                    ; preds = %544
  %554 = load i8*, i8** %31, align 16
  %555 = call i32 @strcasecmp(i8* %554, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %556 = icmp ne i32 %555, 0
  br i1 %556, label %564, label %557

; <label>:557:                                    ; preds = %553
  %558 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %558, label %562, label %559

; <label>:559:                                    ; preds = %557
  %560 = load i8*, i8** %39, align 8
  %561 = call i32 @atoi(i8* %560) #8
  store i32 %561, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.2

; <label>:562:                                    ; preds = %557
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.2)
  %563 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:564:                                    ; preds = %553
  %565 = load i8*, i8** %36, align 16
  %566 = call i32 @strcasecmp(i8* %565, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %567 = icmp ne i32 %566, 0
  br i1 %567, label %575, label %568

; <label>:568:                                    ; preds = %564
  %569 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %569, label %573, label %570

; <label>:570:                                    ; preds = %568
  %571 = load i8*, i8** %42, align 8
  %572 = call noalias i8* @strdup(i8* %571) #9, !track !108
  store i8* %572, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.2

; <label>:573:                                    ; preds = %568
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.2)
  %574 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:575:                                    ; preds = %564
  %576 = load i8*, i8** %38, align 16
  %577 = call i32 @strcasecmp(i8* %576, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %578 = icmp ne i32 %577, 0
  br i1 %578, label %625, label %579

; <label>:579:                                    ; preds = %575
  %580 = icmp slt i32 %.1.lcssa.lcssa.2, 2
  br i1 %580, label %581, label %583

; <label>:581:                                    ; preds = %579
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.2)
  %582 = add nsw i32 0, 1
  br label %583

; <label>:583:                                    ; preds = %581, %579
  %.7.2 = phi i32 [ %582, %581 ], [ 0, %579 ]
  br label %584

; <label>:584:                                    ; preds = %584, %583
  %lsr.iv.2 = phi i64 [ %lsr.iv.next.2, %584 ], [ -1, %583 ]
  %585 = add i64 %lsr.iv.2, 1
  call void @unroll_loop(i32 46)
  %586 = shl i64 %lsr.iv.2, 3
  %uglygep.2 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %586
  %uglygep3.2 = bitcast i8* %uglygep.2 to i8**
  %scevgep.2 = getelementptr i8*, i8** %uglygep3.2, i64 111
  %587 = load i8*, i8** %scevgep.2, align 8
  %588 = icmp ne i8* %587, null
  %589 = icmp ult i64 %585, 30
  %spec.select.2 = select i1 %588, i1 %589, i1 false
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %spec.select.2, label %584, label %590

; <label>:590:                                    ; preds = %584
  %.01.lcssa.wide.2 = phi i64 [ %lsr.iv.next.2, %584 ]
  %591 = trunc i64 %.01.lcssa.wide.2 to i32
  %592 = add nsw i32 %591, %.1.lcssa.lcssa.2
  %593 = sub nsw i32 %592, 1
  %594 = icmp sgt i32 %593, 30
  br i1 %594, label %623, label %595

; <label>:595:                                    ; preds = %590
  %596 = sub nsw i32 %.1.lcssa.lcssa.2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.2, i32 %596)
  %597 = add nsw i32 %.1.lcssa.lcssa.2, -1
  %598 = add nsw i32 %591, %.1.lcssa.lcssa.2
  %599 = sext i32 %598 to i64
  %600 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %599
  store i8* null, i8** %600, align 8
  %601 = icmp ne i32 %597, 0
  br i1 %601, label %.lr.ph16.2, label %.loopexit.2

.lr.ph16.2:                                       ; preds = %595
  %602 = add i32 %.1.lcssa.lcssa.2, -1
  %603 = sext i32 %602 to i64
  %604 = sext i32 %591 to i64
  %scevgep4.2 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %603
  %605 = shl i64 %603, 1
  %606 = shl i64 %604, 1
  %607 = add i64 %605, %606
  %scevgep9.2 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %607
  %608 = sub i32 1, %.1.lcssa.lcssa.2
  %609 = zext i32 %608 to i64
  br label %610

; <label>:610:                                    ; preds = %615, %.lr.ph16.2
  %lsr.iv5.2 = phi i64 [ 0, %.lr.ph16.2 ], [ %lsr.iv.next6.2, %615 ]
  call void @unroll_loop(i32 47)
  %scevgep7.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %611 = load i8*, i8** %scevgep7.2, align 8
  %612 = call i32 @strcmp(i8* %611, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %613 = icmp ne i32 %612, 0
  br i1 %613, label %615, label %614

; <label>:614:                                    ; preds = %610
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.2

; <label>:615:                                    ; preds = %610
  %scevgep8.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %616 = load i8*, i8** %scevgep8.2, align 8
  %617 = call noalias i8* @strdup(i8* %616) #9, !track !109
  %618 = shl i64 %lsr.iv5.2, 1
  %scevgep10.2 = getelementptr i32, i32* %scevgep9.2, i64 %618
  %scevgep1011.2 = bitcast i32* %scevgep10.2 to i8**
  store i8* %617, i8** %scevgep1011.2, align 8
  %lsr.iv.next6.2 = add nsw i64 %lsr.iv5.2, -1
  %tmp.2 = trunc i64 %lsr.iv.next6.2 to i32
  %619 = icmp ne i32 %608, %tmp.2
  br i1 %619, label %610, label %.loopexit.loopexit.2

.loopexit.loopexit.2:                             ; preds = %615
  br label %.loopexit.2

.loopexit.2:                                      ; preds = %.loopexit.loopexit.2, %614, %595
  %620 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %621 = icmp ne i8* %620, null
  br i1 %621, label %622, label %.outer.backedge.2

; <label>:622:                                    ; preds = %.loopexit.2
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.2

; <label>:623:                                    ; preds = %590
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.2, i32 30)
  %624 = add nsw i32 %.7.2, 1
  br label %.outer.backedge.2

; <label>:625:                                    ; preds = %575
  %626 = load i8*, i8** %41, align 16
  %627 = call i32 @strcasecmp(i8* %626, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %628 = icmp ne i32 %627, 0
  br i1 %628, label %636, label %629

; <label>:629:                                    ; preds = %625
  %630 = icmp ne i32 %.1.lcssa.lcssa.2, 2
  br i1 %630, label %634, label %631

; <label>:631:                                    ; preds = %629
  %632 = load i8*, i8** %45, align 8
  %633 = call i32 @atoi(i8* %632) #8
  store i32 %633, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.2

; <label>:634:                                    ; preds = %629
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.2)
  %635 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:636:                                    ; preds = %625
  %637 = load i8*, i8** %43, align 16
  %638 = call i32 @strcasecmp(i8* %637, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %639 = icmp ne i32 %638, 0
  br i1 %639, label %659, label %640

; <label>:640:                                    ; preds = %636
  %641 = icmp ne i32 %.1.lcssa.lcssa.2, 4
  br i1 %641, label %657, label %642

; <label>:642:                                    ; preds = %640
  %643 = load i8*, i8** %46, align 8
  %644 = load i8*, i8** %47, align 16
  %645 = load i8*, i8** %48, align 8
  %646 = call i32 @atoi(i8* %645) #8
  %647 = call i32 @conv_scoped_conf(i8* %643, i8* %644, i32 %646)
  %648 = icmp ne i32 %647, 0
  %649 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %650 = load i8*, i8** %49, align 8
  %651 = load i8*, i8** %50, align 16
  %652 = load i8*, i8** %51, align 8
  br i1 %648, label %655, label %653

; <label>:653:                                    ; preds = %642
  %654 = call i32 @atoi(i8* %652) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %649, i8* %650, i8* %651, i32 %654)
  br label %.outer.backedge.2

; <label>:655:                                    ; preds = %642
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %649, i8* %650, i8* %651, i8* %652)
  %656 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:657:                                    ; preds = %640
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.2)
  %658 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:659:                                    ; preds = %636
  %660 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.2, i8* %660)
  %661 = add nsw i32 0, 1
  br label %.outer.backedge.2

.outer.backedge.2:                                ; preds = %659, %657, %655, %653, %634, %631, %623, %622, %.loopexit.2, %573, %570, %562, %559, %551, %550, %542, %540, %539, %525, %522, %518, %513
  %.03.ph.be.2 = phi i32 [ %514, %513 ], [ %524, %522 ], [ %526, %525 ], [ 0, %518 ], [ %543, %542 ], [ %541, %540 ], [ 0, %539 ], [ %552, %551 ], [ 0, %550 ], [ %563, %562 ], [ 0, %559 ], [ %574, %573 ], [ 0, %570 ], [ %624, %623 ], [ %.7.2, %622 ], [ %.7.2, %.loopexit.2 ], [ %635, %634 ], [ 0, %631 ], [ %661, %659 ], [ %658, %657 ], [ %656, %655 ], [ 0, %653 ]
  call void @__loop_iteration_test___2()
  %662 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %663 = icmp ne i8* %662, null
  br i1 %663, label %.lr.ph.3, label %.outer._crit_edge.loopexit1

.lr.ph.3:                                         ; preds = %.outer.backedge.2
  call void @unroll_loop(i32 48)
  br label %664

; <label>:664:                                    ; preds = %698, %.lr.ph.3
  %.0712.3 = phi i32 [ %.lcssa.2, %.lr.ph.3 ], [ %665, %698 ]
  call void @unroll_loop(i32 44)
  %665 = add nsw i32 %.0712.3, 1
  %666 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %667 = icmp ne i8* %666, null
  br i1 %667, label %668, label %669

; <label>:668:                                    ; preds = %664
  store i8 0, i8* %666, align 1
  br label %669

; <label>:669:                                    ; preds = %668, %664
  %670 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %671 = icmp ne i8* %670, null
  br i1 %671, label %672, label %673

; <label>:672:                                    ; preds = %669
  store i8 0, i8* %670, align 1
  br label %673

; <label>:673:                                    ; preds = %672, %669
  %674 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %675 = icmp ne i8* %674, null
  br i1 %675, label %676, label %677

; <label>:676:                                    ; preds = %673
  store i8 0, i8* %674, align 1
  br label %677

; <label>:677:                                    ; preds = %676, %673
  %678 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %679 = icmp ne i8* %678, null
  br i1 %679, label %680, label %681

; <label>:680:                                    ; preds = %677
  store i8 0, i8* %678, align 1
  br label %681

; <label>:681:                                    ; preds = %680, %677
  %682 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %682, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %683 = load i8*, i8** %26, align 8
  %684 = icmp ne i8* %683, null
  %.14.3 = select i1 %684, i32 1, i32 0
  %685 = select i1 %684, i1 true, i1 false
  br i1 %685, label %.lr.ph6.preheader.3, label %._crit_edge.3

.lr.ph6.preheader.3:                              ; preds = %681
  br label %.lr.ph6.3

.lr.ph6.3:                                        ; preds = %.lr.ph6.3, %.lr.ph6.preheader.3
  %.15.3 = phi i32 [ %.1.3, %.lr.ph6.3 ], [ %.14.3, %.lr.ph6.preheader.3 ]
  %686 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %687 = sext i32 %.15.3 to i64
  %688 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %687
  store i8* %686, i8** %688, align 8
  call void @unroll_loop(i32 45)
  %689 = sext i32 %.15.3 to i64
  %690 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %689
  %691 = load i8*, i8** %690, align 8
  %692 = icmp ne i8* %691, null
  %693 = add nsw i32 %.15.3, 1
  %694 = icmp slt i32 %693, 30
  %.1.3 = select i1 %692, i32 %693, i32 %.15.3
  %695 = select i1 %692, i1 %694, i1 false
  br i1 %695, label %.lr.ph6.3, label %._crit_edge.loopexit.3

._crit_edge.loopexit.3:                           ; preds = %.lr.ph6.3
  %.1.lcssa.ph.3 = phi i32 [ %.1.3, %.lr.ph6.3 ]
  br label %._crit_edge.3

._crit_edge.3:                                    ; preds = %._crit_edge.loopexit.3, %681
  %.1.lcssa.3 = phi i32 [ %.14.3, %681 ], [ %.1.lcssa.ph.3, %._crit_edge.loopexit.3 ]
  %696 = load i8*, i8** %27, align 16
  %697 = icmp ne i8* %696, null
  br i1 %697, label %701, label %698

; <label>:698:                                    ; preds = %._crit_edge.3
  %699 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %700 = icmp ne i8* %699, null
  br i1 %700, label %664, label %.outer._crit_edge.loopexit.loopexit3

; <label>:701:                                    ; preds = %._crit_edge.3
  %.1.lcssa.lcssa.3 = phi i32 [ %.1.lcssa.3, %._crit_edge.3 ]
  %.lcssa.3 = phi i32 [ %665, %._crit_edge.3 ]
  %702 = load i8*, i8** %28, align 16
  %703 = call i32 @strcasecmp(i8* %702, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %704 = icmp ne i32 %703, 0
  br i1 %704, label %730, label %705

; <label>:705:                                    ; preds = %701
  %706 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  %707 = icmp sgt i32 %.1.lcssa.lcssa.3, 4
  %or.cond.3 = or i1 %706, %707
  br i1 %or.cond.3, label %728, label %708

; <label>:708:                                    ; preds = %705
  %709 = icmp sgt i32 %.1.lcssa.lcssa.3, 2
  br i1 %709, label %710, label %721

; <label>:710:                                    ; preds = %708
  %711 = load i8*, i8** %34, align 8
  %712 = call i32 @strcasecmp(i8* %711, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %713 = icmp ne i32 %712, 0
  br i1 %713, label %725, label %714

; <label>:714:                                    ; preds = %710
  %715 = icmp sge i32 %.1.lcssa.lcssa.3, 3
  br i1 %715, label %718, label %716

; <label>:716:                                    ; preds = %714
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.3)
  %717 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:718:                                    ; preds = %714
  %719 = load i8*, i8** %40, align 8
  %720 = call i32 @atoi(i8* %719) #8
  br label %721

; <label>:721:                                    ; preds = %718, %708
  %.08.3 = phi i32 [ %720, %718 ], [ 53, %708 ]
  %722 = load i8*, i8** %35, align 8
  %723 = call i32 @fwd_add(i8* %722, i32 %.08.3)
  %724 = icmp eq i32 %723, -1
  br i1 %724, label %.loopexit1.loopexit, label %.outer.backedge.3

; <label>:725:                                    ; preds = %710
  %726 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.3, i8* %726)
  %727 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:728:                                    ; preds = %705
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.3)
  %729 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:730:                                    ; preds = %701
  %731 = load i8*, i8** %29, align 16
  %732 = call i32 @strcasecmp(i8* %731, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %733 = icmp ne i32 %732, 0
  br i1 %733, label %747, label %734

; <label>:734:                                    ; preds = %730
  %735 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %735, label %745, label %736

; <label>:736:                                    ; preds = %734
  %737 = load i8*, i8** %32, align 8
  %738 = call i32 @conv_trick_conf(i8* %737)
  %739 = icmp ne i32 %738, 0
  %740 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %741 = load i8*, i8** %33, align 8
  br i1 %739, label %743, label %742

; <label>:742:                                    ; preds = %736
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %740, i8* %741)
  br label %.outer.backedge.3

; <label>:743:                                    ; preds = %736
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %740, i8* %741)
  %744 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:745:                                    ; preds = %734
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.3)
  %746 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:747:                                    ; preds = %730
  %748 = load i8*, i8** %30, align 16
  %749 = call i32 @strcasecmp(i8* %748, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %750 = icmp ne i32 %749, 0
  br i1 %750, label %756, label %751

; <label>:751:                                    ; preds = %747
  %752 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %752, label %754, label %753

; <label>:753:                                    ; preds = %751
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.3

; <label>:754:                                    ; preds = %751
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.3)
  %755 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:756:                                    ; preds = %747
  %757 = load i8*, i8** %31, align 16
  %758 = call i32 @strcasecmp(i8* %757, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %759 = icmp ne i32 %758, 0
  br i1 %759, label %767, label %760

; <label>:760:                                    ; preds = %756
  %761 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %761, label %765, label %762

; <label>:762:                                    ; preds = %760
  %763 = load i8*, i8** %39, align 8
  %764 = call i32 @atoi(i8* %763) #8
  store i32 %764, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.3

; <label>:765:                                    ; preds = %760
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.3)
  %766 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:767:                                    ; preds = %756
  %768 = load i8*, i8** %36, align 16
  %769 = call i32 @strcasecmp(i8* %768, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %770 = icmp ne i32 %769, 0
  br i1 %770, label %778, label %771

; <label>:771:                                    ; preds = %767
  %772 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %772, label %776, label %773

; <label>:773:                                    ; preds = %771
  %774 = load i8*, i8** %42, align 8
  %775 = call noalias i8* @strdup(i8* %774) #9, !track !108
  store i8* %775, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.3

; <label>:776:                                    ; preds = %771
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.3)
  %777 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:778:                                    ; preds = %767
  %779 = load i8*, i8** %38, align 16
  %780 = call i32 @strcasecmp(i8* %779, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %781 = icmp ne i32 %780, 0
  br i1 %781, label %828, label %782

; <label>:782:                                    ; preds = %778
  %783 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  br i1 %783, label %784, label %786

; <label>:784:                                    ; preds = %782
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.3)
  %785 = add nsw i32 %.03.ph.be.2, 1
  br label %786

; <label>:786:                                    ; preds = %784, %782
  %.7.3 = phi i32 [ %785, %784 ], [ %.03.ph.be.2, %782 ]
  br label %787

; <label>:787:                                    ; preds = %787, %786
  %lsr.iv.3 = phi i64 [ %lsr.iv.next.3, %787 ], [ -1, %786 ]
  %788 = add i64 %lsr.iv.3, 1
  call void @unroll_loop(i32 46)
  %789 = shl i64 %lsr.iv.3, 3
  %uglygep.3 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %789
  %uglygep3.3 = bitcast i8* %uglygep.3 to i8**
  %scevgep.3 = getelementptr i8*, i8** %uglygep3.3, i64 111
  %790 = load i8*, i8** %scevgep.3, align 8
  %791 = icmp ne i8* %790, null
  %792 = icmp ult i64 %788, 30
  %spec.select.3 = select i1 %791, i1 %792, i1 false
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %spec.select.3, label %787, label %793

; <label>:793:                                    ; preds = %787
  %.01.lcssa.wide.3 = phi i64 [ %lsr.iv.next.3, %787 ]
  %794 = trunc i64 %.01.lcssa.wide.3 to i32
  %795 = add nsw i32 %794, %.1.lcssa.lcssa.3
  %796 = sub nsw i32 %795, 1
  %797 = icmp sgt i32 %796, 30
  br i1 %797, label %826, label %798

; <label>:798:                                    ; preds = %793
  %799 = sub nsw i32 %.1.lcssa.lcssa.3, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.3, i32 %799)
  %800 = add nsw i32 %.1.lcssa.lcssa.3, -1
  %801 = add nsw i32 %794, %.1.lcssa.lcssa.3
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %802
  store i8* null, i8** %803, align 8
  %804 = icmp ne i32 %800, 0
  br i1 %804, label %.lr.ph16.3, label %.loopexit.3

.lr.ph16.3:                                       ; preds = %798
  %805 = add i32 %.1.lcssa.lcssa.3, -1
  %806 = sext i32 %805 to i64
  %807 = sext i32 %794 to i64
  %scevgep4.3 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %806
  %808 = shl i64 %806, 1
  %809 = shl i64 %807, 1
  %810 = add i64 %808, %809
  %scevgep9.3 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %810
  %811 = sub i32 1, %.1.lcssa.lcssa.3
  %812 = zext i32 %811 to i64
  br label %813

; <label>:813:                                    ; preds = %818, %.lr.ph16.3
  %lsr.iv5.3 = phi i64 [ 0, %.lr.ph16.3 ], [ %lsr.iv.next6.3, %818 ]
  call void @unroll_loop(i32 47)
  %scevgep7.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %814 = load i8*, i8** %scevgep7.3, align 8
  %815 = call i32 @strcmp(i8* %814, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %816 = icmp ne i32 %815, 0
  br i1 %816, label %818, label %817

; <label>:817:                                    ; preds = %813
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.3

; <label>:818:                                    ; preds = %813
  %scevgep8.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %819 = load i8*, i8** %scevgep8.3, align 8
  %820 = call noalias i8* @strdup(i8* %819) #9, !track !109
  %821 = shl i64 %lsr.iv5.3, 1
  %scevgep10.3 = getelementptr i32, i32* %scevgep9.3, i64 %821
  %scevgep1011.3 = bitcast i32* %scevgep10.3 to i8**
  store i8* %820, i8** %scevgep1011.3, align 8
  %lsr.iv.next6.3 = add nsw i64 %lsr.iv5.3, -1
  %tmp.3 = trunc i64 %lsr.iv.next6.3 to i32
  %822 = icmp ne i32 %811, %tmp.3
  br i1 %822, label %813, label %.loopexit.loopexit.3

.loopexit.loopexit.3:                             ; preds = %818
  br label %.loopexit.3

.loopexit.3:                                      ; preds = %.loopexit.loopexit.3, %817, %798
  %823 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %824 = icmp ne i8* %823, null
  br i1 %824, label %825, label %.outer.backedge.3

; <label>:825:                                    ; preds = %.loopexit.3
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.3

; <label>:826:                                    ; preds = %793
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.3, i32 30)
  %827 = add nsw i32 %.7.3, 1
  br label %.outer.backedge.3

; <label>:828:                                    ; preds = %778
  %829 = load i8*, i8** %41, align 16
  %830 = call i32 @strcasecmp(i8* %829, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %831 = icmp ne i32 %830, 0
  br i1 %831, label %839, label %832

; <label>:832:                                    ; preds = %828
  %833 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %833, label %837, label %834

; <label>:834:                                    ; preds = %832
  %835 = load i8*, i8** %45, align 8
  %836 = call i32 @atoi(i8* %835) #8
  store i32 %836, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.3

; <label>:837:                                    ; preds = %832
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.3)
  %838 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:839:                                    ; preds = %828
  %840 = load i8*, i8** %43, align 16
  %841 = call i32 @strcasecmp(i8* %840, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %842 = icmp ne i32 %841, 0
  br i1 %842, label %862, label %843

; <label>:843:                                    ; preds = %839
  %844 = icmp ne i32 %.1.lcssa.lcssa.3, 4
  br i1 %844, label %860, label %845

; <label>:845:                                    ; preds = %843
  %846 = load i8*, i8** %46, align 8
  %847 = load i8*, i8** %47, align 16
  %848 = load i8*, i8** %48, align 8
  %849 = call i32 @atoi(i8* %848) #8
  %850 = call i32 @conv_scoped_conf(i8* %846, i8* %847, i32 %849)
  %851 = icmp ne i32 %850, 0
  %852 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %853 = load i8*, i8** %49, align 8
  %854 = load i8*, i8** %50, align 16
  %855 = load i8*, i8** %51, align 8
  br i1 %851, label %858, label %856

; <label>:856:                                    ; preds = %845
  %857 = call i32 @atoi(i8* %855) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %852, i8* %853, i8* %854, i32 %857)
  br label %.outer.backedge.3

; <label>:858:                                    ; preds = %845
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %852, i8* %853, i8* %854, i8* %855)
  %859 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:860:                                    ; preds = %843
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.3)
  %861 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

; <label>:862:                                    ; preds = %839
  %863 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.3, i8* %863)
  %864 = add nsw i32 %.03.ph.be.2, 1
  br label %.outer.backedge.3

.outer.backedge.3:                                ; preds = %862, %860, %858, %856, %837, %834, %826, %825, %.loopexit.3, %776, %773, %765, %762, %754, %753, %745, %743, %742, %728, %725, %721, %716
  %.03.ph.be.3 = phi i32 [ %717, %716 ], [ %727, %725 ], [ %729, %728 ], [ %.03.ph.be.2, %721 ], [ %746, %745 ], [ %744, %743 ], [ %.03.ph.be.2, %742 ], [ %755, %754 ], [ %.03.ph.be.2, %753 ], [ %766, %765 ], [ %.03.ph.be.2, %762 ], [ %777, %776 ], [ %.03.ph.be.2, %773 ], [ %827, %826 ], [ %.7.3, %825 ], [ %.7.3, %.loopexit.3 ], [ %838, %837 ], [ %.03.ph.be.2, %834 ], [ %864, %862 ], [ %861, %860 ], [ %859, %858 ], [ %.03.ph.be.2, %856 ]
  call void @__loop_iteration_test___2()
  %865 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %866 = icmp ne i8* %865, null
  br i1 %866, label %.lr.ph.4, label %.outer._crit_edge.loopexit1

.lr.ph.4:                                         ; preds = %.outer.backedge.3
  call void @unroll_loop(i32 48)
  br label %867

; <label>:867:                                    ; preds = %901, %.lr.ph.4
  %.0712.4 = phi i32 [ %.lcssa.3, %.lr.ph.4 ], [ %868, %901 ]
  call void @unroll_loop(i32 44)
  %868 = add nsw i32 %.0712.4, 1
  %869 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %870 = icmp ne i8* %869, null
  br i1 %870, label %871, label %872

; <label>:871:                                    ; preds = %867
  store i8 0, i8* %869, align 1
  br label %872

; <label>:872:                                    ; preds = %871, %867
  %873 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %874 = icmp ne i8* %873, null
  br i1 %874, label %875, label %876

; <label>:875:                                    ; preds = %872
  store i8 0, i8* %873, align 1
  br label %876

; <label>:876:                                    ; preds = %875, %872
  %877 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %878 = icmp ne i8* %877, null
  br i1 %878, label %879, label %880

; <label>:879:                                    ; preds = %876
  store i8 0, i8* %877, align 1
  br label %880

; <label>:880:                                    ; preds = %879, %876
  %881 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %882 = icmp ne i8* %881, null
  br i1 %882, label %883, label %884

; <label>:883:                                    ; preds = %880
  store i8 0, i8* %881, align 1
  br label %884

; <label>:884:                                    ; preds = %883, %880
  %885 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %885, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %886 = load i8*, i8** %26, align 8
  %887 = icmp ne i8* %886, null
  %.14.4 = select i1 %887, i32 1, i32 0
  %888 = select i1 %887, i1 true, i1 false
  br i1 %888, label %.lr.ph6.preheader.4, label %._crit_edge.4

.lr.ph6.preheader.4:                              ; preds = %884
  br label %.lr.ph6.4

.lr.ph6.4:                                        ; preds = %.lr.ph6.4, %.lr.ph6.preheader.4
  %.15.4 = phi i32 [ %.1.4, %.lr.ph6.4 ], [ %.14.4, %.lr.ph6.preheader.4 ]
  %889 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %890 = sext i32 %.15.4 to i64
  %891 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %890
  store i8* %889, i8** %891, align 8
  call void @unroll_loop(i32 45)
  %892 = sext i32 %.15.4 to i64
  %893 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %892
  %894 = load i8*, i8** %893, align 8
  %895 = icmp ne i8* %894, null
  %896 = add nsw i32 %.15.4, 1
  %897 = icmp slt i32 %896, 30
  %.1.4 = select i1 %895, i32 %896, i32 %.15.4
  %898 = select i1 %895, i1 %897, i1 false
  br i1 %898, label %.lr.ph6.4, label %._crit_edge.loopexit.4

._crit_edge.loopexit.4:                           ; preds = %.lr.ph6.4
  %.1.lcssa.ph.4 = phi i32 [ %.1.4, %.lr.ph6.4 ]
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %._crit_edge.loopexit.4, %884
  %.1.lcssa.4 = phi i32 [ %.14.4, %884 ], [ %.1.lcssa.ph.4, %._crit_edge.loopexit.4 ]
  %899 = load i8*, i8** %27, align 16
  %900 = icmp ne i8* %899, null
  br i1 %900, label %904, label %901

; <label>:901:                                    ; preds = %._crit_edge.4
  %902 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %903 = icmp ne i8* %902, null
  br i1 %903, label %867, label %.outer._crit_edge.loopexit.loopexit4

; <label>:904:                                    ; preds = %._crit_edge.4
  %.1.lcssa.lcssa.4 = phi i32 [ %.1.lcssa.4, %._crit_edge.4 ]
  %.lcssa.4 = phi i32 [ %868, %._crit_edge.4 ]
  %905 = load i8*, i8** %28, align 16
  %906 = call i32 @strcasecmp(i8* %905, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %907 = icmp ne i32 %906, 0
  br i1 %907, label %933, label %908

; <label>:908:                                    ; preds = %904
  %909 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  %910 = icmp sgt i32 %.1.lcssa.lcssa.4, 4
  %or.cond.4 = or i1 %909, %910
  br i1 %or.cond.4, label %931, label %911

; <label>:911:                                    ; preds = %908
  %912 = icmp sgt i32 %.1.lcssa.lcssa.4, 2
  br i1 %912, label %913, label %924

; <label>:913:                                    ; preds = %911
  %914 = load i8*, i8** %34, align 8
  %915 = call i32 @strcasecmp(i8* %914, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %916 = icmp ne i32 %915, 0
  br i1 %916, label %928, label %917

; <label>:917:                                    ; preds = %913
  %918 = icmp sge i32 %.1.lcssa.lcssa.4, 3
  br i1 %918, label %921, label %919

; <label>:919:                                    ; preds = %917
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.4)
  %920 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:921:                                    ; preds = %917
  %922 = load i8*, i8** %40, align 8
  %923 = call i32 @atoi(i8* %922) #8
  br label %924

; <label>:924:                                    ; preds = %921, %911
  %.08.4 = phi i32 [ %923, %921 ], [ 53, %911 ]
  %925 = load i8*, i8** %35, align 8
  %926 = call i32 @fwd_add(i8* %925, i32 %.08.4)
  %927 = icmp eq i32 %926, -1
  br i1 %927, label %.loopexit1.loopexit, label %.outer.backedge.4

; <label>:928:                                    ; preds = %913
  %929 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.4, i8* %929)
  %930 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:931:                                    ; preds = %908
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.4)
  %932 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:933:                                    ; preds = %904
  %934 = load i8*, i8** %29, align 16
  %935 = call i32 @strcasecmp(i8* %934, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %936 = icmp ne i32 %935, 0
  br i1 %936, label %950, label %937

; <label>:937:                                    ; preds = %933
  %938 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %938, label %948, label %939

; <label>:939:                                    ; preds = %937
  %940 = load i8*, i8** %32, align 8
  %941 = call i32 @conv_trick_conf(i8* %940)
  %942 = icmp ne i32 %941, 0
  %943 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %944 = load i8*, i8** %33, align 8
  br i1 %942, label %946, label %945

; <label>:945:                                    ; preds = %939
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %943, i8* %944)
  br label %.outer.backedge.4

; <label>:946:                                    ; preds = %939
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %943, i8* %944)
  %947 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:948:                                    ; preds = %937
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.4)
  %949 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:950:                                    ; preds = %933
  %951 = load i8*, i8** %30, align 16
  %952 = call i32 @strcasecmp(i8* %951, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %953 = icmp ne i32 %952, 0
  br i1 %953, label %959, label %954

; <label>:954:                                    ; preds = %950
  %955 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %955, label %957, label %956

; <label>:956:                                    ; preds = %954
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.4

; <label>:957:                                    ; preds = %954
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.4)
  %958 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:959:                                    ; preds = %950
  %960 = load i8*, i8** %31, align 16
  %961 = call i32 @strcasecmp(i8* %960, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %962 = icmp ne i32 %961, 0
  br i1 %962, label %970, label %963

; <label>:963:                                    ; preds = %959
  %964 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %964, label %968, label %965

; <label>:965:                                    ; preds = %963
  %966 = load i8*, i8** %39, align 8
  %967 = call i32 @atoi(i8* %966) #8
  store i32 %967, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.4

; <label>:968:                                    ; preds = %963
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.4)
  %969 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:970:                                    ; preds = %959
  %971 = load i8*, i8** %36, align 16
  %972 = call i32 @strcasecmp(i8* %971, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %973 = icmp ne i32 %972, 0
  br i1 %973, label %981, label %974

; <label>:974:                                    ; preds = %970
  %975 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %975, label %979, label %976

; <label>:976:                                    ; preds = %974
  %977 = load i8*, i8** %42, align 8
  %978 = call noalias i8* @strdup(i8* %977) #9, !track !108
  store i8* %978, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.4

; <label>:979:                                    ; preds = %974
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.4)
  %980 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:981:                                    ; preds = %970
  %982 = load i8*, i8** %38, align 16
  %983 = call i32 @strcasecmp(i8* %982, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %984 = icmp ne i32 %983, 0
  br i1 %984, label %1031, label %985

; <label>:985:                                    ; preds = %981
  %986 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  br i1 %986, label %987, label %989

; <label>:987:                                    ; preds = %985
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.4)
  %988 = add nsw i32 %.03.ph.be.3, 1
  br label %989

; <label>:989:                                    ; preds = %987, %985
  %.7.4 = phi i32 [ %988, %987 ], [ %.03.ph.be.3, %985 ]
  br label %990

; <label>:990:                                    ; preds = %990, %989
  %lsr.iv.4 = phi i64 [ %lsr.iv.next.4, %990 ], [ -1, %989 ]
  %991 = add i64 %lsr.iv.4, 1
  call void @unroll_loop(i32 46)
  %992 = shl i64 %lsr.iv.4, 3
  %uglygep.4 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %992
  %uglygep3.4 = bitcast i8* %uglygep.4 to i8**
  %scevgep.4 = getelementptr i8*, i8** %uglygep3.4, i64 111
  %993 = load i8*, i8** %scevgep.4, align 8
  %994 = icmp ne i8* %993, null
  %995 = icmp ult i64 %991, 30
  %spec.select.4 = select i1 %994, i1 %995, i1 false
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %spec.select.4, label %990, label %996

; <label>:996:                                    ; preds = %990
  %.01.lcssa.wide.4 = phi i64 [ %lsr.iv.next.4, %990 ]
  %997 = trunc i64 %.01.lcssa.wide.4 to i32
  %998 = add nsw i32 %997, %.1.lcssa.lcssa.4
  %999 = sub nsw i32 %998, 1
  %1000 = icmp sgt i32 %999, 30
  br i1 %1000, label %1029, label %1001

; <label>:1001:                                   ; preds = %996
  %1002 = sub nsw i32 %.1.lcssa.lcssa.4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.4, i32 %1002)
  %1003 = add nsw i32 %.1.lcssa.lcssa.4, -1
  %1004 = add nsw i32 %997, %.1.lcssa.lcssa.4
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1005
  store i8* null, i8** %1006, align 8
  %1007 = icmp ne i32 %1003, 0
  br i1 %1007, label %.lr.ph16.4, label %.loopexit.4

.lr.ph16.4:                                       ; preds = %1001
  %1008 = add i32 %.1.lcssa.lcssa.4, -1
  %1009 = sext i32 %1008 to i64
  %1010 = sext i32 %997 to i64
  %scevgep4.4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1009
  %1011 = shl i64 %1009, 1
  %1012 = shl i64 %1010, 1
  %1013 = add i64 %1011, %1012
  %scevgep9.4 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1013
  %1014 = sub i32 1, %.1.lcssa.lcssa.4
  %1015 = zext i32 %1014 to i64
  br label %1016

; <label>:1016:                                   ; preds = %1021, %.lr.ph16.4
  %lsr.iv5.4 = phi i64 [ 0, %.lr.ph16.4 ], [ %lsr.iv.next6.4, %1021 ]
  call void @unroll_loop(i32 47)
  %scevgep7.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1017 = load i8*, i8** %scevgep7.4, align 8
  %1018 = call i32 @strcmp(i8* %1017, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1019 = icmp ne i32 %1018, 0
  br i1 %1019, label %1021, label %1020

; <label>:1020:                                   ; preds = %1016
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.4

; <label>:1021:                                   ; preds = %1016
  %scevgep8.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1022 = load i8*, i8** %scevgep8.4, align 8
  %1023 = call noalias i8* @strdup(i8* %1022) #9, !track !109
  %1024 = shl i64 %lsr.iv5.4, 1
  %scevgep10.4 = getelementptr i32, i32* %scevgep9.4, i64 %1024
  %scevgep1011.4 = bitcast i32* %scevgep10.4 to i8**
  store i8* %1023, i8** %scevgep1011.4, align 8
  %lsr.iv.next6.4 = add nsw i64 %lsr.iv5.4, -1
  %tmp.4 = trunc i64 %lsr.iv.next6.4 to i32
  %1025 = icmp ne i32 %1014, %tmp.4
  br i1 %1025, label %1016, label %.loopexit.loopexit.4

.loopexit.loopexit.4:                             ; preds = %1021
  br label %.loopexit.4

.loopexit.4:                                      ; preds = %.loopexit.loopexit.4, %1020, %1001
  %1026 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1027 = icmp ne i8* %1026, null
  br i1 %1027, label %1028, label %.outer.backedge.4

; <label>:1028:                                   ; preds = %.loopexit.4
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.4

; <label>:1029:                                   ; preds = %996
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.4, i32 30)
  %1030 = add nsw i32 %.7.4, 1
  br label %.outer.backedge.4

; <label>:1031:                                   ; preds = %981
  %1032 = load i8*, i8** %41, align 16
  %1033 = call i32 @strcasecmp(i8* %1032, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1034 = icmp ne i32 %1033, 0
  br i1 %1034, label %1042, label %1035

; <label>:1035:                                   ; preds = %1031
  %1036 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %1036, label %1040, label %1037

; <label>:1037:                                   ; preds = %1035
  %1038 = load i8*, i8** %45, align 8
  %1039 = call i32 @atoi(i8* %1038) #8
  store i32 %1039, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.4

; <label>:1040:                                   ; preds = %1035
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.4)
  %1041 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1042:                                   ; preds = %1031
  %1043 = load i8*, i8** %43, align 16
  %1044 = call i32 @strcasecmp(i8* %1043, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1045 = icmp ne i32 %1044, 0
  br i1 %1045, label %1065, label %1046

; <label>:1046:                                   ; preds = %1042
  %1047 = icmp ne i32 %.1.lcssa.lcssa.4, 4
  br i1 %1047, label %1063, label %1048

; <label>:1048:                                   ; preds = %1046
  %1049 = load i8*, i8** %46, align 8
  %1050 = load i8*, i8** %47, align 16
  %1051 = load i8*, i8** %48, align 8
  %1052 = call i32 @atoi(i8* %1051) #8
  %1053 = call i32 @conv_scoped_conf(i8* %1049, i8* %1050, i32 %1052)
  %1054 = icmp ne i32 %1053, 0
  %1055 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1056 = load i8*, i8** %49, align 8
  %1057 = load i8*, i8** %50, align 16
  %1058 = load i8*, i8** %51, align 8
  br i1 %1054, label %1061, label %1059

; <label>:1059:                                   ; preds = %1048
  %1060 = call i32 @atoi(i8* %1058) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1055, i8* %1056, i8* %1057, i32 %1060)
  br label %.outer.backedge.4

; <label>:1061:                                   ; preds = %1048
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1055, i8* %1056, i8* %1057, i8* %1058)
  %1062 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1063:                                   ; preds = %1046
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.4)
  %1064 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1065:                                   ; preds = %1042
  %1066 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.4, i8* %1066)
  %1067 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

.outer.backedge.4:                                ; preds = %1065, %1063, %1061, %1059, %1040, %1037, %1029, %1028, %.loopexit.4, %979, %976, %968, %965, %957, %956, %948, %946, %945, %931, %928, %924, %919
  %.03.ph.be.4 = phi i32 [ %920, %919 ], [ %930, %928 ], [ %932, %931 ], [ %.03.ph.be.3, %924 ], [ %949, %948 ], [ %947, %946 ], [ %.03.ph.be.3, %945 ], [ %958, %957 ], [ %.03.ph.be.3, %956 ], [ %969, %968 ], [ %.03.ph.be.3, %965 ], [ %980, %979 ], [ %.03.ph.be.3, %976 ], [ %1030, %1029 ], [ %.7.4, %1028 ], [ %.7.4, %.loopexit.4 ], [ %1041, %1040 ], [ %.03.ph.be.3, %1037 ], [ %1067, %1065 ], [ %1064, %1063 ], [ %1062, %1061 ], [ %.03.ph.be.3, %1059 ]
  call void @__loop_iteration_test___2()
  %1068 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1069 = icmp ne i8* %1068, null
  br i1 %1069, label %.lr.ph.5, label %.outer._crit_edge.loopexit1

.lr.ph.5:                                         ; preds = %.outer.backedge.4
  call void @unroll_loop(i32 48)
  br label %1070

; <label>:1070:                                   ; preds = %1104, %.lr.ph.5
  %.0712.5 = phi i32 [ %.lcssa.4, %.lr.ph.5 ], [ %1071, %1104 ]
  call void @unroll_loop(i32 44)
  %1071 = add nsw i32 %.0712.5, 1
  %1072 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1073 = icmp ne i8* %1072, null
  br i1 %1073, label %1074, label %1075

; <label>:1074:                                   ; preds = %1070
  store i8 0, i8* %1072, align 1
  br label %1075

; <label>:1075:                                   ; preds = %1074, %1070
  %1076 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1077 = icmp ne i8* %1076, null
  br i1 %1077, label %1078, label %1079

; <label>:1078:                                   ; preds = %1075
  store i8 0, i8* %1076, align 1
  br label %1079

; <label>:1079:                                   ; preds = %1078, %1075
  %1080 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1081 = icmp ne i8* %1080, null
  br i1 %1081, label %1082, label %1083

; <label>:1082:                                   ; preds = %1079
  store i8 0, i8* %1080, align 1
  br label %1083

; <label>:1083:                                   ; preds = %1082, %1079
  %1084 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1085 = icmp ne i8* %1084, null
  br i1 %1085, label %1086, label %1087

; <label>:1086:                                   ; preds = %1083
  store i8 0, i8* %1084, align 1
  br label %1087

; <label>:1087:                                   ; preds = %1086, %1083
  %1088 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1088, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1089 = load i8*, i8** %26, align 8
  %1090 = icmp ne i8* %1089, null
  %.14.5 = select i1 %1090, i32 1, i32 0
  %1091 = select i1 %1090, i1 true, i1 false
  br i1 %1091, label %.lr.ph6.preheader.5, label %._crit_edge.5

.lr.ph6.preheader.5:                              ; preds = %1087
  br label %.lr.ph6.5

.lr.ph6.5:                                        ; preds = %.lr.ph6.5, %.lr.ph6.preheader.5
  %.15.5 = phi i32 [ %.1.5, %.lr.ph6.5 ], [ %.14.5, %.lr.ph6.preheader.5 ]
  %1092 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1093 = sext i32 %.15.5 to i64
  %1094 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1093
  store i8* %1092, i8** %1094, align 8
  call void @unroll_loop(i32 45)
  %1095 = sext i32 %.15.5 to i64
  %1096 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1095
  %1097 = load i8*, i8** %1096, align 8
  %1098 = icmp ne i8* %1097, null
  %1099 = add nsw i32 %.15.5, 1
  %1100 = icmp slt i32 %1099, 30
  %.1.5 = select i1 %1098, i32 %1099, i32 %.15.5
  %1101 = select i1 %1098, i1 %1100, i1 false
  br i1 %1101, label %.lr.ph6.5, label %._crit_edge.loopexit.5

._crit_edge.loopexit.5:                           ; preds = %.lr.ph6.5
  %.1.lcssa.ph.5 = phi i32 [ %.1.5, %.lr.ph6.5 ]
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.loopexit.5, %1087
  %.1.lcssa.5 = phi i32 [ %.14.5, %1087 ], [ %.1.lcssa.ph.5, %._crit_edge.loopexit.5 ]
  %1102 = load i8*, i8** %27, align 16
  %1103 = icmp ne i8* %1102, null
  br i1 %1103, label %1107, label %1104

; <label>:1104:                                   ; preds = %._crit_edge.5
  %1105 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1106 = icmp ne i8* %1105, null
  br i1 %1106, label %1070, label %.outer._crit_edge.loopexit.loopexit5

; <label>:1107:                                   ; preds = %._crit_edge.5
  %.1.lcssa.lcssa.5 = phi i32 [ %.1.lcssa.5, %._crit_edge.5 ]
  %.lcssa.5 = phi i32 [ %1071, %._crit_edge.5 ]
  %1108 = load i8*, i8** %28, align 16
  %1109 = call i32 @strcasecmp(i8* %1108, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1110 = icmp ne i32 %1109, 0
  br i1 %1110, label %1136, label %1111

; <label>:1111:                                   ; preds = %1107
  %1112 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  %1113 = icmp sgt i32 %.1.lcssa.lcssa.5, 4
  %or.cond.5 = or i1 %1112, %1113
  br i1 %or.cond.5, label %1134, label %1114

; <label>:1114:                                   ; preds = %1111
  %1115 = icmp sgt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1115, label %1116, label %1127

; <label>:1116:                                   ; preds = %1114
  %1117 = load i8*, i8** %34, align 8
  %1118 = call i32 @strcasecmp(i8* %1117, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1119 = icmp ne i32 %1118, 0
  br i1 %1119, label %1131, label %1120

; <label>:1120:                                   ; preds = %1116
  %1121 = icmp sge i32 %.1.lcssa.lcssa.5, 3
  br i1 %1121, label %1124, label %1122

; <label>:1122:                                   ; preds = %1120
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.5)
  %1123 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1124:                                   ; preds = %1120
  %1125 = load i8*, i8** %40, align 8
  %1126 = call i32 @atoi(i8* %1125) #8
  br label %1127

; <label>:1127:                                   ; preds = %1124, %1114
  %.08.5 = phi i32 [ %1126, %1124 ], [ 53, %1114 ]
  %1128 = load i8*, i8** %35, align 8
  %1129 = call i32 @fwd_add(i8* %1128, i32 %.08.5)
  %1130 = icmp eq i32 %1129, -1
  br i1 %1130, label %.loopexit1.loopexit, label %.outer.backedge.5

; <label>:1131:                                   ; preds = %1116
  %1132 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.5, i8* %1132)
  %1133 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1134:                                   ; preds = %1111
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.5)
  %1135 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1136:                                   ; preds = %1107
  %1137 = load i8*, i8** %29, align 16
  %1138 = call i32 @strcasecmp(i8* %1137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1139 = icmp ne i32 %1138, 0
  br i1 %1139, label %1153, label %1140

; <label>:1140:                                   ; preds = %1136
  %1141 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1141, label %1151, label %1142

; <label>:1142:                                   ; preds = %1140
  %1143 = load i8*, i8** %32, align 8
  %1144 = call i32 @conv_trick_conf(i8* %1143)
  %1145 = icmp ne i32 %1144, 0
  %1146 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1147 = load i8*, i8** %33, align 8
  br i1 %1145, label %1149, label %1148

; <label>:1148:                                   ; preds = %1142
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1146, i8* %1147)
  br label %.outer.backedge.5

; <label>:1149:                                   ; preds = %1142
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1146, i8* %1147)
  %1150 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1151:                                   ; preds = %1140
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.5)
  %1152 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1153:                                   ; preds = %1136
  %1154 = load i8*, i8** %30, align 16
  %1155 = call i32 @strcasecmp(i8* %1154, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1156 = icmp ne i32 %1155, 0
  br i1 %1156, label %1162, label %1157

; <label>:1157:                                   ; preds = %1153
  %1158 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1158, label %1160, label %1159

; <label>:1159:                                   ; preds = %1157
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.5

; <label>:1160:                                   ; preds = %1157
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.5)
  %1161 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1162:                                   ; preds = %1153
  %1163 = load i8*, i8** %31, align 16
  %1164 = call i32 @strcasecmp(i8* %1163, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1165 = icmp ne i32 %1164, 0
  br i1 %1165, label %1173, label %1166

; <label>:1166:                                   ; preds = %1162
  %1167 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1167, label %1171, label %1168

; <label>:1168:                                   ; preds = %1166
  %1169 = load i8*, i8** %39, align 8
  %1170 = call i32 @atoi(i8* %1169) #8
  store i32 %1170, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.5

; <label>:1171:                                   ; preds = %1166
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.5)
  %1172 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1173:                                   ; preds = %1162
  %1174 = load i8*, i8** %36, align 16
  %1175 = call i32 @strcasecmp(i8* %1174, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1176 = icmp ne i32 %1175, 0
  br i1 %1176, label %1184, label %1177

; <label>:1177:                                   ; preds = %1173
  %1178 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1178, label %1182, label %1179

; <label>:1179:                                   ; preds = %1177
  %1180 = load i8*, i8** %42, align 8
  %1181 = call noalias i8* @strdup(i8* %1180) #9, !track !108
  store i8* %1181, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.5

; <label>:1182:                                   ; preds = %1177
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.5)
  %1183 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1184:                                   ; preds = %1173
  %1185 = load i8*, i8** %38, align 16
  %1186 = call i32 @strcasecmp(i8* %1185, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1187 = icmp ne i32 %1186, 0
  br i1 %1187, label %1234, label %1188

; <label>:1188:                                   ; preds = %1184
  %1189 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1189, label %1190, label %1192

; <label>:1190:                                   ; preds = %1188
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.5)
  %1191 = add nsw i32 %.03.ph.be.4, 1
  br label %1192

; <label>:1192:                                   ; preds = %1190, %1188
  %.7.5 = phi i32 [ %1191, %1190 ], [ %.03.ph.be.4, %1188 ]
  br label %1193

; <label>:1193:                                   ; preds = %1193, %1192
  %lsr.iv.5 = phi i64 [ %lsr.iv.next.5, %1193 ], [ -1, %1192 ]
  %1194 = add i64 %lsr.iv.5, 1
  call void @unroll_loop(i32 46)
  %1195 = shl i64 %lsr.iv.5, 3
  %uglygep.5 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1195
  %uglygep3.5 = bitcast i8* %uglygep.5 to i8**
  %scevgep.5 = getelementptr i8*, i8** %uglygep3.5, i64 111
  %1196 = load i8*, i8** %scevgep.5, align 8
  %1197 = icmp ne i8* %1196, null
  %1198 = icmp ult i64 %1194, 30
  %spec.select.5 = select i1 %1197, i1 %1198, i1 false
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %spec.select.5, label %1193, label %1199

; <label>:1199:                                   ; preds = %1193
  %.01.lcssa.wide.5 = phi i64 [ %lsr.iv.next.5, %1193 ]
  %1200 = trunc i64 %.01.lcssa.wide.5 to i32
  %1201 = add nsw i32 %1200, %.1.lcssa.lcssa.5
  %1202 = sub nsw i32 %1201, 1
  %1203 = icmp sgt i32 %1202, 30
  br i1 %1203, label %1232, label %1204

; <label>:1204:                                   ; preds = %1199
  %1205 = sub nsw i32 %.1.lcssa.lcssa.5, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.5, i32 %1205)
  %1206 = add nsw i32 %.1.lcssa.lcssa.5, -1
  %1207 = add nsw i32 %1200, %.1.lcssa.lcssa.5
  %1208 = sext i32 %1207 to i64
  %1209 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1208
  store i8* null, i8** %1209, align 8
  %1210 = icmp ne i32 %1206, 0
  br i1 %1210, label %.lr.ph16.5, label %.loopexit.5

.lr.ph16.5:                                       ; preds = %1204
  %1211 = add i32 %.1.lcssa.lcssa.5, -1
  %1212 = sext i32 %1211 to i64
  %1213 = sext i32 %1200 to i64
  %scevgep4.5 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1212
  %1214 = shl i64 %1212, 1
  %1215 = shl i64 %1213, 1
  %1216 = add i64 %1214, %1215
  %scevgep9.5 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1216
  %1217 = sub i32 1, %.1.lcssa.lcssa.5
  %1218 = zext i32 %1217 to i64
  br label %1219

; <label>:1219:                                   ; preds = %1224, %.lr.ph16.5
  %lsr.iv5.5 = phi i64 [ 0, %.lr.ph16.5 ], [ %lsr.iv.next6.5, %1224 ]
  call void @unroll_loop(i32 47)
  %scevgep7.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1220 = load i8*, i8** %scevgep7.5, align 8
  %1221 = call i32 @strcmp(i8* %1220, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1222 = icmp ne i32 %1221, 0
  br i1 %1222, label %1224, label %1223

; <label>:1223:                                   ; preds = %1219
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.5

; <label>:1224:                                   ; preds = %1219
  %scevgep8.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1225 = load i8*, i8** %scevgep8.5, align 8
  %1226 = call noalias i8* @strdup(i8* %1225) #9, !track !109
  %1227 = shl i64 %lsr.iv5.5, 1
  %scevgep10.5 = getelementptr i32, i32* %scevgep9.5, i64 %1227
  %scevgep1011.5 = bitcast i32* %scevgep10.5 to i8**
  store i8* %1226, i8** %scevgep1011.5, align 8
  %lsr.iv.next6.5 = add nsw i64 %lsr.iv5.5, -1
  %tmp.5 = trunc i64 %lsr.iv.next6.5 to i32
  %1228 = icmp ne i32 %1217, %tmp.5
  br i1 %1228, label %1219, label %.loopexit.loopexit.5

.loopexit.loopexit.5:                             ; preds = %1224
  br label %.loopexit.5

.loopexit.5:                                      ; preds = %.loopexit.loopexit.5, %1223, %1204
  %1229 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1230 = icmp ne i8* %1229, null
  br i1 %1230, label %1231, label %.outer.backedge.5

; <label>:1231:                                   ; preds = %.loopexit.5
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.5

; <label>:1232:                                   ; preds = %1199
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.5, i32 30)
  %1233 = add nsw i32 %.7.5, 1
  br label %.outer.backedge.5

; <label>:1234:                                   ; preds = %1184
  %1235 = load i8*, i8** %41, align 16
  %1236 = call i32 @strcasecmp(i8* %1235, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1237 = icmp ne i32 %1236, 0
  br i1 %1237, label %1245, label %1238

; <label>:1238:                                   ; preds = %1234
  %1239 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1239, label %1243, label %1240

; <label>:1240:                                   ; preds = %1238
  %1241 = load i8*, i8** %45, align 8
  %1242 = call i32 @atoi(i8* %1241) #8
  store i32 %1242, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.5

; <label>:1243:                                   ; preds = %1238
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.5)
  %1244 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1245:                                   ; preds = %1234
  %1246 = load i8*, i8** %43, align 16
  %1247 = call i32 @strcasecmp(i8* %1246, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1248 = icmp ne i32 %1247, 0
  br i1 %1248, label %1268, label %1249

; <label>:1249:                                   ; preds = %1245
  %1250 = icmp ne i32 %.1.lcssa.lcssa.5, 4
  br i1 %1250, label %1266, label %1251

; <label>:1251:                                   ; preds = %1249
  %1252 = load i8*, i8** %46, align 8
  %1253 = load i8*, i8** %47, align 16
  %1254 = load i8*, i8** %48, align 8
  %1255 = call i32 @atoi(i8* %1254) #8
  %1256 = call i32 @conv_scoped_conf(i8* %1252, i8* %1253, i32 %1255)
  %1257 = icmp ne i32 %1256, 0
  %1258 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1259 = load i8*, i8** %49, align 8
  %1260 = load i8*, i8** %50, align 16
  %1261 = load i8*, i8** %51, align 8
  br i1 %1257, label %1264, label %1262

; <label>:1262:                                   ; preds = %1251
  %1263 = call i32 @atoi(i8* %1261) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1258, i8* %1259, i8* %1260, i32 %1263)
  br label %.outer.backedge.5

; <label>:1264:                                   ; preds = %1251
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1258, i8* %1259, i8* %1260, i8* %1261)
  %1265 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1266:                                   ; preds = %1249
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.5)
  %1267 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1268:                                   ; preds = %1245
  %1269 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.5, i8* %1269)
  %1270 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

.outer.backedge.5:                                ; preds = %1268, %1266, %1264, %1262, %1243, %1240, %1232, %1231, %.loopexit.5, %1182, %1179, %1171, %1168, %1160, %1159, %1151, %1149, %1148, %1134, %1131, %1127, %1122
  %.03.ph.be.5 = phi i32 [ %1123, %1122 ], [ %1133, %1131 ], [ %1135, %1134 ], [ %.03.ph.be.4, %1127 ], [ %1152, %1151 ], [ %1150, %1149 ], [ %.03.ph.be.4, %1148 ], [ %1161, %1160 ], [ %.03.ph.be.4, %1159 ], [ %1172, %1171 ], [ %.03.ph.be.4, %1168 ], [ %1183, %1182 ], [ %.03.ph.be.4, %1179 ], [ %1233, %1232 ], [ %.7.5, %1231 ], [ %.7.5, %.loopexit.5 ], [ %1244, %1243 ], [ %.03.ph.be.4, %1240 ], [ %1270, %1268 ], [ %1267, %1266 ], [ %1265, %1264 ], [ %.03.ph.be.4, %1262 ]
  call void @__loop_iteration_test___2()
  %1271 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1272 = icmp ne i8* %1271, null
  br i1 %1272, label %.lr.ph.6, label %.outer._crit_edge.loopexit1

.lr.ph.6:                                         ; preds = %.outer.backedge.5
  call void @unroll_loop(i32 48)
  br label %1273

; <label>:1273:                                   ; preds = %1307, %.lr.ph.6
  %.0712.6 = phi i32 [ %.lcssa.5, %.lr.ph.6 ], [ %1274, %1307 ]
  call void @unroll_loop(i32 44)
  %1274 = add nsw i32 %.0712.6, 1
  %1275 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1276 = icmp ne i8* %1275, null
  br i1 %1276, label %1277, label %1278

; <label>:1277:                                   ; preds = %1273
  store i8 0, i8* %1275, align 1
  br label %1278

; <label>:1278:                                   ; preds = %1277, %1273
  %1279 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1280 = icmp ne i8* %1279, null
  br i1 %1280, label %1281, label %1282

; <label>:1281:                                   ; preds = %1278
  store i8 0, i8* %1279, align 1
  br label %1282

; <label>:1282:                                   ; preds = %1281, %1278
  %1283 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1284 = icmp ne i8* %1283, null
  br i1 %1284, label %1285, label %1286

; <label>:1285:                                   ; preds = %1282
  store i8 0, i8* %1283, align 1
  br label %1286

; <label>:1286:                                   ; preds = %1285, %1282
  %1287 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1288 = icmp ne i8* %1287, null
  br i1 %1288, label %1289, label %1290

; <label>:1289:                                   ; preds = %1286
  store i8 0, i8* %1287, align 1
  br label %1290

; <label>:1290:                                   ; preds = %1289, %1286
  %1291 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1291, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1292 = load i8*, i8** %26, align 8
  %1293 = icmp ne i8* %1292, null
  %.14.6 = select i1 %1293, i32 1, i32 0
  %1294 = select i1 %1293, i1 true, i1 false
  br i1 %1294, label %.lr.ph6.preheader.6, label %._crit_edge.6

.lr.ph6.preheader.6:                              ; preds = %1290
  br label %.lr.ph6.6

.lr.ph6.6:                                        ; preds = %.lr.ph6.6, %.lr.ph6.preheader.6
  %.15.6 = phi i32 [ %.1.6, %.lr.ph6.6 ], [ %.14.6, %.lr.ph6.preheader.6 ]
  %1295 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1296 = sext i32 %.15.6 to i64
  %1297 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1296
  store i8* %1295, i8** %1297, align 8
  call void @unroll_loop(i32 45)
  %1298 = sext i32 %.15.6 to i64
  %1299 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1298
  %1300 = load i8*, i8** %1299, align 8
  %1301 = icmp ne i8* %1300, null
  %1302 = add nsw i32 %.15.6, 1
  %1303 = icmp slt i32 %1302, 30
  %.1.6 = select i1 %1301, i32 %1302, i32 %.15.6
  %1304 = select i1 %1301, i1 %1303, i1 false
  br i1 %1304, label %.lr.ph6.6, label %._crit_edge.loopexit.6

._crit_edge.loopexit.6:                           ; preds = %.lr.ph6.6
  %.1.lcssa.ph.6 = phi i32 [ %.1.6, %.lr.ph6.6 ]
  br label %._crit_edge.6

._crit_edge.6:                                    ; preds = %._crit_edge.loopexit.6, %1290
  %.1.lcssa.6 = phi i32 [ %.14.6, %1290 ], [ %.1.lcssa.ph.6, %._crit_edge.loopexit.6 ]
  %1305 = load i8*, i8** %27, align 16
  %1306 = icmp ne i8* %1305, null
  br i1 %1306, label %1310, label %1307

; <label>:1307:                                   ; preds = %._crit_edge.6
  %1308 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1309 = icmp ne i8* %1308, null
  br i1 %1309, label %1273, label %.outer._crit_edge.loopexit.loopexit6

; <label>:1310:                                   ; preds = %._crit_edge.6
  %.1.lcssa.lcssa.6 = phi i32 [ %.1.lcssa.6, %._crit_edge.6 ]
  %.lcssa.6 = phi i32 [ %1274, %._crit_edge.6 ]
  %1311 = load i8*, i8** %28, align 16
  %1312 = call i32 @strcasecmp(i8* %1311, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1313 = icmp ne i32 %1312, 0
  br i1 %1313, label %1339, label %1314

; <label>:1314:                                   ; preds = %1310
  %1315 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  %1316 = icmp sgt i32 %.1.lcssa.lcssa.6, 4
  %or.cond.6 = or i1 %1315, %1316
  br i1 %or.cond.6, label %1337, label %1317

; <label>:1317:                                   ; preds = %1314
  %1318 = icmp sgt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1318, label %1319, label %1330

; <label>:1319:                                   ; preds = %1317
  %1320 = load i8*, i8** %34, align 8
  %1321 = call i32 @strcasecmp(i8* %1320, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1322 = icmp ne i32 %1321, 0
  br i1 %1322, label %1334, label %1323

; <label>:1323:                                   ; preds = %1319
  %1324 = icmp sge i32 %.1.lcssa.lcssa.6, 3
  br i1 %1324, label %1327, label %1325

; <label>:1325:                                   ; preds = %1323
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.6)
  %1326 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1327:                                   ; preds = %1323
  %1328 = load i8*, i8** %40, align 8
  %1329 = call i32 @atoi(i8* %1328) #8
  br label %1330

; <label>:1330:                                   ; preds = %1327, %1317
  %.08.6 = phi i32 [ %1329, %1327 ], [ 53, %1317 ]
  %1331 = load i8*, i8** %35, align 8
  %1332 = call i32 @fwd_add(i8* %1331, i32 %.08.6)
  %1333 = icmp eq i32 %1332, -1
  br i1 %1333, label %.loopexit1.loopexit, label %.outer.backedge.6

; <label>:1334:                                   ; preds = %1319
  %1335 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.6, i8* %1335)
  %1336 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1337:                                   ; preds = %1314
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.6)
  %1338 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1339:                                   ; preds = %1310
  %1340 = load i8*, i8** %29, align 16
  %1341 = call i32 @strcasecmp(i8* %1340, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1342 = icmp ne i32 %1341, 0
  br i1 %1342, label %1356, label %1343

; <label>:1343:                                   ; preds = %1339
  %1344 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1344, label %1354, label %1345

; <label>:1345:                                   ; preds = %1343
  %1346 = load i8*, i8** %32, align 8
  %1347 = call i32 @conv_trick_conf(i8* %1346)
  %1348 = icmp ne i32 %1347, 0
  %1349 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1350 = load i8*, i8** %33, align 8
  br i1 %1348, label %1352, label %1351

; <label>:1351:                                   ; preds = %1345
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1349, i8* %1350)
  br label %.outer.backedge.6

; <label>:1352:                                   ; preds = %1345
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1349, i8* %1350)
  %1353 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1354:                                   ; preds = %1343
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.6)
  %1355 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1356:                                   ; preds = %1339
  %1357 = load i8*, i8** %30, align 16
  %1358 = call i32 @strcasecmp(i8* %1357, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1359 = icmp ne i32 %1358, 0
  br i1 %1359, label %1365, label %1360

; <label>:1360:                                   ; preds = %1356
  %1361 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1361, label %1363, label %1362

; <label>:1362:                                   ; preds = %1360
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.6

; <label>:1363:                                   ; preds = %1360
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.6)
  %1364 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1365:                                   ; preds = %1356
  %1366 = load i8*, i8** %31, align 16
  %1367 = call i32 @strcasecmp(i8* %1366, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1368 = icmp ne i32 %1367, 0
  br i1 %1368, label %1376, label %1369

; <label>:1369:                                   ; preds = %1365
  %1370 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1370, label %1374, label %1371

; <label>:1371:                                   ; preds = %1369
  %1372 = load i8*, i8** %39, align 8
  %1373 = call i32 @atoi(i8* %1372) #8
  store i32 %1373, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.6

; <label>:1374:                                   ; preds = %1369
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.6)
  %1375 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1376:                                   ; preds = %1365
  %1377 = load i8*, i8** %36, align 16
  %1378 = call i32 @strcasecmp(i8* %1377, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1379 = icmp ne i32 %1378, 0
  br i1 %1379, label %1387, label %1380

; <label>:1380:                                   ; preds = %1376
  %1381 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1381, label %1385, label %1382

; <label>:1382:                                   ; preds = %1380
  %1383 = load i8*, i8** %42, align 8
  %1384 = call noalias i8* @strdup(i8* %1383) #9, !track !108
  store i8* %1384, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.6

; <label>:1385:                                   ; preds = %1380
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.6)
  %1386 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1387:                                   ; preds = %1376
  %1388 = load i8*, i8** %38, align 16
  %1389 = call i32 @strcasecmp(i8* %1388, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1390 = icmp ne i32 %1389, 0
  br i1 %1390, label %1437, label %1391

; <label>:1391:                                   ; preds = %1387
  %1392 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1392, label %1393, label %1395

; <label>:1393:                                   ; preds = %1391
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.6)
  %1394 = add nsw i32 %.03.ph.be.5, 1
  br label %1395

; <label>:1395:                                   ; preds = %1393, %1391
  %.7.6 = phi i32 [ %1394, %1393 ], [ %.03.ph.be.5, %1391 ]
  br label %1396

; <label>:1396:                                   ; preds = %1396, %1395
  %lsr.iv.6 = phi i64 [ %lsr.iv.next.6, %1396 ], [ -1, %1395 ]
  %1397 = add i64 %lsr.iv.6, 1
  call void @unroll_loop(i32 46)
  %1398 = shl i64 %lsr.iv.6, 3
  %uglygep.6 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1398
  %uglygep3.6 = bitcast i8* %uglygep.6 to i8**
  %scevgep.6 = getelementptr i8*, i8** %uglygep3.6, i64 111
  %1399 = load i8*, i8** %scevgep.6, align 8
  %1400 = icmp ne i8* %1399, null
  %1401 = icmp ult i64 %1397, 30
  %spec.select.6 = select i1 %1400, i1 %1401, i1 false
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %spec.select.6, label %1396, label %1402

; <label>:1402:                                   ; preds = %1396
  %.01.lcssa.wide.6 = phi i64 [ %lsr.iv.next.6, %1396 ]
  %1403 = trunc i64 %.01.lcssa.wide.6 to i32
  %1404 = add nsw i32 %1403, %.1.lcssa.lcssa.6
  %1405 = sub nsw i32 %1404, 1
  %1406 = icmp sgt i32 %1405, 30
  br i1 %1406, label %1435, label %1407

; <label>:1407:                                   ; preds = %1402
  %1408 = sub nsw i32 %.1.lcssa.lcssa.6, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.6, i32 %1408)
  %1409 = add nsw i32 %.1.lcssa.lcssa.6, -1
  %1410 = add nsw i32 %1403, %.1.lcssa.lcssa.6
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1411
  store i8* null, i8** %1412, align 8
  %1413 = icmp ne i32 %1409, 0
  br i1 %1413, label %.lr.ph16.6, label %.loopexit.6

.lr.ph16.6:                                       ; preds = %1407
  %1414 = add i32 %.1.lcssa.lcssa.6, -1
  %1415 = sext i32 %1414 to i64
  %1416 = sext i32 %1403 to i64
  %scevgep4.6 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1415
  %1417 = shl i64 %1415, 1
  %1418 = shl i64 %1416, 1
  %1419 = add i64 %1417, %1418
  %scevgep9.6 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1419
  %1420 = sub i32 1, %.1.lcssa.lcssa.6
  %1421 = zext i32 %1420 to i64
  br label %1422

; <label>:1422:                                   ; preds = %1427, %.lr.ph16.6
  %lsr.iv5.6 = phi i64 [ 0, %.lr.ph16.6 ], [ %lsr.iv.next6.6, %1427 ]
  call void @unroll_loop(i32 47)
  %scevgep7.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1423 = load i8*, i8** %scevgep7.6, align 8
  %1424 = call i32 @strcmp(i8* %1423, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1425 = icmp ne i32 %1424, 0
  br i1 %1425, label %1427, label %1426

; <label>:1426:                                   ; preds = %1422
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.6

; <label>:1427:                                   ; preds = %1422
  %scevgep8.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1428 = load i8*, i8** %scevgep8.6, align 8
  %1429 = call noalias i8* @strdup(i8* %1428) #9, !track !109
  %1430 = shl i64 %lsr.iv5.6, 1
  %scevgep10.6 = getelementptr i32, i32* %scevgep9.6, i64 %1430
  %scevgep1011.6 = bitcast i32* %scevgep10.6 to i8**
  store i8* %1429, i8** %scevgep1011.6, align 8
  %lsr.iv.next6.6 = add nsw i64 %lsr.iv5.6, -1
  %tmp.6 = trunc i64 %lsr.iv.next6.6 to i32
  %1431 = icmp ne i32 %1420, %tmp.6
  br i1 %1431, label %1422, label %.loopexit.loopexit.6

.loopexit.loopexit.6:                             ; preds = %1427
  br label %.loopexit.6

.loopexit.6:                                      ; preds = %.loopexit.loopexit.6, %1426, %1407
  %1432 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1433 = icmp ne i8* %1432, null
  br i1 %1433, label %1434, label %.outer.backedge.6

; <label>:1434:                                   ; preds = %.loopexit.6
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.6

; <label>:1435:                                   ; preds = %1402
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.6, i32 30)
  %1436 = add nsw i32 %.7.6, 1
  br label %.outer.backedge.6

; <label>:1437:                                   ; preds = %1387
  %1438 = load i8*, i8** %41, align 16
  %1439 = call i32 @strcasecmp(i8* %1438, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1440 = icmp ne i32 %1439, 0
  br i1 %1440, label %1448, label %1441

; <label>:1441:                                   ; preds = %1437
  %1442 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1442, label %1446, label %1443

; <label>:1443:                                   ; preds = %1441
  %1444 = load i8*, i8** %45, align 8
  %1445 = call i32 @atoi(i8* %1444) #8
  store i32 %1445, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.6

; <label>:1446:                                   ; preds = %1441
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.6)
  %1447 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1448:                                   ; preds = %1437
  %1449 = load i8*, i8** %43, align 16
  %1450 = call i32 @strcasecmp(i8* %1449, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1451 = icmp ne i32 %1450, 0
  br i1 %1451, label %1471, label %1452

; <label>:1452:                                   ; preds = %1448
  %1453 = icmp ne i32 %.1.lcssa.lcssa.6, 4
  br i1 %1453, label %1469, label %1454

; <label>:1454:                                   ; preds = %1452
  %1455 = load i8*, i8** %46, align 8
  %1456 = load i8*, i8** %47, align 16
  %1457 = load i8*, i8** %48, align 8
  %1458 = call i32 @atoi(i8* %1457) #8
  %1459 = call i32 @conv_scoped_conf(i8* %1455, i8* %1456, i32 %1458)
  %1460 = icmp ne i32 %1459, 0
  %1461 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1462 = load i8*, i8** %49, align 8
  %1463 = load i8*, i8** %50, align 16
  %1464 = load i8*, i8** %51, align 8
  br i1 %1460, label %1467, label %1465

; <label>:1465:                                   ; preds = %1454
  %1466 = call i32 @atoi(i8* %1464) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1461, i8* %1462, i8* %1463, i32 %1466)
  br label %.outer.backedge.6

; <label>:1467:                                   ; preds = %1454
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1461, i8* %1462, i8* %1463, i8* %1464)
  %1468 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1469:                                   ; preds = %1452
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.6)
  %1470 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1471:                                   ; preds = %1448
  %1472 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.6, i8* %1472)
  %1473 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

.outer.backedge.6:                                ; preds = %1471, %1469, %1467, %1465, %1446, %1443, %1435, %1434, %.loopexit.6, %1385, %1382, %1374, %1371, %1363, %1362, %1354, %1352, %1351, %1337, %1334, %1330, %1325
  %.03.ph.be.6 = phi i32 [ %1326, %1325 ], [ %1336, %1334 ], [ %1338, %1337 ], [ %.03.ph.be.5, %1330 ], [ %1355, %1354 ], [ %1353, %1352 ], [ %.03.ph.be.5, %1351 ], [ %1364, %1363 ], [ %.03.ph.be.5, %1362 ], [ %1375, %1374 ], [ %.03.ph.be.5, %1371 ], [ %1386, %1385 ], [ %.03.ph.be.5, %1382 ], [ %1436, %1435 ], [ %.7.6, %1434 ], [ %.7.6, %.loopexit.6 ], [ %1447, %1446 ], [ %.03.ph.be.5, %1443 ], [ %1473, %1471 ], [ %1470, %1469 ], [ %1468, %1467 ], [ %.03.ph.be.5, %1465 ]
  call void @__loop_iteration_test___2()
  %1474 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1475 = icmp ne i8* %1474, null
  br i1 %1475, label %.lr.ph.7, label %.outer._crit_edge.loopexit1

.lr.ph.7:                                         ; preds = %.outer.backedge.6
  call void @unroll_loop(i32 48)
  br label %1476

; <label>:1476:                                   ; preds = %1510, %.lr.ph.7
  %.0712.7 = phi i32 [ %.lcssa.6, %.lr.ph.7 ], [ %1477, %1510 ]
  call void @unroll_loop(i32 44)
  %1477 = add nsw i32 %.0712.7, 1
  %1478 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1479 = icmp ne i8* %1478, null
  br i1 %1479, label %1480, label %1481

; <label>:1480:                                   ; preds = %1476
  store i8 0, i8* %1478, align 1
  br label %1481

; <label>:1481:                                   ; preds = %1480, %1476
  %1482 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1483 = icmp ne i8* %1482, null
  br i1 %1483, label %1484, label %1485

; <label>:1484:                                   ; preds = %1481
  store i8 0, i8* %1482, align 1
  br label %1485

; <label>:1485:                                   ; preds = %1484, %1481
  %1486 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1487 = icmp ne i8* %1486, null
  br i1 %1487, label %1488, label %1489

; <label>:1488:                                   ; preds = %1485
  store i8 0, i8* %1486, align 1
  br label %1489

; <label>:1489:                                   ; preds = %1488, %1485
  %1490 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1491 = icmp ne i8* %1490, null
  br i1 %1491, label %1492, label %1493

; <label>:1492:                                   ; preds = %1489
  store i8 0, i8* %1490, align 1
  br label %1493

; <label>:1493:                                   ; preds = %1492, %1489
  %1494 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1494, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1495 = load i8*, i8** %26, align 8
  %1496 = icmp ne i8* %1495, null
  %.14.7 = select i1 %1496, i32 1, i32 0
  %1497 = select i1 %1496, i1 true, i1 false
  br i1 %1497, label %.lr.ph6.preheader.7, label %._crit_edge.7

.lr.ph6.preheader.7:                              ; preds = %1493
  br label %.lr.ph6.7

.lr.ph6.7:                                        ; preds = %.lr.ph6.7, %.lr.ph6.preheader.7
  %.15.7 = phi i32 [ %.1.7, %.lr.ph6.7 ], [ %.14.7, %.lr.ph6.preheader.7 ]
  %1498 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1499 = sext i32 %.15.7 to i64
  %1500 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1499
  store i8* %1498, i8** %1500, align 8
  call void @unroll_loop(i32 45)
  %1501 = sext i32 %.15.7 to i64
  %1502 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1501
  %1503 = load i8*, i8** %1502, align 8
  %1504 = icmp ne i8* %1503, null
  %1505 = add nsw i32 %.15.7, 1
  %1506 = icmp slt i32 %1505, 30
  %.1.7 = select i1 %1504, i32 %1505, i32 %.15.7
  %1507 = select i1 %1504, i1 %1506, i1 false
  br i1 %1507, label %.lr.ph6.7, label %._crit_edge.loopexit.7

._crit_edge.loopexit.7:                           ; preds = %.lr.ph6.7
  %.1.lcssa.ph.7 = phi i32 [ %.1.7, %.lr.ph6.7 ]
  br label %._crit_edge.7

._crit_edge.7:                                    ; preds = %._crit_edge.loopexit.7, %1493
  %.1.lcssa.7 = phi i32 [ %.14.7, %1493 ], [ %.1.lcssa.ph.7, %._crit_edge.loopexit.7 ]
  %1508 = load i8*, i8** %27, align 16
  %1509 = icmp ne i8* %1508, null
  br i1 %1509, label %1513, label %1510

; <label>:1510:                                   ; preds = %._crit_edge.7
  %1511 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1512 = icmp ne i8* %1511, null
  br i1 %1512, label %1476, label %.outer._crit_edge.loopexit.loopexit7

; <label>:1513:                                   ; preds = %._crit_edge.7
  %.1.lcssa.lcssa.7 = phi i32 [ %.1.lcssa.7, %._crit_edge.7 ]
  %.lcssa.7 = phi i32 [ %1477, %._crit_edge.7 ]
  %1514 = load i8*, i8** %28, align 16
  %1515 = call i32 @strcasecmp(i8* %1514, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1516 = icmp ne i32 %1515, 0
  br i1 %1516, label %1542, label %1517

; <label>:1517:                                   ; preds = %1513
  %1518 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  %1519 = icmp sgt i32 %.1.lcssa.lcssa.7, 4
  %or.cond.7 = or i1 %1518, %1519
  br i1 %or.cond.7, label %1540, label %1520

; <label>:1520:                                   ; preds = %1517
  %1521 = icmp sgt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1521, label %1522, label %1533

; <label>:1522:                                   ; preds = %1520
  %1523 = load i8*, i8** %34, align 8
  %1524 = call i32 @strcasecmp(i8* %1523, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1525 = icmp ne i32 %1524, 0
  br i1 %1525, label %1537, label %1526

; <label>:1526:                                   ; preds = %1522
  %1527 = icmp sge i32 %.1.lcssa.lcssa.7, 3
  br i1 %1527, label %1530, label %1528

; <label>:1528:                                   ; preds = %1526
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.7)
  %1529 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1530:                                   ; preds = %1526
  %1531 = load i8*, i8** %40, align 8
  %1532 = call i32 @atoi(i8* %1531) #8
  br label %1533

; <label>:1533:                                   ; preds = %1530, %1520
  %.08.7 = phi i32 [ %1532, %1530 ], [ 53, %1520 ]
  %1534 = load i8*, i8** %35, align 8
  %1535 = call i32 @fwd_add(i8* %1534, i32 %.08.7)
  %1536 = icmp eq i32 %1535, -1
  br i1 %1536, label %.loopexit1.loopexit, label %.outer.backedge.7

; <label>:1537:                                   ; preds = %1522
  %1538 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.7, i8* %1538)
  %1539 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1540:                                   ; preds = %1517
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.7)
  %1541 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1542:                                   ; preds = %1513
  %1543 = load i8*, i8** %29, align 16
  %1544 = call i32 @strcasecmp(i8* %1543, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1545 = icmp ne i32 %1544, 0
  br i1 %1545, label %1559, label %1546

; <label>:1546:                                   ; preds = %1542
  %1547 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1547, label %1557, label %1548

; <label>:1548:                                   ; preds = %1546
  %1549 = load i8*, i8** %32, align 8
  %1550 = call i32 @conv_trick_conf(i8* %1549)
  %1551 = icmp ne i32 %1550, 0
  %1552 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1553 = load i8*, i8** %33, align 8
  br i1 %1551, label %1555, label %1554

; <label>:1554:                                   ; preds = %1548
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1552, i8* %1553)
  br label %.outer.backedge.7

; <label>:1555:                                   ; preds = %1548
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1552, i8* %1553)
  %1556 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1557:                                   ; preds = %1546
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.7)
  %1558 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1559:                                   ; preds = %1542
  %1560 = load i8*, i8** %30, align 16
  %1561 = call i32 @strcasecmp(i8* %1560, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1562 = icmp ne i32 %1561, 0
  br i1 %1562, label %1568, label %1563

; <label>:1563:                                   ; preds = %1559
  %1564 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1564, label %1566, label %1565

; <label>:1565:                                   ; preds = %1563
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.7

; <label>:1566:                                   ; preds = %1563
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.7)
  %1567 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1568:                                   ; preds = %1559
  %1569 = load i8*, i8** %31, align 16
  %1570 = call i32 @strcasecmp(i8* %1569, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1571 = icmp ne i32 %1570, 0
  br i1 %1571, label %1579, label %1572

; <label>:1572:                                   ; preds = %1568
  %1573 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1573, label %1577, label %1574

; <label>:1574:                                   ; preds = %1572
  %1575 = load i8*, i8** %39, align 8
  %1576 = call i32 @atoi(i8* %1575) #8
  store i32 %1576, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.7

; <label>:1577:                                   ; preds = %1572
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.7)
  %1578 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1579:                                   ; preds = %1568
  %1580 = load i8*, i8** %36, align 16
  %1581 = call i32 @strcasecmp(i8* %1580, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1582 = icmp ne i32 %1581, 0
  br i1 %1582, label %1590, label %1583

; <label>:1583:                                   ; preds = %1579
  %1584 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1584, label %1588, label %1585

; <label>:1585:                                   ; preds = %1583
  %1586 = load i8*, i8** %42, align 8
  %1587 = call noalias i8* @strdup(i8* %1586) #9, !track !108
  store i8* %1587, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.7

; <label>:1588:                                   ; preds = %1583
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.7)
  %1589 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1590:                                   ; preds = %1579
  %1591 = load i8*, i8** %38, align 16
  %1592 = call i32 @strcasecmp(i8* %1591, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1593 = icmp ne i32 %1592, 0
  br i1 %1593, label %1640, label %1594

; <label>:1594:                                   ; preds = %1590
  %1595 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1595, label %1596, label %1598

; <label>:1596:                                   ; preds = %1594
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.7)
  %1597 = add nsw i32 %.03.ph.be.6, 1
  br label %1598

; <label>:1598:                                   ; preds = %1596, %1594
  %.7.7 = phi i32 [ %1597, %1596 ], [ %.03.ph.be.6, %1594 ]
  br label %1599

; <label>:1599:                                   ; preds = %1599, %1598
  %lsr.iv.7 = phi i64 [ %lsr.iv.next.7, %1599 ], [ -1, %1598 ]
  %1600 = add i64 %lsr.iv.7, 1
  call void @unroll_loop(i32 46)
  %1601 = shl i64 %lsr.iv.7, 3
  %uglygep.7 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1601
  %uglygep3.7 = bitcast i8* %uglygep.7 to i8**
  %scevgep.7 = getelementptr i8*, i8** %uglygep3.7, i64 111
  %1602 = load i8*, i8** %scevgep.7, align 8
  %1603 = icmp ne i8* %1602, null
  %1604 = icmp ult i64 %1600, 30
  %spec.select.7 = select i1 %1603, i1 %1604, i1 false
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %spec.select.7, label %1599, label %1605

; <label>:1605:                                   ; preds = %1599
  %.01.lcssa.wide.7 = phi i64 [ %lsr.iv.next.7, %1599 ]
  %1606 = trunc i64 %.01.lcssa.wide.7 to i32
  %1607 = add nsw i32 %1606, %.1.lcssa.lcssa.7
  %1608 = sub nsw i32 %1607, 1
  %1609 = icmp sgt i32 %1608, 30
  br i1 %1609, label %1638, label %1610

; <label>:1610:                                   ; preds = %1605
  %1611 = sub nsw i32 %.1.lcssa.lcssa.7, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.7, i32 %1611)
  %1612 = add nsw i32 %.1.lcssa.lcssa.7, -1
  %1613 = add nsw i32 %1606, %.1.lcssa.lcssa.7
  %1614 = sext i32 %1613 to i64
  %1615 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1614
  store i8* null, i8** %1615, align 8
  %1616 = icmp ne i32 %1612, 0
  br i1 %1616, label %.lr.ph16.7, label %.loopexit.7

.lr.ph16.7:                                       ; preds = %1610
  %1617 = add i32 %.1.lcssa.lcssa.7, -1
  %1618 = sext i32 %1617 to i64
  %1619 = sext i32 %1606 to i64
  %scevgep4.7 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1618
  %1620 = shl i64 %1618, 1
  %1621 = shl i64 %1619, 1
  %1622 = add i64 %1620, %1621
  %scevgep9.7 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1622
  %1623 = sub i32 1, %.1.lcssa.lcssa.7
  %1624 = zext i32 %1623 to i64
  br label %1625

; <label>:1625:                                   ; preds = %1630, %.lr.ph16.7
  %lsr.iv5.7 = phi i64 [ 0, %.lr.ph16.7 ], [ %lsr.iv.next6.7, %1630 ]
  call void @unroll_loop(i32 47)
  %scevgep7.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1626 = load i8*, i8** %scevgep7.7, align 8
  %1627 = call i32 @strcmp(i8* %1626, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1628 = icmp ne i32 %1627, 0
  br i1 %1628, label %1630, label %1629

; <label>:1629:                                   ; preds = %1625
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.7

; <label>:1630:                                   ; preds = %1625
  %scevgep8.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1631 = load i8*, i8** %scevgep8.7, align 8
  %1632 = call noalias i8* @strdup(i8* %1631) #9, !track !109
  %1633 = shl i64 %lsr.iv5.7, 1
  %scevgep10.7 = getelementptr i32, i32* %scevgep9.7, i64 %1633
  %scevgep1011.7 = bitcast i32* %scevgep10.7 to i8**
  store i8* %1632, i8** %scevgep1011.7, align 8
  %lsr.iv.next6.7 = add nsw i64 %lsr.iv5.7, -1
  %tmp.7 = trunc i64 %lsr.iv.next6.7 to i32
  %1634 = icmp ne i32 %1623, %tmp.7
  br i1 %1634, label %1625, label %.loopexit.loopexit.7

.loopexit.loopexit.7:                             ; preds = %1630
  br label %.loopexit.7

.loopexit.7:                                      ; preds = %.loopexit.loopexit.7, %1629, %1610
  %1635 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1636 = icmp ne i8* %1635, null
  br i1 %1636, label %1637, label %.outer.backedge.7

; <label>:1637:                                   ; preds = %.loopexit.7
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.7

; <label>:1638:                                   ; preds = %1605
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.7, i32 30)
  %1639 = add nsw i32 %.7.7, 1
  br label %.outer.backedge.7

; <label>:1640:                                   ; preds = %1590
  %1641 = load i8*, i8** %41, align 16
  %1642 = call i32 @strcasecmp(i8* %1641, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1643 = icmp ne i32 %1642, 0
  br i1 %1643, label %1651, label %1644

; <label>:1644:                                   ; preds = %1640
  %1645 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1645, label %1649, label %1646

; <label>:1646:                                   ; preds = %1644
  %1647 = load i8*, i8** %45, align 8
  %1648 = call i32 @atoi(i8* %1647) #8
  store i32 %1648, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.7

; <label>:1649:                                   ; preds = %1644
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.7)
  %1650 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1651:                                   ; preds = %1640
  %1652 = load i8*, i8** %43, align 16
  %1653 = call i32 @strcasecmp(i8* %1652, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1654 = icmp ne i32 %1653, 0
  br i1 %1654, label %1674, label %1655

; <label>:1655:                                   ; preds = %1651
  %1656 = icmp ne i32 %.1.lcssa.lcssa.7, 4
  br i1 %1656, label %1672, label %1657

; <label>:1657:                                   ; preds = %1655
  %1658 = load i8*, i8** %46, align 8
  %1659 = load i8*, i8** %47, align 16
  %1660 = load i8*, i8** %48, align 8
  %1661 = call i32 @atoi(i8* %1660) #8
  %1662 = call i32 @conv_scoped_conf(i8* %1658, i8* %1659, i32 %1661)
  %1663 = icmp ne i32 %1662, 0
  %1664 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1665 = load i8*, i8** %49, align 8
  %1666 = load i8*, i8** %50, align 16
  %1667 = load i8*, i8** %51, align 8
  br i1 %1663, label %1670, label %1668

; <label>:1668:                                   ; preds = %1657
  %1669 = call i32 @atoi(i8* %1667) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1664, i8* %1665, i8* %1666, i32 %1669)
  br label %.outer.backedge.7

; <label>:1670:                                   ; preds = %1657
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1664, i8* %1665, i8* %1666, i8* %1667)
  %1671 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1672:                                   ; preds = %1655
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.7)
  %1673 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1674:                                   ; preds = %1651
  %1675 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.7, i8* %1675)
  %1676 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

.outer.backedge.7:                                ; preds = %1674, %1672, %1670, %1668, %1649, %1646, %1638, %1637, %.loopexit.7, %1588, %1585, %1577, %1574, %1566, %1565, %1557, %1555, %1554, %1540, %1537, %1533, %1528
  %.03.ph.be.7 = phi i32 [ %1529, %1528 ], [ %1539, %1537 ], [ %1541, %1540 ], [ %.03.ph.be.6, %1533 ], [ %1558, %1557 ], [ %1556, %1555 ], [ %.03.ph.be.6, %1554 ], [ %1567, %1566 ], [ %.03.ph.be.6, %1565 ], [ %1578, %1577 ], [ %.03.ph.be.6, %1574 ], [ %1589, %1588 ], [ %.03.ph.be.6, %1585 ], [ %1639, %1638 ], [ %.7.7, %1637 ], [ %.7.7, %.loopexit.7 ], [ %1650, %1649 ], [ %.03.ph.be.6, %1646 ], [ %1676, %1674 ], [ %1673, %1672 ], [ %1671, %1670 ], [ %.03.ph.be.6, %1668 ]
  call void @__loop_iteration_test___2()
  %1677 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  br label %.outer._crit_edge.loopexit1

; <label>:1678:                                   ; preds = %52
  call void @unroll_loop(i32 44)
  %1679 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1680 = icmp ne i8* %1679, null
  br i1 %1680, label %1681, label %1682

; <label>:1681:                                   ; preds = %1678
  store i8 0, i8* %1679, align 1
  br label %1682

; <label>:1682:                                   ; preds = %1681, %1678
  %1683 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1684 = icmp ne i8* %1683, null
  br i1 %1684, label %1685, label %1686

; <label>:1685:                                   ; preds = %1682
  store i8 0, i8* %1683, align 1
  br label %1686

; <label>:1686:                                   ; preds = %1685, %1682
  %1687 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1688 = icmp ne i8* %1687, null
  br i1 %1688, label %1689, label %1690

; <label>:1689:                                   ; preds = %1686
  store i8 0, i8* %1687, align 1
  br label %1690

; <label>:1690:                                   ; preds = %1689, %1686
  %1691 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1692 = icmp ne i8* %1691, null
  br i1 %1692, label %1693, label %1694

; <label>:1693:                                   ; preds = %1690
  store i8 0, i8* %1691, align 1
  br label %1694

; <label>:1694:                                   ; preds = %1693, %1690
  %1695 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1695, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1696 = load i8*, i8** %26, align 8
  %1697 = icmp ne i8* %1696, null
  %.14.12 = select i1 %1697, i32 1, i32 0
  %1698 = select i1 %1697, i1 true, i1 false
  br i1 %1698, label %.lr.ph6.preheader.13, label %._crit_edge.110

.lr.ph6.preheader.13:                             ; preds = %1694
  br label %.lr.ph6.16

.lr.ph6.16:                                       ; preds = %.lr.ph6.16, %.lr.ph6.preheader.13
  %.15.14 = phi i32 [ %.1.15, %.lr.ph6.16 ], [ %.14.12, %.lr.ph6.preheader.13 ]
  %1699 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1700 = sext i32 %.15.14 to i64
  %1701 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1700
  store i8* %1699, i8** %1701, align 8
  call void @unroll_loop(i32 45)
  %1702 = sext i32 %.15.14 to i64
  %1703 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1702
  %1704 = load i8*, i8** %1703, align 8
  %1705 = icmp ne i8* %1704, null
  %1706 = add nsw i32 %.15.14, 1
  %1707 = icmp slt i32 %1706, 30
  %.1.15 = select i1 %1705, i32 %1706, i32 %.15.14
  %1708 = select i1 %1705, i1 %1707, i1 false
  br i1 %1708, label %.lr.ph6.16, label %._crit_edge.loopexit.18

._crit_edge.loopexit.18:                          ; preds = %.lr.ph6.16
  %.1.lcssa.ph.17 = phi i32 [ %.1.15, %.lr.ph6.16 ]
  br label %._crit_edge.110

._crit_edge.110:                                  ; preds = %._crit_edge.loopexit.18, %1694
  %.1.lcssa.19 = phi i32 [ %.14.12, %1694 ], [ %.1.lcssa.ph.17, %._crit_edge.loopexit.18 ]
  %1709 = load i8*, i8** %27, align 16
  %1710 = icmp ne i8* %1709, null
  br i1 %1710, label %91, label %1711

; <label>:1711:                                   ; preds = %._crit_edge.110
  call void @__loop_iteration_test___3()
  %1712 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1713 = icmp ne i8* %1712, null
  br i1 %1713, label %1714, label %.outer._crit_edge.loopexit.loopexit

; <label>:1714:                                   ; preds = %1711
  call void @unroll_loop(i32 44)
  %1715 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1716 = icmp ne i8* %1715, null
  br i1 %1716, label %1717, label %1718

; <label>:1717:                                   ; preds = %1714
  store i8 0, i8* %1715, align 1
  br label %1718

; <label>:1718:                                   ; preds = %1717, %1714
  %1719 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1720 = icmp ne i8* %1719, null
  br i1 %1720, label %1721, label %1722

; <label>:1721:                                   ; preds = %1718
  store i8 0, i8* %1719, align 1
  br label %1722

; <label>:1722:                                   ; preds = %1721, %1718
  %1723 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1724 = icmp ne i8* %1723, null
  br i1 %1724, label %1725, label %1726

; <label>:1725:                                   ; preds = %1722
  store i8 0, i8* %1723, align 1
  br label %1726

; <label>:1726:                                   ; preds = %1725, %1722
  %1727 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1728 = icmp ne i8* %1727, null
  br i1 %1728, label %1729, label %1730

; <label>:1729:                                   ; preds = %1726
  store i8 0, i8* %1727, align 1
  br label %1730

; <label>:1730:                                   ; preds = %1729, %1726
  %1731 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1731, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1732 = load i8*, i8** %26, align 8
  %1733 = icmp ne i8* %1732, null
  %.14.212 = select i1 %1733, i32 1, i32 0
  %1734 = select i1 %1733, i1 true, i1 false
  br i1 %1734, label %.lr.ph6.preheader.213, label %._crit_edge.220

.lr.ph6.preheader.213:                            ; preds = %1730
  br label %.lr.ph6.216

.lr.ph6.216:                                      ; preds = %.lr.ph6.216, %.lr.ph6.preheader.213
  %.15.214 = phi i32 [ %.1.215, %.lr.ph6.216 ], [ %.14.212, %.lr.ph6.preheader.213 ]
  %1735 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1736 = sext i32 %.15.214 to i64
  %1737 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1736
  store i8* %1735, i8** %1737, align 8
  call void @unroll_loop(i32 45)
  %1738 = sext i32 %.15.214 to i64
  %1739 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1738
  %1740 = load i8*, i8** %1739, align 8
  %1741 = icmp ne i8* %1740, null
  %1742 = add nsw i32 %.15.214, 1
  %1743 = icmp slt i32 %1742, 30
  %.1.215 = select i1 %1741, i32 %1742, i32 %.15.214
  %1744 = select i1 %1741, i1 %1743, i1 false
  br i1 %1744, label %.lr.ph6.216, label %._crit_edge.loopexit.218

._crit_edge.loopexit.218:                         ; preds = %.lr.ph6.216
  %.1.lcssa.ph.217 = phi i32 [ %.1.215, %.lr.ph6.216 ]
  br label %._crit_edge.220

._crit_edge.220:                                  ; preds = %._crit_edge.loopexit.218, %1730
  %.1.lcssa.219 = phi i32 [ %.14.212, %1730 ], [ %.1.lcssa.ph.217, %._crit_edge.loopexit.218 ]
  %1745 = load i8*, i8** %27, align 16
  %1746 = icmp ne i8* %1745, null
  br i1 %1746, label %91, label %1747

; <label>:1747:                                   ; preds = %._crit_edge.220
  call void @__loop_iteration_test___3()
  %1748 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1749 = icmp ne i8* %1748, null
  br i1 %1749, label %1750, label %.outer._crit_edge.loopexit.loopexit

; <label>:1750:                                   ; preds = %1747
  call void @unroll_loop(i32 44)
  %1751 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1752 = icmp ne i8* %1751, null
  br i1 %1752, label %1753, label %1754

; <label>:1753:                                   ; preds = %1750
  store i8 0, i8* %1751, align 1
  br label %1754

; <label>:1754:                                   ; preds = %1753, %1750
  %1755 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1756 = icmp ne i8* %1755, null
  br i1 %1756, label %1757, label %1758

; <label>:1757:                                   ; preds = %1754
  store i8 0, i8* %1755, align 1
  br label %1758

; <label>:1758:                                   ; preds = %1757, %1754
  %1759 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1760 = icmp ne i8* %1759, null
  br i1 %1760, label %1761, label %1762

; <label>:1761:                                   ; preds = %1758
  store i8 0, i8* %1759, align 1
  br label %1762

; <label>:1762:                                   ; preds = %1761, %1758
  %1763 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1764 = icmp ne i8* %1763, null
  br i1 %1764, label %1765, label %1766

; <label>:1765:                                   ; preds = %1762
  store i8 0, i8* %1763, align 1
  br label %1766

; <label>:1766:                                   ; preds = %1765, %1762
  %1767 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1767, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1768 = load i8*, i8** %26, align 8
  %1769 = icmp ne i8* %1768, null
  %.14.322 = select i1 %1769, i32 1, i32 0
  %1770 = select i1 %1769, i1 true, i1 false
  br i1 %1770, label %.lr.ph6.preheader.323, label %._crit_edge.330

.lr.ph6.preheader.323:                            ; preds = %1766
  br label %.lr.ph6.326

.lr.ph6.326:                                      ; preds = %.lr.ph6.326, %.lr.ph6.preheader.323
  %.15.324 = phi i32 [ %.1.325, %.lr.ph6.326 ], [ %.14.322, %.lr.ph6.preheader.323 ]
  %1771 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1772 = sext i32 %.15.324 to i64
  %1773 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1772
  store i8* %1771, i8** %1773, align 8
  call void @unroll_loop(i32 45)
  %1774 = sext i32 %.15.324 to i64
  %1775 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1774
  %1776 = load i8*, i8** %1775, align 8
  %1777 = icmp ne i8* %1776, null
  %1778 = add nsw i32 %.15.324, 1
  %1779 = icmp slt i32 %1778, 30
  %.1.325 = select i1 %1777, i32 %1778, i32 %.15.324
  %1780 = select i1 %1777, i1 %1779, i1 false
  br i1 %1780, label %.lr.ph6.326, label %._crit_edge.loopexit.328

._crit_edge.loopexit.328:                         ; preds = %.lr.ph6.326
  %.1.lcssa.ph.327 = phi i32 [ %.1.325, %.lr.ph6.326 ]
  br label %._crit_edge.330

._crit_edge.330:                                  ; preds = %._crit_edge.loopexit.328, %1766
  %.1.lcssa.329 = phi i32 [ %.14.322, %1766 ], [ %.1.lcssa.ph.327, %._crit_edge.loopexit.328 ]
  %1781 = load i8*, i8** %27, align 16
  %1782 = icmp ne i8* %1781, null
  br i1 %1782, label %91, label %1783

; <label>:1783:                                   ; preds = %._crit_edge.330
  call void @__loop_iteration_test___3()
  %1784 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1785 = icmp ne i8* %1784, null
  br i1 %1785, label %1786, label %.outer._crit_edge.loopexit.loopexit

; <label>:1786:                                   ; preds = %1783
  call void @unroll_loop(i32 44)
  %1787 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1788 = icmp ne i8* %1787, null
  br i1 %1788, label %1789, label %1790

; <label>:1789:                                   ; preds = %1786
  store i8 0, i8* %1787, align 1
  br label %1790

; <label>:1790:                                   ; preds = %1789, %1786
  %1791 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1792 = icmp ne i8* %1791, null
  br i1 %1792, label %1793, label %1794

; <label>:1793:                                   ; preds = %1790
  store i8 0, i8* %1791, align 1
  br label %1794

; <label>:1794:                                   ; preds = %1793, %1790
  %1795 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1796 = icmp ne i8* %1795, null
  br i1 %1796, label %1797, label %1798

; <label>:1797:                                   ; preds = %1794
  store i8 0, i8* %1795, align 1
  br label %1798

; <label>:1798:                                   ; preds = %1797, %1794
  %1799 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1800 = icmp ne i8* %1799, null
  br i1 %1800, label %1801, label %1802

; <label>:1801:                                   ; preds = %1798
  store i8 0, i8* %1799, align 1
  br label %1802

; <label>:1802:                                   ; preds = %1801, %1798
  %1803 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1803, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1804 = load i8*, i8** %26, align 8
  %1805 = icmp ne i8* %1804, null
  %.14.432 = select i1 %1805, i32 1, i32 0
  %1806 = select i1 %1805, i1 true, i1 false
  br i1 %1806, label %.lr.ph6.preheader.433, label %._crit_edge.440

.lr.ph6.preheader.433:                            ; preds = %1802
  br label %.lr.ph6.436

.lr.ph6.436:                                      ; preds = %.lr.ph6.436, %.lr.ph6.preheader.433
  %.15.434 = phi i32 [ %.1.435, %.lr.ph6.436 ], [ %.14.432, %.lr.ph6.preheader.433 ]
  %1807 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1808 = sext i32 %.15.434 to i64
  %1809 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1808
  store i8* %1807, i8** %1809, align 8
  call void @unroll_loop(i32 45)
  %1810 = sext i32 %.15.434 to i64
  %1811 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1810
  %1812 = load i8*, i8** %1811, align 8
  %1813 = icmp ne i8* %1812, null
  %1814 = add nsw i32 %.15.434, 1
  %1815 = icmp slt i32 %1814, 30
  %.1.435 = select i1 %1813, i32 %1814, i32 %.15.434
  %1816 = select i1 %1813, i1 %1815, i1 false
  br i1 %1816, label %.lr.ph6.436, label %._crit_edge.loopexit.438

._crit_edge.loopexit.438:                         ; preds = %.lr.ph6.436
  %.1.lcssa.ph.437 = phi i32 [ %.1.435, %.lr.ph6.436 ]
  br label %._crit_edge.440

._crit_edge.440:                                  ; preds = %._crit_edge.loopexit.438, %1802
  %.1.lcssa.439 = phi i32 [ %.14.432, %1802 ], [ %.1.lcssa.ph.437, %._crit_edge.loopexit.438 ]
  %1817 = load i8*, i8** %27, align 16
  %1818 = icmp ne i8* %1817, null
  br i1 %1818, label %91, label %1819

; <label>:1819:                                   ; preds = %._crit_edge.440
  call void @__loop_iteration_test___3()
  %1820 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1821 = icmp ne i8* %1820, null
  br i1 %1821, label %1822, label %.outer._crit_edge.loopexit.loopexit

; <label>:1822:                                   ; preds = %1819
  call void @unroll_loop(i32 44)
  %1823 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1824 = icmp ne i8* %1823, null
  br i1 %1824, label %1825, label %1826

; <label>:1825:                                   ; preds = %1822
  store i8 0, i8* %1823, align 1
  br label %1826

; <label>:1826:                                   ; preds = %1825, %1822
  %1827 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1828 = icmp ne i8* %1827, null
  br i1 %1828, label %1829, label %1830

; <label>:1829:                                   ; preds = %1826
  store i8 0, i8* %1827, align 1
  br label %1830

; <label>:1830:                                   ; preds = %1829, %1826
  %1831 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1832 = icmp ne i8* %1831, null
  br i1 %1832, label %1833, label %1834

; <label>:1833:                                   ; preds = %1830
  store i8 0, i8* %1831, align 1
  br label %1834

; <label>:1834:                                   ; preds = %1833, %1830
  %1835 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1836 = icmp ne i8* %1835, null
  br i1 %1836, label %1837, label %1838

; <label>:1837:                                   ; preds = %1834
  store i8 0, i8* %1835, align 1
  br label %1838

; <label>:1838:                                   ; preds = %1837, %1834
  %1839 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1839, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1840 = load i8*, i8** %26, align 8
  %1841 = icmp ne i8* %1840, null
  %.14.542 = select i1 %1841, i32 1, i32 0
  %1842 = select i1 %1841, i1 true, i1 false
  br i1 %1842, label %.lr.ph6.preheader.543, label %._crit_edge.550

.lr.ph6.preheader.543:                            ; preds = %1838
  br label %.lr.ph6.546

.lr.ph6.546:                                      ; preds = %.lr.ph6.546, %.lr.ph6.preheader.543
  %.15.544 = phi i32 [ %.1.545, %.lr.ph6.546 ], [ %.14.542, %.lr.ph6.preheader.543 ]
  %1843 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1844 = sext i32 %.15.544 to i64
  %1845 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1844
  store i8* %1843, i8** %1845, align 8
  call void @unroll_loop(i32 45)
  %1846 = sext i32 %.15.544 to i64
  %1847 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1846
  %1848 = load i8*, i8** %1847, align 8
  %1849 = icmp ne i8* %1848, null
  %1850 = add nsw i32 %.15.544, 1
  %1851 = icmp slt i32 %1850, 30
  %.1.545 = select i1 %1849, i32 %1850, i32 %.15.544
  %1852 = select i1 %1849, i1 %1851, i1 false
  br i1 %1852, label %.lr.ph6.546, label %._crit_edge.loopexit.548

._crit_edge.loopexit.548:                         ; preds = %.lr.ph6.546
  %.1.lcssa.ph.547 = phi i32 [ %.1.545, %.lr.ph6.546 ]
  br label %._crit_edge.550

._crit_edge.550:                                  ; preds = %._crit_edge.loopexit.548, %1838
  %.1.lcssa.549 = phi i32 [ %.14.542, %1838 ], [ %.1.lcssa.ph.547, %._crit_edge.loopexit.548 ]
  %1853 = load i8*, i8** %27, align 16
  %1854 = icmp ne i8* %1853, null
  br i1 %1854, label %91, label %1855

; <label>:1855:                                   ; preds = %._crit_edge.550
  call void @__loop_iteration_test___3()
  %1856 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1857 = icmp ne i8* %1856, null
  br i1 %1857, label %1858, label %.outer._crit_edge.loopexit.loopexit

; <label>:1858:                                   ; preds = %1855
  call void @unroll_loop(i32 44)
  %1859 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1860 = icmp ne i8* %1859, null
  br i1 %1860, label %1861, label %1862

; <label>:1861:                                   ; preds = %1858
  store i8 0, i8* %1859, align 1
  br label %1862

; <label>:1862:                                   ; preds = %1861, %1858
  %1863 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1864 = icmp ne i8* %1863, null
  br i1 %1864, label %1865, label %1866

; <label>:1865:                                   ; preds = %1862
  store i8 0, i8* %1863, align 1
  br label %1866

; <label>:1866:                                   ; preds = %1865, %1862
  %1867 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1868 = icmp ne i8* %1867, null
  br i1 %1868, label %1869, label %1870

; <label>:1869:                                   ; preds = %1866
  store i8 0, i8* %1867, align 1
  br label %1870

; <label>:1870:                                   ; preds = %1869, %1866
  %1871 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1872 = icmp ne i8* %1871, null
  br i1 %1872, label %1873, label %1874

; <label>:1873:                                   ; preds = %1870
  store i8 0, i8* %1871, align 1
  br label %1874

; <label>:1874:                                   ; preds = %1873, %1870
  %1875 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1875, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1876 = load i8*, i8** %26, align 8
  %1877 = icmp ne i8* %1876, null
  %.14.652 = select i1 %1877, i32 1, i32 0
  %1878 = select i1 %1877, i1 true, i1 false
  br i1 %1878, label %.lr.ph6.preheader.653, label %._crit_edge.660

.lr.ph6.preheader.653:                            ; preds = %1874
  br label %.lr.ph6.656

.lr.ph6.656:                                      ; preds = %.lr.ph6.656, %.lr.ph6.preheader.653
  %.15.654 = phi i32 [ %.1.655, %.lr.ph6.656 ], [ %.14.652, %.lr.ph6.preheader.653 ]
  %1879 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1880 = sext i32 %.15.654 to i64
  %1881 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1880
  store i8* %1879, i8** %1881, align 8
  call void @unroll_loop(i32 45)
  %1882 = sext i32 %.15.654 to i64
  %1883 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1882
  %1884 = load i8*, i8** %1883, align 8
  %1885 = icmp ne i8* %1884, null
  %1886 = add nsw i32 %.15.654, 1
  %1887 = icmp slt i32 %1886, 30
  %.1.655 = select i1 %1885, i32 %1886, i32 %.15.654
  %1888 = select i1 %1885, i1 %1887, i1 false
  br i1 %1888, label %.lr.ph6.656, label %._crit_edge.loopexit.658

._crit_edge.loopexit.658:                         ; preds = %.lr.ph6.656
  %.1.lcssa.ph.657 = phi i32 [ %.1.655, %.lr.ph6.656 ]
  br label %._crit_edge.660

._crit_edge.660:                                  ; preds = %._crit_edge.loopexit.658, %1874
  %.1.lcssa.659 = phi i32 [ %.14.652, %1874 ], [ %.1.lcssa.ph.657, %._crit_edge.loopexit.658 ]
  %1889 = load i8*, i8** %27, align 16
  %1890 = icmp ne i8* %1889, null
  br i1 %1890, label %91, label %1891

; <label>:1891:                                   ; preds = %._crit_edge.660
  call void @__loop_iteration_test___3()
  %1892 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1893 = icmp ne i8* %1892, null
  br i1 %1893, label %1894, label %.outer._crit_edge.loopexit.loopexit

; <label>:1894:                                   ; preds = %1891
  call void @unroll_loop(i32 44)
  %1895 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1896 = icmp ne i8* %1895, null
  br i1 %1896, label %1897, label %1898

; <label>:1897:                                   ; preds = %1894
  store i8 0, i8* %1895, align 1
  br label %1898

; <label>:1898:                                   ; preds = %1897, %1894
  %1899 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1900 = icmp ne i8* %1899, null
  br i1 %1900, label %1901, label %1902

; <label>:1901:                                   ; preds = %1898
  store i8 0, i8* %1899, align 1
  br label %1902

; <label>:1902:                                   ; preds = %1901, %1898
  %1903 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1904 = icmp ne i8* %1903, null
  br i1 %1904, label %1905, label %1906

; <label>:1905:                                   ; preds = %1902
  store i8 0, i8* %1903, align 1
  br label %1906

; <label>:1906:                                   ; preds = %1905, %1902
  %1907 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1908 = icmp ne i8* %1907, null
  br i1 %1908, label %1909, label %1910

; <label>:1909:                                   ; preds = %1906
  store i8 0, i8* %1907, align 1
  br label %1910

; <label>:1910:                                   ; preds = %1909, %1906
  %1911 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1911, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1912 = load i8*, i8** %26, align 8
  %1913 = icmp ne i8* %1912, null
  %.14.762 = select i1 %1913, i32 1, i32 0
  %1914 = select i1 %1913, i1 true, i1 false
  br i1 %1914, label %.lr.ph6.preheader.763, label %._crit_edge.770

.lr.ph6.preheader.763:                            ; preds = %1910
  br label %.lr.ph6.766

.lr.ph6.766:                                      ; preds = %.lr.ph6.766, %.lr.ph6.preheader.763
  %.15.764 = phi i32 [ %.1.765, %.lr.ph6.766 ], [ %.14.762, %.lr.ph6.preheader.763 ]
  %1915 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1916 = sext i32 %.15.764 to i64
  %1917 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1916
  store i8* %1915, i8** %1917, align 8
  call void @unroll_loop(i32 45)
  %1918 = sext i32 %.15.764 to i64
  %1919 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1918
  %1920 = load i8*, i8** %1919, align 8
  %1921 = icmp ne i8* %1920, null
  %1922 = add nsw i32 %.15.764, 1
  %1923 = icmp slt i32 %1922, 30
  %.1.765 = select i1 %1921, i32 %1922, i32 %.15.764
  %1924 = select i1 %1921, i1 %1923, i1 false
  br i1 %1924, label %.lr.ph6.766, label %._crit_edge.loopexit.768

._crit_edge.loopexit.768:                         ; preds = %.lr.ph6.766
  %.1.lcssa.ph.767 = phi i32 [ %.1.765, %.lr.ph6.766 ]
  br label %._crit_edge.770

._crit_edge.770:                                  ; preds = %._crit_edge.loopexit.768, %1910
  %.1.lcssa.769 = phi i32 [ %.14.762, %1910 ], [ %.1.lcssa.ph.767, %._crit_edge.loopexit.768 ]
  %1925 = load i8*, i8** %27, align 16
  %1926 = icmp ne i8* %1925, null
  br i1 %1926, label %91, label %1927

; <label>:1927:                                   ; preds = %._crit_edge.770
  call void @__loop_iteration_test___3()
  %1928 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit

.lr.ph6.13:                                       ; preds = %.lr.ph6
  call void @__loop_iteration_test___4()
  %1929 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1930 = sext i32 2 to i64
  %1931 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i8** %1931, align 8
  call void @unroll_loop(i32 45)
  %1932 = sext i32 2 to i64
  %1933 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %1934 = load i8*, i8** %1933, align 8
  %1935 = icmp ne i64 10000601, 0
  %1936 = icmp ne i8* %1934, null
  %1937 = add nsw i32 2, 1
  %1938 = icmp slt i32 3, 30
  %.1.12 = select i1 true, i32 3, i32 2
  %1939 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.26, label %._crit_edge.loopexit

.lr.ph6.26:                                       ; preds = %.lr.ph6.13
  call void @__loop_iteration_test___4()
  %1940 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1941 = sext i32 3 to i64
  %1942 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @26, i32 0, i32 0), i8** %1942, align 8
  call void @unroll_loop(i32 45)
  %1943 = sext i32 3 to i64
  %1944 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %1945 = load i8*, i8** %1944, align 8
  %1946 = icmp ne i64 10000607, 0
  %1947 = icmp ne i8* %1945, null
  %1948 = add nsw i32 3, 1
  %1949 = icmp slt i32 4, 30
  %.1.25 = select i1 true, i32 4, i32 3
  %1950 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.39, label %._crit_edge.loopexit

.lr.ph6.39:                                       ; preds = %.lr.ph6.26
  call void @__loop_iteration_test___4()
  %1951 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1952 = sext i32 4 to i64
  %1953 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  store i8* null, i8** %1953, align 8
  call void @unroll_loop(i32 45)
  %1954 = sext i32 4 to i64
  %1955 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  %1956 = load i8*, i8** %1955, align 8
  %1957 = icmp ne i64 0, 0
  %1958 = icmp ne i8* null, null
  %1959 = add nsw i32 4, 1
  %1960 = icmp slt i32 5, 30
  %.1.38 = select i1 false, i32 5, i32 4
  %1961 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.412, label %._crit_edge.loopexit

.lr.ph6.412:                                      ; preds = %.lr.ph6.39
  call void @__loop_iteration_test___4()
  %1962 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1963 = sext i32 4 to i64
  %1964 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1963
  store i8* %1962, i8** %1964, align 8
  call void @unroll_loop(i32 45)
  %1965 = sext i32 4 to i64
  %1966 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1965
  %1967 = load i8*, i8** %1966, align 8
  %1968 = icmp ne i8* %1967, null
  %1969 = add nsw i32 4, 1
  %1970 = icmp slt i32 %1969, 30
  %.1.411 = select i1 %1968, i32 %1969, i32 4
  %1971 = select i1 %1968, i1 %1970, i1 false
  br i1 %1971, label %.lr.ph6.515, label %._crit_edge.loopexit

.lr.ph6.515:                                      ; preds = %.lr.ph6.412
  call void @__loop_iteration_test___4()
  %1972 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1973 = sext i32 %.1.411 to i64
  %1974 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1973
  store i8* %1972, i8** %1974, align 8
  call void @unroll_loop(i32 45)
  %1975 = sext i32 %.1.411 to i64
  %1976 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1975
  %1977 = load i8*, i8** %1976, align 8
  %1978 = icmp ne i8* %1977, null
  %1979 = add nsw i32 %.1.411, 1
  %1980 = icmp slt i32 %1979, 30
  %.1.514 = select i1 %1978, i32 %1979, i32 %.1.411
  %1981 = select i1 %1978, i1 %1980, i1 false
  br i1 %1981, label %.lr.ph6.618, label %._crit_edge.loopexit

.lr.ph6.618:                                      ; preds = %.lr.ph6.515
  call void @__loop_iteration_test___4()
  %1982 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1983 = sext i32 %.1.514 to i64
  %1984 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1983
  store i8* %1982, i8** %1984, align 8
  call void @unroll_loop(i32 45)
  %1985 = sext i32 %.1.514 to i64
  %1986 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1985
  %1987 = load i8*, i8** %1986, align 8
  %1988 = icmp ne i8* %1987, null
  %1989 = add nsw i32 %.1.514, 1
  %1990 = icmp slt i32 %1989, 30
  %.1.617 = select i1 %1988, i32 %1989, i32 %.1.514
  %1991 = select i1 %1988, i1 %1990, i1 false
  br i1 %1991, label %.lr.ph6.721, label %._crit_edge.loopexit

.lr.ph6.721:                                      ; preds = %.lr.ph6.618
  call void @__loop_iteration_test___4()
  %1992 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1993 = sext i32 %.1.617 to i64
  %1994 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1993
  store i8* %1992, i8** %1994, align 8
  call void @unroll_loop(i32 45)
  %1995 = sext i32 %.1.617 to i64
  %1996 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1995
  %1997 = load i8*, i8** %1996, align 8
  %1998 = icmp ne i8* %1997, null
  %1999 = add nsw i32 %.1.617, 1
  %2000 = icmp slt i32 %1999, 30
  %.1.720 = select i1 %1998, i32 %1999, i32 %.1.617
  %2001 = select i1 %1998, i1 %2000, i1 false
  br i1 %2001, label %.lr.ph6.8, label %._crit_edge.loopexit

.lr.ph6.8:                                        ; preds = %.lr.ph6.721
  call void @__loop_iteration_test___4()
  %2002 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2003 = sext i32 %.1.720 to i64
  %2004 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2003
  store i8* %2002, i8** %2004, align 8
  call void @unroll_loop(i32 45)
  %2005 = sext i32 %.1.720 to i64
  %2006 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2005
  %2007 = load i8*, i8** %2006, align 8
  %2008 = icmp ne i8* %2007, null
  %2009 = add nsw i32 %.1.720, 1
  %2010 = icmp slt i32 %2009, 30
  %.1.8 = select i1 %2008, i32 %2009, i32 %.1.720
  %2011 = select i1 %2008, i1 %2010, i1 false
  br i1 %2011, label %.lr.ph6.9, label %._crit_edge.loopexit

.lr.ph6.9:                                        ; preds = %.lr.ph6.8
  call void @__loop_iteration_test___4()
  %2012 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2013 = sext i32 %.1.8 to i64
  %2014 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2013
  store i8* %2012, i8** %2014, align 8
  call void @unroll_loop(i32 45)
  %2015 = sext i32 %.1.8 to i64
  %2016 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2015
  %2017 = load i8*, i8** %2016, align 8
  %2018 = icmp ne i8* %2017, null
  %2019 = add nsw i32 %.1.8, 1
  %2020 = icmp slt i32 %2019, 30
  %.1.9 = select i1 %2018, i32 %2019, i32 %.1.8
  %2021 = select i1 %2018, i1 %2020, i1 false
  br i1 %2021, label %.lr.ph6.10, label %._crit_edge.loopexit

.lr.ph6.10:                                       ; preds = %.lr.ph6.9
  call void @__loop_iteration_test___4()
  %2022 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2023 = sext i32 %.1.9 to i64
  %2024 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2023
  store i8* %2022, i8** %2024, align 8
  call void @unroll_loop(i32 45)
  %2025 = sext i32 %.1.9 to i64
  %2026 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2025
  %2027 = load i8*, i8** %2026, align 8
  %2028 = icmp ne i8* %2027, null
  %2029 = add nsw i32 %.1.9, 1
  %2030 = icmp slt i32 %2029, 30
  %.1.10 = select i1 %2028, i32 %2029, i32 %.1.9
  %2031 = select i1 %2028, i1 %2030, i1 false
  br i1 %2031, label %.lr.ph6.11, label %._crit_edge.loopexit

.lr.ph6.11:                                       ; preds = %.lr.ph6.10
  call void @__loop_iteration_test___4()
  %2032 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2033 = sext i32 %.1.10 to i64
  %2034 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2033
  store i8* %2032, i8** %2034, align 8
  call void @unroll_loop(i32 45)
  %2035 = sext i32 %.1.10 to i64
  %2036 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2035
  %2037 = load i8*, i8** %2036, align 8
  %2038 = icmp ne i8* %2037, null
  %2039 = add nsw i32 %.1.10, 1
  %2040 = icmp slt i32 %2039, 30
  %.1.11 = select i1 %2038, i32 %2039, i32 %.1.10
  %2041 = select i1 %2038, i1 %2040, i1 false
  br i1 %2041, label %.lr.ph6.12, label %._crit_edge.loopexit

.lr.ph6.12:                                       ; preds = %.lr.ph6.11
  call void @__loop_iteration_test___4()
  %2042 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2043 = sext i32 %.1.11 to i64
  %2044 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2043
  store i8* %2042, i8** %2044, align 8
  call void @unroll_loop(i32 45)
  %2045 = sext i32 %.1.11 to i64
  %2046 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2045
  %2047 = load i8*, i8** %2046, align 8
  %2048 = icmp ne i8* %2047, null
  %2049 = add nsw i32 %.1.11, 1
  %2050 = icmp slt i32 %2049, 30
  %.1.1222 = select i1 %2048, i32 %2049, i32 %.1.11
  %2051 = select i1 %2048, i1 %2050, i1 false
  br i1 %2051, label %.lr.ph6.1323, label %._crit_edge.loopexit

.lr.ph6.1323:                                     ; preds = %.lr.ph6.12
  call void @__loop_iteration_test___4()
  %2052 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2053 = sext i32 %.1.1222 to i64
  %2054 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2053
  store i8* %2052, i8** %2054, align 8
  call void @unroll_loop(i32 45)
  %2055 = sext i32 %.1.1222 to i64
  %2056 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2055
  %2057 = load i8*, i8** %2056, align 8
  %2058 = icmp ne i8* %2057, null
  %2059 = add nsw i32 %.1.1222, 1
  %2060 = icmp slt i32 %2059, 30
  %.1.13 = select i1 %2058, i32 %2059, i32 %.1.1222
  %2061 = select i1 %2058, i1 %2060, i1 false
  br i1 %2061, label %.lr.ph6.14, label %._crit_edge.loopexit

.lr.ph6.14:                                       ; preds = %.lr.ph6.1323
  call void @__loop_iteration_test___4()
  %2062 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2063 = sext i32 %.1.13 to i64
  %2064 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2063
  store i8* %2062, i8** %2064, align 8
  call void @unroll_loop(i32 45)
  %2065 = sext i32 %.1.13 to i64
  %2066 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2065
  %2067 = load i8*, i8** %2066, align 8
  %2068 = icmp ne i8* %2067, null
  %2069 = add nsw i32 %.1.13, 1
  %2070 = icmp slt i32 %2069, 30
  %.1.14 = select i1 %2068, i32 %2069, i32 %.1.13
  %2071 = select i1 %2068, i1 %2070, i1 false
  br i1 %2071, label %.lr.ph6.15, label %._crit_edge.loopexit

.lr.ph6.15:                                       ; preds = %.lr.ph6.14
  call void @__loop_iteration_test___4()
  %2072 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2073 = sext i32 %.1.14 to i64
  %2074 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2073
  store i8* %2072, i8** %2074, align 8
  call void @unroll_loop(i32 45)
  %2075 = sext i32 %.1.14 to i64
  %2076 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2075
  %2077 = load i8*, i8** %2076, align 8
  %2078 = icmp ne i8* %2077, null
  %2079 = add nsw i32 %.1.14, 1
  %2080 = icmp slt i32 %2079, 30
  %.1.1525 = select i1 %2078, i32 %2079, i32 %.1.14
  %2081 = select i1 %2078, i1 %2080, i1 false
  br i1 %2081, label %.lr.ph6.1626, label %._crit_edge.loopexit

.lr.ph6.1626:                                     ; preds = %.lr.ph6.15
  call void @__loop_iteration_test___4()
  %2082 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2083 = sext i32 %.1.1525 to i64
  %2084 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2083
  store i8* %2082, i8** %2084, align 8
  call void @unroll_loop(i32 45)
  %2085 = sext i32 %.1.1525 to i64
  %2086 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2085
  %2087 = load i8*, i8** %2086, align 8
  %2088 = icmp ne i8* %2087, null
  %2089 = add nsw i32 %.1.1525, 1
  %2090 = icmp slt i32 %2089, 30
  %.1.16 = select i1 %2088, i32 %2089, i32 %.1.1525
  %2091 = select i1 %2088, i1 %2090, i1 false
  br i1 %2091, label %.lr.ph6.17, label %._crit_edge.loopexit

.lr.ph6.17:                                       ; preds = %.lr.ph6.1626
  call void @__loop_iteration_test___4()
  %2092 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2093 = sext i32 %.1.16 to i64
  %2094 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2093
  store i8* %2092, i8** %2094, align 8
  call void @unroll_loop(i32 45)
  %2095 = sext i32 %.1.16 to i64
  %2096 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2095
  %2097 = load i8*, i8** %2096, align 8
  %2098 = icmp ne i8* %2097, null
  %2099 = add nsw i32 %.1.16, 1
  %2100 = icmp slt i32 %2099, 30
  %.1.17 = select i1 %2098, i32 %2099, i32 %.1.16
  %2101 = select i1 %2098, i1 %2100, i1 false
  br i1 %2101, label %.lr.ph6.18, label %._crit_edge.loopexit

.lr.ph6.18:                                       ; preds = %.lr.ph6.17
  call void @__loop_iteration_test___4()
  %2102 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2103 = sext i32 %.1.17 to i64
  %2104 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2103
  store i8* %2102, i8** %2104, align 8
  call void @unroll_loop(i32 45)
  %2105 = sext i32 %.1.17 to i64
  %2106 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2105
  %2107 = load i8*, i8** %2106, align 8
  %2108 = icmp ne i8* %2107, null
  %2109 = add nsw i32 %.1.17, 1
  %2110 = icmp slt i32 %2109, 30
  %.1.18 = select i1 %2108, i32 %2109, i32 %.1.17
  %2111 = select i1 %2108, i1 %2110, i1 false
  br i1 %2111, label %.lr.ph6.19, label %._crit_edge.loopexit

.lr.ph6.19:                                       ; preds = %.lr.ph6.18
  call void @__loop_iteration_test___4()
  %2112 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2113 = sext i32 %.1.18 to i64
  %2114 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2113
  store i8* %2112, i8** %2114, align 8
  call void @unroll_loop(i32 45)
  %2115 = sext i32 %.1.18 to i64
  %2116 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2115
  %2117 = load i8*, i8** %2116, align 8
  %2118 = icmp ne i8* %2117, null
  %2119 = add nsw i32 %.1.18, 1
  %2120 = icmp slt i32 %2119, 30
  %.1.19 = select i1 %2118, i32 %2119, i32 %.1.18
  br label %._crit_edge.loopexit

; <label>:2121:                                   ; preds = %287
  call void @unroll_loop(i32 44)
  %2122 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2123 = icmp ne i8* %2122, null
  br i1 %2123, label %2124, label %2125

; <label>:2124:                                   ; preds = %2121
  store i8 0, i8* %2122, align 1
  br label %2125

; <label>:2125:                                   ; preds = %2124, %2121
  %2126 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2127 = icmp ne i8* %2126, null
  br i1 %2127, label %2128, label %2129

; <label>:2128:                                   ; preds = %2125
  store i8 0, i8* %2126, align 1
  br label %2129

; <label>:2129:                                   ; preds = %2128, %2125
  %2130 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2131 = icmp ne i8* %2130, null
  br i1 %2131, label %2132, label %2133

; <label>:2132:                                   ; preds = %2129
  store i8 0, i8* %2130, align 1
  br label %2133

; <label>:2133:                                   ; preds = %2132, %2129
  %2134 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2135 = icmp ne i8* %2134, null
  br i1 %2135, label %2136, label %2137

; <label>:2136:                                   ; preds = %2133
  store i8 0, i8* %2134, align 1
  br label %2137

; <label>:2137:                                   ; preds = %2136, %2133
  %2138 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2138, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2139 = load i8*, i8** %26, align 8
  %2140 = icmp ne i8* %2139, null
  %.14.1.1 = select i1 %2140, i32 1, i32 0
  %2141 = select i1 %2140, i1 true, i1 false
  br i1 %2141, label %.lr.ph6.preheader.1.1, label %._crit_edge.1.1

.lr.ph6.preheader.1.1:                            ; preds = %2137
  br label %.lr.ph6.1.1

.lr.ph6.1.1:                                      ; preds = %.lr.ph6.1.1, %.lr.ph6.preheader.1.1
  %.15.1.1 = phi i32 [ %.1.1.1, %.lr.ph6.1.1 ], [ %.14.1.1, %.lr.ph6.preheader.1.1 ]
  %2142 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2143 = sext i32 %.15.1.1 to i64
  %2144 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2143
  store i8* %2142, i8** %2144, align 8
  call void @unroll_loop(i32 45)
  %2145 = sext i32 %.15.1.1 to i64
  %2146 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2145
  %2147 = load i8*, i8** %2146, align 8
  %2148 = icmp ne i8* %2147, null
  %2149 = add nsw i32 %.15.1.1, 1
  %2150 = icmp slt i32 %2149, 30
  %.1.1.1 = select i1 %2148, i32 %2149, i32 %.15.1.1
  %2151 = select i1 %2148, i1 %2150, i1 false
  br i1 %2151, label %.lr.ph6.1.1, label %._crit_edge.loopexit.1.1

._crit_edge.loopexit.1.1:                         ; preds = %.lr.ph6.1.1
  %.1.lcssa.ph.1.1 = phi i32 [ %.1.1.1, %.lr.ph6.1.1 ]
  br label %._crit_edge.1.1

._crit_edge.1.1:                                  ; preds = %._crit_edge.loopexit.1.1, %2137
  %.1.lcssa.1.1 = phi i32 [ %.14.1.1, %2137 ], [ %.1.lcssa.ph.1.1, %._crit_edge.loopexit.1.1 ]
  %2152 = load i8*, i8** %27, align 16
  %2153 = icmp ne i8* %2152, null
  br i1 %2153, label %290, label %2154

; <label>:2154:                                   ; preds = %._crit_edge.1.1
  call void @__loop_iteration_test___6()
  %2155 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2156 = icmp ne i8* %2155, null
  br i1 %2156, label %2157, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2157:                                   ; preds = %2154
  call void @unroll_loop(i32 44)
  %2158 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2159 = icmp ne i8* %2158, null
  br i1 %2159, label %2160, label %2161

; <label>:2160:                                   ; preds = %2157
  store i8 0, i8* %2158, align 1
  br label %2161

; <label>:2161:                                   ; preds = %2160, %2157
  %2162 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2163 = icmp ne i8* %2162, null
  br i1 %2163, label %2164, label %2165

; <label>:2164:                                   ; preds = %2161
  store i8 0, i8* %2162, align 1
  br label %2165

; <label>:2165:                                   ; preds = %2164, %2161
  %2166 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2167 = icmp ne i8* %2166, null
  br i1 %2167, label %2168, label %2169

; <label>:2168:                                   ; preds = %2165
  store i8 0, i8* %2166, align 1
  br label %2169

; <label>:2169:                                   ; preds = %2168, %2165
  %2170 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2171 = icmp ne i8* %2170, null
  br i1 %2171, label %2172, label %2173

; <label>:2172:                                   ; preds = %2169
  store i8 0, i8* %2170, align 1
  br label %2173

; <label>:2173:                                   ; preds = %2172, %2169
  %2174 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2174, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2175 = load i8*, i8** %26, align 8
  %2176 = icmp ne i8* %2175, null
  %.14.1.2 = select i1 %2176, i32 1, i32 0
  %2177 = select i1 %2176, i1 true, i1 false
  br i1 %2177, label %.lr.ph6.preheader.1.2, label %._crit_edge.1.2

.lr.ph6.preheader.1.2:                            ; preds = %2173
  br label %.lr.ph6.1.2

.lr.ph6.1.2:                                      ; preds = %.lr.ph6.1.2, %.lr.ph6.preheader.1.2
  %.15.1.2 = phi i32 [ %.1.1.2, %.lr.ph6.1.2 ], [ %.14.1.2, %.lr.ph6.preheader.1.2 ]
  %2178 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2179 = sext i32 %.15.1.2 to i64
  %2180 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2179
  store i8* %2178, i8** %2180, align 8
  call void @unroll_loop(i32 45)
  %2181 = sext i32 %.15.1.2 to i64
  %2182 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2181
  %2183 = load i8*, i8** %2182, align 8
  %2184 = icmp ne i8* %2183, null
  %2185 = add nsw i32 %.15.1.2, 1
  %2186 = icmp slt i32 %2185, 30
  %.1.1.2 = select i1 %2184, i32 %2185, i32 %.15.1.2
  %2187 = select i1 %2184, i1 %2186, i1 false
  br i1 %2187, label %.lr.ph6.1.2, label %._crit_edge.loopexit.1.2

._crit_edge.loopexit.1.2:                         ; preds = %.lr.ph6.1.2
  %.1.lcssa.ph.1.2 = phi i32 [ %.1.1.2, %.lr.ph6.1.2 ]
  br label %._crit_edge.1.2

._crit_edge.1.2:                                  ; preds = %._crit_edge.loopexit.1.2, %2173
  %.1.lcssa.1.2 = phi i32 [ %.14.1.2, %2173 ], [ %.1.lcssa.ph.1.2, %._crit_edge.loopexit.1.2 ]
  %2188 = load i8*, i8** %27, align 16
  %2189 = icmp ne i8* %2188, null
  br i1 %2189, label %290, label %2190

; <label>:2190:                                   ; preds = %._crit_edge.1.2
  call void @__loop_iteration_test___6()
  %2191 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2192 = icmp ne i8* %2191, null
  br i1 %2192, label %2193, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2193:                                   ; preds = %2190
  call void @unroll_loop(i32 44)
  %2194 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2195 = icmp ne i8* %2194, null
  br i1 %2195, label %2196, label %2197

; <label>:2196:                                   ; preds = %2193
  store i8 0, i8* %2194, align 1
  br label %2197

; <label>:2197:                                   ; preds = %2196, %2193
  %2198 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2199 = icmp ne i8* %2198, null
  br i1 %2199, label %2200, label %2201

; <label>:2200:                                   ; preds = %2197
  store i8 0, i8* %2198, align 1
  br label %2201

; <label>:2201:                                   ; preds = %2200, %2197
  %2202 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2203 = icmp ne i8* %2202, null
  br i1 %2203, label %2204, label %2205

; <label>:2204:                                   ; preds = %2201
  store i8 0, i8* %2202, align 1
  br label %2205

; <label>:2205:                                   ; preds = %2204, %2201
  %2206 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2207 = icmp ne i8* %2206, null
  br i1 %2207, label %2208, label %2209

; <label>:2208:                                   ; preds = %2205
  store i8 0, i8* %2206, align 1
  br label %2209

; <label>:2209:                                   ; preds = %2208, %2205
  %2210 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2210, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2211 = load i8*, i8** %26, align 8
  %2212 = icmp ne i8* %2211, null
  %.14.1.3 = select i1 %2212, i32 1, i32 0
  %2213 = select i1 %2212, i1 true, i1 false
  br i1 %2213, label %.lr.ph6.preheader.1.3, label %._crit_edge.1.3

.lr.ph6.preheader.1.3:                            ; preds = %2209
  br label %.lr.ph6.1.3

.lr.ph6.1.3:                                      ; preds = %.lr.ph6.1.3, %.lr.ph6.preheader.1.3
  %.15.1.3 = phi i32 [ %.1.1.3, %.lr.ph6.1.3 ], [ %.14.1.3, %.lr.ph6.preheader.1.3 ]
  %2214 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2215 = sext i32 %.15.1.3 to i64
  %2216 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2215
  store i8* %2214, i8** %2216, align 8
  call void @unroll_loop(i32 45)
  %2217 = sext i32 %.15.1.3 to i64
  %2218 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2217
  %2219 = load i8*, i8** %2218, align 8
  %2220 = icmp ne i8* %2219, null
  %2221 = add nsw i32 %.15.1.3, 1
  %2222 = icmp slt i32 %2221, 30
  %.1.1.3 = select i1 %2220, i32 %2221, i32 %.15.1.3
  %2223 = select i1 %2220, i1 %2222, i1 false
  br i1 %2223, label %.lr.ph6.1.3, label %._crit_edge.loopexit.1.3

._crit_edge.loopexit.1.3:                         ; preds = %.lr.ph6.1.3
  %.1.lcssa.ph.1.3 = phi i32 [ %.1.1.3, %.lr.ph6.1.3 ]
  br label %._crit_edge.1.3

._crit_edge.1.3:                                  ; preds = %._crit_edge.loopexit.1.3, %2209
  %.1.lcssa.1.3 = phi i32 [ %.14.1.3, %2209 ], [ %.1.lcssa.ph.1.3, %._crit_edge.loopexit.1.3 ]
  %2224 = load i8*, i8** %27, align 16
  %2225 = icmp ne i8* %2224, null
  br i1 %2225, label %290, label %2226

; <label>:2226:                                   ; preds = %._crit_edge.1.3
  call void @__loop_iteration_test___6()
  %2227 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2228 = icmp ne i8* %2227, null
  br i1 %2228, label %2229, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2229:                                   ; preds = %2226
  call void @unroll_loop(i32 44)
  %2230 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2231 = icmp ne i8* %2230, null
  br i1 %2231, label %2232, label %2233

; <label>:2232:                                   ; preds = %2229
  store i8 0, i8* %2230, align 1
  br label %2233

; <label>:2233:                                   ; preds = %2232, %2229
  %2234 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2235 = icmp ne i8* %2234, null
  br i1 %2235, label %2236, label %2237

; <label>:2236:                                   ; preds = %2233
  store i8 0, i8* %2234, align 1
  br label %2237

; <label>:2237:                                   ; preds = %2236, %2233
  %2238 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2239 = icmp ne i8* %2238, null
  br i1 %2239, label %2240, label %2241

; <label>:2240:                                   ; preds = %2237
  store i8 0, i8* %2238, align 1
  br label %2241

; <label>:2241:                                   ; preds = %2240, %2237
  %2242 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2243 = icmp ne i8* %2242, null
  br i1 %2243, label %2244, label %2245

; <label>:2244:                                   ; preds = %2241
  store i8 0, i8* %2242, align 1
  br label %2245

; <label>:2245:                                   ; preds = %2244, %2241
  %2246 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2246, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2247 = load i8*, i8** %26, align 8
  %2248 = icmp ne i8* %2247, null
  %.14.1.4 = select i1 %2248, i32 1, i32 0
  %2249 = select i1 %2248, i1 true, i1 false
  br i1 %2249, label %.lr.ph6.preheader.1.4, label %._crit_edge.1.4

.lr.ph6.preheader.1.4:                            ; preds = %2245
  br label %.lr.ph6.1.4

.lr.ph6.1.4:                                      ; preds = %.lr.ph6.1.4, %.lr.ph6.preheader.1.4
  %.15.1.4 = phi i32 [ %.1.1.4, %.lr.ph6.1.4 ], [ %.14.1.4, %.lr.ph6.preheader.1.4 ]
  %2250 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2251 = sext i32 %.15.1.4 to i64
  %2252 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2251
  store i8* %2250, i8** %2252, align 8
  call void @unroll_loop(i32 45)
  %2253 = sext i32 %.15.1.4 to i64
  %2254 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2253
  %2255 = load i8*, i8** %2254, align 8
  %2256 = icmp ne i8* %2255, null
  %2257 = add nsw i32 %.15.1.4, 1
  %2258 = icmp slt i32 %2257, 30
  %.1.1.4 = select i1 %2256, i32 %2257, i32 %.15.1.4
  %2259 = select i1 %2256, i1 %2258, i1 false
  br i1 %2259, label %.lr.ph6.1.4, label %._crit_edge.loopexit.1.4

._crit_edge.loopexit.1.4:                         ; preds = %.lr.ph6.1.4
  %.1.lcssa.ph.1.4 = phi i32 [ %.1.1.4, %.lr.ph6.1.4 ]
  br label %._crit_edge.1.4

._crit_edge.1.4:                                  ; preds = %._crit_edge.loopexit.1.4, %2245
  %.1.lcssa.1.4 = phi i32 [ %.14.1.4, %2245 ], [ %.1.lcssa.ph.1.4, %._crit_edge.loopexit.1.4 ]
  %2260 = load i8*, i8** %27, align 16
  %2261 = icmp ne i8* %2260, null
  br i1 %2261, label %290, label %2262

; <label>:2262:                                   ; preds = %._crit_edge.1.4
  call void @__loop_iteration_test___6()
  %2263 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2264 = icmp ne i8* %2263, null
  br i1 %2264, label %2265, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2265:                                   ; preds = %2262
  call void @unroll_loop(i32 44)
  %2266 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2267 = icmp ne i8* %2266, null
  br i1 %2267, label %2268, label %2269

; <label>:2268:                                   ; preds = %2265
  store i8 0, i8* %2266, align 1
  br label %2269

; <label>:2269:                                   ; preds = %2268, %2265
  %2270 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2271 = icmp ne i8* %2270, null
  br i1 %2271, label %2272, label %2273

; <label>:2272:                                   ; preds = %2269
  store i8 0, i8* %2270, align 1
  br label %2273

; <label>:2273:                                   ; preds = %2272, %2269
  %2274 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2275 = icmp ne i8* %2274, null
  br i1 %2275, label %2276, label %2277

; <label>:2276:                                   ; preds = %2273
  store i8 0, i8* %2274, align 1
  br label %2277

; <label>:2277:                                   ; preds = %2276, %2273
  %2278 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2279 = icmp ne i8* %2278, null
  br i1 %2279, label %2280, label %2281

; <label>:2280:                                   ; preds = %2277
  store i8 0, i8* %2278, align 1
  br label %2281

; <label>:2281:                                   ; preds = %2280, %2277
  %2282 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2282, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2283 = load i8*, i8** %26, align 8
  %2284 = icmp ne i8* %2283, null
  %.14.1.5 = select i1 %2284, i32 1, i32 0
  %2285 = select i1 %2284, i1 true, i1 false
  br i1 %2285, label %.lr.ph6.preheader.1.5, label %._crit_edge.1.5

.lr.ph6.preheader.1.5:                            ; preds = %2281
  br label %.lr.ph6.1.5

.lr.ph6.1.5:                                      ; preds = %.lr.ph6.1.5, %.lr.ph6.preheader.1.5
  %.15.1.5 = phi i32 [ %.1.1.5, %.lr.ph6.1.5 ], [ %.14.1.5, %.lr.ph6.preheader.1.5 ]
  %2286 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2287 = sext i32 %.15.1.5 to i64
  %2288 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2287
  store i8* %2286, i8** %2288, align 8
  call void @unroll_loop(i32 45)
  %2289 = sext i32 %.15.1.5 to i64
  %2290 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2289
  %2291 = load i8*, i8** %2290, align 8
  %2292 = icmp ne i8* %2291, null
  %2293 = add nsw i32 %.15.1.5, 1
  %2294 = icmp slt i32 %2293, 30
  %.1.1.5 = select i1 %2292, i32 %2293, i32 %.15.1.5
  %2295 = select i1 %2292, i1 %2294, i1 false
  br i1 %2295, label %.lr.ph6.1.5, label %._crit_edge.loopexit.1.5

._crit_edge.loopexit.1.5:                         ; preds = %.lr.ph6.1.5
  %.1.lcssa.ph.1.5 = phi i32 [ %.1.1.5, %.lr.ph6.1.5 ]
  br label %._crit_edge.1.5

._crit_edge.1.5:                                  ; preds = %._crit_edge.loopexit.1.5, %2281
  %.1.lcssa.1.5 = phi i32 [ %.14.1.5, %2281 ], [ %.1.lcssa.ph.1.5, %._crit_edge.loopexit.1.5 ]
  %2296 = load i8*, i8** %27, align 16
  %2297 = icmp ne i8* %2296, null
  br i1 %2297, label %290, label %2298

; <label>:2298:                                   ; preds = %._crit_edge.1.5
  call void @__loop_iteration_test___6()
  %2299 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2300 = icmp ne i8* %2299, null
  br i1 %2300, label %2301, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2301:                                   ; preds = %2298
  call void @unroll_loop(i32 44)
  %2302 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2303 = icmp ne i8* %2302, null
  br i1 %2303, label %2304, label %2305

; <label>:2304:                                   ; preds = %2301
  store i8 0, i8* %2302, align 1
  br label %2305

; <label>:2305:                                   ; preds = %2304, %2301
  %2306 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2307 = icmp ne i8* %2306, null
  br i1 %2307, label %2308, label %2309

; <label>:2308:                                   ; preds = %2305
  store i8 0, i8* %2306, align 1
  br label %2309

; <label>:2309:                                   ; preds = %2308, %2305
  %2310 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2311 = icmp ne i8* %2310, null
  br i1 %2311, label %2312, label %2313

; <label>:2312:                                   ; preds = %2309
  store i8 0, i8* %2310, align 1
  br label %2313

; <label>:2313:                                   ; preds = %2312, %2309
  %2314 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2315 = icmp ne i8* %2314, null
  br i1 %2315, label %2316, label %2317

; <label>:2316:                                   ; preds = %2313
  store i8 0, i8* %2314, align 1
  br label %2317

; <label>:2317:                                   ; preds = %2316, %2313
  %2318 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2318, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2319 = load i8*, i8** %26, align 8
  %2320 = icmp ne i8* %2319, null
  %.14.1.6 = select i1 %2320, i32 1, i32 0
  %2321 = select i1 %2320, i1 true, i1 false
  br i1 %2321, label %.lr.ph6.preheader.1.6, label %._crit_edge.1.6

.lr.ph6.preheader.1.6:                            ; preds = %2317
  br label %.lr.ph6.1.6

.lr.ph6.1.6:                                      ; preds = %.lr.ph6.1.6, %.lr.ph6.preheader.1.6
  %.15.1.6 = phi i32 [ %.1.1.6, %.lr.ph6.1.6 ], [ %.14.1.6, %.lr.ph6.preheader.1.6 ]
  %2322 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2323 = sext i32 %.15.1.6 to i64
  %2324 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2323
  store i8* %2322, i8** %2324, align 8
  call void @unroll_loop(i32 45)
  %2325 = sext i32 %.15.1.6 to i64
  %2326 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2325
  %2327 = load i8*, i8** %2326, align 8
  %2328 = icmp ne i8* %2327, null
  %2329 = add nsw i32 %.15.1.6, 1
  %2330 = icmp slt i32 %2329, 30
  %.1.1.6 = select i1 %2328, i32 %2329, i32 %.15.1.6
  %2331 = select i1 %2328, i1 %2330, i1 false
  br i1 %2331, label %.lr.ph6.1.6, label %._crit_edge.loopexit.1.6

._crit_edge.loopexit.1.6:                         ; preds = %.lr.ph6.1.6
  %.1.lcssa.ph.1.6 = phi i32 [ %.1.1.6, %.lr.ph6.1.6 ]
  br label %._crit_edge.1.6

._crit_edge.1.6:                                  ; preds = %._crit_edge.loopexit.1.6, %2317
  %.1.lcssa.1.6 = phi i32 [ %.14.1.6, %2317 ], [ %.1.lcssa.ph.1.6, %._crit_edge.loopexit.1.6 ]
  %2332 = load i8*, i8** %27, align 16
  %2333 = icmp ne i8* %2332, null
  br i1 %2333, label %290, label %2334

; <label>:2334:                                   ; preds = %._crit_edge.1.6
  call void @__loop_iteration_test___6()
  %2335 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2336 = icmp ne i8* %2335, null
  br i1 %2336, label %2337, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2337:                                   ; preds = %2334
  call void @unroll_loop(i32 44)
  %2338 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2339 = icmp ne i8* %2338, null
  br i1 %2339, label %2340, label %2341

; <label>:2340:                                   ; preds = %2337
  store i8 0, i8* %2338, align 1
  br label %2341

; <label>:2341:                                   ; preds = %2340, %2337
  %2342 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2343 = icmp ne i8* %2342, null
  br i1 %2343, label %2344, label %2345

; <label>:2344:                                   ; preds = %2341
  store i8 0, i8* %2342, align 1
  br label %2345

; <label>:2345:                                   ; preds = %2344, %2341
  %2346 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2347 = icmp ne i8* %2346, null
  br i1 %2347, label %2348, label %2349

; <label>:2348:                                   ; preds = %2345
  store i8 0, i8* %2346, align 1
  br label %2349

; <label>:2349:                                   ; preds = %2348, %2345
  %2350 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2351 = icmp ne i8* %2350, null
  br i1 %2351, label %2352, label %2353

; <label>:2352:                                   ; preds = %2349
  store i8 0, i8* %2350, align 1
  br label %2353

; <label>:2353:                                   ; preds = %2352, %2349
  %2354 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2354, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2355 = load i8*, i8** %26, align 8
  %2356 = icmp ne i8* %2355, null
  %.14.1.7 = select i1 %2356, i32 1, i32 0
  %2357 = select i1 %2356, i1 true, i1 false
  br i1 %2357, label %.lr.ph6.preheader.1.7, label %._crit_edge.1.7

.lr.ph6.preheader.1.7:                            ; preds = %2353
  br label %.lr.ph6.1.7

.lr.ph6.1.7:                                      ; preds = %.lr.ph6.1.7, %.lr.ph6.preheader.1.7
  %.15.1.7 = phi i32 [ %.1.1.7, %.lr.ph6.1.7 ], [ %.14.1.7, %.lr.ph6.preheader.1.7 ]
  %2358 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2359 = sext i32 %.15.1.7 to i64
  %2360 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2359
  store i8* %2358, i8** %2360, align 8
  call void @unroll_loop(i32 45)
  %2361 = sext i32 %.15.1.7 to i64
  %2362 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2361
  %2363 = load i8*, i8** %2362, align 8
  %2364 = icmp ne i8* %2363, null
  %2365 = add nsw i32 %.15.1.7, 1
  %2366 = icmp slt i32 %2365, 30
  %.1.1.7 = select i1 %2364, i32 %2365, i32 %.15.1.7
  %2367 = select i1 %2364, i1 %2366, i1 false
  br i1 %2367, label %.lr.ph6.1.7, label %._crit_edge.loopexit.1.7

._crit_edge.loopexit.1.7:                         ; preds = %.lr.ph6.1.7
  %.1.lcssa.ph.1.7 = phi i32 [ %.1.1.7, %.lr.ph6.1.7 ]
  br label %._crit_edge.1.7

._crit_edge.1.7:                                  ; preds = %._crit_edge.loopexit.1.7, %2353
  %.1.lcssa.1.7 = phi i32 [ %.14.1.7, %2353 ], [ %.1.lcssa.ph.1.7, %._crit_edge.loopexit.1.7 ]
  %2368 = load i8*, i8** %27, align 16
  %2369 = icmp ne i8* %2368, null
  br i1 %2369, label %290, label %2370

; <label>:2370:                                   ; preds = %._crit_edge.1.7
  call void @__loop_iteration_test___6()
  %2371 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit1

.lr.ph6.1.13:                                     ; preds = %.lr.ph6.1
  call void @__loop_iteration_test___7()
  %2372 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2373 = sext i32 2 to i64
  %2374 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* null, i8** %2374, align 8
  call void @unroll_loop(i32 45)
  %2375 = sext i32 2 to i64
  %2376 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %2377 = load i8*, i8** %2376, align 8
  %2378 = icmp ne i64 0, 0
  %2379 = icmp ne i8* null, null
  %2380 = add nsw i32 2, 1
  %2381 = icmp slt i32 3, 30
  %.1.1.12 = select i1 false, i32 3, i32 2
  %2382 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.1.26, label %._crit_edge.loopexit.1

.lr.ph6.1.26:                                     ; preds = %.lr.ph6.1.13
  call void @__loop_iteration_test___7()
  %2383 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2384 = sext i32 2 to i64
  %2385 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2384
  store i8* %2383, i8** %2385, align 8
  call void @unroll_loop(i32 45)
  %2386 = sext i32 2 to i64
  %2387 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2386
  %2388 = load i8*, i8** %2387, align 8
  %2389 = icmp ne i8* %2388, null
  %2390 = add nsw i32 2, 1
  %2391 = icmp slt i32 %2390, 30
  %.1.1.25 = select i1 %2389, i32 %2390, i32 2
  %2392 = select i1 %2389, i1 %2391, i1 false
  br i1 %2392, label %.lr.ph6.1.39, label %._crit_edge.loopexit.1

.lr.ph6.1.39:                                     ; preds = %.lr.ph6.1.26
  call void @__loop_iteration_test___7()
  %2393 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2394 = sext i32 %.1.1.25 to i64
  %2395 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2394
  store i8* %2393, i8** %2395, align 8
  call void @unroll_loop(i32 45)
  %2396 = sext i32 %.1.1.25 to i64
  %2397 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2396
  %2398 = load i8*, i8** %2397, align 8
  %2399 = icmp ne i8* %2398, null
  %2400 = add nsw i32 %.1.1.25, 1
  %2401 = icmp slt i32 %2400, 30
  %.1.1.38 = select i1 %2399, i32 %2400, i32 %.1.1.25
  %2402 = select i1 %2399, i1 %2401, i1 false
  br i1 %2402, label %.lr.ph6.1.412, label %._crit_edge.loopexit.1

.lr.ph6.1.412:                                    ; preds = %.lr.ph6.1.39
  call void @__loop_iteration_test___7()
  %2403 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2404 = sext i32 %.1.1.38 to i64
  %2405 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2404
  store i8* %2403, i8** %2405, align 8
  call void @unroll_loop(i32 45)
  %2406 = sext i32 %.1.1.38 to i64
  %2407 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2406
  %2408 = load i8*, i8** %2407, align 8
  %2409 = icmp ne i8* %2408, null
  %2410 = add nsw i32 %.1.1.38, 1
  %2411 = icmp slt i32 %2410, 30
  %.1.1.411 = select i1 %2409, i32 %2410, i32 %.1.1.38
  %2412 = select i1 %2409, i1 %2411, i1 false
  br i1 %2412, label %.lr.ph6.1.515, label %._crit_edge.loopexit.1

.lr.ph6.1.515:                                    ; preds = %.lr.ph6.1.412
  call void @__loop_iteration_test___7()
  %2413 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2414 = sext i32 %.1.1.411 to i64
  %2415 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2414
  store i8* %2413, i8** %2415, align 8
  call void @unroll_loop(i32 45)
  %2416 = sext i32 %.1.1.411 to i64
  %2417 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2416
  %2418 = load i8*, i8** %2417, align 8
  %2419 = icmp ne i8* %2418, null
  %2420 = add nsw i32 %.1.1.411, 1
  %2421 = icmp slt i32 %2420, 30
  %.1.1.514 = select i1 %2419, i32 %2420, i32 %.1.1.411
  %2422 = select i1 %2419, i1 %2421, i1 false
  br i1 %2422, label %.lr.ph6.1.618, label %._crit_edge.loopexit.1

.lr.ph6.1.618:                                    ; preds = %.lr.ph6.1.515
  call void @__loop_iteration_test___7()
  %2423 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2424 = sext i32 %.1.1.514 to i64
  %2425 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2424
  store i8* %2423, i8** %2425, align 8
  call void @unroll_loop(i32 45)
  %2426 = sext i32 %.1.1.514 to i64
  %2427 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2426
  %2428 = load i8*, i8** %2427, align 8
  %2429 = icmp ne i8* %2428, null
  %2430 = add nsw i32 %.1.1.514, 1
  %2431 = icmp slt i32 %2430, 30
  %.1.1.617 = select i1 %2429, i32 %2430, i32 %.1.1.514
  %2432 = select i1 %2429, i1 %2431, i1 false
  br i1 %2432, label %.lr.ph6.1.721, label %._crit_edge.loopexit.1

.lr.ph6.1.721:                                    ; preds = %.lr.ph6.1.618
  call void @__loop_iteration_test___7()
  %2433 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2434 = sext i32 %.1.1.617 to i64
  %2435 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2434
  store i8* %2433, i8** %2435, align 8
  call void @unroll_loop(i32 45)
  %2436 = sext i32 %.1.1.617 to i64
  %2437 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2436
  %2438 = load i8*, i8** %2437, align 8
  %2439 = icmp ne i8* %2438, null
  %2440 = add nsw i32 %.1.1.617, 1
  %2441 = icmp slt i32 %2440, 30
  %.1.1.720 = select i1 %2439, i32 %2440, i32 %.1.1.617
  %2442 = select i1 %2439, i1 %2441, i1 false
  br i1 %2442, label %.lr.ph6.1.8, label %._crit_edge.loopexit.1

.lr.ph6.1.8:                                      ; preds = %.lr.ph6.1.721
  call void @__loop_iteration_test___7()
  %2443 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2444 = sext i32 %.1.1.720 to i64
  %2445 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2444
  store i8* %2443, i8** %2445, align 8
  call void @unroll_loop(i32 45)
  %2446 = sext i32 %.1.1.720 to i64
  %2447 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2446
  %2448 = load i8*, i8** %2447, align 8
  %2449 = icmp ne i8* %2448, null
  %2450 = add nsw i32 %.1.1.720, 1
  %2451 = icmp slt i32 %2450, 30
  %.1.1.8 = select i1 %2449, i32 %2450, i32 %.1.1.720
  %2452 = select i1 %2449, i1 %2451, i1 false
  br i1 %2452, label %.lr.ph6.1.9, label %._crit_edge.loopexit.1

.lr.ph6.1.9:                                      ; preds = %.lr.ph6.1.8
  call void @__loop_iteration_test___7()
  %2453 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2454 = sext i32 %.1.1.8 to i64
  %2455 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2454
  store i8* %2453, i8** %2455, align 8
  call void @unroll_loop(i32 45)
  %2456 = sext i32 %.1.1.8 to i64
  %2457 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2456
  %2458 = load i8*, i8** %2457, align 8
  %2459 = icmp ne i8* %2458, null
  %2460 = add nsw i32 %.1.1.8, 1
  %2461 = icmp slt i32 %2460, 30
  %.1.1.9 = select i1 %2459, i32 %2460, i32 %.1.1.8
  %2462 = select i1 %2459, i1 %2461, i1 false
  br i1 %2462, label %.lr.ph6.1.10, label %._crit_edge.loopexit.1

.lr.ph6.1.10:                                     ; preds = %.lr.ph6.1.9
  call void @__loop_iteration_test___7()
  %2463 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2464 = sext i32 %.1.1.9 to i64
  %2465 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2464
  store i8* %2463, i8** %2465, align 8
  call void @unroll_loop(i32 45)
  %2466 = sext i32 %.1.1.9 to i64
  %2467 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2466
  %2468 = load i8*, i8** %2467, align 8
  %2469 = icmp ne i8* %2468, null
  %2470 = add nsw i32 %.1.1.9, 1
  %2471 = icmp slt i32 %2470, 30
  %.1.1.10 = select i1 %2469, i32 %2470, i32 %.1.1.9
  %2472 = select i1 %2469, i1 %2471, i1 false
  br i1 %2472, label %.lr.ph6.1.11, label %._crit_edge.loopexit.1

.lr.ph6.1.11:                                     ; preds = %.lr.ph6.1.10
  call void @__loop_iteration_test___7()
  %2473 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2474 = sext i32 %.1.1.10 to i64
  %2475 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2474
  store i8* %2473, i8** %2475, align 8
  call void @unroll_loop(i32 45)
  %2476 = sext i32 %.1.1.10 to i64
  %2477 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2476
  %2478 = load i8*, i8** %2477, align 8
  %2479 = icmp ne i8* %2478, null
  %2480 = add nsw i32 %.1.1.10, 1
  %2481 = icmp slt i32 %2480, 30
  %.1.1.11 = select i1 %2479, i32 %2480, i32 %.1.1.10
  %2482 = select i1 %2479, i1 %2481, i1 false
  br i1 %2482, label %.lr.ph6.1.12, label %._crit_edge.loopexit.1

.lr.ph6.1.12:                                     ; preds = %.lr.ph6.1.11
  call void @__loop_iteration_test___7()
  %2483 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2484 = sext i32 %.1.1.11 to i64
  %2485 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2484
  store i8* %2483, i8** %2485, align 8
  call void @unroll_loop(i32 45)
  %2486 = sext i32 %.1.1.11 to i64
  %2487 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2486
  %2488 = load i8*, i8** %2487, align 8
  %2489 = icmp ne i8* %2488, null
  %2490 = add nsw i32 %.1.1.11, 1
  %2491 = icmp slt i32 %2490, 30
  %.1.1.1222 = select i1 %2489, i32 %2490, i32 %.1.1.11
  %2492 = select i1 %2489, i1 %2491, i1 false
  br i1 %2492, label %.lr.ph6.1.1323, label %._crit_edge.loopexit.1

.lr.ph6.1.1323:                                   ; preds = %.lr.ph6.1.12
  call void @__loop_iteration_test___7()
  %2493 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2494 = sext i32 %.1.1.1222 to i64
  %2495 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2494
  store i8* %2493, i8** %2495, align 8
  call void @unroll_loop(i32 45)
  %2496 = sext i32 %.1.1.1222 to i64
  %2497 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2496
  %2498 = load i8*, i8** %2497, align 8
  %2499 = icmp ne i8* %2498, null
  %2500 = add nsw i32 %.1.1.1222, 1
  %2501 = icmp slt i32 %2500, 30
  %.1.1.13 = select i1 %2499, i32 %2500, i32 %.1.1.1222
  %2502 = select i1 %2499, i1 %2501, i1 false
  br i1 %2502, label %.lr.ph6.1.14, label %._crit_edge.loopexit.1

.lr.ph6.1.14:                                     ; preds = %.lr.ph6.1.1323
  call void @__loop_iteration_test___7()
  %2503 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2504 = sext i32 %.1.1.13 to i64
  %2505 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2504
  store i8* %2503, i8** %2505, align 8
  call void @unroll_loop(i32 45)
  %2506 = sext i32 %.1.1.13 to i64
  %2507 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2506
  %2508 = load i8*, i8** %2507, align 8
  %2509 = icmp ne i8* %2508, null
  %2510 = add nsw i32 %.1.1.13, 1
  %2511 = icmp slt i32 %2510, 30
  %.1.1.14 = select i1 %2509, i32 %2510, i32 %.1.1.13
  %2512 = select i1 %2509, i1 %2511, i1 false
  br i1 %2512, label %.lr.ph6.1.15, label %._crit_edge.loopexit.1

.lr.ph6.1.15:                                     ; preds = %.lr.ph6.1.14
  call void @__loop_iteration_test___7()
  %2513 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2514 = sext i32 %.1.1.14 to i64
  %2515 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2514
  store i8* %2513, i8** %2515, align 8
  call void @unroll_loop(i32 45)
  %2516 = sext i32 %.1.1.14 to i64
  %2517 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2516
  %2518 = load i8*, i8** %2517, align 8
  %2519 = icmp ne i8* %2518, null
  %2520 = add nsw i32 %.1.1.14, 1
  %2521 = icmp slt i32 %2520, 30
  %.1.1.15 = select i1 %2519, i32 %2520, i32 %.1.1.14
  %2522 = select i1 %2519, i1 %2521, i1 false
  br i1 %2522, label %.lr.ph6.1.16, label %._crit_edge.loopexit.1

.lr.ph6.1.16:                                     ; preds = %.lr.ph6.1.15
  call void @__loop_iteration_test___7()
  %2523 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2524 = sext i32 %.1.1.15 to i64
  %2525 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2524
  store i8* %2523, i8** %2525, align 8
  call void @unroll_loop(i32 45)
  %2526 = sext i32 %.1.1.15 to i64
  %2527 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2526
  %2528 = load i8*, i8** %2527, align 8
  %2529 = icmp ne i8* %2528, null
  %2530 = add nsw i32 %.1.1.15, 1
  %2531 = icmp slt i32 %2530, 30
  %.1.1.16 = select i1 %2529, i32 %2530, i32 %.1.1.15
  %2532 = select i1 %2529, i1 %2531, i1 false
  br i1 %2532, label %.lr.ph6.1.17, label %._crit_edge.loopexit.1

.lr.ph6.1.17:                                     ; preds = %.lr.ph6.1.16
  call void @__loop_iteration_test___7()
  %2533 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2534 = sext i32 %.1.1.16 to i64
  %2535 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2534
  store i8* %2533, i8** %2535, align 8
  call void @unroll_loop(i32 45)
  %2536 = sext i32 %.1.1.16 to i64
  %2537 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2536
  %2538 = load i8*, i8** %2537, align 8
  %2539 = icmp ne i8* %2538, null
  %2540 = add nsw i32 %.1.1.16, 1
  %2541 = icmp slt i32 %2540, 30
  %.1.1.17 = select i1 %2539, i32 %2540, i32 %.1.1.16
  %2542 = select i1 %2539, i1 %2541, i1 false
  br i1 %2542, label %.lr.ph6.1.18, label %._crit_edge.loopexit.1

.lr.ph6.1.18:                                     ; preds = %.lr.ph6.1.17
  call void @__loop_iteration_test___7()
  %2543 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2544 = sext i32 %.1.1.17 to i64
  %2545 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2544
  store i8* %2543, i8** %2545, align 8
  call void @unroll_loop(i32 45)
  %2546 = sext i32 %.1.1.17 to i64
  %2547 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2546
  %2548 = load i8*, i8** %2547, align 8
  %2549 = icmp ne i8* %2548, null
  %2550 = add nsw i32 %.1.1.17, 1
  %2551 = icmp slt i32 %2550, 30
  %.1.1.18 = select i1 %2549, i32 %2550, i32 %.1.1.17
  %2552 = select i1 %2549, i1 %2551, i1 false
  br i1 %2552, label %.lr.ph6.1.19, label %._crit_edge.loopexit.1

.lr.ph6.1.19:                                     ; preds = %.lr.ph6.1.18
  call void @__loop_iteration_test___7()
  %2553 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2554 = sext i32 %.1.1.18 to i64
  %2555 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2554
  store i8* %2553, i8** %2555, align 8
  call void @unroll_loop(i32 45)
  %2556 = sext i32 %.1.1.18 to i64
  %2557 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2556
  %2558 = load i8*, i8** %2557, align 8
  %2559 = icmp ne i8* %2558, null
  %2560 = add nsw i32 %.1.1.18, 1
  %2561 = icmp slt i32 %2560, 30
  %.1.1.19 = select i1 %2559, i32 %2560, i32 %.1.1.18
  br label %._crit_edge.loopexit.1

; <label>:2562:                                   ; preds = %495
  call void @unroll_loop(i32 44)
  %2563 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2564 = icmp ne i8* %2563, null
  br i1 %2564, label %2565, label %2566

; <label>:2565:                                   ; preds = %2562
  store i8 0, i8* %2563, align 1
  br label %2566

; <label>:2566:                                   ; preds = %2565, %2562
  %2567 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2568 = icmp ne i8* %2567, null
  br i1 %2568, label %2569, label %2570

; <label>:2569:                                   ; preds = %2566
  store i8 0, i8* %2567, align 1
  br label %2570

; <label>:2570:                                   ; preds = %2569, %2566
  %2571 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2572 = icmp ne i8* %2571, null
  br i1 %2572, label %2573, label %2574

; <label>:2573:                                   ; preds = %2570
  store i8 0, i8* %2571, align 1
  br label %2574

; <label>:2574:                                   ; preds = %2573, %2570
  %2575 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2576 = icmp ne i8* %2575, null
  br i1 %2576, label %2577, label %2578

; <label>:2577:                                   ; preds = %2574
  store i8 0, i8* %2575, align 1
  br label %2578

; <label>:2578:                                   ; preds = %2577, %2574
  %2579 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2579, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2580 = load i8*, i8** %26, align 8
  %2581 = icmp ne i8* %2580, null
  %.14.2.1 = select i1 %2581, i32 1, i32 0
  %2582 = select i1 %2581, i1 true, i1 false
  br i1 %2582, label %.lr.ph6.preheader.2.1, label %._crit_edge.2.1

.lr.ph6.preheader.2.1:                            ; preds = %2578
  br label %.lr.ph6.2.1

.lr.ph6.2.1:                                      ; preds = %.lr.ph6.2.1, %.lr.ph6.preheader.2.1
  %.15.2.1 = phi i32 [ %.1.2.1, %.lr.ph6.2.1 ], [ %.14.2.1, %.lr.ph6.preheader.2.1 ]
  %2583 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2584 = sext i32 %.15.2.1 to i64
  %2585 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2584
  store i8* %2583, i8** %2585, align 8
  call void @unroll_loop(i32 45)
  %2586 = sext i32 %.15.2.1 to i64
  %2587 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2586
  %2588 = load i8*, i8** %2587, align 8
  %2589 = icmp ne i8* %2588, null
  %2590 = add nsw i32 %.15.2.1, 1
  %2591 = icmp slt i32 %2590, 30
  %.1.2.1 = select i1 %2589, i32 %2590, i32 %.15.2.1
  %2592 = select i1 %2589, i1 %2591, i1 false
  br i1 %2592, label %.lr.ph6.2.1, label %._crit_edge.loopexit.2.1

._crit_edge.loopexit.2.1:                         ; preds = %.lr.ph6.2.1
  %.1.lcssa.ph.2.1 = phi i32 [ %.1.2.1, %.lr.ph6.2.1 ]
  br label %._crit_edge.2.1

._crit_edge.2.1:                                  ; preds = %._crit_edge.loopexit.2.1, %2578
  %.1.lcssa.2.1 = phi i32 [ %.14.2.1, %2578 ], [ %.1.lcssa.ph.2.1, %._crit_edge.loopexit.2.1 ]
  %2593 = load i8*, i8** %27, align 16
  %2594 = icmp ne i8* %2593, null
  br i1 %2594, label %498, label %2595

; <label>:2595:                                   ; preds = %._crit_edge.2.1
  call void @__loop_iteration_test___8()
  %2596 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2597 = icmp ne i8* %2596, null
  br i1 %2597, label %2598, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2598:                                   ; preds = %2595
  call void @unroll_loop(i32 44)
  %2599 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2600 = icmp ne i8* %2599, null
  br i1 %2600, label %2601, label %2602

; <label>:2601:                                   ; preds = %2598
  store i8 0, i8* %2599, align 1
  br label %2602

; <label>:2602:                                   ; preds = %2601, %2598
  %2603 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2604 = icmp ne i8* %2603, null
  br i1 %2604, label %2605, label %2606

; <label>:2605:                                   ; preds = %2602
  store i8 0, i8* %2603, align 1
  br label %2606

; <label>:2606:                                   ; preds = %2605, %2602
  %2607 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2608 = icmp ne i8* %2607, null
  br i1 %2608, label %2609, label %2610

; <label>:2609:                                   ; preds = %2606
  store i8 0, i8* %2607, align 1
  br label %2610

; <label>:2610:                                   ; preds = %2609, %2606
  %2611 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2612 = icmp ne i8* %2611, null
  br i1 %2612, label %2613, label %2614

; <label>:2613:                                   ; preds = %2610
  store i8 0, i8* %2611, align 1
  br label %2614

; <label>:2614:                                   ; preds = %2613, %2610
  %2615 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2615, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2616 = load i8*, i8** %26, align 8
  %2617 = icmp ne i8* %2616, null
  %.14.2.2 = select i1 %2617, i32 1, i32 0
  %2618 = select i1 %2617, i1 true, i1 false
  br i1 %2618, label %.lr.ph6.preheader.2.2, label %._crit_edge.2.2

.lr.ph6.preheader.2.2:                            ; preds = %2614
  br label %.lr.ph6.2.2

.lr.ph6.2.2:                                      ; preds = %.lr.ph6.2.2, %.lr.ph6.preheader.2.2
  %.15.2.2 = phi i32 [ %.1.2.2, %.lr.ph6.2.2 ], [ %.14.2.2, %.lr.ph6.preheader.2.2 ]
  %2619 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2620 = sext i32 %.15.2.2 to i64
  %2621 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2620
  store i8* %2619, i8** %2621, align 8
  call void @unroll_loop(i32 45)
  %2622 = sext i32 %.15.2.2 to i64
  %2623 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2622
  %2624 = load i8*, i8** %2623, align 8
  %2625 = icmp ne i8* %2624, null
  %2626 = add nsw i32 %.15.2.2, 1
  %2627 = icmp slt i32 %2626, 30
  %.1.2.2 = select i1 %2625, i32 %2626, i32 %.15.2.2
  %2628 = select i1 %2625, i1 %2627, i1 false
  br i1 %2628, label %.lr.ph6.2.2, label %._crit_edge.loopexit.2.2

._crit_edge.loopexit.2.2:                         ; preds = %.lr.ph6.2.2
  %.1.lcssa.ph.2.2 = phi i32 [ %.1.2.2, %.lr.ph6.2.2 ]
  br label %._crit_edge.2.2

._crit_edge.2.2:                                  ; preds = %._crit_edge.loopexit.2.2, %2614
  %.1.lcssa.2.2 = phi i32 [ %.14.2.2, %2614 ], [ %.1.lcssa.ph.2.2, %._crit_edge.loopexit.2.2 ]
  %2629 = load i8*, i8** %27, align 16
  %2630 = icmp ne i8* %2629, null
  br i1 %2630, label %498, label %2631

; <label>:2631:                                   ; preds = %._crit_edge.2.2
  call void @__loop_iteration_test___8()
  %2632 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2633 = icmp ne i8* %2632, null
  br i1 %2633, label %2634, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2634:                                   ; preds = %2631
  call void @unroll_loop(i32 44)
  %2635 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2636 = icmp ne i8* %2635, null
  br i1 %2636, label %2637, label %2638

; <label>:2637:                                   ; preds = %2634
  store i8 0, i8* %2635, align 1
  br label %2638

; <label>:2638:                                   ; preds = %2637, %2634
  %2639 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2640 = icmp ne i8* %2639, null
  br i1 %2640, label %2641, label %2642

; <label>:2641:                                   ; preds = %2638
  store i8 0, i8* %2639, align 1
  br label %2642

; <label>:2642:                                   ; preds = %2641, %2638
  %2643 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2644 = icmp ne i8* %2643, null
  br i1 %2644, label %2645, label %2646

; <label>:2645:                                   ; preds = %2642
  store i8 0, i8* %2643, align 1
  br label %2646

; <label>:2646:                                   ; preds = %2645, %2642
  %2647 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2648 = icmp ne i8* %2647, null
  br i1 %2648, label %2649, label %2650

; <label>:2649:                                   ; preds = %2646
  store i8 0, i8* %2647, align 1
  br label %2650

; <label>:2650:                                   ; preds = %2649, %2646
  %2651 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2651, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2652 = load i8*, i8** %26, align 8
  %2653 = icmp ne i8* %2652, null
  %.14.2.3 = select i1 %2653, i32 1, i32 0
  %2654 = select i1 %2653, i1 true, i1 false
  br i1 %2654, label %.lr.ph6.preheader.2.3, label %._crit_edge.2.3

.lr.ph6.preheader.2.3:                            ; preds = %2650
  br label %.lr.ph6.2.3

.lr.ph6.2.3:                                      ; preds = %.lr.ph6.2.3, %.lr.ph6.preheader.2.3
  %.15.2.3 = phi i32 [ %.1.2.3, %.lr.ph6.2.3 ], [ %.14.2.3, %.lr.ph6.preheader.2.3 ]
  %2655 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2656 = sext i32 %.15.2.3 to i64
  %2657 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2656
  store i8* %2655, i8** %2657, align 8
  call void @unroll_loop(i32 45)
  %2658 = sext i32 %.15.2.3 to i64
  %2659 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2658
  %2660 = load i8*, i8** %2659, align 8
  %2661 = icmp ne i8* %2660, null
  %2662 = add nsw i32 %.15.2.3, 1
  %2663 = icmp slt i32 %2662, 30
  %.1.2.3 = select i1 %2661, i32 %2662, i32 %.15.2.3
  %2664 = select i1 %2661, i1 %2663, i1 false
  br i1 %2664, label %.lr.ph6.2.3, label %._crit_edge.loopexit.2.3

._crit_edge.loopexit.2.3:                         ; preds = %.lr.ph6.2.3
  %.1.lcssa.ph.2.3 = phi i32 [ %.1.2.3, %.lr.ph6.2.3 ]
  br label %._crit_edge.2.3

._crit_edge.2.3:                                  ; preds = %._crit_edge.loopexit.2.3, %2650
  %.1.lcssa.2.3 = phi i32 [ %.14.2.3, %2650 ], [ %.1.lcssa.ph.2.3, %._crit_edge.loopexit.2.3 ]
  %2665 = load i8*, i8** %27, align 16
  %2666 = icmp ne i8* %2665, null
  br i1 %2666, label %498, label %2667

; <label>:2667:                                   ; preds = %._crit_edge.2.3
  call void @__loop_iteration_test___8()
  %2668 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2669 = icmp ne i8* %2668, null
  br i1 %2669, label %2670, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2670:                                   ; preds = %2667
  call void @unroll_loop(i32 44)
  %2671 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2672 = icmp ne i8* %2671, null
  br i1 %2672, label %2673, label %2674

; <label>:2673:                                   ; preds = %2670
  store i8 0, i8* %2671, align 1
  br label %2674

; <label>:2674:                                   ; preds = %2673, %2670
  %2675 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2676 = icmp ne i8* %2675, null
  br i1 %2676, label %2677, label %2678

; <label>:2677:                                   ; preds = %2674
  store i8 0, i8* %2675, align 1
  br label %2678

; <label>:2678:                                   ; preds = %2677, %2674
  %2679 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2680 = icmp ne i8* %2679, null
  br i1 %2680, label %2681, label %2682

; <label>:2681:                                   ; preds = %2678
  store i8 0, i8* %2679, align 1
  br label %2682

; <label>:2682:                                   ; preds = %2681, %2678
  %2683 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2684 = icmp ne i8* %2683, null
  br i1 %2684, label %2685, label %2686

; <label>:2685:                                   ; preds = %2682
  store i8 0, i8* %2683, align 1
  br label %2686

; <label>:2686:                                   ; preds = %2685, %2682
  %2687 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2687, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2688 = load i8*, i8** %26, align 8
  %2689 = icmp ne i8* %2688, null
  %.14.2.4 = select i1 %2689, i32 1, i32 0
  %2690 = select i1 %2689, i1 true, i1 false
  br i1 %2690, label %.lr.ph6.preheader.2.4, label %._crit_edge.2.4

.lr.ph6.preheader.2.4:                            ; preds = %2686
  br label %.lr.ph6.2.4

.lr.ph6.2.4:                                      ; preds = %.lr.ph6.2.4, %.lr.ph6.preheader.2.4
  %.15.2.4 = phi i32 [ %.1.2.4, %.lr.ph6.2.4 ], [ %.14.2.4, %.lr.ph6.preheader.2.4 ]
  %2691 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2692 = sext i32 %.15.2.4 to i64
  %2693 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2692
  store i8* %2691, i8** %2693, align 8
  call void @unroll_loop(i32 45)
  %2694 = sext i32 %.15.2.4 to i64
  %2695 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2694
  %2696 = load i8*, i8** %2695, align 8
  %2697 = icmp ne i8* %2696, null
  %2698 = add nsw i32 %.15.2.4, 1
  %2699 = icmp slt i32 %2698, 30
  %.1.2.4 = select i1 %2697, i32 %2698, i32 %.15.2.4
  %2700 = select i1 %2697, i1 %2699, i1 false
  br i1 %2700, label %.lr.ph6.2.4, label %._crit_edge.loopexit.2.4

._crit_edge.loopexit.2.4:                         ; preds = %.lr.ph6.2.4
  %.1.lcssa.ph.2.4 = phi i32 [ %.1.2.4, %.lr.ph6.2.4 ]
  br label %._crit_edge.2.4

._crit_edge.2.4:                                  ; preds = %._crit_edge.loopexit.2.4, %2686
  %.1.lcssa.2.4 = phi i32 [ %.14.2.4, %2686 ], [ %.1.lcssa.ph.2.4, %._crit_edge.loopexit.2.4 ]
  %2701 = load i8*, i8** %27, align 16
  %2702 = icmp ne i8* %2701, null
  br i1 %2702, label %498, label %2703

; <label>:2703:                                   ; preds = %._crit_edge.2.4
  call void @__loop_iteration_test___8()
  %2704 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2705 = icmp ne i8* %2704, null
  br i1 %2705, label %2706, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2706:                                   ; preds = %2703
  call void @unroll_loop(i32 44)
  %2707 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2708 = icmp ne i8* %2707, null
  br i1 %2708, label %2709, label %2710

; <label>:2709:                                   ; preds = %2706
  store i8 0, i8* %2707, align 1
  br label %2710

; <label>:2710:                                   ; preds = %2709, %2706
  %2711 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2712 = icmp ne i8* %2711, null
  br i1 %2712, label %2713, label %2714

; <label>:2713:                                   ; preds = %2710
  store i8 0, i8* %2711, align 1
  br label %2714

; <label>:2714:                                   ; preds = %2713, %2710
  %2715 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2716 = icmp ne i8* %2715, null
  br i1 %2716, label %2717, label %2718

; <label>:2717:                                   ; preds = %2714
  store i8 0, i8* %2715, align 1
  br label %2718

; <label>:2718:                                   ; preds = %2717, %2714
  %2719 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2720 = icmp ne i8* %2719, null
  br i1 %2720, label %2721, label %2722

; <label>:2721:                                   ; preds = %2718
  store i8 0, i8* %2719, align 1
  br label %2722

; <label>:2722:                                   ; preds = %2721, %2718
  %2723 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2723, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2724 = load i8*, i8** %26, align 8
  %2725 = icmp ne i8* %2724, null
  %.14.2.5 = select i1 %2725, i32 1, i32 0
  %2726 = select i1 %2725, i1 true, i1 false
  br i1 %2726, label %.lr.ph6.preheader.2.5, label %._crit_edge.2.5

.lr.ph6.preheader.2.5:                            ; preds = %2722
  br label %.lr.ph6.2.5

.lr.ph6.2.5:                                      ; preds = %.lr.ph6.2.5, %.lr.ph6.preheader.2.5
  %.15.2.5 = phi i32 [ %.1.2.5, %.lr.ph6.2.5 ], [ %.14.2.5, %.lr.ph6.preheader.2.5 ]
  %2727 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2728 = sext i32 %.15.2.5 to i64
  %2729 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2728
  store i8* %2727, i8** %2729, align 8
  call void @unroll_loop(i32 45)
  %2730 = sext i32 %.15.2.5 to i64
  %2731 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2730
  %2732 = load i8*, i8** %2731, align 8
  %2733 = icmp ne i8* %2732, null
  %2734 = add nsw i32 %.15.2.5, 1
  %2735 = icmp slt i32 %2734, 30
  %.1.2.5 = select i1 %2733, i32 %2734, i32 %.15.2.5
  %2736 = select i1 %2733, i1 %2735, i1 false
  br i1 %2736, label %.lr.ph6.2.5, label %._crit_edge.loopexit.2.5

._crit_edge.loopexit.2.5:                         ; preds = %.lr.ph6.2.5
  %.1.lcssa.ph.2.5 = phi i32 [ %.1.2.5, %.lr.ph6.2.5 ]
  br label %._crit_edge.2.5

._crit_edge.2.5:                                  ; preds = %._crit_edge.loopexit.2.5, %2722
  %.1.lcssa.2.5 = phi i32 [ %.14.2.5, %2722 ], [ %.1.lcssa.ph.2.5, %._crit_edge.loopexit.2.5 ]
  %2737 = load i8*, i8** %27, align 16
  %2738 = icmp ne i8* %2737, null
  br i1 %2738, label %498, label %2739

; <label>:2739:                                   ; preds = %._crit_edge.2.5
  call void @__loop_iteration_test___8()
  %2740 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2741 = icmp ne i8* %2740, null
  br i1 %2741, label %2742, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2742:                                   ; preds = %2739
  call void @unroll_loop(i32 44)
  %2743 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2744 = icmp ne i8* %2743, null
  br i1 %2744, label %2745, label %2746

; <label>:2745:                                   ; preds = %2742
  store i8 0, i8* %2743, align 1
  br label %2746

; <label>:2746:                                   ; preds = %2745, %2742
  %2747 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2748 = icmp ne i8* %2747, null
  br i1 %2748, label %2749, label %2750

; <label>:2749:                                   ; preds = %2746
  store i8 0, i8* %2747, align 1
  br label %2750

; <label>:2750:                                   ; preds = %2749, %2746
  %2751 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2752 = icmp ne i8* %2751, null
  br i1 %2752, label %2753, label %2754

; <label>:2753:                                   ; preds = %2750
  store i8 0, i8* %2751, align 1
  br label %2754

; <label>:2754:                                   ; preds = %2753, %2750
  %2755 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2756 = icmp ne i8* %2755, null
  br i1 %2756, label %2757, label %2758

; <label>:2757:                                   ; preds = %2754
  store i8 0, i8* %2755, align 1
  br label %2758

; <label>:2758:                                   ; preds = %2757, %2754
  %2759 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2759, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2760 = load i8*, i8** %26, align 8
  %2761 = icmp ne i8* %2760, null
  %.14.2.6 = select i1 %2761, i32 1, i32 0
  %2762 = select i1 %2761, i1 true, i1 false
  br i1 %2762, label %.lr.ph6.preheader.2.6, label %._crit_edge.2.6

.lr.ph6.preheader.2.6:                            ; preds = %2758
  br label %.lr.ph6.2.6

.lr.ph6.2.6:                                      ; preds = %.lr.ph6.2.6, %.lr.ph6.preheader.2.6
  %.15.2.6 = phi i32 [ %.1.2.6, %.lr.ph6.2.6 ], [ %.14.2.6, %.lr.ph6.preheader.2.6 ]
  %2763 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2764 = sext i32 %.15.2.6 to i64
  %2765 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2764
  store i8* %2763, i8** %2765, align 8
  call void @unroll_loop(i32 45)
  %2766 = sext i32 %.15.2.6 to i64
  %2767 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2766
  %2768 = load i8*, i8** %2767, align 8
  %2769 = icmp ne i8* %2768, null
  %2770 = add nsw i32 %.15.2.6, 1
  %2771 = icmp slt i32 %2770, 30
  %.1.2.6 = select i1 %2769, i32 %2770, i32 %.15.2.6
  %2772 = select i1 %2769, i1 %2771, i1 false
  br i1 %2772, label %.lr.ph6.2.6, label %._crit_edge.loopexit.2.6

._crit_edge.loopexit.2.6:                         ; preds = %.lr.ph6.2.6
  %.1.lcssa.ph.2.6 = phi i32 [ %.1.2.6, %.lr.ph6.2.6 ]
  br label %._crit_edge.2.6

._crit_edge.2.6:                                  ; preds = %._crit_edge.loopexit.2.6, %2758
  %.1.lcssa.2.6 = phi i32 [ %.14.2.6, %2758 ], [ %.1.lcssa.ph.2.6, %._crit_edge.loopexit.2.6 ]
  %2773 = load i8*, i8** %27, align 16
  %2774 = icmp ne i8* %2773, null
  br i1 %2774, label %498, label %2775

; <label>:2775:                                   ; preds = %._crit_edge.2.6
  call void @__loop_iteration_test___8()
  %2776 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2777 = icmp ne i8* %2776, null
  br i1 %2777, label %2778, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2778:                                   ; preds = %2775
  call void @unroll_loop(i32 44)
  %2779 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2780 = icmp ne i8* %2779, null
  br i1 %2780, label %2781, label %2782

; <label>:2781:                                   ; preds = %2778
  store i8 0, i8* %2779, align 1
  br label %2782

; <label>:2782:                                   ; preds = %2781, %2778
  %2783 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2784 = icmp ne i8* %2783, null
  br i1 %2784, label %2785, label %2786

; <label>:2785:                                   ; preds = %2782
  store i8 0, i8* %2783, align 1
  br label %2786

; <label>:2786:                                   ; preds = %2785, %2782
  %2787 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2788 = icmp ne i8* %2787, null
  br i1 %2788, label %2789, label %2790

; <label>:2789:                                   ; preds = %2786
  store i8 0, i8* %2787, align 1
  br label %2790

; <label>:2790:                                   ; preds = %2789, %2786
  %2791 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2792 = icmp ne i8* %2791, null
  br i1 %2792, label %2793, label %2794

; <label>:2793:                                   ; preds = %2790
  store i8 0, i8* %2791, align 1
  br label %2794

; <label>:2794:                                   ; preds = %2793, %2790
  %2795 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2795, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2796 = load i8*, i8** %26, align 8
  %2797 = icmp ne i8* %2796, null
  %.14.2.7 = select i1 %2797, i32 1, i32 0
  %2798 = select i1 %2797, i1 true, i1 false
  br i1 %2798, label %.lr.ph6.preheader.2.7, label %._crit_edge.2.7

.lr.ph6.preheader.2.7:                            ; preds = %2794
  br label %.lr.ph6.2.7

.lr.ph6.2.7:                                      ; preds = %.lr.ph6.2.7, %.lr.ph6.preheader.2.7
  %.15.2.7 = phi i32 [ %.1.2.7, %.lr.ph6.2.7 ], [ %.14.2.7, %.lr.ph6.preheader.2.7 ]
  %2799 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2800 = sext i32 %.15.2.7 to i64
  %2801 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2800
  store i8* %2799, i8** %2801, align 8
  call void @unroll_loop(i32 45)
  %2802 = sext i32 %.15.2.7 to i64
  %2803 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2802
  %2804 = load i8*, i8** %2803, align 8
  %2805 = icmp ne i8* %2804, null
  %2806 = add nsw i32 %.15.2.7, 1
  %2807 = icmp slt i32 %2806, 30
  %.1.2.7 = select i1 %2805, i32 %2806, i32 %.15.2.7
  %2808 = select i1 %2805, i1 %2807, i1 false
  br i1 %2808, label %.lr.ph6.2.7, label %._crit_edge.loopexit.2.7

._crit_edge.loopexit.2.7:                         ; preds = %.lr.ph6.2.7
  %.1.lcssa.ph.2.7 = phi i32 [ %.1.2.7, %.lr.ph6.2.7 ]
  br label %._crit_edge.2.7

._crit_edge.2.7:                                  ; preds = %._crit_edge.loopexit.2.7, %2794
  %.1.lcssa.2.7 = phi i32 [ %.14.2.7, %2794 ], [ %.1.lcssa.ph.2.7, %._crit_edge.loopexit.2.7 ]
  %2809 = load i8*, i8** %27, align 16
  %2810 = icmp ne i8* %2809, null
  br i1 %2810, label %498, label %2811

; <label>:2811:                                   ; preds = %._crit_edge.2.7
  call void @__loop_iteration_test___8()
  %2812 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit2
}

declare void @__loop_termination_test___8()

declare void @__loop_iteration_test___8()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @read_config_clone_clone_clone_clone_clone_clone_clone_clone(i8*) #0 {
  %2 = alloca [512 x i8], align 16, !track !97
  %3 = alloca [30 x i8*], align 16, !track !98
  %4 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 2, 0
  br i1 true, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [16 x i8], [16 x i8]* @.str.218, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %8, i8* %0)
  br label %9

; <label>:9:                                      ; preds = %7, %1
  %10 = getelementptr [2 x i8], [2 x i8]* @.str.1.219, i32 0, i32 0
  %11 = icmp ne i64 4389383, 0
  %12 = icmp ne %struct._IO_FILE* null, null
  br i1 true, label %15, label %13

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [27 x i8], [27 x i8]* @.str.2.220, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %14, i8* %0)
  br label %.loopexit1

; <label>:15:                                     ; preds = %9
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %17 = bitcast [27 x i8]* @22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %17, i64 27, i1 false)
  %18 = icmp ne i64 244262, 0
  %19 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.preheader, label %.outer._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %22 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %2, i32 0, i32 0
  %25 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %26 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %27 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %29 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %30 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %31 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %32 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %33 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %34 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %35 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %36 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %38 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %39 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %40 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %41 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %42 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %43 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %44 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 0
  %45 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %46 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %47 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %48 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %49 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %50 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %51 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 48)
  br label %55

; <label>:52:                                     ; preds = %._crit_edge
  call void @__loop_iteration_test___3()
  %53 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %54 = icmp ne i8* %53, null
  br i1 %54, label %1675, label %.outer._crit_edge.loopexit.loopexit

; <label>:55:                                     ; preds = %.lr.ph
  call void @unroll_loop(i32 44)
  %56 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %57 = icmp ne i64 244287, 0
  %58 = icmp ne i8* %56, null
  br i1 true, label %59, label %60

; <label>:59:                                     ; preds = %55
  store i8 0, i8* %56, align 1
  br label %60

; <label>:60:                                     ; preds = %59, %55
  %61 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %62 = icmp ne i64 0, 0
  %63 = icmp ne i8* null, null
  br i1 false, label %64, label %65

; <label>:64:                                     ; preds = %60
  store i8 0, i8* null, align 1
  br label %65

; <label>:65:                                     ; preds = %64, %60
  %66 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %67 = icmp ne i64 0, 0
  %68 = icmp ne i8* null, null
  br i1 false, label %69, label %70

; <label>:69:                                     ; preds = %65
  store i8 0, i8* null, align 1
  br label %70

; <label>:70:                                     ; preds = %69, %65
  %71 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %72 = icmp ne i64 0, 0
  %73 = icmp ne i8* null, null
  br i1 false, label %74, label %75

; <label>:74:                                     ; preds = %70
  store i8 0, i8* null, align 1
  br label %75

; <label>:75:                                     ; preds = %74, %70
  %76 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @23, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %77 = load i8*, i8** %26, align 8
  %78 = icmp ne i64 10000581, 0
  %79 = icmp ne i8* %77, null
  %.14 = select i1 true, i32 1, i32 0
  %80 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader, label %._crit_edge

.lr.ph6.preheader:                                ; preds = %75
  br label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph6.preheader
  call void @__loop_iteration_test___4()
  %81 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %82 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @24, i32 0, i32 0), i8** %82, align 8
  call void @unroll_loop(i32 45)
  %83 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %84 = load i8*, i8** %83, align 8
  %85 = icmp ne i64 10000592, 0
  %86 = icmp ne i8* %84, null
  %.1 = select i1 true, i32 2, i32 1
  %87 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.13, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph6.19, %.lr.ph6.18, %.lr.ph6.17, %.lr.ph6.1626, %.lr.ph6.15, %.lr.ph6.14, %.lr.ph6.1323, %.lr.ph6.12, %.lr.ph6.11, %.lr.ph6.10, %.lr.ph6.9, %.lr.ph6.8, %.lr.ph6.721, %.lr.ph6.618, %.lr.ph6.515, %.lr.ph6.412, %.lr.ph6.39, %.lr.ph6.26, %.lr.ph6.13, %.lr.ph6
  %.1.lcssa.ph = phi i32 [ 2, %.lr.ph6 ], [ 3, %.lr.ph6.13 ], [ 4, %.lr.ph6.26 ], [ 4, %.lr.ph6.39 ], [ %.1.411, %.lr.ph6.412 ], [ %.1.514, %.lr.ph6.515 ], [ %.1.617, %.lr.ph6.618 ], [ %.1.720, %.lr.ph6.721 ], [ %.1.8, %.lr.ph6.8 ], [ %.1.9, %.lr.ph6.9 ], [ %.1.10, %.lr.ph6.10 ], [ %.1.11, %.lr.ph6.11 ], [ %.1.1222, %.lr.ph6.12 ], [ %.1.13, %.lr.ph6.1323 ], [ %.1.14, %.lr.ph6.14 ], [ %.1.1525, %.lr.ph6.15 ], [ %.1.16, %.lr.ph6.1626 ], [ %.1.17, %.lr.ph6.17 ], [ %.1.18, %.lr.ph6.18 ], [ %.1.19, %.lr.ph6.19 ]
  call void @__loop_termination_test___4()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %75
  %.1.lcssa = phi i32 [ 1, %75 ], [ 4, %._crit_edge.loopexit ]
  %88 = load i8*, i8** %27, align 16
  %89 = icmp ne i64 10000581, 0
  %90 = icmp ne i8* %88, null
  br i1 true, label %91, label %52

; <label>:91:                                     ; preds = %._crit_edge.770, %._crit_edge.660, %._crit_edge.550, %._crit_edge.440, %._crit_edge.330, %._crit_edge.220, %._crit_edge.110, %._crit_edge
  %.1.lcssa.lcssa = phi i32 [ 4, %._crit_edge ], [ %.1.lcssa.19, %._crit_edge.110 ], [ %.1.lcssa.219, %._crit_edge.220 ], [ %.1.lcssa.329, %._crit_edge.330 ], [ %.1.lcssa.439, %._crit_edge.440 ], [ %.1.lcssa.549, %._crit_edge.550 ], [ %.1.lcssa.659, %._crit_edge.660 ], [ %.1.lcssa.769, %._crit_edge.770 ]
  %.lcssa = phi i32 [ 1, %._crit_edge ], [ 2, %._crit_edge.110 ], [ 3, %._crit_edge.220 ], [ 4, %._crit_edge.330 ], [ 5, %._crit_edge.440 ], [ 6, %._crit_edge.550 ], [ 7, %._crit_edge.660 ], [ 8, %._crit_edge.770 ]
  call void @__loop_termination_test___3()
  %92 = load i8*, i8** %28, align 16
  %93 = call i32 @strcasecmp(i8* %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %94 = icmp ne i32 0, 0
  br i1 false, label %117, label %95

; <label>:95:                                     ; preds = %91
  %96 = icmp slt i32 4, 2
  %97 = icmp sgt i32 4, 4
  %or.cond = or i1 false, false
  br i1 false, label %98, label %99

; <label>:98:                                     ; preds = %95
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:99:                                     ; preds = %95
  %100 = icmp sgt i32 4, 2
  br i1 true, label %101, label %113

; <label>:101:                                    ; preds = %99
  %102 = load i8*, i8** %34, align 8
  %103 = call i32 @strcasecmp(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %104 = icmp ne i32 0, 0
  br i1 false, label %111, label %105

; <label>:105:                                    ; preds = %101
  %106 = icmp sge i32 4, 3
  br i1 true, label %107, label %110

; <label>:107:                                    ; preds = %105
  %108 = load i8*, i8** %40, align 8
  %109 = call i32 @atoi(i8* %108) #8
  br label %113

; <label>:110:                                    ; preds = %105
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:111:                                    ; preds = %101
  %112 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 1, i8* %112)
  br label %.outer.backedge

; <label>:113:                                    ; preds = %107, %99
  %.08 = phi i32 [ 53, %107 ], [ 53, %99 ]
  %114 = load i8*, i8** %35, align 8
  %115 = call i32 @fwd_add_clone(i8* %114, i32 53)
  %116 = icmp eq i32 0, -1
  br i1 false, label %.loopexit1.loopexit, label %.outer.backedge

; <label>:117:                                    ; preds = %91
  %118 = load i8*, i8** %29, align 16
  %119 = call i32 @strcasecmp(i8* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %132, label %121

; <label>:121:                                    ; preds = %117
  %122 = icmp ne i32 4, 2
  br i1 %122, label %123, label %124

; <label>:123:                                    ; preds = %121
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:124:                                    ; preds = %121
  %125 = load i8*, i8** %32, align 8
  %126 = call i32 @conv_trick_conf(i8* %125)
  %127 = icmp ne i32 %126, 0
  %128 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %129 = load i8*, i8** %33, align 8
  br i1 %127, label %130, label %131

; <label>:130:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:131:                                    ; preds = %124
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %128, i8* %129)
  br label %.outer.backedge

; <label>:132:                                    ; preds = %117
  %133 = load i8*, i8** %30, align 16
  %134 = call i32 @strcasecmp(i8* %133, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %140, label %136

; <label>:136:                                    ; preds = %132
  %137 = icmp ne i32 4, 2
  br i1 %137, label %138, label %139

; <label>:138:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:139:                                    ; preds = %136
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge

; <label>:140:                                    ; preds = %132
  %141 = load i8*, i8** %31, align 16
  %142 = call i32 @strcasecmp(i8* %141, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %150, label %144

; <label>:144:                                    ; preds = %140
  %145 = icmp ne i32 4, 2
  br i1 %145, label %146, label %147

; <label>:146:                                    ; preds = %144
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:147:                                    ; preds = %144
  %148 = load i8*, i8** %39, align 8
  %149 = call i32 @atoi(i8* %148) #8
  store i32 %149, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge

; <label>:150:                                    ; preds = %140
  %151 = load i8*, i8** %36, align 16
  %152 = call i32 @strcasecmp(i8* %151, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %160, label %154

; <label>:154:                                    ; preds = %150
  %155 = icmp ne i32 4, 2
  br i1 %155, label %156, label %157

; <label>:156:                                    ; preds = %154
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:157:                                    ; preds = %154
  %158 = load i8*, i8** %42, align 8
  %159 = call noalias i8* @strdup(i8* %158) #9, !track !108
  store i8* %159, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge

; <label>:160:                                    ; preds = %150
  %161 = load i8*, i8** %38, align 16
  %162 = call i32 @strcasecmp(i8* %161, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %209, label %164

; <label>:164:                                    ; preds = %160
  %165 = icmp slt i32 4, 2
  br i1 %165, label %166, label %167

; <label>:166:                                    ; preds = %164
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 1)
  br label %167

; <label>:167:                                    ; preds = %166, %164
  %.7 = phi i32 [ 1, %166 ], [ 0, %164 ]
  br label %168

; <label>:168:                                    ; preds = %168, %167
  %lsr.iv = phi i64 [ %lsr.iv.next, %168 ], [ -1, %167 ]
  %169 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 46)
  %170 = shl i64 %lsr.iv, 3
  %uglygep = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %170
  %uglygep3 = bitcast i8* %uglygep to i8**
  %scevgep = getelementptr i8*, i8** %uglygep3, i64 111
  %171 = load i8*, i8** %scevgep, align 8
  %172 = icmp ne i8* %171, null
  %173 = icmp ult i64 %169, 30
  %spec.select = select i1 %172, i1 %173, i1 false
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %spec.select, label %168, label %174

; <label>:174:                                    ; preds = %168
  %.01.lcssa.wide = phi i64 [ %lsr.iv.next, %168 ]
  %175 = trunc i64 %.01.lcssa.wide to i32
  %176 = add nsw i32 %175, 4
  %177 = sub nsw i32 %176, 1
  %178 = icmp sgt i32 %177, 30
  br i1 %178, label %179, label %181

; <label>:179:                                    ; preds = %174
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 1, i32 30)
  %180 = add nsw i32 %.7, 1
  br label %.outer.backedge

; <label>:181:                                    ; preds = %174
  %182 = sub nsw i32 4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 1, i32 %182)
  %183 = add nsw i32 4, -1
  %184 = add nsw i32 %175, 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %185
  store i8* null, i8** %186, align 8
  %187 = icmp ne i32 %183, 0
  br i1 %187, label %.lr.ph16, label %.loopexit

.lr.ph16:                                         ; preds = %181
  %188 = add i32 4, -1
  %189 = sext i32 %188 to i64
  %190 = sext i32 %175 to i64
  %scevgep4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %189
  %191 = shl i64 %189, 1
  %192 = shl i64 %190, 1
  %193 = add i64 %191, %192
  %scevgep9 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %193
  %194 = sub i32 1, 4
  %195 = zext i32 %194 to i64
  br label %196

; <label>:196:                                    ; preds = %201, %.lr.ph16
  %lsr.iv5 = phi i64 [ 0, %.lr.ph16 ], [ %lsr.iv.next6, %201 ]
  call void @unroll_loop(i32 47)
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %197 = load i8*, i8** %scevgep7, align 8
  %198 = call i32 @strcmp(i8* %197, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %201, label %200

; <label>:200:                                    ; preds = %196
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit

; <label>:201:                                    ; preds = %196
  %scevgep8 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %202 = load i8*, i8** %scevgep8, align 8
  %203 = call noalias i8* @strdup(i8* %202) #9, !track !109
  %204 = shl i64 %lsr.iv5, 1
  %scevgep10 = getelementptr i32, i32* %scevgep9, i64 %204
  %scevgep1011 = bitcast i32* %scevgep10 to i8**
  store i8* %203, i8** %scevgep1011, align 8
  %lsr.iv.next6 = add nsw i64 %lsr.iv5, -1
  %tmp = trunc i64 %lsr.iv.next6 to i32
  %205 = icmp ne i32 %194, %tmp
  br i1 %205, label %196, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %201
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %200, %181
  %206 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %207 = icmp ne i8* %206, null
  br i1 %207, label %208, label %.outer.backedge

; <label>:208:                                    ; preds = %.loopexit
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge

; <label>:209:                                    ; preds = %160
  %210 = load i8*, i8** %41, align 16
  %211 = call i32 @strcasecmp(i8* %210, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %219, label %213

; <label>:213:                                    ; preds = %209
  %214 = icmp ne i32 4, 2
  br i1 %214, label %215, label %216

; <label>:215:                                    ; preds = %213
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:216:                                    ; preds = %213
  %217 = load i8*, i8** %45, align 8
  %218 = call i32 @atoi(i8* %217) #8
  store i32 %218, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge

; <label>:219:                                    ; preds = %209
  %220 = load i8*, i8** %43, align 16
  %221 = call i32 @strcasecmp(i8* %220, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %240, label %223

; <label>:223:                                    ; preds = %219
  %224 = icmp ne i32 4, 4
  br i1 %224, label %225, label %226

; <label>:225:                                    ; preds = %223
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 1)
  br label %.outer.backedge

; <label>:226:                                    ; preds = %223
  %227 = load i8*, i8** %46, align 8
  %228 = load i8*, i8** %47, align 16
  %229 = load i8*, i8** %48, align 8
  %230 = call i32 @atoi(i8* %229) #8
  %231 = call i32 @conv_scoped_conf(i8* %227, i8* %228, i32 %230)
  %232 = icmp ne i32 %231, 0
  %233 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %234 = load i8*, i8** %49, align 8
  %235 = load i8*, i8** %50, align 16
  %236 = load i8*, i8** %51, align 8
  br i1 %232, label %237, label %238

; <label>:237:                                    ; preds = %226
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i8* %236)
  br label %.outer.backedge

; <label>:238:                                    ; preds = %226
  %239 = call i32 @atoi(i8* %236) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %233, i8* %234, i8* %235, i32 %239)
  br label %.outer.backedge

; <label>:240:                                    ; preds = %219
  %241 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 1, i8* %241)
  br label %.outer.backedge

.outer.backedge:                                  ; preds = %240, %238, %237, %225, %216, %215, %208, %.loopexit, %179, %157, %156, %147, %146, %139, %138, %131, %130, %123, %113, %111, %110, %98
  %.03.ph.be = phi i32 [ 1, %110 ], [ 1, %111 ], [ 1, %98 ], [ 0, %113 ], [ 1, %123 ], [ 1, %130 ], [ 0, %131 ], [ 1, %138 ], [ 0, %139 ], [ 1, %146 ], [ 0, %147 ], [ 1, %156 ], [ 0, %157 ], [ %180, %179 ], [ %.7, %208 ], [ %.7, %.loopexit ], [ 1, %215 ], [ 0, %216 ], [ 1, %240 ], [ 1, %225 ], [ 1, %237 ], [ 0, %238 ]
  call void @__loop_iteration_test___2()
  %242 = bitcast [9 x i8]* @27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %242, i64 9, i1 false)
  %243 = icmp ne i64 244262, 0
  %244 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.1, label %.outer._crit_edge.loopexit1

.outer._crit_edge.loopexit.loopexit:              ; preds = %1924, %1888, %1852, %1816, %1780, %1744, %1708, %52
  call void @__loop_termination_test___3()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit1:             ; preds = %2367, %2331, %2295, %2259, %2223, %2187, %2151, %286
  call void @__loop_termination_test___6()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit2:             ; preds = %2808, %2772, %2736, %2700, %2664, %2628, %2592, %492
  call void @__loop_termination_test___8()
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit3:             ; preds = %695
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit4:             ; preds = %898
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit5:             ; preds = %1101
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit6:             ; preds = %1304
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit.loopexit7:             ; preds = %1507
  br label %.outer._crit_edge.loopexit

.outer._crit_edge.loopexit:                       ; preds = %.outer._crit_edge.loopexit.loopexit7, %.outer._crit_edge.loopexit.loopexit6, %.outer._crit_edge.loopexit.loopexit5, %.outer._crit_edge.loopexit.loopexit4, %.outer._crit_edge.loopexit.loopexit3, %.outer._crit_edge.loopexit.loopexit2, %.outer._crit_edge.loopexit.loopexit1, %.outer._crit_edge.loopexit.loopexit
  %.03.lcssa.ph = phi i32 [ 0, %.outer._crit_edge.loopexit.loopexit ], [ 0, %.outer._crit_edge.loopexit.loopexit1 ], [ 0, %.outer._crit_edge.loopexit.loopexit2 ], [ 0, %.outer._crit_edge.loopexit.loopexit3 ], [ %.03.ph.be.3, %.outer._crit_edge.loopexit.loopexit4 ], [ %.03.ph.be.4, %.outer._crit_edge.loopexit.loopexit5 ], [ %.03.ph.be.5, %.outer._crit_edge.loopexit.loopexit6 ], [ %.03.ph.be.6, %.outer._crit_edge.loopexit.loopexit7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge.loopexit1:                      ; preds = %.outer.backedge.7, %.outer.backedge.6, %.outer.backedge.5, %.outer.backedge.4, %.outer.backedge.3, %.outer.backedge.2, %.outer.backedge.1, %.outer.backedge
  %.03.lcssa.ph2 = phi i32 [ 0, %.outer.backedge ], [ 0, %.outer.backedge.1 ], [ 0, %.outer.backedge.2 ], [ %.03.ph.be.3, %.outer.backedge.3 ], [ %.03.ph.be.4, %.outer.backedge.4 ], [ %.03.ph.be.5, %.outer.backedge.5 ], [ %.03.ph.be.6, %.outer.backedge.6 ], [ %.03.ph.be.7, %.outer.backedge.7 ]
  call void @__loop_termination_test___2()
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer._crit_edge.loopexit1, %.outer._crit_edge.loopexit, %15
  %.03.lcssa = phi i32 [ 0, %15 ], [ %.03.lcssa.ph, %.outer._crit_edge.loopexit ], [ 0, %.outer._crit_edge.loopexit1 ]
  %245 = icmp ne i32 0, 0
  br i1 false, label %246, label %248

; <label>:246:                                    ; preds = %.outer._crit_edge
  %247 = getelementptr [41 x i8], [41 x i8]* @.str.31.249, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %247, i32 0)
  br label %.loopexit1

; <label>:248:                                    ; preds = %.outer._crit_edge
  %249 = getelementptr [27 x i8], [27 x i8]* @.str.32.250, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 6, i8* %249)
  br label %.loopexit1

.loopexit1.loopexit:                              ; preds = %1530, %1327, %1124, %921, %718, %515, %309, %113
  %.0.ph = phi i32 [ -1, %113 ], [ -1, %309 ], [ -1, %515 ], [ -1, %718 ], [ -1, %921 ], [ -1, %1124 ], [ -1, %1327 ], [ -1, %1530 ]
  call void @__loop_termination_test___2()
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %248, %246, %13
  %.0 = phi i32 [ -1, %246 ], [ 0, %248 ], [ -1, %13 ], [ %.0.ph, %.loopexit1.loopexit ]
  ret i32 0

.lr.ph.1:                                         ; preds = %.outer.backedge
  call void @unroll_loop(i32 48)
  br label %250

; <label>:250:                                    ; preds = %.lr.ph.1
  call void @unroll_loop(i32 44)
  %251 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %252 = icmp ne i64 244269, 0
  %253 = icmp ne i8* %251, null
  br i1 true, label %254, label %255

; <label>:254:                                    ; preds = %250
  store i8 0, i8* %251, align 1
  br label %255

; <label>:255:                                    ; preds = %254, %250
  %256 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %257 = icmp ne i64 0, 0
  %258 = icmp ne i8* null, null
  br i1 false, label %259, label %260

; <label>:259:                                    ; preds = %255
  store i8 0, i8* null, align 1
  br label %260

; <label>:260:                                    ; preds = %259, %255
  %261 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %262 = icmp ne i64 0, 0
  %263 = icmp ne i8* null, null
  br i1 false, label %264, label %265

; <label>:264:                                    ; preds = %260
  store i8 0, i8* null, align 1
  br label %265

; <label>:265:                                    ; preds = %264, %260
  %266 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %267 = icmp ne i64 0, 0
  %268 = icmp ne i8* null, null
  br i1 false, label %269, label %270

; <label>:269:                                    ; preds = %265
  store i8 0, i8* null, align 1
  br label %270

; <label>:270:                                    ; preds = %269, %265
  %271 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @28, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %272 = load i8*, i8** %26, align 8
  %273 = icmp ne i64 10001062, 0
  %274 = icmp ne i8* %272, null
  %.14.1 = select i1 true, i32 1, i32 0
  %275 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader.1, label %._crit_edge.1

.lr.ph6.preheader.1:                              ; preds = %270
  br label %.lr.ph6.1

.lr.ph6.1:                                        ; preds = %.lr.ph6.preheader.1
  call void @__loop_iteration_test___7()
  %276 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %277 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @29, i32 0, i32 0), i8** %277, align 8
  call void @unroll_loop(i32 45)
  %278 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %279 = load i8*, i8** %278, align 8
  %280 = icmp ne i64 10001068, 0
  %281 = icmp ne i8* %279, null
  %.1.1 = select i1 true, i32 2, i32 1
  %282 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.1.13, label %._crit_edge.loopexit.1

._crit_edge.loopexit.1:                           ; preds = %.lr.ph6.1.19, %.lr.ph6.1.18, %.lr.ph6.1.17, %.lr.ph6.1.16, %.lr.ph6.1.15, %.lr.ph6.1.14, %.lr.ph6.1.1323, %.lr.ph6.1.12, %.lr.ph6.1.11, %.lr.ph6.1.10, %.lr.ph6.1.9, %.lr.ph6.1.8, %.lr.ph6.1.721, %.lr.ph6.1.618, %.lr.ph6.1.515, %.lr.ph6.1.412, %.lr.ph6.1.39, %.lr.ph6.1.26, %.lr.ph6.1.13, %.lr.ph6.1
  %.1.lcssa.ph.1 = phi i32 [ 2, %.lr.ph6.1 ], [ 2, %.lr.ph6.1.13 ], [ %.1.1.25, %.lr.ph6.1.26 ], [ %.1.1.38, %.lr.ph6.1.39 ], [ %.1.1.411, %.lr.ph6.1.412 ], [ %.1.1.514, %.lr.ph6.1.515 ], [ %.1.1.617, %.lr.ph6.1.618 ], [ %.1.1.720, %.lr.ph6.1.721 ], [ %.1.1.8, %.lr.ph6.1.8 ], [ %.1.1.9, %.lr.ph6.1.9 ], [ %.1.1.10, %.lr.ph6.1.10 ], [ %.1.1.11, %.lr.ph6.1.11 ], [ %.1.1.1222, %.lr.ph6.1.12 ], [ %.1.1.13, %.lr.ph6.1.1323 ], [ %.1.1.14, %.lr.ph6.1.14 ], [ %.1.1.15, %.lr.ph6.1.15 ], [ %.1.1.16, %.lr.ph6.1.16 ], [ %.1.1.17, %.lr.ph6.1.17 ], [ %.1.1.18, %.lr.ph6.1.18 ], [ %.1.1.19, %.lr.ph6.1.19 ]
  call void @__loop_termination_test___7()
  br label %._crit_edge.1

._crit_edge.1:                                    ; preds = %._crit_edge.loopexit.1, %270
  %.1.lcssa.1 = phi i32 [ 1, %270 ], [ 2, %._crit_edge.loopexit.1 ]
  %283 = load i8*, i8** %27, align 16
  %284 = icmp ne i64 10001062, 0
  %285 = icmp ne i8* %283, null
  br i1 true, label %289, label %286

; <label>:286:                                    ; preds = %._crit_edge.1
  call void @__loop_iteration_test___6()
  %287 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %288 = icmp ne i8* %287, null
  br i1 %288, label %2118, label %.outer._crit_edge.loopexit.loopexit1

; <label>:289:                                    ; preds = %._crit_edge.1.7, %._crit_edge.1.6, %._crit_edge.1.5, %._crit_edge.1.4, %._crit_edge.1.3, %._crit_edge.1.2, %._crit_edge.1.1, %._crit_edge.1
  %.1.lcssa.lcssa.1 = phi i32 [ 2, %._crit_edge.1 ], [ %.1.lcssa.1.1, %._crit_edge.1.1 ], [ %.1.lcssa.1.2, %._crit_edge.1.2 ], [ %.1.lcssa.1.3, %._crit_edge.1.3 ], [ %.1.lcssa.1.4, %._crit_edge.1.4 ], [ %.1.lcssa.1.5, %._crit_edge.1.5 ], [ %.1.lcssa.1.6, %._crit_edge.1.6 ], [ %.1.lcssa.1.7, %._crit_edge.1.7 ]
  %.lcssa.1 = phi i32 [ 2, %._crit_edge.1 ], [ 3, %._crit_edge.1.1 ], [ 4, %._crit_edge.1.2 ], [ 5, %._crit_edge.1.3 ], [ 6, %._crit_edge.1.4 ], [ 7, %._crit_edge.1.5 ], [ 8, %._crit_edge.1.6 ], [ 9, %._crit_edge.1.7 ]
  call void @__loop_termination_test___6()
  %290 = load i8*, i8** %28, align 16
  %291 = call i32 @strcasecmp(i8* %290, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %292 = icmp ne i32 10, 0
  br i1 true, label %318, label %293

; <label>:293:                                    ; preds = %289
  %294 = icmp slt i32 2, 2
  %295 = icmp sgt i32 2, 4
  %or.cond.1 = or i1 %294, %295
  br i1 %or.cond.1, label %316, label %296

; <label>:296:                                    ; preds = %293
  %297 = icmp sgt i32 2, 2
  br i1 %297, label %298, label %309

; <label>:298:                                    ; preds = %296
  %299 = load i8*, i8** %34, align 8
  %300 = call i32 @strcasecmp(i8* %299, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %301 = icmp ne i32 %300, 0
  br i1 %301, label %313, label %302

; <label>:302:                                    ; preds = %298
  %303 = icmp sge i32 2, 3
  br i1 %303, label %306, label %304

; <label>:304:                                    ; preds = %302
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 2)
  %305 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:306:                                    ; preds = %302
  %307 = load i8*, i8** %40, align 8
  %308 = call i32 @atoi(i8* %307) #8
  br label %309

; <label>:309:                                    ; preds = %306, %296
  %.08.1 = phi i32 [ %308, %306 ], [ 53, %296 ]
  %310 = load i8*, i8** %35, align 8
  %311 = call i32 @fwd_add(i8* %310, i32 %.08.1)
  %312 = icmp eq i32 %311, -1
  br i1 %312, label %.loopexit1.loopexit, label %.outer.backedge.1

; <label>:313:                                    ; preds = %298
  %314 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 2, i8* %314)
  %315 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:316:                                    ; preds = %293
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 2)
  %317 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:318:                                    ; preds = %289
  %319 = load i8*, i8** %29, align 16
  %320 = call i32 @strcasecmp(i8* %319, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %321 = icmp ne i32 -3, 0
  br i1 true, label %335, label %322

; <label>:322:                                    ; preds = %318
  %323 = icmp ne i32 2, 2
  br i1 %323, label %333, label %324

; <label>:324:                                    ; preds = %322
  %325 = load i8*, i8** %32, align 8
  %326 = call i32 @conv_trick_conf(i8* %325)
  %327 = icmp ne i32 %326, 0
  %328 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %329 = load i8*, i8** %33, align 8
  br i1 %327, label %331, label %330

; <label>:330:                                    ; preds = %324
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %328, i8* %329)
  br label %.outer.backedge.1

; <label>:331:                                    ; preds = %324
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %328, i8* %329)
  %332 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:333:                                    ; preds = %322
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 2)
  %334 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:335:                                    ; preds = %318
  %336 = load i8*, i8** %30, align 16
  %337 = call i32 @strcasecmp(i8* %336, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %338 = icmp ne i32 15, 0
  br i1 true, label %344, label %339

; <label>:339:                                    ; preds = %335
  %340 = icmp ne i32 2, 2
  br i1 %340, label %342, label %341

; <label>:341:                                    ; preds = %339
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.1

; <label>:342:                                    ; preds = %339
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 2)
  %343 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:344:                                    ; preds = %335
  %345 = load i8*, i8** %31, align 16
  %346 = call i32 @strcasecmp(i8* %345, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %347 = icmp ne i32 -2, 0
  br i1 true, label %355, label %348

; <label>:348:                                    ; preds = %344
  %349 = icmp ne i32 2, 2
  br i1 %349, label %353, label %350

; <label>:350:                                    ; preds = %348
  %351 = load i8*, i8** %39, align 8
  %352 = call i32 @atoi(i8* %351) #8
  store i32 %352, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.1

; <label>:353:                                    ; preds = %348
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 2)
  %354 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:355:                                    ; preds = %344
  %356 = load i8*, i8** %36, align 16
  %357 = call i32 @strcasecmp(i8* %356, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %358 = icmp ne i32 6, 0
  br i1 true, label %366, label %359

; <label>:359:                                    ; preds = %355
  %360 = icmp ne i32 2, 2
  br i1 %360, label %364, label %361

; <label>:361:                                    ; preds = %359
  %362 = load i8*, i8** %42, align 8
  %363 = call noalias i8* @strdup(i8* %362) #9, !track !108
  store i8* %363, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.1

; <label>:364:                                    ; preds = %359
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 2)
  %365 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:366:                                    ; preds = %355
  %367 = load i8*, i8** %38, align 16
  %368 = call i32 @strcasecmp(i8* %367, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %369 = icmp ne i32 7, 0
  br i1 true, label %416, label %370

; <label>:370:                                    ; preds = %366
  %371 = icmp slt i32 2, 2
  br i1 %371, label %372, label %374

; <label>:372:                                    ; preds = %370
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 2)
  %373 = add nsw i32 0, 1
  br label %374

; <label>:374:                                    ; preds = %372, %370
  %.7.1 = phi i32 [ %373, %372 ], [ 0, %370 ]
  br label %375

; <label>:375:                                    ; preds = %375, %374
  %lsr.iv.1 = phi i64 [ %lsr.iv.next.1, %375 ], [ -1, %374 ]
  %376 = add i64 %lsr.iv.1, 1
  call void @unroll_loop(i32 46)
  %377 = shl i64 %lsr.iv.1, 3
  %uglygep.1 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %377
  %uglygep3.1 = bitcast i8* %uglygep.1 to i8**
  %scevgep.1 = getelementptr i8*, i8** %uglygep3.1, i64 111
  %378 = load i8*, i8** %scevgep.1, align 8
  %379 = icmp ne i8* %378, null
  %380 = icmp ult i64 %376, 30
  %spec.select.1 = select i1 %379, i1 %380, i1 false
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %spec.select.1, label %375, label %381

; <label>:381:                                    ; preds = %375
  %.01.lcssa.wide.1 = phi i64 [ %lsr.iv.next.1, %375 ]
  %382 = trunc i64 %.01.lcssa.wide.1 to i32
  %383 = add nsw i32 %382, 2
  %384 = sub nsw i32 %383, 1
  %385 = icmp sgt i32 %384, 30
  br i1 %385, label %414, label %386

; <label>:386:                                    ; preds = %381
  %387 = sub nsw i32 2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 2, i32 %387)
  %388 = add nsw i32 2, -1
  %389 = add nsw i32 %382, 2
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %390
  store i8* null, i8** %391, align 8
  %392 = icmp ne i32 %388, 0
  br i1 %392, label %.lr.ph16.1, label %.loopexit.1

.lr.ph16.1:                                       ; preds = %386
  %393 = add i32 2, -1
  %394 = sext i32 %393 to i64
  %395 = sext i32 %382 to i64
  %scevgep4.1 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %394
  %396 = shl i64 %394, 1
  %397 = shl i64 %395, 1
  %398 = add i64 %396, %397
  %scevgep9.1 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %398
  %399 = sub i32 1, 2
  %400 = zext i32 %399 to i64
  br label %401

; <label>:401:                                    ; preds = %406, %.lr.ph16.1
  %lsr.iv5.1 = phi i64 [ 0, %.lr.ph16.1 ], [ %lsr.iv.next6.1, %406 ]
  call void @unroll_loop(i32 47)
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %402 = load i8*, i8** %scevgep7.1, align 8
  %403 = call i32 @strcmp(i8* %402, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %404 = icmp ne i32 %403, 0
  br i1 %404, label %406, label %405

; <label>:405:                                    ; preds = %401
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.1

; <label>:406:                                    ; preds = %401
  %scevgep8.1 = getelementptr i8*, i8** %scevgep4.1, i64 %lsr.iv5.1
  %407 = load i8*, i8** %scevgep8.1, align 8
  %408 = call noalias i8* @strdup(i8* %407) #9, !track !109
  %409 = shl i64 %lsr.iv5.1, 1
  %scevgep10.1 = getelementptr i32, i32* %scevgep9.1, i64 %409
  %scevgep1011.1 = bitcast i32* %scevgep10.1 to i8**
  store i8* %408, i8** %scevgep1011.1, align 8
  %lsr.iv.next6.1 = add nsw i64 %lsr.iv5.1, -1
  %tmp.1 = trunc i64 %lsr.iv.next6.1 to i32
  %410 = icmp ne i32 %399, %tmp.1
  br i1 %410, label %401, label %.loopexit.loopexit.1

.loopexit.loopexit.1:                             ; preds = %406
  br label %.loopexit.1

.loopexit.1:                                      ; preds = %.loopexit.loopexit.1, %405, %386
  %411 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %412 = icmp ne i8* %411, null
  br i1 %412, label %413, label %.outer.backedge.1

; <label>:413:                                    ; preds = %.loopexit.1
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.1

; <label>:414:                                    ; preds = %381
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 2, i32 30)
  %415 = add nsw i32 %.7.1, 1
  br label %.outer.backedge.1

; <label>:416:                                    ; preds = %366
  %417 = load i8*, i8** %41, align 16
  %418 = call i32 @strcasecmp(i8* %417, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %419 = icmp ne i32 0, 0
  br i1 false, label %427, label %420

; <label>:420:                                    ; preds = %416
  %421 = icmp ne i32 2, 2
  br i1 false, label %425, label %422

; <label>:422:                                    ; preds = %420
  %423 = load i8*, i8** %45, align 8
  %424 = call i32 @atoi(i8* %423) #8
  store i32 53, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.1

; <label>:425:                                    ; preds = %420
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 2)
  %426 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:427:                                    ; preds = %416
  %428 = load i8*, i8** %43, align 16
  %429 = call i32 @strcasecmp(i8* %428, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %430 = icmp ne i32 %429, 0
  br i1 %430, label %450, label %431

; <label>:431:                                    ; preds = %427
  %432 = icmp ne i32 2, 4
  br i1 %432, label %448, label %433

; <label>:433:                                    ; preds = %431
  %434 = load i8*, i8** %46, align 8
  %435 = load i8*, i8** %47, align 16
  %436 = load i8*, i8** %48, align 8
  %437 = call i32 @atoi(i8* %436) #8
  %438 = call i32 @conv_scoped_conf(i8* %434, i8* %435, i32 %437)
  %439 = icmp ne i32 %438, 0
  %440 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %441 = load i8*, i8** %49, align 8
  %442 = load i8*, i8** %50, align 16
  %443 = load i8*, i8** %51, align 8
  br i1 %439, label %446, label %444

; <label>:444:                                    ; preds = %433
  %445 = call i32 @atoi(i8* %443) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %440, i8* %441, i8* %442, i32 %445)
  br label %.outer.backedge.1

; <label>:446:                                    ; preds = %433
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %440, i8* %441, i8* %442, i8* %443)
  %447 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:448:                                    ; preds = %431
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 2)
  %449 = add nsw i32 0, 1
  br label %.outer.backedge.1

; <label>:450:                                    ; preds = %427
  %451 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 2, i8* %451)
  %452 = add nsw i32 0, 1
  br label %.outer.backedge.1

.outer.backedge.1:                                ; preds = %450, %448, %446, %444, %425, %422, %414, %413, %.loopexit.1, %364, %361, %353, %350, %342, %341, %333, %331, %330, %316, %313, %309, %304
  %.03.ph.be.1 = phi i32 [ %305, %304 ], [ %315, %313 ], [ %317, %316 ], [ 0, %309 ], [ %334, %333 ], [ %332, %331 ], [ 0, %330 ], [ %343, %342 ], [ 0, %341 ], [ %354, %353 ], [ 0, %350 ], [ %365, %364 ], [ 0, %361 ], [ %415, %414 ], [ %.7.1, %413 ], [ %.7.1, %.loopexit.1 ], [ %426, %425 ], [ 0, %422 ], [ %452, %450 ], [ %449, %448 ], [ %447, %446 ], [ 0, %444 ]
  call void @__loop_iteration_test___2()
  %453 = bitcast [22 x i8]* @30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %453, i64 22, i1 false)
  %454 = icmp ne i64 244262, 0
  %455 = icmp ne i8* %16, null
  br i1 true, label %.lr.ph.2, label %.outer._crit_edge.loopexit1

.lr.ph.2:                                         ; preds = %.outer.backedge.1
  call void @unroll_loop(i32 48)
  br label %456

; <label>:456:                                    ; preds = %.lr.ph.2
  call void @unroll_loop(i32 44)
  %457 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %458 = icmp ne i64 244282, 0
  %459 = icmp ne i8* %457, null
  br i1 true, label %460, label %461

; <label>:460:                                    ; preds = %456
  store i8 0, i8* %457, align 1
  br label %461

; <label>:461:                                    ; preds = %460, %456
  %462 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %463 = icmp ne i64 0, 0
  %464 = icmp ne i8* null, null
  br i1 false, label %465, label %466

; <label>:465:                                    ; preds = %461
  store i8 0, i8* null, align 1
  br label %466

; <label>:466:                                    ; preds = %465, %461
  %467 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %468 = icmp ne i64 0, 0
  %469 = icmp ne i8* null, null
  br i1 false, label %470, label %471

; <label>:470:                                    ; preds = %466
  store i8 0, i8* null, align 1
  br label %471

; <label>:471:                                    ; preds = %470, %466
  %472 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %473 = icmp ne i64 0, 0
  %474 = icmp ne i8* null, null
  br i1 false, label %475, label %476

; <label>:475:                                    ; preds = %471
  store i8 0, i8* null, align 1
  br label %476

; <label>:476:                                    ; preds = %475, %471
  %477 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @31, i32 0, i32 0), i8** %25, align 16
  call void @unroll_loop(i32 45)
  %478 = load i8*, i8** %26, align 8
  %479 = icmp ne i64 10001072, 0
  %480 = icmp ne i8* %478, null
  %.14.2 = select i1 true, i32 1, i32 0
  %481 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.preheader.2, label %._crit_edge.2

.lr.ph6.preheader.2:                              ; preds = %476
  br label %.lr.ph6.2

.lr.ph6.2:                                        ; preds = %.lr.ph6.preheader.2
  call void @__loop_iteration_test___9()
  %482 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %483 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @32, i32 0, i32 0), i8** %483, align 8
  call void @unroll_loop(i32 45)
  %484 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 1
  %485 = load i8*, i8** %484, align 8
  %486 = icmp ne i64 10001081, 0
  %487 = icmp ne i8* %485, null
  %.1.2 = select i1 true, i32 2, i32 1
  %488 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.2.13, label %._crit_edge.loopexit.2

._crit_edge.loopexit.2:                           ; preds = %.lr.ph6.2.19, %.lr.ph6.2.18, %.lr.ph6.2.17, %.lr.ph6.2.16, %.lr.ph6.2.15, %.lr.ph6.2.14, %.lr.ph6.2.1323, %.lr.ph6.2.12, %.lr.ph6.2.11, %.lr.ph6.2.10, %.lr.ph6.2.9, %.lr.ph6.2.8, %.lr.ph6.2.721, %.lr.ph6.2.618, %.lr.ph6.2.515, %.lr.ph6.2.412, %.lr.ph6.2.39, %.lr.ph6.2.26, %.lr.ph6.2.13, %.lr.ph6.2
  %.1.lcssa.ph.2 = phi i32 [ 2, %.lr.ph6.2 ], [ 2, %.lr.ph6.2.13 ], [ %.1.2.25, %.lr.ph6.2.26 ], [ %.1.2.38, %.lr.ph6.2.39 ], [ %.1.2.411, %.lr.ph6.2.412 ], [ %.1.2.514, %.lr.ph6.2.515 ], [ %.1.2.617, %.lr.ph6.2.618 ], [ %.1.2.720, %.lr.ph6.2.721 ], [ %.1.2.8, %.lr.ph6.2.8 ], [ %.1.2.9, %.lr.ph6.2.9 ], [ %.1.2.10, %.lr.ph6.2.10 ], [ %.1.2.11, %.lr.ph6.2.11 ], [ %.1.2.1222, %.lr.ph6.2.12 ], [ %.1.2.13, %.lr.ph6.2.1323 ], [ %.1.2.14, %.lr.ph6.2.14 ], [ %.1.2.15, %.lr.ph6.2.15 ], [ %.1.2.16, %.lr.ph6.2.16 ], [ %.1.2.17, %.lr.ph6.2.17 ], [ %.1.2.18, %.lr.ph6.2.18 ], [ %.1.2.19, %.lr.ph6.2.19 ]
  call void @__loop_termination_test___9()
  br label %._crit_edge.2

._crit_edge.2:                                    ; preds = %._crit_edge.loopexit.2, %476
  %.1.lcssa.2 = phi i32 [ 1, %476 ], [ 2, %._crit_edge.loopexit.2 ]
  %489 = load i8*, i8** %27, align 16
  %490 = icmp ne i64 10001072, 0
  %491 = icmp ne i8* %489, null
  br i1 true, label %495, label %492

; <label>:492:                                    ; preds = %._crit_edge.2
  call void @__loop_iteration_test___8()
  %493 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %494 = icmp ne i8* %493, null
  br i1 %494, label %2559, label %.outer._crit_edge.loopexit.loopexit2

; <label>:495:                                    ; preds = %._crit_edge.2.7, %._crit_edge.2.6, %._crit_edge.2.5, %._crit_edge.2.4, %._crit_edge.2.3, %._crit_edge.2.2, %._crit_edge.2.1, %._crit_edge.2
  %.1.lcssa.lcssa.2 = phi i32 [ 2, %._crit_edge.2 ], [ %.1.lcssa.2.1, %._crit_edge.2.1 ], [ %.1.lcssa.2.2, %._crit_edge.2.2 ], [ %.1.lcssa.2.3, %._crit_edge.2.3 ], [ %.1.lcssa.2.4, %._crit_edge.2.4 ], [ %.1.lcssa.2.5, %._crit_edge.2.5 ], [ %.1.lcssa.2.6, %._crit_edge.2.6 ], [ %.1.lcssa.2.7, %._crit_edge.2.7 ]
  %.lcssa.2 = phi i32 [ 3, %._crit_edge.2 ], [ 4, %._crit_edge.2.1 ], [ 5, %._crit_edge.2.2 ], [ 6, %._crit_edge.2.3 ], [ 7, %._crit_edge.2.4 ], [ 8, %._crit_edge.2.5 ], [ 9, %._crit_edge.2.6 ], [ 10, %._crit_edge.2.7 ]
  call void @__loop_termination_test___8()
  %496 = load i8*, i8** %28, align 16
  %497 = call i32 @strcasecmp(i8* %496, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %498 = icmp ne i32 10, 0
  br i1 true, label %524, label %499

; <label>:499:                                    ; preds = %495
  %500 = icmp slt i32 2, 2
  %501 = icmp sgt i32 2, 4
  %or.cond.2 = or i1 %500, %501
  br i1 %or.cond.2, label %522, label %502

; <label>:502:                                    ; preds = %499
  %503 = icmp sgt i32 2, 2
  br i1 %503, label %504, label %515

; <label>:504:                                    ; preds = %502
  %505 = load i8*, i8** %34, align 8
  %506 = call i32 @strcasecmp(i8* %505, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %507 = icmp ne i32 %506, 0
  br i1 %507, label %519, label %508

; <label>:508:                                    ; preds = %504
  %509 = icmp sge i32 2, 3
  br i1 %509, label %512, label %510

; <label>:510:                                    ; preds = %508
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 3)
  %511 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:512:                                    ; preds = %508
  %513 = load i8*, i8** %40, align 8
  %514 = call i32 @atoi(i8* %513) #8
  br label %515

; <label>:515:                                    ; preds = %512, %502
  %.08.2 = phi i32 [ %514, %512 ], [ 53, %502 ]
  %516 = load i8*, i8** %35, align 8
  %517 = call i32 @fwd_add(i8* %516, i32 %.08.2)
  %518 = icmp eq i32 %517, -1
  br i1 %518, label %.loopexit1.loopexit, label %.outer.backedge.2

; <label>:519:                                    ; preds = %504
  %520 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 3, i8* %520)
  %521 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:522:                                    ; preds = %499
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 3)
  %523 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:524:                                    ; preds = %495
  %525 = load i8*, i8** %29, align 16
  %526 = call i32 @strcasecmp(i8* %525, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %527 = icmp ne i32 -9, 0
  br i1 true, label %541, label %528

; <label>:528:                                    ; preds = %524
  %529 = icmp ne i32 2, 2
  br i1 %529, label %539, label %530

; <label>:530:                                    ; preds = %528
  %531 = load i8*, i8** %32, align 8
  %532 = call i32 @conv_trick_conf(i8* %531)
  %533 = icmp ne i32 %532, 0
  %534 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %535 = load i8*, i8** %33, align 8
  br i1 %533, label %537, label %536

; <label>:536:                                    ; preds = %530
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %534, i8* %535)
  br label %.outer.backedge.2

; <label>:537:                                    ; preds = %530
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %534, i8* %535)
  %538 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:539:                                    ; preds = %528
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 3)
  %540 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:541:                                    ; preds = %524
  %542 = load i8*, i8** %30, align 16
  %543 = call i32 @strcasecmp(i8* %542, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %544 = icmp ne i32 15, 0
  br i1 true, label %550, label %545

; <label>:545:                                    ; preds = %541
  %546 = icmp ne i32 2, 2
  br i1 %546, label %548, label %547

; <label>:547:                                    ; preds = %545
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.2

; <label>:548:                                    ; preds = %545
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 3)
  %549 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:550:                                    ; preds = %541
  %551 = load i8*, i8** %31, align 16
  %552 = call i32 @strcasecmp(i8* %551, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %553 = icmp ne i32 -2, 0
  br i1 true, label %561, label %554

; <label>:554:                                    ; preds = %550
  %555 = icmp ne i32 2, 2
  br i1 %555, label %559, label %556

; <label>:556:                                    ; preds = %554
  %557 = load i8*, i8** %39, align 8
  %558 = call i32 @atoi(i8* %557) #8
  store i32 %558, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.2

; <label>:559:                                    ; preds = %554
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 3)
  %560 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:561:                                    ; preds = %550
  %562 = load i8*, i8** %36, align 16
  %563 = call i32 @strcasecmp(i8* %562, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %564 = icmp ne i32 0, 0
  br i1 false, label %572, label %565

; <label>:565:                                    ; preds = %561
  %566 = icmp ne i32 2, 2
  br i1 false, label %570, label %567

; <label>:567:                                    ; preds = %565
  %568 = load i8*, i8** %42, align 8
  %569 = call noalias i8* @strdup(i8* %568) #9, !track !108
  store i8* %569, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.2

; <label>:570:                                    ; preds = %565
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 3)
  %571 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:572:                                    ; preds = %561
  %573 = load i8*, i8** %38, align 16
  %574 = call i32 @strcasecmp(i8* %573, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %575 = icmp ne i32 %574, 0
  br i1 %575, label %622, label %576

; <label>:576:                                    ; preds = %572
  %577 = icmp slt i32 2, 2
  br i1 %577, label %578, label %580

; <label>:578:                                    ; preds = %576
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 3)
  %579 = add nsw i32 0, 1
  br label %580

; <label>:580:                                    ; preds = %578, %576
  %.7.2 = phi i32 [ %579, %578 ], [ 0, %576 ]
  br label %581

; <label>:581:                                    ; preds = %581, %580
  %lsr.iv.2 = phi i64 [ %lsr.iv.next.2, %581 ], [ -1, %580 ]
  %582 = add i64 %lsr.iv.2, 1
  call void @unroll_loop(i32 46)
  %583 = shl i64 %lsr.iv.2, 3
  %uglygep.2 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %583
  %uglygep3.2 = bitcast i8* %uglygep.2 to i8**
  %scevgep.2 = getelementptr i8*, i8** %uglygep3.2, i64 111
  %584 = load i8*, i8** %scevgep.2, align 8
  %585 = icmp ne i8* %584, null
  %586 = icmp ult i64 %582, 30
  %spec.select.2 = select i1 %585, i1 %586, i1 false
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %spec.select.2, label %581, label %587

; <label>:587:                                    ; preds = %581
  %.01.lcssa.wide.2 = phi i64 [ %lsr.iv.next.2, %581 ]
  %588 = trunc i64 %.01.lcssa.wide.2 to i32
  %589 = add nsw i32 %588, 2
  %590 = sub nsw i32 %589, 1
  %591 = icmp sgt i32 %590, 30
  br i1 %591, label %620, label %592

; <label>:592:                                    ; preds = %587
  %593 = sub nsw i32 2, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 3, i32 %593)
  %594 = add nsw i32 2, -1
  %595 = add nsw i32 %588, 2
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %596
  store i8* null, i8** %597, align 8
  %598 = icmp ne i32 %594, 0
  br i1 %598, label %.lr.ph16.2, label %.loopexit.2

.lr.ph16.2:                                       ; preds = %592
  %599 = add i32 2, -1
  %600 = sext i32 %599 to i64
  %601 = sext i32 %588 to i64
  %scevgep4.2 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %600
  %602 = shl i64 %600, 1
  %603 = shl i64 %601, 1
  %604 = add i64 %602, %603
  %scevgep9.2 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %604
  %605 = sub i32 1, 2
  %606 = zext i32 %605 to i64
  br label %607

; <label>:607:                                    ; preds = %612, %.lr.ph16.2
  %lsr.iv5.2 = phi i64 [ 0, %.lr.ph16.2 ], [ %lsr.iv.next6.2, %612 ]
  call void @unroll_loop(i32 47)
  %scevgep7.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %608 = load i8*, i8** %scevgep7.2, align 8
  %609 = call i32 @strcmp(i8* %608, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %610 = icmp ne i32 %609, 0
  br i1 %610, label %612, label %611

; <label>:611:                                    ; preds = %607
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.2

; <label>:612:                                    ; preds = %607
  %scevgep8.2 = getelementptr i8*, i8** %scevgep4.2, i64 %lsr.iv5.2
  %613 = load i8*, i8** %scevgep8.2, align 8
  %614 = call noalias i8* @strdup(i8* %613) #9, !track !109
  %615 = shl i64 %lsr.iv5.2, 1
  %scevgep10.2 = getelementptr i32, i32* %scevgep9.2, i64 %615
  %scevgep1011.2 = bitcast i32* %scevgep10.2 to i8**
  store i8* %614, i8** %scevgep1011.2, align 8
  %lsr.iv.next6.2 = add nsw i64 %lsr.iv5.2, -1
  %tmp.2 = trunc i64 %lsr.iv.next6.2 to i32
  %616 = icmp ne i32 %605, %tmp.2
  br i1 %616, label %607, label %.loopexit.loopexit.2

.loopexit.loopexit.2:                             ; preds = %612
  br label %.loopexit.2

.loopexit.2:                                      ; preds = %.loopexit.loopexit.2, %611, %592
  %617 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %618 = icmp ne i8* %617, null
  br i1 %618, label %619, label %.outer.backedge.2

; <label>:619:                                    ; preds = %.loopexit.2
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.2

; <label>:620:                                    ; preds = %587
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 3, i32 30)
  %621 = add nsw i32 %.7.2, 1
  br label %.outer.backedge.2

; <label>:622:                                    ; preds = %572
  %623 = load i8*, i8** %41, align 16
  %624 = call i32 @strcasecmp(i8* %623, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %625 = icmp ne i32 %624, 0
  br i1 %625, label %633, label %626

; <label>:626:                                    ; preds = %622
  %627 = icmp ne i32 2, 2
  br i1 %627, label %631, label %628

; <label>:628:                                    ; preds = %626
  %629 = load i8*, i8** %45, align 8
  %630 = call i32 @atoi(i8* %629) #8
  store i32 %630, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.2

; <label>:631:                                    ; preds = %626
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 3)
  %632 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:633:                                    ; preds = %622
  %634 = load i8*, i8** %43, align 16
  %635 = call i32 @strcasecmp(i8* %634, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %636 = icmp ne i32 %635, 0
  br i1 %636, label %656, label %637

; <label>:637:                                    ; preds = %633
  %638 = icmp ne i32 2, 4
  br i1 %638, label %654, label %639

; <label>:639:                                    ; preds = %637
  %640 = load i8*, i8** %46, align 8
  %641 = load i8*, i8** %47, align 16
  %642 = load i8*, i8** %48, align 8
  %643 = call i32 @atoi(i8* %642) #8
  %644 = call i32 @conv_scoped_conf(i8* %640, i8* %641, i32 %643)
  %645 = icmp ne i32 %644, 0
  %646 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %647 = load i8*, i8** %49, align 8
  %648 = load i8*, i8** %50, align 16
  %649 = load i8*, i8** %51, align 8
  br i1 %645, label %652, label %650

; <label>:650:                                    ; preds = %639
  %651 = call i32 @atoi(i8* %649) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %646, i8* %647, i8* %648, i32 %651)
  br label %.outer.backedge.2

; <label>:652:                                    ; preds = %639
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %646, i8* %647, i8* %648, i8* %649)
  %653 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:654:                                    ; preds = %637
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 3)
  %655 = add nsw i32 0, 1
  br label %.outer.backedge.2

; <label>:656:                                    ; preds = %633
  %657 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 3, i8* %657)
  %658 = add nsw i32 0, 1
  br label %.outer.backedge.2

.outer.backedge.2:                                ; preds = %656, %654, %652, %650, %631, %628, %620, %619, %.loopexit.2, %570, %567, %559, %556, %548, %547, %539, %537, %536, %522, %519, %515, %510
  %.03.ph.be.2 = phi i32 [ %511, %510 ], [ %521, %519 ], [ %523, %522 ], [ 0, %515 ], [ %540, %539 ], [ %538, %537 ], [ 0, %536 ], [ %549, %548 ], [ 0, %547 ], [ %560, %559 ], [ 0, %556 ], [ %571, %570 ], [ 0, %567 ], [ %621, %620 ], [ %.7.2, %619 ], [ %.7.2, %.loopexit.2 ], [ %632, %631 ], [ 0, %628 ], [ %658, %656 ], [ %655, %654 ], [ %653, %652 ], [ 0, %650 ]
  call void @__loop_iteration_test___2()
  %659 = icmp ne i64 0, 0
  %660 = icmp ne i8* null, null
  br i1 false, label %.lr.ph.3, label %.outer._crit_edge.loopexit1

.lr.ph.3:                                         ; preds = %.outer.backedge.2
  call void @unroll_loop(i32 48)
  br label %661

; <label>:661:                                    ; preds = %695, %.lr.ph.3
  %.0712.3 = phi i32 [ 3, %.lr.ph.3 ], [ %662, %695 ]
  call void @unroll_loop(i32 44)
  %662 = add nsw i32 %.0712.3, 1
  %663 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %664 = icmp ne i8* %663, null
  br i1 %664, label %665, label %666

; <label>:665:                                    ; preds = %661
  store i8 0, i8* %663, align 1
  br label %666

; <label>:666:                                    ; preds = %665, %661
  %667 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %668 = icmp ne i8* %667, null
  br i1 %668, label %669, label %670

; <label>:669:                                    ; preds = %666
  store i8 0, i8* %667, align 1
  br label %670

; <label>:670:                                    ; preds = %669, %666
  %671 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %672 = icmp ne i8* %671, null
  br i1 %672, label %673, label %674

; <label>:673:                                    ; preds = %670
  store i8 0, i8* %671, align 1
  br label %674

; <label>:674:                                    ; preds = %673, %670
  %675 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %676 = icmp ne i8* %675, null
  br i1 %676, label %677, label %678

; <label>:677:                                    ; preds = %674
  store i8 0, i8* %675, align 1
  br label %678

; <label>:678:                                    ; preds = %677, %674
  %679 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %679, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %680 = load i8*, i8** %26, align 8
  %681 = icmp ne i8* %680, null
  %.14.3 = select i1 %681, i32 1, i32 0
  %682 = select i1 %681, i1 true, i1 false
  br i1 %682, label %.lr.ph6.preheader.3, label %._crit_edge.3

.lr.ph6.preheader.3:                              ; preds = %678
  br label %.lr.ph6.3

.lr.ph6.3:                                        ; preds = %.lr.ph6.3, %.lr.ph6.preheader.3
  %.15.3 = phi i32 [ %.1.3, %.lr.ph6.3 ], [ %.14.3, %.lr.ph6.preheader.3 ]
  %683 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %684 = sext i32 %.15.3 to i64
  %685 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %684
  store i8* %683, i8** %685, align 8
  call void @unroll_loop(i32 45)
  %686 = sext i32 %.15.3 to i64
  %687 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %686
  %688 = load i8*, i8** %687, align 8
  %689 = icmp ne i8* %688, null
  %690 = add nsw i32 %.15.3, 1
  %691 = icmp slt i32 %690, 30
  %.1.3 = select i1 %689, i32 %690, i32 %.15.3
  %692 = select i1 %689, i1 %691, i1 false
  br i1 %692, label %.lr.ph6.3, label %._crit_edge.loopexit.3

._crit_edge.loopexit.3:                           ; preds = %.lr.ph6.3
  %.1.lcssa.ph.3 = phi i32 [ %.1.3, %.lr.ph6.3 ]
  br label %._crit_edge.3

._crit_edge.3:                                    ; preds = %._crit_edge.loopexit.3, %678
  %.1.lcssa.3 = phi i32 [ %.14.3, %678 ], [ %.1.lcssa.ph.3, %._crit_edge.loopexit.3 ]
  %693 = load i8*, i8** %27, align 16
  %694 = icmp ne i8* %693, null
  br i1 %694, label %698, label %695

; <label>:695:                                    ; preds = %._crit_edge.3
  %696 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %697 = icmp ne i8* %696, null
  br i1 %697, label %661, label %.outer._crit_edge.loopexit.loopexit3

; <label>:698:                                    ; preds = %._crit_edge.3
  %.1.lcssa.lcssa.3 = phi i32 [ %.1.lcssa.3, %._crit_edge.3 ]
  %.lcssa.3 = phi i32 [ %662, %._crit_edge.3 ]
  %699 = load i8*, i8** %28, align 16
  %700 = call i32 @strcasecmp(i8* %699, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %701 = icmp ne i32 %700, 0
  br i1 %701, label %727, label %702

; <label>:702:                                    ; preds = %698
  %703 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  %704 = icmp sgt i32 %.1.lcssa.lcssa.3, 4
  %or.cond.3 = or i1 %703, %704
  br i1 %or.cond.3, label %725, label %705

; <label>:705:                                    ; preds = %702
  %706 = icmp sgt i32 %.1.lcssa.lcssa.3, 2
  br i1 %706, label %707, label %718

; <label>:707:                                    ; preds = %705
  %708 = load i8*, i8** %34, align 8
  %709 = call i32 @strcasecmp(i8* %708, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %710 = icmp ne i32 %709, 0
  br i1 %710, label %722, label %711

; <label>:711:                                    ; preds = %707
  %712 = icmp sge i32 %.1.lcssa.lcssa.3, 3
  br i1 %712, label %715, label %713

; <label>:713:                                    ; preds = %711
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.3)
  %714 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:715:                                    ; preds = %711
  %716 = load i8*, i8** %40, align 8
  %717 = call i32 @atoi(i8* %716) #8
  br label %718

; <label>:718:                                    ; preds = %715, %705
  %.08.3 = phi i32 [ %717, %715 ], [ 53, %705 ]
  %719 = load i8*, i8** %35, align 8
  %720 = call i32 @fwd_add(i8* %719, i32 %.08.3)
  %721 = icmp eq i32 %720, -1
  br i1 %721, label %.loopexit1.loopexit, label %.outer.backedge.3

; <label>:722:                                    ; preds = %707
  %723 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.3, i8* %723)
  %724 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:725:                                    ; preds = %702
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.3)
  %726 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:727:                                    ; preds = %698
  %728 = load i8*, i8** %29, align 16
  %729 = call i32 @strcasecmp(i8* %728, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %730 = icmp ne i32 %729, 0
  br i1 %730, label %744, label %731

; <label>:731:                                    ; preds = %727
  %732 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %732, label %742, label %733

; <label>:733:                                    ; preds = %731
  %734 = load i8*, i8** %32, align 8
  %735 = call i32 @conv_trick_conf(i8* %734)
  %736 = icmp ne i32 %735, 0
  %737 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %738 = load i8*, i8** %33, align 8
  br i1 %736, label %740, label %739

; <label>:739:                                    ; preds = %733
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %737, i8* %738)
  br label %.outer.backedge.3

; <label>:740:                                    ; preds = %733
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %737, i8* %738)
  %741 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:742:                                    ; preds = %731
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.3)
  %743 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:744:                                    ; preds = %727
  %745 = load i8*, i8** %30, align 16
  %746 = call i32 @strcasecmp(i8* %745, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %747 = icmp ne i32 %746, 0
  br i1 %747, label %753, label %748

; <label>:748:                                    ; preds = %744
  %749 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %749, label %751, label %750

; <label>:750:                                    ; preds = %748
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.3

; <label>:751:                                    ; preds = %748
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.3)
  %752 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:753:                                    ; preds = %744
  %754 = load i8*, i8** %31, align 16
  %755 = call i32 @strcasecmp(i8* %754, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %756 = icmp ne i32 %755, 0
  br i1 %756, label %764, label %757

; <label>:757:                                    ; preds = %753
  %758 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %758, label %762, label %759

; <label>:759:                                    ; preds = %757
  %760 = load i8*, i8** %39, align 8
  %761 = call i32 @atoi(i8* %760) #8
  store i32 %761, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.3

; <label>:762:                                    ; preds = %757
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.3)
  %763 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:764:                                    ; preds = %753
  %765 = load i8*, i8** %36, align 16
  %766 = call i32 @strcasecmp(i8* %765, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %767 = icmp ne i32 %766, 0
  br i1 %767, label %775, label %768

; <label>:768:                                    ; preds = %764
  %769 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %769, label %773, label %770

; <label>:770:                                    ; preds = %768
  %771 = load i8*, i8** %42, align 8
  %772 = call noalias i8* @strdup(i8* %771) #9, !track !108
  store i8* %772, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.3

; <label>:773:                                    ; preds = %768
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.3)
  %774 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:775:                                    ; preds = %764
  %776 = load i8*, i8** %38, align 16
  %777 = call i32 @strcasecmp(i8* %776, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %778 = icmp ne i32 %777, 0
  br i1 %778, label %825, label %779

; <label>:779:                                    ; preds = %775
  %780 = icmp slt i32 %.1.lcssa.lcssa.3, 2
  br i1 %780, label %781, label %783

; <label>:781:                                    ; preds = %779
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.3)
  %782 = add nsw i32 0, 1
  br label %783

; <label>:783:                                    ; preds = %781, %779
  %.7.3 = phi i32 [ %782, %781 ], [ 0, %779 ]
  br label %784

; <label>:784:                                    ; preds = %784, %783
  %lsr.iv.3 = phi i64 [ %lsr.iv.next.3, %784 ], [ -1, %783 ]
  %785 = add i64 %lsr.iv.3, 1
  call void @unroll_loop(i32 46)
  %786 = shl i64 %lsr.iv.3, 3
  %uglygep.3 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %786
  %uglygep3.3 = bitcast i8* %uglygep.3 to i8**
  %scevgep.3 = getelementptr i8*, i8** %uglygep3.3, i64 111
  %787 = load i8*, i8** %scevgep.3, align 8
  %788 = icmp ne i8* %787, null
  %789 = icmp ult i64 %785, 30
  %spec.select.3 = select i1 %788, i1 %789, i1 false
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %spec.select.3, label %784, label %790

; <label>:790:                                    ; preds = %784
  %.01.lcssa.wide.3 = phi i64 [ %lsr.iv.next.3, %784 ]
  %791 = trunc i64 %.01.lcssa.wide.3 to i32
  %792 = add nsw i32 %791, %.1.lcssa.lcssa.3
  %793 = sub nsw i32 %792, 1
  %794 = icmp sgt i32 %793, 30
  br i1 %794, label %823, label %795

; <label>:795:                                    ; preds = %790
  %796 = sub nsw i32 %.1.lcssa.lcssa.3, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.3, i32 %796)
  %797 = add nsw i32 %.1.lcssa.lcssa.3, -1
  %798 = add nsw i32 %791, %.1.lcssa.lcssa.3
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %799
  store i8* null, i8** %800, align 8
  %801 = icmp ne i32 %797, 0
  br i1 %801, label %.lr.ph16.3, label %.loopexit.3

.lr.ph16.3:                                       ; preds = %795
  %802 = add i32 %.1.lcssa.lcssa.3, -1
  %803 = sext i32 %802 to i64
  %804 = sext i32 %791 to i64
  %scevgep4.3 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %803
  %805 = shl i64 %803, 1
  %806 = shl i64 %804, 1
  %807 = add i64 %805, %806
  %scevgep9.3 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %807
  %808 = sub i32 1, %.1.lcssa.lcssa.3
  %809 = zext i32 %808 to i64
  br label %810

; <label>:810:                                    ; preds = %815, %.lr.ph16.3
  %lsr.iv5.3 = phi i64 [ 0, %.lr.ph16.3 ], [ %lsr.iv.next6.3, %815 ]
  call void @unroll_loop(i32 47)
  %scevgep7.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %811 = load i8*, i8** %scevgep7.3, align 8
  %812 = call i32 @strcmp(i8* %811, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %813 = icmp ne i32 %812, 0
  br i1 %813, label %815, label %814

; <label>:814:                                    ; preds = %810
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.3

; <label>:815:                                    ; preds = %810
  %scevgep8.3 = getelementptr i8*, i8** %scevgep4.3, i64 %lsr.iv5.3
  %816 = load i8*, i8** %scevgep8.3, align 8
  %817 = call noalias i8* @strdup(i8* %816) #9, !track !109
  %818 = shl i64 %lsr.iv5.3, 1
  %scevgep10.3 = getelementptr i32, i32* %scevgep9.3, i64 %818
  %scevgep1011.3 = bitcast i32* %scevgep10.3 to i8**
  store i8* %817, i8** %scevgep1011.3, align 8
  %lsr.iv.next6.3 = add nsw i64 %lsr.iv5.3, -1
  %tmp.3 = trunc i64 %lsr.iv.next6.3 to i32
  %819 = icmp ne i32 %808, %tmp.3
  br i1 %819, label %810, label %.loopexit.loopexit.3

.loopexit.loopexit.3:                             ; preds = %815
  br label %.loopexit.3

.loopexit.3:                                      ; preds = %.loopexit.loopexit.3, %814, %795
  %820 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %821 = icmp ne i8* %820, null
  br i1 %821, label %822, label %.outer.backedge.3

; <label>:822:                                    ; preds = %.loopexit.3
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.3

; <label>:823:                                    ; preds = %790
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.3, i32 30)
  %824 = add nsw i32 %.7.3, 1
  br label %.outer.backedge.3

; <label>:825:                                    ; preds = %775
  %826 = load i8*, i8** %41, align 16
  %827 = call i32 @strcasecmp(i8* %826, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %828 = icmp ne i32 %827, 0
  br i1 %828, label %836, label %829

; <label>:829:                                    ; preds = %825
  %830 = icmp ne i32 %.1.lcssa.lcssa.3, 2
  br i1 %830, label %834, label %831

; <label>:831:                                    ; preds = %829
  %832 = load i8*, i8** %45, align 8
  %833 = call i32 @atoi(i8* %832) #8
  store i32 %833, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.3

; <label>:834:                                    ; preds = %829
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.3)
  %835 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:836:                                    ; preds = %825
  %837 = load i8*, i8** %43, align 16
  %838 = call i32 @strcasecmp(i8* %837, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %839 = icmp ne i32 %838, 0
  br i1 %839, label %859, label %840

; <label>:840:                                    ; preds = %836
  %841 = icmp ne i32 %.1.lcssa.lcssa.3, 4
  br i1 %841, label %857, label %842

; <label>:842:                                    ; preds = %840
  %843 = load i8*, i8** %46, align 8
  %844 = load i8*, i8** %47, align 16
  %845 = load i8*, i8** %48, align 8
  %846 = call i32 @atoi(i8* %845) #8
  %847 = call i32 @conv_scoped_conf(i8* %843, i8* %844, i32 %846)
  %848 = icmp ne i32 %847, 0
  %849 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %850 = load i8*, i8** %49, align 8
  %851 = load i8*, i8** %50, align 16
  %852 = load i8*, i8** %51, align 8
  br i1 %848, label %855, label %853

; <label>:853:                                    ; preds = %842
  %854 = call i32 @atoi(i8* %852) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %849, i8* %850, i8* %851, i32 %854)
  br label %.outer.backedge.3

; <label>:855:                                    ; preds = %842
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %849, i8* %850, i8* %851, i8* %852)
  %856 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:857:                                    ; preds = %840
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.3)
  %858 = add nsw i32 0, 1
  br label %.outer.backedge.3

; <label>:859:                                    ; preds = %836
  %860 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.3, i8* %860)
  %861 = add nsw i32 0, 1
  br label %.outer.backedge.3

.outer.backedge.3:                                ; preds = %859, %857, %855, %853, %834, %831, %823, %822, %.loopexit.3, %773, %770, %762, %759, %751, %750, %742, %740, %739, %725, %722, %718, %713
  %.03.ph.be.3 = phi i32 [ %714, %713 ], [ %724, %722 ], [ %726, %725 ], [ 0, %718 ], [ %743, %742 ], [ %741, %740 ], [ 0, %739 ], [ %752, %751 ], [ 0, %750 ], [ %763, %762 ], [ 0, %759 ], [ %774, %773 ], [ 0, %770 ], [ %824, %823 ], [ %.7.3, %822 ], [ %.7.3, %.loopexit.3 ], [ %835, %834 ], [ 0, %831 ], [ %861, %859 ], [ %858, %857 ], [ %856, %855 ], [ 0, %853 ]
  call void @__loop_iteration_test___2()
  %862 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %863 = icmp ne i8* %862, null
  br i1 %863, label %.lr.ph.4, label %.outer._crit_edge.loopexit1

.lr.ph.4:                                         ; preds = %.outer.backedge.3
  call void @unroll_loop(i32 48)
  br label %864

; <label>:864:                                    ; preds = %898, %.lr.ph.4
  %.0712.4 = phi i32 [ %.lcssa.3, %.lr.ph.4 ], [ %865, %898 ]
  call void @unroll_loop(i32 44)
  %865 = add nsw i32 %.0712.4, 1
  %866 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %867 = icmp ne i8* %866, null
  br i1 %867, label %868, label %869

; <label>:868:                                    ; preds = %864
  store i8 0, i8* %866, align 1
  br label %869

; <label>:869:                                    ; preds = %868, %864
  %870 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %871 = icmp ne i8* %870, null
  br i1 %871, label %872, label %873

; <label>:872:                                    ; preds = %869
  store i8 0, i8* %870, align 1
  br label %873

; <label>:873:                                    ; preds = %872, %869
  %874 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %875 = icmp ne i8* %874, null
  br i1 %875, label %876, label %877

; <label>:876:                                    ; preds = %873
  store i8 0, i8* %874, align 1
  br label %877

; <label>:877:                                    ; preds = %876, %873
  %878 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %879 = icmp ne i8* %878, null
  br i1 %879, label %880, label %881

; <label>:880:                                    ; preds = %877
  store i8 0, i8* %878, align 1
  br label %881

; <label>:881:                                    ; preds = %880, %877
  %882 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %882, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %883 = load i8*, i8** %26, align 8
  %884 = icmp ne i8* %883, null
  %.14.4 = select i1 %884, i32 1, i32 0
  %885 = select i1 %884, i1 true, i1 false
  br i1 %885, label %.lr.ph6.preheader.4, label %._crit_edge.4

.lr.ph6.preheader.4:                              ; preds = %881
  br label %.lr.ph6.4

.lr.ph6.4:                                        ; preds = %.lr.ph6.4, %.lr.ph6.preheader.4
  %.15.4 = phi i32 [ %.1.4, %.lr.ph6.4 ], [ %.14.4, %.lr.ph6.preheader.4 ]
  %886 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %887 = sext i32 %.15.4 to i64
  %888 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %887
  store i8* %886, i8** %888, align 8
  call void @unroll_loop(i32 45)
  %889 = sext i32 %.15.4 to i64
  %890 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %889
  %891 = load i8*, i8** %890, align 8
  %892 = icmp ne i8* %891, null
  %893 = add nsw i32 %.15.4, 1
  %894 = icmp slt i32 %893, 30
  %.1.4 = select i1 %892, i32 %893, i32 %.15.4
  %895 = select i1 %892, i1 %894, i1 false
  br i1 %895, label %.lr.ph6.4, label %._crit_edge.loopexit.4

._crit_edge.loopexit.4:                           ; preds = %.lr.ph6.4
  %.1.lcssa.ph.4 = phi i32 [ %.1.4, %.lr.ph6.4 ]
  br label %._crit_edge.4

._crit_edge.4:                                    ; preds = %._crit_edge.loopexit.4, %881
  %.1.lcssa.4 = phi i32 [ %.14.4, %881 ], [ %.1.lcssa.ph.4, %._crit_edge.loopexit.4 ]
  %896 = load i8*, i8** %27, align 16
  %897 = icmp ne i8* %896, null
  br i1 %897, label %901, label %898

; <label>:898:                                    ; preds = %._crit_edge.4
  %899 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %900 = icmp ne i8* %899, null
  br i1 %900, label %864, label %.outer._crit_edge.loopexit.loopexit4

; <label>:901:                                    ; preds = %._crit_edge.4
  %.1.lcssa.lcssa.4 = phi i32 [ %.1.lcssa.4, %._crit_edge.4 ]
  %.lcssa.4 = phi i32 [ %865, %._crit_edge.4 ]
  %902 = load i8*, i8** %28, align 16
  %903 = call i32 @strcasecmp(i8* %902, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %904 = icmp ne i32 %903, 0
  br i1 %904, label %930, label %905

; <label>:905:                                    ; preds = %901
  %906 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  %907 = icmp sgt i32 %.1.lcssa.lcssa.4, 4
  %or.cond.4 = or i1 %906, %907
  br i1 %or.cond.4, label %928, label %908

; <label>:908:                                    ; preds = %905
  %909 = icmp sgt i32 %.1.lcssa.lcssa.4, 2
  br i1 %909, label %910, label %921

; <label>:910:                                    ; preds = %908
  %911 = load i8*, i8** %34, align 8
  %912 = call i32 @strcasecmp(i8* %911, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %913 = icmp ne i32 %912, 0
  br i1 %913, label %925, label %914

; <label>:914:                                    ; preds = %910
  %915 = icmp sge i32 %.1.lcssa.lcssa.4, 3
  br i1 %915, label %918, label %916

; <label>:916:                                    ; preds = %914
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.4)
  %917 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:918:                                    ; preds = %914
  %919 = load i8*, i8** %40, align 8
  %920 = call i32 @atoi(i8* %919) #8
  br label %921

; <label>:921:                                    ; preds = %918, %908
  %.08.4 = phi i32 [ %920, %918 ], [ 53, %908 ]
  %922 = load i8*, i8** %35, align 8
  %923 = call i32 @fwd_add(i8* %922, i32 %.08.4)
  %924 = icmp eq i32 %923, -1
  br i1 %924, label %.loopexit1.loopexit, label %.outer.backedge.4

; <label>:925:                                    ; preds = %910
  %926 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.4, i8* %926)
  %927 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:928:                                    ; preds = %905
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.4)
  %929 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:930:                                    ; preds = %901
  %931 = load i8*, i8** %29, align 16
  %932 = call i32 @strcasecmp(i8* %931, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %933 = icmp ne i32 %932, 0
  br i1 %933, label %947, label %934

; <label>:934:                                    ; preds = %930
  %935 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %935, label %945, label %936

; <label>:936:                                    ; preds = %934
  %937 = load i8*, i8** %32, align 8
  %938 = call i32 @conv_trick_conf(i8* %937)
  %939 = icmp ne i32 %938, 0
  %940 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %941 = load i8*, i8** %33, align 8
  br i1 %939, label %943, label %942

; <label>:942:                                    ; preds = %936
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %940, i8* %941)
  br label %.outer.backedge.4

; <label>:943:                                    ; preds = %936
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %940, i8* %941)
  %944 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:945:                                    ; preds = %934
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.4)
  %946 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:947:                                    ; preds = %930
  %948 = load i8*, i8** %30, align 16
  %949 = call i32 @strcasecmp(i8* %948, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %950 = icmp ne i32 %949, 0
  br i1 %950, label %956, label %951

; <label>:951:                                    ; preds = %947
  %952 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %952, label %954, label %953

; <label>:953:                                    ; preds = %951
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.4

; <label>:954:                                    ; preds = %951
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.4)
  %955 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:956:                                    ; preds = %947
  %957 = load i8*, i8** %31, align 16
  %958 = call i32 @strcasecmp(i8* %957, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %959 = icmp ne i32 %958, 0
  br i1 %959, label %967, label %960

; <label>:960:                                    ; preds = %956
  %961 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %961, label %965, label %962

; <label>:962:                                    ; preds = %960
  %963 = load i8*, i8** %39, align 8
  %964 = call i32 @atoi(i8* %963) #8
  store i32 %964, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.4

; <label>:965:                                    ; preds = %960
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.4)
  %966 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:967:                                    ; preds = %956
  %968 = load i8*, i8** %36, align 16
  %969 = call i32 @strcasecmp(i8* %968, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %970 = icmp ne i32 %969, 0
  br i1 %970, label %978, label %971

; <label>:971:                                    ; preds = %967
  %972 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %972, label %976, label %973

; <label>:973:                                    ; preds = %971
  %974 = load i8*, i8** %42, align 8
  %975 = call noalias i8* @strdup(i8* %974) #9, !track !108
  store i8* %975, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.4

; <label>:976:                                    ; preds = %971
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.4)
  %977 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:978:                                    ; preds = %967
  %979 = load i8*, i8** %38, align 16
  %980 = call i32 @strcasecmp(i8* %979, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %981 = icmp ne i32 %980, 0
  br i1 %981, label %1028, label %982

; <label>:982:                                    ; preds = %978
  %983 = icmp slt i32 %.1.lcssa.lcssa.4, 2
  br i1 %983, label %984, label %986

; <label>:984:                                    ; preds = %982
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.4)
  %985 = add nsw i32 %.03.ph.be.3, 1
  br label %986

; <label>:986:                                    ; preds = %984, %982
  %.7.4 = phi i32 [ %985, %984 ], [ %.03.ph.be.3, %982 ]
  br label %987

; <label>:987:                                    ; preds = %987, %986
  %lsr.iv.4 = phi i64 [ %lsr.iv.next.4, %987 ], [ -1, %986 ]
  %988 = add i64 %lsr.iv.4, 1
  call void @unroll_loop(i32 46)
  %989 = shl i64 %lsr.iv.4, 3
  %uglygep.4 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %989
  %uglygep3.4 = bitcast i8* %uglygep.4 to i8**
  %scevgep.4 = getelementptr i8*, i8** %uglygep3.4, i64 111
  %990 = load i8*, i8** %scevgep.4, align 8
  %991 = icmp ne i8* %990, null
  %992 = icmp ult i64 %988, 30
  %spec.select.4 = select i1 %991, i1 %992, i1 false
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %spec.select.4, label %987, label %993

; <label>:993:                                    ; preds = %987
  %.01.lcssa.wide.4 = phi i64 [ %lsr.iv.next.4, %987 ]
  %994 = trunc i64 %.01.lcssa.wide.4 to i32
  %995 = add nsw i32 %994, %.1.lcssa.lcssa.4
  %996 = sub nsw i32 %995, 1
  %997 = icmp sgt i32 %996, 30
  br i1 %997, label %1026, label %998

; <label>:998:                                    ; preds = %993
  %999 = sub nsw i32 %.1.lcssa.lcssa.4, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.4, i32 %999)
  %1000 = add nsw i32 %.1.lcssa.lcssa.4, -1
  %1001 = add nsw i32 %994, %.1.lcssa.lcssa.4
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1002
  store i8* null, i8** %1003, align 8
  %1004 = icmp ne i32 %1000, 0
  br i1 %1004, label %.lr.ph16.4, label %.loopexit.4

.lr.ph16.4:                                       ; preds = %998
  %1005 = add i32 %.1.lcssa.lcssa.4, -1
  %1006 = sext i32 %1005 to i64
  %1007 = sext i32 %994 to i64
  %scevgep4.4 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1006
  %1008 = shl i64 %1006, 1
  %1009 = shl i64 %1007, 1
  %1010 = add i64 %1008, %1009
  %scevgep9.4 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1010
  %1011 = sub i32 1, %.1.lcssa.lcssa.4
  %1012 = zext i32 %1011 to i64
  br label %1013

; <label>:1013:                                   ; preds = %1018, %.lr.ph16.4
  %lsr.iv5.4 = phi i64 [ 0, %.lr.ph16.4 ], [ %lsr.iv.next6.4, %1018 ]
  call void @unroll_loop(i32 47)
  %scevgep7.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1014 = load i8*, i8** %scevgep7.4, align 8
  %1015 = call i32 @strcmp(i8* %1014, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1016 = icmp ne i32 %1015, 0
  br i1 %1016, label %1018, label %1017

; <label>:1017:                                   ; preds = %1013
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.4

; <label>:1018:                                   ; preds = %1013
  %scevgep8.4 = getelementptr i8*, i8** %scevgep4.4, i64 %lsr.iv5.4
  %1019 = load i8*, i8** %scevgep8.4, align 8
  %1020 = call noalias i8* @strdup(i8* %1019) #9, !track !109
  %1021 = shl i64 %lsr.iv5.4, 1
  %scevgep10.4 = getelementptr i32, i32* %scevgep9.4, i64 %1021
  %scevgep1011.4 = bitcast i32* %scevgep10.4 to i8**
  store i8* %1020, i8** %scevgep1011.4, align 8
  %lsr.iv.next6.4 = add nsw i64 %lsr.iv5.4, -1
  %tmp.4 = trunc i64 %lsr.iv.next6.4 to i32
  %1022 = icmp ne i32 %1011, %tmp.4
  br i1 %1022, label %1013, label %.loopexit.loopexit.4

.loopexit.loopexit.4:                             ; preds = %1018
  br label %.loopexit.4

.loopexit.4:                                      ; preds = %.loopexit.loopexit.4, %1017, %998
  %1023 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1024 = icmp ne i8* %1023, null
  br i1 %1024, label %1025, label %.outer.backedge.4

; <label>:1025:                                   ; preds = %.loopexit.4
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.4

; <label>:1026:                                   ; preds = %993
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.4, i32 30)
  %1027 = add nsw i32 %.7.4, 1
  br label %.outer.backedge.4

; <label>:1028:                                   ; preds = %978
  %1029 = load i8*, i8** %41, align 16
  %1030 = call i32 @strcasecmp(i8* %1029, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1031 = icmp ne i32 %1030, 0
  br i1 %1031, label %1039, label %1032

; <label>:1032:                                   ; preds = %1028
  %1033 = icmp ne i32 %.1.lcssa.lcssa.4, 2
  br i1 %1033, label %1037, label %1034

; <label>:1034:                                   ; preds = %1032
  %1035 = load i8*, i8** %45, align 8
  %1036 = call i32 @atoi(i8* %1035) #8
  store i32 %1036, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.4

; <label>:1037:                                   ; preds = %1032
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.4)
  %1038 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1039:                                   ; preds = %1028
  %1040 = load i8*, i8** %43, align 16
  %1041 = call i32 @strcasecmp(i8* %1040, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1042 = icmp ne i32 %1041, 0
  br i1 %1042, label %1062, label %1043

; <label>:1043:                                   ; preds = %1039
  %1044 = icmp ne i32 %.1.lcssa.lcssa.4, 4
  br i1 %1044, label %1060, label %1045

; <label>:1045:                                   ; preds = %1043
  %1046 = load i8*, i8** %46, align 8
  %1047 = load i8*, i8** %47, align 16
  %1048 = load i8*, i8** %48, align 8
  %1049 = call i32 @atoi(i8* %1048) #8
  %1050 = call i32 @conv_scoped_conf(i8* %1046, i8* %1047, i32 %1049)
  %1051 = icmp ne i32 %1050, 0
  %1052 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1053 = load i8*, i8** %49, align 8
  %1054 = load i8*, i8** %50, align 16
  %1055 = load i8*, i8** %51, align 8
  br i1 %1051, label %1058, label %1056

; <label>:1056:                                   ; preds = %1045
  %1057 = call i32 @atoi(i8* %1055) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1052, i8* %1053, i8* %1054, i32 %1057)
  br label %.outer.backedge.4

; <label>:1058:                                   ; preds = %1045
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1052, i8* %1053, i8* %1054, i8* %1055)
  %1059 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1060:                                   ; preds = %1043
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.4)
  %1061 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

; <label>:1062:                                   ; preds = %1039
  %1063 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.4, i8* %1063)
  %1064 = add nsw i32 %.03.ph.be.3, 1
  br label %.outer.backedge.4

.outer.backedge.4:                                ; preds = %1062, %1060, %1058, %1056, %1037, %1034, %1026, %1025, %.loopexit.4, %976, %973, %965, %962, %954, %953, %945, %943, %942, %928, %925, %921, %916
  %.03.ph.be.4 = phi i32 [ %917, %916 ], [ %927, %925 ], [ %929, %928 ], [ %.03.ph.be.3, %921 ], [ %946, %945 ], [ %944, %943 ], [ %.03.ph.be.3, %942 ], [ %955, %954 ], [ %.03.ph.be.3, %953 ], [ %966, %965 ], [ %.03.ph.be.3, %962 ], [ %977, %976 ], [ %.03.ph.be.3, %973 ], [ %1027, %1026 ], [ %.7.4, %1025 ], [ %.7.4, %.loopexit.4 ], [ %1038, %1037 ], [ %.03.ph.be.3, %1034 ], [ %1064, %1062 ], [ %1061, %1060 ], [ %1059, %1058 ], [ %.03.ph.be.3, %1056 ]
  call void @__loop_iteration_test___2()
  %1065 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1066 = icmp ne i8* %1065, null
  br i1 %1066, label %.lr.ph.5, label %.outer._crit_edge.loopexit1

.lr.ph.5:                                         ; preds = %.outer.backedge.4
  call void @unroll_loop(i32 48)
  br label %1067

; <label>:1067:                                   ; preds = %1101, %.lr.ph.5
  %.0712.5 = phi i32 [ %.lcssa.4, %.lr.ph.5 ], [ %1068, %1101 ]
  call void @unroll_loop(i32 44)
  %1068 = add nsw i32 %.0712.5, 1
  %1069 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1070 = icmp ne i8* %1069, null
  br i1 %1070, label %1071, label %1072

; <label>:1071:                                   ; preds = %1067
  store i8 0, i8* %1069, align 1
  br label %1072

; <label>:1072:                                   ; preds = %1071, %1067
  %1073 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1074 = icmp ne i8* %1073, null
  br i1 %1074, label %1075, label %1076

; <label>:1075:                                   ; preds = %1072
  store i8 0, i8* %1073, align 1
  br label %1076

; <label>:1076:                                   ; preds = %1075, %1072
  %1077 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1078 = icmp ne i8* %1077, null
  br i1 %1078, label %1079, label %1080

; <label>:1079:                                   ; preds = %1076
  store i8 0, i8* %1077, align 1
  br label %1080

; <label>:1080:                                   ; preds = %1079, %1076
  %1081 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1082 = icmp ne i8* %1081, null
  br i1 %1082, label %1083, label %1084

; <label>:1083:                                   ; preds = %1080
  store i8 0, i8* %1081, align 1
  br label %1084

; <label>:1084:                                   ; preds = %1083, %1080
  %1085 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1085, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1086 = load i8*, i8** %26, align 8
  %1087 = icmp ne i8* %1086, null
  %.14.5 = select i1 %1087, i32 1, i32 0
  %1088 = select i1 %1087, i1 true, i1 false
  br i1 %1088, label %.lr.ph6.preheader.5, label %._crit_edge.5

.lr.ph6.preheader.5:                              ; preds = %1084
  br label %.lr.ph6.5

.lr.ph6.5:                                        ; preds = %.lr.ph6.5, %.lr.ph6.preheader.5
  %.15.5 = phi i32 [ %.1.5, %.lr.ph6.5 ], [ %.14.5, %.lr.ph6.preheader.5 ]
  %1089 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1090 = sext i32 %.15.5 to i64
  %1091 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1090
  store i8* %1089, i8** %1091, align 8
  call void @unroll_loop(i32 45)
  %1092 = sext i32 %.15.5 to i64
  %1093 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1092
  %1094 = load i8*, i8** %1093, align 8
  %1095 = icmp ne i8* %1094, null
  %1096 = add nsw i32 %.15.5, 1
  %1097 = icmp slt i32 %1096, 30
  %.1.5 = select i1 %1095, i32 %1096, i32 %.15.5
  %1098 = select i1 %1095, i1 %1097, i1 false
  br i1 %1098, label %.lr.ph6.5, label %._crit_edge.loopexit.5

._crit_edge.loopexit.5:                           ; preds = %.lr.ph6.5
  %.1.lcssa.ph.5 = phi i32 [ %.1.5, %.lr.ph6.5 ]
  br label %._crit_edge.5

._crit_edge.5:                                    ; preds = %._crit_edge.loopexit.5, %1084
  %.1.lcssa.5 = phi i32 [ %.14.5, %1084 ], [ %.1.lcssa.ph.5, %._crit_edge.loopexit.5 ]
  %1099 = load i8*, i8** %27, align 16
  %1100 = icmp ne i8* %1099, null
  br i1 %1100, label %1104, label %1101

; <label>:1101:                                   ; preds = %._crit_edge.5
  %1102 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1103 = icmp ne i8* %1102, null
  br i1 %1103, label %1067, label %.outer._crit_edge.loopexit.loopexit5

; <label>:1104:                                   ; preds = %._crit_edge.5
  %.1.lcssa.lcssa.5 = phi i32 [ %.1.lcssa.5, %._crit_edge.5 ]
  %.lcssa.5 = phi i32 [ %1068, %._crit_edge.5 ]
  %1105 = load i8*, i8** %28, align 16
  %1106 = call i32 @strcasecmp(i8* %1105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1107 = icmp ne i32 %1106, 0
  br i1 %1107, label %1133, label %1108

; <label>:1108:                                   ; preds = %1104
  %1109 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  %1110 = icmp sgt i32 %.1.lcssa.lcssa.5, 4
  %or.cond.5 = or i1 %1109, %1110
  br i1 %or.cond.5, label %1131, label %1111

; <label>:1111:                                   ; preds = %1108
  %1112 = icmp sgt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1112, label %1113, label %1124

; <label>:1113:                                   ; preds = %1111
  %1114 = load i8*, i8** %34, align 8
  %1115 = call i32 @strcasecmp(i8* %1114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1116 = icmp ne i32 %1115, 0
  br i1 %1116, label %1128, label %1117

; <label>:1117:                                   ; preds = %1113
  %1118 = icmp sge i32 %.1.lcssa.lcssa.5, 3
  br i1 %1118, label %1121, label %1119

; <label>:1119:                                   ; preds = %1117
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.5)
  %1120 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1121:                                   ; preds = %1117
  %1122 = load i8*, i8** %40, align 8
  %1123 = call i32 @atoi(i8* %1122) #8
  br label %1124

; <label>:1124:                                   ; preds = %1121, %1111
  %.08.5 = phi i32 [ %1123, %1121 ], [ 53, %1111 ]
  %1125 = load i8*, i8** %35, align 8
  %1126 = call i32 @fwd_add(i8* %1125, i32 %.08.5)
  %1127 = icmp eq i32 %1126, -1
  br i1 %1127, label %.loopexit1.loopexit, label %.outer.backedge.5

; <label>:1128:                                   ; preds = %1113
  %1129 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.5, i8* %1129)
  %1130 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1131:                                   ; preds = %1108
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.5)
  %1132 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1133:                                   ; preds = %1104
  %1134 = load i8*, i8** %29, align 16
  %1135 = call i32 @strcasecmp(i8* %1134, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1136 = icmp ne i32 %1135, 0
  br i1 %1136, label %1150, label %1137

; <label>:1137:                                   ; preds = %1133
  %1138 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1138, label %1148, label %1139

; <label>:1139:                                   ; preds = %1137
  %1140 = load i8*, i8** %32, align 8
  %1141 = call i32 @conv_trick_conf(i8* %1140)
  %1142 = icmp ne i32 %1141, 0
  %1143 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1144 = load i8*, i8** %33, align 8
  br i1 %1142, label %1146, label %1145

; <label>:1145:                                   ; preds = %1139
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1143, i8* %1144)
  br label %.outer.backedge.5

; <label>:1146:                                   ; preds = %1139
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1143, i8* %1144)
  %1147 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1148:                                   ; preds = %1137
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.5)
  %1149 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1150:                                   ; preds = %1133
  %1151 = load i8*, i8** %30, align 16
  %1152 = call i32 @strcasecmp(i8* %1151, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1153 = icmp ne i32 %1152, 0
  br i1 %1153, label %1159, label %1154

; <label>:1154:                                   ; preds = %1150
  %1155 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1155, label %1157, label %1156

; <label>:1156:                                   ; preds = %1154
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.5

; <label>:1157:                                   ; preds = %1154
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.5)
  %1158 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1159:                                   ; preds = %1150
  %1160 = load i8*, i8** %31, align 16
  %1161 = call i32 @strcasecmp(i8* %1160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1162 = icmp ne i32 %1161, 0
  br i1 %1162, label %1170, label %1163

; <label>:1163:                                   ; preds = %1159
  %1164 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1164, label %1168, label %1165

; <label>:1165:                                   ; preds = %1163
  %1166 = load i8*, i8** %39, align 8
  %1167 = call i32 @atoi(i8* %1166) #8
  store i32 %1167, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.5

; <label>:1168:                                   ; preds = %1163
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.5)
  %1169 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1170:                                   ; preds = %1159
  %1171 = load i8*, i8** %36, align 16
  %1172 = call i32 @strcasecmp(i8* %1171, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1173 = icmp ne i32 %1172, 0
  br i1 %1173, label %1181, label %1174

; <label>:1174:                                   ; preds = %1170
  %1175 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1175, label %1179, label %1176

; <label>:1176:                                   ; preds = %1174
  %1177 = load i8*, i8** %42, align 8
  %1178 = call noalias i8* @strdup(i8* %1177) #9, !track !108
  store i8* %1178, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.5

; <label>:1179:                                   ; preds = %1174
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.5)
  %1180 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1181:                                   ; preds = %1170
  %1182 = load i8*, i8** %38, align 16
  %1183 = call i32 @strcasecmp(i8* %1182, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1184 = icmp ne i32 %1183, 0
  br i1 %1184, label %1231, label %1185

; <label>:1185:                                   ; preds = %1181
  %1186 = icmp slt i32 %.1.lcssa.lcssa.5, 2
  br i1 %1186, label %1187, label %1189

; <label>:1187:                                   ; preds = %1185
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.5)
  %1188 = add nsw i32 %.03.ph.be.4, 1
  br label %1189

; <label>:1189:                                   ; preds = %1187, %1185
  %.7.5 = phi i32 [ %1188, %1187 ], [ %.03.ph.be.4, %1185 ]
  br label %1190

; <label>:1190:                                   ; preds = %1190, %1189
  %lsr.iv.5 = phi i64 [ %lsr.iv.next.5, %1190 ], [ -1, %1189 ]
  %1191 = add i64 %lsr.iv.5, 1
  call void @unroll_loop(i32 46)
  %1192 = shl i64 %lsr.iv.5, 3
  %uglygep.5 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1192
  %uglygep3.5 = bitcast i8* %uglygep.5 to i8**
  %scevgep.5 = getelementptr i8*, i8** %uglygep3.5, i64 111
  %1193 = load i8*, i8** %scevgep.5, align 8
  %1194 = icmp ne i8* %1193, null
  %1195 = icmp ult i64 %1191, 30
  %spec.select.5 = select i1 %1194, i1 %1195, i1 false
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %spec.select.5, label %1190, label %1196

; <label>:1196:                                   ; preds = %1190
  %.01.lcssa.wide.5 = phi i64 [ %lsr.iv.next.5, %1190 ]
  %1197 = trunc i64 %.01.lcssa.wide.5 to i32
  %1198 = add nsw i32 %1197, %.1.lcssa.lcssa.5
  %1199 = sub nsw i32 %1198, 1
  %1200 = icmp sgt i32 %1199, 30
  br i1 %1200, label %1229, label %1201

; <label>:1201:                                   ; preds = %1196
  %1202 = sub nsw i32 %.1.lcssa.lcssa.5, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.5, i32 %1202)
  %1203 = add nsw i32 %.1.lcssa.lcssa.5, -1
  %1204 = add nsw i32 %1197, %.1.lcssa.lcssa.5
  %1205 = sext i32 %1204 to i64
  %1206 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1205
  store i8* null, i8** %1206, align 8
  %1207 = icmp ne i32 %1203, 0
  br i1 %1207, label %.lr.ph16.5, label %.loopexit.5

.lr.ph16.5:                                       ; preds = %1201
  %1208 = add i32 %.1.lcssa.lcssa.5, -1
  %1209 = sext i32 %1208 to i64
  %1210 = sext i32 %1197 to i64
  %scevgep4.5 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1209
  %1211 = shl i64 %1209, 1
  %1212 = shl i64 %1210, 1
  %1213 = add i64 %1211, %1212
  %scevgep9.5 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1213
  %1214 = sub i32 1, %.1.lcssa.lcssa.5
  %1215 = zext i32 %1214 to i64
  br label %1216

; <label>:1216:                                   ; preds = %1221, %.lr.ph16.5
  %lsr.iv5.5 = phi i64 [ 0, %.lr.ph16.5 ], [ %lsr.iv.next6.5, %1221 ]
  call void @unroll_loop(i32 47)
  %scevgep7.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1217 = load i8*, i8** %scevgep7.5, align 8
  %1218 = call i32 @strcmp(i8* %1217, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1219 = icmp ne i32 %1218, 0
  br i1 %1219, label %1221, label %1220

; <label>:1220:                                   ; preds = %1216
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.5

; <label>:1221:                                   ; preds = %1216
  %scevgep8.5 = getelementptr i8*, i8** %scevgep4.5, i64 %lsr.iv5.5
  %1222 = load i8*, i8** %scevgep8.5, align 8
  %1223 = call noalias i8* @strdup(i8* %1222) #9, !track !109
  %1224 = shl i64 %lsr.iv5.5, 1
  %scevgep10.5 = getelementptr i32, i32* %scevgep9.5, i64 %1224
  %scevgep1011.5 = bitcast i32* %scevgep10.5 to i8**
  store i8* %1223, i8** %scevgep1011.5, align 8
  %lsr.iv.next6.5 = add nsw i64 %lsr.iv5.5, -1
  %tmp.5 = trunc i64 %lsr.iv.next6.5 to i32
  %1225 = icmp ne i32 %1214, %tmp.5
  br i1 %1225, label %1216, label %.loopexit.loopexit.5

.loopexit.loopexit.5:                             ; preds = %1221
  br label %.loopexit.5

.loopexit.5:                                      ; preds = %.loopexit.loopexit.5, %1220, %1201
  %1226 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1227 = icmp ne i8* %1226, null
  br i1 %1227, label %1228, label %.outer.backedge.5

; <label>:1228:                                   ; preds = %.loopexit.5
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.5

; <label>:1229:                                   ; preds = %1196
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.5, i32 30)
  %1230 = add nsw i32 %.7.5, 1
  br label %.outer.backedge.5

; <label>:1231:                                   ; preds = %1181
  %1232 = load i8*, i8** %41, align 16
  %1233 = call i32 @strcasecmp(i8* %1232, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1234 = icmp ne i32 %1233, 0
  br i1 %1234, label %1242, label %1235

; <label>:1235:                                   ; preds = %1231
  %1236 = icmp ne i32 %.1.lcssa.lcssa.5, 2
  br i1 %1236, label %1240, label %1237

; <label>:1237:                                   ; preds = %1235
  %1238 = load i8*, i8** %45, align 8
  %1239 = call i32 @atoi(i8* %1238) #8
  store i32 %1239, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.5

; <label>:1240:                                   ; preds = %1235
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.5)
  %1241 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1242:                                   ; preds = %1231
  %1243 = load i8*, i8** %43, align 16
  %1244 = call i32 @strcasecmp(i8* %1243, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1245 = icmp ne i32 %1244, 0
  br i1 %1245, label %1265, label %1246

; <label>:1246:                                   ; preds = %1242
  %1247 = icmp ne i32 %.1.lcssa.lcssa.5, 4
  br i1 %1247, label %1263, label %1248

; <label>:1248:                                   ; preds = %1246
  %1249 = load i8*, i8** %46, align 8
  %1250 = load i8*, i8** %47, align 16
  %1251 = load i8*, i8** %48, align 8
  %1252 = call i32 @atoi(i8* %1251) #8
  %1253 = call i32 @conv_scoped_conf(i8* %1249, i8* %1250, i32 %1252)
  %1254 = icmp ne i32 %1253, 0
  %1255 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1256 = load i8*, i8** %49, align 8
  %1257 = load i8*, i8** %50, align 16
  %1258 = load i8*, i8** %51, align 8
  br i1 %1254, label %1261, label %1259

; <label>:1259:                                   ; preds = %1248
  %1260 = call i32 @atoi(i8* %1258) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1255, i8* %1256, i8* %1257, i32 %1260)
  br label %.outer.backedge.5

; <label>:1261:                                   ; preds = %1248
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1255, i8* %1256, i8* %1257, i8* %1258)
  %1262 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1263:                                   ; preds = %1246
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.5)
  %1264 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

; <label>:1265:                                   ; preds = %1242
  %1266 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.5, i8* %1266)
  %1267 = add nsw i32 %.03.ph.be.4, 1
  br label %.outer.backedge.5

.outer.backedge.5:                                ; preds = %1265, %1263, %1261, %1259, %1240, %1237, %1229, %1228, %.loopexit.5, %1179, %1176, %1168, %1165, %1157, %1156, %1148, %1146, %1145, %1131, %1128, %1124, %1119
  %.03.ph.be.5 = phi i32 [ %1120, %1119 ], [ %1130, %1128 ], [ %1132, %1131 ], [ %.03.ph.be.4, %1124 ], [ %1149, %1148 ], [ %1147, %1146 ], [ %.03.ph.be.4, %1145 ], [ %1158, %1157 ], [ %.03.ph.be.4, %1156 ], [ %1169, %1168 ], [ %.03.ph.be.4, %1165 ], [ %1180, %1179 ], [ %.03.ph.be.4, %1176 ], [ %1230, %1229 ], [ %.7.5, %1228 ], [ %.7.5, %.loopexit.5 ], [ %1241, %1240 ], [ %.03.ph.be.4, %1237 ], [ %1267, %1265 ], [ %1264, %1263 ], [ %1262, %1261 ], [ %.03.ph.be.4, %1259 ]
  call void @__loop_iteration_test___2()
  %1268 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1269 = icmp ne i8* %1268, null
  br i1 %1269, label %.lr.ph.6, label %.outer._crit_edge.loopexit1

.lr.ph.6:                                         ; preds = %.outer.backedge.5
  call void @unroll_loop(i32 48)
  br label %1270

; <label>:1270:                                   ; preds = %1304, %.lr.ph.6
  %.0712.6 = phi i32 [ %.lcssa.5, %.lr.ph.6 ], [ %1271, %1304 ]
  call void @unroll_loop(i32 44)
  %1271 = add nsw i32 %.0712.6, 1
  %1272 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1273 = icmp ne i8* %1272, null
  br i1 %1273, label %1274, label %1275

; <label>:1274:                                   ; preds = %1270
  store i8 0, i8* %1272, align 1
  br label %1275

; <label>:1275:                                   ; preds = %1274, %1270
  %1276 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1277 = icmp ne i8* %1276, null
  br i1 %1277, label %1278, label %1279

; <label>:1278:                                   ; preds = %1275
  store i8 0, i8* %1276, align 1
  br label %1279

; <label>:1279:                                   ; preds = %1278, %1275
  %1280 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1281 = icmp ne i8* %1280, null
  br i1 %1281, label %1282, label %1283

; <label>:1282:                                   ; preds = %1279
  store i8 0, i8* %1280, align 1
  br label %1283

; <label>:1283:                                   ; preds = %1282, %1279
  %1284 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1285 = icmp ne i8* %1284, null
  br i1 %1285, label %1286, label %1287

; <label>:1286:                                   ; preds = %1283
  store i8 0, i8* %1284, align 1
  br label %1287

; <label>:1287:                                   ; preds = %1286, %1283
  %1288 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1288, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1289 = load i8*, i8** %26, align 8
  %1290 = icmp ne i8* %1289, null
  %.14.6 = select i1 %1290, i32 1, i32 0
  %1291 = select i1 %1290, i1 true, i1 false
  br i1 %1291, label %.lr.ph6.preheader.6, label %._crit_edge.6

.lr.ph6.preheader.6:                              ; preds = %1287
  br label %.lr.ph6.6

.lr.ph6.6:                                        ; preds = %.lr.ph6.6, %.lr.ph6.preheader.6
  %.15.6 = phi i32 [ %.1.6, %.lr.ph6.6 ], [ %.14.6, %.lr.ph6.preheader.6 ]
  %1292 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1293 = sext i32 %.15.6 to i64
  %1294 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1293
  store i8* %1292, i8** %1294, align 8
  call void @unroll_loop(i32 45)
  %1295 = sext i32 %.15.6 to i64
  %1296 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1295
  %1297 = load i8*, i8** %1296, align 8
  %1298 = icmp ne i8* %1297, null
  %1299 = add nsw i32 %.15.6, 1
  %1300 = icmp slt i32 %1299, 30
  %.1.6 = select i1 %1298, i32 %1299, i32 %.15.6
  %1301 = select i1 %1298, i1 %1300, i1 false
  br i1 %1301, label %.lr.ph6.6, label %._crit_edge.loopexit.6

._crit_edge.loopexit.6:                           ; preds = %.lr.ph6.6
  %.1.lcssa.ph.6 = phi i32 [ %.1.6, %.lr.ph6.6 ]
  br label %._crit_edge.6

._crit_edge.6:                                    ; preds = %._crit_edge.loopexit.6, %1287
  %.1.lcssa.6 = phi i32 [ %.14.6, %1287 ], [ %.1.lcssa.ph.6, %._crit_edge.loopexit.6 ]
  %1302 = load i8*, i8** %27, align 16
  %1303 = icmp ne i8* %1302, null
  br i1 %1303, label %1307, label %1304

; <label>:1304:                                   ; preds = %._crit_edge.6
  %1305 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1306 = icmp ne i8* %1305, null
  br i1 %1306, label %1270, label %.outer._crit_edge.loopexit.loopexit6

; <label>:1307:                                   ; preds = %._crit_edge.6
  %.1.lcssa.lcssa.6 = phi i32 [ %.1.lcssa.6, %._crit_edge.6 ]
  %.lcssa.6 = phi i32 [ %1271, %._crit_edge.6 ]
  %1308 = load i8*, i8** %28, align 16
  %1309 = call i32 @strcasecmp(i8* %1308, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1310 = icmp ne i32 %1309, 0
  br i1 %1310, label %1336, label %1311

; <label>:1311:                                   ; preds = %1307
  %1312 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  %1313 = icmp sgt i32 %.1.lcssa.lcssa.6, 4
  %or.cond.6 = or i1 %1312, %1313
  br i1 %or.cond.6, label %1334, label %1314

; <label>:1314:                                   ; preds = %1311
  %1315 = icmp sgt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1315, label %1316, label %1327

; <label>:1316:                                   ; preds = %1314
  %1317 = load i8*, i8** %34, align 8
  %1318 = call i32 @strcasecmp(i8* %1317, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1319 = icmp ne i32 %1318, 0
  br i1 %1319, label %1331, label %1320

; <label>:1320:                                   ; preds = %1316
  %1321 = icmp sge i32 %.1.lcssa.lcssa.6, 3
  br i1 %1321, label %1324, label %1322

; <label>:1322:                                   ; preds = %1320
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.6)
  %1323 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1324:                                   ; preds = %1320
  %1325 = load i8*, i8** %40, align 8
  %1326 = call i32 @atoi(i8* %1325) #8
  br label %1327

; <label>:1327:                                   ; preds = %1324, %1314
  %.08.6 = phi i32 [ %1326, %1324 ], [ 53, %1314 ]
  %1328 = load i8*, i8** %35, align 8
  %1329 = call i32 @fwd_add(i8* %1328, i32 %.08.6)
  %1330 = icmp eq i32 %1329, -1
  br i1 %1330, label %.loopexit1.loopexit, label %.outer.backedge.6

; <label>:1331:                                   ; preds = %1316
  %1332 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.6, i8* %1332)
  %1333 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1334:                                   ; preds = %1311
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.6)
  %1335 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1336:                                   ; preds = %1307
  %1337 = load i8*, i8** %29, align 16
  %1338 = call i32 @strcasecmp(i8* %1337, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1339 = icmp ne i32 %1338, 0
  br i1 %1339, label %1353, label %1340

; <label>:1340:                                   ; preds = %1336
  %1341 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1341, label %1351, label %1342

; <label>:1342:                                   ; preds = %1340
  %1343 = load i8*, i8** %32, align 8
  %1344 = call i32 @conv_trick_conf(i8* %1343)
  %1345 = icmp ne i32 %1344, 0
  %1346 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1347 = load i8*, i8** %33, align 8
  br i1 %1345, label %1349, label %1348

; <label>:1348:                                   ; preds = %1342
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1346, i8* %1347)
  br label %.outer.backedge.6

; <label>:1349:                                   ; preds = %1342
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1346, i8* %1347)
  %1350 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1351:                                   ; preds = %1340
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.6)
  %1352 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1353:                                   ; preds = %1336
  %1354 = load i8*, i8** %30, align 16
  %1355 = call i32 @strcasecmp(i8* %1354, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1356 = icmp ne i32 %1355, 0
  br i1 %1356, label %1362, label %1357

; <label>:1357:                                   ; preds = %1353
  %1358 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1358, label %1360, label %1359

; <label>:1359:                                   ; preds = %1357
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.6

; <label>:1360:                                   ; preds = %1357
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.6)
  %1361 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1362:                                   ; preds = %1353
  %1363 = load i8*, i8** %31, align 16
  %1364 = call i32 @strcasecmp(i8* %1363, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1365 = icmp ne i32 %1364, 0
  br i1 %1365, label %1373, label %1366

; <label>:1366:                                   ; preds = %1362
  %1367 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1367, label %1371, label %1368

; <label>:1368:                                   ; preds = %1366
  %1369 = load i8*, i8** %39, align 8
  %1370 = call i32 @atoi(i8* %1369) #8
  store i32 %1370, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.6

; <label>:1371:                                   ; preds = %1366
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.6)
  %1372 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1373:                                   ; preds = %1362
  %1374 = load i8*, i8** %36, align 16
  %1375 = call i32 @strcasecmp(i8* %1374, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1376 = icmp ne i32 %1375, 0
  br i1 %1376, label %1384, label %1377

; <label>:1377:                                   ; preds = %1373
  %1378 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1378, label %1382, label %1379

; <label>:1379:                                   ; preds = %1377
  %1380 = load i8*, i8** %42, align 8
  %1381 = call noalias i8* @strdup(i8* %1380) #9, !track !108
  store i8* %1381, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.6

; <label>:1382:                                   ; preds = %1377
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.6)
  %1383 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1384:                                   ; preds = %1373
  %1385 = load i8*, i8** %38, align 16
  %1386 = call i32 @strcasecmp(i8* %1385, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1387 = icmp ne i32 %1386, 0
  br i1 %1387, label %1434, label %1388

; <label>:1388:                                   ; preds = %1384
  %1389 = icmp slt i32 %.1.lcssa.lcssa.6, 2
  br i1 %1389, label %1390, label %1392

; <label>:1390:                                   ; preds = %1388
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.6)
  %1391 = add nsw i32 %.03.ph.be.5, 1
  br label %1392

; <label>:1392:                                   ; preds = %1390, %1388
  %.7.6 = phi i32 [ %1391, %1390 ], [ %.03.ph.be.5, %1388 ]
  br label %1393

; <label>:1393:                                   ; preds = %1393, %1392
  %lsr.iv.6 = phi i64 [ %lsr.iv.next.6, %1393 ], [ -1, %1392 ]
  %1394 = add i64 %lsr.iv.6, 1
  call void @unroll_loop(i32 46)
  %1395 = shl i64 %lsr.iv.6, 3
  %uglygep.6 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1395
  %uglygep3.6 = bitcast i8* %uglygep.6 to i8**
  %scevgep.6 = getelementptr i8*, i8** %uglygep3.6, i64 111
  %1396 = load i8*, i8** %scevgep.6, align 8
  %1397 = icmp ne i8* %1396, null
  %1398 = icmp ult i64 %1394, 30
  %spec.select.6 = select i1 %1397, i1 %1398, i1 false
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %spec.select.6, label %1393, label %1399

; <label>:1399:                                   ; preds = %1393
  %.01.lcssa.wide.6 = phi i64 [ %lsr.iv.next.6, %1393 ]
  %1400 = trunc i64 %.01.lcssa.wide.6 to i32
  %1401 = add nsw i32 %1400, %.1.lcssa.lcssa.6
  %1402 = sub nsw i32 %1401, 1
  %1403 = icmp sgt i32 %1402, 30
  br i1 %1403, label %1432, label %1404

; <label>:1404:                                   ; preds = %1399
  %1405 = sub nsw i32 %.1.lcssa.lcssa.6, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.6, i32 %1405)
  %1406 = add nsw i32 %.1.lcssa.lcssa.6, -1
  %1407 = add nsw i32 %1400, %.1.lcssa.lcssa.6
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1408
  store i8* null, i8** %1409, align 8
  %1410 = icmp ne i32 %1406, 0
  br i1 %1410, label %.lr.ph16.6, label %.loopexit.6

.lr.ph16.6:                                       ; preds = %1404
  %1411 = add i32 %.1.lcssa.lcssa.6, -1
  %1412 = sext i32 %1411 to i64
  %1413 = sext i32 %1400 to i64
  %scevgep4.6 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1412
  %1414 = shl i64 %1412, 1
  %1415 = shl i64 %1413, 1
  %1416 = add i64 %1414, %1415
  %scevgep9.6 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1416
  %1417 = sub i32 1, %.1.lcssa.lcssa.6
  %1418 = zext i32 %1417 to i64
  br label %1419

; <label>:1419:                                   ; preds = %1424, %.lr.ph16.6
  %lsr.iv5.6 = phi i64 [ 0, %.lr.ph16.6 ], [ %lsr.iv.next6.6, %1424 ]
  call void @unroll_loop(i32 47)
  %scevgep7.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1420 = load i8*, i8** %scevgep7.6, align 8
  %1421 = call i32 @strcmp(i8* %1420, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1422 = icmp ne i32 %1421, 0
  br i1 %1422, label %1424, label %1423

; <label>:1423:                                   ; preds = %1419
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.6

; <label>:1424:                                   ; preds = %1419
  %scevgep8.6 = getelementptr i8*, i8** %scevgep4.6, i64 %lsr.iv5.6
  %1425 = load i8*, i8** %scevgep8.6, align 8
  %1426 = call noalias i8* @strdup(i8* %1425) #9, !track !109
  %1427 = shl i64 %lsr.iv5.6, 1
  %scevgep10.6 = getelementptr i32, i32* %scevgep9.6, i64 %1427
  %scevgep1011.6 = bitcast i32* %scevgep10.6 to i8**
  store i8* %1426, i8** %scevgep1011.6, align 8
  %lsr.iv.next6.6 = add nsw i64 %lsr.iv5.6, -1
  %tmp.6 = trunc i64 %lsr.iv.next6.6 to i32
  %1428 = icmp ne i32 %1417, %tmp.6
  br i1 %1428, label %1419, label %.loopexit.loopexit.6

.loopexit.loopexit.6:                             ; preds = %1424
  br label %.loopexit.6

.loopexit.6:                                      ; preds = %.loopexit.loopexit.6, %1423, %1404
  %1429 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1430 = icmp ne i8* %1429, null
  br i1 %1430, label %1431, label %.outer.backedge.6

; <label>:1431:                                   ; preds = %.loopexit.6
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.6

; <label>:1432:                                   ; preds = %1399
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.6, i32 30)
  %1433 = add nsw i32 %.7.6, 1
  br label %.outer.backedge.6

; <label>:1434:                                   ; preds = %1384
  %1435 = load i8*, i8** %41, align 16
  %1436 = call i32 @strcasecmp(i8* %1435, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1437 = icmp ne i32 %1436, 0
  br i1 %1437, label %1445, label %1438

; <label>:1438:                                   ; preds = %1434
  %1439 = icmp ne i32 %.1.lcssa.lcssa.6, 2
  br i1 %1439, label %1443, label %1440

; <label>:1440:                                   ; preds = %1438
  %1441 = load i8*, i8** %45, align 8
  %1442 = call i32 @atoi(i8* %1441) #8
  store i32 %1442, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.6

; <label>:1443:                                   ; preds = %1438
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.6)
  %1444 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1445:                                   ; preds = %1434
  %1446 = load i8*, i8** %43, align 16
  %1447 = call i32 @strcasecmp(i8* %1446, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1448 = icmp ne i32 %1447, 0
  br i1 %1448, label %1468, label %1449

; <label>:1449:                                   ; preds = %1445
  %1450 = icmp ne i32 %.1.lcssa.lcssa.6, 4
  br i1 %1450, label %1466, label %1451

; <label>:1451:                                   ; preds = %1449
  %1452 = load i8*, i8** %46, align 8
  %1453 = load i8*, i8** %47, align 16
  %1454 = load i8*, i8** %48, align 8
  %1455 = call i32 @atoi(i8* %1454) #8
  %1456 = call i32 @conv_scoped_conf(i8* %1452, i8* %1453, i32 %1455)
  %1457 = icmp ne i32 %1456, 0
  %1458 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1459 = load i8*, i8** %49, align 8
  %1460 = load i8*, i8** %50, align 16
  %1461 = load i8*, i8** %51, align 8
  br i1 %1457, label %1464, label %1462

; <label>:1462:                                   ; preds = %1451
  %1463 = call i32 @atoi(i8* %1461) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1458, i8* %1459, i8* %1460, i32 %1463)
  br label %.outer.backedge.6

; <label>:1464:                                   ; preds = %1451
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1458, i8* %1459, i8* %1460, i8* %1461)
  %1465 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1466:                                   ; preds = %1449
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.6)
  %1467 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

; <label>:1468:                                   ; preds = %1445
  %1469 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.6, i8* %1469)
  %1470 = add nsw i32 %.03.ph.be.5, 1
  br label %.outer.backedge.6

.outer.backedge.6:                                ; preds = %1468, %1466, %1464, %1462, %1443, %1440, %1432, %1431, %.loopexit.6, %1382, %1379, %1371, %1368, %1360, %1359, %1351, %1349, %1348, %1334, %1331, %1327, %1322
  %.03.ph.be.6 = phi i32 [ %1323, %1322 ], [ %1333, %1331 ], [ %1335, %1334 ], [ %.03.ph.be.5, %1327 ], [ %1352, %1351 ], [ %1350, %1349 ], [ %.03.ph.be.5, %1348 ], [ %1361, %1360 ], [ %.03.ph.be.5, %1359 ], [ %1372, %1371 ], [ %.03.ph.be.5, %1368 ], [ %1383, %1382 ], [ %.03.ph.be.5, %1379 ], [ %1433, %1432 ], [ %.7.6, %1431 ], [ %.7.6, %.loopexit.6 ], [ %1444, %1443 ], [ %.03.ph.be.5, %1440 ], [ %1470, %1468 ], [ %1467, %1466 ], [ %1465, %1464 ], [ %.03.ph.be.5, %1462 ]
  call void @__loop_iteration_test___2()
  %1471 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  %1472 = icmp ne i8* %1471, null
  br i1 %1472, label %.lr.ph.7, label %.outer._crit_edge.loopexit1

.lr.ph.7:                                         ; preds = %.outer.backedge.6
  call void @unroll_loop(i32 48)
  br label %1473

; <label>:1473:                                   ; preds = %1507, %.lr.ph.7
  %.0712.7 = phi i32 [ %.lcssa.6, %.lr.ph.7 ], [ %1474, %1507 ]
  call void @unroll_loop(i32 44)
  %1474 = add nsw i32 %.0712.7, 1
  %1475 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1476 = icmp ne i8* %1475, null
  br i1 %1476, label %1477, label %1478

; <label>:1477:                                   ; preds = %1473
  store i8 0, i8* %1475, align 1
  br label %1478

; <label>:1478:                                   ; preds = %1477, %1473
  %1479 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1480 = icmp ne i8* %1479, null
  br i1 %1480, label %1481, label %1482

; <label>:1481:                                   ; preds = %1478
  store i8 0, i8* %1479, align 1
  br label %1482

; <label>:1482:                                   ; preds = %1481, %1478
  %1483 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1484 = icmp ne i8* %1483, null
  br i1 %1484, label %1485, label %1486

; <label>:1485:                                   ; preds = %1482
  store i8 0, i8* %1483, align 1
  br label %1486

; <label>:1486:                                   ; preds = %1485, %1482
  %1487 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1488 = icmp ne i8* %1487, null
  br i1 %1488, label %1489, label %1490

; <label>:1489:                                   ; preds = %1486
  store i8 0, i8* %1487, align 1
  br label %1490

; <label>:1490:                                   ; preds = %1489, %1486
  %1491 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1491, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1492 = load i8*, i8** %26, align 8
  %1493 = icmp ne i8* %1492, null
  %.14.7 = select i1 %1493, i32 1, i32 0
  %1494 = select i1 %1493, i1 true, i1 false
  br i1 %1494, label %.lr.ph6.preheader.7, label %._crit_edge.7

.lr.ph6.preheader.7:                              ; preds = %1490
  br label %.lr.ph6.7

.lr.ph6.7:                                        ; preds = %.lr.ph6.7, %.lr.ph6.preheader.7
  %.15.7 = phi i32 [ %.1.7, %.lr.ph6.7 ], [ %.14.7, %.lr.ph6.preheader.7 ]
  %1495 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1496 = sext i32 %.15.7 to i64
  %1497 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1496
  store i8* %1495, i8** %1497, align 8
  call void @unroll_loop(i32 45)
  %1498 = sext i32 %.15.7 to i64
  %1499 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1498
  %1500 = load i8*, i8** %1499, align 8
  %1501 = icmp ne i8* %1500, null
  %1502 = add nsw i32 %.15.7, 1
  %1503 = icmp slt i32 %1502, 30
  %.1.7 = select i1 %1501, i32 %1502, i32 %.15.7
  %1504 = select i1 %1501, i1 %1503, i1 false
  br i1 %1504, label %.lr.ph6.7, label %._crit_edge.loopexit.7

._crit_edge.loopexit.7:                           ; preds = %.lr.ph6.7
  %.1.lcssa.ph.7 = phi i32 [ %.1.7, %.lr.ph6.7 ]
  br label %._crit_edge.7

._crit_edge.7:                                    ; preds = %._crit_edge.loopexit.7, %1490
  %.1.lcssa.7 = phi i32 [ %.14.7, %1490 ], [ %.1.lcssa.ph.7, %._crit_edge.loopexit.7 ]
  %1505 = load i8*, i8** %27, align 16
  %1506 = icmp ne i8* %1505, null
  br i1 %1506, label %1510, label %1507

; <label>:1507:                                   ; preds = %._crit_edge.7
  %1508 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1509 = icmp ne i8* %1508, null
  br i1 %1509, label %1473, label %.outer._crit_edge.loopexit.loopexit7

; <label>:1510:                                   ; preds = %._crit_edge.7
  %.1.lcssa.lcssa.7 = phi i32 [ %.1.lcssa.7, %._crit_edge.7 ]
  %.lcssa.7 = phi i32 [ %1474, %._crit_edge.7 ]
  %1511 = load i8*, i8** %28, align 16
  %1512 = call i32 @strcasecmp(i8* %1511, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.222, i64 0, i64 0)) #8
  %1513 = icmp ne i32 %1512, 0
  br i1 %1513, label %1539, label %1514

; <label>:1514:                                   ; preds = %1510
  %1515 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  %1516 = icmp sgt i32 %.1.lcssa.lcssa.7, 4
  %or.cond.7 = or i1 %1515, %1516
  br i1 %or.cond.7, label %1537, label %1517

; <label>:1517:                                   ; preds = %1514
  %1518 = icmp sgt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1518, label %1519, label %1530

; <label>:1519:                                   ; preds = %1517
  %1520 = load i8*, i8** %34, align 8
  %1521 = call i32 @strcasecmp(i8* %1520, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1522 = icmp ne i32 %1521, 0
  br i1 %1522, label %1534, label %1523

; <label>:1523:                                   ; preds = %1519
  %1524 = icmp sge i32 %.1.lcssa.lcssa.7, 3
  br i1 %1524, label %1527, label %1525

; <label>:1525:                                   ; preds = %1523
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.7.225, i64 0, i64 0), i32 %.lcssa.7)
  %1526 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1527:                                   ; preds = %1523
  %1528 = load i8*, i8** %40, align 8
  %1529 = call i32 @atoi(i8* %1528) #8
  br label %1530

; <label>:1530:                                   ; preds = %1527, %1517
  %.08.7 = phi i32 [ %1529, %1527 ], [ 53, %1517 ]
  %1531 = load i8*, i8** %35, align 8
  %1532 = call i32 @fwd_add(i8* %1531, i32 %.08.7)
  %1533 = icmp eq i32 %1532, -1
  br i1 %1533, label %.loopexit1.loopexit, label %.outer.backedge.7

; <label>:1534:                                   ; preds = %1519
  %1535 = load i8*, i8** %37, align 8
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.226, i64 0, i64 0), i32 %.lcssa.7, i8* %1535)
  %1536 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1537:                                   ; preds = %1514
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5.223, i64 0, i64 0), i32 %.lcssa.7)
  %1538 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1539:                                   ; preds = %1510
  %1540 = load i8*, i8** %29, align 16
  %1541 = call i32 @strcasecmp(i8* %1540, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9.227, i64 0, i64 0)) #8
  %1542 = icmp ne i32 %1541, 0
  br i1 %1542, label %1556, label %1543

; <label>:1543:                                   ; preds = %1539
  %1544 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1544, label %1554, label %1545

; <label>:1545:                                   ; preds = %1543
  %1546 = load i8*, i8** %32, align 8
  %1547 = call i32 @conv_trick_conf(i8* %1546)
  %1548 = icmp ne i32 %1547, 0
  %1549 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 19), align 8
  %1550 = load i8*, i8** %33, align 8
  br i1 %1548, label %1552, label %1551

; <label>:1551:                                   ; preds = %1545
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12.230, i64 0, i64 0), i32 %1549, i8* %1550)
  br label %.outer.backedge.7

; <label>:1552:                                   ; preds = %1545
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.229, i64 0, i64 0), i32 %1549, i8* %1550)
  %1553 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1554:                                   ; preds = %1543
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10.228, i64 0, i64 0), i32 %.lcssa.7)
  %1555 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1556:                                   ; preds = %1539
  %1557 = load i8*, i8** %30, align 16
  %1558 = call i32 @strcasecmp(i8* %1557, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.231, i64 0, i64 0)) #8
  %1559 = icmp ne i32 %1558, 0
  br i1 %1559, label %1565, label %1560

; <label>:1560:                                   ; preds = %1556
  %1561 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1561, label %1563, label %1562

; <label>:1562:                                   ; preds = %1560
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15.233, i64 0, i64 0))
  br label %.outer.backedge.7

; <label>:1563:                                   ; preds = %1560
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14.232, i64 0, i64 0), i32 %.lcssa.7)
  %1564 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1565:                                   ; preds = %1556
  %1566 = load i8*, i8** %31, align 16
  %1567 = call i32 @strcasecmp(i8* %1566, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16.234, i64 0, i64 0)) #8
  %1568 = icmp ne i32 %1567, 0
  br i1 %1568, label %1576, label %1569

; <label>:1569:                                   ; preds = %1565
  %1570 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1570, label %1574, label %1571

; <label>:1571:                                   ; preds = %1569
  %1572 = load i8*, i8** %39, align 8
  %1573 = call i32 @atoi(i8* %1572) #8
  store i32 %1573, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 10), align 4
  br label %.outer.backedge.7

; <label>:1574:                                   ; preds = %1569
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17.235, i64 0, i64 0), i32 %.lcssa.7)
  %1575 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1576:                                   ; preds = %1565
  %1577 = load i8*, i8** %36, align 16
  %1578 = call i32 @strcasecmp(i8* %1577, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18.236, i64 0, i64 0)) #8
  %1579 = icmp ne i32 %1578, 0
  br i1 %1579, label %1587, label %1580

; <label>:1580:                                   ; preds = %1576
  %1581 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1581, label %1585, label %1582

; <label>:1582:                                   ; preds = %1580
  %1583 = load i8*, i8** %42, align 8
  %1584 = call noalias i8* @strdup(i8* %1583) #9, !track !108
  store i8* %1584, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 1), align 8
  br label %.outer.backedge.7

; <label>:1585:                                   ; preds = %1580
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19.237, i64 0, i64 0), i32 %.lcssa.7)
  %1586 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1587:                                   ; preds = %1576
  %1588 = load i8*, i8** %38, align 16
  %1589 = call i32 @strcasecmp(i8* %1588, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.238, i64 0, i64 0)) #8
  %1590 = icmp ne i32 %1589, 0
  br i1 %1590, label %1637, label %1591

; <label>:1591:                                   ; preds = %1587
  %1592 = icmp slt i32 %.1.lcssa.lcssa.7, 2
  br i1 %1592, label %1593, label %1595

; <label>:1593:                                   ; preds = %1591
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.21.239, i64 0, i64 0), i32 %.lcssa.7)
  %1594 = add nsw i32 %.03.ph.be.6, 1
  br label %1595

; <label>:1595:                                   ; preds = %1593, %1591
  %.7.7 = phi i32 [ %1594, %1593 ], [ %.03.ph.be.6, %1591 ]
  br label %1596

; <label>:1596:                                   ; preds = %1596, %1595
  %lsr.iv.7 = phi i64 [ %lsr.iv.next.7, %1596 ], [ -1, %1595 ]
  %1597 = add i64 %lsr.iv.7, 1
  call void @unroll_loop(i32 46)
  %1598 = shl i64 %lsr.iv.7, 3
  %uglygep.7 = getelementptr i8, i8* bitcast (%struct.ToT* @T to i8*), i64 %1598
  %uglygep3.7 = bitcast i8* %uglygep.7 to i8**
  %scevgep.7 = getelementptr i8*, i8** %uglygep3.7, i64 111
  %1599 = load i8*, i8** %scevgep.7, align 8
  %1600 = icmp ne i8* %1599, null
  %1601 = icmp ult i64 %1597, 30
  %spec.select.7 = select i1 %1600, i1 %1601, i1 false
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %spec.select.7, label %1596, label %1602

; <label>:1602:                                   ; preds = %1596
  %.01.lcssa.wide.7 = phi i64 [ %lsr.iv.next.7, %1596 ]
  %1603 = trunc i64 %.01.lcssa.wide.7 to i32
  %1604 = add nsw i32 %1603, %.1.lcssa.lcssa.7
  %1605 = sub nsw i32 %1604, 1
  %1606 = icmp sgt i32 %1605, 30
  br i1 %1606, label %1635, label %1607

; <label>:1607:                                   ; preds = %1602
  %1608 = sub nsw i32 %.1.lcssa.lcssa.7, 1
  call void (i32, i8*, ...) @syslog(i32 7, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23.241, i64 0, i64 0), i32 %.lcssa.7, i32 %1608)
  %1609 = add nsw i32 %.1.lcssa.lcssa.7, -1
  %1610 = add nsw i32 %1603, %.1.lcssa.lcssa.7
  %1611 = sext i32 %1610 to i64
  %1612 = getelementptr inbounds [31 x i8*], [31 x i8*]* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24), i64 0, i64 %1611
  store i8* null, i8** %1612, align 8
  %1613 = icmp ne i32 %1609, 0
  br i1 %1613, label %.lr.ph16.7, label %.loopexit.7

.lr.ph16.7:                                       ; preds = %1607
  %1614 = add i32 %.1.lcssa.lcssa.7, -1
  %1615 = sext i32 %1614 to i64
  %1616 = sext i32 %1603 to i64
  %scevgep4.7 = getelementptr [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1615
  %1617 = shl i64 %1615, 1
  %1618 = shl i64 %1616, 1
  %1619 = add i64 %1617, %1618
  %scevgep9.7 = getelementptr i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 23), i64 %1619
  %1620 = sub i32 1, %.1.lcssa.lcssa.7
  %1621 = zext i32 %1620 to i64
  br label %1622

; <label>:1622:                                   ; preds = %1627, %.lr.ph16.7
  %lsr.iv5.7 = phi i64 [ 0, %.lr.ph16.7 ], [ %lsr.iv.next6.7, %1627 ]
  call void @unroll_loop(i32 47)
  %scevgep7.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1623 = load i8*, i8** %scevgep7.7, align 8
  %1624 = call i32 @strcmp(i8* %1623, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24.242, i64 0, i64 0)) #8
  %1625 = icmp ne i32 %1624, 0
  br i1 %1625, label %1627, label %1626

; <label>:1626:                                   ; preds = %1622
  store i8* null, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.loopexit.7

; <label>:1627:                                   ; preds = %1622
  %scevgep8.7 = getelementptr i8*, i8** %scevgep4.7, i64 %lsr.iv5.7
  %1628 = load i8*, i8** %scevgep8.7, align 8
  %1629 = call noalias i8* @strdup(i8* %1628) #9, !track !109
  %1630 = shl i64 %lsr.iv5.7, 1
  %scevgep10.7 = getelementptr i32, i32* %scevgep9.7, i64 %1630
  %scevgep1011.7 = bitcast i32* %scevgep10.7 to i8**
  store i8* %1629, i8** %scevgep1011.7, align 8
  %lsr.iv.next6.7 = add nsw i64 %lsr.iv5.7, -1
  %tmp.7 = trunc i64 %lsr.iv.next6.7 to i32
  %1631 = icmp ne i32 %1620, %tmp.7
  br i1 %1631, label %1622, label %.loopexit.loopexit.7

.loopexit.loopexit.7:                             ; preds = %1627
  br label %.loopexit.7

.loopexit.7:                                      ; preds = %.loopexit.loopexit.7, %1626, %1607
  %1632 = load i8*, i8** getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 24, i64 0), align 8
  %1633 = icmp ne i8* %1632, null
  br i1 %1633, label %1634, label %.outer.backedge.7

; <label>:1634:                                   ; preds = %.loopexit.7
  store i32 0, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 15), align 8
  br label %.outer.backedge.7

; <label>:1635:                                   ; preds = %1602
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22.240, i64 0, i64 0), i32 %.lcssa.7, i32 30)
  %1636 = add nsw i32 %.7.7, 1
  br label %.outer.backedge.7

; <label>:1637:                                   ; preds = %1587
  %1638 = load i8*, i8** %41, align 16
  %1639 = call i32 @strcasecmp(i8* %1638, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.224, i64 0, i64 0)) #8
  %1640 = icmp ne i32 %1639, 0
  br i1 %1640, label %1648, label %1641

; <label>:1641:                                   ; preds = %1637
  %1642 = icmp ne i32 %.1.lcssa.lcssa.7, 2
  br i1 %1642, label %1646, label %1643

; <label>:1643:                                   ; preds = %1641
  %1644 = load i8*, i8** %45, align 8
  %1645 = call i32 @atoi(i8* %1644) #8
  store i32 %1645, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 9), align 8
  br label %.outer.backedge.7

; <label>:1646:                                   ; preds = %1641
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.243, i64 0, i64 0), i32 %.lcssa.7)
  %1647 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1648:                                   ; preds = %1637
  %1649 = load i8*, i8** %43, align 16
  %1650 = call i32 @strcasecmp(i8* %1649, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26.244, i64 0, i64 0)) #8
  %1651 = icmp ne i32 %1650, 0
  br i1 %1651, label %1671, label %1652

; <label>:1652:                                   ; preds = %1648
  %1653 = icmp ne i32 %.1.lcssa.lcssa.7, 4
  br i1 %1653, label %1669, label %1654

; <label>:1654:                                   ; preds = %1652
  %1655 = load i8*, i8** %46, align 8
  %1656 = load i8*, i8** %47, align 16
  %1657 = load i8*, i8** %48, align 8
  %1658 = call i32 @atoi(i8* %1657) #8
  %1659 = call i32 @conv_scoped_conf(i8* %1655, i8* %1656, i32 %1658)
  %1660 = icmp ne i32 %1659, 0
  %1661 = load i32, i32* getelementptr inbounds (%struct.ToT, %struct.ToT* @T, i64 0, i32 25), align 8
  %1662 = load i8*, i8** %49, align 8
  %1663 = load i8*, i8** %50, align 16
  %1664 = load i8*, i8** %51, align 8
  br i1 %1660, label %1667, label %1665

; <label>:1665:                                   ; preds = %1654
  %1666 = call i32 @atoi(i8* %1664) #8
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29.247, i64 0, i64 0), i32 %1661, i8* %1662, i8* %1663, i32 %1666)
  br label %.outer.backedge.7

; <label>:1667:                                   ; preds = %1654
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.28.246, i64 0, i64 0), i32 %1661, i8* %1662, i8* %1663, i8* %1664)
  %1668 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1669:                                   ; preds = %1652
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.27.245, i64 0, i64 0), i32 %.lcssa.7)
  %1670 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

; <label>:1671:                                   ; preds = %1648
  %1672 = load i8*, i8** %44, align 16
  call void (i32, i8*, ...) @syslog(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30.248, i64 0, i64 0), i32 %.lcssa.7, i8* %1672)
  %1673 = add nsw i32 %.03.ph.be.6, 1
  br label %.outer.backedge.7

.outer.backedge.7:                                ; preds = %1671, %1669, %1667, %1665, %1646, %1643, %1635, %1634, %.loopexit.7, %1585, %1582, %1574, %1571, %1563, %1562, %1554, %1552, %1551, %1537, %1534, %1530, %1525
  %.03.ph.be.7 = phi i32 [ %1526, %1525 ], [ %1536, %1534 ], [ %1538, %1537 ], [ %.03.ph.be.6, %1530 ], [ %1555, %1554 ], [ %1553, %1552 ], [ %.03.ph.be.6, %1551 ], [ %1564, %1563 ], [ %.03.ph.be.6, %1562 ], [ %1575, %1574 ], [ %.03.ph.be.6, %1571 ], [ %1586, %1585 ], [ %.03.ph.be.6, %1582 ], [ %1636, %1635 ], [ %.7.7, %1634 ], [ %.7.7, %.loopexit.7 ], [ %1647, %1646 ], [ %.03.ph.be.6, %1643 ], [ %1673, %1671 ], [ %1670, %1669 ], [ %1668, %1667 ], [ %.03.ph.be.6, %1665 ]
  call void @__loop_iteration_test___2()
  %1674 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !110
  br label %.outer._crit_edge.loopexit1

; <label>:1675:                                   ; preds = %52
  call void @unroll_loop(i32 44)
  %1676 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1677 = icmp ne i8* %1676, null
  br i1 %1677, label %1678, label %1679

; <label>:1678:                                   ; preds = %1675
  store i8 0, i8* %1676, align 1
  br label %1679

; <label>:1679:                                   ; preds = %1678, %1675
  %1680 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1681 = icmp ne i8* %1680, null
  br i1 %1681, label %1682, label %1683

; <label>:1682:                                   ; preds = %1679
  store i8 0, i8* %1680, align 1
  br label %1683

; <label>:1683:                                   ; preds = %1682, %1679
  %1684 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1685 = icmp ne i8* %1684, null
  br i1 %1685, label %1686, label %1687

; <label>:1686:                                   ; preds = %1683
  store i8 0, i8* %1684, align 1
  br label %1687

; <label>:1687:                                   ; preds = %1686, %1683
  %1688 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1689 = icmp ne i8* %1688, null
  br i1 %1689, label %1690, label %1691

; <label>:1690:                                   ; preds = %1687
  store i8 0, i8* %1688, align 1
  br label %1691

; <label>:1691:                                   ; preds = %1690, %1687
  %1692 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1692, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1693 = load i8*, i8** %26, align 8
  %1694 = icmp ne i8* %1693, null
  %.14.12 = select i1 %1694, i32 1, i32 0
  %1695 = select i1 %1694, i1 true, i1 false
  br i1 %1695, label %.lr.ph6.preheader.13, label %._crit_edge.110

.lr.ph6.preheader.13:                             ; preds = %1691
  br label %.lr.ph6.16

.lr.ph6.16:                                       ; preds = %.lr.ph6.16, %.lr.ph6.preheader.13
  %.15.14 = phi i32 [ %.1.15, %.lr.ph6.16 ], [ %.14.12, %.lr.ph6.preheader.13 ]
  %1696 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1697 = sext i32 %.15.14 to i64
  %1698 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1697
  store i8* %1696, i8** %1698, align 8
  call void @unroll_loop(i32 45)
  %1699 = sext i32 %.15.14 to i64
  %1700 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1699
  %1701 = load i8*, i8** %1700, align 8
  %1702 = icmp ne i8* %1701, null
  %1703 = add nsw i32 %.15.14, 1
  %1704 = icmp slt i32 %1703, 30
  %.1.15 = select i1 %1702, i32 %1703, i32 %.15.14
  %1705 = select i1 %1702, i1 %1704, i1 false
  br i1 %1705, label %.lr.ph6.16, label %._crit_edge.loopexit.18

._crit_edge.loopexit.18:                          ; preds = %.lr.ph6.16
  %.1.lcssa.ph.17 = phi i32 [ %.1.15, %.lr.ph6.16 ]
  br label %._crit_edge.110

._crit_edge.110:                                  ; preds = %._crit_edge.loopexit.18, %1691
  %.1.lcssa.19 = phi i32 [ %.14.12, %1691 ], [ %.1.lcssa.ph.17, %._crit_edge.loopexit.18 ]
  %1706 = load i8*, i8** %27, align 16
  %1707 = icmp ne i8* %1706, null
  br i1 %1707, label %91, label %1708

; <label>:1708:                                   ; preds = %._crit_edge.110
  call void @__loop_iteration_test___3()
  %1709 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1710 = icmp ne i8* %1709, null
  br i1 %1710, label %1711, label %.outer._crit_edge.loopexit.loopexit

; <label>:1711:                                   ; preds = %1708
  call void @unroll_loop(i32 44)
  %1712 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1713 = icmp ne i8* %1712, null
  br i1 %1713, label %1714, label %1715

; <label>:1714:                                   ; preds = %1711
  store i8 0, i8* %1712, align 1
  br label %1715

; <label>:1715:                                   ; preds = %1714, %1711
  %1716 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1717 = icmp ne i8* %1716, null
  br i1 %1717, label %1718, label %1719

; <label>:1718:                                   ; preds = %1715
  store i8 0, i8* %1716, align 1
  br label %1719

; <label>:1719:                                   ; preds = %1718, %1715
  %1720 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1721 = icmp ne i8* %1720, null
  br i1 %1721, label %1722, label %1723

; <label>:1722:                                   ; preds = %1719
  store i8 0, i8* %1720, align 1
  br label %1723

; <label>:1723:                                   ; preds = %1722, %1719
  %1724 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1725 = icmp ne i8* %1724, null
  br i1 %1725, label %1726, label %1727

; <label>:1726:                                   ; preds = %1723
  store i8 0, i8* %1724, align 1
  br label %1727

; <label>:1727:                                   ; preds = %1726, %1723
  %1728 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1728, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1729 = load i8*, i8** %26, align 8
  %1730 = icmp ne i8* %1729, null
  %.14.212 = select i1 %1730, i32 1, i32 0
  %1731 = select i1 %1730, i1 true, i1 false
  br i1 %1731, label %.lr.ph6.preheader.213, label %._crit_edge.220

.lr.ph6.preheader.213:                            ; preds = %1727
  br label %.lr.ph6.216

.lr.ph6.216:                                      ; preds = %.lr.ph6.216, %.lr.ph6.preheader.213
  %.15.214 = phi i32 [ %.1.215, %.lr.ph6.216 ], [ %.14.212, %.lr.ph6.preheader.213 ]
  %1732 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1733 = sext i32 %.15.214 to i64
  %1734 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1733
  store i8* %1732, i8** %1734, align 8
  call void @unroll_loop(i32 45)
  %1735 = sext i32 %.15.214 to i64
  %1736 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1735
  %1737 = load i8*, i8** %1736, align 8
  %1738 = icmp ne i8* %1737, null
  %1739 = add nsw i32 %.15.214, 1
  %1740 = icmp slt i32 %1739, 30
  %.1.215 = select i1 %1738, i32 %1739, i32 %.15.214
  %1741 = select i1 %1738, i1 %1740, i1 false
  br i1 %1741, label %.lr.ph6.216, label %._crit_edge.loopexit.218

._crit_edge.loopexit.218:                         ; preds = %.lr.ph6.216
  %.1.lcssa.ph.217 = phi i32 [ %.1.215, %.lr.ph6.216 ]
  br label %._crit_edge.220

._crit_edge.220:                                  ; preds = %._crit_edge.loopexit.218, %1727
  %.1.lcssa.219 = phi i32 [ %.14.212, %1727 ], [ %.1.lcssa.ph.217, %._crit_edge.loopexit.218 ]
  %1742 = load i8*, i8** %27, align 16
  %1743 = icmp ne i8* %1742, null
  br i1 %1743, label %91, label %1744

; <label>:1744:                                   ; preds = %._crit_edge.220
  call void @__loop_iteration_test___3()
  %1745 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1746 = icmp ne i8* %1745, null
  br i1 %1746, label %1747, label %.outer._crit_edge.loopexit.loopexit

; <label>:1747:                                   ; preds = %1744
  call void @unroll_loop(i32 44)
  %1748 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1749 = icmp ne i8* %1748, null
  br i1 %1749, label %1750, label %1751

; <label>:1750:                                   ; preds = %1747
  store i8 0, i8* %1748, align 1
  br label %1751

; <label>:1751:                                   ; preds = %1750, %1747
  %1752 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1753 = icmp ne i8* %1752, null
  br i1 %1753, label %1754, label %1755

; <label>:1754:                                   ; preds = %1751
  store i8 0, i8* %1752, align 1
  br label %1755

; <label>:1755:                                   ; preds = %1754, %1751
  %1756 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1757 = icmp ne i8* %1756, null
  br i1 %1757, label %1758, label %1759

; <label>:1758:                                   ; preds = %1755
  store i8 0, i8* %1756, align 1
  br label %1759

; <label>:1759:                                   ; preds = %1758, %1755
  %1760 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1761 = icmp ne i8* %1760, null
  br i1 %1761, label %1762, label %1763

; <label>:1762:                                   ; preds = %1759
  store i8 0, i8* %1760, align 1
  br label %1763

; <label>:1763:                                   ; preds = %1762, %1759
  %1764 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1764, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1765 = load i8*, i8** %26, align 8
  %1766 = icmp ne i8* %1765, null
  %.14.322 = select i1 %1766, i32 1, i32 0
  %1767 = select i1 %1766, i1 true, i1 false
  br i1 %1767, label %.lr.ph6.preheader.323, label %._crit_edge.330

.lr.ph6.preheader.323:                            ; preds = %1763
  br label %.lr.ph6.326

.lr.ph6.326:                                      ; preds = %.lr.ph6.326, %.lr.ph6.preheader.323
  %.15.324 = phi i32 [ %.1.325, %.lr.ph6.326 ], [ %.14.322, %.lr.ph6.preheader.323 ]
  %1768 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1769 = sext i32 %.15.324 to i64
  %1770 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1769
  store i8* %1768, i8** %1770, align 8
  call void @unroll_loop(i32 45)
  %1771 = sext i32 %.15.324 to i64
  %1772 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1771
  %1773 = load i8*, i8** %1772, align 8
  %1774 = icmp ne i8* %1773, null
  %1775 = add nsw i32 %.15.324, 1
  %1776 = icmp slt i32 %1775, 30
  %.1.325 = select i1 %1774, i32 %1775, i32 %.15.324
  %1777 = select i1 %1774, i1 %1776, i1 false
  br i1 %1777, label %.lr.ph6.326, label %._crit_edge.loopexit.328

._crit_edge.loopexit.328:                         ; preds = %.lr.ph6.326
  %.1.lcssa.ph.327 = phi i32 [ %.1.325, %.lr.ph6.326 ]
  br label %._crit_edge.330

._crit_edge.330:                                  ; preds = %._crit_edge.loopexit.328, %1763
  %.1.lcssa.329 = phi i32 [ %.14.322, %1763 ], [ %.1.lcssa.ph.327, %._crit_edge.loopexit.328 ]
  %1778 = load i8*, i8** %27, align 16
  %1779 = icmp ne i8* %1778, null
  br i1 %1779, label %91, label %1780

; <label>:1780:                                   ; preds = %._crit_edge.330
  call void @__loop_iteration_test___3()
  %1781 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1782 = icmp ne i8* %1781, null
  br i1 %1782, label %1783, label %.outer._crit_edge.loopexit.loopexit

; <label>:1783:                                   ; preds = %1780
  call void @unroll_loop(i32 44)
  %1784 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1785 = icmp ne i8* %1784, null
  br i1 %1785, label %1786, label %1787

; <label>:1786:                                   ; preds = %1783
  store i8 0, i8* %1784, align 1
  br label %1787

; <label>:1787:                                   ; preds = %1786, %1783
  %1788 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1789 = icmp ne i8* %1788, null
  br i1 %1789, label %1790, label %1791

; <label>:1790:                                   ; preds = %1787
  store i8 0, i8* %1788, align 1
  br label %1791

; <label>:1791:                                   ; preds = %1790, %1787
  %1792 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1793 = icmp ne i8* %1792, null
  br i1 %1793, label %1794, label %1795

; <label>:1794:                                   ; preds = %1791
  store i8 0, i8* %1792, align 1
  br label %1795

; <label>:1795:                                   ; preds = %1794, %1791
  %1796 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1797 = icmp ne i8* %1796, null
  br i1 %1797, label %1798, label %1799

; <label>:1798:                                   ; preds = %1795
  store i8 0, i8* %1796, align 1
  br label %1799

; <label>:1799:                                   ; preds = %1798, %1795
  %1800 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1800, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1801 = load i8*, i8** %26, align 8
  %1802 = icmp ne i8* %1801, null
  %.14.432 = select i1 %1802, i32 1, i32 0
  %1803 = select i1 %1802, i1 true, i1 false
  br i1 %1803, label %.lr.ph6.preheader.433, label %._crit_edge.440

.lr.ph6.preheader.433:                            ; preds = %1799
  br label %.lr.ph6.436

.lr.ph6.436:                                      ; preds = %.lr.ph6.436, %.lr.ph6.preheader.433
  %.15.434 = phi i32 [ %.1.435, %.lr.ph6.436 ], [ %.14.432, %.lr.ph6.preheader.433 ]
  %1804 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1805 = sext i32 %.15.434 to i64
  %1806 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1805
  store i8* %1804, i8** %1806, align 8
  call void @unroll_loop(i32 45)
  %1807 = sext i32 %.15.434 to i64
  %1808 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1807
  %1809 = load i8*, i8** %1808, align 8
  %1810 = icmp ne i8* %1809, null
  %1811 = add nsw i32 %.15.434, 1
  %1812 = icmp slt i32 %1811, 30
  %.1.435 = select i1 %1810, i32 %1811, i32 %.15.434
  %1813 = select i1 %1810, i1 %1812, i1 false
  br i1 %1813, label %.lr.ph6.436, label %._crit_edge.loopexit.438

._crit_edge.loopexit.438:                         ; preds = %.lr.ph6.436
  %.1.lcssa.ph.437 = phi i32 [ %.1.435, %.lr.ph6.436 ]
  br label %._crit_edge.440

._crit_edge.440:                                  ; preds = %._crit_edge.loopexit.438, %1799
  %.1.lcssa.439 = phi i32 [ %.14.432, %1799 ], [ %.1.lcssa.ph.437, %._crit_edge.loopexit.438 ]
  %1814 = load i8*, i8** %27, align 16
  %1815 = icmp ne i8* %1814, null
  br i1 %1815, label %91, label %1816

; <label>:1816:                                   ; preds = %._crit_edge.440
  call void @__loop_iteration_test___3()
  %1817 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1818 = icmp ne i8* %1817, null
  br i1 %1818, label %1819, label %.outer._crit_edge.loopexit.loopexit

; <label>:1819:                                   ; preds = %1816
  call void @unroll_loop(i32 44)
  %1820 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1821 = icmp ne i8* %1820, null
  br i1 %1821, label %1822, label %1823

; <label>:1822:                                   ; preds = %1819
  store i8 0, i8* %1820, align 1
  br label %1823

; <label>:1823:                                   ; preds = %1822, %1819
  %1824 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1825 = icmp ne i8* %1824, null
  br i1 %1825, label %1826, label %1827

; <label>:1826:                                   ; preds = %1823
  store i8 0, i8* %1824, align 1
  br label %1827

; <label>:1827:                                   ; preds = %1826, %1823
  %1828 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1829 = icmp ne i8* %1828, null
  br i1 %1829, label %1830, label %1831

; <label>:1830:                                   ; preds = %1827
  store i8 0, i8* %1828, align 1
  br label %1831

; <label>:1831:                                   ; preds = %1830, %1827
  %1832 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1833 = icmp ne i8* %1832, null
  br i1 %1833, label %1834, label %1835

; <label>:1834:                                   ; preds = %1831
  store i8 0, i8* %1832, align 1
  br label %1835

; <label>:1835:                                   ; preds = %1834, %1831
  %1836 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1836, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1837 = load i8*, i8** %26, align 8
  %1838 = icmp ne i8* %1837, null
  %.14.542 = select i1 %1838, i32 1, i32 0
  %1839 = select i1 %1838, i1 true, i1 false
  br i1 %1839, label %.lr.ph6.preheader.543, label %._crit_edge.550

.lr.ph6.preheader.543:                            ; preds = %1835
  br label %.lr.ph6.546

.lr.ph6.546:                                      ; preds = %.lr.ph6.546, %.lr.ph6.preheader.543
  %.15.544 = phi i32 [ %.1.545, %.lr.ph6.546 ], [ %.14.542, %.lr.ph6.preheader.543 ]
  %1840 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1841 = sext i32 %.15.544 to i64
  %1842 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1841
  store i8* %1840, i8** %1842, align 8
  call void @unroll_loop(i32 45)
  %1843 = sext i32 %.15.544 to i64
  %1844 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1843
  %1845 = load i8*, i8** %1844, align 8
  %1846 = icmp ne i8* %1845, null
  %1847 = add nsw i32 %.15.544, 1
  %1848 = icmp slt i32 %1847, 30
  %.1.545 = select i1 %1846, i32 %1847, i32 %.15.544
  %1849 = select i1 %1846, i1 %1848, i1 false
  br i1 %1849, label %.lr.ph6.546, label %._crit_edge.loopexit.548

._crit_edge.loopexit.548:                         ; preds = %.lr.ph6.546
  %.1.lcssa.ph.547 = phi i32 [ %.1.545, %.lr.ph6.546 ]
  br label %._crit_edge.550

._crit_edge.550:                                  ; preds = %._crit_edge.loopexit.548, %1835
  %.1.lcssa.549 = phi i32 [ %.14.542, %1835 ], [ %.1.lcssa.ph.547, %._crit_edge.loopexit.548 ]
  %1850 = load i8*, i8** %27, align 16
  %1851 = icmp ne i8* %1850, null
  br i1 %1851, label %91, label %1852

; <label>:1852:                                   ; preds = %._crit_edge.550
  call void @__loop_iteration_test___3()
  %1853 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1854 = icmp ne i8* %1853, null
  br i1 %1854, label %1855, label %.outer._crit_edge.loopexit.loopexit

; <label>:1855:                                   ; preds = %1852
  call void @unroll_loop(i32 44)
  %1856 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1857 = icmp ne i8* %1856, null
  br i1 %1857, label %1858, label %1859

; <label>:1858:                                   ; preds = %1855
  store i8 0, i8* %1856, align 1
  br label %1859

; <label>:1859:                                   ; preds = %1858, %1855
  %1860 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1861 = icmp ne i8* %1860, null
  br i1 %1861, label %1862, label %1863

; <label>:1862:                                   ; preds = %1859
  store i8 0, i8* %1860, align 1
  br label %1863

; <label>:1863:                                   ; preds = %1862, %1859
  %1864 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1865 = icmp ne i8* %1864, null
  br i1 %1865, label %1866, label %1867

; <label>:1866:                                   ; preds = %1863
  store i8 0, i8* %1864, align 1
  br label %1867

; <label>:1867:                                   ; preds = %1866, %1863
  %1868 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1869 = icmp ne i8* %1868, null
  br i1 %1869, label %1870, label %1871

; <label>:1870:                                   ; preds = %1867
  store i8 0, i8* %1868, align 1
  br label %1871

; <label>:1871:                                   ; preds = %1870, %1867
  %1872 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1872, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1873 = load i8*, i8** %26, align 8
  %1874 = icmp ne i8* %1873, null
  %.14.652 = select i1 %1874, i32 1, i32 0
  %1875 = select i1 %1874, i1 true, i1 false
  br i1 %1875, label %.lr.ph6.preheader.653, label %._crit_edge.660

.lr.ph6.preheader.653:                            ; preds = %1871
  br label %.lr.ph6.656

.lr.ph6.656:                                      ; preds = %.lr.ph6.656, %.lr.ph6.preheader.653
  %.15.654 = phi i32 [ %.1.655, %.lr.ph6.656 ], [ %.14.652, %.lr.ph6.preheader.653 ]
  %1876 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1877 = sext i32 %.15.654 to i64
  %1878 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1877
  store i8* %1876, i8** %1878, align 8
  call void @unroll_loop(i32 45)
  %1879 = sext i32 %.15.654 to i64
  %1880 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1879
  %1881 = load i8*, i8** %1880, align 8
  %1882 = icmp ne i8* %1881, null
  %1883 = add nsw i32 %.15.654, 1
  %1884 = icmp slt i32 %1883, 30
  %.1.655 = select i1 %1882, i32 %1883, i32 %.15.654
  %1885 = select i1 %1882, i1 %1884, i1 false
  br i1 %1885, label %.lr.ph6.656, label %._crit_edge.loopexit.658

._crit_edge.loopexit.658:                         ; preds = %.lr.ph6.656
  %.1.lcssa.ph.657 = phi i32 [ %.1.655, %.lr.ph6.656 ]
  br label %._crit_edge.660

._crit_edge.660:                                  ; preds = %._crit_edge.loopexit.658, %1871
  %.1.lcssa.659 = phi i32 [ %.14.652, %1871 ], [ %.1.lcssa.ph.657, %._crit_edge.loopexit.658 ]
  %1886 = load i8*, i8** %27, align 16
  %1887 = icmp ne i8* %1886, null
  br i1 %1887, label %91, label %1888

; <label>:1888:                                   ; preds = %._crit_edge.660
  call void @__loop_iteration_test___3()
  %1889 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %1890 = icmp ne i8* %1889, null
  br i1 %1890, label %1891, label %.outer._crit_edge.loopexit.loopexit

; <label>:1891:                                   ; preds = %1888
  call void @unroll_loop(i32 44)
  %1892 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %1893 = icmp ne i8* %1892, null
  br i1 %1893, label %1894, label %1895

; <label>:1894:                                   ; preds = %1891
  store i8 0, i8* %1892, align 1
  br label %1895

; <label>:1895:                                   ; preds = %1894, %1891
  %1896 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %1897 = icmp ne i8* %1896, null
  br i1 %1897, label %1898, label %1899

; <label>:1898:                                   ; preds = %1895
  store i8 0, i8* %1896, align 1
  br label %1899

; <label>:1899:                                   ; preds = %1898, %1895
  %1900 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %1901 = icmp ne i8* %1900, null
  br i1 %1901, label %1902, label %1903

; <label>:1902:                                   ; preds = %1899
  store i8 0, i8* %1900, align 1
  br label %1903

; <label>:1903:                                   ; preds = %1902, %1899
  %1904 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %1905 = icmp ne i8* %1904, null
  br i1 %1905, label %1906, label %1907

; <label>:1906:                                   ; preds = %1903
  store i8 0, i8* %1904, align 1
  br label %1907

; <label>:1907:                                   ; preds = %1906, %1903
  %1908 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %1908, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %1909 = load i8*, i8** %26, align 8
  %1910 = icmp ne i8* %1909, null
  %.14.762 = select i1 %1910, i32 1, i32 0
  %1911 = select i1 %1910, i1 true, i1 false
  br i1 %1911, label %.lr.ph6.preheader.763, label %._crit_edge.770

.lr.ph6.preheader.763:                            ; preds = %1907
  br label %.lr.ph6.766

.lr.ph6.766:                                      ; preds = %.lr.ph6.766, %.lr.ph6.preheader.763
  %.15.764 = phi i32 [ %.1.765, %.lr.ph6.766 ], [ %.14.762, %.lr.ph6.preheader.763 ]
  %1912 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1913 = sext i32 %.15.764 to i64
  %1914 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1913
  store i8* %1912, i8** %1914, align 8
  call void @unroll_loop(i32 45)
  %1915 = sext i32 %.15.764 to i64
  %1916 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1915
  %1917 = load i8*, i8** %1916, align 8
  %1918 = icmp ne i8* %1917, null
  %1919 = add nsw i32 %.15.764, 1
  %1920 = icmp slt i32 %1919, 30
  %.1.765 = select i1 %1918, i32 %1919, i32 %.15.764
  %1921 = select i1 %1918, i1 %1920, i1 false
  br i1 %1921, label %.lr.ph6.766, label %._crit_edge.loopexit.768

._crit_edge.loopexit.768:                         ; preds = %.lr.ph6.766
  %.1.lcssa.ph.767 = phi i32 [ %.1.765, %.lr.ph6.766 ]
  br label %._crit_edge.770

._crit_edge.770:                                  ; preds = %._crit_edge.loopexit.768, %1907
  %.1.lcssa.769 = phi i32 [ %.14.762, %1907 ], [ %.1.lcssa.ph.767, %._crit_edge.loopexit.768 ]
  %1922 = load i8*, i8** %27, align 16
  %1923 = icmp ne i8* %1922, null
  br i1 %1923, label %91, label %1924

; <label>:1924:                                   ; preds = %._crit_edge.770
  call void @__loop_iteration_test___3()
  %1925 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit

.lr.ph6.13:                                       ; preds = %.lr.ph6
  call void @__loop_iteration_test___4()
  %1926 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1927 = sext i32 2 to i64
  %1928 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @25, i32 0, i32 0), i8** %1928, align 8
  call void @unroll_loop(i32 45)
  %1929 = sext i32 2 to i64
  %1930 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %1931 = load i8*, i8** %1930, align 8
  %1932 = icmp ne i64 10000601, 0
  %1933 = icmp ne i8* %1931, null
  %1934 = add nsw i32 2, 1
  %1935 = icmp slt i32 3, 30
  %.1.12 = select i1 true, i32 3, i32 2
  %1936 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.26, label %._crit_edge.loopexit

.lr.ph6.26:                                       ; preds = %.lr.ph6.13
  call void @__loop_iteration_test___4()
  %1937 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1938 = sext i32 3 to i64
  %1939 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @26, i32 0, i32 0), i8** %1939, align 8
  call void @unroll_loop(i32 45)
  %1940 = sext i32 3 to i64
  %1941 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 3
  %1942 = load i8*, i8** %1941, align 8
  %1943 = icmp ne i64 10000607, 0
  %1944 = icmp ne i8* %1942, null
  %1945 = add nsw i32 3, 1
  %1946 = icmp slt i32 4, 30
  %.1.25 = select i1 true, i32 4, i32 3
  %1947 = select i1 true, i1 true, i1 false
  br i1 true, label %.lr.ph6.39, label %._crit_edge.loopexit

.lr.ph6.39:                                       ; preds = %.lr.ph6.26
  call void @__loop_iteration_test___4()
  %1948 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1949 = sext i32 4 to i64
  %1950 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  store i8* null, i8** %1950, align 8
  call void @unroll_loop(i32 45)
  %1951 = sext i32 4 to i64
  %1952 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 4
  %1953 = load i8*, i8** %1952, align 8
  %1954 = icmp ne i64 0, 0
  %1955 = icmp ne i8* null, null
  %1956 = add nsw i32 4, 1
  %1957 = icmp slt i32 5, 30
  %.1.38 = select i1 false, i32 5, i32 4
  %1958 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.412, label %._crit_edge.loopexit

.lr.ph6.412:                                      ; preds = %.lr.ph6.39
  call void @__loop_iteration_test___4()
  %1959 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1960 = sext i32 4 to i64
  %1961 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1960
  store i8* %1959, i8** %1961, align 8
  call void @unroll_loop(i32 45)
  %1962 = sext i32 4 to i64
  %1963 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1962
  %1964 = load i8*, i8** %1963, align 8
  %1965 = icmp ne i8* %1964, null
  %1966 = add nsw i32 4, 1
  %1967 = icmp slt i32 %1966, 30
  %.1.411 = select i1 %1965, i32 %1966, i32 4
  %1968 = select i1 %1965, i1 %1967, i1 false
  br i1 %1968, label %.lr.ph6.515, label %._crit_edge.loopexit

.lr.ph6.515:                                      ; preds = %.lr.ph6.412
  call void @__loop_iteration_test___4()
  %1969 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1970 = sext i32 %.1.411 to i64
  %1971 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1970
  store i8* %1969, i8** %1971, align 8
  call void @unroll_loop(i32 45)
  %1972 = sext i32 %.1.411 to i64
  %1973 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1972
  %1974 = load i8*, i8** %1973, align 8
  %1975 = icmp ne i8* %1974, null
  %1976 = add nsw i32 %.1.411, 1
  %1977 = icmp slt i32 %1976, 30
  %.1.514 = select i1 %1975, i32 %1976, i32 %.1.411
  %1978 = select i1 %1975, i1 %1977, i1 false
  br i1 %1978, label %.lr.ph6.618, label %._crit_edge.loopexit

.lr.ph6.618:                                      ; preds = %.lr.ph6.515
  call void @__loop_iteration_test___4()
  %1979 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1980 = sext i32 %.1.514 to i64
  %1981 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1980
  store i8* %1979, i8** %1981, align 8
  call void @unroll_loop(i32 45)
  %1982 = sext i32 %.1.514 to i64
  %1983 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1982
  %1984 = load i8*, i8** %1983, align 8
  %1985 = icmp ne i8* %1984, null
  %1986 = add nsw i32 %.1.514, 1
  %1987 = icmp slt i32 %1986, 30
  %.1.617 = select i1 %1985, i32 %1986, i32 %.1.514
  %1988 = select i1 %1985, i1 %1987, i1 false
  br i1 %1988, label %.lr.ph6.721, label %._crit_edge.loopexit

.lr.ph6.721:                                      ; preds = %.lr.ph6.618
  call void @__loop_iteration_test___4()
  %1989 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %1990 = sext i32 %.1.617 to i64
  %1991 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1990
  store i8* %1989, i8** %1991, align 8
  call void @unroll_loop(i32 45)
  %1992 = sext i32 %.1.617 to i64
  %1993 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %1992
  %1994 = load i8*, i8** %1993, align 8
  %1995 = icmp ne i8* %1994, null
  %1996 = add nsw i32 %.1.617, 1
  %1997 = icmp slt i32 %1996, 30
  %.1.720 = select i1 %1995, i32 %1996, i32 %.1.617
  %1998 = select i1 %1995, i1 %1997, i1 false
  br i1 %1998, label %.lr.ph6.8, label %._crit_edge.loopexit

.lr.ph6.8:                                        ; preds = %.lr.ph6.721
  call void @__loop_iteration_test___4()
  %1999 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2000 = sext i32 %.1.720 to i64
  %2001 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2000
  store i8* %1999, i8** %2001, align 8
  call void @unroll_loop(i32 45)
  %2002 = sext i32 %.1.720 to i64
  %2003 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2002
  %2004 = load i8*, i8** %2003, align 8
  %2005 = icmp ne i8* %2004, null
  %2006 = add nsw i32 %.1.720, 1
  %2007 = icmp slt i32 %2006, 30
  %.1.8 = select i1 %2005, i32 %2006, i32 %.1.720
  %2008 = select i1 %2005, i1 %2007, i1 false
  br i1 %2008, label %.lr.ph6.9, label %._crit_edge.loopexit

.lr.ph6.9:                                        ; preds = %.lr.ph6.8
  call void @__loop_iteration_test___4()
  %2009 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2010 = sext i32 %.1.8 to i64
  %2011 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2010
  store i8* %2009, i8** %2011, align 8
  call void @unroll_loop(i32 45)
  %2012 = sext i32 %.1.8 to i64
  %2013 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2012
  %2014 = load i8*, i8** %2013, align 8
  %2015 = icmp ne i8* %2014, null
  %2016 = add nsw i32 %.1.8, 1
  %2017 = icmp slt i32 %2016, 30
  %.1.9 = select i1 %2015, i32 %2016, i32 %.1.8
  %2018 = select i1 %2015, i1 %2017, i1 false
  br i1 %2018, label %.lr.ph6.10, label %._crit_edge.loopexit

.lr.ph6.10:                                       ; preds = %.lr.ph6.9
  call void @__loop_iteration_test___4()
  %2019 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2020 = sext i32 %.1.9 to i64
  %2021 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2020
  store i8* %2019, i8** %2021, align 8
  call void @unroll_loop(i32 45)
  %2022 = sext i32 %.1.9 to i64
  %2023 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2022
  %2024 = load i8*, i8** %2023, align 8
  %2025 = icmp ne i8* %2024, null
  %2026 = add nsw i32 %.1.9, 1
  %2027 = icmp slt i32 %2026, 30
  %.1.10 = select i1 %2025, i32 %2026, i32 %.1.9
  %2028 = select i1 %2025, i1 %2027, i1 false
  br i1 %2028, label %.lr.ph6.11, label %._crit_edge.loopexit

.lr.ph6.11:                                       ; preds = %.lr.ph6.10
  call void @__loop_iteration_test___4()
  %2029 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2030 = sext i32 %.1.10 to i64
  %2031 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2030
  store i8* %2029, i8** %2031, align 8
  call void @unroll_loop(i32 45)
  %2032 = sext i32 %.1.10 to i64
  %2033 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2032
  %2034 = load i8*, i8** %2033, align 8
  %2035 = icmp ne i8* %2034, null
  %2036 = add nsw i32 %.1.10, 1
  %2037 = icmp slt i32 %2036, 30
  %.1.11 = select i1 %2035, i32 %2036, i32 %.1.10
  %2038 = select i1 %2035, i1 %2037, i1 false
  br i1 %2038, label %.lr.ph6.12, label %._crit_edge.loopexit

.lr.ph6.12:                                       ; preds = %.lr.ph6.11
  call void @__loop_iteration_test___4()
  %2039 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2040 = sext i32 %.1.11 to i64
  %2041 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2040
  store i8* %2039, i8** %2041, align 8
  call void @unroll_loop(i32 45)
  %2042 = sext i32 %.1.11 to i64
  %2043 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2042
  %2044 = load i8*, i8** %2043, align 8
  %2045 = icmp ne i8* %2044, null
  %2046 = add nsw i32 %.1.11, 1
  %2047 = icmp slt i32 %2046, 30
  %.1.1222 = select i1 %2045, i32 %2046, i32 %.1.11
  %2048 = select i1 %2045, i1 %2047, i1 false
  br i1 %2048, label %.lr.ph6.1323, label %._crit_edge.loopexit

.lr.ph6.1323:                                     ; preds = %.lr.ph6.12
  call void @__loop_iteration_test___4()
  %2049 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2050 = sext i32 %.1.1222 to i64
  %2051 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2050
  store i8* %2049, i8** %2051, align 8
  call void @unroll_loop(i32 45)
  %2052 = sext i32 %.1.1222 to i64
  %2053 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2052
  %2054 = load i8*, i8** %2053, align 8
  %2055 = icmp ne i8* %2054, null
  %2056 = add nsw i32 %.1.1222, 1
  %2057 = icmp slt i32 %2056, 30
  %.1.13 = select i1 %2055, i32 %2056, i32 %.1.1222
  %2058 = select i1 %2055, i1 %2057, i1 false
  br i1 %2058, label %.lr.ph6.14, label %._crit_edge.loopexit

.lr.ph6.14:                                       ; preds = %.lr.ph6.1323
  call void @__loop_iteration_test___4()
  %2059 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2060 = sext i32 %.1.13 to i64
  %2061 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2060
  store i8* %2059, i8** %2061, align 8
  call void @unroll_loop(i32 45)
  %2062 = sext i32 %.1.13 to i64
  %2063 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2062
  %2064 = load i8*, i8** %2063, align 8
  %2065 = icmp ne i8* %2064, null
  %2066 = add nsw i32 %.1.13, 1
  %2067 = icmp slt i32 %2066, 30
  %.1.14 = select i1 %2065, i32 %2066, i32 %.1.13
  %2068 = select i1 %2065, i1 %2067, i1 false
  br i1 %2068, label %.lr.ph6.15, label %._crit_edge.loopexit

.lr.ph6.15:                                       ; preds = %.lr.ph6.14
  call void @__loop_iteration_test___4()
  %2069 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2070 = sext i32 %.1.14 to i64
  %2071 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2070
  store i8* %2069, i8** %2071, align 8
  call void @unroll_loop(i32 45)
  %2072 = sext i32 %.1.14 to i64
  %2073 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2072
  %2074 = load i8*, i8** %2073, align 8
  %2075 = icmp ne i8* %2074, null
  %2076 = add nsw i32 %.1.14, 1
  %2077 = icmp slt i32 %2076, 30
  %.1.1525 = select i1 %2075, i32 %2076, i32 %.1.14
  %2078 = select i1 %2075, i1 %2077, i1 false
  br i1 %2078, label %.lr.ph6.1626, label %._crit_edge.loopexit

.lr.ph6.1626:                                     ; preds = %.lr.ph6.15
  call void @__loop_iteration_test___4()
  %2079 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2080 = sext i32 %.1.1525 to i64
  %2081 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2080
  store i8* %2079, i8** %2081, align 8
  call void @unroll_loop(i32 45)
  %2082 = sext i32 %.1.1525 to i64
  %2083 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2082
  %2084 = load i8*, i8** %2083, align 8
  %2085 = icmp ne i8* %2084, null
  %2086 = add nsw i32 %.1.1525, 1
  %2087 = icmp slt i32 %2086, 30
  %.1.16 = select i1 %2085, i32 %2086, i32 %.1.1525
  %2088 = select i1 %2085, i1 %2087, i1 false
  br i1 %2088, label %.lr.ph6.17, label %._crit_edge.loopexit

.lr.ph6.17:                                       ; preds = %.lr.ph6.1626
  call void @__loop_iteration_test___4()
  %2089 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2090 = sext i32 %.1.16 to i64
  %2091 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2090
  store i8* %2089, i8** %2091, align 8
  call void @unroll_loop(i32 45)
  %2092 = sext i32 %.1.16 to i64
  %2093 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2092
  %2094 = load i8*, i8** %2093, align 8
  %2095 = icmp ne i8* %2094, null
  %2096 = add nsw i32 %.1.16, 1
  %2097 = icmp slt i32 %2096, 30
  %.1.17 = select i1 %2095, i32 %2096, i32 %.1.16
  %2098 = select i1 %2095, i1 %2097, i1 false
  br i1 %2098, label %.lr.ph6.18, label %._crit_edge.loopexit

.lr.ph6.18:                                       ; preds = %.lr.ph6.17
  call void @__loop_iteration_test___4()
  %2099 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2100 = sext i32 %.1.17 to i64
  %2101 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2100
  store i8* %2099, i8** %2101, align 8
  call void @unroll_loop(i32 45)
  %2102 = sext i32 %.1.17 to i64
  %2103 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2102
  %2104 = load i8*, i8** %2103, align 8
  %2105 = icmp ne i8* %2104, null
  %2106 = add nsw i32 %.1.17, 1
  %2107 = icmp slt i32 %2106, 30
  %.1.18 = select i1 %2105, i32 %2106, i32 %.1.17
  %2108 = select i1 %2105, i1 %2107, i1 false
  br i1 %2108, label %.lr.ph6.19, label %._crit_edge.loopexit

.lr.ph6.19:                                       ; preds = %.lr.ph6.18
  call void @__loop_iteration_test___4()
  %2109 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2110 = sext i32 %.1.18 to i64
  %2111 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2110
  store i8* %2109, i8** %2111, align 8
  call void @unroll_loop(i32 45)
  %2112 = sext i32 %.1.18 to i64
  %2113 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2112
  %2114 = load i8*, i8** %2113, align 8
  %2115 = icmp ne i8* %2114, null
  %2116 = add nsw i32 %.1.18, 1
  %2117 = icmp slt i32 %2116, 30
  %.1.19 = select i1 %2115, i32 %2116, i32 %.1.18
  br label %._crit_edge.loopexit

; <label>:2118:                                   ; preds = %286
  call void @unroll_loop(i32 44)
  %2119 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2120 = icmp ne i8* %2119, null
  br i1 %2120, label %2121, label %2122

; <label>:2121:                                   ; preds = %2118
  store i8 0, i8* %2119, align 1
  br label %2122

; <label>:2122:                                   ; preds = %2121, %2118
  %2123 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2124 = icmp ne i8* %2123, null
  br i1 %2124, label %2125, label %2126

; <label>:2125:                                   ; preds = %2122
  store i8 0, i8* %2123, align 1
  br label %2126

; <label>:2126:                                   ; preds = %2125, %2122
  %2127 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2128 = icmp ne i8* %2127, null
  br i1 %2128, label %2129, label %2130

; <label>:2129:                                   ; preds = %2126
  store i8 0, i8* %2127, align 1
  br label %2130

; <label>:2130:                                   ; preds = %2129, %2126
  %2131 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2132 = icmp ne i8* %2131, null
  br i1 %2132, label %2133, label %2134

; <label>:2133:                                   ; preds = %2130
  store i8 0, i8* %2131, align 1
  br label %2134

; <label>:2134:                                   ; preds = %2133, %2130
  %2135 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2135, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2136 = load i8*, i8** %26, align 8
  %2137 = icmp ne i8* %2136, null
  %.14.1.1 = select i1 %2137, i32 1, i32 0
  %2138 = select i1 %2137, i1 true, i1 false
  br i1 %2138, label %.lr.ph6.preheader.1.1, label %._crit_edge.1.1

.lr.ph6.preheader.1.1:                            ; preds = %2134
  br label %.lr.ph6.1.1

.lr.ph6.1.1:                                      ; preds = %.lr.ph6.1.1, %.lr.ph6.preheader.1.1
  %.15.1.1 = phi i32 [ %.1.1.1, %.lr.ph6.1.1 ], [ %.14.1.1, %.lr.ph6.preheader.1.1 ]
  %2139 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2140 = sext i32 %.15.1.1 to i64
  %2141 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2140
  store i8* %2139, i8** %2141, align 8
  call void @unroll_loop(i32 45)
  %2142 = sext i32 %.15.1.1 to i64
  %2143 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2142
  %2144 = load i8*, i8** %2143, align 8
  %2145 = icmp ne i8* %2144, null
  %2146 = add nsw i32 %.15.1.1, 1
  %2147 = icmp slt i32 %2146, 30
  %.1.1.1 = select i1 %2145, i32 %2146, i32 %.15.1.1
  %2148 = select i1 %2145, i1 %2147, i1 false
  br i1 %2148, label %.lr.ph6.1.1, label %._crit_edge.loopexit.1.1

._crit_edge.loopexit.1.1:                         ; preds = %.lr.ph6.1.1
  %.1.lcssa.ph.1.1 = phi i32 [ %.1.1.1, %.lr.ph6.1.1 ]
  br label %._crit_edge.1.1

._crit_edge.1.1:                                  ; preds = %._crit_edge.loopexit.1.1, %2134
  %.1.lcssa.1.1 = phi i32 [ %.14.1.1, %2134 ], [ %.1.lcssa.ph.1.1, %._crit_edge.loopexit.1.1 ]
  %2149 = load i8*, i8** %27, align 16
  %2150 = icmp ne i8* %2149, null
  br i1 %2150, label %289, label %2151

; <label>:2151:                                   ; preds = %._crit_edge.1.1
  call void @__loop_iteration_test___6()
  %2152 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2153 = icmp ne i8* %2152, null
  br i1 %2153, label %2154, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2154:                                   ; preds = %2151
  call void @unroll_loop(i32 44)
  %2155 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2156 = icmp ne i8* %2155, null
  br i1 %2156, label %2157, label %2158

; <label>:2157:                                   ; preds = %2154
  store i8 0, i8* %2155, align 1
  br label %2158

; <label>:2158:                                   ; preds = %2157, %2154
  %2159 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2160 = icmp ne i8* %2159, null
  br i1 %2160, label %2161, label %2162

; <label>:2161:                                   ; preds = %2158
  store i8 0, i8* %2159, align 1
  br label %2162

; <label>:2162:                                   ; preds = %2161, %2158
  %2163 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2164 = icmp ne i8* %2163, null
  br i1 %2164, label %2165, label %2166

; <label>:2165:                                   ; preds = %2162
  store i8 0, i8* %2163, align 1
  br label %2166

; <label>:2166:                                   ; preds = %2165, %2162
  %2167 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2168 = icmp ne i8* %2167, null
  br i1 %2168, label %2169, label %2170

; <label>:2169:                                   ; preds = %2166
  store i8 0, i8* %2167, align 1
  br label %2170

; <label>:2170:                                   ; preds = %2169, %2166
  %2171 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2171, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2172 = load i8*, i8** %26, align 8
  %2173 = icmp ne i8* %2172, null
  %.14.1.2 = select i1 %2173, i32 1, i32 0
  %2174 = select i1 %2173, i1 true, i1 false
  br i1 %2174, label %.lr.ph6.preheader.1.2, label %._crit_edge.1.2

.lr.ph6.preheader.1.2:                            ; preds = %2170
  br label %.lr.ph6.1.2

.lr.ph6.1.2:                                      ; preds = %.lr.ph6.1.2, %.lr.ph6.preheader.1.2
  %.15.1.2 = phi i32 [ %.1.1.2, %.lr.ph6.1.2 ], [ %.14.1.2, %.lr.ph6.preheader.1.2 ]
  %2175 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2176 = sext i32 %.15.1.2 to i64
  %2177 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2176
  store i8* %2175, i8** %2177, align 8
  call void @unroll_loop(i32 45)
  %2178 = sext i32 %.15.1.2 to i64
  %2179 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2178
  %2180 = load i8*, i8** %2179, align 8
  %2181 = icmp ne i8* %2180, null
  %2182 = add nsw i32 %.15.1.2, 1
  %2183 = icmp slt i32 %2182, 30
  %.1.1.2 = select i1 %2181, i32 %2182, i32 %.15.1.2
  %2184 = select i1 %2181, i1 %2183, i1 false
  br i1 %2184, label %.lr.ph6.1.2, label %._crit_edge.loopexit.1.2

._crit_edge.loopexit.1.2:                         ; preds = %.lr.ph6.1.2
  %.1.lcssa.ph.1.2 = phi i32 [ %.1.1.2, %.lr.ph6.1.2 ]
  br label %._crit_edge.1.2

._crit_edge.1.2:                                  ; preds = %._crit_edge.loopexit.1.2, %2170
  %.1.lcssa.1.2 = phi i32 [ %.14.1.2, %2170 ], [ %.1.lcssa.ph.1.2, %._crit_edge.loopexit.1.2 ]
  %2185 = load i8*, i8** %27, align 16
  %2186 = icmp ne i8* %2185, null
  br i1 %2186, label %289, label %2187

; <label>:2187:                                   ; preds = %._crit_edge.1.2
  call void @__loop_iteration_test___6()
  %2188 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2189 = icmp ne i8* %2188, null
  br i1 %2189, label %2190, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2190:                                   ; preds = %2187
  call void @unroll_loop(i32 44)
  %2191 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2192 = icmp ne i8* %2191, null
  br i1 %2192, label %2193, label %2194

; <label>:2193:                                   ; preds = %2190
  store i8 0, i8* %2191, align 1
  br label %2194

; <label>:2194:                                   ; preds = %2193, %2190
  %2195 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2196 = icmp ne i8* %2195, null
  br i1 %2196, label %2197, label %2198

; <label>:2197:                                   ; preds = %2194
  store i8 0, i8* %2195, align 1
  br label %2198

; <label>:2198:                                   ; preds = %2197, %2194
  %2199 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2200 = icmp ne i8* %2199, null
  br i1 %2200, label %2201, label %2202

; <label>:2201:                                   ; preds = %2198
  store i8 0, i8* %2199, align 1
  br label %2202

; <label>:2202:                                   ; preds = %2201, %2198
  %2203 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2204 = icmp ne i8* %2203, null
  br i1 %2204, label %2205, label %2206

; <label>:2205:                                   ; preds = %2202
  store i8 0, i8* %2203, align 1
  br label %2206

; <label>:2206:                                   ; preds = %2205, %2202
  %2207 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2207, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2208 = load i8*, i8** %26, align 8
  %2209 = icmp ne i8* %2208, null
  %.14.1.3 = select i1 %2209, i32 1, i32 0
  %2210 = select i1 %2209, i1 true, i1 false
  br i1 %2210, label %.lr.ph6.preheader.1.3, label %._crit_edge.1.3

.lr.ph6.preheader.1.3:                            ; preds = %2206
  br label %.lr.ph6.1.3

.lr.ph6.1.3:                                      ; preds = %.lr.ph6.1.3, %.lr.ph6.preheader.1.3
  %.15.1.3 = phi i32 [ %.1.1.3, %.lr.ph6.1.3 ], [ %.14.1.3, %.lr.ph6.preheader.1.3 ]
  %2211 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2212 = sext i32 %.15.1.3 to i64
  %2213 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2212
  store i8* %2211, i8** %2213, align 8
  call void @unroll_loop(i32 45)
  %2214 = sext i32 %.15.1.3 to i64
  %2215 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2214
  %2216 = load i8*, i8** %2215, align 8
  %2217 = icmp ne i8* %2216, null
  %2218 = add nsw i32 %.15.1.3, 1
  %2219 = icmp slt i32 %2218, 30
  %.1.1.3 = select i1 %2217, i32 %2218, i32 %.15.1.3
  %2220 = select i1 %2217, i1 %2219, i1 false
  br i1 %2220, label %.lr.ph6.1.3, label %._crit_edge.loopexit.1.3

._crit_edge.loopexit.1.3:                         ; preds = %.lr.ph6.1.3
  %.1.lcssa.ph.1.3 = phi i32 [ %.1.1.3, %.lr.ph6.1.3 ]
  br label %._crit_edge.1.3

._crit_edge.1.3:                                  ; preds = %._crit_edge.loopexit.1.3, %2206
  %.1.lcssa.1.3 = phi i32 [ %.14.1.3, %2206 ], [ %.1.lcssa.ph.1.3, %._crit_edge.loopexit.1.3 ]
  %2221 = load i8*, i8** %27, align 16
  %2222 = icmp ne i8* %2221, null
  br i1 %2222, label %289, label %2223

; <label>:2223:                                   ; preds = %._crit_edge.1.3
  call void @__loop_iteration_test___6()
  %2224 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2225 = icmp ne i8* %2224, null
  br i1 %2225, label %2226, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2226:                                   ; preds = %2223
  call void @unroll_loop(i32 44)
  %2227 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2228 = icmp ne i8* %2227, null
  br i1 %2228, label %2229, label %2230

; <label>:2229:                                   ; preds = %2226
  store i8 0, i8* %2227, align 1
  br label %2230

; <label>:2230:                                   ; preds = %2229, %2226
  %2231 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2232 = icmp ne i8* %2231, null
  br i1 %2232, label %2233, label %2234

; <label>:2233:                                   ; preds = %2230
  store i8 0, i8* %2231, align 1
  br label %2234

; <label>:2234:                                   ; preds = %2233, %2230
  %2235 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2236 = icmp ne i8* %2235, null
  br i1 %2236, label %2237, label %2238

; <label>:2237:                                   ; preds = %2234
  store i8 0, i8* %2235, align 1
  br label %2238

; <label>:2238:                                   ; preds = %2237, %2234
  %2239 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2240 = icmp ne i8* %2239, null
  br i1 %2240, label %2241, label %2242

; <label>:2241:                                   ; preds = %2238
  store i8 0, i8* %2239, align 1
  br label %2242

; <label>:2242:                                   ; preds = %2241, %2238
  %2243 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2243, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2244 = load i8*, i8** %26, align 8
  %2245 = icmp ne i8* %2244, null
  %.14.1.4 = select i1 %2245, i32 1, i32 0
  %2246 = select i1 %2245, i1 true, i1 false
  br i1 %2246, label %.lr.ph6.preheader.1.4, label %._crit_edge.1.4

.lr.ph6.preheader.1.4:                            ; preds = %2242
  br label %.lr.ph6.1.4

.lr.ph6.1.4:                                      ; preds = %.lr.ph6.1.4, %.lr.ph6.preheader.1.4
  %.15.1.4 = phi i32 [ %.1.1.4, %.lr.ph6.1.4 ], [ %.14.1.4, %.lr.ph6.preheader.1.4 ]
  %2247 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2248 = sext i32 %.15.1.4 to i64
  %2249 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2248
  store i8* %2247, i8** %2249, align 8
  call void @unroll_loop(i32 45)
  %2250 = sext i32 %.15.1.4 to i64
  %2251 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2250
  %2252 = load i8*, i8** %2251, align 8
  %2253 = icmp ne i8* %2252, null
  %2254 = add nsw i32 %.15.1.4, 1
  %2255 = icmp slt i32 %2254, 30
  %.1.1.4 = select i1 %2253, i32 %2254, i32 %.15.1.4
  %2256 = select i1 %2253, i1 %2255, i1 false
  br i1 %2256, label %.lr.ph6.1.4, label %._crit_edge.loopexit.1.4

._crit_edge.loopexit.1.4:                         ; preds = %.lr.ph6.1.4
  %.1.lcssa.ph.1.4 = phi i32 [ %.1.1.4, %.lr.ph6.1.4 ]
  br label %._crit_edge.1.4

._crit_edge.1.4:                                  ; preds = %._crit_edge.loopexit.1.4, %2242
  %.1.lcssa.1.4 = phi i32 [ %.14.1.4, %2242 ], [ %.1.lcssa.ph.1.4, %._crit_edge.loopexit.1.4 ]
  %2257 = load i8*, i8** %27, align 16
  %2258 = icmp ne i8* %2257, null
  br i1 %2258, label %289, label %2259

; <label>:2259:                                   ; preds = %._crit_edge.1.4
  call void @__loop_iteration_test___6()
  %2260 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2261 = icmp ne i8* %2260, null
  br i1 %2261, label %2262, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2262:                                   ; preds = %2259
  call void @unroll_loop(i32 44)
  %2263 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2264 = icmp ne i8* %2263, null
  br i1 %2264, label %2265, label %2266

; <label>:2265:                                   ; preds = %2262
  store i8 0, i8* %2263, align 1
  br label %2266

; <label>:2266:                                   ; preds = %2265, %2262
  %2267 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2268 = icmp ne i8* %2267, null
  br i1 %2268, label %2269, label %2270

; <label>:2269:                                   ; preds = %2266
  store i8 0, i8* %2267, align 1
  br label %2270

; <label>:2270:                                   ; preds = %2269, %2266
  %2271 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2272 = icmp ne i8* %2271, null
  br i1 %2272, label %2273, label %2274

; <label>:2273:                                   ; preds = %2270
  store i8 0, i8* %2271, align 1
  br label %2274

; <label>:2274:                                   ; preds = %2273, %2270
  %2275 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2276 = icmp ne i8* %2275, null
  br i1 %2276, label %2277, label %2278

; <label>:2277:                                   ; preds = %2274
  store i8 0, i8* %2275, align 1
  br label %2278

; <label>:2278:                                   ; preds = %2277, %2274
  %2279 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2279, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2280 = load i8*, i8** %26, align 8
  %2281 = icmp ne i8* %2280, null
  %.14.1.5 = select i1 %2281, i32 1, i32 0
  %2282 = select i1 %2281, i1 true, i1 false
  br i1 %2282, label %.lr.ph6.preheader.1.5, label %._crit_edge.1.5

.lr.ph6.preheader.1.5:                            ; preds = %2278
  br label %.lr.ph6.1.5

.lr.ph6.1.5:                                      ; preds = %.lr.ph6.1.5, %.lr.ph6.preheader.1.5
  %.15.1.5 = phi i32 [ %.1.1.5, %.lr.ph6.1.5 ], [ %.14.1.5, %.lr.ph6.preheader.1.5 ]
  %2283 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2284 = sext i32 %.15.1.5 to i64
  %2285 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2284
  store i8* %2283, i8** %2285, align 8
  call void @unroll_loop(i32 45)
  %2286 = sext i32 %.15.1.5 to i64
  %2287 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2286
  %2288 = load i8*, i8** %2287, align 8
  %2289 = icmp ne i8* %2288, null
  %2290 = add nsw i32 %.15.1.5, 1
  %2291 = icmp slt i32 %2290, 30
  %.1.1.5 = select i1 %2289, i32 %2290, i32 %.15.1.5
  %2292 = select i1 %2289, i1 %2291, i1 false
  br i1 %2292, label %.lr.ph6.1.5, label %._crit_edge.loopexit.1.5

._crit_edge.loopexit.1.5:                         ; preds = %.lr.ph6.1.5
  %.1.lcssa.ph.1.5 = phi i32 [ %.1.1.5, %.lr.ph6.1.5 ]
  br label %._crit_edge.1.5

._crit_edge.1.5:                                  ; preds = %._crit_edge.loopexit.1.5, %2278
  %.1.lcssa.1.5 = phi i32 [ %.14.1.5, %2278 ], [ %.1.lcssa.ph.1.5, %._crit_edge.loopexit.1.5 ]
  %2293 = load i8*, i8** %27, align 16
  %2294 = icmp ne i8* %2293, null
  br i1 %2294, label %289, label %2295

; <label>:2295:                                   ; preds = %._crit_edge.1.5
  call void @__loop_iteration_test___6()
  %2296 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2297 = icmp ne i8* %2296, null
  br i1 %2297, label %2298, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2298:                                   ; preds = %2295
  call void @unroll_loop(i32 44)
  %2299 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2300 = icmp ne i8* %2299, null
  br i1 %2300, label %2301, label %2302

; <label>:2301:                                   ; preds = %2298
  store i8 0, i8* %2299, align 1
  br label %2302

; <label>:2302:                                   ; preds = %2301, %2298
  %2303 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2304 = icmp ne i8* %2303, null
  br i1 %2304, label %2305, label %2306

; <label>:2305:                                   ; preds = %2302
  store i8 0, i8* %2303, align 1
  br label %2306

; <label>:2306:                                   ; preds = %2305, %2302
  %2307 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2308 = icmp ne i8* %2307, null
  br i1 %2308, label %2309, label %2310

; <label>:2309:                                   ; preds = %2306
  store i8 0, i8* %2307, align 1
  br label %2310

; <label>:2310:                                   ; preds = %2309, %2306
  %2311 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2312 = icmp ne i8* %2311, null
  br i1 %2312, label %2313, label %2314

; <label>:2313:                                   ; preds = %2310
  store i8 0, i8* %2311, align 1
  br label %2314

; <label>:2314:                                   ; preds = %2313, %2310
  %2315 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2315, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2316 = load i8*, i8** %26, align 8
  %2317 = icmp ne i8* %2316, null
  %.14.1.6 = select i1 %2317, i32 1, i32 0
  %2318 = select i1 %2317, i1 true, i1 false
  br i1 %2318, label %.lr.ph6.preheader.1.6, label %._crit_edge.1.6

.lr.ph6.preheader.1.6:                            ; preds = %2314
  br label %.lr.ph6.1.6

.lr.ph6.1.6:                                      ; preds = %.lr.ph6.1.6, %.lr.ph6.preheader.1.6
  %.15.1.6 = phi i32 [ %.1.1.6, %.lr.ph6.1.6 ], [ %.14.1.6, %.lr.ph6.preheader.1.6 ]
  %2319 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2320 = sext i32 %.15.1.6 to i64
  %2321 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2320
  store i8* %2319, i8** %2321, align 8
  call void @unroll_loop(i32 45)
  %2322 = sext i32 %.15.1.6 to i64
  %2323 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2322
  %2324 = load i8*, i8** %2323, align 8
  %2325 = icmp ne i8* %2324, null
  %2326 = add nsw i32 %.15.1.6, 1
  %2327 = icmp slt i32 %2326, 30
  %.1.1.6 = select i1 %2325, i32 %2326, i32 %.15.1.6
  %2328 = select i1 %2325, i1 %2327, i1 false
  br i1 %2328, label %.lr.ph6.1.6, label %._crit_edge.loopexit.1.6

._crit_edge.loopexit.1.6:                         ; preds = %.lr.ph6.1.6
  %.1.lcssa.ph.1.6 = phi i32 [ %.1.1.6, %.lr.ph6.1.6 ]
  br label %._crit_edge.1.6

._crit_edge.1.6:                                  ; preds = %._crit_edge.loopexit.1.6, %2314
  %.1.lcssa.1.6 = phi i32 [ %.14.1.6, %2314 ], [ %.1.lcssa.ph.1.6, %._crit_edge.loopexit.1.6 ]
  %2329 = load i8*, i8** %27, align 16
  %2330 = icmp ne i8* %2329, null
  br i1 %2330, label %289, label %2331

; <label>:2331:                                   ; preds = %._crit_edge.1.6
  call void @__loop_iteration_test___6()
  %2332 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2333 = icmp ne i8* %2332, null
  br i1 %2333, label %2334, label %.outer._crit_edge.loopexit.loopexit1

; <label>:2334:                                   ; preds = %2331
  call void @unroll_loop(i32 44)
  %2335 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2336 = icmp ne i8* %2335, null
  br i1 %2336, label %2337, label %2338

; <label>:2337:                                   ; preds = %2334
  store i8 0, i8* %2335, align 1
  br label %2338

; <label>:2338:                                   ; preds = %2337, %2334
  %2339 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2340 = icmp ne i8* %2339, null
  br i1 %2340, label %2341, label %2342

; <label>:2341:                                   ; preds = %2338
  store i8 0, i8* %2339, align 1
  br label %2342

; <label>:2342:                                   ; preds = %2341, %2338
  %2343 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2344 = icmp ne i8* %2343, null
  br i1 %2344, label %2345, label %2346

; <label>:2345:                                   ; preds = %2342
  store i8 0, i8* %2343, align 1
  br label %2346

; <label>:2346:                                   ; preds = %2345, %2342
  %2347 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2348 = icmp ne i8* %2347, null
  br i1 %2348, label %2349, label %2350

; <label>:2349:                                   ; preds = %2346
  store i8 0, i8* %2347, align 1
  br label %2350

; <label>:2350:                                   ; preds = %2349, %2346
  %2351 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2351, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2352 = load i8*, i8** %26, align 8
  %2353 = icmp ne i8* %2352, null
  %.14.1.7 = select i1 %2353, i32 1, i32 0
  %2354 = select i1 %2353, i1 true, i1 false
  br i1 %2354, label %.lr.ph6.preheader.1.7, label %._crit_edge.1.7

.lr.ph6.preheader.1.7:                            ; preds = %2350
  br label %.lr.ph6.1.7

.lr.ph6.1.7:                                      ; preds = %.lr.ph6.1.7, %.lr.ph6.preheader.1.7
  %.15.1.7 = phi i32 [ %.1.1.7, %.lr.ph6.1.7 ], [ %.14.1.7, %.lr.ph6.preheader.1.7 ]
  %2355 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2356 = sext i32 %.15.1.7 to i64
  %2357 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2356
  store i8* %2355, i8** %2357, align 8
  call void @unroll_loop(i32 45)
  %2358 = sext i32 %.15.1.7 to i64
  %2359 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2358
  %2360 = load i8*, i8** %2359, align 8
  %2361 = icmp ne i8* %2360, null
  %2362 = add nsw i32 %.15.1.7, 1
  %2363 = icmp slt i32 %2362, 30
  %.1.1.7 = select i1 %2361, i32 %2362, i32 %.15.1.7
  %2364 = select i1 %2361, i1 %2363, i1 false
  br i1 %2364, label %.lr.ph6.1.7, label %._crit_edge.loopexit.1.7

._crit_edge.loopexit.1.7:                         ; preds = %.lr.ph6.1.7
  %.1.lcssa.ph.1.7 = phi i32 [ %.1.1.7, %.lr.ph6.1.7 ]
  br label %._crit_edge.1.7

._crit_edge.1.7:                                  ; preds = %._crit_edge.loopexit.1.7, %2350
  %.1.lcssa.1.7 = phi i32 [ %.14.1.7, %2350 ], [ %.1.lcssa.ph.1.7, %._crit_edge.loopexit.1.7 ]
  %2365 = load i8*, i8** %27, align 16
  %2366 = icmp ne i8* %2365, null
  br i1 %2366, label %289, label %2367

; <label>:2367:                                   ; preds = %._crit_edge.1.7
  call void @__loop_iteration_test___6()
  %2368 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit1

.lr.ph6.1.13:                                     ; preds = %.lr.ph6.1
  call void @__loop_iteration_test___7()
  %2369 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2370 = sext i32 2 to i64
  %2371 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* null, i8** %2371, align 8
  call void @unroll_loop(i32 45)
  %2372 = sext i32 2 to i64
  %2373 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %2374 = load i8*, i8** %2373, align 8
  %2375 = icmp ne i64 0, 0
  %2376 = icmp ne i8* null, null
  %2377 = add nsw i32 2, 1
  %2378 = icmp slt i32 3, 30
  %.1.1.12 = select i1 false, i32 3, i32 2
  %2379 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.1.26, label %._crit_edge.loopexit.1

.lr.ph6.1.26:                                     ; preds = %.lr.ph6.1.13
  call void @__loop_iteration_test___7()
  %2380 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2381 = sext i32 2 to i64
  %2382 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2381
  store i8* %2380, i8** %2382, align 8
  call void @unroll_loop(i32 45)
  %2383 = sext i32 2 to i64
  %2384 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2383
  %2385 = load i8*, i8** %2384, align 8
  %2386 = icmp ne i8* %2385, null
  %2387 = add nsw i32 2, 1
  %2388 = icmp slt i32 %2387, 30
  %.1.1.25 = select i1 %2386, i32 %2387, i32 2
  %2389 = select i1 %2386, i1 %2388, i1 false
  br i1 %2389, label %.lr.ph6.1.39, label %._crit_edge.loopexit.1

.lr.ph6.1.39:                                     ; preds = %.lr.ph6.1.26
  call void @__loop_iteration_test___7()
  %2390 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2391 = sext i32 %.1.1.25 to i64
  %2392 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2391
  store i8* %2390, i8** %2392, align 8
  call void @unroll_loop(i32 45)
  %2393 = sext i32 %.1.1.25 to i64
  %2394 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2393
  %2395 = load i8*, i8** %2394, align 8
  %2396 = icmp ne i8* %2395, null
  %2397 = add nsw i32 %.1.1.25, 1
  %2398 = icmp slt i32 %2397, 30
  %.1.1.38 = select i1 %2396, i32 %2397, i32 %.1.1.25
  %2399 = select i1 %2396, i1 %2398, i1 false
  br i1 %2399, label %.lr.ph6.1.412, label %._crit_edge.loopexit.1

.lr.ph6.1.412:                                    ; preds = %.lr.ph6.1.39
  call void @__loop_iteration_test___7()
  %2400 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2401 = sext i32 %.1.1.38 to i64
  %2402 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2401
  store i8* %2400, i8** %2402, align 8
  call void @unroll_loop(i32 45)
  %2403 = sext i32 %.1.1.38 to i64
  %2404 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2403
  %2405 = load i8*, i8** %2404, align 8
  %2406 = icmp ne i8* %2405, null
  %2407 = add nsw i32 %.1.1.38, 1
  %2408 = icmp slt i32 %2407, 30
  %.1.1.411 = select i1 %2406, i32 %2407, i32 %.1.1.38
  %2409 = select i1 %2406, i1 %2408, i1 false
  br i1 %2409, label %.lr.ph6.1.515, label %._crit_edge.loopexit.1

.lr.ph6.1.515:                                    ; preds = %.lr.ph6.1.412
  call void @__loop_iteration_test___7()
  %2410 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2411 = sext i32 %.1.1.411 to i64
  %2412 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2411
  store i8* %2410, i8** %2412, align 8
  call void @unroll_loop(i32 45)
  %2413 = sext i32 %.1.1.411 to i64
  %2414 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2413
  %2415 = load i8*, i8** %2414, align 8
  %2416 = icmp ne i8* %2415, null
  %2417 = add nsw i32 %.1.1.411, 1
  %2418 = icmp slt i32 %2417, 30
  %.1.1.514 = select i1 %2416, i32 %2417, i32 %.1.1.411
  %2419 = select i1 %2416, i1 %2418, i1 false
  br i1 %2419, label %.lr.ph6.1.618, label %._crit_edge.loopexit.1

.lr.ph6.1.618:                                    ; preds = %.lr.ph6.1.515
  call void @__loop_iteration_test___7()
  %2420 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2421 = sext i32 %.1.1.514 to i64
  %2422 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2421
  store i8* %2420, i8** %2422, align 8
  call void @unroll_loop(i32 45)
  %2423 = sext i32 %.1.1.514 to i64
  %2424 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2423
  %2425 = load i8*, i8** %2424, align 8
  %2426 = icmp ne i8* %2425, null
  %2427 = add nsw i32 %.1.1.514, 1
  %2428 = icmp slt i32 %2427, 30
  %.1.1.617 = select i1 %2426, i32 %2427, i32 %.1.1.514
  %2429 = select i1 %2426, i1 %2428, i1 false
  br i1 %2429, label %.lr.ph6.1.721, label %._crit_edge.loopexit.1

.lr.ph6.1.721:                                    ; preds = %.lr.ph6.1.618
  call void @__loop_iteration_test___7()
  %2430 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2431 = sext i32 %.1.1.617 to i64
  %2432 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2431
  store i8* %2430, i8** %2432, align 8
  call void @unroll_loop(i32 45)
  %2433 = sext i32 %.1.1.617 to i64
  %2434 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2433
  %2435 = load i8*, i8** %2434, align 8
  %2436 = icmp ne i8* %2435, null
  %2437 = add nsw i32 %.1.1.617, 1
  %2438 = icmp slt i32 %2437, 30
  %.1.1.720 = select i1 %2436, i32 %2437, i32 %.1.1.617
  %2439 = select i1 %2436, i1 %2438, i1 false
  br i1 %2439, label %.lr.ph6.1.8, label %._crit_edge.loopexit.1

.lr.ph6.1.8:                                      ; preds = %.lr.ph6.1.721
  call void @__loop_iteration_test___7()
  %2440 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2441 = sext i32 %.1.1.720 to i64
  %2442 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2441
  store i8* %2440, i8** %2442, align 8
  call void @unroll_loop(i32 45)
  %2443 = sext i32 %.1.1.720 to i64
  %2444 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2443
  %2445 = load i8*, i8** %2444, align 8
  %2446 = icmp ne i8* %2445, null
  %2447 = add nsw i32 %.1.1.720, 1
  %2448 = icmp slt i32 %2447, 30
  %.1.1.8 = select i1 %2446, i32 %2447, i32 %.1.1.720
  %2449 = select i1 %2446, i1 %2448, i1 false
  br i1 %2449, label %.lr.ph6.1.9, label %._crit_edge.loopexit.1

.lr.ph6.1.9:                                      ; preds = %.lr.ph6.1.8
  call void @__loop_iteration_test___7()
  %2450 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2451 = sext i32 %.1.1.8 to i64
  %2452 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2451
  store i8* %2450, i8** %2452, align 8
  call void @unroll_loop(i32 45)
  %2453 = sext i32 %.1.1.8 to i64
  %2454 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2453
  %2455 = load i8*, i8** %2454, align 8
  %2456 = icmp ne i8* %2455, null
  %2457 = add nsw i32 %.1.1.8, 1
  %2458 = icmp slt i32 %2457, 30
  %.1.1.9 = select i1 %2456, i32 %2457, i32 %.1.1.8
  %2459 = select i1 %2456, i1 %2458, i1 false
  br i1 %2459, label %.lr.ph6.1.10, label %._crit_edge.loopexit.1

.lr.ph6.1.10:                                     ; preds = %.lr.ph6.1.9
  call void @__loop_iteration_test___7()
  %2460 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2461 = sext i32 %.1.1.9 to i64
  %2462 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2461
  store i8* %2460, i8** %2462, align 8
  call void @unroll_loop(i32 45)
  %2463 = sext i32 %.1.1.9 to i64
  %2464 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2463
  %2465 = load i8*, i8** %2464, align 8
  %2466 = icmp ne i8* %2465, null
  %2467 = add nsw i32 %.1.1.9, 1
  %2468 = icmp slt i32 %2467, 30
  %.1.1.10 = select i1 %2466, i32 %2467, i32 %.1.1.9
  %2469 = select i1 %2466, i1 %2468, i1 false
  br i1 %2469, label %.lr.ph6.1.11, label %._crit_edge.loopexit.1

.lr.ph6.1.11:                                     ; preds = %.lr.ph6.1.10
  call void @__loop_iteration_test___7()
  %2470 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2471 = sext i32 %.1.1.10 to i64
  %2472 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2471
  store i8* %2470, i8** %2472, align 8
  call void @unroll_loop(i32 45)
  %2473 = sext i32 %.1.1.10 to i64
  %2474 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2473
  %2475 = load i8*, i8** %2474, align 8
  %2476 = icmp ne i8* %2475, null
  %2477 = add nsw i32 %.1.1.10, 1
  %2478 = icmp slt i32 %2477, 30
  %.1.1.11 = select i1 %2476, i32 %2477, i32 %.1.1.10
  %2479 = select i1 %2476, i1 %2478, i1 false
  br i1 %2479, label %.lr.ph6.1.12, label %._crit_edge.loopexit.1

.lr.ph6.1.12:                                     ; preds = %.lr.ph6.1.11
  call void @__loop_iteration_test___7()
  %2480 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2481 = sext i32 %.1.1.11 to i64
  %2482 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2481
  store i8* %2480, i8** %2482, align 8
  call void @unroll_loop(i32 45)
  %2483 = sext i32 %.1.1.11 to i64
  %2484 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2483
  %2485 = load i8*, i8** %2484, align 8
  %2486 = icmp ne i8* %2485, null
  %2487 = add nsw i32 %.1.1.11, 1
  %2488 = icmp slt i32 %2487, 30
  %.1.1.1222 = select i1 %2486, i32 %2487, i32 %.1.1.11
  %2489 = select i1 %2486, i1 %2488, i1 false
  br i1 %2489, label %.lr.ph6.1.1323, label %._crit_edge.loopexit.1

.lr.ph6.1.1323:                                   ; preds = %.lr.ph6.1.12
  call void @__loop_iteration_test___7()
  %2490 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2491 = sext i32 %.1.1.1222 to i64
  %2492 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2491
  store i8* %2490, i8** %2492, align 8
  call void @unroll_loop(i32 45)
  %2493 = sext i32 %.1.1.1222 to i64
  %2494 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2493
  %2495 = load i8*, i8** %2494, align 8
  %2496 = icmp ne i8* %2495, null
  %2497 = add nsw i32 %.1.1.1222, 1
  %2498 = icmp slt i32 %2497, 30
  %.1.1.13 = select i1 %2496, i32 %2497, i32 %.1.1.1222
  %2499 = select i1 %2496, i1 %2498, i1 false
  br i1 %2499, label %.lr.ph6.1.14, label %._crit_edge.loopexit.1

.lr.ph6.1.14:                                     ; preds = %.lr.ph6.1.1323
  call void @__loop_iteration_test___7()
  %2500 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2501 = sext i32 %.1.1.13 to i64
  %2502 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2501
  store i8* %2500, i8** %2502, align 8
  call void @unroll_loop(i32 45)
  %2503 = sext i32 %.1.1.13 to i64
  %2504 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2503
  %2505 = load i8*, i8** %2504, align 8
  %2506 = icmp ne i8* %2505, null
  %2507 = add nsw i32 %.1.1.13, 1
  %2508 = icmp slt i32 %2507, 30
  %.1.1.14 = select i1 %2506, i32 %2507, i32 %.1.1.13
  %2509 = select i1 %2506, i1 %2508, i1 false
  br i1 %2509, label %.lr.ph6.1.15, label %._crit_edge.loopexit.1

.lr.ph6.1.15:                                     ; preds = %.lr.ph6.1.14
  call void @__loop_iteration_test___7()
  %2510 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2511 = sext i32 %.1.1.14 to i64
  %2512 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2511
  store i8* %2510, i8** %2512, align 8
  call void @unroll_loop(i32 45)
  %2513 = sext i32 %.1.1.14 to i64
  %2514 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2513
  %2515 = load i8*, i8** %2514, align 8
  %2516 = icmp ne i8* %2515, null
  %2517 = add nsw i32 %.1.1.14, 1
  %2518 = icmp slt i32 %2517, 30
  %.1.1.15 = select i1 %2516, i32 %2517, i32 %.1.1.14
  %2519 = select i1 %2516, i1 %2518, i1 false
  br i1 %2519, label %.lr.ph6.1.16, label %._crit_edge.loopexit.1

.lr.ph6.1.16:                                     ; preds = %.lr.ph6.1.15
  call void @__loop_iteration_test___7()
  %2520 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2521 = sext i32 %.1.1.15 to i64
  %2522 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2521
  store i8* %2520, i8** %2522, align 8
  call void @unroll_loop(i32 45)
  %2523 = sext i32 %.1.1.15 to i64
  %2524 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2523
  %2525 = load i8*, i8** %2524, align 8
  %2526 = icmp ne i8* %2525, null
  %2527 = add nsw i32 %.1.1.15, 1
  %2528 = icmp slt i32 %2527, 30
  %.1.1.16 = select i1 %2526, i32 %2527, i32 %.1.1.15
  %2529 = select i1 %2526, i1 %2528, i1 false
  br i1 %2529, label %.lr.ph6.1.17, label %._crit_edge.loopexit.1

.lr.ph6.1.17:                                     ; preds = %.lr.ph6.1.16
  call void @__loop_iteration_test___7()
  %2530 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2531 = sext i32 %.1.1.16 to i64
  %2532 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2531
  store i8* %2530, i8** %2532, align 8
  call void @unroll_loop(i32 45)
  %2533 = sext i32 %.1.1.16 to i64
  %2534 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2533
  %2535 = load i8*, i8** %2534, align 8
  %2536 = icmp ne i8* %2535, null
  %2537 = add nsw i32 %.1.1.16, 1
  %2538 = icmp slt i32 %2537, 30
  %.1.1.17 = select i1 %2536, i32 %2537, i32 %.1.1.16
  %2539 = select i1 %2536, i1 %2538, i1 false
  br i1 %2539, label %.lr.ph6.1.18, label %._crit_edge.loopexit.1

.lr.ph6.1.18:                                     ; preds = %.lr.ph6.1.17
  call void @__loop_iteration_test___7()
  %2540 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2541 = sext i32 %.1.1.17 to i64
  %2542 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2541
  store i8* %2540, i8** %2542, align 8
  call void @unroll_loop(i32 45)
  %2543 = sext i32 %.1.1.17 to i64
  %2544 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2543
  %2545 = load i8*, i8** %2544, align 8
  %2546 = icmp ne i8* %2545, null
  %2547 = add nsw i32 %.1.1.17, 1
  %2548 = icmp slt i32 %2547, 30
  %.1.1.18 = select i1 %2546, i32 %2547, i32 %.1.1.17
  %2549 = select i1 %2546, i1 %2548, i1 false
  br i1 %2549, label %.lr.ph6.1.19, label %._crit_edge.loopexit.1

.lr.ph6.1.19:                                     ; preds = %.lr.ph6.1.18
  call void @__loop_iteration_test___7()
  %2550 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2551 = sext i32 %.1.1.18 to i64
  %2552 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2551
  store i8* %2550, i8** %2552, align 8
  call void @unroll_loop(i32 45)
  %2553 = sext i32 %.1.1.18 to i64
  %2554 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2553
  %2555 = load i8*, i8** %2554, align 8
  %2556 = icmp ne i8* %2555, null
  %2557 = add nsw i32 %.1.1.18, 1
  %2558 = icmp slt i32 %2557, 30
  %.1.1.19 = select i1 %2556, i32 %2557, i32 %.1.1.18
  br label %._crit_edge.loopexit.1

; <label>:2559:                                   ; preds = %492
  call void @unroll_loop(i32 44)
  %2560 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2561 = icmp ne i8* %2560, null
  br i1 %2561, label %2562, label %2563

; <label>:2562:                                   ; preds = %2559
  store i8 0, i8* %2560, align 1
  br label %2563

; <label>:2563:                                   ; preds = %2562, %2559
  %2564 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2565 = icmp ne i8* %2564, null
  br i1 %2565, label %2566, label %2567

; <label>:2566:                                   ; preds = %2563
  store i8 0, i8* %2564, align 1
  br label %2567

; <label>:2567:                                   ; preds = %2566, %2563
  %2568 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2569 = icmp ne i8* %2568, null
  br i1 %2569, label %2570, label %2571

; <label>:2570:                                   ; preds = %2567
  store i8 0, i8* %2568, align 1
  br label %2571

; <label>:2571:                                   ; preds = %2570, %2567
  %2572 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2573 = icmp ne i8* %2572, null
  br i1 %2573, label %2574, label %2575

; <label>:2574:                                   ; preds = %2571
  store i8 0, i8* %2572, align 1
  br label %2575

; <label>:2575:                                   ; preds = %2574, %2571
  %2576 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2576, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2577 = load i8*, i8** %26, align 8
  %2578 = icmp ne i8* %2577, null
  %.14.2.1 = select i1 %2578, i32 1, i32 0
  %2579 = select i1 %2578, i1 true, i1 false
  br i1 %2579, label %.lr.ph6.preheader.2.1, label %._crit_edge.2.1

.lr.ph6.preheader.2.1:                            ; preds = %2575
  br label %.lr.ph6.2.1

.lr.ph6.2.1:                                      ; preds = %.lr.ph6.2.1, %.lr.ph6.preheader.2.1
  %.15.2.1 = phi i32 [ %.1.2.1, %.lr.ph6.2.1 ], [ %.14.2.1, %.lr.ph6.preheader.2.1 ]
  %2580 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2581 = sext i32 %.15.2.1 to i64
  %2582 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2581
  store i8* %2580, i8** %2582, align 8
  call void @unroll_loop(i32 45)
  %2583 = sext i32 %.15.2.1 to i64
  %2584 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2583
  %2585 = load i8*, i8** %2584, align 8
  %2586 = icmp ne i8* %2585, null
  %2587 = add nsw i32 %.15.2.1, 1
  %2588 = icmp slt i32 %2587, 30
  %.1.2.1 = select i1 %2586, i32 %2587, i32 %.15.2.1
  %2589 = select i1 %2586, i1 %2588, i1 false
  br i1 %2589, label %.lr.ph6.2.1, label %._crit_edge.loopexit.2.1

._crit_edge.loopexit.2.1:                         ; preds = %.lr.ph6.2.1
  %.1.lcssa.ph.2.1 = phi i32 [ %.1.2.1, %.lr.ph6.2.1 ]
  br label %._crit_edge.2.1

._crit_edge.2.1:                                  ; preds = %._crit_edge.loopexit.2.1, %2575
  %.1.lcssa.2.1 = phi i32 [ %.14.2.1, %2575 ], [ %.1.lcssa.ph.2.1, %._crit_edge.loopexit.2.1 ]
  %2590 = load i8*, i8** %27, align 16
  %2591 = icmp ne i8* %2590, null
  br i1 %2591, label %495, label %2592

; <label>:2592:                                   ; preds = %._crit_edge.2.1
  call void @__loop_iteration_test___8()
  %2593 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2594 = icmp ne i8* %2593, null
  br i1 %2594, label %2595, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2595:                                   ; preds = %2592
  call void @unroll_loop(i32 44)
  %2596 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2597 = icmp ne i8* %2596, null
  br i1 %2597, label %2598, label %2599

; <label>:2598:                                   ; preds = %2595
  store i8 0, i8* %2596, align 1
  br label %2599

; <label>:2599:                                   ; preds = %2598, %2595
  %2600 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2601 = icmp ne i8* %2600, null
  br i1 %2601, label %2602, label %2603

; <label>:2602:                                   ; preds = %2599
  store i8 0, i8* %2600, align 1
  br label %2603

; <label>:2603:                                   ; preds = %2602, %2599
  %2604 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2605 = icmp ne i8* %2604, null
  br i1 %2605, label %2606, label %2607

; <label>:2606:                                   ; preds = %2603
  store i8 0, i8* %2604, align 1
  br label %2607

; <label>:2607:                                   ; preds = %2606, %2603
  %2608 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2609 = icmp ne i8* %2608, null
  br i1 %2609, label %2610, label %2611

; <label>:2610:                                   ; preds = %2607
  store i8 0, i8* %2608, align 1
  br label %2611

; <label>:2611:                                   ; preds = %2610, %2607
  %2612 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2612, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2613 = load i8*, i8** %26, align 8
  %2614 = icmp ne i8* %2613, null
  %.14.2.2 = select i1 %2614, i32 1, i32 0
  %2615 = select i1 %2614, i1 true, i1 false
  br i1 %2615, label %.lr.ph6.preheader.2.2, label %._crit_edge.2.2

.lr.ph6.preheader.2.2:                            ; preds = %2611
  br label %.lr.ph6.2.2

.lr.ph6.2.2:                                      ; preds = %.lr.ph6.2.2, %.lr.ph6.preheader.2.2
  %.15.2.2 = phi i32 [ %.1.2.2, %.lr.ph6.2.2 ], [ %.14.2.2, %.lr.ph6.preheader.2.2 ]
  %2616 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2617 = sext i32 %.15.2.2 to i64
  %2618 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2617
  store i8* %2616, i8** %2618, align 8
  call void @unroll_loop(i32 45)
  %2619 = sext i32 %.15.2.2 to i64
  %2620 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2619
  %2621 = load i8*, i8** %2620, align 8
  %2622 = icmp ne i8* %2621, null
  %2623 = add nsw i32 %.15.2.2, 1
  %2624 = icmp slt i32 %2623, 30
  %.1.2.2 = select i1 %2622, i32 %2623, i32 %.15.2.2
  %2625 = select i1 %2622, i1 %2624, i1 false
  br i1 %2625, label %.lr.ph6.2.2, label %._crit_edge.loopexit.2.2

._crit_edge.loopexit.2.2:                         ; preds = %.lr.ph6.2.2
  %.1.lcssa.ph.2.2 = phi i32 [ %.1.2.2, %.lr.ph6.2.2 ]
  br label %._crit_edge.2.2

._crit_edge.2.2:                                  ; preds = %._crit_edge.loopexit.2.2, %2611
  %.1.lcssa.2.2 = phi i32 [ %.14.2.2, %2611 ], [ %.1.lcssa.ph.2.2, %._crit_edge.loopexit.2.2 ]
  %2626 = load i8*, i8** %27, align 16
  %2627 = icmp ne i8* %2626, null
  br i1 %2627, label %495, label %2628

; <label>:2628:                                   ; preds = %._crit_edge.2.2
  call void @__loop_iteration_test___8()
  %2629 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2630 = icmp ne i8* %2629, null
  br i1 %2630, label %2631, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2631:                                   ; preds = %2628
  call void @unroll_loop(i32 44)
  %2632 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2633 = icmp ne i8* %2632, null
  br i1 %2633, label %2634, label %2635

; <label>:2634:                                   ; preds = %2631
  store i8 0, i8* %2632, align 1
  br label %2635

; <label>:2635:                                   ; preds = %2634, %2631
  %2636 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2637 = icmp ne i8* %2636, null
  br i1 %2637, label %2638, label %2639

; <label>:2638:                                   ; preds = %2635
  store i8 0, i8* %2636, align 1
  br label %2639

; <label>:2639:                                   ; preds = %2638, %2635
  %2640 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2641 = icmp ne i8* %2640, null
  br i1 %2641, label %2642, label %2643

; <label>:2642:                                   ; preds = %2639
  store i8 0, i8* %2640, align 1
  br label %2643

; <label>:2643:                                   ; preds = %2642, %2639
  %2644 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2645 = icmp ne i8* %2644, null
  br i1 %2645, label %2646, label %2647

; <label>:2646:                                   ; preds = %2643
  store i8 0, i8* %2644, align 1
  br label %2647

; <label>:2647:                                   ; preds = %2646, %2643
  %2648 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2648, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2649 = load i8*, i8** %26, align 8
  %2650 = icmp ne i8* %2649, null
  %.14.2.3 = select i1 %2650, i32 1, i32 0
  %2651 = select i1 %2650, i1 true, i1 false
  br i1 %2651, label %.lr.ph6.preheader.2.3, label %._crit_edge.2.3

.lr.ph6.preheader.2.3:                            ; preds = %2647
  br label %.lr.ph6.2.3

.lr.ph6.2.3:                                      ; preds = %.lr.ph6.2.3, %.lr.ph6.preheader.2.3
  %.15.2.3 = phi i32 [ %.1.2.3, %.lr.ph6.2.3 ], [ %.14.2.3, %.lr.ph6.preheader.2.3 ]
  %2652 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2653 = sext i32 %.15.2.3 to i64
  %2654 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2653
  store i8* %2652, i8** %2654, align 8
  call void @unroll_loop(i32 45)
  %2655 = sext i32 %.15.2.3 to i64
  %2656 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2655
  %2657 = load i8*, i8** %2656, align 8
  %2658 = icmp ne i8* %2657, null
  %2659 = add nsw i32 %.15.2.3, 1
  %2660 = icmp slt i32 %2659, 30
  %.1.2.3 = select i1 %2658, i32 %2659, i32 %.15.2.3
  %2661 = select i1 %2658, i1 %2660, i1 false
  br i1 %2661, label %.lr.ph6.2.3, label %._crit_edge.loopexit.2.3

._crit_edge.loopexit.2.3:                         ; preds = %.lr.ph6.2.3
  %.1.lcssa.ph.2.3 = phi i32 [ %.1.2.3, %.lr.ph6.2.3 ]
  br label %._crit_edge.2.3

._crit_edge.2.3:                                  ; preds = %._crit_edge.loopexit.2.3, %2647
  %.1.lcssa.2.3 = phi i32 [ %.14.2.3, %2647 ], [ %.1.lcssa.ph.2.3, %._crit_edge.loopexit.2.3 ]
  %2662 = load i8*, i8** %27, align 16
  %2663 = icmp ne i8* %2662, null
  br i1 %2663, label %495, label %2664

; <label>:2664:                                   ; preds = %._crit_edge.2.3
  call void @__loop_iteration_test___8()
  %2665 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2666 = icmp ne i8* %2665, null
  br i1 %2666, label %2667, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2667:                                   ; preds = %2664
  call void @unroll_loop(i32 44)
  %2668 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2669 = icmp ne i8* %2668, null
  br i1 %2669, label %2670, label %2671

; <label>:2670:                                   ; preds = %2667
  store i8 0, i8* %2668, align 1
  br label %2671

; <label>:2671:                                   ; preds = %2670, %2667
  %2672 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2673 = icmp ne i8* %2672, null
  br i1 %2673, label %2674, label %2675

; <label>:2674:                                   ; preds = %2671
  store i8 0, i8* %2672, align 1
  br label %2675

; <label>:2675:                                   ; preds = %2674, %2671
  %2676 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2677 = icmp ne i8* %2676, null
  br i1 %2677, label %2678, label %2679

; <label>:2678:                                   ; preds = %2675
  store i8 0, i8* %2676, align 1
  br label %2679

; <label>:2679:                                   ; preds = %2678, %2675
  %2680 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2681 = icmp ne i8* %2680, null
  br i1 %2681, label %2682, label %2683

; <label>:2682:                                   ; preds = %2679
  store i8 0, i8* %2680, align 1
  br label %2683

; <label>:2683:                                   ; preds = %2682, %2679
  %2684 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2684, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2685 = load i8*, i8** %26, align 8
  %2686 = icmp ne i8* %2685, null
  %.14.2.4 = select i1 %2686, i32 1, i32 0
  %2687 = select i1 %2686, i1 true, i1 false
  br i1 %2687, label %.lr.ph6.preheader.2.4, label %._crit_edge.2.4

.lr.ph6.preheader.2.4:                            ; preds = %2683
  br label %.lr.ph6.2.4

.lr.ph6.2.4:                                      ; preds = %.lr.ph6.2.4, %.lr.ph6.preheader.2.4
  %.15.2.4 = phi i32 [ %.1.2.4, %.lr.ph6.2.4 ], [ %.14.2.4, %.lr.ph6.preheader.2.4 ]
  %2688 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2689 = sext i32 %.15.2.4 to i64
  %2690 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2689
  store i8* %2688, i8** %2690, align 8
  call void @unroll_loop(i32 45)
  %2691 = sext i32 %.15.2.4 to i64
  %2692 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2691
  %2693 = load i8*, i8** %2692, align 8
  %2694 = icmp ne i8* %2693, null
  %2695 = add nsw i32 %.15.2.4, 1
  %2696 = icmp slt i32 %2695, 30
  %.1.2.4 = select i1 %2694, i32 %2695, i32 %.15.2.4
  %2697 = select i1 %2694, i1 %2696, i1 false
  br i1 %2697, label %.lr.ph6.2.4, label %._crit_edge.loopexit.2.4

._crit_edge.loopexit.2.4:                         ; preds = %.lr.ph6.2.4
  %.1.lcssa.ph.2.4 = phi i32 [ %.1.2.4, %.lr.ph6.2.4 ]
  br label %._crit_edge.2.4

._crit_edge.2.4:                                  ; preds = %._crit_edge.loopexit.2.4, %2683
  %.1.lcssa.2.4 = phi i32 [ %.14.2.4, %2683 ], [ %.1.lcssa.ph.2.4, %._crit_edge.loopexit.2.4 ]
  %2698 = load i8*, i8** %27, align 16
  %2699 = icmp ne i8* %2698, null
  br i1 %2699, label %495, label %2700

; <label>:2700:                                   ; preds = %._crit_edge.2.4
  call void @__loop_iteration_test___8()
  %2701 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2702 = icmp ne i8* %2701, null
  br i1 %2702, label %2703, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2703:                                   ; preds = %2700
  call void @unroll_loop(i32 44)
  %2704 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2705 = icmp ne i8* %2704, null
  br i1 %2705, label %2706, label %2707

; <label>:2706:                                   ; preds = %2703
  store i8 0, i8* %2704, align 1
  br label %2707

; <label>:2707:                                   ; preds = %2706, %2703
  %2708 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2709 = icmp ne i8* %2708, null
  br i1 %2709, label %2710, label %2711

; <label>:2710:                                   ; preds = %2707
  store i8 0, i8* %2708, align 1
  br label %2711

; <label>:2711:                                   ; preds = %2710, %2707
  %2712 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2713 = icmp ne i8* %2712, null
  br i1 %2713, label %2714, label %2715

; <label>:2714:                                   ; preds = %2711
  store i8 0, i8* %2712, align 1
  br label %2715

; <label>:2715:                                   ; preds = %2714, %2711
  %2716 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2717 = icmp ne i8* %2716, null
  br i1 %2717, label %2718, label %2719

; <label>:2718:                                   ; preds = %2715
  store i8 0, i8* %2716, align 1
  br label %2719

; <label>:2719:                                   ; preds = %2718, %2715
  %2720 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2720, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2721 = load i8*, i8** %26, align 8
  %2722 = icmp ne i8* %2721, null
  %.14.2.5 = select i1 %2722, i32 1, i32 0
  %2723 = select i1 %2722, i1 true, i1 false
  br i1 %2723, label %.lr.ph6.preheader.2.5, label %._crit_edge.2.5

.lr.ph6.preheader.2.5:                            ; preds = %2719
  br label %.lr.ph6.2.5

.lr.ph6.2.5:                                      ; preds = %.lr.ph6.2.5, %.lr.ph6.preheader.2.5
  %.15.2.5 = phi i32 [ %.1.2.5, %.lr.ph6.2.5 ], [ %.14.2.5, %.lr.ph6.preheader.2.5 ]
  %2724 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2725 = sext i32 %.15.2.5 to i64
  %2726 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2725
  store i8* %2724, i8** %2726, align 8
  call void @unroll_loop(i32 45)
  %2727 = sext i32 %.15.2.5 to i64
  %2728 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2727
  %2729 = load i8*, i8** %2728, align 8
  %2730 = icmp ne i8* %2729, null
  %2731 = add nsw i32 %.15.2.5, 1
  %2732 = icmp slt i32 %2731, 30
  %.1.2.5 = select i1 %2730, i32 %2731, i32 %.15.2.5
  %2733 = select i1 %2730, i1 %2732, i1 false
  br i1 %2733, label %.lr.ph6.2.5, label %._crit_edge.loopexit.2.5

._crit_edge.loopexit.2.5:                         ; preds = %.lr.ph6.2.5
  %.1.lcssa.ph.2.5 = phi i32 [ %.1.2.5, %.lr.ph6.2.5 ]
  br label %._crit_edge.2.5

._crit_edge.2.5:                                  ; preds = %._crit_edge.loopexit.2.5, %2719
  %.1.lcssa.2.5 = phi i32 [ %.14.2.5, %2719 ], [ %.1.lcssa.ph.2.5, %._crit_edge.loopexit.2.5 ]
  %2734 = load i8*, i8** %27, align 16
  %2735 = icmp ne i8* %2734, null
  br i1 %2735, label %495, label %2736

; <label>:2736:                                   ; preds = %._crit_edge.2.5
  call void @__loop_iteration_test___8()
  %2737 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2738 = icmp ne i8* %2737, null
  br i1 %2738, label %2739, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2739:                                   ; preds = %2736
  call void @unroll_loop(i32 44)
  %2740 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2741 = icmp ne i8* %2740, null
  br i1 %2741, label %2742, label %2743

; <label>:2742:                                   ; preds = %2739
  store i8 0, i8* %2740, align 1
  br label %2743

; <label>:2743:                                   ; preds = %2742, %2739
  %2744 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2745 = icmp ne i8* %2744, null
  br i1 %2745, label %2746, label %2747

; <label>:2746:                                   ; preds = %2743
  store i8 0, i8* %2744, align 1
  br label %2747

; <label>:2747:                                   ; preds = %2746, %2743
  %2748 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2749 = icmp ne i8* %2748, null
  br i1 %2749, label %2750, label %2751

; <label>:2750:                                   ; preds = %2747
  store i8 0, i8* %2748, align 1
  br label %2751

; <label>:2751:                                   ; preds = %2750, %2747
  %2752 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2753 = icmp ne i8* %2752, null
  br i1 %2753, label %2754, label %2755

; <label>:2754:                                   ; preds = %2751
  store i8 0, i8* %2752, align 1
  br label %2755

; <label>:2755:                                   ; preds = %2754, %2751
  %2756 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2756, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2757 = load i8*, i8** %26, align 8
  %2758 = icmp ne i8* %2757, null
  %.14.2.6 = select i1 %2758, i32 1, i32 0
  %2759 = select i1 %2758, i1 true, i1 false
  br i1 %2759, label %.lr.ph6.preheader.2.6, label %._crit_edge.2.6

.lr.ph6.preheader.2.6:                            ; preds = %2755
  br label %.lr.ph6.2.6

.lr.ph6.2.6:                                      ; preds = %.lr.ph6.2.6, %.lr.ph6.preheader.2.6
  %.15.2.6 = phi i32 [ %.1.2.6, %.lr.ph6.2.6 ], [ %.14.2.6, %.lr.ph6.preheader.2.6 ]
  %2760 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2761 = sext i32 %.15.2.6 to i64
  %2762 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2761
  store i8* %2760, i8** %2762, align 8
  call void @unroll_loop(i32 45)
  %2763 = sext i32 %.15.2.6 to i64
  %2764 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2763
  %2765 = load i8*, i8** %2764, align 8
  %2766 = icmp ne i8* %2765, null
  %2767 = add nsw i32 %.15.2.6, 1
  %2768 = icmp slt i32 %2767, 30
  %.1.2.6 = select i1 %2766, i32 %2767, i32 %.15.2.6
  %2769 = select i1 %2766, i1 %2768, i1 false
  br i1 %2769, label %.lr.ph6.2.6, label %._crit_edge.loopexit.2.6

._crit_edge.loopexit.2.6:                         ; preds = %.lr.ph6.2.6
  %.1.lcssa.ph.2.6 = phi i32 [ %.1.2.6, %.lr.ph6.2.6 ]
  br label %._crit_edge.2.6

._crit_edge.2.6:                                  ; preds = %._crit_edge.loopexit.2.6, %2755
  %.1.lcssa.2.6 = phi i32 [ %.14.2.6, %2755 ], [ %.1.lcssa.ph.2.6, %._crit_edge.loopexit.2.6 ]
  %2770 = load i8*, i8** %27, align 16
  %2771 = icmp ne i8* %2770, null
  br i1 %2771, label %495, label %2772

; <label>:2772:                                   ; preds = %._crit_edge.2.6
  call void @__loop_iteration_test___8()
  %2773 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  %2774 = icmp ne i8* %2773, null
  br i1 %2774, label %2775, label %.outer._crit_edge.loopexit.loopexit2

; <label>:2775:                                   ; preds = %2772
  call void @unroll_loop(i32 44)
  %2776 = call i8* @strchr(i8* %20, i32 10) #8, !track !102
  %2777 = icmp ne i8* %2776, null
  br i1 %2777, label %2778, label %2779

; <label>:2778:                                   ; preds = %2775
  store i8 0, i8* %2776, align 1
  br label %2779

; <label>:2779:                                   ; preds = %2778, %2775
  %2780 = call i8* @strchr(i8* %21, i32 10) #8, !track !103
  %2781 = icmp ne i8* %2780, null
  br i1 %2781, label %2782, label %2783

; <label>:2782:                                   ; preds = %2779
  store i8 0, i8* %2780, align 1
  br label %2783

; <label>:2783:                                   ; preds = %2782, %2779
  %2784 = call i8* @strchr(i8* %22, i32 35) #8, !track !104
  %2785 = icmp ne i8* %2784, null
  br i1 %2785, label %2786, label %2787

; <label>:2786:                                   ; preds = %2783
  store i8 0, i8* %2784, align 1
  br label %2787

; <label>:2787:                                   ; preds = %2786, %2783
  %2788 = call i8* @strchr(i8* %23, i32 59) #8, !track !105
  %2789 = icmp ne i8* %2788, null
  br i1 %2789, label %2790, label %2791

; <label>:2790:                                   ; preds = %2787
  store i8 0, i8* %2788, align 1
  br label %2791

; <label>:2791:                                   ; preds = %2790, %2787
  %2792 = call i8* @strtok(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !106
  store i8* %2792, i8** %25, align 16
  call void @unroll_loop(i32 45)
  %2793 = load i8*, i8** %26, align 8
  %2794 = icmp ne i8* %2793, null
  %.14.2.7 = select i1 %2794, i32 1, i32 0
  %2795 = select i1 %2794, i1 true, i1 false
  br i1 %2795, label %.lr.ph6.preheader.2.7, label %._crit_edge.2.7

.lr.ph6.preheader.2.7:                            ; preds = %2791
  br label %.lr.ph6.2.7

.lr.ph6.2.7:                                      ; preds = %.lr.ph6.2.7, %.lr.ph6.preheader.2.7
  %.15.2.7 = phi i32 [ %.1.2.7, %.lr.ph6.2.7 ], [ %.14.2.7, %.lr.ph6.preheader.2.7 ]
  %2796 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2797 = sext i32 %.15.2.7 to i64
  %2798 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2797
  store i8* %2796, i8** %2798, align 8
  call void @unroll_loop(i32 45)
  %2799 = sext i32 %.15.2.7 to i64
  %2800 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2799
  %2801 = load i8*, i8** %2800, align 8
  %2802 = icmp ne i8* %2801, null
  %2803 = add nsw i32 %.15.2.7, 1
  %2804 = icmp slt i32 %2803, 30
  %.1.2.7 = select i1 %2802, i32 %2803, i32 %.15.2.7
  %2805 = select i1 %2802, i1 %2804, i1 false
  br i1 %2805, label %.lr.ph6.2.7, label %._crit_edge.loopexit.2.7

._crit_edge.loopexit.2.7:                         ; preds = %.lr.ph6.2.7
  %.1.lcssa.ph.2.7 = phi i32 [ %.1.2.7, %.lr.ph6.2.7 ]
  br label %._crit_edge.2.7

._crit_edge.2.7:                                  ; preds = %._crit_edge.loopexit.2.7, %2791
  %.1.lcssa.2.7 = phi i32 [ %.14.2.7, %2791 ], [ %.1.lcssa.ph.2.7, %._crit_edge.loopexit.2.7 ]
  %2806 = load i8*, i8** %27, align 16
  %2807 = icmp ne i8* %2806, null
  br i1 %2807, label %495, label %2808

; <label>:2808:                                   ; preds = %._crit_edge.2.7
  call void @__loop_iteration_test___8()
  %2809 = call i8* @fgets(i8* %16, i32 512, %struct._IO_FILE* null), !track !101
  br label %.outer._crit_edge.loopexit.loopexit2

.lr.ph6.2.13:                                     ; preds = %.lr.ph6.2
  call void @__loop_iteration_test___9()
  %2810 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2811 = sext i32 2 to i64
  %2812 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  store i8* null, i8** %2812, align 8
  call void @unroll_loop(i32 45)
  %2813 = sext i32 2 to i64
  %2814 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 2
  %2815 = load i8*, i8** %2814, align 8
  %2816 = icmp ne i64 0, 0
  %2817 = icmp ne i8* null, null
  %2818 = add nsw i32 2, 1
  %2819 = icmp slt i32 3, 30
  %.1.2.12 = select i1 false, i32 3, i32 2
  %2820 = select i1 false, i1 true, i1 false
  br i1 false, label %.lr.ph6.2.26, label %._crit_edge.loopexit.2

.lr.ph6.2.26:                                     ; preds = %.lr.ph6.2.13
  call void @__loop_iteration_test___9()
  %2821 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2822 = sext i32 2 to i64
  %2823 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2822
  store i8* %2821, i8** %2823, align 8
  call void @unroll_loop(i32 45)
  %2824 = sext i32 2 to i64
  %2825 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2824
  %2826 = load i8*, i8** %2825, align 8
  %2827 = icmp ne i8* %2826, null
  %2828 = add nsw i32 2, 1
  %2829 = icmp slt i32 %2828, 30
  %.1.2.25 = select i1 %2827, i32 %2828, i32 2
  %2830 = select i1 %2827, i1 %2829, i1 false
  br i1 %2830, label %.lr.ph6.2.39, label %._crit_edge.loopexit.2

.lr.ph6.2.39:                                     ; preds = %.lr.ph6.2.26
  call void @__loop_iteration_test___9()
  %2831 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2832 = sext i32 %.1.2.25 to i64
  %2833 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2832
  store i8* %2831, i8** %2833, align 8
  call void @unroll_loop(i32 45)
  %2834 = sext i32 %.1.2.25 to i64
  %2835 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2834
  %2836 = load i8*, i8** %2835, align 8
  %2837 = icmp ne i8* %2836, null
  %2838 = add nsw i32 %.1.2.25, 1
  %2839 = icmp slt i32 %2838, 30
  %.1.2.38 = select i1 %2837, i32 %2838, i32 %.1.2.25
  %2840 = select i1 %2837, i1 %2839, i1 false
  br i1 %2840, label %.lr.ph6.2.412, label %._crit_edge.loopexit.2

.lr.ph6.2.412:                                    ; preds = %.lr.ph6.2.39
  call void @__loop_iteration_test___9()
  %2841 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2842 = sext i32 %.1.2.38 to i64
  %2843 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2842
  store i8* %2841, i8** %2843, align 8
  call void @unroll_loop(i32 45)
  %2844 = sext i32 %.1.2.38 to i64
  %2845 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2844
  %2846 = load i8*, i8** %2845, align 8
  %2847 = icmp ne i8* %2846, null
  %2848 = add nsw i32 %.1.2.38, 1
  %2849 = icmp slt i32 %2848, 30
  %.1.2.411 = select i1 %2847, i32 %2848, i32 %.1.2.38
  %2850 = select i1 %2847, i1 %2849, i1 false
  br i1 %2850, label %.lr.ph6.2.515, label %._crit_edge.loopexit.2

.lr.ph6.2.515:                                    ; preds = %.lr.ph6.2.412
  call void @__loop_iteration_test___9()
  %2851 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2852 = sext i32 %.1.2.411 to i64
  %2853 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2852
  store i8* %2851, i8** %2853, align 8
  call void @unroll_loop(i32 45)
  %2854 = sext i32 %.1.2.411 to i64
  %2855 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2854
  %2856 = load i8*, i8** %2855, align 8
  %2857 = icmp ne i8* %2856, null
  %2858 = add nsw i32 %.1.2.411, 1
  %2859 = icmp slt i32 %2858, 30
  %.1.2.514 = select i1 %2857, i32 %2858, i32 %.1.2.411
  %2860 = select i1 %2857, i1 %2859, i1 false
  br i1 %2860, label %.lr.ph6.2.618, label %._crit_edge.loopexit.2

.lr.ph6.2.618:                                    ; preds = %.lr.ph6.2.515
  call void @__loop_iteration_test___9()
  %2861 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2862 = sext i32 %.1.2.514 to i64
  %2863 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2862
  store i8* %2861, i8** %2863, align 8
  call void @unroll_loop(i32 45)
  %2864 = sext i32 %.1.2.514 to i64
  %2865 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2864
  %2866 = load i8*, i8** %2865, align 8
  %2867 = icmp ne i8* %2866, null
  %2868 = add nsw i32 %.1.2.514, 1
  %2869 = icmp slt i32 %2868, 30
  %.1.2.617 = select i1 %2867, i32 %2868, i32 %.1.2.514
  %2870 = select i1 %2867, i1 %2869, i1 false
  br i1 %2870, label %.lr.ph6.2.721, label %._crit_edge.loopexit.2

.lr.ph6.2.721:                                    ; preds = %.lr.ph6.2.618
  call void @__loop_iteration_test___9()
  %2871 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2872 = sext i32 %.1.2.617 to i64
  %2873 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2872
  store i8* %2871, i8** %2873, align 8
  call void @unroll_loop(i32 45)
  %2874 = sext i32 %.1.2.617 to i64
  %2875 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2874
  %2876 = load i8*, i8** %2875, align 8
  %2877 = icmp ne i8* %2876, null
  %2878 = add nsw i32 %.1.2.617, 1
  %2879 = icmp slt i32 %2878, 30
  %.1.2.720 = select i1 %2877, i32 %2878, i32 %.1.2.617
  %2880 = select i1 %2877, i1 %2879, i1 false
  br i1 %2880, label %.lr.ph6.2.8, label %._crit_edge.loopexit.2

.lr.ph6.2.8:                                      ; preds = %.lr.ph6.2.721
  call void @__loop_iteration_test___9()
  %2881 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2882 = sext i32 %.1.2.720 to i64
  %2883 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2882
  store i8* %2881, i8** %2883, align 8
  call void @unroll_loop(i32 45)
  %2884 = sext i32 %.1.2.720 to i64
  %2885 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2884
  %2886 = load i8*, i8** %2885, align 8
  %2887 = icmp ne i8* %2886, null
  %2888 = add nsw i32 %.1.2.720, 1
  %2889 = icmp slt i32 %2888, 30
  %.1.2.8 = select i1 %2887, i32 %2888, i32 %.1.2.720
  %2890 = select i1 %2887, i1 %2889, i1 false
  br i1 %2890, label %.lr.ph6.2.9, label %._crit_edge.loopexit.2

.lr.ph6.2.9:                                      ; preds = %.lr.ph6.2.8
  call void @__loop_iteration_test___9()
  %2891 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2892 = sext i32 %.1.2.8 to i64
  %2893 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2892
  store i8* %2891, i8** %2893, align 8
  call void @unroll_loop(i32 45)
  %2894 = sext i32 %.1.2.8 to i64
  %2895 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2894
  %2896 = load i8*, i8** %2895, align 8
  %2897 = icmp ne i8* %2896, null
  %2898 = add nsw i32 %.1.2.8, 1
  %2899 = icmp slt i32 %2898, 30
  %.1.2.9 = select i1 %2897, i32 %2898, i32 %.1.2.8
  %2900 = select i1 %2897, i1 %2899, i1 false
  br i1 %2900, label %.lr.ph6.2.10, label %._crit_edge.loopexit.2

.lr.ph6.2.10:                                     ; preds = %.lr.ph6.2.9
  call void @__loop_iteration_test___9()
  %2901 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2902 = sext i32 %.1.2.9 to i64
  %2903 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2902
  store i8* %2901, i8** %2903, align 8
  call void @unroll_loop(i32 45)
  %2904 = sext i32 %.1.2.9 to i64
  %2905 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2904
  %2906 = load i8*, i8** %2905, align 8
  %2907 = icmp ne i8* %2906, null
  %2908 = add nsw i32 %.1.2.9, 1
  %2909 = icmp slt i32 %2908, 30
  %.1.2.10 = select i1 %2907, i32 %2908, i32 %.1.2.9
  %2910 = select i1 %2907, i1 %2909, i1 false
  br i1 %2910, label %.lr.ph6.2.11, label %._crit_edge.loopexit.2

.lr.ph6.2.11:                                     ; preds = %.lr.ph6.2.10
  call void @__loop_iteration_test___9()
  %2911 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2912 = sext i32 %.1.2.10 to i64
  %2913 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2912
  store i8* %2911, i8** %2913, align 8
  call void @unroll_loop(i32 45)
  %2914 = sext i32 %.1.2.10 to i64
  %2915 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2914
  %2916 = load i8*, i8** %2915, align 8
  %2917 = icmp ne i8* %2916, null
  %2918 = add nsw i32 %.1.2.10, 1
  %2919 = icmp slt i32 %2918, 30
  %.1.2.11 = select i1 %2917, i32 %2918, i32 %.1.2.10
  %2920 = select i1 %2917, i1 %2919, i1 false
  br i1 %2920, label %.lr.ph6.2.12, label %._crit_edge.loopexit.2

.lr.ph6.2.12:                                     ; preds = %.lr.ph6.2.11
  call void @__loop_iteration_test___9()
  %2921 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2922 = sext i32 %.1.2.11 to i64
  %2923 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2922
  store i8* %2921, i8** %2923, align 8
  call void @unroll_loop(i32 45)
  %2924 = sext i32 %.1.2.11 to i64
  %2925 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2924
  %2926 = load i8*, i8** %2925, align 8
  %2927 = icmp ne i8* %2926, null
  %2928 = add nsw i32 %.1.2.11, 1
  %2929 = icmp slt i32 %2928, 30
  %.1.2.1222 = select i1 %2927, i32 %2928, i32 %.1.2.11
  %2930 = select i1 %2927, i1 %2929, i1 false
  br i1 %2930, label %.lr.ph6.2.1323, label %._crit_edge.loopexit.2

.lr.ph6.2.1323:                                   ; preds = %.lr.ph6.2.12
  call void @__loop_iteration_test___9()
  %2931 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2932 = sext i32 %.1.2.1222 to i64
  %2933 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2932
  store i8* %2931, i8** %2933, align 8
  call void @unroll_loop(i32 45)
  %2934 = sext i32 %.1.2.1222 to i64
  %2935 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2934
  %2936 = load i8*, i8** %2935, align 8
  %2937 = icmp ne i8* %2936, null
  %2938 = add nsw i32 %.1.2.1222, 1
  %2939 = icmp slt i32 %2938, 30
  %.1.2.13 = select i1 %2937, i32 %2938, i32 %.1.2.1222
  %2940 = select i1 %2937, i1 %2939, i1 false
  br i1 %2940, label %.lr.ph6.2.14, label %._crit_edge.loopexit.2

.lr.ph6.2.14:                                     ; preds = %.lr.ph6.2.1323
  call void @__loop_iteration_test___9()
  %2941 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2942 = sext i32 %.1.2.13 to i64
  %2943 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2942
  store i8* %2941, i8** %2943, align 8
  call void @unroll_loop(i32 45)
  %2944 = sext i32 %.1.2.13 to i64
  %2945 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2944
  %2946 = load i8*, i8** %2945, align 8
  %2947 = icmp ne i8* %2946, null
  %2948 = add nsw i32 %.1.2.13, 1
  %2949 = icmp slt i32 %2948, 30
  %.1.2.14 = select i1 %2947, i32 %2948, i32 %.1.2.13
  %2950 = select i1 %2947, i1 %2949, i1 false
  br i1 %2950, label %.lr.ph6.2.15, label %._crit_edge.loopexit.2

.lr.ph6.2.15:                                     ; preds = %.lr.ph6.2.14
  call void @__loop_iteration_test___9()
  %2951 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2952 = sext i32 %.1.2.14 to i64
  %2953 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2952
  store i8* %2951, i8** %2953, align 8
  call void @unroll_loop(i32 45)
  %2954 = sext i32 %.1.2.14 to i64
  %2955 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2954
  %2956 = load i8*, i8** %2955, align 8
  %2957 = icmp ne i8* %2956, null
  %2958 = add nsw i32 %.1.2.14, 1
  %2959 = icmp slt i32 %2958, 30
  %.1.2.15 = select i1 %2957, i32 %2958, i32 %.1.2.14
  %2960 = select i1 %2957, i1 %2959, i1 false
  br i1 %2960, label %.lr.ph6.2.16, label %._crit_edge.loopexit.2

.lr.ph6.2.16:                                     ; preds = %.lr.ph6.2.15
  call void @__loop_iteration_test___9()
  %2961 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2962 = sext i32 %.1.2.15 to i64
  %2963 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2962
  store i8* %2961, i8** %2963, align 8
  call void @unroll_loop(i32 45)
  %2964 = sext i32 %.1.2.15 to i64
  %2965 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2964
  %2966 = load i8*, i8** %2965, align 8
  %2967 = icmp ne i8* %2966, null
  %2968 = add nsw i32 %.1.2.15, 1
  %2969 = icmp slt i32 %2968, 30
  %.1.2.16 = select i1 %2967, i32 %2968, i32 %.1.2.15
  %2970 = select i1 %2967, i1 %2969, i1 false
  br i1 %2970, label %.lr.ph6.2.17, label %._crit_edge.loopexit.2

.lr.ph6.2.17:                                     ; preds = %.lr.ph6.2.16
  call void @__loop_iteration_test___9()
  %2971 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2972 = sext i32 %.1.2.16 to i64
  %2973 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2972
  store i8* %2971, i8** %2973, align 8
  call void @unroll_loop(i32 45)
  %2974 = sext i32 %.1.2.16 to i64
  %2975 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2974
  %2976 = load i8*, i8** %2975, align 8
  %2977 = icmp ne i8* %2976, null
  %2978 = add nsw i32 %.1.2.16, 1
  %2979 = icmp slt i32 %2978, 30
  %.1.2.17 = select i1 %2977, i32 %2978, i32 %.1.2.16
  %2980 = select i1 %2977, i1 %2979, i1 false
  br i1 %2980, label %.lr.ph6.2.18, label %._crit_edge.loopexit.2

.lr.ph6.2.18:                                     ; preds = %.lr.ph6.2.17
  call void @__loop_iteration_test___9()
  %2981 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2982 = sext i32 %.1.2.17 to i64
  %2983 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2982
  store i8* %2981, i8** %2983, align 8
  call void @unroll_loop(i32 45)
  %2984 = sext i32 %.1.2.17 to i64
  %2985 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2984
  %2986 = load i8*, i8** %2985, align 8
  %2987 = icmp ne i8* %2986, null
  %2988 = add nsw i32 %.1.2.17, 1
  %2989 = icmp slt i32 %2988, 30
  %.1.2.18 = select i1 %2987, i32 %2988, i32 %.1.2.17
  %2990 = select i1 %2987, i1 %2989, i1 false
  br i1 %2990, label %.lr.ph6.2.19, label %._crit_edge.loopexit.2

.lr.ph6.2.19:                                     ; preds = %.lr.ph6.2.18
  call void @__loop_iteration_test___9()
  %2991 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.221, i64 0, i64 0)) #9, !track !107
  %2992 = sext i32 %.1.2.18 to i64
  %2993 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2992
  store i8* %2991, i8** %2993, align 8
  call void @unroll_loop(i32 45)
  %2994 = sext i32 %.1.2.18 to i64
  %2995 = getelementptr inbounds [30 x i8*], [30 x i8*]* %3, i64 0, i64 %2994
  %2996 = load i8*, i8** %2995, align 8
  %2997 = icmp ne i8* %2996, null
  %2998 = add nsw i32 %.1.2.18, 1
  %2999 = icmp slt i32 %2998, 30
  %.1.2.19 = select i1 %2997, i32 %2998, i32 %.1.2.18
  br label %._crit_edge.loopexit.2
}

declare void @__loop_termination_test___9()

declare void @__loop_iteration_test___9()

; Function Attrs: noinline nounwind uwtable
define dso_local void @fwd_init_clone() #0 {
  %1 = alloca i32, align 4
  %2 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %3 = load %struct.generic_list*, %struct.generic_list** %2, align 8
  %4 = icmp ne %struct.generic_list* %3, null
  br i1 %4, label %5, label %.loopexit

; <label>:5:                                      ; preds = %0
  %6 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 21
  %7 = load %struct.generic_list*, %struct.generic_list** %6, align 8
  %8 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %7, i32 0, i32 0
  %9 = load %struct.generic_list*, %struct.generic_list** %8, align 8
  %10 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %48, %.lr.ph.preheader
  %.01 = phi %struct.generic_list* [ %50, %48 ], [ %9, %.lr.ph.preheader ]
  call void @unroll_loop(i32 0)
  %13 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to %struct.fwd*
  %16 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 4
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 5
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 0
  %19 = getelementptr inbounds [257 x i8], [257 x i8]* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = call %struct.sockaddr* @parse_and_alloc_addr(i8* %19, i32 %21, i32* %1)
  %23 = icmp ne %struct.sockaddr* %22, null
  %24 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 0
  %25 = getelementptr inbounds [257 x i8], [257 x i8]* %24, i32 0, i32 0
  %26 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  br i1 %23, label %28, label %37

; <label>:28:                                     ; preds = %.lr.ph
  call void (i32, i8*, ...) @syslog(i32 6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6.197, i64 0, i64 0), i8* %25, i32 %27)
  %29 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 2
  %30 = load %struct.sockaddr*, %struct.sockaddr** %29, align 8
  %31 = bitcast %struct.sockaddr* %30 to i8*
  %32 = bitcast %struct.sockaddr* %22 to i8*
  %33 = load i32, i32* %1, align 4
  %34 = sext i32 %33 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %31, i8* align 2 %32, i64 %34, i1 false), !track !91
  %35 = load i32, i32* %1, align 4
  %36 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 3
  store i32 %35, i32* %36, align 8
  br label %48

; <label>:37:                                     ; preds = %.lr.ph
  call void (i32, i8*, ...) @syslog(i32 3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7.198, i64 0, i64 0), i8* %25, i32 %27)
  %38 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 2
  %39 = load %struct.sockaddr*, %struct.sockaddr** %38, align 8
  %40 = icmp ne %struct.sockaddr* %39, null
  br i1 %40, label %41, label %45

; <label>:41:                                     ; preds = %37
  %42 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 2
  %43 = load %struct.sockaddr*, %struct.sockaddr** %42, align 8
  %44 = bitcast %struct.sockaddr* %43 to i8*
  call void @free(i8* %44) #9
  br label %45

; <label>:45:                                     ; preds = %41, %37
  %46 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 2
  store %struct.sockaddr* null, %struct.sockaddr** %46, align 8
  %47 = getelementptr inbounds %struct.fwd, %struct.fwd* %15, i32 0, i32 3
  store i32 0, i32* %47, align 8
  br label %48

; <label>:48:                                     ; preds = %45, %28
  %49 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %.01, i32 0, i32 0
  %50 = load %struct.generic_list*, %struct.generic_list** %49, align 8
  %51 = getelementptr inbounds %struct.generic_list, %struct.generic_list* %50, i32 0, i32 2
  %52 = load i8*, i8** %51, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %.lr.ph, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %48
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %5, %0
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_signal_init_clone() #0 {
  br label %1

; <label>:1:                                      ; preds = %1, %0
  %lsr.iv = phi i64 [ -120, %0 ], [ %lsr.iv.next, %1 ]
  %lsr.iv3 = inttoptr i64 %lsr.iv to void (i32)**
  %lsr.iv1 = inttoptr i64 %lsr.iv to i32*
  call void @unroll_loop(i32 63)
  %uglygep = getelementptr i8, i8* bitcast ([6 x %struct.anon.124]* @Ev_matrix to i8*), i64 %lsr.iv
  %uglygep4 = bitcast i8* %uglygep to void (i32)**
  %uglygep2 = bitcast i8* %uglygep to i32*
  %scevgep = getelementptr i32, i32* %uglygep2, i64 30
  %2 = load i32, i32* %scevgep, align 8
  %scevgep5 = getelementptr void (i32)*, void (i32)** %uglygep4, i64 16
  %3 = load void (i32)*, void (i32)** %scevgep5, align 8
  %4 = call void (i32)* @signal(i32 %2, void (i32)* %3) #9, !track !136
  %lsr.iv.next = add nsw i64 %lsr.iv, 24
  %exitcond = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond, label %1, label %5

; <label>:5:                                      ; preds = %1
  %6 = call %struct.qset* @queue_create()
  store %struct.qset* %6, %struct.qset** @Ev_signal_queue, align 8
  %7 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  %8 = icmp ne %struct.qset* %7, null
  %. = select i1 %8, i32 0, i32 -1
  ret i32 %.
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_signal_init_clone_clone() #0 {
  br label %1

; <label>:1:                                      ; preds = %0
  call void @__loop_iteration_test___10()
  call void @unroll_loop(i32 63)
  %2 = call void (i32)* @signal(i32 2, void (i32)* @ev_signal_initiator_generic) #9, !track !136
  br i1 true, label %8, label %3

; <label>:3:                                      ; preds = %14, %12, %10, %8, %1
  call void @__loop_termination_test___10()
  %4 = call %struct.qset* @queue_create_clone()
  store %struct.qset* %4, %struct.qset** @Ev_signal_queue, align 8
  %5 = load %struct.qset*, %struct.qset** @Ev_signal_queue, align 8
  %6 = icmp ne i64 10001109, 0
  %7 = icmp ne %struct.qset* %5, null
  %. = select i1 true, i32 0, i32 -1
  ret i32 0

; <label>:8:                                      ; preds = %1
  call void @__loop_iteration_test___10()
  call void @unroll_loop(i32 63)
  %9 = call void (i32)* @signal(i32 1, void (i32)* inttoptr (i64 1 to void (i32)*)) #9, !track !136
  br i1 true, label %10, label %3

; <label>:10:                                     ; preds = %8
  call void @__loop_iteration_test___10()
  call void @unroll_loop(i32 63)
  %11 = call void (i32)* @signal(i32 15, void (i32)* @ev_signal_initiator_generic) #9, !track !136
  br i1 true, label %12, label %3

; <label>:12:                                     ; preds = %10
  call void @__loop_iteration_test___10()
  call void @unroll_loop(i32 63)
  %13 = call void (i32)* @signal(i32 10, void (i32)* @ev_signal_initiator_generic) #9, !track !136
  br i1 true, label %14, label %3

; <label>:14:                                     ; preds = %12
  call void @__loop_iteration_test___10()
  call void @unroll_loop(i32 63)
  %15 = call void (i32)* @signal(i32 12, void (i32)* @ev_signal_initiator_generic) #9, !track !136
  br label %3
}

declare void @__loop_termination_test___10()

declare void @__loop_iteration_test___10()

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.qset* @queue_create_clone() #6 {
  %1 = call noalias i8* @malloc(i64 16) #9, !track !94
  %2 = bitcast i8* %1 to %struct.qset*
  %3 = icmp ne i64 10001109, 0
  %4 = icmp ne %struct.qset* %2, null
  br i1 true, label %8, label %5

; <label>:5:                                      ; preds = %0
  %6 = getelementptr [27 x i8], [27 x i8]* @.str.1.216, i32 0, i32 0
  %7 = getelementptr [15 x i8], [15 x i8]* @.str.215, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %6, i8* %7)
  br label %26

; <label>:8:                                      ; preds = %0
  %9 = call noalias i8* @malloc(i64 16) #9, !track !95
  %10 = bitcast i8* %9 to %struct.gqueue*
  %11 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 1
  store %struct.gqueue* %10, %struct.gqueue** %11, align 8
  %12 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 0
  store %struct.gqueue* %10, %struct.gqueue** %12, align 8
  %13 = icmp ne i64 10001126, 0
  %14 = icmp ne %struct.gqueue* %10, null
  br i1 true, label %19, label %15

; <label>:15:                                     ; preds = %8
  %16 = getelementptr [27 x i8], [27 x i8]* @.str.1.216, i32 0, i32 0
  %17 = getelementptr [15 x i8], [15 x i8]* @.str.215, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %16, i8* %17)
  %18 = bitcast %struct.qset* %2 to i8*
  call void @free(i8* %18) #9
  br label %26

; <label>:19:                                     ; preds = %8
  %20 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 0
  %21 = load %struct.gqueue*, %struct.gqueue** %20, align 8
  %22 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %21, i32 0, i32 0
  store %struct.gqueue* null, %struct.gqueue** %22, align 8
  %23 = getelementptr inbounds %struct.qset, %struct.qset* %2, i32 0, i32 0
  %24 = load %struct.gqueue*, %struct.gqueue** %23, align 8
  %25 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %24, i32 0, i32 1
  store i8* null, i8** %25, align 8
  br label %26

; <label>:26:                                     ; preds = %19, %15, %5
  %.0 = phi %struct.qset* [ %2, %19 ], [ null, %15 ], [ null, %5 ]
  ret %struct.qset* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_to_register_ifcheck_clone() #0 {
  %1 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %2 = load i32, i32* %1, align 4
  %3 = icmp sgt i32 %2, 2
  br i1 %3, label %4, label %7

; <label>:4:                                      ; preds = %0
  %5 = getelementptr [10 x i8], [10 x i8]* @.str.11.387, i32 0, i32 0
  %6 = getelementptr [25 x i8], [25 x i8]* @.str.10.386, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %5, i8* %6)
  br label %7

; <label>:7:                                      ; preds = %4, %0
  %8 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %9 = icmp ne %struct.qset* %8, null
  br i1 %9, label %10, label %28

; <label>:10:                                     ; preds = %7
  %11 = call noalias i8* @malloc(i64 32) #9, !track !133
  %12 = bitcast i8* %11 to %struct.ev_to_data.14*
  %13 = icmp ne i64 10001143, 0
  %14 = icmp ne %struct.ev_to_data.14* %12, null
  br i1 true, label %18, label %15

; <label>:15:                                     ; preds = %10
  %16 = getelementptr [29 x i8], [29 x i8]* @.str.12.388, i32 0, i32 0
  %17 = getelementptr [25 x i8], [25 x i8]* @.str.10.386, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %16, i8* %17)
  br label %28

; <label>:18:                                     ; preds = %10
  %19 = call i64 @time(i64* null) #9
  %20 = add nsw i64 %19, 10
  %21 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 1
  %23 = bitcast {}** %22 to i32 (%struct.ev_to_data.14*)**
  store i32 (%struct.ev_to_data.14*)* @ev_to_handler_ifcheck, i32 (%struct.ev_to_data.14*)** %23, align 8
  %24 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 2
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %12, i32 0, i32 3
  %26 = bitcast %union.anon* %25 to i8**
  store i8* null, i8** %26, align 8
  %27 = call i32 @ev_to_register_clone(%struct.ev_to_data.14* %12)
  br label %28

; <label>:28:                                     ; preds = %18, %15, %7
  %.0 = phi i32 [ 0, %18 ], [ -1, %15 ], [ -1, %7 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ev_to_register_clone(%struct.ev_to_data.14*) #0 {
  %2 = call noalias i8* @malloc(i64 16) #9, !track !132
  %3 = bitcast i8* %2 to %struct.gqueue*
  %4 = icmp ne i64 10001176, 0
  %5 = icmp ne %struct.gqueue* %3, null
  br i1 true, label %9, label %6

; <label>:6:                                      ; preds = %1
  %7 = getelementptr [27 x i8], [27 x i8]* @.str.1.377, i32 0, i32 0
  %8 = getelementptr [17 x i8], [17 x i8]* @.str.376, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 3, i8* %7, i8* %8)
  br label %111

; <label>:9:                                      ; preds = %1
  %10 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %11 = getelementptr inbounds %struct.qset, %struct.qset* %10, i32 0, i32 0
  %12 = load %struct.gqueue*, %struct.gqueue** %11, align 8
  call void @unroll_loop(i32 58)
  %13 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %12, i32 0, i32 0
  %14 = load %struct.gqueue*, %struct.gqueue** %13, align 8
  %15 = icmp ne %struct.gqueue* %14, null
  br i1 %15, label %.lr.ph11.preheader, label %.critedge

.lr.ph11.preheader:                               ; preds = %9
  %16 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %12, i32 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = bitcast i8* %18 to %struct.ev_to_data.14*
  %20 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %19, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = load i64, i64* %16, align 8
  %23 = icmp slt i64 %21, %22
  br i1 %23, label %.lr.ph7, label %.critedge.loopexit

.lr.ph7:                                          ; preds = %.lr.ph11.preheader
  br label %31

.lr.ph11:                                         ; preds = %31
  %.029 = phi %struct.gqueue* [ %33, %31 ]
  %24 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.029, i32 0, i32 1
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast i8* %25 to %struct.ev_to_data.14*
  %27 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = load i64, i64* %16, align 8
  %30 = icmp slt i64 %28, %29
  br i1 %30, label %31, label %.lr.ph11..critedge.loopexit_crit_edge

; <label>:31:                                     ; preds = %.lr.ph11, %.lr.ph7
  %.0296 = phi %struct.gqueue* [ %12, %.lr.ph7 ], [ %.029, %.lr.ph11 ]
  %32 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.0296, i32 0, i32 0
  %33 = load %struct.gqueue*, %struct.gqueue** %32, align 8
  call void @unroll_loop(i32 58)
  %34 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %33, i32 0, i32 0
  %35 = load %struct.gqueue*, %struct.gqueue** %34, align 8
  %36 = icmp ne %struct.gqueue* %35, null
  br i1 %36, label %.lr.ph11, label %..critedge.loopexit_crit_edge

..critedge.loopexit_crit_edge:                    ; preds = %31
  %split8 = phi %struct.gqueue* [ %33, %31 ]
  %split9 = phi %struct.gqueue* [ %.0296, %31 ]
  br label %.critedge.loopexit

.lr.ph11..critedge.loopexit_crit_edge:            ; preds = %.lr.ph11
  %split10 = phi %struct.gqueue* [ %.029, %.lr.ph11 ]
  %split11 = phi %struct.gqueue* [ %.0296, %.lr.ph11 ]
  br label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %.lr.ph11..critedge.loopexit_crit_edge, %..critedge.loopexit_crit_edge, %.lr.ph11.preheader
  %.02.lcssa.ph = phi %struct.gqueue* [ %split10, %.lr.ph11..critedge.loopexit_crit_edge ], [ %split8, %..critedge.loopexit_crit_edge ], [ %12, %.lr.ph11.preheader ]
  %.01.lcssa.ph = phi %struct.gqueue* [ %split11, %.lr.ph11..critedge.loopexit_crit_edge ], [ %split9, %..critedge.loopexit_crit_edge ], [ null, %.lr.ph11.preheader ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %9
  %.02.lcssa = phi %struct.gqueue* [ %12, %9 ], [ %.02.lcssa.ph, %.critedge.loopexit ]
  %.01.lcssa = phi %struct.gqueue* [ null, %9 ], [ %.01.lcssa.ph, %.critedge.loopexit ]
  %37 = icmp ne %struct.gqueue* %.01.lcssa, null
  br i1 %37, label %.preheader, label %49

.preheader:                                       ; preds = %.critedge
  call void @unroll_loop(i32 59)
  %38 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.02.lcssa, i32 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = icmp ne i8* %39, null
  br i1 %40, label %.lr.ph.preheader, label %.critedge1

.lr.ph.preheader:                                 ; preds = %.preheader
  %41 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %0, i32 0, i32 0
  %42 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.02.lcssa, i32 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = bitcast i8* %43 to %struct.ev_to_data.14*
  %45 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %44, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = icmp eq i64 %46, %47
  br i1 %48, label %.lr.ph2, label %.critedge1.loopexit

.lr.ph2:                                          ; preds = %.lr.ph.preheader
  br label %72

; <label>:49:                                     ; preds = %.critedge
  %50 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, 3
  br i1 %52, label %53, label %56

; <label>:53:                                     ; preds = %49
  %54 = getelementptr [22 x i8], [22 x i8]* @.str.2.378, i32 0, i32 0
  %55 = getelementptr [17 x i8], [17 x i8]* @.str.376, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %54, i8* %55)
  br label %56

; <label>:56:                                     ; preds = %53, %49
  %57 = bitcast %struct.ev_to_data.14* %0 to i8*
  %58 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 1
  store i8* %57, i8** %58, align 8
  %59 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %60 = getelementptr inbounds %struct.qset, %struct.qset* %59, i32 0, i32 0
  %61 = load %struct.gqueue*, %struct.gqueue** %60, align 8
  %62 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 0
  store %struct.gqueue* %61, %struct.gqueue** %62, align 8
  %63 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %64 = getelementptr inbounds %struct.qset, %struct.qset* %63, i32 0, i32 0
  store %struct.gqueue* %3, %struct.gqueue** %64, align 8
  br label %111

.lr.ph:                                           ; preds = %72
  %.132 = phi %struct.gqueue* [ %74, %72 ]
  %65 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.132, i32 0, i32 1
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast i8* %66 to %struct.ev_to_data.14*
  %68 = getelementptr inbounds %struct.ev_to_data.14, %struct.ev_to_data.14* %67, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = load i64, i64* %41, align 8
  %71 = icmp eq i64 %69, %70
  br i1 %71, label %72, label %.lr.ph..critedge1.loopexit_crit_edge

; <label>:72:                                     ; preds = %.lr.ph, %.lr.ph2
  %.1321 = phi %struct.gqueue* [ %.02.lcssa, %.lr.ph2 ], [ %.132, %.lr.ph ]
  %73 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.1321, i32 0, i32 0
  %74 = load %struct.gqueue*, %struct.gqueue** %73, align 8
  call void @unroll_loop(i32 59)
  %75 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %74, i32 0, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = icmp ne i8* %76, null
  br i1 %77, label %.lr.ph, label %..critedge1.loopexit_crit_edge

..critedge1.loopexit_crit_edge:                   ; preds = %72
  %split = phi %struct.gqueue* [ %74, %72 ]
  %split3 = phi %struct.gqueue* [ %.1321, %72 ]
  br label %.critedge1.loopexit

.lr.ph..critedge1.loopexit_crit_edge:             ; preds = %.lr.ph
  %split4 = phi %struct.gqueue* [ %.132, %.lr.ph ]
  %split5 = phi %struct.gqueue* [ %.1321, %.lr.ph ]
  br label %.critedge1.loopexit

.critedge1.loopexit:                              ; preds = %.lr.ph..critedge1.loopexit_crit_edge, %..critedge1.loopexit_crit_edge, %.lr.ph.preheader
  %.13.lcssa.ph = phi %struct.gqueue* [ %split4, %.lr.ph..critedge1.loopexit_crit_edge ], [ %split, %..critedge1.loopexit_crit_edge ], [ %.02.lcssa, %.lr.ph.preheader ]
  %.1.lcssa.ph = phi %struct.gqueue* [ %split5, %.lr.ph..critedge1.loopexit_crit_edge ], [ %split3, %..critedge1.loopexit_crit_edge ], [ %.01.lcssa, %.lr.ph.preheader ]
  br label %.critedge1

.critedge1:                                       ; preds = %.critedge1.loopexit, %.preheader
  %.13.lcssa = phi %struct.gqueue* [ %.02.lcssa, %.preheader ], [ %.13.lcssa.ph, %.critedge1.loopexit ]
  %.1.lcssa = phi %struct.gqueue* [ %.01.lcssa, %.preheader ], [ %.1.lcssa.ph, %.critedge1.loopexit ]
  %78 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.13.lcssa, i32 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = icmp ne i8* %79, null
  %81 = getelementptr %struct.ToT, %struct.ToT* @T, i32 0, i32 8
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, 3
  br i1 %80, label %102, label %84

; <label>:84:                                     ; preds = %.critedge1
  br i1 %83, label %85, label %88

; <label>:85:                                     ; preds = %84
  %86 = getelementptr [16 x i8], [16 x i8]* @.str.3.379, i32 0, i32 0
  %87 = getelementptr [17 x i8], [17 x i8]* @.str.376, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %86, i8* %87)
  br label %88

; <label>:88:                                     ; preds = %85, %84
  %89 = bitcast %struct.ev_to_data.14* %0 to i8*
  %90 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %91 = getelementptr inbounds %struct.qset, %struct.qset* %90, i32 0, i32 1
  %92 = load %struct.gqueue*, %struct.gqueue** %91, align 8
  %93 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %92, i32 0, i32 1
  store i8* %89, i8** %93, align 8
  %94 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %95 = getelementptr inbounds %struct.qset, %struct.qset* %94, i32 0, i32 1
  %96 = load %struct.gqueue*, %struct.gqueue** %95, align 8
  %97 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %96, i32 0, i32 0
  store %struct.gqueue* %3, %struct.gqueue** %97, align 8
  %98 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 1
  store i8* null, i8** %98, align 8
  %99 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 0
  store %struct.gqueue* null, %struct.gqueue** %99, align 8
  %100 = load %struct.qset*, %struct.qset** @ev_to_queue, align 8
  %101 = getelementptr inbounds %struct.qset, %struct.qset* %100, i32 0, i32 1
  store %struct.gqueue* %3, %struct.gqueue** %101, align 8
  br label %111

; <label>:102:                                    ; preds = %.critedge1
  br i1 %83, label %103, label %106

; <label>:103:                                    ; preds = %102
  %104 = getelementptr [18 x i8], [18 x i8]* @.str.4.380, i32 0, i32 0
  %105 = getelementptr [17 x i8], [17 x i8]* @.str.376, i32 0, i32 0
  call void (i32, i8*, ...) @syslog(i32 7, i8* %104, i8* %105)
  br label %106

; <label>:106:                                    ; preds = %103, %102
  %107 = bitcast %struct.ev_to_data.14* %0 to i8*
  %108 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 1
  store i8* %107, i8** %108, align 8
  %109 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %.1.lcssa, i32 0, i32 0
  store %struct.gqueue* %3, %struct.gqueue** %109, align 8
  %110 = getelementptr inbounds %struct.gqueue, %struct.gqueue* %3, i32 0, i32 0
  store %struct.gqueue* %.13.lcssa, %struct.gqueue** %110, align 8
  br label %111

; <label>:111:                                    ; preds = %106, %88, %56, %6
  %.0 = phi i32 [ -1, %6 ], [ 0, %88 ], [ 0, %106 ], [ 0, %56 ]
  ret i32 0
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "track_func"="true" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone }
attributes #11 = { noreturn nounwind }

!llvm.ident = !{!17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17, !17}
!llvm.module.flags = !{!18}

!0 = !{i64 18}
!1 = !{i64 17}
!2 = !{i64 20}
!3 = !{i64 16}
!4 = !{i64 89}
!5 = !{i64 7}
!6 = !{i64 25}
!7 = !{i64 15}
!8 = !{i64 5}
!9 = !{i64 84}
!10 = !{i64 9}
!11 = !{i64 19}
!12 = !{i64 53}
!13 = !{i64 52}
!14 = !{i64 44}
!15 = !{i64 1}
!16 = !{i64 0}
!17 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
!18 = !{i32 1, !"wchar_size", i32 4}
!19 = !{i64 11}
!20 = !{i64 81}
!21 = !{i64 50}
!22 = !{i64 91}
!23 = !{i64 76}
!24 = !{i64 80}
!25 = !{i64 79}
!26 = !{i64 78}
!27 = !{i64 105}
!28 = !{i64 49}
!29 = !{i64 77}
!30 = !{i64 104}
!31 = !{i64 83}
!32 = !{i64 102}
!33 = !{i64 33}
!34 = !{i64 2}
!35 = !{i64 100}
!36 = !{i64 99}
!37 = !{i64 97}
!38 = !{i64 98}
!39 = !{i64 6}
!40 = !{i64 95}
!41 = !{i64 94}
!42 = !{i64 93}
!43 = !{i64 67}
!44 = !{i64 63}
!45 = !{i64 62}
!46 = !{i64 23}
!47 = !{i64 60}
!48 = !{i64 59}
!49 = !{i64 58}
!50 = !{i64 57}
!51 = !{i64 36}
!52 = !{i64 29}
!53 = !{i64 64}
!54 = !{i64 65}
!55 = !{i64 66}
!56 = !{i64 75}
!57 = !{i64 35}
!58 = !{i64 28}
!59 = !{i64 68}
!60 = !{i64 31}
!61 = !{i64 69}
!62 = !{i64 70}
!63 = !{i64 71}
!64 = !{i64 72}
!65 = !{i64 55}
!66 = !{i64 73}
!67 = !{i64 74}
!68 = !{i64 103}
!69 = !{i64 166}
!70 = !{i64 13}
!71 = !{i64 163}
!72 = !{i64 162}
!73 = !{i64 161}
!74 = !{i64 45}
!75 = !{i64 119}
!76 = !{i64 160}
!77 = !{i64 41}
!78 = !{i64 159}
!79 = !{i64 158}
!80 = !{i64 167}
!81 = !{i64 156}
!82 = !{i64 155}
!83 = !{i64 24}
!84 = !{i64 154}
!85 = !{i64 153}
!86 = !{i64 101}
!87 = !{i64 109}
!88 = !{i64 108}
!89 = !{i64 34}
!90 = !{i64 107}
!91 = !{i64 106}
!92 = !{i64 185}
!93 = !{i64 184}
!94 = !{i64 46}
!95 = !{i64 12}
!96 = !{i64 182}
!97 = !{i64 181}
!98 = !{i64 4}
!99 = !{i64 179}
!100 = !{i64 165}
!101 = !{i64 178}
!102 = !{i64 177}
!103 = !{i64 186}
!104 = !{i64 175}
!105 = !{i64 174}
!106 = !{i64 173}
!107 = !{i64 3}
!108 = !{i64 171}
!109 = !{i64 170}
!110 = !{i64 61}
!111 = !{i64 169}
!112 = !{i64 168}
!113 = !{i64 157}
!114 = !{i64 32}
!115 = !{i64 128}
!116 = !{i64 37}
!117 = !{i64 127}
!118 = !{i64 126}
!119 = !{i64 48}
!120 = !{i64 125}
!121 = !{i64 124}
!122 = !{i64 40}
!123 = !{i64 10}
!124 = !{i64 122}
!125 = !{i64 121}
!126 = !{i64 120}
!127 = !{i64 129}
!128 = !{i64 118}
!129 = !{i64 117}
!130 = !{i64 116}
!131 = !{i64 115}
!132 = !{i64 114}
!133 = !{i64 113}
!134 = !{i64 112}
!135 = !{i64 111}
!136 = !{i64 138}
!137 = !{i64 43}
!138 = !{i64 147}
!139 = !{i64 146}
!140 = !{i64 145}
!141 = !{i64 21}
!142 = !{i64 42}
!143 = !{i64 30}
!144 = !{i64 39}
!145 = !{i64 22}
!146 = !{i64 144}
!147 = !{i64 143}
!148 = !{i64 152}
!149 = !{i64 151}
!150 = !{i64 150}
!151 = !{i64 26}
!152 = !{i64 8}
!153 = !{i64 47}
!154 = !{i64 149}
!155 = !{i64 176}
!156 = !{i64 142}
!157 = !{i64 141}
!158 = !{i64 27}
!159 = !{i64 140}
!160 = !{i64 139}
!161 = !{i64 148}
!162 = !{i64 137}
!163 = !{i64 38}
!164 = !{i64 136}
!165 = !{i64 135}
!166 = !{i64 54}
!167 = !{i64 134}
!168 = !{i64 133}
!169 = !{i64 132}
!170 = !{i64 131}
!171 = !{i64 130}
!172 = !{i64 123}
!173 = !{i64 172}
!174 = !{i64 180}
!175 = !{i64 183}
!176 = !{i64 56}
!177 = !{!"1"}
!178 = !{i64 164}
!179 = !{i64 96}
!180 = !{i64 110}
!181 = !{i64 82}
!182 = !{i64 51}
!183 = !{i64 92}
!184 = !{i64 85}
!185 = !{i64 86}
!186 = !{i64 87}
!187 = !{i64 88}
!188 = !{i64 90}
!189 = !{i64 14}
!190 = !{i32 -2146611446}
!191 = !{i32 -2146611037}
