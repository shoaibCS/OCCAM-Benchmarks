; ModuleID = './work/bzip2_annotated.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.zzzz = type { i8*, %struct.zzzz* }
%struct.UInt64 = type { [8 x i8] }
%struct.bz_stream = type { i8*, i32, i32, i32, i8*, i32, i32, i32, i8*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8* }
%struct.EState = type { %struct.bz_stream*, i32, i32, i32, i32*, i32*, i32*, i32, i32*, i8*, i16*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.DState = type { %struct.bz_stream*, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], i32*, i16*, i8*, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32* }
%struct.bzFile = type { %struct._IO_FILE*, [5000 x i8], i32, i8, %struct.bz_stream, i32, i8 }

@zSuffix = dso_local global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0)], align 16, !track !0
@.str = private unnamed_addr constant [5 x i8] c".bz2\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c".bz\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c".tbz2\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c".tbz\00", align 1
@unzSuffix = dso_local global [4 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0)], align 16
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [5 x i8] c".tar\00", align 1
@outputHandleJustInCase = common dso_local global %struct._IO_FILE* null, align 8, !track !1
@smallMode = common dso_local global i8 0, align 1
@keepInputFiles = common dso_local global i8 0, align 1
@forceOverwrite = common dso_local global i8 0, align 1
@noisy = common dso_local global i8 0, align 1
@verbosity = common dso_local global i32 0, align 4
@blockSize100k = common dso_local global i32 0, align 4
@testFailsExist = common dso_local global i8 0, align 1
@unzFailsExist = common dso_local global i8 0, align 1
@numFileNames = common dso_local global i32 0, align 4
@numFilesProcessed = common dso_local global i32 0, align 4
@workFactor = common dso_local global i32 0, align 4
@deleteOutputOnInterrupt = common dso_local global i8 0, align 1
@exitValue = common dso_local global i32 0, align 4
@inName = common dso_local global [1034 x i8] zeroinitializer, align 16, !track !2
@outName = common dso_local global [1034 x i8] zeroinitializer, align 16, !track !3
@progNameReally = common dso_local global [1034 x i8] zeroinitializer, align 16, !track !4
@progName = common dso_local global i8* null, align 8, !track !5
@longestFileName = common dso_local global i32 0, align 4
@srcMode = common dso_local global i32 0, align 4
@opMode = common dso_local global i32 0, align 4
@tmpName = common dso_local global [1034 x i8] zeroinitializer, align 16
@.str.6 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"BZIP2\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"BZIP\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"unzip\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"UNZIP\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"z2cat\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"Z2CAT\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"zcat\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"ZCAT\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.16 = private unnamed_addr constant [19 x i8] c"%s: Bad flag `%s'\0A\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"--stdout\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"--decompress\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"--compress\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"--force\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"--test\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"--keep\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"--small\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"--quiet\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"--license\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"--exponential\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"--repetitive-best\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"--repetitive-fast\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"--fast\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"--best\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"%s: -c and -t cannot be used together.\0A\00", align 1
@.str.35 = private unnamed_addr constant [113 x i8] c"\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"testf: bad modes\0A\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"(stdin)\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"%s: There are no files matching `%s'.\0A\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"%s: Can't open input %s: %s.\0A\00", align 1
@.str.59 = private unnamed_addr constant [35 x i8] c"%s: Input file %s is a directory.\0A\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.82 = private unnamed_addr constant [51 x i8] c"%s: I won't read compressed data from a terminal.\0A\00", align 1
@.str.65 = private unnamed_addr constant [34 x i8] c"%s: For help, type: `%s --help'.\0A\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.83 = private unnamed_addr constant [34 x i8] c"%s: Can't open input file %s:%s.\0A\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"testf: bad srcMode\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"  %s: \00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"ok\0A\00", align 1
@.str.98 = private unnamed_addr constant [21 x i8] c"test:bzReadGetUnused\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"%s: %s: \00", align 1
@.str.100 = private unnamed_addr constant [36 x i8] c"data integrity (CRC) error in data\0A\00", align 1
@.str.101 = private unnamed_addr constant [24 x i8] c"file ends unexpectedly\0A\00", align 1
@.str.102 = private unnamed_addr constant [46 x i8] c"bad magic number (file not created by bzip2)\0A\00", align 1
@.str.103 = private unnamed_addr constant [36 x i8] c"trailing garbage after EOF ignored\0A\00", align 1
@.str.104 = private unnamed_addr constant [22 x i8] c"test:unexpected error\00", align 1
@.str.48 = private unnamed_addr constant [38 x i8] c"\0A%s: couldn't allocate enough memory\0A\00", align 1
@.str.39 = private unnamed_addr constant [44 x i8] c"%s: Deleting output file %s, if it exists.\0A\00", align 1
@.str.40 = private unnamed_addr constant [59 x i8] c"%s: WARNING: deletion of output file (apparently) failed.\0A\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"%s: WARNING: deletion of output file suppressed\0A\00", align 1
@.str.42 = private unnamed_addr constant [56 x i8] c"%s:    since input file no longer exists.  Output file\0A\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"%s:    `%s' may be incomplete.\0A\00", align 1
@.str.44 = private unnamed_addr constant [61 x i8] c"%s:    I suggest doing an integrity test (bzip2 -tv) of it.\0A\00", align 1
@.str.45 = private unnamed_addr constant [110 x i8] c"%s: WARNING: some files have not been processed:\0A%s:    %d specified on command line, %d not processed yet.\0A\0A\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"\09Input file = %s, output file = %s\0A\00", align 1
@.str.78 = private unnamed_addr constant [65 x i8] c"\0A%s: I/O or other error, bailing out.  Possible reason follows.\0A\00", align 1
@.str.77 = private unnamed_addr constant [236 x i8] c"bzip2: I'm not configured correctly for this platform!\0A\09I require Int32, Int16 and Char to have sizes\0A\09of 4, 2 and 1 bytes to run properly, and they don't.\0A\09Probably you can fix this by defining them correctly,\0A\09and recompiling.  Bye!\0A\00", align 1
@.str.72 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.71 = private unnamed_addr constant [109 x i8] c"\0A%s: PANIC -- internal consistency error:\0A\09%s\0A\09This is a BUG.  Please report it to me at:\0A\09jseward@bzip.org\0A\00", align 1
@.str.79 = private unnamed_addr constant [23 x i8] c"uncompress: bad modes\0A\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"(stdout)\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c".out\00", align 1
@.str.57 = private unnamed_addr constant [35 x i8] c"%s: Can't open input file %s: %s.\0A\00", align 1
@.str.60 = private unnamed_addr constant [41 x i8] c"%s: Input file %s is not a normal file.\0A\00", align 1
@.str.81 = private unnamed_addr constant [50 x i8] c"%s: Can't guess original name for %s -- using %s\0A\00", align 1
@.str.61 = private unnamed_addr constant [36 x i8] c"%s: Output file %s already exists.\0A\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.62 = private unnamed_addr constant [40 x i8] c"%s: Input file %s has %d other link%s.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.67 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"%s: Can't create output file %s: %s.\0A\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"uncompress: bad srcMode\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"done\0A\00", align 1
@.str.86 = private unnamed_addr constant [19 x i8] c"not a bzip2 file.\0A\00", align 1
@.str.87 = private unnamed_addr constant [29 x i8] c"%s: %s is not a bzip2 file.\0A\00", align 1
@fileMetaInfo = internal global %struct.stat zeroinitializer, align 8
@.str.88 = private unnamed_addr constant [27 x i8] c"decompress:bzReadGetUnused\00", align 1
@.str.90 = private unnamed_addr constant [45 x i8] c"\0A%s: %s: trailing garbage after EOF ignored\0A\00", align 1
@.str.91 = private unnamed_addr constant [28 x i8] c"decompress:unexpected error\00", align 1
@.str.93 = private unnamed_addr constant [95 x i8] c"\0A%s: Compressed file ends unexpectedly;\0A\09perhaps it is corrupted?  *Possible* reason follows.\0A\00", align 1
@.str.46 = private unnamed_addr constant [241 x i8] c"\0AIt is possible that the compressed file(s) have become corrupted.\0AYou can use the -tvv option to test integrity of such files.\0A\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.92 = private unnamed_addr constant [47 x i8] c"\0A%s: Data integrity error when decompressing.\0A\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"compress: bad modes\0A\00", align 1
@.str.58 = private unnamed_addr constant [42 x i8] c"%s: Input file %s already has %s suffix.\0A\00", align 1
@.str.64 = private unnamed_addr constant [50 x i8] c"%s: I won't write compressed data to a terminal.\0A\00", align 1
@.str.69 = private unnamed_addr constant [22 x i8] c"compress: bad srcMode\00", align 1
@.str.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c" no data compressed.\0A\00", align 1
@.str.75 = private unnamed_addr constant [57 x i8] c"%6.3f:1, %6.3f bits/byte, %5.2f%% saved, %s in, %s out.\0A\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"compress:unexpected error\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c"\0A%s: Control-C or similar caught, quitting.\0A\00", align 1
@.str.51 = private unnamed_addr constant [49 x i8] c"%s: %s is redundant in versions 0.9.5 and above\0A\00", align 1
@.str.50 = private unnamed_addr constant [1230 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A\0A   usage: %s [flags and input files in any order]\0A\0A   -h --help           print this message\0A   -d --decompress     force decompression\0A   -z --compress       force compression\0A   -k --keep           keep (don't delete) input files\0A   -f --force          overwrite existing output files\0A   -t --test           test compressed file integrity\0A   -c --stdout         output to standard out\0A   -q --quiet          suppress noncritical error messages\0A   -v --verbose        be verbose (a 2nd -v gives more)\0A   -L --license        display software version & license\0A   -V --version        display software version & license\0A   -s --small          use less memory (at most 2500k)\0A   -1 .. -9            set block size to 100k .. 900k\0A   --fast              alias for -1\0A   --best              alias for -9\0A\0A   If invoked as `bzip2', default action is to compress.\0A              as `bunzip2',  default action is to decompress.\0A              as `bzcat', default action is to decompress to stdout.\0A\0A   If no file names are given, bzip2 compresses or decompresses\0A   from standard input to standard output.  You can combine\0A   short flags, so `-v -4' means the same as -v4 or -4v, &c.\0A\0A\00", align 1
@.str.49 = private unnamed_addr constant [531 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A   \0A   Copyright (C) 1996-2007 by Julian Seward.\0A   \0A   This program is free software; you can redistribute it and/or modify\0A   it under the terms set out in the LICENSE file, which is included\0A   in the bzip2-1.0.5 source distribution.\0A   \0A   This program is distributed in the hope that it will be useful,\0A   but WITHOUT ANY WARRANTY; without even the implied warranty of\0A   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A   LICENSE file for more details.\0A   \0A\00", align 1
@.str.47 = private unnamed_addr constant [120 x i8] c"bzip2: file name\0A`%s'\0Ais suspiciously (more than %d chars) long.\0ATry using a reasonable file name instead.  Sorry! :-)\0A\00", align 1
@.str.36 = private unnamed_addr constant [869 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst compressing.\0A\0A   Possible causes are (most likely first):\0A   (1) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (2) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (3) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (1) and (2).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (1)\0A   or (2), feel free to report it to me at: jseward@bzip.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [996 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst decompressing.\0A\0A   Possible causes are (most likely first):\0A   (1) The compressed data is corrupted, and bzip2's usual checks\0A       failed to detect this.  Try bzip2 -tvv my_file.bz2.\0A   (2) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (3) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (4) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (2) and (3).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (2)\0A   or (3), feel free to report it to me at: jseward@bzip.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.105 = private unnamed_addr constant [443 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis is a bug in bzip2/libbzip2, %s.\0APlease report it to me at: jseward@bzip.org.  If this happened\0Awhen you were using some program which uses libbzip2 as a\0Acomponent, you should also report this bug to the author(s)\0Aof that program.  Please make an effort to report this bug;\0Atimely and accurate bug reports eventually lead to higher\0Aquality software.  Thanks.  Julian Seward, 10 December 2007.\0A\0A\00", align 1
@.str.1.106 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str.5.107 = private unnamed_addr constant [19 x i8] c"1.0.5, 10-Dec-2007\00", align 1
@.str.2.108 = private unnamed_addr constant [18 x i8] c" {0x%08x, 0x%08x}\00", align 1
@.str.3.109 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.4.110 = private unnamed_addr constant [55 x i8] c"\0A    combined CRCs: stored = 0x%08x, computed = 0x%08x\00", align 1
@.str.6.126 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.7.127 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8.128 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.9.129 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@bzerrorstrings = internal global [16 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.131, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13.133, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.134, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.136, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.137, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18.138, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19.139, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0)], align 16
@.str.10.130 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.11.131 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str.12.132 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str.13.133 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str.14.134 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str.15.135 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str.16.136 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str.17.137 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str.18.138 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str.19.139 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str.20.140 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@BZ2_crc32Table = dso_local global [256 x i32] [i32 0, i32 79764919, i32 159529838, i32 222504665, i32 319059676, i32 398814059, i32 445009330, i32 507990021, i32 638119352, i32 583659535, i32 797628118, i32 726387553, i32 890018660, i32 835552979, i32 1015980042, i32 944750013, i32 1276238704, i32 1221641927, i32 1167319070, i32 1095957929, i32 1595256236, i32 1540665371, i32 1452775106, i32 1381403509, i32 1780037320, i32 1859660671, i32 1671105958, i32 1733955601, i32 2031960084, i32 2111593891, i32 1889500026, i32 1952343757, i32 -1742489888, i32 -1662866601, i32 -1851683442, i32 -1788833735, i32 -1960329156, i32 -1880695413, i32 -2103051438, i32 -2040207643, i32 -1104454824, i32 -1159051537, i32 -1213636554, i32 -1284997759, i32 -1389417084, i32 -1444007885, i32 -1532160278, i32 -1603531939, i32 -734892656, i32 -789352409, i32 -575645954, i32 -646886583, i32 -952755380, i32 -1007220997, i32 -827056094, i32 -898286187, i32 -231047128, i32 -151282273, i32 -71779514, i32 -8804623, i32 -515967244, i32 -436212925, i32 -390279782, i32 -327299027, i32 881225847, i32 809987520, i32 1023691545, i32 969234094, i32 662832811, i32 591600412, i32 771767749, i32 717299826, i32 311336399, i32 374308984, i32 453813921, i32 533576470, i32 25881363, i32 88864420, i32 134795389, i32 214552010, i32 2023205639, i32 2086057648, i32 1897238633, i32 1976864222, i32 1804852699, i32 1867694188, i32 1645340341, i32 1724971778, i32 1587496639, i32 1516133128, i32 1461550545, i32 1406951526, i32 1302016099, i32 1230646740, i32 1142491917, i32 1087903418, i32 -1398421865, i32 -1469785312, i32 -1524105735, i32 -1578704818, i32 -1079922613, i32 -1151291908, i32 -1239184603, i32 -1293773166, i32 -1968362705, i32 -1905510760, i32 -2094067647, i32 -2014441994, i32 -1716953613, i32 -1654112188, i32 -1876203875, i32 -1796572374, i32 -525066777, i32 -462094256, i32 -382327159, i32 -302564546, i32 -206542021, i32 -143559028, i32 -97365931, i32 -17609246, i32 -960696225, i32 -1031934488, i32 -817968335, i32 -872425850, i32 -709327229, i32 -780559564, i32 -600130067, i32 -654598054, i32 1762451694, i32 1842216281, i32 1619975040, i32 1682949687, i32 2047383090, i32 2127137669, i32 1938468188, i32 2001449195, i32 1325665622, i32 1271206113, i32 1183200824, i32 1111960463, i32 1543535498, i32 1489069629, i32 1434599652, i32 1363369299, i32 622672798, i32 568075817, i32 748617968, i32 677256519, i32 907627842, i32 853037301, i32 1067152940, i32 995781531, i32 51762726, i32 131386257, i32 177728840, i32 240578815, i32 269590778, i32 349224269, i32 429104020, i32 491947555, i32 -248556018, i32 -168932423, i32 -122852000, i32 -60002089, i32 -500490030, i32 -420856475, i32 -341238852, i32 -278395381, i32 -685261898, i32 -739858943, i32 -559578920, i32 -630940305, i32 -1004286614, i32 -1058877219, i32 -845023740, i32 -916395085, i32 -1119974018, i32 -1174433591, i32 -1262701040, i32 -1333941337, i32 -1371866206, i32 -1426332139, i32 -1481064244, i32 -1552294533, i32 -1690935098, i32 -1611170447, i32 -1833673816, i32 -1770699233, i32 -2009983462, i32 -1930228819, i32 -2119160460, i32 -2056179517, i32 1569362073, i32 1498123566, i32 1409854455, i32 1355396672, i32 1317987909, i32 1246755826, i32 1192025387, i32 1137557660, i32 2072149281, i32 2135122070, i32 1912620623, i32 1992383480, i32 1753615357, i32 1816598090, i32 1627664531, i32 1707420964, i32 295390185, i32 358241886, i32 404320391, i32 483945776, i32 43990325, i32 106832002, i32 186451547, i32 266083308, i32 932423249, i32 861060070, i32 1041341759, i32 986742920, i32 613929101, i32 542559546, i32 756411363, i32 701822548, i32 -978770311, i32 -1050133554, i32 -869589737, i32 -924188512, i32 -693284699, i32 -764654318, i32 -550540341, i32 -605129092, i32 -475935807, i32 -413084042, i32 -366743377, i32 -287118056, i32 -257573603, i32 -194731862, i32 -114850189, i32 -35218492, i32 -1984365303, i32 -1921392450, i32 -2143631769, i32 -2063868976, i32 -1698919467, i32 -1635936670, i32 -1824608069, i32 -1744851700, i32 -1347415887, i32 -1418654458, i32 -1506661409, i32 -1561119128, i32 -1129027987, i32 -1200260134, i32 -1254728445, i32 -1309196108], align 16
@BZ2_rNums = dso_local global [512 x i32] [i32 619, i32 720, i32 127, i32 481, i32 931, i32 816, i32 813, i32 233, i32 566, i32 247, i32 985, i32 724, i32 205, i32 454, i32 863, i32 491, i32 741, i32 242, i32 949, i32 214, i32 733, i32 859, i32 335, i32 708, i32 621, i32 574, i32 73, i32 654, i32 730, i32 472, i32 419, i32 436, i32 278, i32 496, i32 867, i32 210, i32 399, i32 680, i32 480, i32 51, i32 878, i32 465, i32 811, i32 169, i32 869, i32 675, i32 611, i32 697, i32 867, i32 561, i32 862, i32 687, i32 507, i32 283, i32 482, i32 129, i32 807, i32 591, i32 733, i32 623, i32 150, i32 238, i32 59, i32 379, i32 684, i32 877, i32 625, i32 169, i32 643, i32 105, i32 170, i32 607, i32 520, i32 932, i32 727, i32 476, i32 693, i32 425, i32 174, i32 647, i32 73, i32 122, i32 335, i32 530, i32 442, i32 853, i32 695, i32 249, i32 445, i32 515, i32 909, i32 545, i32 703, i32 919, i32 874, i32 474, i32 882, i32 500, i32 594, i32 612, i32 641, i32 801, i32 220, i32 162, i32 819, i32 984, i32 589, i32 513, i32 495, i32 799, i32 161, i32 604, i32 958, i32 533, i32 221, i32 400, i32 386, i32 867, i32 600, i32 782, i32 382, i32 596, i32 414, i32 171, i32 516, i32 375, i32 682, i32 485, i32 911, i32 276, i32 98, i32 553, i32 163, i32 354, i32 666, i32 933, i32 424, i32 341, i32 533, i32 870, i32 227, i32 730, i32 475, i32 186, i32 263, i32 647, i32 537, i32 686, i32 600, i32 224, i32 469, i32 68, i32 770, i32 919, i32 190, i32 373, i32 294, i32 822, i32 808, i32 206, i32 184, i32 943, i32 795, i32 384, i32 383, i32 461, i32 404, i32 758, i32 839, i32 887, i32 715, i32 67, i32 618, i32 276, i32 204, i32 918, i32 873, i32 777, i32 604, i32 560, i32 951, i32 160, i32 578, i32 722, i32 79, i32 804, i32 96, i32 409, i32 713, i32 940, i32 652, i32 934, i32 970, i32 447, i32 318, i32 353, i32 859, i32 672, i32 112, i32 785, i32 645, i32 863, i32 803, i32 350, i32 139, i32 93, i32 354, i32 99, i32 820, i32 908, i32 609, i32 772, i32 154, i32 274, i32 580, i32 184, i32 79, i32 626, i32 630, i32 742, i32 653, i32 282, i32 762, i32 623, i32 680, i32 81, i32 927, i32 626, i32 789, i32 125, i32 411, i32 521, i32 938, i32 300, i32 821, i32 78, i32 343, i32 175, i32 128, i32 250, i32 170, i32 774, i32 972, i32 275, i32 999, i32 639, i32 495, i32 78, i32 352, i32 126, i32 857, i32 956, i32 358, i32 619, i32 580, i32 124, i32 737, i32 594, i32 701, i32 612, i32 669, i32 112, i32 134, i32 694, i32 363, i32 992, i32 809, i32 743, i32 168, i32 974, i32 944, i32 375, i32 748, i32 52, i32 600, i32 747, i32 642, i32 182, i32 862, i32 81, i32 344, i32 805, i32 988, i32 739, i32 511, i32 655, i32 814, i32 334, i32 249, i32 515, i32 897, i32 955, i32 664, i32 981, i32 649, i32 113, i32 974, i32 459, i32 893, i32 228, i32 433, i32 837, i32 553, i32 268, i32 926, i32 240, i32 102, i32 654, i32 459, i32 51, i32 686, i32 754, i32 806, i32 760, i32 493, i32 403, i32 415, i32 394, i32 687, i32 700, i32 946, i32 670, i32 656, i32 610, i32 738, i32 392, i32 760, i32 799, i32 887, i32 653, i32 978, i32 321, i32 576, i32 617, i32 626, i32 502, i32 894, i32 679, i32 243, i32 440, i32 680, i32 879, i32 194, i32 572, i32 640, i32 724, i32 926, i32 56, i32 204, i32 700, i32 707, i32 151, i32 457, i32 449, i32 797, i32 195, i32 791, i32 558, i32 945, i32 679, i32 297, i32 59, i32 87, i32 824, i32 713, i32 663, i32 412, i32 693, i32 342, i32 606, i32 134, i32 108, i32 571, i32 364, i32 631, i32 212, i32 174, i32 643, i32 304, i32 329, i32 343, i32 97, i32 430, i32 751, i32 497, i32 314, i32 983, i32 374, i32 822, i32 928, i32 140, i32 206, i32 73, i32 263, i32 980, i32 736, i32 876, i32 478, i32 430, i32 305, i32 170, i32 514, i32 364, i32 692, i32 829, i32 82, i32 855, i32 953, i32 676, i32 246, i32 369, i32 970, i32 294, i32 750, i32 807, i32 827, i32 150, i32 790, i32 288, i32 923, i32 804, i32 378, i32 215, i32 828, i32 592, i32 281, i32 565, i32 555, i32 710, i32 82, i32 896, i32 831, i32 547, i32 261, i32 524, i32 462, i32 293, i32 465, i32 502, i32 56, i32 661, i32 821, i32 976, i32 991, i32 658, i32 869, i32 905, i32 758, i32 745, i32 193, i32 768, i32 550, i32 608, i32 933, i32 378, i32 286, i32 215, i32 979, i32 792, i32 961, i32 61, i32 688, i32 793, i32 644, i32 986, i32 403, i32 106, i32 366, i32 905, i32 644, i32 372, i32 567, i32 466, i32 434, i32 645, i32 210, i32 389, i32 550, i32 919, i32 135, i32 780, i32 773, i32 635, i32 389, i32 707, i32 100, i32 626, i32 958, i32 165, i32 504, i32 920, i32 176, i32 193, i32 713, i32 857, i32 265, i32 203, i32 50, i32 668, i32 108, i32 645, i32 990, i32 626, i32 197, i32 510, i32 357, i32 358, i32 850, i32 858, i32 364, i32 936, i32 638], align 16
@.str.147 = private unnamed_addr constant [62 x i8] c"    block %d: crc = 0x%08x, combined CRC = 0x%08x, size = %d\0A\00", align 1
@.str.1.148 = private unnamed_addr constant [36 x i8] c"    final combined CRC = 0x%08x\0A   \00", align 1
@.str.2.149 = private unnamed_addr constant [64 x i8] c"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\0A\00", align 1
@.str.3.150 = private unnamed_addr constant [59 x i8] c"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\0A\00", align 1
@.str.4.151 = private unnamed_addr constant [41 x i8] c"      pass %d: size is %d, grp uses are \00", align 1
@.str.5.152 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.6.153 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7.154 = private unnamed_addr constant [26 x i8] c"      bytes: mapping %d, \00", align 1
@.str.8.155 = private unnamed_addr constant [15 x i8] c"selectors %d, \00", align 1
@.str.9.156 = private unnamed_addr constant [18 x i8] c"code lengths %d, \00", align 1
@.str.10.157 = private unnamed_addr constant [10 x i8] c"codes %d\0A\00", align 1
@.str.160 = private unnamed_addr constant [20 x i8] c"\0A    [%d: huff+mtf \00", align 1
@.str.1.161 = private unnamed_addr constant [7 x i8] c"rt+rld\00", align 1
@.str.164 = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str.1.165 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@.str.6.166 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str.2.167 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str.7.168 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@.str.8.169 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@incs = internal global [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16
@.str.3.170 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str.4.171 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str.5.172 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32, i8**) #0 {
  %3 = alloca %struct.zzzz*, align 8, !track !8
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %4 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %5 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %6 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %7 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName(i8* %6, i8* %7)
  %8 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %9 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName(i8* %8, i8* %9)
  %10 = getelementptr inbounds i8*, i8** %1, i64 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName(i8* %12, i8* %11)
  %13 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %13, i8** @progName, align 8
  %14 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %.lr.ph63, label %31

.lr.ph63:                                         ; preds = %2
  %18 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  br label %19

; <label>:19:                                     ; preds = %.lr.ph63, %26
  %.0861 = phi i8* [ %18, %.lr.ph63 ], [ %27, %26 ]
  call void @unroll_loop(i32 0)
  %20 = load i8, i8* %.0861, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp eq i32 %21, 47
  br i1 %22, label %23, label %25

; <label>:23:                                     ; preds = %19
  %24 = getelementptr inbounds i8, i8* %.0861, i64 1
  store i8* %24, i8** @progName, align 8
  br label %25

; <label>:25:                                     ; preds = %23, %19
  br label %26

; <label>:26:                                     ; preds = %25
  %27 = getelementptr inbounds i8, i8* %.0861, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %19, label %._crit_edge64

._crit_edge64:                                    ; preds = %26
  br label %31

; <label>:31:                                     ; preds = %._crit_edge64, %2
  store %struct.zzzz* null, %struct.zzzz** %3, align 8
  %32 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar(%struct.zzzz** %3, i8* %32)
  %33 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar(%struct.zzzz** %3, i8* %33)
  %34 = sub nsw i32 %0, 1, !track_argc !9
  %35 = icmp sle i32 1, %34
  br i1 %35, label %.lr.ph57, label %44

.lr.ph57:                                         ; preds = %31
  %36 = sext i32 %34 to i64
  br label %37

; <label>:37:                                     ; preds = %.lr.ph57, %42
  %indvars.iv59 = phi i64 [ 1, %.lr.ph57 ], [ %indvars.iv.next60, %42 ]
  call void @unroll_loop(i32 1)
  %38 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  %39 = getelementptr inbounds i8*, i8** %1, i64 %indvars.iv59
  %40 = load i8*, i8** %39, align 8
  %41 = call %struct.zzzz* @snocString(%struct.zzzz* %38, i8* %40)
  store %struct.zzzz* %41, %struct.zzzz** %3, align 8
  br label %42

; <label>:42:                                     ; preds = %37
  %indvars.iv.next60 = add nuw i64 %indvars.iv59, 1
  %43 = icmp sle i64 %indvars.iv.next60, %36
  br i1 %43, label %37, label %._crit_edge58

._crit_edge58:                                    ; preds = %42
  br label %44

; <label>:44:                                     ; preds = %._crit_edge58, %31
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %45 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  %46 = icmp ne %struct.zzzz* %45, null
  br i1 %46, label %.lr.ph53, label %84

.lr.ph53:                                         ; preds = %44
  br label %47

; <label>:47:                                     ; preds = %.lr.ph53, %80
  %.051 = phi i8 [ 1, %.lr.ph53 ], [ %.1, %80 ]
  %.0149 = phi %struct.zzzz* [ %45, %.lr.ph53 ], [ %82, %80 ]
  call void @unroll_loop(i32 2)
  %48 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr [3 x i8], [3 x i8]* @.str.9, i32 0, i32 0
  %51 = call i32 @strcmp(i8* %49, i8* %50) #10
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

; <label>:53:                                     ; preds = %47
  br label %80

; <label>:54:                                     ; preds = %47
  %55 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %59, 45
  br i1 %60, label %61, label %65

; <label>:61:                                     ; preds = %54
  %62 = zext i8 %.051 to i32
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %65

; <label>:64:                                     ; preds = %61
  br label %80

; <label>:65:                                     ; preds = %61, %54
  %66 = load i32, i32* @numFileNames, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* @numFileNames, align 4
  %68 = load i32, i32* @longestFileName, align 4
  %69 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = call i64 @strlen(i8* %70) #10
  %72 = trunc i64 %71 to i32
  %73 = icmp slt i32 %68, %72
  br i1 %73, label %74, label %79

; <label>:74:                                     ; preds = %65
  %75 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = call i64 @strlen(i8* %76) #10
  %78 = trunc i64 %77 to i32
  store i32 %78, i32* @longestFileName, align 4
  br label %79

; <label>:79:                                     ; preds = %74, %65
  br label %80

; <label>:80:                                     ; preds = %79, %64, %53
  %.1 = phi i8 [ 0, %53 ], [ %.051, %64 ], [ %.051, %79 ]
  %81 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 1
  %82 = load %struct.zzzz*, %struct.zzzz** %81, align 8
  %83 = icmp ne %struct.zzzz* %82, null
  br i1 %83, label %47, label %._crit_edge54

._crit_edge54:                                    ; preds = %80
  br label %84

; <label>:84:                                     ; preds = %._crit_edge54, %44
  %85 = load i32, i32* @numFileNames, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

; <label>:87:                                     ; preds = %84
  store i32 1, i32* @srcMode, align 4
  br label %89

; <label>:88:                                     ; preds = %84
  store i32 3, i32* @srcMode, align 4
  br label %89

; <label>:89:                                     ; preds = %88, %87
  store i32 1, i32* @opMode, align 4
  %90 = load i8*, i8** @progName, align 8
  %91 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %92 = call i8* @strstr(i8* %90, i8* %91) #10, !track !10
  %93 = icmp ne i8* %92, null
  br i1 %93, label %99, label %94

; <label>:94:                                     ; preds = %89
  %95 = load i8*, i8** @progName, align 8
  %96 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %97 = call i8* @strstr(i8* %95, i8* %96) #10, !track !11
  %98 = icmp ne i8* %97, null
  br i1 %98, label %99, label %100

; <label>:99:                                     ; preds = %94, %89
  store i32 2, i32* @opMode, align 4
  br label %100

; <label>:100:                                    ; preds = %99, %94
  %101 = load i8*, i8** @progName, align 8
  %102 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %103 = call i8* @strstr(i8* %101, i8* %102) #10, !track !12
  %104 = icmp ne i8* %103, null
  br i1 %104, label %120, label %105

; <label>:105:                                    ; preds = %100
  %106 = load i8*, i8** @progName, align 8
  %107 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %108 = call i8* @strstr(i8* %106, i8* %107) #10, !track !13
  %109 = icmp ne i8* %108, null
  br i1 %109, label %120, label %110

; <label>:110:                                    ; preds = %105
  %111 = load i8*, i8** @progName, align 8
  %112 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %113 = call i8* @strstr(i8* %111, i8* %112) #10, !track !14
  %114 = icmp ne i8* %113, null
  br i1 %114, label %120, label %115

; <label>:115:                                    ; preds = %110
  %116 = load i8*, i8** @progName, align 8
  %117 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %118 = call i8* @strstr(i8* %116, i8* %117) #10, !track !15
  %119 = icmp ne i8* %118, null
  br i1 %119, label %120, label %125

; <label>:120:                                    ; preds = %115, %110, %105, %100
  store i32 2, i32* @opMode, align 4
  %121 = load i32, i32* @numFileNames, align 4
  %122 = icmp eq i32 %121, 0
  %123 = zext i1 %122 to i64
  %124 = select i1 %122, i32 1, i32 2
  store i32 %124, i32* @srcMode, align 4
  br label %125

; <label>:125:                                    ; preds = %120, %115
  %126 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  %127 = icmp ne %struct.zzzz* %126, null
  br i1 %127, label %.lr.ph48, label %.loopexit17

.lr.ph48:                                         ; preds = %125
  br label %128

; <label>:128:                                    ; preds = %.lr.ph48, %202
  %.1244 = phi %struct.zzzz* [ %126, %.lr.ph48 ], [ %204, %202 ]
  call void @unroll_loop(i32 3)
  %129 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = getelementptr [3 x i8], [3 x i8]* @.str.9, i32 0, i32 0
  %132 = call i32 @strcmp(i8* %130, i8* %131) #10
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

; <label>:134:                                    ; preds = %128
  %.12.lcssa14 = phi %struct.zzzz* [ %.1244, %128 ]
  br label %206

; <label>:135:                                    ; preds = %128
  %136 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 0
  %139 = load i8, i8* %138, align 1
  %140 = sext i8 %139 to i32
  %141 = icmp eq i32 %140, 45
  br i1 %141, label %142, label %201

; <label>:142:                                    ; preds = %135
  %143 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 1
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 %146 to i32
  %148 = icmp ne i32 %147, 45
  br i1 %148, label %149, label %201

; <label>:149:                                    ; preds = %142
  %150 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 %153 to i32
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %.lr.ph42, label %200

.lr.ph42:                                         ; preds = %149
  br label %156

; <label>:156:                                    ; preds = %.lr.ph42, %194
  %indvars.iv = phi i64 [ 1, %.lr.ph42 ], [ %indvars.iv.next, %194 ]
  call void @unroll_loop(i32 4)
  %157 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 %indvars.iv
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 %160 to i32
  switch i32 %161, label %185 [
    i32 99, label %162
    i32 100, label %163
    i32 122, label %164
    i32 102, label %165
    i32 116, label %166
    i32 107, label %167
    i32 115, label %168
    i32 113, label %169
    i32 49, label %170
    i32 50, label %171
    i32 51, label %172
    i32 52, label %173
    i32 53, label %174
    i32 54, label %175
    i32 55, label %176
    i32 56, label %177
    i32 57, label %178
    i32 86, label %179
    i32 76, label %179
    i32 118, label %180
    i32 104, label %183
  ]

; <label>:162:                                    ; preds = %156
  store i32 2, i32* @srcMode, align 4
  br label %193

; <label>:163:                                    ; preds = %156
  store i32 2, i32* @opMode, align 4
  br label %193

; <label>:164:                                    ; preds = %156
  store i32 1, i32* @opMode, align 4
  br label %193

; <label>:165:                                    ; preds = %156
  store i8 1, i8* @forceOverwrite, align 1
  br label %193

; <label>:166:                                    ; preds = %156
  store i32 3, i32* @opMode, align 4
  br label %193

; <label>:167:                                    ; preds = %156
  store i8 1, i8* @keepInputFiles, align 1
  br label %193

; <label>:168:                                    ; preds = %156
  store i8 1, i8* @smallMode, align 1
  br label %193

; <label>:169:                                    ; preds = %156
  store i8 0, i8* @noisy, align 1
  br label %193

; <label>:170:                                    ; preds = %156
  store i32 1, i32* @blockSize100k, align 4
  br label %193

; <label>:171:                                    ; preds = %156
  store i32 2, i32* @blockSize100k, align 4
  br label %193

; <label>:172:                                    ; preds = %156
  store i32 3, i32* @blockSize100k, align 4
  br label %193

; <label>:173:                                    ; preds = %156
  store i32 4, i32* @blockSize100k, align 4
  br label %193

; <label>:174:                                    ; preds = %156
  store i32 5, i32* @blockSize100k, align 4
  br label %193

; <label>:175:                                    ; preds = %156
  store i32 6, i32* @blockSize100k, align 4
  br label %193

; <label>:176:                                    ; preds = %156
  store i32 7, i32* @blockSize100k, align 4
  br label %193

; <label>:177:                                    ; preds = %156
  store i32 8, i32* @blockSize100k, align 4
  br label %193

; <label>:178:                                    ; preds = %156
  store i32 9, i32* @blockSize100k, align 4
  br label %193

; <label>:179:                                    ; preds = %156, %156
  call void @license()
  br label %193

; <label>:180:                                    ; preds = %156
  %181 = load i32, i32* @verbosity, align 4
  %182 = add nsw i32 %181, 1
  store i32 %182, i32* @verbosity, align 4
  br label %193

; <label>:183:                                    ; preds = %156
  %184 = load i8*, i8** @progName, align 8
  call void @usage(i8* %184)
  call void @exit(i32 0) #11
  br label %UnifiedUnreachableBlock

; <label>:185:                                    ; preds = %156
  %.12.lcssa15 = phi %struct.zzzz* [ %.1244, %156 ]
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %187 = load i8*, i8** @progName, align 8
  %188 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %191 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %186, i8* %190, i8* %187, i8* %189)
  %192 = load i8*, i8** @progName, align 8
  call void @usage(i8* %192)
  call void @exit(i32 1) #11
  br label %UnifiedUnreachableBlock

; <label>:193:                                    ; preds = %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167, %166, %165, %164, %163, %162
  br label %194

; <label>:194:                                    ; preds = %193
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %195 = load i8*, i8** %150, align 8
  %196 = getelementptr inbounds i8, i8* %195, i64 %indvars.iv.next
  %197 = load i8, i8* %196, align 1
  %198 = sext i8 %197 to i32
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %156, label %._crit_edge43

._crit_edge43:                                    ; preds = %194
  br label %200

; <label>:200:                                    ; preds = %._crit_edge43, %149
  %.1246 = phi %struct.zzzz* [ %.1244, %._crit_edge43 ], [ %.1244, %149 ]
  br label %201

; <label>:201:                                    ; preds = %200, %142, %135
  %.1245 = phi %struct.zzzz* [ %.1246, %200 ], [ %.1244, %142 ], [ %.1244, %135 ]
  br label %202

; <label>:202:                                    ; preds = %201
  %203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1245, i32 0, i32 1
  %204 = load %struct.zzzz*, %struct.zzzz** %203, align 8
  %205 = icmp ne %struct.zzzz* %204, null
  br i1 %205, label %128, label %..loopexit17_crit_edge

..loopexit17_crit_edge:                           ; preds = %202
  br label %.loopexit17

.loopexit17:                                      ; preds = %..loopexit17_crit_edge, %125
  br label %206

; <label>:206:                                    ; preds = %.loopexit17, %134
  %207 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  %208 = icmp ne %struct.zzzz* %207, null
  br i1 %208, label %.lr.ph39, label %.loopexit

.lr.ph39:                                         ; preds = %206
  br label %209

; <label>:209:                                    ; preds = %.lr.ph39, %374
  %.2337 = phi %struct.zzzz* [ %207, %.lr.ph39 ], [ %376, %374 ]
  call void @unroll_loop(i32 5)
  %210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr [3 x i8], [3 x i8]* @.str.9, i32 0, i32 0
  %213 = call i32 @strcmp(i8* %211, i8* %212) #10
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

; <label>:215:                                    ; preds = %209
  %.23.lcssa11 = phi %struct.zzzz* [ %.2337, %209 ]
  br label %378

; <label>:216:                                    ; preds = %209
  %217 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr [9 x i8], [9 x i8]* @.str.17, i32 0, i32 0
  %220 = call i32 @strcmp(i8* %218, i8* %219) #10
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

; <label>:222:                                    ; preds = %216
  store i32 2, i32* @srcMode, align 4
  br label %373

; <label>:223:                                    ; preds = %216
  %224 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = getelementptr [13 x i8], [13 x i8]* @.str.18, i32 0, i32 0
  %227 = call i32 @strcmp(i8* %225, i8* %226) #10
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

; <label>:229:                                    ; preds = %223
  store i32 2, i32* @opMode, align 4
  br label %372

; <label>:230:                                    ; preds = %223
  %231 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %232 = load i8*, i8** %231, align 8
  %233 = getelementptr [11 x i8], [11 x i8]* @.str.19, i32 0, i32 0
  %234 = call i32 @strcmp(i8* %232, i8* %233) #10
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %237

; <label>:236:                                    ; preds = %230
  store i32 1, i32* @opMode, align 4
  br label %371

; <label>:237:                                    ; preds = %230
  %238 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = getelementptr [8 x i8], [8 x i8]* @.str.20, i32 0, i32 0
  %241 = call i32 @strcmp(i8* %239, i8* %240) #10
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

; <label>:243:                                    ; preds = %237
  store i8 1, i8* @forceOverwrite, align 1
  br label %370

; <label>:244:                                    ; preds = %237
  %245 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr [7 x i8], [7 x i8]* @.str.21, i32 0, i32 0
  %248 = call i32 @strcmp(i8* %246, i8* %247) #10
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

; <label>:250:                                    ; preds = %244
  store i32 3, i32* @opMode, align 4
  br label %369

; <label>:251:                                    ; preds = %244
  %252 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = getelementptr [7 x i8], [7 x i8]* @.str.22, i32 0, i32 0
  %255 = call i32 @strcmp(i8* %253, i8* %254) #10
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

; <label>:257:                                    ; preds = %251
  store i8 1, i8* @keepInputFiles, align 1
  br label %368

; <label>:258:                                    ; preds = %251
  %259 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = getelementptr [8 x i8], [8 x i8]* @.str.23, i32 0, i32 0
  %262 = call i32 @strcmp(i8* %260, i8* %261) #10
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

; <label>:264:                                    ; preds = %258
  store i8 1, i8* @smallMode, align 1
  br label %367

; <label>:265:                                    ; preds = %258
  %266 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = getelementptr [8 x i8], [8 x i8]* @.str.24, i32 0, i32 0
  %269 = call i32 @strcmp(i8* %267, i8* %268) #10
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

; <label>:271:                                    ; preds = %265
  store i8 0, i8* @noisy, align 1
  br label %366

; <label>:272:                                    ; preds = %265
  %273 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr [10 x i8], [10 x i8]* @.str.25, i32 0, i32 0
  %276 = call i32 @strcmp(i8* %274, i8* %275) #10
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

; <label>:278:                                    ; preds = %272
  call void @license()
  br label %365

; <label>:279:                                    ; preds = %272
  %280 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  %282 = getelementptr [10 x i8], [10 x i8]* @.str.26, i32 0, i32 0
  %283 = call i32 @strcmp(i8* %281, i8* %282) #10
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

; <label>:285:                                    ; preds = %279
  call void @license()
  br label %364

; <label>:286:                                    ; preds = %279
  %287 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %288 = load i8*, i8** %287, align 8
  %289 = getelementptr [14 x i8], [14 x i8]* @.str.27, i32 0, i32 0
  %290 = call i32 @strcmp(i8* %288, i8* %289) #10
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

; <label>:292:                                    ; preds = %286
  store i32 1, i32* @workFactor, align 4
  br label %363

; <label>:293:                                    ; preds = %286
  %294 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  %296 = getelementptr [18 x i8], [18 x i8]* @.str.28, i32 0, i32 0
  %297 = call i32 @strcmp(i8* %295, i8* %296) #10
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %302

; <label>:299:                                    ; preds = %293
  %300 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %301 = load i8*, i8** %300, align 8
  call void @redundant(i8* %301)
  br label %362

; <label>:302:                                    ; preds = %293
  %303 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %304 = load i8*, i8** %303, align 8
  %305 = getelementptr [18 x i8], [18 x i8]* @.str.29, i32 0, i32 0
  %306 = call i32 @strcmp(i8* %304, i8* %305) #10
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %311

; <label>:308:                                    ; preds = %302
  %309 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %310 = load i8*, i8** %309, align 8
  call void @redundant(i8* %310)
  br label %361

; <label>:311:                                    ; preds = %302
  %312 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  %314 = getelementptr [7 x i8], [7 x i8]* @.str.30, i32 0, i32 0
  %315 = call i32 @strcmp(i8* %313, i8* %314) #10
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %318

; <label>:317:                                    ; preds = %311
  store i32 1, i32* @blockSize100k, align 4
  br label %360

; <label>:318:                                    ; preds = %311
  %319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  %321 = getelementptr [7 x i8], [7 x i8]* @.str.31, i32 0, i32 0
  %322 = call i32 @strcmp(i8* %320, i8* %321) #10
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

; <label>:324:                                    ; preds = %318
  store i32 9, i32* @blockSize100k, align 4
  br label %359

; <label>:325:                                    ; preds = %318
  %326 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = getelementptr [10 x i8], [10 x i8]* @.str.32, i32 0, i32 0
  %329 = call i32 @strcmp(i8* %327, i8* %328) #10
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %334

; <label>:331:                                    ; preds = %325
  %332 = load i32, i32* @verbosity, align 4
  %333 = add nsw i32 %332, 1
  store i32 %333, i32* @verbosity, align 4
  br label %358

; <label>:334:                                    ; preds = %325
  %335 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %336 = load i8*, i8** %335, align 8
  %337 = getelementptr [7 x i8], [7 x i8]* @.str.33, i32 0, i32 0
  %338 = call i32 @strcmp(i8* %336, i8* %337) #10
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %342

; <label>:340:                                    ; preds = %334
  %341 = load i8*, i8** @progName, align 8
  call void @usage(i8* %341)
  call void @exit(i32 0) #11
  br label %UnifiedUnreachableBlock

; <label>:342:                                    ; preds = %334
  %343 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = getelementptr [3 x i8], [3 x i8]* @.str.9, i32 0, i32 0
  %346 = call i32 @strncmp(i8* %344, i8* %345, i64 2) #10
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %356

; <label>:348:                                    ; preds = %342
  %.23.lcssa13 = phi %struct.zzzz* [ %.2337, %342 ]
  %349 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %350 = load i8*, i8** @progName, align 8
  %351 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %352 = load i8*, i8** %351, align 8
  %353 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %354 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %349, i8* %353, i8* %350, i8* %352)
  %355 = load i8*, i8** @progName, align 8
  call void @usage(i8* %355)
  call void @exit(i32 1) #11
  br label %UnifiedUnreachableBlock

; <label>:356:                                    ; preds = %342
  br label %357

; <label>:357:                                    ; preds = %356
  br label %358

; <label>:358:                                    ; preds = %357, %331
  br label %359

; <label>:359:                                    ; preds = %358, %324
  br label %360

; <label>:360:                                    ; preds = %359, %317
  br label %361

; <label>:361:                                    ; preds = %360, %308
  br label %362

; <label>:362:                                    ; preds = %361, %299
  br label %363

; <label>:363:                                    ; preds = %362, %292
  br label %364

; <label>:364:                                    ; preds = %363, %285
  br label %365

; <label>:365:                                    ; preds = %364, %278
  br label %366

; <label>:366:                                    ; preds = %365, %271
  br label %367

; <label>:367:                                    ; preds = %366, %264
  br label %368

; <label>:368:                                    ; preds = %367, %257
  br label %369

; <label>:369:                                    ; preds = %368, %250
  br label %370

; <label>:370:                                    ; preds = %369, %243
  br label %371

; <label>:371:                                    ; preds = %370, %236
  br label %372

; <label>:372:                                    ; preds = %371, %229
  br label %373

; <label>:373:                                    ; preds = %372, %222
  br label %374

; <label>:374:                                    ; preds = %373
  %375 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 1
  %376 = load %struct.zzzz*, %struct.zzzz** %375, align 8
  %377 = icmp ne %struct.zzzz* %376, null
  br i1 %377, label %209, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %374
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %206
  br label %378

; <label>:378:                                    ; preds = %.loopexit, %215
  %379 = load i32, i32* @verbosity, align 4
  %380 = icmp sgt i32 %379, 4
  br i1 %380, label %381, label %382

; <label>:381:                                    ; preds = %378
  store i32 4, i32* @verbosity, align 4
  br label %382

; <label>:382:                                    ; preds = %381, %378
  %383 = load i32, i32* @opMode, align 4
  %384 = icmp eq i32 %383, 1
  br i1 %384, label %385, label %393

; <label>:385:                                    ; preds = %382
  %386 = load i8, i8* @smallMode, align 1
  %387 = zext i8 %386 to i32
  %388 = icmp ne i32 %387, 0
  br i1 %388, label %389, label %393

; <label>:389:                                    ; preds = %385
  %390 = load i32, i32* @blockSize100k, align 4
  %391 = icmp sgt i32 %390, 2
  br i1 %391, label %392, label %393

; <label>:392:                                    ; preds = %389
  store i32 2, i32* @blockSize100k, align 4
  br label %393

; <label>:393:                                    ; preds = %392, %389, %385, %382
  %394 = load i32, i32* @opMode, align 4
  %395 = icmp eq i32 %394, 3
  br i1 %395, label %396, label %404

; <label>:396:                                    ; preds = %393
  %397 = load i32, i32* @srcMode, align 4
  %398 = icmp eq i32 %397, 2
  br i1 %398, label %399, label %404

; <label>:399:                                    ; preds = %396
  %400 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %401 = load i8*, i8** @progName, align 8
  %402 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %403 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %400, i8* %402, i8* %401)
  call void @exit(i32 1) #11
  br label %UnifiedUnreachableBlock

; <label>:404:                                    ; preds = %396, %393
  %405 = load i32, i32* @srcMode, align 4
  %406 = icmp eq i32 %405, 2
  br i1 %406, label %407, label %411

; <label>:407:                                    ; preds = %404
  %408 = load i32, i32* @numFileNames, align 4
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %411

; <label>:410:                                    ; preds = %407
  store i32 1, i32* @srcMode, align 4
  br label %411

; <label>:411:                                    ; preds = %410, %407, %404
  %412 = load i32, i32* @opMode, align 4
  %413 = icmp ne i32 %412, 1
  br i1 %413, label %414, label %415

; <label>:414:                                    ; preds = %411
  store i32 0, i32* @blockSize100k, align 4
  br label %415

; <label>:415:                                    ; preds = %414, %411
  %416 = load i32, i32* @srcMode, align 4
  %417 = icmp eq i32 %416, 3
  br i1 %417, label %418, label %422

; <label>:418:                                    ; preds = %415
  %419 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %420 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %421 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %422

; <label>:422:                                    ; preds = %418, %415
  %423 = load i32, i32* @opMode, align 4
  %424 = icmp eq i32 %423, 1
  br i1 %424, label %425, label %461

; <label>:425:                                    ; preds = %422
  %426 = load i32, i32* @srcMode, align 4
  %427 = icmp eq i32 %426, 1
  br i1 %427, label %428, label %429

; <label>:428:                                    ; preds = %425
  call void @compress(i8* null)
  br label %460

; <label>:429:                                    ; preds = %425
  %430 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  %431 = icmp ne %struct.zzzz* %430, null
  br i1 %431, label %.lr.ph23, label %459

.lr.ph23:                                         ; preds = %429
  br label %432

; <label>:432:                                    ; preds = %.lr.ph23, %455
  %.221 = phi i8 [ 1, %.lr.ph23 ], [ %.3, %455 ]
  %.3419 = phi %struct.zzzz* [ %430, %.lr.ph23 ], [ %457, %455 ]
  call void @unroll_loop(i32 6)
  %433 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = getelementptr [3 x i8], [3 x i8]* @.str.9, i32 0, i32 0
  %436 = call i32 @strcmp(i8* %434, i8* %435) #10
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %439

; <label>:438:                                    ; preds = %432
  br label %455

; <label>:439:                                    ; preds = %432
  %440 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  %442 = getelementptr inbounds i8, i8* %441, i64 0
  %443 = load i8, i8* %442, align 1
  %444 = sext i8 %443 to i32
  %445 = icmp eq i32 %444, 45
  br i1 %445, label %446, label %450

; <label>:446:                                    ; preds = %439
  %447 = zext i8 %.221 to i32
  %448 = icmp ne i32 %447, 0
  br i1 %448, label %449, label %450

; <label>:449:                                    ; preds = %446
  br label %455

; <label>:450:                                    ; preds = %446, %439
  %451 = load i32, i32* @numFilesProcessed, align 4
  %452 = add nsw i32 %451, 1
  store i32 %452, i32* @numFilesProcessed, align 4
  %453 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %454 = load i8*, i8** %453, align 8
  call void @compress(i8* %454)
  br label %455

; <label>:455:                                    ; preds = %450, %449, %438
  %.3 = phi i8 [ 0, %438 ], [ %.221, %449 ], [ %.221, %450 ]
  %456 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 1
  %457 = load %struct.zzzz*, %struct.zzzz** %456, align 8
  %458 = icmp ne %struct.zzzz* %457, null
  br i1 %458, label %432, label %._crit_edge24

._crit_edge24:                                    ; preds = %455
  br label %459

; <label>:459:                                    ; preds = %._crit_edge24, %429
  br label %460

; <label>:460:                                    ; preds = %459, %428
  br label %555

; <label>:461:                                    ; preds = %422
  %462 = load i32, i32* @opMode, align 4
  %463 = icmp eq i32 %462, 2
  br i1 %463, label %464, label %505

; <label>:464:                                    ; preds = %461
  store i8 0, i8* @unzFailsExist, align 1
  %465 = load i32, i32* @srcMode, align 4
  %466 = icmp eq i32 %465, 1
  br i1 %466, label %467, label %468

; <label>:467:                                    ; preds = %464
  call void @uncompress(i8* null)
  br label %499

; <label>:468:                                    ; preds = %464
  %469 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  %470 = icmp ne %struct.zzzz* %469, null
  br i1 %470, label %.lr.ph29, label %498

.lr.ph29:                                         ; preds = %468
  br label %471

; <label>:471:                                    ; preds = %.lr.ph29, %494
  %.427 = phi i8 [ 1, %.lr.ph29 ], [ %.5, %494 ]
  %.4525 = phi %struct.zzzz* [ %469, %.lr.ph29 ], [ %496, %494 ]
  call void @unroll_loop(i32 7)
  %472 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %473 = load i8*, i8** %472, align 8
  %474 = getelementptr [3 x i8], [3 x i8]* @.str.9, i32 0, i32 0
  %475 = call i32 @strcmp(i8* %473, i8* %474) #10
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %478

; <label>:477:                                    ; preds = %471
  br label %494

; <label>:478:                                    ; preds = %471
  %479 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %480 = load i8*, i8** %479, align 8
  %481 = getelementptr inbounds i8, i8* %480, i64 0
  %482 = load i8, i8* %481, align 1
  %483 = sext i8 %482 to i32
  %484 = icmp eq i32 %483, 45
  br i1 %484, label %485, label %489

; <label>:485:                                    ; preds = %478
  %486 = zext i8 %.427 to i32
  %487 = icmp ne i32 %486, 0
  br i1 %487, label %488, label %489

; <label>:488:                                    ; preds = %485
  br label %494

; <label>:489:                                    ; preds = %485, %478
  %490 = load i32, i32* @numFilesProcessed, align 4
  %491 = add nsw i32 %490, 1
  store i32 %491, i32* @numFilesProcessed, align 4
  %492 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %493 = load i8*, i8** %492, align 8
  call void @uncompress(i8* %493)
  br label %494

; <label>:494:                                    ; preds = %489, %488, %477
  %.5 = phi i8 [ 0, %477 ], [ %.427, %488 ], [ %.427, %489 ]
  %495 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %496 = load %struct.zzzz*, %struct.zzzz** %495, align 8
  %497 = icmp ne %struct.zzzz* %496, null
  br i1 %497, label %471, label %._crit_edge30

._crit_edge30:                                    ; preds = %494
  br label %498

; <label>:498:                                    ; preds = %._crit_edge30, %468
  br label %499

; <label>:499:                                    ; preds = %498, %467
  %500 = load i8, i8* @unzFailsExist, align 1
  %501 = icmp ne i8 %500, 0
  br i1 %501, label %502, label %504

; <label>:502:                                    ; preds = %499
  call void @setExit(i32 2)
  %503 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %503) #11
  br label %UnifiedUnreachableBlock

; <label>:504:                                    ; preds = %499
  br label %554

; <label>:505:                                    ; preds = %461
  store i8 0, i8* @testFailsExist, align 1
  %506 = load i32, i32* @srcMode, align 4
  %507 = icmp eq i32 %506, 1
  br i1 %507, label %508, label %509

; <label>:508:                                    ; preds = %505
  call void @testf(i8* null)
  br label %540

; <label>:509:                                    ; preds = %505
  %510 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  %511 = icmp ne %struct.zzzz* %510, null
  br i1 %511, label %.lr.ph35, label %539

.lr.ph35:                                         ; preds = %509
  br label %512

; <label>:512:                                    ; preds = %.lr.ph35, %535
  %.633 = phi i8 [ 1, %.lr.ph35 ], [ %.7, %535 ]
  %.5631 = phi %struct.zzzz* [ %510, %.lr.ph35 ], [ %537, %535 ]
  call void @unroll_loop(i32 8)
  %513 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %514 = load i8*, i8** %513, align 8
  %515 = getelementptr [3 x i8], [3 x i8]* @.str.9, i32 0, i32 0
  %516 = call i32 @strcmp(i8* %514, i8* %515) #10
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %519

; <label>:518:                                    ; preds = %512
  br label %535

; <label>:519:                                    ; preds = %512
  %520 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %521 = load i8*, i8** %520, align 8
  %522 = getelementptr inbounds i8, i8* %521, i64 0
  %523 = load i8, i8* %522, align 1
  %524 = sext i8 %523 to i32
  %525 = icmp eq i32 %524, 45
  br i1 %525, label %526, label %530

; <label>:526:                                    ; preds = %519
  %527 = zext i8 %.633 to i32
  %528 = icmp ne i32 %527, 0
  br i1 %528, label %529, label %530

; <label>:529:                                    ; preds = %526
  br label %535

; <label>:530:                                    ; preds = %526, %519
  %531 = load i32, i32* @numFilesProcessed, align 4
  %532 = add nsw i32 %531, 1
  store i32 %532, i32* @numFilesProcessed, align 4
  %533 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %534 = load i8*, i8** %533, align 8
  call void @testf(i8* %534)
  br label %535

; <label>:535:                                    ; preds = %530, %529, %518
  %.7 = phi i8 [ 0, %518 ], [ %.633, %529 ], [ %.633, %530 ]
  %536 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %537 = load %struct.zzzz*, %struct.zzzz** %536, align 8
  %538 = icmp ne %struct.zzzz* %537, null
  br i1 %538, label %512, label %._crit_edge36

._crit_edge36:                                    ; preds = %535
  br label %539

; <label>:539:                                    ; preds = %._crit_edge36, %509
  br label %540

; <label>:540:                                    ; preds = %539, %508
  %541 = load i8, i8* @testFailsExist, align 1
  %542 = zext i8 %541 to i32
  %543 = icmp ne i32 %542, 0
  br i1 %543, label %544, label %553

; <label>:544:                                    ; preds = %540
  %545 = load i8, i8* @noisy, align 1
  %546 = zext i8 %545 to i32
  %547 = icmp ne i32 %546, 0
  br i1 %547, label %548, label %553

; <label>:548:                                    ; preds = %544
  %549 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %550 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %551 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %549, i8* %550)
  call void @setExit(i32 2)
  %552 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %552) #11
  br label %UnifiedUnreachableBlock

; <label>:553:                                    ; preds = %544, %540
  br label %554

; <label>:554:                                    ; preds = %553, %504
  br label %555

; <label>:555:                                    ; preds = %554, %460
  %556 = load %struct.zzzz*, %struct.zzzz** %3, align 8
  %557 = icmp ne %struct.zzzz* %556, null
  br i1 %557, label %.lr.ph, label %570

.lr.ph:                                           ; preds = %555
  br label %558

; <label>:558:                                    ; preds = %.lr.ph, %567
  %.6718 = phi %struct.zzzz* [ %556, %.lr.ph ], [ %560, %567 ]
  call void @unroll_loop(i32 9)
  %559 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %560 = load %struct.zzzz*, %struct.zzzz** %559, align 8
  %561 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %562 = load i8*, i8** %561, align 8
  %563 = icmp ne i8* %562, null
  br i1 %563, label %564, label %567

; <label>:564:                                    ; preds = %558
  %565 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %566 = load i8*, i8** %565, align 8
  call void @free(i8* %566) #9
  br label %567

; <label>:567:                                    ; preds = %564, %558
  %568 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %568) #9
  %569 = icmp ne %struct.zzzz* %560, null
  br i1 %569, label %558, label %._crit_edge

._crit_edge:                                      ; preds = %567
  br label %570

; <label>:570:                                    ; preds = %._crit_edge, %555
  %571 = load i32, i32* @exitValue, align 4
  ret i32 %571

UnifiedUnreachableBlock:                          ; preds = %548, %502, %399, %348, %340, %185, %183
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @mySIGSEGVorSIGBUScatcher(i32) #0 {
  %2 = load i32, i32* @opMode, align 4
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %4, label %9

; <label>:4:                                      ; preds = %1
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %6 = load i8*, i8** @progName, align 8
  %7 = getelementptr [869 x i8], [869 x i8]* @.str.36, i32 0, i32 0
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %7, i8* %6)
  br label %14

; <label>:9:                                      ; preds = %1
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = load i8*, i8** @progName, align 8
  %12 = getelementptr [996 x i8], [996 x i8]* @.str.37, i32 0, i32 0
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %12, i8* %11)
  br label %14

; <label>:14:                                     ; preds = %9, %4
  call void @showFileNames()
  %15 = load i32, i32* @opMode, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %14
  call void @cleanUpAndFail(i32 3) #12
  br label %UnifiedUnreachableBlock

; <label>:18:                                     ; preds = %14
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  br label %UnifiedUnreachableBlock
                                                  ; No predecessors!
  ret void

UnifiedUnreachableBlock:                          ; preds = %18, %17
  unreachable
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @copyFileName(i8*, i8*) #0 {
  %3 = call i64 @strlen(i8* %1) #10
  %4 = icmp ugt i64 %3, 1024
  br i1 %4, label %5, label %10

; <label>:5:                                      ; preds = %2
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = getelementptr [120 x i8], [120 x i8]* @.str.47, i32 0, i32 0
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* %7, i8* %1, i32 1024)
  call void @setExit(i32 1)
  %9 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %9) #11
  unreachable

; <label>:10:                                     ; preds = %2
  %11 = call i8* @strncpy(i8* %0, i8* %1, i64 1024) #9, !track !16
  %12 = getelementptr inbounds i8, i8* %0, i64 1024
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @addFlagsFromEnvVar(%struct.zzzz**, i8*) #0 {
  %3 = call i8* @getenv(i8* %1) #9
  %4 = icmp ne i8* %3, null
  br i1 %4, label %5, label %74

; <label>:5:                                      ; preds = %2
  %6 = load i8, i8* %3, align 1
  %7 = sext i8 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %.lr.ph11

.lr.ph11:                                         ; preds = %5
  br label %10

._crit_edge12:                                    ; preds = %67
  br label %9

; <label>:9:                                      ; preds = %._crit_edge12, %5
  br label %73

; <label>:10:                                     ; preds = %.lr.ph11, %67
  %.09 = phi i8* [ %3, %.lr.ph11 ], [ %.1.lcssa, %67 ]
  %.028 = phi i32 [ 0, %.lr.ph11 ], [ %47, %67 ]
  call void @unroll_loop(i32 11)
  %11 = sext i32 %.028 to i64
  %12 = getelementptr inbounds i8, i8* %.09, i64 %11
  br label %13

; <label>:13:                                     ; preds = %13, %10
  %.1 = phi i8* [ %12, %10 ], [ %24, %13 ]
  %14 = call i16** @__ctype_b_loc() #13
  %15 = load i16*, i16** %14, align 8
  %16 = load i8, i8* %.1, align 1
  %17 = sext i8 %16 to i32
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %15, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = and i32 %21, 8192
  %23 = icmp ne i32 %22, 0
  %24 = getelementptr inbounds i8, i8* %.1, i32 1
  br i1 %23, label %13, label %25

; <label>:25:                                     ; preds = %13
  %.1.lcssa = phi i8* [ %.1, %13 ]
  br label %26

; <label>:26:                                     ; preds = %44, %25
  %indvars.iv = phi i64 [ %indvars.iv.next, %44 ], [ 0, %25 ]
  %27 = getelementptr inbounds i8, i8* %.1.lcssa, i64 %indvars.iv
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %44

; <label>:31:                                     ; preds = %26
  %32 = call i16** @__ctype_b_loc() #13
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds i8, i8* %.1.lcssa, i64 %indvars.iv
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i16, i16* %33, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = and i32 %40, 8192
  %42 = icmp ne i32 %41, 0
  %43 = xor i1 %42, true
  br label %44

; <label>:44:                                     ; preds = %31, %26
  %45 = phi i1 [ false, %26 ], [ %43, %31 ]
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  br i1 %45, label %26, label %46

; <label>:46:                                     ; preds = %44
  %.13.lcssa.wide = phi i64 [ %indvars.iv, %44 ]
  %47 = trunc i64 %.13.lcssa.wide to i32
  %48 = icmp sgt i32 %47, 0
  br i1 %48, label %49, label %67

; <label>:49:                                     ; preds = %46
  %50 = icmp sgt i32 %47, 1024
  br i1 %50, label %51, label %52

; <label>:51:                                     ; preds = %49
  br label %52

; <label>:52:                                     ; preds = %51, %49
  %.01 = phi i32 [ 1024, %51 ], [ %47, %49 ]
  %53 = icmp slt i32 0, %.01
  br i1 %53, label %.lr.ph, label %61

.lr.ph:                                           ; preds = %52
  %54 = sext i32 %.01 to i64
  br label %55

; <label>:55:                                     ; preds = %.lr.ph, %59
  %indvars.iv6 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next7, %59 ]
  %56 = getelementptr inbounds i8, i8* %.1.lcssa, i64 %indvars.iv6
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %indvars.iv6
  store i8 %57, i8* %58, align 1
  br label %59

; <label>:59:                                     ; preds = %55
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %60 = icmp slt i64 %indvars.iv.next7, %54
  br i1 %60, label %55, label %._crit_edge

._crit_edge:                                      ; preds = %59
  br label %61

; <label>:61:                                     ; preds = %._crit_edge, %52
  %62 = sext i32 %.01 to i64
  %63 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %62
  store i8 0, i8* %63, align 1
  %64 = load %struct.zzzz*, %struct.zzzz** %0, align 8
  %65 = getelementptr [1034 x i8], [1034 x i8]* @tmpName, i32 0, i32 0
  %66 = call %struct.zzzz* @snocString(%struct.zzzz* %64, i8* %65)
  store %struct.zzzz* %66, %struct.zzzz** %0, align 8
  br label %67

; <label>:67:                                     ; preds = %61, %46
  %68 = sext i32 %47 to i64
  %69 = getelementptr inbounds i8, i8* %.1.lcssa, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = sext i8 %70 to i32
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %._crit_edge12, label %10

; <label>:73:                                     ; preds = %9
  br label %74

; <label>:74:                                     ; preds = %73, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @snocString(%struct.zzzz*, i8*) #2 {
  %3 = icmp eq %struct.zzzz* %0, null
  br i1 %3, label %4, label %14

; <label>:4:                                      ; preds = %2
  %5 = call %struct.zzzz* @mkCell()
  %6 = call i64 @strlen(i8* %1) #10
  %7 = add i64 5, %6
  %8 = trunc i64 %7 to i32
  %9 = call i8* @myMalloc(i32 %8)
  %10 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = call i8* @strcpy(i8* %12, i8* %1) #9, !track !17
  br label %29

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %0, i32 0, i32 1
  %16 = load %struct.zzzz*, %struct.zzzz** %15, align 8
  %17 = icmp ne %struct.zzzz* %16, null
  br i1 %17, label %.lr.ph, label %24

.lr.ph:                                           ; preds = %14
  br label %18

; <label>:18:                                     ; preds = %.lr.ph, %18
  %.012 = phi %struct.zzzz* [ %0, %.lr.ph ], [ %20, %18 ]
  call void @unroll_loop(i32 12)
  %19 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.012, i32 0, i32 1
  %20 = load %struct.zzzz*, %struct.zzzz** %19, align 8
  %21 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %20, i32 0, i32 1
  %22 = load %struct.zzzz*, %struct.zzzz** %21, align 8
  %23 = icmp ne %struct.zzzz* %22, null
  br i1 %23, label %18, label %._crit_edge

._crit_edge:                                      ; preds = %18
  %split = phi %struct.zzzz* [ %20, %18 ]
  br label %24

; <label>:24:                                     ; preds = %._crit_edge, %14
  %.01.lcssa = phi %struct.zzzz* [ %split, %._crit_edge ], [ %0, %14 ]
  %25 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  %26 = load %struct.zzzz*, %struct.zzzz** %25, align 8
  %27 = call %struct.zzzz* @snocString(%struct.zzzz* %26, i8* %1)
  %28 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  store %struct.zzzz* %27, %struct.zzzz** %28, align 8
  br label %29

; <label>:29:                                     ; preds = %24, %4
  %.0 = phi %struct.zzzz* [ %5, %4 ], [ %0, %24 ]
  ret %struct.zzzz* %.0
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @license() #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = call i8* @BZ2_bzlibVersion()
  %3 = getelementptr [531 x i8], [531 x i8]* @.str.49, i32 0, i32 0
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @usage(i8*) #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = call i8* @BZ2_bzlibVersion()
  %4 = getelementptr [1230 x i8], [1230 x i8]* @.str.50, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i8* %3, i8* %0)
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define internal void @redundant(i8*) #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = load i8*, i8** @progName, align 8
  %4 = getelementptr [49 x i8], [49 x i8]* @.str.51, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i8* %3, i8* %0)
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal void @mySignalCatcher(i32) #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = load i8*, i8** @progName, align 8
  %4 = getelementptr [45 x i8], [45 x i8]* @.str.52, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i8* %3)
  call void @cleanUpAndFail(i32 1) #12
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @compress(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !18
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %9

; <label>:4:                                      ; preds = %1
  %5 = load i32, i32* @srcMode, align 4
  %6 = icmp ne i32 %5, 1
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %4
  %8 = getelementptr [21 x i8], [21 x i8]* @.str.53, i32 0, i32 0
  call void @panic(i8* %8) #12
  br label %UnifiedUnreachableBlock

; <label>:9:                                      ; preds = %4, %1
  %10 = load i32, i32* @srcMode, align 4
  switch i32 %10, label %26 [
    i32 1, label %11
    i32 3, label %16
    i32 2, label %22
  ]

; <label>:11:                                     ; preds = %9
  %12 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %13 = getelementptr [8 x i8], [8 x i8]* @.str.54, i32 0, i32 0
  call void @copyFileName(i8* %12, i8* %13)
  %14 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %15 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %14, i8* %15)
  br label %26

; <label>:16:                                     ; preds = %9
  %17 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %17, i8* %0)
  %18 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @copyFileName(i8* %18, i8* %0)
  %19 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %20 = getelementptr [5 x i8], [5 x i8]* @.str, i32 0, i32 0
  %21 = call i8* @strcat(i8* %19, i8* %20) #9, !track !19
  br label %26

; <label>:22:                                     ; preds = %9
  %23 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %23, i8* %0)
  %24 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %25 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %24, i8* %25)
  br label %26

; <label>:26:                                     ; preds = %9, %22, %16, %11
  %27 = load i32, i32* @srcMode, align 4
  %28 = icmp ne i32 %27, 1
  br i1 %28, label %29, label %44

; <label>:29:                                     ; preds = %26
  %30 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %31 = call zeroext i8 @containsDubiousChars(i8* %30)
  %32 = zext i8 %31 to i32
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %44

; <label>:34:                                     ; preds = %29
  %35 = load i8, i8* @noisy, align 1
  %36 = icmp ne i8 %35, 0
  br i1 %36, label %37, label %43

; <label>:37:                                     ; preds = %34
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %39 = load i8*, i8** @progName, align 8
  %40 = getelementptr [39 x i8], [39 x i8]* @.str.56, i32 0, i32 0
  %41 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* %40, i8* %39, i8* %41)
  br label %43

; <label>:43:                                     ; preds = %37, %34
  call void @setExit(i32 1)
  br label %292

; <label>:44:                                     ; preds = %29, %26
  %45 = load i32, i32* @srcMode, align 4
  %46 = icmp ne i32 %45, 1
  br i1 %46, label %47, label %60

; <label>:47:                                     ; preds = %44
  %48 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %49 = call zeroext i8 @fileExists(i8* %48)
  %50 = icmp ne i8 %49, 0
  br i1 %50, label %60, label %51

; <label>:51:                                     ; preds = %47
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = load i8*, i8** @progName, align 8
  %54 = call i32* @__errno_location() #13
  %55 = load i32, i32* %54, align 4
  %56 = call i8* @strerror(i32 %55) #9, !track !20
  %57 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %58 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* %57, i8* %53, i8* %58, i8* %56)
  call void @setExit(i32 1)
  br label %292

; <label>:60:                                     ; preds = %47, %44
  br label %61

; <label>:61:                                     ; preds = %60, %82
  %indvars.iv = phi i64 [ 0, %60 ], [ %indvars.iv.next, %82 ]
  call void @unroll_loop(i32 13)
  %62 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %indvars.iv
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %65 = call zeroext i8 @hasSuffix(i8* %64, i8* %63)
  %66 = icmp ne i8 %65, 0
  br i1 %66, label %67, label %81

; <label>:67:                                     ; preds = %61
  %.0.lcssa3.wide = phi i64 [ %indvars.iv, %61 ]
  %68 = trunc i64 %.0.lcssa3.wide to i32
  %69 = load i8, i8* @noisy, align 1
  %70 = icmp ne i8 %69, 0
  br i1 %70, label %71, label %80

; <label>:71:                                     ; preds = %67
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %73 = load i8*, i8** @progName, align 8
  %74 = sext i32 %68 to i64
  %75 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr [42 x i8], [42 x i8]* @.str.58, i32 0, i32 0
  %78 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* %77, i8* %73, i8* %78, i8* %76)
  br label %80

; <label>:80:                                     ; preds = %71, %67
  call void @setExit(i32 1)
  br label %292

; <label>:81:                                     ; preds = %61
  br label %82

; <label>:82:                                     ; preds = %81
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %83 = icmp ult i64 %indvars.iv.next, 4
  br i1 %83, label %61, label %84

; <label>:84:                                     ; preds = %82
  %85 = load i32, i32* @srcMode, align 4
  %86 = icmp eq i32 %85, 3
  br i1 %86, label %90, label %87

; <label>:87:                                     ; preds = %84
  %88 = load i32, i32* @srcMode, align 4
  %89 = icmp eq i32 %88, 2
  br i1 %89, label %90, label %104

; <label>:90:                                     ; preds = %87, %84
  %91 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %92 = call i32 @stat64(i8* %91, %struct.stat* %2) #9
  %93 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 61440
  %96 = icmp eq i32 %95, 16384
  br i1 %96, label %97, label %103

; <label>:97:                                     ; preds = %90
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %99 = load i8*, i8** @progName, align 8
  %100 = getelementptr [35 x i8], [35 x i8]* @.str.59, i32 0, i32 0
  %101 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* %100, i8* %99, i8* %101)
  call void @setExit(i32 1)
  br label %292

; <label>:103:                                    ; preds = %90
  br label %104

; <label>:104:                                    ; preds = %103, %87
  %105 = load i32, i32* @srcMode, align 4
  %106 = icmp eq i32 %105, 3
  br i1 %106, label %107, label %125

; <label>:107:                                    ; preds = %104
  %108 = load i8, i8* @forceOverwrite, align 1
  %109 = icmp ne i8 %108, 0
  br i1 %109, label %125, label %110

; <label>:110:                                    ; preds = %107
  %111 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %112 = call zeroext i8 @notAStandardFile(i8* %111)
  %113 = zext i8 %112 to i32
  %114 = icmp ne i32 %113, 0
  br i1 %114, label %115, label %125

; <label>:115:                                    ; preds = %110
  %116 = load i8, i8* @noisy, align 1
  %117 = icmp ne i8 %116, 0
  br i1 %117, label %118, label %124

; <label>:118:                                    ; preds = %115
  %119 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %120 = load i8*, i8** @progName, align 8
  %121 = getelementptr [41 x i8], [41 x i8]* @.str.60, i32 0, i32 0
  %122 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %123 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %119, i8* %121, i8* %120, i8* %122)
  br label %124

; <label>:124:                                    ; preds = %118, %115
  call void @setExit(i32 1)
  br label %292

; <label>:125:                                    ; preds = %110, %107, %104
  %126 = load i32, i32* @srcMode, align 4
  %127 = icmp eq i32 %126, 3
  br i1 %127, label %128, label %146

; <label>:128:                                    ; preds = %125
  %129 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %130 = call zeroext i8 @fileExists(i8* %129)
  %131 = zext i8 %130 to i32
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %146

; <label>:133:                                    ; preds = %128
  %134 = load i8, i8* @forceOverwrite, align 1
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %139

; <label>:136:                                    ; preds = %133
  %137 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %138 = call i32 @remove(i8* %137) #9
  br label %145

; <label>:139:                                    ; preds = %133
  %140 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %141 = load i8*, i8** @progName, align 8
  %142 = getelementptr [36 x i8], [36 x i8]* @.str.61, i32 0, i32 0
  %143 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %144 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %140, i8* %142, i8* %141, i8* %143)
  call void @setExit(i32 1)
  br label %292

; <label>:145:                                    ; preds = %136
  br label %146

; <label>:146:                                    ; preds = %145, %128, %125
  %147 = load i32, i32* @srcMode, align 4
  %148 = icmp eq i32 %147, 3
  br i1 %148, label %149, label %167

; <label>:149:                                    ; preds = %146
  %150 = load i8, i8* @forceOverwrite, align 1
  %151 = icmp ne i8 %150, 0
  br i1 %151, label %167, label %152

; <label>:152:                                    ; preds = %149
  %153 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %154 = call i32 @countHardLinks(i8* %153)
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %167

; <label>:156:                                    ; preds = %152
  %157 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %158 = load i8*, i8** @progName, align 8
  %159 = icmp sgt i32 %154, 1
  %160 = zext i1 %159 to i64
  %161 = getelementptr [2 x i8], [2 x i8]* @.str.63, i32 0, i32 0
  %162 = getelementptr [1 x i8], [1 x i8]* @.str.4, i32 0, i32 0
  %163 = select i1 %159, i8* %161, i8* %162
  %164 = getelementptr [40 x i8], [40 x i8]* @.str.62, i32 0, i32 0
  %165 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %166 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %157, i8* %164, i8* %158, i8* %165, i32 %154, i8* %163)
  call void @setExit(i32 1)
  br label %292

; <label>:167:                                    ; preds = %152, %149, %146
  %168 = load i32, i32* @srcMode, align 4
  %169 = icmp eq i32 %168, 3
  br i1 %169, label %170, label %172

; <label>:170:                                    ; preds = %167
  %171 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @saveInputFileMetaInfo(i8* %171)
  br label %172

; <label>:172:                                    ; preds = %170, %167
  %173 = load i32, i32* @srcMode, align 4
  switch i32 %173, label %264 [
    i32 1, label %174
    i32 2, label %192
    i32 3, label %227
  ]

; <label>:174:                                    ; preds = %172
  %175 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %177 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %178 = call i32 @fileno(%struct._IO_FILE* %177) #9
  %179 = call i32 @isatty(i32 %178) #9
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %181, label %191

; <label>:181:                                    ; preds = %174
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %183 = load i8*, i8** @progName, align 8
  %184 = getelementptr [50 x i8], [50 x i8]* @.str.64, i32 0, i32 0
  %185 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %182, i8* %184, i8* %183)
  %186 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %187 = load i8*, i8** @progName, align 8
  %188 = load i8*, i8** @progName, align 8
  %189 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %190 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %186, i8* %189, i8* %187, i8* %188)
  call void @setExit(i32 1)
  br label %292

; <label>:191:                                    ; preds = %174
  br label %266

; <label>:192:                                    ; preds = %172
  %193 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %194 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %195 = call %struct._IO_FILE* @fopen64(i8* %193, i8* %194), !track !21
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %197 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %198 = call i32 @fileno(%struct._IO_FILE* %197) #9
  %199 = call i32 @isatty(i32 %198) #9
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %215

; <label>:201:                                    ; preds = %192
  %202 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %203 = load i8*, i8** @progName, align 8
  %204 = getelementptr [50 x i8], [50 x i8]* @.str.64, i32 0, i32 0
  %205 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %202, i8* %204, i8* %203)
  %206 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %207 = load i8*, i8** @progName, align 8
  %208 = load i8*, i8** @progName, align 8
  %209 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %210 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %206, i8* %209, i8* %207, i8* %208)
  %211 = icmp ne %struct._IO_FILE* %195, null
  br i1 %211, label %212, label %214

; <label>:212:                                    ; preds = %201
  %213 = call i32 @fclose(%struct._IO_FILE* %195)
  br label %214

; <label>:214:                                    ; preds = %212, %201
  call void @setExit(i32 1)
  br label %292

; <label>:215:                                    ; preds = %192
  %216 = icmp eq %struct._IO_FILE* %195, null
  br i1 %216, label %217, label %226

; <label>:217:                                    ; preds = %215
  %218 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %219 = load i8*, i8** @progName, align 8
  %220 = call i32* @__errno_location() #13
  %221 = load i32, i32* %220, align 4
  %222 = call i8* @strerror(i32 %221) #9, !track !22
  %223 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %224 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %225 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %218, i8* %223, i8* %219, i8* %224, i8* %222)
  call void @setExit(i32 1)
  br label %292

; <label>:226:                                    ; preds = %215
  br label %266

; <label>:227:                                    ; preds = %172
  %228 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %229 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %230 = call %struct._IO_FILE* @fopen64(i8* %228, i8* %229), !track !23
  %231 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %232 = getelementptr [3 x i8], [3 x i8]* @.str.67, i32 0, i32 0
  %233 = call %struct._IO_FILE* @fopen_output_safely(i8* %231, i8* %232)
  %234 = icmp eq %struct._IO_FILE* %233, null
  br i1 %234, label %235, label %248

; <label>:235:                                    ; preds = %227
  %236 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %237 = load i8*, i8** @progName, align 8
  %238 = call i32* @__errno_location() #13
  %239 = load i32, i32* %238, align 4
  %240 = call i8* @strerror(i32 %239) #9, !track !24
  %241 = getelementptr [38 x i8], [38 x i8]* @.str.68, i32 0, i32 0
  %242 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %243 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %236, i8* %241, i8* %237, i8* %242, i8* %240)
  %244 = icmp ne %struct._IO_FILE* %230, null
  br i1 %244, label %245, label %247

; <label>:245:                                    ; preds = %235
  %246 = call i32 @fclose(%struct._IO_FILE* %230)
  br label %247

; <label>:247:                                    ; preds = %245, %235
  call void @setExit(i32 1)
  br label %292

; <label>:248:                                    ; preds = %227
  %249 = icmp eq %struct._IO_FILE* %230, null
  br i1 %249, label %250, label %263

; <label>:250:                                    ; preds = %248
  %251 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %252 = load i8*, i8** @progName, align 8
  %253 = call i32* @__errno_location() #13
  %254 = load i32, i32* %253, align 4
  %255 = call i8* @strerror(i32 %254) #9, !track !25
  %256 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %257 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %258 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %251, i8* %256, i8* %252, i8* %257, i8* %255)
  %259 = icmp ne %struct._IO_FILE* %233, null
  br i1 %259, label %260, label %262

; <label>:260:                                    ; preds = %250
  %261 = call i32 @fclose(%struct._IO_FILE* %233)
  br label %262

; <label>:262:                                    ; preds = %260, %250
  call void @setExit(i32 1)
  br label %292

; <label>:263:                                    ; preds = %248
  br label %266

; <label>:264:                                    ; preds = %172
  %265 = getelementptr [22 x i8], [22 x i8]* @.str.69, i32 0, i32 0
  call void @panic(i8* %265) #12
  br label %UnifiedUnreachableBlock

; <label>:266:                                    ; preds = %263, %226, %191
  %.02 = phi %struct._IO_FILE* [ %233, %263 ], [ %196, %226 ], [ %176, %191 ]
  %.01 = phi %struct._IO_FILE* [ %230, %263 ], [ %195, %226 ], [ %175, %191 ]
  %267 = load i32, i32* @verbosity, align 4
  %268 = icmp sge i32 %267, 1
  br i1 %268, label %269, label %277

; <label>:269:                                    ; preds = %266
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %271 = getelementptr [7 x i8], [7 x i8]* @.str.70, i32 0, i32 0
  %272 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %273 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %270, i8* %271, i8* %272)
  %274 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @pad(i8* %274)
  %275 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %276 = call i32 @fflush(%struct._IO_FILE* %275)
  br label %277

; <label>:277:                                    ; preds = %269, %266
  store %struct._IO_FILE* %.02, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  call void @compressStream(%struct._IO_FILE* %.01, %struct._IO_FILE* %.02)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %278 = load i32, i32* @srcMode, align 4
  %279 = icmp eq i32 %278, 3
  br i1 %279, label %280, label %291

; <label>:280:                                    ; preds = %277
  %281 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @applySavedTimeInfoToOutputFile(i8* %281)
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %282 = load i8, i8* @keepInputFiles, align 1
  %283 = icmp ne i8 %282, 0
  br i1 %283, label %290, label %284

; <label>:284:                                    ; preds = %280
  %285 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %286 = call i32 @remove(i8* %285) #9
  %287 = icmp ne i32 %286, 0
  br i1 %287, label %288, label %289

; <label>:288:                                    ; preds = %284
  call void @ioError() #12
  br label %UnifiedUnreachableBlock

; <label>:289:                                    ; preds = %284
  br label %290

; <label>:290:                                    ; preds = %289, %280
  br label %291

; <label>:291:                                    ; preds = %290, %277
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  br label %292

; <label>:292:                                    ; preds = %291, %262, %247, %217, %214, %181, %156, %139, %124, %97, %80, %51, %43
  ret void

UnifiedUnreachableBlock:                          ; preds = %288, %264, %7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @uncompress(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !26
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %9

; <label>:4:                                      ; preds = %1
  %5 = load i32, i32* @srcMode, align 4
  %6 = icmp ne i32 %5, 1
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %4
  %8 = getelementptr [23 x i8], [23 x i8]* @.str.79, i32 0, i32 0
  call void @panic(i8* %8) #12
  br label %UnifiedUnreachableBlock

; <label>:9:                                      ; preds = %4, %1
  %10 = load i32, i32* @srcMode, align 4
  switch i32 %10, label %39 [
    i32 1, label %11
    i32 3, label %16
    i32 2, label %35
  ]

; <label>:11:                                     ; preds = %9
  %12 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %13 = getelementptr [8 x i8], [8 x i8]* @.str.54, i32 0, i32 0
  call void @copyFileName(i8* %12, i8* %13)
  %14 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %15 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %14, i8* %15)
  br label %39

; <label>:16:                                     ; preds = %9
  %17 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %17, i8* %0)
  %18 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @copyFileName(i8* %18, i8* %0)
  br label %19

; <label>:19:                                     ; preds = %16, %29
  %indvars.iv = phi i64 [ 0, %16 ], [ %indvars.iv.next, %29 ]
  call void @unroll_loop(i32 14)
  %20 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %indvars.iv
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds [4 x i8*], [4 x i8*]* @unzSuffix, i64 0, i64 %indvars.iv
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %25 = call zeroext i8 @mapSuffix(i8* %24, i8* %21, i8* %23)
  %26 = icmp ne i8 %25, 0
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %19
  br label %40

; <label>:28:                                     ; preds = %19
  br label %29

; <label>:29:                                     ; preds = %28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %30 = icmp ult i64 %indvars.iv.next, 4
  br i1 %30, label %19, label %31

; <label>:31:                                     ; preds = %29
  %32 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %33 = getelementptr [5 x i8], [5 x i8]* @.str.80, i32 0, i32 0
  %34 = call i8* @strcat(i8* %32, i8* %33) #9, !track !27
  br label %39

; <label>:35:                                     ; preds = %9
  %36 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %36, i8* %0)
  %37 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %38 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %37, i8* %38)
  br label %39

; <label>:39:                                     ; preds = %9, %35, %31, %11
  %.0 = phi i8 [ 0, %9 ], [ 0, %35 ], [ 1, %31 ], [ 0, %11 ]
  br label %40

; <label>:40:                                     ; preds = %39, %27
  %.1 = phi i8 [ %.0, %39 ], [ 0, %27 ]
  %41 = load i32, i32* @srcMode, align 4
  %42 = icmp ne i32 %41, 1
  br i1 %42, label %43, label %58

; <label>:43:                                     ; preds = %40
  %44 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %45 = call zeroext i8 @containsDubiousChars(i8* %44)
  %46 = zext i8 %45 to i32
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %58

; <label>:48:                                     ; preds = %43
  %49 = load i8, i8* @noisy, align 1
  %50 = icmp ne i8 %49, 0
  br i1 %50, label %51, label %57

; <label>:51:                                     ; preds = %48
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = load i8*, i8** @progName, align 8
  %54 = getelementptr [39 x i8], [39 x i8]* @.str.56, i32 0, i32 0
  %55 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* %54, i8* %53, i8* %55)
  br label %57

; <label>:57:                                     ; preds = %51, %48
  call void @setExit(i32 1)
  br label %317

; <label>:58:                                     ; preds = %43, %40
  %59 = load i32, i32* @srcMode, align 4
  %60 = icmp ne i32 %59, 1
  br i1 %60, label %61, label %74

; <label>:61:                                     ; preds = %58
  %62 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %63 = call zeroext i8 @fileExists(i8* %62)
  %64 = icmp ne i8 %63, 0
  br i1 %64, label %74, label %65

; <label>:65:                                     ; preds = %61
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %67 = load i8*, i8** @progName, align 8
  %68 = call i32* @__errno_location() #13
  %69 = load i32, i32* %68, align 4
  %70 = call i8* @strerror(i32 %69) #9, !track !28
  %71 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %72 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %73 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %66, i8* %71, i8* %67, i8* %72, i8* %70)
  call void @setExit(i32 1)
  br label %317

; <label>:74:                                     ; preds = %61, %58
  %75 = load i32, i32* @srcMode, align 4
  %76 = icmp eq i32 %75, 3
  br i1 %76, label %80, label %77

; <label>:77:                                     ; preds = %74
  %78 = load i32, i32* @srcMode, align 4
  %79 = icmp eq i32 %78, 2
  br i1 %79, label %80, label %94

; <label>:80:                                     ; preds = %77, %74
  %81 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %82 = call i32 @stat64(i8* %81, %struct.stat* %2) #9
  %83 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 61440
  %86 = icmp eq i32 %85, 16384
  br i1 %86, label %87, label %93

; <label>:87:                                     ; preds = %80
  %88 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %89 = load i8*, i8** @progName, align 8
  %90 = getelementptr [35 x i8], [35 x i8]* @.str.59, i32 0, i32 0
  %91 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %88, i8* %90, i8* %89, i8* %91)
  call void @setExit(i32 1)
  br label %317

; <label>:93:                                     ; preds = %80
  br label %94

; <label>:94:                                     ; preds = %93, %77
  %95 = load i32, i32* @srcMode, align 4
  %96 = icmp eq i32 %95, 3
  br i1 %96, label %97, label %115

; <label>:97:                                     ; preds = %94
  %98 = load i8, i8* @forceOverwrite, align 1
  %99 = icmp ne i8 %98, 0
  br i1 %99, label %115, label %100

; <label>:100:                                    ; preds = %97
  %101 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %102 = call zeroext i8 @notAStandardFile(i8* %101)
  %103 = zext i8 %102 to i32
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %115

; <label>:105:                                    ; preds = %100
  %106 = load i8, i8* @noisy, align 1
  %107 = icmp ne i8 %106, 0
  br i1 %107, label %108, label %114

; <label>:108:                                    ; preds = %105
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %110 = load i8*, i8** @progName, align 8
  %111 = getelementptr [41 x i8], [41 x i8]* @.str.60, i32 0, i32 0
  %112 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* %111, i8* %110, i8* %112)
  br label %114

; <label>:114:                                    ; preds = %108, %105
  call void @setExit(i32 1)
  br label %317

; <label>:115:                                    ; preds = %100, %97, %94
  %116 = icmp ne i8 %.1, 0
  br i1 %116, label %117, label %128

; <label>:117:                                    ; preds = %115
  %118 = load i8, i8* @noisy, align 1
  %119 = icmp ne i8 %118, 0
  br i1 %119, label %120, label %127

; <label>:120:                                    ; preds = %117
  %121 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %122 = load i8*, i8** @progName, align 8
  %123 = getelementptr [50 x i8], [50 x i8]* @.str.81, i32 0, i32 0
  %124 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %125 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %126 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %121, i8* %123, i8* %122, i8* %124, i8* %125)
  br label %127

; <label>:127:                                    ; preds = %120, %117
  br label %128

; <label>:128:                                    ; preds = %127, %115
  %129 = load i32, i32* @srcMode, align 4
  %130 = icmp eq i32 %129, 3
  br i1 %130, label %131, label %149

; <label>:131:                                    ; preds = %128
  %132 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %133 = call zeroext i8 @fileExists(i8* %132)
  %134 = zext i8 %133 to i32
  %135 = icmp ne i32 %134, 0
  br i1 %135, label %136, label %149

; <label>:136:                                    ; preds = %131
  %137 = load i8, i8* @forceOverwrite, align 1
  %138 = icmp ne i8 %137, 0
  br i1 %138, label %139, label %142

; <label>:139:                                    ; preds = %136
  %140 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %141 = call i32 @remove(i8* %140) #9
  br label %148

; <label>:142:                                    ; preds = %136
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %144 = load i8*, i8** @progName, align 8
  %145 = getelementptr [36 x i8], [36 x i8]* @.str.61, i32 0, i32 0
  %146 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %147 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %143, i8* %145, i8* %144, i8* %146)
  call void @setExit(i32 1)
  br label %317

; <label>:148:                                    ; preds = %139
  br label %149

; <label>:149:                                    ; preds = %148, %131, %128
  %150 = load i32, i32* @srcMode, align 4
  %151 = icmp eq i32 %150, 3
  br i1 %151, label %152, label %170

; <label>:152:                                    ; preds = %149
  %153 = load i8, i8* @forceOverwrite, align 1
  %154 = icmp ne i8 %153, 0
  br i1 %154, label %170, label %155

; <label>:155:                                    ; preds = %152
  %156 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %157 = call i32 @countHardLinks(i8* %156)
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %159, label %170

; <label>:159:                                    ; preds = %155
  %160 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %161 = load i8*, i8** @progName, align 8
  %162 = icmp sgt i32 %157, 1
  %163 = zext i1 %162 to i64
  %164 = getelementptr [2 x i8], [2 x i8]* @.str.63, i32 0, i32 0
  %165 = getelementptr [1 x i8], [1 x i8]* @.str.4, i32 0, i32 0
  %166 = select i1 %162, i8* %164, i8* %165
  %167 = getelementptr [40 x i8], [40 x i8]* @.str.62, i32 0, i32 0
  %168 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %169 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %160, i8* %167, i8* %161, i8* %168, i32 %157, i8* %166)
  call void @setExit(i32 1)
  br label %317

; <label>:170:                                    ; preds = %155, %152, %149
  %171 = load i32, i32* @srcMode, align 4
  %172 = icmp eq i32 %171, 3
  br i1 %172, label %173, label %175

; <label>:173:                                    ; preds = %170
  %174 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @saveInputFileMetaInfo(i8* %174)
  br label %175

; <label>:175:                                    ; preds = %173, %170
  %176 = load i32, i32* @srcMode, align 4
  switch i32 %176, label %252 [
    i32 1, label %177
    i32 2, label %195
    i32 3, label %215
  ]

; <label>:177:                                    ; preds = %175
  %178 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %181 = call i32 @fileno(%struct._IO_FILE* %180) #9
  %182 = call i32 @isatty(i32 %181) #9
  %183 = icmp ne i32 %182, 0
  br i1 %183, label %184, label %194

; <label>:184:                                    ; preds = %177
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %186 = load i8*, i8** @progName, align 8
  %187 = getelementptr [51 x i8], [51 x i8]* @.str.82, i32 0, i32 0
  %188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %185, i8* %187, i8* %186)
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %190 = load i8*, i8** @progName, align 8
  %191 = load i8*, i8** @progName, align 8
  %192 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %193 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %189, i8* %192, i8* %190, i8* %191)
  call void @setExit(i32 1)
  br label %317

; <label>:194:                                    ; preds = %177
  br label %254

; <label>:195:                                    ; preds = %175
  %196 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %197 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %198 = call %struct._IO_FILE* @fopen64(i8* %196, i8* %197), !track !29
  %199 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %200 = icmp eq %struct._IO_FILE* %198, null
  br i1 %200, label %201, label %214

; <label>:201:                                    ; preds = %195
  %202 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %203 = load i8*, i8** @progName, align 8
  %204 = call i32* @__errno_location() #13
  %205 = load i32, i32* %204, align 4
  %206 = call i8* @strerror(i32 %205) #9, !track !30
  %207 = getelementptr [34 x i8], [34 x i8]* @.str.83, i32 0, i32 0
  %208 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %209 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %202, i8* %207, i8* %203, i8* %208, i8* %206)
  %210 = icmp ne %struct._IO_FILE* %198, null
  br i1 %210, label %211, label %213

; <label>:211:                                    ; preds = %201
  %212 = call i32 @fclose(%struct._IO_FILE* %198)
  br label %213

; <label>:213:                                    ; preds = %211, %201
  call void @setExit(i32 1)
  br label %317

; <label>:214:                                    ; preds = %195
  br label %254

; <label>:215:                                    ; preds = %175
  %216 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %217 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %218 = call %struct._IO_FILE* @fopen64(i8* %216, i8* %217), !track !31
  %219 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %220 = getelementptr [3 x i8], [3 x i8]* @.str.67, i32 0, i32 0
  %221 = call %struct._IO_FILE* @fopen_output_safely(i8* %219, i8* %220)
  %222 = icmp eq %struct._IO_FILE* %221, null
  br i1 %222, label %223, label %236

; <label>:223:                                    ; preds = %215
  %224 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %225 = load i8*, i8** @progName, align 8
  %226 = call i32* @__errno_location() #13
  %227 = load i32, i32* %226, align 4
  %228 = call i8* @strerror(i32 %227) #9, !track !32
  %229 = getelementptr [38 x i8], [38 x i8]* @.str.68, i32 0, i32 0
  %230 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %231 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %224, i8* %229, i8* %225, i8* %230, i8* %228)
  %232 = icmp ne %struct._IO_FILE* %218, null
  br i1 %232, label %233, label %235

; <label>:233:                                    ; preds = %223
  %234 = call i32 @fclose(%struct._IO_FILE* %218)
  br label %235

; <label>:235:                                    ; preds = %233, %223
  call void @setExit(i32 1)
  br label %317

; <label>:236:                                    ; preds = %215
  %237 = icmp eq %struct._IO_FILE* %218, null
  br i1 %237, label %238, label %251

; <label>:238:                                    ; preds = %236
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %240 = load i8*, i8** @progName, align 8
  %241 = call i32* @__errno_location() #13
  %242 = load i32, i32* %241, align 4
  %243 = call i8* @strerror(i32 %242) #9, !track !33
  %244 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %245 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %246 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %239, i8* %244, i8* %240, i8* %245, i8* %243)
  %247 = icmp ne %struct._IO_FILE* %221, null
  br i1 %247, label %248, label %250

; <label>:248:                                    ; preds = %238
  %249 = call i32 @fclose(%struct._IO_FILE* %221)
  br label %250

; <label>:250:                                    ; preds = %248, %238
  call void @setExit(i32 1)
  br label %317

; <label>:251:                                    ; preds = %236
  br label %254

; <label>:252:                                    ; preds = %175
  %253 = getelementptr [24 x i8], [24 x i8]* @.str.84, i32 0, i32 0
  call void @panic(i8* %253) #12
  br label %UnifiedUnreachableBlock

; <label>:254:                                    ; preds = %251, %214, %194
  %.02 = phi %struct._IO_FILE* [ %221, %251 ], [ %199, %214 ], [ %179, %194 ]
  %.01 = phi %struct._IO_FILE* [ %218, %251 ], [ %198, %214 ], [ %178, %194 ]
  %255 = load i32, i32* @verbosity, align 4
  %256 = icmp sge i32 %255, 1
  br i1 %256, label %257, label %265

; <label>:257:                                    ; preds = %254
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %259 = getelementptr [7 x i8], [7 x i8]* @.str.70, i32 0, i32 0
  %260 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %261 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %258, i8* %259, i8* %260)
  %262 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @pad(i8* %262)
  %263 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %264 = call i32 @fflush(%struct._IO_FILE* %263)
  br label %265

; <label>:265:                                    ; preds = %257, %254
  store %struct._IO_FILE* %.02, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  %266 = call zeroext i8 @uncompressStream(%struct._IO_FILE* %.01, %struct._IO_FILE* %.02)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %267 = icmp ne i8 %266, 0
  br i1 %267, label %268, label %283

; <label>:268:                                    ; preds = %265
  %269 = load i32, i32* @srcMode, align 4
  %270 = icmp eq i32 %269, 3
  br i1 %270, label %271, label %282

; <label>:271:                                    ; preds = %268
  %272 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @applySavedTimeInfoToOutputFile(i8* %272)
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %273 = load i8, i8* @keepInputFiles, align 1
  %274 = icmp ne i8 %273, 0
  br i1 %274, label %281, label %275

; <label>:275:                                    ; preds = %271
  %276 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %277 = call i32 @remove(i8* %276) #9
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %279, label %280

; <label>:279:                                    ; preds = %275
  call void @ioError() #12
  br label %UnifiedUnreachableBlock

; <label>:280:                                    ; preds = %275
  br label %281

; <label>:281:                                    ; preds = %280, %271
  br label %282

; <label>:282:                                    ; preds = %281, %268
  br label %293

; <label>:283:                                    ; preds = %265
  store i8 1, i8* @unzFailsExist, align 1
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %284 = load i32, i32* @srcMode, align 4
  %285 = icmp eq i32 %284, 3
  br i1 %285, label %286, label %292

; <label>:286:                                    ; preds = %283
  %287 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %288 = call i32 @remove(i8* %287) #9
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %290, label %291

; <label>:290:                                    ; preds = %286
  call void @ioError() #12
  br label %UnifiedUnreachableBlock

; <label>:291:                                    ; preds = %286
  br label %292

; <label>:292:                                    ; preds = %291, %283
  br label %293

; <label>:293:                                    ; preds = %292, %282
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %294 = icmp ne i8 %266, 0
  br i1 %294, label %295, label %303

; <label>:295:                                    ; preds = %293
  %296 = load i32, i32* @verbosity, align 4
  %297 = icmp sge i32 %296, 1
  br i1 %297, label %298, label %302

; <label>:298:                                    ; preds = %295
  %299 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %300 = getelementptr [6 x i8], [6 x i8]* @.str.85, i32 0, i32 0
  %301 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %299, i8* %300)
  br label %302

; <label>:302:                                    ; preds = %298, %295
  br label %317

; <label>:303:                                    ; preds = %293
  call void @setExit(i32 2)
  %304 = load i32, i32* @verbosity, align 4
  %305 = icmp sge i32 %304, 1
  br i1 %305, label %306, label %310

; <label>:306:                                    ; preds = %303
  %307 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %308 = getelementptr [19 x i8], [19 x i8]* @.str.86, i32 0, i32 0
  %309 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %307, i8* %308)
  br label %316

; <label>:310:                                    ; preds = %303
  %311 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %312 = load i8*, i8** @progName, align 8
  %313 = getelementptr [29 x i8], [29 x i8]* @.str.87, i32 0, i32 0
  %314 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %315 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %311, i8* %313, i8* %312, i8* %314)
  br label %316

; <label>:316:                                    ; preds = %310, %306
  br label %317

; <label>:317:                                    ; preds = %57, %65, %87, %114, %142, %159, %184, %213, %235, %250, %316, %302
  ret void

UnifiedUnreachableBlock:                          ; preds = %290, %279, %252, %7
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @setExit(i32) #0 {
  %2 = load i32, i32* @exitValue, align 4
  %3 = icmp sgt i32 %0, %2
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  store i32 %0, i32* @exitValue, align 4
  br label %5

; <label>:5:                                      ; preds = %4, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @testf(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !34
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %9

; <label>:4:                                      ; preds = %1
  %5 = load i32, i32* @srcMode, align 4
  %6 = icmp ne i32 %5, 1
  br i1 %6, label %7, label %9

; <label>:7:                                      ; preds = %4
  %8 = getelementptr [18 x i8], [18 x i8]* @.str.94, i32 0, i32 0
  call void @panic(i8* %8) #12
  br label %UnifiedUnreachableBlock

; <label>:9:                                      ; preds = %4, %1
  %10 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %11 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName(i8* %10, i8* %11)
  %12 = load i32, i32* @srcMode, align 4
  switch i32 %12, label %20 [
    i32 1, label %13
    i32 3, label %16
    i32 2, label %18
  ]

; <label>:13:                                     ; preds = %9
  %14 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %15 = getelementptr [8 x i8], [8 x i8]* @.str.54, i32 0, i32 0
  call void @copyFileName(i8* %14, i8* %15)
  br label %20

; <label>:16:                                     ; preds = %9
  %17 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %17, i8* %0)
  br label %20

; <label>:18:                                     ; preds = %9
  %19 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %19, i8* %0)
  br label %20

; <label>:20:                                     ; preds = %9, %18, %16, %13
  %21 = load i32, i32* @srcMode, align 4
  %22 = icmp ne i32 %21, 1
  br i1 %22, label %23, label %38

; <label>:23:                                     ; preds = %20
  %24 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %25 = call zeroext i8 @containsDubiousChars(i8* %24)
  %26 = zext i8 %25 to i32
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %38

; <label>:28:                                     ; preds = %23
  %29 = load i8, i8* @noisy, align 1
  %30 = icmp ne i8 %29, 0
  br i1 %30, label %31, label %37

; <label>:31:                                     ; preds = %28
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %33 = load i8*, i8** @progName, align 8
  %34 = getelementptr [39 x i8], [39 x i8]* @.str.56, i32 0, i32 0
  %35 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %32, i8* %34, i8* %33, i8* %35)
  br label %37

; <label>:37:                                     ; preds = %31, %28
  call void @setExit(i32 1)
  br label %132

; <label>:38:                                     ; preds = %23, %20
  %39 = load i32, i32* @srcMode, align 4
  %40 = icmp ne i32 %39, 1
  br i1 %40, label %41, label %54

; <label>:41:                                     ; preds = %38
  %42 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %43 = call zeroext i8 @fileExists(i8* %42)
  %44 = icmp ne i8 %43, 0
  br i1 %44, label %54, label %45

; <label>:45:                                     ; preds = %41
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %47 = load i8*, i8** @progName, align 8
  %48 = call i32* @__errno_location() #13
  %49 = load i32, i32* %48, align 4
  %50 = call i8* @strerror(i32 %49) #9, !track !35
  %51 = getelementptr [30 x i8], [30 x i8]* @.str.95, i32 0, i32 0
  %52 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %51, i8* %47, i8* %52, i8* %50)
  call void @setExit(i32 1)
  br label %132

; <label>:54:                                     ; preds = %41, %38
  %55 = load i32, i32* @srcMode, align 4
  %56 = icmp ne i32 %55, 1
  br i1 %56, label %57, label %71

; <label>:57:                                     ; preds = %54
  %58 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %59 = call i32 @stat64(i8* %58, %struct.stat* %2) #9
  %60 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 61440
  %63 = icmp eq i32 %62, 16384
  br i1 %63, label %64, label %70

; <label>:64:                                     ; preds = %57
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %66 = load i8*, i8** @progName, align 8
  %67 = getelementptr [35 x i8], [35 x i8]* @.str.59, i32 0, i32 0
  %68 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %65, i8* %67, i8* %66, i8* %68)
  call void @setExit(i32 1)
  br label %132

; <label>:70:                                     ; preds = %57
  br label %71

; <label>:71:                                     ; preds = %70, %54
  %72 = load i32, i32* @srcMode, align 4
  switch i32 %72, label %105 [
    i32 1, label %73
    i32 2, label %90
    i32 3, label %90
  ]

; <label>:73:                                     ; preds = %71
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %75 = call i32 @fileno(%struct._IO_FILE* %74) #9
  %76 = call i32 @isatty(i32 %75) #9
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %88

; <label>:78:                                     ; preds = %73
  %79 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %80 = load i8*, i8** @progName, align 8
  %81 = getelementptr [51 x i8], [51 x i8]* @.str.82, i32 0, i32 0
  %82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %79, i8* %81, i8* %80)
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = load i8*, i8** @progName, align 8
  %85 = load i8*, i8** @progName, align 8
  %86 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* %86, i8* %84, i8* %85)
  call void @setExit(i32 1)
  br label %132

; <label>:88:                                     ; preds = %73
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  br label %107

; <label>:90:                                     ; preds = %71, %71
  %91 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %92 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %93 = call %struct._IO_FILE* @fopen64(i8* %91, i8* %92), !track !36
  %94 = icmp eq %struct._IO_FILE* %93, null
  br i1 %94, label %95, label %104

; <label>:95:                                     ; preds = %90
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %97 = load i8*, i8** @progName, align 8
  %98 = call i32* @__errno_location() #13
  %99 = load i32, i32* %98, align 4
  %100 = call i8* @strerror(i32 %99) #9, !track !37
  %101 = getelementptr [34 x i8], [34 x i8]* @.str.83, i32 0, i32 0
  %102 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* %101, i8* %97, i8* %102, i8* %100)
  call void @setExit(i32 1)
  br label %132

; <label>:104:                                    ; preds = %90
  br label %107

; <label>:105:                                    ; preds = %71
  %106 = getelementptr [19 x i8], [19 x i8]* @.str.96, i32 0, i32 0
  call void @panic(i8* %106) #12
  br label %UnifiedUnreachableBlock

; <label>:107:                                    ; preds = %104, %88
  %.0 = phi %struct._IO_FILE* [ %93, %104 ], [ %89, %88 ]
  %108 = load i32, i32* @verbosity, align 4
  %109 = icmp sge i32 %108, 1
  br i1 %109, label %110, label %118

; <label>:110:                                    ; preds = %107
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %112 = getelementptr [7 x i8], [7 x i8]* @.str.70, i32 0, i32 0
  %113 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %114 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* %112, i8* %113)
  %115 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @pad(i8* %115)
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %117 = call i32 @fflush(%struct._IO_FILE* %116)
  br label %118

; <label>:118:                                    ; preds = %110, %107
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %119 = call zeroext i8 @testStream(%struct._IO_FILE* %.0)
  %120 = zext i8 %119 to i32
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %129

; <label>:122:                                    ; preds = %118
  %123 = load i32, i32* @verbosity, align 4
  %124 = icmp sge i32 %123, 1
  br i1 %124, label %125, label %129

; <label>:125:                                    ; preds = %122
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %127 = getelementptr [4 x i8], [4 x i8]* @.str.97, i32 0, i32 0
  %128 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %126, i8* %127)
  br label %129

; <label>:129:                                    ; preds = %125, %122, %118
  %130 = icmp ne i8 %119, 0
  br i1 %130, label %132, label %131

; <label>:131:                                    ; preds = %129
  store i8 1, i8* @testFailsExist, align 1
  br label %132

; <label>:132:                                    ; preds = %37, %45, %64, %78, %95, %131, %129
  ret void

UnifiedUnreachableBlock:                          ; preds = %105, %7
  unreachable
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #1

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @panic(i8*) #6 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = load i8*, i8** @progName, align 8
  %4 = getelementptr [109 x i8], [109 x i8]* @.str.71, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i8* %3, i8* %0)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 3) #12
  br label %UnifiedUnreachableBlock
                                                  ; No predecessors!
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %6, %1
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @containsDubiousChars(i8*) #0 {
  ret i8 0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @fileExists(i8*) #0 {
  %2 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %3 = call %struct._IO_FILE* @fopen64(i8* %0, i8* %2), !track !38
  %4 = icmp ne %struct._IO_FILE* %3, null
  %5 = zext i1 %4 to i32
  %6 = trunc i32 %5 to i8
  %7 = icmp ne %struct._IO_FILE* %3, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %1
  %9 = call i32 @fclose(%struct._IO_FILE* %3)
  br label %10

; <label>:10:                                     ; preds = %8, %1
  ret i8 %6
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #1

; Function Attrs: nounwind
declare dso_local i32 @stat64(i8*, %struct.stat*) #1

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #1

declare dso_local %struct._IO_FILE* @fopen64(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @pad(i8*) #0 {
  %2 = call i64 @strlen(i8* %0) #10
  %3 = trunc i64 %2 to i32
  %4 = load i32, i32* @longestFileName, align 4
  %5 = icmp sge i32 %3, %4
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  br label %24

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @longestFileName, align 4
  %9 = call i64 @strlen(i8* %0) #10
  %10 = trunc i64 %9 to i32
  %11 = sub nsw i32 %8, %10
  %12 = icmp sle i32 1, %11
  br i1 %12, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %7
  br label %13

; <label>:13:                                     ; preds = %.lr.ph, %17
  %.01 = phi i32 [ 1, %.lr.ph ], [ %18, %17 ]
  call void @unroll_loop(i32 15)
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = getelementptr [2 x i8], [2 x i8]* @.str.72, i32 0, i32 0
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %15)
  br label %17

; <label>:17:                                     ; preds = %13
  %18 = add nuw nsw i32 %.01, 1
  %19 = load i32, i32* @longestFileName, align 4
  %20 = call i64 @strlen(i8* %0) #10
  %21 = trunc i64 %20 to i32
  %22 = sub nsw i32 %19, %21
  %23 = icmp sle i32 %18, %22
  br i1 %23, label %13, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %17
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %7
  br label %24

; <label>:24:                                     ; preds = %.loopexit, %6
  ret void
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #5

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @testStream(%struct._IO_FILE*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [5000 x i8], align 16, !track !39
  %5 = alloca [5000 x i8], align 16, !track !40
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8, !track !41
  store i32 0, i32* %6, align 4
  %8 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %1
  br label %109

; <label>:11:                                     ; preds = %1
  %12 = load i32, i32* @verbosity, align 4
  %13 = load i8, i8* @smallMode, align 1
  %14 = zext i8 %13 to i32
  %15 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  %16 = load i32, i32* %6, align 4
  %17 = call i8* @BZ2_bzReadOpen(i32* %2, %struct._IO_FILE* %0, i32 %12, i32 %14, i8* %15, i32 %16)
  %18 = icmp eq i8* %17, null
  br i1 %18, label %23, label %.lr.ph24

.lr.ph24:                                         ; preds = %11
  br label %19

; <label>:19:                                     ; preds = %.lr.ph24, %72
  %20 = phi i8* [ %17, %.lr.ph24 ], [ %77, %72 ]
  %.0222 = phi i32 [ 0, %.lr.ph24 ], [ %25, %72 ]
  call void @unroll_loop(i32 16)
  %21 = load i32, i32* %2, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %._crit_edge25, label %24

._crit_edge25:                                    ; preds = %19
  %split = phi i32 [ %.0222, %19 ]
  %split26 = phi i8* [ %20, %19 ]
  br label %23

._crit_edge27:                                    ; preds = %72
  %split28 = phi i32 [ %25, %72 ]
  %split29 = phi i8* [ %77, %72 ]
  br label %23

; <label>:23:                                     ; preds = %._crit_edge27, %._crit_edge25, %11
  %.02.lcssa = phi i32 [ %split, %._crit_edge25 ], [ %split28, %._crit_edge27 ], [ 0, %11 ]
  %.lcssa = phi i8* [ %split26, %._crit_edge25 ], [ %split29, %._crit_edge27 ], [ %17, %11 ]
  br label %95

; <label>:24:                                     ; preds = %19
  %25 = add nuw nsw i32 %.0222, 1
  %26 = load i32, i32* %2, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %.lr.ph, label %37

.lr.ph:                                           ; preds = %24
  br label %31

; <label>:28:                                     ; preds = %31
  %29 = load i32, i32* %2, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %._crit_edge

; <label>:31:                                     ; preds = %.lr.ph, %28
  call void @unroll_loop(i32 17)
  %32 = getelementptr inbounds [5000 x i8], [5000 x i8]* %4, i32 0, i32 0
  %33 = call i32 @BZ2_bzRead(i32* %2, i8* %20, i8* %32, i32 5000)
  %34 = load i32, i32* %2, align 4
  %35 = icmp eq i32 %34, -5
  br i1 %35, label %36, label %28

; <label>:36:                                     ; preds = %31
  %.lcssa17 = phi i32 [ %25, %31 ]
  %.lcssa7 = phi i8* [ %20, %31 ]
  br label %95

._crit_edge:                                      ; preds = %28
  br label %37

; <label>:37:                                     ; preds = %._crit_edge, %24
  %38 = phi i8* [ %20, %._crit_edge ], [ %20, %24 ]
  %39 = load i32, i32* %2, align 4
  %40 = icmp ne i32 %39, 4
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %37
  %.lcssa13 = phi i32 [ %25, %37 ]
  %.lcssa3 = phi i8* [ %38, %37 ]
  br label %95

; <label>:42:                                     ; preds = %37
  call void @BZ2_bzReadGetUnused(i32* %2, i8* %38, i8** %7, i32* %6)
  %43 = load i32, i32* %2, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %47

; <label>:45:                                     ; preds = %42
  %46 = getelementptr [21 x i8], [21 x i8]* @.str.98, i32 0, i32 0
  call void @panic(i8* %46) #12
  br label %UnifiedUnreachableBlock

; <label>:47:                                     ; preds = %42
  %48 = load i8*, i8** %7, align 8
  %49 = load i32, i32* %6, align 4
  %50 = icmp slt i32 0, %49
  br i1 %50, label %.lr.ph20, label %59

.lr.ph20:                                         ; preds = %47
  br label %51

; <label>:51:                                     ; preds = %.lr.ph20, %55
  %indvars.iv = phi i64 [ 0, %.lr.ph20 ], [ %indvars.iv.next, %55 ]
  call void @unroll_loop(i32 18)
  %52 = getelementptr inbounds i8, i8* %48, i64 %indvars.iv
  %53 = load i8, i8* %52, align 1
  %54 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i64 0, i64 %indvars.iv
  store i8 %53, i8* %54, align 1
  br label %55

; <label>:55:                                     ; preds = %51
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %56 = load i32, i32* %6, align 4
  %57 = sext i32 %56 to i64
  %58 = icmp slt i64 %indvars.iv.next, %57
  br i1 %58, label %51, label %._crit_edge21

._crit_edge21:                                    ; preds = %55
  br label %59

; <label>:59:                                     ; preds = %._crit_edge21, %47
  call void @BZ2_bzReadClose(i32* %2, i8* %38)
  %60 = load i32, i32* %2, align 4
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %64

; <label>:62:                                     ; preds = %59
  %63 = getelementptr [21 x i8], [21 x i8]* @.str.98, i32 0, i32 0
  call void @panic(i8* %63) #12
  br label %UnifiedUnreachableBlock

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* %6, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %72

; <label>:67:                                     ; preds = %64
  %68 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %69 = zext i8 %68 to i32
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %72

; <label>:71:                                     ; preds = %67
  br label %79

; <label>:72:                                     ; preds = %67, %64
  %73 = load i32, i32* @verbosity, align 4
  %74 = load i8, i8* @smallMode, align 1
  %75 = zext i8 %74 to i32
  %76 = load i32, i32* %6, align 4
  %77 = call i8* @BZ2_bzReadOpen(i32* %2, %struct._IO_FILE* %0, i32 %73, i32 %75, i8* %15, i32 %76)
  %78 = icmp eq i8* %77, null
  br i1 %78, label %._crit_edge27, label %19

; <label>:79:                                     ; preds = %71
  %80 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %83

; <label>:82:                                     ; preds = %79
  br label %109

; <label>:83:                                     ; preds = %79
  %84 = call i32 @fclose(%struct._IO_FILE* %0)
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %87

; <label>:86:                                     ; preds = %83
  br label %109

; <label>:87:                                     ; preds = %83
  %88 = load i32, i32* @verbosity, align 4
  %89 = icmp sge i32 %88, 2
  br i1 %89, label %90, label %94

; <label>:90:                                     ; preds = %87
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %92 = getelementptr [6 x i8], [6 x i8]* @.str.89, i32 0, i32 0
  %93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %92)
  br label %94

; <label>:94:                                     ; preds = %90, %87
  br label %140

; <label>:95:                                     ; preds = %41, %36, %23
  %96 = phi i8* [ %.lcssa, %23 ], [ %.lcssa7, %36 ], [ %.lcssa3, %41 ]
  %.1 = phi i32 [ %.02.lcssa, %23 ], [ %.lcssa17, %36 ], [ %.lcssa13, %41 ]
  call void @BZ2_bzReadClose(i32* %3, i8* %96)
  %97 = load i32, i32* @verbosity, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %105

; <label>:99:                                     ; preds = %95
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %101 = load i8*, i8** @progName, align 8
  %102 = getelementptr [9 x i8], [9 x i8]* @.str.99, i32 0, i32 0
  %103 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* %102, i8* %101, i8* %103)
  br label %105

; <label>:105:                                    ; preds = %99, %95
  %106 = load i32, i32* %2, align 4
  switch i32 %106, label %138 [
    i32 -9, label %107
    i32 -6, label %108
    i32 -4, label %110
    i32 -3, label %114
    i32 -7, label %115
    i32 -5, label %119
  ]

; <label>:107:                                    ; preds = %105
  call void @configError() #12
  br label %UnifiedUnreachableBlock

; <label>:108:                                    ; preds = %105
  br label %109

; <label>:109:                                    ; preds = %108, %86, %82, %10
  call void @ioError() #12
  br label %UnifiedUnreachableBlock

; <label>:110:                                    ; preds = %105
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %112 = getelementptr [36 x i8], [36 x i8]* @.str.100, i32 0, i32 0
  %113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* %112)
  br label %140

; <label>:114:                                    ; preds = %105
  call void @outOfMemory() #12
  br label %UnifiedUnreachableBlock

; <label>:115:                                    ; preds = %105
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %117 = getelementptr [24 x i8], [24 x i8]* @.str.101, i32 0, i32 0
  %118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %116, i8* %117)
  br label %140

; <label>:119:                                    ; preds = %105
  %120 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %121 = icmp ne %struct._IO_FILE* %0, %120
  br i1 %121, label %122, label %124

; <label>:122:                                    ; preds = %119
  %123 = call i32 @fclose(%struct._IO_FILE* %0)
  br label %124

; <label>:124:                                    ; preds = %122, %119
  %125 = icmp eq i32 %.1, 1
  br i1 %125, label %126, label %130

; <label>:126:                                    ; preds = %124
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %128 = getelementptr [46 x i8], [46 x i8]* @.str.102, i32 0, i32 0
  %129 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %127, i8* %128)
  br label %140

; <label>:130:                                    ; preds = %124
  %131 = load i8, i8* @noisy, align 1
  %132 = icmp ne i8 %131, 0
  br i1 %132, label %133, label %137

; <label>:133:                                    ; preds = %130
  %134 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %135 = getelementptr [36 x i8], [36 x i8]* @.str.103, i32 0, i32 0
  %136 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %134, i8* %135)
  br label %137

; <label>:137:                                    ; preds = %133, %130
  br label %140

; <label>:138:                                    ; preds = %105
  %139 = getelementptr [22 x i8], [22 x i8]* @.str.104, i32 0, i32 0
  call void @panic(i8* %139) #12
  br label %UnifiedUnreachableBlock

; <label>:140:                                    ; preds = %137, %126, %115, %110, %94
  %.0 = phi i8 [ 0, %126 ], [ 1, %137 ], [ 0, %115 ], [ 0, %110 ], [ 1, %94 ]
  ret i8 %.0

UnifiedUnreachableBlock:                          ; preds = %138, %114, %109, %107, %62, %45
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @myfeof(%struct._IO_FILE*) #0 {
  %2 = call i32 @fgetc(%struct._IO_FILE* %0)
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  br label %7

; <label>:5:                                      ; preds = %1
  %6 = call i32 @ungetc(i32 %2, %struct._IO_FILE* %0)
  br label %7

; <label>:7:                                      ; preds = %5, %4
  %.0 = phi i8 [ 1, %4 ], [ 0, %5 ]
  ret i8 %.0
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #5

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @configError() #6 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = getelementptr [236 x i8], [236 x i8]* @.str.77, i32 0, i32 0
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %2)
  call void @setExit(i32 3)
  %4 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %4) #11
  br label %UnifiedUnreachableBlock
                                                  ; No predecessors!
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %5, %0
  unreachable
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @ioError() #6 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = getelementptr [65 x i8], [65 x i8]* @.str.78, i32 0, i32 0
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2)
  %5 = load i8*, i8** @progName, align 8
  call void @perror(i8* %5)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  br label %UnifiedUnreachableBlock
                                                  ; No predecessors!
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %6, %0
  unreachable
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @outOfMemory() #6 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = getelementptr [38 x i8], [38 x i8]* @.str.48, i32 0, i32 0
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  br label %UnifiedUnreachableBlock
                                                  ; No predecessors!
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %5, %0
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @showFileNames() #0 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %9

; <label>:3:                                      ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = getelementptr [36 x i8], [36 x i8]* @.str.38, i32 0, i32 0
  %6 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %7 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7)
  br label %9

; <label>:9:                                      ; preds = %3, %0
  ret void
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @cleanUpAndFail(i32) #6 {
  %2 = alloca %struct.stat, align 8, !track !42
  %3 = load i32, i32* @srcMode, align 4
  %4 = icmp eq i32 %3, 3
  br i1 %4, label %5, label %60

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @opMode, align 4
  %7 = icmp ne i32 %6, 3
  br i1 %7, label %8, label %60

; <label>:8:                                      ; preds = %5
  %9 = load i8, i8* @deleteOutputOnInterrupt, align 1
  %10 = zext i8 %9 to i32
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %60

; <label>:12:                                     ; preds = %8
  %13 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %14 = call i32 @stat64(i8* %13, %struct.stat* %2) #9
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %41

; <label>:16:                                     ; preds = %12
  %17 = load i8, i8* @noisy, align 1
  %18 = icmp ne i8 %17, 0
  br i1 %18, label %19, label %25

; <label>:19:                                     ; preds = %16
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %21 = load i8*, i8** @progName, align 8
  %22 = getelementptr [44 x i8], [44 x i8]* @.str.39, i32 0, i32 0
  %23 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %24 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* %22, i8* %21, i8* %23)
  br label %25

; <label>:25:                                     ; preds = %19, %16
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %27 = icmp ne %struct._IO_FILE* %26, null
  br i1 %27, label %28, label %31

; <label>:28:                                     ; preds = %25
  %29 = load %struct._IO_FILE*, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %30 = call i32 @fclose(%struct._IO_FILE* %29)
  br label %31

; <label>:31:                                     ; preds = %28, %25
  %32 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %33 = call i32 @remove(i8* %32) #9
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %40

; <label>:35:                                     ; preds = %31
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = load i8*, i8** @progName, align 8
  %38 = getelementptr [59 x i8], [59 x i8]* @.str.40, i32 0, i32 0
  %39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* %38, i8* %37)
  br label %40

; <label>:40:                                     ; preds = %35, %31
  br label %59

; <label>:41:                                     ; preds = %12
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = load i8*, i8** @progName, align 8
  %44 = getelementptr [49 x i8], [49 x i8]* @.str.41, i32 0, i32 0
  %45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* %44, i8* %43)
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %47 = load i8*, i8** @progName, align 8
  %48 = getelementptr [56 x i8], [56 x i8]* @.str.42, i32 0, i32 0
  %49 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %48, i8* %47)
  %50 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %51 = load i8*, i8** @progName, align 8
  %52 = getelementptr [32 x i8], [32 x i8]* @.str.43, i32 0, i32 0
  %53 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %54 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %50, i8* %52, i8* %51, i8* %53)
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %56 = load i8*, i8** @progName, align 8
  %57 = getelementptr [61 x i8], [61 x i8]* @.str.44, i32 0, i32 0
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* %57, i8* %56)
  br label %59

; <label>:59:                                     ; preds = %41, %40
  br label %60

; <label>:60:                                     ; preds = %59, %8, %5, %1
  %61 = load i8, i8* @noisy, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %64, label %81

; <label>:64:                                     ; preds = %60
  %65 = load i32, i32* @numFileNames, align 4
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %81

; <label>:67:                                     ; preds = %64
  %68 = load i32, i32* @numFilesProcessed, align 4
  %69 = load i32, i32* @numFileNames, align 4
  %70 = icmp slt i32 %68, %69
  br i1 %70, label %71, label %81

; <label>:71:                                     ; preds = %67
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %73 = load i8*, i8** @progName, align 8
  %74 = load i8*, i8** @progName, align 8
  %75 = load i32, i32* @numFileNames, align 4
  %76 = load i32, i32* @numFileNames, align 4
  %77 = load i32, i32* @numFilesProcessed, align 4
  %78 = sub nsw i32 %76, %77
  %79 = getelementptr [110 x i8], [110 x i8]* @.str.45, i32 0, i32 0
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* %79, i8* %73, i8* %74, i32 %75, i32 %78)
  br label %81

; <label>:81:                                     ; preds = %71, %67, %64, %60
  call void @setExit(i32 %0)
  %82 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %82) #11
  br label %UnifiedUnreachableBlock
                                                  ; No predecessors!
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %83, %81
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @remove(i8*) #1

declare dso_local void @perror(i8*) #5

declare dso_local i32 @fgetc(%struct._IO_FILE*) #5

declare dso_local i32 @ungetc(i32, %struct._IO_FILE*) #5

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mapSuffix(i8*, i8*, i8*) #0 {
  %4 = call zeroext i8 @hasSuffix(i8* %0, i8* %1)
  %5 = icmp ne i8 %4, 0
  br i1 %5, label %7, label %6

; <label>:6:                                      ; preds = %3
  br label %13

; <label>:7:                                      ; preds = %3
  %8 = call i64 @strlen(i8* %0) #10
  %9 = call i64 @strlen(i8* %1) #10
  %10 = sub i64 %8, %9
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  store i8 0, i8* %11, align 1
  %12 = call i8* @strcat(i8* %0, i8* %2) #9, !track !43
  br label %13

; <label>:13:                                     ; preds = %7, %6
  %.0 = phi i8 [ 1, %7 ], [ 0, %6 ]
  ret i8 %.0
}

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @notAStandardFile(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !44
  %3 = call i32 @lstat64(i8* %0, %struct.stat* %2) #9
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %1
  br label %13

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 61440
  %10 = icmp eq i32 %9, 32768
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %6
  br label %13

; <label>:12:                                     ; preds = %6
  br label %13

; <label>:13:                                     ; preds = %12, %11, %5
  %.0 = phi i8 [ 1, %5 ], [ 0, %11 ], [ 1, %12 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @countHardLinks(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !45
  %3 = call i32 @lstat64(i8* %0, %struct.stat* %2) #9
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %1
  br label %11

; <label>:6:                                      ; preds = %1
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, 1
  %10 = trunc i64 %9 to i32
  br label %11

; <label>:11:                                     ; preds = %6, %5
  %.0 = phi i32 [ 0, %5 ], [ %10, %6 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @saveInputFileMetaInfo(i8*) #0 {
  %2 = call i32 @stat64(i8* %0, %struct.stat* @fileMetaInfo) #9
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  call void @ioError() #12
  unreachable

; <label>:5:                                      ; preds = %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._IO_FILE* @fopen_output_safely(i8*, i8*) #2 {
  %3 = call i32 (i8*, i32, ...) @open64(i8* %0, i32 193, i32 384)
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %2
  br label %12

; <label>:6:                                      ; preds = %2
  %7 = call %struct._IO_FILE* @fdopen(i32 %3, i8* %1) #9, !track !46
  %8 = icmp eq %struct._IO_FILE* %7, null
  br i1 %8, label %9, label %11

; <label>:9:                                      ; preds = %6
  %10 = call i32 @close(i32 %3)
  br label %11

; <label>:11:                                     ; preds = %9, %6
  br label %12

; <label>:12:                                     ; preds = %11, %5
  %.0 = phi %struct._IO_FILE* [ null, %5 ], [ %7, %11 ]
  ret %struct._IO_FILE* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uncompressStream(%struct._IO_FILE*, %struct._IO_FILE*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [5000 x i8], align 16, !track !47
  %6 = alloca [5000 x i8], align 16, !track !48
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8, !track !49
  store i32 0, i32* %7, align 4
  %9 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %2
  br label %175

; <label>:12:                                     ; preds = %2
  %13 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %12
  br label %175

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* @verbosity, align 4
  %18 = load i8, i8* @smallMode, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i32 0, i32 0
  %21 = load i32, i32* %7, align 4
  %22 = call i8* @BZ2_bzReadOpen(i32* %3, %struct._IO_FILE* %0, i32 %17, i32 %19, i8* %20, i32 %21)
  %23 = icmp eq i8* %22, null
  br i1 %23, label %28, label %.lr.ph30

.lr.ph30:                                         ; preds = %16
  br label %24

; <label>:24:                                     ; preds = %.lr.ph30, %93
  %25 = phi i8* [ %22, %.lr.ph30 ], [ %98, %93 ]
  %.0228 = phi i32 [ 0, %.lr.ph30 ], [ %30, %93 ]
  call void @unroll_loop(i32 19)
  %26 = load i32, i32* %3, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %._crit_edge31, label %29

._crit_edge31:                                    ; preds = %24
  %split = phi i32 [ %.0228, %24 ]
  %split32 = phi i8* [ %25, %24 ]
  br label %28

._crit_edge33:                                    ; preds = %93
  %split34 = phi i32 [ %30, %93 ]
  %split35 = phi i8* [ %98, %93 ]
  br label %28

; <label>:28:                                     ; preds = %._crit_edge33, %._crit_edge31, %16
  %.02.lcssa = phi i32 [ %split, %._crit_edge31 ], [ %split34, %._crit_edge33 ], [ 0, %16 ]
  %.lcssa = phi i8* [ %split32, %._crit_edge31 ], [ %split35, %._crit_edge33 ], [ %22, %16 ]
  br label %170

; <label>:29:                                     ; preds = %24
  %30 = add nuw nsw i32 %.0228, 1
  %31 = load i32, i32* %3, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %.lr.ph22, label %58

.lr.ph22:                                         ; preds = %29
  br label %36

; <label>:33:                                     ; preds = %54
  %34 = load i32, i32* %3, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %._crit_edge23

; <label>:36:                                     ; preds = %.lr.ph22, %33
  call void @unroll_loop(i32 20)
  %37 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  %38 = call i32 @BZ2_bzRead(i32* %3, i8* %25, i8* %37, i32 5000)
  %39 = load i32, i32* %3, align 4
  %40 = icmp eq i32 %39, -5
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %36
  %.lcssa19 = phi i32 [ %30, %36 ]
  %.lcssa7 = phi i8* [ %25, %36 ]
  br label %141

; <label>:42:                                     ; preds = %36
  %43 = load i32, i32* %3, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %48, label %45

; <label>:45:                                     ; preds = %42
  %46 = load i32, i32* %3, align 4
  %47 = icmp eq i32 %46, 4
  br i1 %47, label %48, label %54

; <label>:48:                                     ; preds = %45, %42
  %49 = icmp sgt i32 %38, 0
  br i1 %49, label %50, label %54

; <label>:50:                                     ; preds = %48
  %51 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  %52 = sext i32 %38 to i64
  %53 = call i64 @fwrite(i8* %51, i64 1, i64 %52, %struct._IO_FILE* %1)
  br label %54

; <label>:54:                                     ; preds = %50, %48, %45
  %55 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %33

; <label>:57:                                     ; preds = %54
  br label %175

._crit_edge23:                                    ; preds = %33
  br label %58

; <label>:58:                                     ; preds = %._crit_edge23, %29
  %59 = phi i8* [ %25, %._crit_edge23 ], [ %25, %29 ]
  %60 = load i32, i32* %3, align 4
  %61 = icmp ne i32 %60, 4
  br i1 %61, label %62, label %63

; <label>:62:                                     ; preds = %58
  %.lcssa15 = phi i32 [ %30, %58 ]
  %.lcssa3 = phi i8* [ %59, %58 ]
  br label %170

; <label>:63:                                     ; preds = %58
  call void @BZ2_bzReadGetUnused(i32* %3, i8* %59, i8** %8, i32* %7)
  %64 = load i32, i32* %3, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %68

; <label>:66:                                     ; preds = %63
  %67 = getelementptr [27 x i8], [27 x i8]* @.str.88, i32 0, i32 0
  call void @panic(i8* %67) #12
  br label %UnifiedUnreachableBlock

; <label>:68:                                     ; preds = %63
  %69 = load i8*, i8** %8, align 8
  %70 = load i32, i32* %7, align 4
  %71 = icmp slt i32 0, %70
  br i1 %71, label %.lr.ph26, label %80

.lr.ph26:                                         ; preds = %68
  br label %72

; <label>:72:                                     ; preds = %.lr.ph26, %76
  %indvars.iv = phi i64 [ 0, %.lr.ph26 ], [ %indvars.iv.next, %76 ]
  call void @unroll_loop(i32 21)
  %73 = getelementptr inbounds i8, i8* %69, i64 %indvars.iv
  %74 = load i8, i8* %73, align 1
  %75 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 %indvars.iv
  store i8 %74, i8* %75, align 1
  br label %76

; <label>:76:                                     ; preds = %72
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %77 = load i32, i32* %7, align 4
  %78 = sext i32 %77 to i64
  %79 = icmp slt i64 %indvars.iv.next, %78
  br i1 %79, label %72, label %._crit_edge27

._crit_edge27:                                    ; preds = %76
  br label %80

; <label>:80:                                     ; preds = %._crit_edge27, %68
  call void @BZ2_bzReadClose(i32* %3, i8* %59)
  %81 = load i32, i32* %3, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %83, label %85

; <label>:83:                                     ; preds = %80
  %84 = getelementptr [27 x i8], [27 x i8]* @.str.88, i32 0, i32 0
  call void @panic(i8* %84) #12
  br label %UnifiedUnreachableBlock

; <label>:85:                                     ; preds = %80
  %86 = load i32, i32* %7, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %93

; <label>:88:                                     ; preds = %85
  %89 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %90 = zext i8 %89 to i32
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %92, label %93

; <label>:92:                                     ; preds = %88
  br label %100

; <label>:93:                                     ; preds = %88, %85
  %94 = load i32, i32* @verbosity, align 4
  %95 = load i8, i8* @smallMode, align 1
  %96 = zext i8 %95 to i32
  %97 = load i32, i32* %7, align 4
  %98 = call i8* @BZ2_bzReadOpen(i32* %3, %struct._IO_FILE* %0, i32 %94, i32 %96, i8* %20, i32 %97)
  %99 = icmp eq i8* %98, null
  br i1 %99, label %._crit_edge33, label %24

; <label>:100:                                    ; preds = %92
  br label %101

; <label>:101:                                    ; preds = %168, %100
  %102 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %104, label %105

; <label>:104:                                    ; preds = %101
  br label %175

; <label>:105:                                    ; preds = %101
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %107 = icmp ne %struct._IO_FILE* %1, %106
  br i1 %107, label %108, label %113

; <label>:108:                                    ; preds = %105
  %109 = call i32 @fileno(%struct._IO_FILE* %1) #9
  %110 = icmp slt i32 %109, 0
  br i1 %110, label %111, label %112

; <label>:111:                                    ; preds = %108
  br label %175

; <label>:112:                                    ; preds = %108
  call void @applySavedFileAttrToOutputFile(i32 %109)
  br label %113

; <label>:113:                                    ; preds = %112, %105
  %114 = call i32 @fclose(%struct._IO_FILE* %0)
  %115 = icmp eq i32 %114, -1
  br i1 %115, label %116, label %117

; <label>:116:                                    ; preds = %113
  br label %175

; <label>:117:                                    ; preds = %113
  %118 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %121

; <label>:120:                                    ; preds = %117
  br label %175

; <label>:121:                                    ; preds = %117
  %122 = call i32 @fflush(%struct._IO_FILE* %1)
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %125

; <label>:124:                                    ; preds = %121
  br label %175

; <label>:125:                                    ; preds = %121
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %127 = icmp ne %struct._IO_FILE* %1, %126
  br i1 %127, label %128, label %133

; <label>:128:                                    ; preds = %125
  %129 = call i32 @fclose(%struct._IO_FILE* %1)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %130 = icmp eq i32 %129, -1
  br i1 %130, label %131, label %132

; <label>:131:                                    ; preds = %128
  br label %175

; <label>:132:                                    ; preds = %128
  br label %133

; <label>:133:                                    ; preds = %132, %125
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %134 = load i32, i32* @verbosity, align 4
  %135 = icmp sge i32 %134, 2
  br i1 %135, label %136, label %140

; <label>:136:                                    ; preds = %133
  %137 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %138 = getelementptr [6 x i8], [6 x i8]* @.str.89, i32 0, i32 0
  %139 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %137, i8* %138)
  br label %140

; <label>:140:                                    ; preds = %136, %133
  br label %204

; <label>:141:                                    ; preds = %41
  %142 = load i8, i8* @forceOverwrite, align 1
  %143 = icmp ne i8 %142, 0
  br i1 %143, label %144, label %169

; <label>:144:                                    ; preds = %141
  call void @rewind(%struct._IO_FILE* %0)
  %145 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %146 = icmp ne i8 %145, 0
  br i1 %146, label %150, label %.lr.ph

.lr.ph:                                           ; preds = %144
  br label %151

; <label>:147:                                    ; preds = %164
  %148 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %149 = icmp ne i8 %148, 0
  br i1 %149, label %._crit_edge, label %151

._crit_edge:                                      ; preds = %147
  br label %150

; <label>:150:                                    ; preds = %._crit_edge, %144
  br label %168

; <label>:151:                                    ; preds = %.lr.ph, %147
  call void @unroll_loop(i32 22)
  %152 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  %153 = call i64 @fread(i8* %152, i64 1, i64 5000, %struct._IO_FILE* %0)
  %154 = trunc i64 %153 to i32
  %155 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %158

; <label>:157:                                    ; preds = %151
  br label %175

; <label>:158:                                    ; preds = %151
  %159 = icmp sgt i32 %154, 0
  br i1 %159, label %160, label %164

; <label>:160:                                    ; preds = %158
  %161 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  %162 = sext i32 %154 to i64
  %163 = call i64 @fwrite(i8* %161, i64 1, i64 %162, %struct._IO_FILE* %1)
  br label %164

; <label>:164:                                    ; preds = %160, %158
  %165 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %167, label %147

; <label>:167:                                    ; preds = %164
  br label %175

; <label>:168:                                    ; preds = %150
  br label %101

; <label>:169:                                    ; preds = %141
  br label %170

; <label>:170:                                    ; preds = %169, %62, %28
  %171 = phi i8* [ %.lcssa, %28 ], [ %.lcssa7, %169 ], [ %.lcssa3, %62 ]
  %.1 = phi i32 [ %.02.lcssa, %28 ], [ %.lcssa19, %169 ], [ %.lcssa15, %62 ]
  call void @BZ2_bzReadClose(i32* %4, i8* %171)
  %172 = load i32, i32* %3, align 4
  switch i32 %172, label %202 [
    i32 -9, label %173
    i32 -6, label %174
    i32 -4, label %176
    i32 -3, label %177
    i32 -7, label %178
    i32 -5, label %179
  ]

; <label>:173:                                    ; preds = %170
  call void @configError() #12
  br label %UnifiedUnreachableBlock

; <label>:174:                                    ; preds = %170
  br label %175

; <label>:175:                                    ; preds = %174, %167, %157, %131, %124, %120, %116, %111, %104, %57, %15, %11
  call void @ioError() #12
  br label %UnifiedUnreachableBlock

; <label>:176:                                    ; preds = %170
  call void @crcError() #12
  br label %UnifiedUnreachableBlock

; <label>:177:                                    ; preds = %170
  call void @outOfMemory() #12
  br label %UnifiedUnreachableBlock

; <label>:178:                                    ; preds = %170
  call void @compressedStreamEOF() #12
  br label %UnifiedUnreachableBlock

; <label>:179:                                    ; preds = %170
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %181 = icmp ne %struct._IO_FILE* %0, %180
  br i1 %181, label %182, label %184

; <label>:182:                                    ; preds = %179
  %183 = call i32 @fclose(%struct._IO_FILE* %0)
  br label %184

; <label>:184:                                    ; preds = %182, %179
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %186 = icmp ne %struct._IO_FILE* %1, %185
  br i1 %186, label %187, label %189

; <label>:187:                                    ; preds = %184
  %188 = call i32 @fclose(%struct._IO_FILE* %1)
  br label %189

; <label>:189:                                    ; preds = %187, %184
  %190 = icmp eq i32 %.1, 1
  br i1 %190, label %191, label %192

; <label>:191:                                    ; preds = %189
  br label %204

; <label>:192:                                    ; preds = %189
  %193 = load i8, i8* @noisy, align 1
  %194 = icmp ne i8 %193, 0
  br i1 %194, label %195, label %201

; <label>:195:                                    ; preds = %192
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %197 = load i8*, i8** @progName, align 8
  %198 = getelementptr [45 x i8], [45 x i8]* @.str.90, i32 0, i32 0
  %199 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %200 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %196, i8* %198, i8* %197, i8* %199)
  br label %201

; <label>:201:                                    ; preds = %195, %192
  br label %204

; <label>:202:                                    ; preds = %170
  %203 = getelementptr [28 x i8], [28 x i8]* @.str.91, i32 0, i32 0
  call void @panic(i8* %203) #12
  br label %UnifiedUnreachableBlock

; <label>:204:                                    ; preds = %201, %191, %140
  %.0 = phi i8 [ 0, %191 ], [ 1, %201 ], [ 1, %140 ]
  ret i8 %.0

UnifiedUnreachableBlock:                          ; preds = %202, %178, %177, %176, %175, %173, %83, %66
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @applySavedTimeInfoToOutputFile(i8*) #0 {
  %2 = alloca %struct.timespec, align 8, !track !50
  %3 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 11, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 12, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = call i32 @utime(i8* %0, %struct.timespec* %2) #9
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %1
  call void @ioError() #12
  unreachable

; <label>:12:                                     ; preds = %1
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @utime(i8*, %struct.timespec*) #1

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @applySavedFileAttrToOutputFile(i32) #0 {
  %2 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = call i32 @fchmod(i32 %0, i32 %3) #9
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  call void @ioError() #12
  unreachable

; <label>:7:                                      ; preds = %1
  %8 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = call i32 @fchown(i32 %0, i32 %9, i32 %11) #9
  ret void
}

declare dso_local void @rewind(%struct._IO_FILE*) #5

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #5

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @crcError() #6 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = getelementptr [47 x i8], [47 x i8]* @.str.92, i32 0, i32 0
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2)
  call void @showFileNames()
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  br label %UnifiedUnreachableBlock
                                                  ; No predecessors!
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %5, %0
  unreachable
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @compressedStreamEOF() #6 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %9

; <label>:3:                                      ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = load i8*, i8** @progName, align 8
  %6 = getelementptr [95 x i8], [95 x i8]* @.str.93, i32 0, i32 0
  %7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %6, i8* %5)
  %8 = load i8*, i8** @progName, align 8
  call void @perror(i8* %8)
  call void @showFileNames()
  call void @cadvise()
  br label %9

; <label>:9:                                      ; preds = %3, %0
  call void @cleanUpAndFail(i32 2) #12
  br label %UnifiedUnreachableBlock
                                                  ; No predecessors!
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %10, %9
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @cadvise() #0 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %7

; <label>:3:                                      ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = getelementptr [241 x i8], [241 x i8]* @.str.46, i32 0, i32 0
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %5)
  br label %7

; <label>:7:                                      ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #1

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #1

declare dso_local i32 @open64(i8*, i32, ...) #5

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #1

declare dso_local i32 @close(i32) #5

; Function Attrs: nounwind
declare dso_local i32 @lstat64(i8*, %struct.stat*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @hasSuffix(i8*, i8*) #0 {
  %3 = call i64 @strlen(i8* %0) #10
  %4 = trunc i64 %3 to i32
  %5 = call i64 @strlen(i8* %1) #10
  %6 = trunc i64 %5 to i32
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %9

; <label>:8:                                      ; preds = %2
  br label %19

; <label>:9:                                      ; preds = %2
  %10 = sext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  %12 = sext i32 %6 to i64
  %13 = sub i64 0, %12
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  %15 = call i32 @strcmp(i8* %14, i8* %1) #10
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %9
  br label %19

; <label>:18:                                     ; preds = %9
  br label %19

; <label>:19:                                     ; preds = %18, %17, %8
  %.0 = phi i8 [ 0, %8 ], [ 1, %17 ], [ 0, %18 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @compressStream(%struct._IO_FILE*, %struct._IO_FILE*) #0 {
  %3 = alloca [5000 x i8], align 16, !track !51
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [32 x i8], align 16, !track !52
  %11 = alloca [32 x i8], align 16, !track !53
  %12 = alloca %struct.UInt64, align 1
  %13 = alloca %struct.UInt64, align 1
  %14 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %2
  br label %130

; <label>:17:                                     ; preds = %2
  %18 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %17
  br label %130

; <label>:21:                                     ; preds = %17
  %22 = load i32, i32* @blockSize100k, align 4
  %23 = load i32, i32* @verbosity, align 4
  %24 = load i32, i32* @workFactor, align 4
  %25 = call i8* @BZ2_bzWriteOpen(i32* %8, %struct._IO_FILE* %1, i32 %22, i32 %23, i32 %24)
  %26 = load i32, i32* %8, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %21
  br label %125

; <label>:29:                                     ; preds = %21
  %30 = load i32, i32* @verbosity, align 4
  %31 = icmp sge i32 %30, 2
  br i1 %31, label %32, label %36

; <label>:32:                                     ; preds = %29
  %33 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %34 = getelementptr [2 x i8], [2 x i8]* @.str.73, i32 0, i32 0
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %33, i8* %34)
  br label %36

; <label>:36:                                     ; preds = %32, %29
  %37 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %38 = icmp ne i8 %37, 0
  br i1 %38, label %42, label %.lr.ph

.lr.ph:                                           ; preds = %36
  br label %43

; <label>:39:                                     ; preds = %54
  %40 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %41 = icmp ne i8 %40, 0
  br i1 %41, label %._crit_edge, label %43

._crit_edge:                                      ; preds = %39
  br label %42

; <label>:42:                                     ; preds = %._crit_edge, %36
  br label %58

; <label>:43:                                     ; preds = %.lr.ph, %39
  call void @unroll_loop(i32 24)
  %44 = getelementptr inbounds [5000 x i8], [5000 x i8]* %3, i32 0, i32 0
  %45 = call i64 @fread(i8* %44, i64 1, i64 5000, %struct._IO_FILE* %0)
  %46 = trunc i64 %45 to i32
  %47 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %50

; <label>:49:                                     ; preds = %43
  br label %130

; <label>:50:                                     ; preds = %43
  %51 = icmp sgt i32 %46, 0
  br i1 %51, label %52, label %54

; <label>:52:                                     ; preds = %50
  %53 = getelementptr inbounds [5000 x i8], [5000 x i8]* %3, i32 0, i32 0
  call void @BZ2_bzWrite(i32* %8, i8* %25, i8* %53, i32 %46)
  br label %54

; <label>:54:                                     ; preds = %52, %50
  %55 = load i32, i32* %8, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %57, label %39

; <label>:57:                                     ; preds = %54
  br label %125

; <label>:58:                                     ; preds = %42
  call void @BZ2_bzWriteClose64(i32* %8, i8* %25, i32 0, i32* %4, i32* %5, i32* %6, i32* %7)
  %59 = load i32, i32* %8, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %62

; <label>:61:                                     ; preds = %58
  br label %125

; <label>:62:                                     ; preds = %58
  %63 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %66

; <label>:65:                                     ; preds = %62
  br label %130

; <label>:66:                                     ; preds = %62
  %67 = call i32 @fflush(%struct._IO_FILE* %1)
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %70

; <label>:69:                                     ; preds = %66
  br label %130

; <label>:70:                                     ; preds = %66
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %72 = icmp ne %struct._IO_FILE* %1, %71
  br i1 %72, label %73, label %82

; <label>:73:                                     ; preds = %70
  %74 = call i32 @fileno(%struct._IO_FILE* %1) #9
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %73
  br label %130

; <label>:77:                                     ; preds = %73
  call void @applySavedFileAttrToOutputFile(i32 %74)
  %78 = call i32 @fclose(%struct._IO_FILE* %1)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %81

; <label>:80:                                     ; preds = %77
  br label %130

; <label>:81:                                     ; preds = %77
  br label %82

; <label>:82:                                     ; preds = %81, %70
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %83 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %86

; <label>:85:                                     ; preds = %82
  br label %130

; <label>:86:                                     ; preds = %82
  %87 = call i32 @fclose(%struct._IO_FILE* %0)
  %88 = icmp eq i32 %87, -1
  br i1 %88, label %89, label %90

; <label>:89:                                     ; preds = %86
  br label %130

; <label>:90:                                     ; preds = %86
  %91 = load i32, i32* @verbosity, align 4
  %92 = icmp sge i32 %91, 1
  br i1 %92, label %93, label %124

; <label>:93:                                     ; preds = %90
  %94 = load i32, i32* %4, align 4
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %103

; <label>:96:                                     ; preds = %93
  %97 = load i32, i32* %5, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %103

; <label>:99:                                     ; preds = %96
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %101 = getelementptr [22 x i8], [22 x i8]* @.str.74, i32 0, i32 0
  %102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* %101)
  br label %123

; <label>:103:                                    ; preds = %96, %93
  %104 = load i32, i32* %4, align 4
  %105 = load i32, i32* %5, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %12, i32 %104, i32 %105)
  %106 = load i32, i32* %6, align 4
  %107 = load i32, i32* %7, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %13, i32 %106, i32 %107)
  %108 = call double @uInt64_to_double(%struct.UInt64* %12)
  %109 = call double @uInt64_to_double(%struct.UInt64* %13)
  %110 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i32 0, i32 0
  call void @uInt64_toAscii(i8* %110, %struct.UInt64* %12)
  %111 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0
  call void @uInt64_toAscii(i8* %111, %struct.UInt64* %13)
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %113 = fdiv double %108, %109
  %114 = fmul double 8.000000e+00, %109
  %115 = fdiv double %114, %108
  %116 = fdiv double %109, %108
  %117 = fsub double 1.000000e+00, %116
  %118 = fmul double 1.000000e+02, %117
  %119 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i32 0, i32 0
  %120 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0
  %121 = getelementptr [57 x i8], [57 x i8]* @.str.75, i32 0, i32 0
  %122 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %121, double %113, double %115, double %118, i8* %119, i8* %120)
  br label %123

; <label>:123:                                    ; preds = %103, %99
  br label %124

; <label>:124:                                    ; preds = %123, %90
  ret void

; <label>:125:                                    ; preds = %61, %57, %28
  call void @BZ2_bzWriteClose64(i32* %9, i8* %25, i32 1, i32* %4, i32* %5, i32* %6, i32* %7)
  %126 = load i32, i32* %8, align 4
  switch i32 %126, label %131 [
    i32 -9, label %127
    i32 -3, label %128
    i32 -6, label %129
  ]

; <label>:127:                                    ; preds = %125
  call void @configError() #12
  br label %UnifiedUnreachableBlock

; <label>:128:                                    ; preds = %125
  call void @outOfMemory() #12
  br label %UnifiedUnreachableBlock

; <label>:129:                                    ; preds = %125
  br label %130

; <label>:130:                                    ; preds = %129, %89, %85, %80, %76, %69, %65, %49, %20, %16
  call void @ioError() #12
  br label %UnifiedUnreachableBlock

; <label>:131:                                    ; preds = %125
  %132 = getelementptr [26 x i8], [26 x i8]* @.str.76, i32 0, i32 0
  call void @panic(i8* %132) #12
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %131, %130, %128, %127
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @uInt64_from_UInt32s(%struct.UInt64*, i32, i32) #0 {
  %4 = lshr i32 %2, 24
  %5 = and i32 %4, 255
  %6 = trunc i32 %5 to i8
  %7 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %8 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 7
  store i8 %6, i8* %8, align 1
  %9 = lshr i32 %2, 16
  %10 = and i32 %9, 255
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %13 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 6
  store i8 %11, i8* %13, align 1
  %14 = lshr i32 %2, 8
  %15 = and i32 %14, 255
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %18 = getelementptr inbounds [8 x i8], [8 x i8]* %17, i64 0, i64 5
  store i8 %16, i8* %18, align 1
  %19 = and i32 %2, 255
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %22 = getelementptr inbounds [8 x i8], [8 x i8]* %21, i64 0, i64 4
  store i8 %20, i8* %22, align 1
  %23 = lshr i32 %1, 24
  %24 = and i32 %23, 255
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %26, i64 0, i64 3
  store i8 %25, i8* %27, align 1
  %28 = lshr i32 %1, 16
  %29 = and i32 %28, 255
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %31, i64 0, i64 2
  store i8 %30, i8* %32, align 1
  %33 = lshr i32 %1, 8
  %34 = and i32 %33, 255
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %36, i64 0, i64 1
  store i8 %35, i8* %37, align 1
  %38 = and i32 %1, 255
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %41 = getelementptr inbounds [8 x i8], [8 x i8]* %40, i64 0, i64 0
  store i8 %39, i8* %41, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal double @uInt64_to_double(%struct.UInt64*) #0 {
  br label %2

; <label>:2:                                      ; preds = %1, %10
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %10 ]
  %.05 = phi double [ 0.000000e+00, %1 ], [ %8, %10 ]
  %.023 = phi double [ 1.000000e+00, %1 ], [ %9, %10 ]
  %3 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %4 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 %indvars.iv
  %5 = load i8, i8* %4, align 1
  %6 = uitofp i8 %5 to double
  %7 = fmul double %.023, %6
  %8 = fadd double %.05, %7
  %9 = fmul double %.023, 2.560000e+02
  br label %10

; <label>:10:                                     ; preds = %2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %2, label %11

; <label>:11:                                     ; preds = %10
  %.0.lcssa = phi double [ %8, %10 ]
  ret double %.0.lcssa
}

; Function Attrs: noinline nounwind uwtable
define internal void @uInt64_toAscii(i8*, %struct.UInt64*) #0 {
  %3 = alloca [32 x i8], align 16
  %4 = alloca %struct.UInt64, align 1
  %5 = bitcast %struct.UInt64* %4 to i8*
  %6 = bitcast %struct.UInt64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 8, i1 false)
  br label %7

; <label>:7:                                      ; preds = %12, %2
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %12 ], [ 0, %2 ]
  %8 = call i32 @uInt64_qrm10(%struct.UInt64* %4)
  %9 = add nsw i32 %8, 48
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %indvars.iv3
  store i8 %10, i8* %11, align 1
  %indvars.iv.next4 = add nuw i64 %indvars.iv3, 1
  br label %12

; <label>:12:                                     ; preds = %7
  %13 = call zeroext i8 @uInt64_isZero(%struct.UInt64* %4)
  %14 = icmp ne i8 %13, 0
  %15 = xor i1 %14, true
  br i1 %15, label %7, label %16

; <label>:16:                                     ; preds = %12
  %.lcssa.wide = phi i64 [ %indvars.iv.next4, %12 ]
  %17 = trunc i64 %.lcssa.wide to i32
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %0, i64 %18
  store i8 0, i8* %19, align 1
  %20 = sext i32 %17 to i64
  %21 = sext i32 %17 to i64
  br label %22

; <label>:22:                                     ; preds = %16, %28
  %indvars.iv = phi i64 [ 0, %16 ], [ %indvars.iv.next, %28 ]
  call void @unroll_loop(i32 25)
  %23 = sub nsw i64 %21, %indvars.iv
  %24 = sub nsw i64 %23, 1
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %3, i64 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = getelementptr inbounds i8, i8* %0, i64 %indvars.iv
  store i8 %26, i8* %27, align 1
  br label %28

; <label>:28:                                     ; preds = %22
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %29 = icmp slt i64 %indvars.iv.next, %20
  br i1 %29, label %22, label %30

; <label>:30:                                     ; preds = %28
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #8

; Function Attrs: noinline nounwind uwtable
define internal i32 @uInt64_qrm10(%struct.UInt64*) #0 {
  br label %2

; <label>:2:                                      ; preds = %1, %14
  %indvars.iv = phi i64 [ 7, %1 ], [ %indvars.iv.next, %14 ]
  %.012 = phi i32 [ 0, %1 ], [ %13, %14 ]
  %3 = mul nuw i32 %.012, 256
  %4 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* %4, i64 0, i64 %indvars.iv
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add i32 %3, %7
  %9 = udiv i32 %8, 10
  %10 = trunc i32 %9 to i8
  %11 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %12 = getelementptr inbounds [8 x i8], [8 x i8]* %11, i64 0, i64 %indvars.iv
  store i8 %10, i8* %12, align 1
  %13 = urem i32 %8, 10
  br label %14

; <label>:14:                                     ; preds = %2
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %15 = icmp sge i64 %indvars.iv.next, 0
  br i1 %15, label %2, label %16

; <label>:16:                                     ; preds = %14
  %.01.lcssa = phi i32 [ %13, %14 ]
  ret i32 %.01.lcssa
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uInt64_isZero(%struct.UInt64*) #0 {
  br label %2

; <label>:2:                                      ; preds = %1, %10
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %10 ]
  %3 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %4 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i64 0, i64 %indvars.iv
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %9

; <label>:8:                                      ; preds = %2
  br label %13

; <label>:9:                                      ; preds = %2
  br label %10

; <label>:10:                                     ; preds = %9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %11 = icmp ult i64 %indvars.iv.next, 8
  br i1 %11, label %2, label %12

; <label>:12:                                     ; preds = %10
  br label %13

; <label>:13:                                     ; preds = %12, %8
  %.0 = phi i8 [ 0, %8 ], [ 1, %12 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @mkCell() #2 {
  %1 = call i8* @myMalloc(i32 16)
  %2 = bitcast i8* %1 to %struct.zzzz*
  %3 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 1
  store %struct.zzzz* null, %struct.zzzz** %4, align 8
  ret %struct.zzzz* %2
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @myMalloc(i32) #2 {
  %2 = sext i32 %0 to i64
  %3 = call noalias i8* @malloc(i64 %2) #9, !track !54
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %1
  call void @outOfMemory() #12
  unreachable

; <label>:6:                                      ; preds = %1
  ret i8* %3
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #1

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #1

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #1

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bz__AssertH__fail(i32) #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = call i8* @BZ2_bzlibVersion()
  %4 = getelementptr [443 x i8], [443 x i8]* @.str.105, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i32 %0, i8* %3)
  %6 = icmp eq i32 %0, 1007
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = getelementptr [1057 x i8], [1057 x i8]* @.str.1.106, i32 0, i32 0
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* %9)
  br label %11

; <label>:11:                                     ; preds = %7, %1
  call void @exit(i32 3) #11
  unreachable
                                                  ; No predecessors!
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzlibVersion() #0 {
  %1 = getelementptr [19 x i8], [19 x i8]* @.str.5.107, i32 0, i32 0
  ret i8* %1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompressInit(%struct.bz_stream*, i32, i32, i32) #0 {
  %5 = call i32 @bz_config_ok()
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %8, label %7

; <label>:7:                                      ; preds = %4
  br label %162

; <label>:8:                                      ; preds = %4
  %9 = icmp eq %struct.bz_stream* %0, null
  br i1 %9, label %18, label %10

; <label>:10:                                     ; preds = %8
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %18, label %12

; <label>:12:                                     ; preds = %10
  %13 = icmp sgt i32 %1, 9
  br i1 %13, label %18, label %14

; <label>:14:                                     ; preds = %12
  %15 = icmp slt i32 %3, 0
  br i1 %15, label %18, label %16

; <label>:16:                                     ; preds = %14
  %17 = icmp sgt i32 %3, 250
  br i1 %17, label %18, label %19

; <label>:18:                                     ; preds = %16, %14, %12, %10, %8
  br label %162

; <label>:19:                                     ; preds = %16
  %20 = icmp eq i32 %3, 0
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %19
  br label %22

; <label>:22:                                     ; preds = %21, %19
  %.01 = phi i32 [ 30, %21 ], [ %3, %19 ]
  %23 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %24 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %23, align 8
  %25 = icmp eq i8* (i8*, i32, i32)* %24, null
  br i1 %25, label %26, label %28

; <label>:26:                                     ; preds = %22
  %27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %27, align 8
  br label %28

; <label>:28:                                     ; preds = %26, %22
  %29 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %30 = load void (i8*, i8*)*, void (i8*, i8*)** %29, align 8
  %31 = icmp eq void (i8*, i8*)* %30, null
  br i1 %31, label %32, label %34

; <label>:32:                                     ; preds = %28
  %33 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %33, align 8
  br label %34

; <label>:34:                                     ; preds = %32, %28
  %35 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %36 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %35, align 8
  %37 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %38 = load i8*, i8** %37, align 8
  %39 = call i8* %36(i8* %38, i32 55768, i32 1)
  %40 = bitcast i8* %39 to %struct.EState*
  %41 = icmp eq %struct.EState* %40, null
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %34
  br label %162

; <label>:43:                                     ; preds = %34
  %44 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 0
  store %struct.bz_stream* %0, %struct.bz_stream** %44, align 8
  %45 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 4
  store i32* null, i32** %45, align 8
  %46 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 5
  store i32* null, i32** %46, align 8
  %47 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 6
  store i32* null, i32** %47, align 8
  %48 = mul nsw i32 100000, %1
  %49 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %50 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %49, align 8
  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %52 = load i8*, i8** %51, align 8
  %53 = sext i32 %48 to i64
  %54 = mul i64 %53, 4
  %55 = trunc i64 %54 to i32
  %56 = call i8* %50(i8* %52, i32 %55, i32 1)
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 4
  store i32* %57, i32** %58, align 8
  %59 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %60 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %59, align 8
  %61 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %62 = load i8*, i8** %61, align 8
  %63 = add nsw i32 %48, 34
  %64 = sext i32 %63 to i64
  %65 = mul i64 %64, 4
  %66 = trunc i64 %65 to i32
  %67 = call i8* %60(i8* %62, i32 %66, i32 1)
  %68 = bitcast i8* %67 to i32*
  %69 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 5
  store i32* %68, i32** %69, align 8
  %70 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %71 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %70, align 8
  %72 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %73 = load i8*, i8** %72, align 8
  %74 = call i8* %71(i8* %73, i32 262148, i32 1)
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 6
  store i32* %75, i32** %76, align 8
  %77 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 4
  %78 = load i32*, i32** %77, align 8
  %79 = icmp eq i32* %78, null
  br i1 %79, label %88, label %80

; <label>:80:                                     ; preds = %43
  %81 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 5
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %88, label %84

; <label>:84:                                     ; preds = %80
  %85 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 6
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %88, label %133

; <label>:88:                                     ; preds = %84, %80, %43
  %89 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 4
  %90 = load i32*, i32** %89, align 8
  %91 = icmp ne i32* %90, null
  br i1 %91, label %92, label %100

; <label>:92:                                     ; preds = %88
  %93 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %94 = load void (i8*, i8*)*, void (i8*, i8*)** %93, align 8
  %95 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 4
  %98 = load i32*, i32** %97, align 8
  %99 = bitcast i32* %98 to i8*
  call void %94(i8* %96, i8* %99)
  br label %100

; <label>:100:                                    ; preds = %92, %88
  %101 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 5
  %102 = load i32*, i32** %101, align 8
  %103 = icmp ne i32* %102, null
  br i1 %103, label %104, label %112

; <label>:104:                                    ; preds = %100
  %105 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %106 = load void (i8*, i8*)*, void (i8*, i8*)** %105, align 8
  %107 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 5
  %110 = load i32*, i32** %109, align 8
  %111 = bitcast i32* %110 to i8*
  call void %106(i8* %108, i8* %111)
  br label %112

; <label>:112:                                    ; preds = %104, %100
  %113 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 6
  %114 = load i32*, i32** %113, align 8
  %115 = icmp ne i32* %114, null
  br i1 %115, label %116, label %124

; <label>:116:                                    ; preds = %112
  %117 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %118 = load void (i8*, i8*)*, void (i8*, i8*)** %117, align 8
  %119 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 6
  %122 = load i32*, i32** %121, align 8
  %123 = bitcast i32* %122 to i8*
  call void %118(i8* %120, i8* %123)
  br label %124

; <label>:124:                                    ; preds = %116, %112
  %125 = icmp ne %struct.EState* %40, null
  br i1 %125, label %126, label %132

; <label>:126:                                    ; preds = %124
  %127 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %128 = load void (i8*, i8*)*, void (i8*, i8*)** %127, align 8
  %129 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %130 = load i8*, i8** %129, align 8
  %131 = bitcast %struct.EState* %40 to i8*
  call void %128(i8* %130, i8* %131)
  br label %132

; <label>:132:                                    ; preds = %126, %124
  br label %162

; <label>:133:                                    ; preds = %84
  %134 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 29
  store i32 0, i32* %134, align 4
  %135 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 2
  store i32 2, i32* %135, align 4
  %136 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 1
  store i32 2, i32* %136, align 8
  %137 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 27
  store i32 0, i32* %137, align 4
  %138 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 30
  store i32 %1, i32* %138, align 8
  %139 = mul nsw i32 100000, %1
  %140 = sub nsw i32 %139, 19
  %141 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 18
  store i32 %140, i32* %141, align 8
  %142 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 28
  store i32 %2, i32* %142, align 8
  %143 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 12
  store i32 %.01, i32* %143, align 8
  %144 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 5
  %145 = load i32*, i32** %144, align 8
  %146 = bitcast i32* %145 to i8*
  %147 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 9
  store i8* %146, i8** %147, align 8
  %148 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 4
  %149 = load i32*, i32** %148, align 8
  %150 = bitcast i32* %149 to i16*
  %151 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 10
  store i16* %150, i16** %151, align 8
  %152 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 11
  store i8* null, i8** %152, align 8
  %153 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 4
  %154 = load i32*, i32** %153, align 8
  %155 = getelementptr inbounds %struct.EState, %struct.EState* %40, i32 0, i32 8
  store i32* %154, i32** %155, align 8
  %156 = bitcast %struct.EState* %40 to i8*
  %157 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  store i8* %156, i8** %157, align 8
  %158 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 2
  store i32 0, i32* %158, align 4
  %159 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 3
  store i32 0, i32* %159, align 8
  %160 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 6
  store i32 0, i32* %160, align 4
  %161 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 7
  store i32 0, i32* %161, align 8
  call void @init_RL(%struct.EState* %40)
  call void @prepare_new_block(%struct.EState* %40)
  br label %162

; <label>:162:                                    ; preds = %133, %132, %42, %18, %7
  %.0 = phi i32 [ -2, %18 ], [ -3, %42 ], [ -3, %132 ], [ 0, %133 ], [ -9, %7 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @bz_config_ok() #0 {
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @default_bzalloc(i8*, i32, i32) #0 {
  %4 = mul nsw i32 %1, %2
  %5 = sext i32 %4 to i64
  %6 = call noalias i8* @malloc(i64 %5) #9
  ret i8* %6
}

; Function Attrs: noinline nounwind uwtable
define internal void @default_bzfree(i8*, i8*) #0 {
  %3 = icmp ne i8* %1, null
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %2
  call void @free(i8* %1) #9
  br label %5

; <label>:5:                                      ; preds = %4, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_RL(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  store i32 256, i32* %2, align 4
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @prepare_new_block(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 20
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  store i32 -1, i32* %5, align 8
  br label %6

; <label>:6:                                      ; preds = %1, %9
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %9 ]
  call void @unroll_loop(i32 26)
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %8 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %indvars.iv
  store i8 0, i8* %8, align 1
  br label %9

; <label>:9:                                      ; preds = %6
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %6, label %10

; <label>:10:                                     ; preds = %9
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 29
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompress(%struct.bz_stream*, i32) #0 {
  %3 = icmp eq %struct.bz_stream* %0, null
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %2
  br label %106

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i8* %7 to %struct.EState*
  %9 = icmp eq %struct.EState* %8, null
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %5
  br label %106

; <label>:11:                                     ; preds = %5
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 0
  %13 = load %struct.bz_stream*, %struct.bz_stream** %12, align 8
  %14 = icmp ne %struct.bz_stream* %13, %0
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %11
  br label %106

; <label>:16:                                     ; preds = %11
  br label %17

; <label>:17:                                     ; preds = %.backedge, %16
  call void @unroll_loop(i32 27)
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %105 [
    i32 1, label %20
    i32 2, label %21
    i32 3, label %44
    i32 4, label %73
  ]

; <label>:20:                                     ; preds = %17
  br label %106

; <label>:21:                                     ; preds = %17
  %22 = icmp eq i32 %1, 0
  br i1 %22, label %23, label %29

; <label>:23:                                     ; preds = %21
  %24 = call zeroext i8 @handle_compress(%struct.bz_stream* %0)
  %25 = zext i8 %24 to i32
  %26 = icmp ne i32 %25, 0
  %27 = zext i1 %26 to i64
  %28 = select i1 %26, i32 1, i32 -2
  br label %106

; <label>:29:                                     ; preds = %21
  %30 = icmp eq i32 %1, 1
  br i1 %30, label %31, label %36

; <label>:31:                                     ; preds = %29
  %32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 3
  store i32 %33, i32* %34, align 8
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 1
  store i32 3, i32* %35, align 8
  br label %.backedge

.backedge:                                        ; preds = %31, %38
  br label %17

; <label>:36:                                     ; preds = %29
  %37 = icmp eq i32 %1, 2
  br i1 %37, label %38, label %43

; <label>:38:                                     ; preds = %36
  %39 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 3
  store i32 %40, i32* %41, align 8
  %42 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 1
  store i32 4, i32* %42, align 8
  br label %.backedge

; <label>:43:                                     ; preds = %36
  br label %106

; <label>:44:                                     ; preds = %17
  %45 = icmp ne i32 %1, 1
  br i1 %45, label %46, label %47

; <label>:46:                                     ; preds = %44
  br label %106

; <label>:47:                                     ; preds = %44
  %48 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 0
  %51 = load %struct.bz_stream*, %struct.bz_stream** %50, align 8
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %51, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp ne i32 %49, %53
  br i1 %54, label %55, label %56

; <label>:55:                                     ; preds = %47
  br label %106

; <label>:56:                                     ; preds = %47
  %57 = call zeroext i8 @handle_compress(%struct.bz_stream* %0)
  %58 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = icmp ugt i32 %59, 0
  br i1 %60, label %70, label %61

; <label>:61:                                     ; preds = %56
  %62 = call zeroext i8 @isempty_RL(%struct.EState* %8)
  %63 = icmp ne i8 %62, 0
  br i1 %63, label %64, label %70

; <label>:64:                                     ; preds = %61
  %65 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 20
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 19
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %66, %68
  br i1 %69, label %70, label %71

; <label>:70:                                     ; preds = %64, %61, %56
  br label %106

; <label>:71:                                     ; preds = %64
  %72 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 1
  store i32 2, i32* %72, align 8
  br label %106

; <label>:73:                                     ; preds = %17
  %74 = icmp ne i32 %1, 2
  br i1 %74, label %75, label %76

; <label>:75:                                     ; preds = %73
  br label %106

; <label>:76:                                     ; preds = %73
  %77 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 0
  %80 = load %struct.bz_stream*, %struct.bz_stream** %79, align 8
  %81 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %80, i32 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = icmp ne i32 %78, %82
  br i1 %83, label %84, label %85

; <label>:84:                                     ; preds = %76
  br label %106

; <label>:85:                                     ; preds = %76
  %86 = call zeroext i8 @handle_compress(%struct.bz_stream* %0)
  %87 = icmp ne i8 %86, 0
  br i1 %87, label %89, label %88

; <label>:88:                                     ; preds = %85
  br label %106

; <label>:89:                                     ; preds = %85
  %90 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = icmp ugt i32 %91, 0
  br i1 %92, label %102, label %93

; <label>:93:                                     ; preds = %89
  %94 = call zeroext i8 @isempty_RL(%struct.EState* %8)
  %95 = icmp ne i8 %94, 0
  br i1 %95, label %96, label %102

; <label>:96:                                     ; preds = %93
  %97 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 20
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 19
  %100 = load i32, i32* %99, align 4
  %101 = icmp slt i32 %98, %100
  br i1 %101, label %102, label %103

; <label>:102:                                    ; preds = %96, %93, %89
  br label %106

; <label>:103:                                    ; preds = %96
  %104 = getelementptr inbounds %struct.EState, %struct.EState* %8, i32 0, i32 1
  store i32 1, i32* %104, align 8
  br label %106

; <label>:105:                                    ; preds = %17
  br label %106

; <label>:106:                                    ; preds = %105, %103, %102, %88, %84, %75, %71, %70, %55, %46, %43, %23, %20, %15, %10, %4
  %.0 = phi i32 [ -2, %4 ], [ -2, %10 ], [ -2, %15 ], [ 0, %105 ], [ -1, %75 ], [ -1, %84 ], [ 3, %102 ], [ 4, %103 ], [ -1, %88 ], [ -1, %46 ], [ -1, %55 ], [ 2, %70 ], [ 1, %71 ], [ %28, %23 ], [ -2, %43 ], [ -1, %20 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @handle_compress(%struct.bz_stream*) #0 {
  %2 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = bitcast i8* %3 to %struct.EState*
  br label %5

; <label>:5:                                      ; preds = %1, %91
  %.01 = phi i8 [ 0, %1 ], [ %.12, %91 ]
  %.0 = phi i8 [ 0, %1 ], [ %.1, %91 ]
  call void @unroll_loop(i32 28)
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %49

; <label>:9:                                      ; preds = %5
  %10 = call zeroext i8 @copy_output_until_stop(%struct.EState* %4)
  %11 = zext i8 %10 to i32
  %12 = zext i8 %.0 to i32
  %13 = or i32 %12, %11
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 20
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 19
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %16, %18
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %9
  %.01.lcssa = phi i8 [ %.01, %9 ]
  %.lcssa = phi i8 [ %14, %9 ]
  br label %92

; <label>:21:                                     ; preds = %9
  %22 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 4
  br i1 %24, label %25, label %34

; <label>:25:                                     ; preds = %21
  %26 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 3
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %34

; <label>:29:                                     ; preds = %25
  %30 = call zeroext i8 @isempty_RL(%struct.EState* %4)
  %31 = zext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %34

; <label>:33:                                     ; preds = %29
  %.01.lcssa6 = phi i8 [ %.01, %29 ]
  %.lcssa4 = phi i8 [ %14, %29 ]
  br label %92

; <label>:34:                                     ; preds = %29, %25, %21
  call void @prepare_new_block(%struct.EState* %4)
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  store i32 2, i32* %35, align 4
  %36 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 3
  br i1 %38, label %39, label %48

; <label>:39:                                     ; preds = %34
  %40 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 3
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %48

; <label>:43:                                     ; preds = %39
  %44 = call zeroext i8 @isempty_RL(%struct.EState* %4)
  %45 = zext i8 %44 to i32
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %43
  %.01.lcssa7 = phi i8 [ %.01, %43 ]
  %.lcssa5 = phi i8 [ %14, %43 ]
  br label %92

; <label>:48:                                     ; preds = %43, %39, %34
  br label %49

; <label>:49:                                     ; preds = %48, %5
  %.1 = phi i8 [ %14, %48 ], [ %.0, %5 ]
  %50 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %53, label %91

; <label>:53:                                     ; preds = %49
  %54 = call zeroext i8 @copy_input_until_stop(%struct.EState* %4)
  %55 = zext i8 %54 to i32
  %56 = zext i8 %.01 to i32
  %57 = or i32 %56, %55
  %58 = trunc i32 %57 to i8
  %59 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = icmp ne i32 %60, 2
  br i1 %61, label %62, label %73

; <label>:62:                                     ; preds = %53
  %63 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %73

; <label>:66:                                     ; preds = %62
  call void @flush_RL(%struct.EState* %4)
  %67 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 4
  %70 = zext i1 %69 to i32
  %71 = trunc i32 %70 to i8
  call void @BZ2_compressBlock(%struct.EState* %4, i8 zeroext %71)
  %72 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  store i32 1, i32* %72, align 4
  br label %90

; <label>:73:                                     ; preds = %62, %53
  %74 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 17
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 18
  %77 = load i32, i32* %76, align 8
  %78 = icmp sge i32 %75, %77
  br i1 %78, label %79, label %81

; <label>:79:                                     ; preds = %73
  call void @BZ2_compressBlock(%struct.EState* %4, i8 zeroext 0)
  %80 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  store i32 1, i32* %80, align 4
  br label %89

; <label>:81:                                     ; preds = %73
  %82 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 0
  %83 = load %struct.bz_stream*, %struct.bz_stream** %82, align 8
  %84 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %83, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

; <label>:87:                                     ; preds = %81
  %.lcssa9 = phi i8 [ %58, %81 ]
  %.1.lcssa = phi i8 [ %.1, %81 ]
  br label %92

; <label>:88:                                     ; preds = %81
  br label %89

; <label>:89:                                     ; preds = %88, %79
  br label %90

; <label>:90:                                     ; preds = %89, %66
  br label %91

; <label>:91:                                     ; preds = %90, %49
  %.12 = phi i8 [ %58, %90 ], [ %.01, %49 ]
  br label %5

; <label>:92:                                     ; preds = %87, %47, %33, %20
  %.23 = phi i8 [ %.01.lcssa, %20 ], [ %.01.lcssa6, %33 ], [ %.01.lcssa7, %47 ], [ %.lcssa9, %87 ]
  %.2 = phi i8 [ %.lcssa, %20 ], [ %.lcssa4, %33 ], [ %.lcssa5, %47 ], [ %.1.lcssa, %87 ]
  %93 = zext i8 %.23 to i32
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %98, label %95

; <label>:95:                                     ; preds = %92
  %96 = zext i8 %.2 to i32
  %97 = icmp ne i32 %96, 0
  br label %98

; <label>:98:                                     ; preds = %95, %92
  %99 = phi i1 [ true, %92 ], [ %97, %95 ]
  %100 = zext i1 %99 to i32
  %101 = trunc i32 %100 to i8
  ret i8 %101
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @isempty_RL(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = icmp ult i32 %3, 256
  br i1 %4, label %5, label %10

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %5
  br label %11

; <label>:10:                                     ; preds = %5, %1
  br label %11

; <label>:11:                                     ; preds = %10, %9
  %.0 = phi i8 [ 0, %9 ], [ 1, %10 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @copy_output_until_stop(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %3 = load %struct.bz_stream*, %struct.bz_stream** %2, align 8
  %4 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %.lr.ph

.lr.ph:                                           ; preds = %1
  br label %8

._crit_edge:                                      ; preds = %56
  %split = phi i8 [ 1, %56 ]
  br label %7

; <label>:7:                                      ; preds = %._crit_edge, %1
  %.0.lcssa = phi i8 [ %split, %._crit_edge ], [ 0, %1 ]
  br label %61

; <label>:8:                                      ; preds = %.lr.ph, %56
  %.03 = phi i8 [ 0, %.lr.ph ], [ 1, %56 ]
  call void @unroll_loop(i32 29)
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 20
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %12 = load i32, i32* %11, align 4
  %13 = icmp sge i32 %10, %12
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %8
  %.0.lcssa1 = phi i8 [ %.03, %8 ]
  br label %61

; <label>:15:                                     ; preds = %8
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 11
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 20
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %17, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %24 = load %struct.bz_stream*, %struct.bz_stream** %23, align 8
  %25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %24, i32 0, i32 4
  %26 = load i8*, i8** %25, align 8
  store i8 %22, i8* %26, align 1
  %27 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 20
  %28 = load i32, i32* %27, align 8
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %27, align 8
  %30 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %31 = load %struct.bz_stream*, %struct.bz_stream** %30, align 8
  %32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %31, i32 0, i32 5
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -1
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %36 = load %struct.bz_stream*, %struct.bz_stream** %35, align 8
  %37 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %36, i32 0, i32 4
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %37, align 8
  %40 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %41 = load %struct.bz_stream*, %struct.bz_stream** %40, align 8
  %42 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %41, i32 0, i32 6
  %43 = load i32, i32* %42, align 4
  %44 = add i32 %43, 1
  store i32 %44, i32* %42, align 4
  %45 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %46 = load %struct.bz_stream*, %struct.bz_stream** %45, align 8
  %47 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %46, i32 0, i32 6
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %56

; <label>:50:                                     ; preds = %15
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %52 = load %struct.bz_stream*, %struct.bz_stream** %51, align 8
  %53 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %52, i32 0, i32 7
  %54 = load i32, i32* %53, align 8
  %55 = add i32 %54, 1
  store i32 %55, i32* %53, align 8
  br label %56

; <label>:56:                                     ; preds = %50, %15
  %57 = load %struct.bz_stream*, %struct.bz_stream** %2, align 8
  %58 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %57, i32 0, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %._crit_edge, label %8

; <label>:61:                                     ; preds = %14, %7
  %.02 = phi i8 [ %.0.lcssa1, %14 ], [ %.0.lcssa, %7 ]
  ret i8 %.02
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @copy_input_until_stop(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %118

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 18
  %9 = load i32, i32* %8, align 8
  %10 = icmp sge i32 %7, %9
  br i1 %10, label %11, label %.lr.ph

.lr.ph:                                           ; preds = %5
  br label %12

._crit_edge:                                      ; preds = %113
  %split = phi i8 [ 1, %113 ]
  br label %11

; <label>:11:                                     ; preds = %._crit_edge, %5
  %.0.lcssa = phi i8 [ %split, %._crit_edge ], [ 0, %5 ]
  br label %117

; <label>:12:                                     ; preds = %.lr.ph, %113
  %.06 = phi i8 [ 0, %.lr.ph ], [ 1, %113 ]
  call void @unroll_loop(i32 30)
  %13 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %14 = load %struct.bz_stream*, %struct.bz_stream** %13, align 8
  %15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

; <label>:18:                                     ; preds = %12
  %.0.lcssa1 = phi i8 [ %.06, %12 ]
  br label %117

; <label>:19:                                     ; preds = %12
  %20 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %21 = load %struct.bz_stream*, %struct.bz_stream** %20, align 8
  %22 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %21, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %25, %27
  br i1 %28, label %29, label %65

; <label>:29:                                     ; preds = %19
  %30 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %65

; <label>:33:                                     ; preds = %29
  %34 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %38 = load i32, i32* %37, align 8
  %39 = shl i32 %38, 8
  %40 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %41 = load i32, i32* %40, align 8
  %42 = lshr i32 %41, 24
  %43 = zext i8 %36 to i32
  %44 = xor i32 %42, %43
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = xor i32 %39, %47
  %49 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  store i32 %48, i32* %49, align 8
  %50 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds [256 x i8], [256 x i8]* %50, i64 0, i64 %53
  store i8 1, i8* %54, align 1
  %55 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %56, i64 %59
  store i8 %36, i8* %60, align 1
  %61 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %61, align 4
  %64 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  store i32 %25, i32* %64, align 4
  br label %86

; <label>:65:                                     ; preds = %29, %19
  %66 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %25, %67
  br i1 %68, label %73, label %69

; <label>:69:                                     ; preds = %65
  %70 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 255
  br i1 %72, label %73, label %81

; <label>:73:                                     ; preds = %69, %65
  %74 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %75 = load i32, i32* %74, align 4
  %76 = icmp ult i32 %75, 256
  br i1 %76, label %77, label %78

; <label>:77:                                     ; preds = %73
  call void @add_pair_to_block(%struct.EState* %0)
  br label %78

; <label>:78:                                     ; preds = %77, %73
  %79 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  store i32 %25, i32* %79, align 4
  %80 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  store i32 1, i32* %80, align 8
  br label %85

; <label>:81:                                     ; preds = %69
  %82 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %82, align 8
  br label %85

; <label>:85:                                     ; preds = %81, %78
  br label %86

; <label>:86:                                     ; preds = %85, %33
  %87 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %88 = load %struct.bz_stream*, %struct.bz_stream** %87, align 8
  %89 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %88, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds i8, i8* %90, i32 1
  store i8* %91, i8** %89, align 8
  %92 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %93 = load %struct.bz_stream*, %struct.bz_stream** %92, align 8
  %94 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %93, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, -1
  store i32 %96, i32* %94, align 8
  %97 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %98 = load %struct.bz_stream*, %struct.bz_stream** %97, align 8
  %99 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %98, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %100, 1
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %103 = load %struct.bz_stream*, %struct.bz_stream** %102, align 8
  %104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %103, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %113

; <label>:107:                                    ; preds = %86
  %108 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %109 = load %struct.bz_stream*, %struct.bz_stream** %108, align 8
  %110 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, 1
  store i32 %112, i32* %110, align 8
  br label %113

; <label>:113:                                    ; preds = %107, %86
  %114 = load i32, i32* %6, align 4
  %115 = load i32, i32* %8, align 8
  %116 = icmp sge i32 %114, %115
  br i1 %116, label %._crit_edge, label %12

; <label>:117:                                    ; preds = %18, %11
  %.02 = phi i8 [ %.0.lcssa1, %18 ], [ %.0.lcssa, %11 ]
  br label %239

; <label>:118:                                    ; preds = %1
  %119 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 18
  %122 = load i32, i32* %121, align 8
  %123 = icmp sge i32 %120, %122
  br i1 %123, label %124, label %.lr.ph9

.lr.ph9:                                          ; preds = %118
  br label %125

._crit_edge10:                                    ; preds = %231
  %split11 = phi i8 [ 1, %231 ]
  br label %124

; <label>:124:                                    ; preds = %._crit_edge10, %118
  %.1.lcssa = phi i8 [ %split11, %._crit_edge10 ], [ 0, %118 ]
  br label %238

; <label>:125:                                    ; preds = %.lr.ph9, %231
  %.17 = phi i8 [ 0, %.lr.ph9 ], [ 1, %231 ]
  call void @unroll_loop(i32 31)
  %126 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %127 = load %struct.bz_stream*, %struct.bz_stream** %126, align 8
  %128 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %127, i32 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

; <label>:131:                                    ; preds = %125
  %.1.lcssa3 = phi i8 [ %.17, %125 ]
  br label %238

; <label>:132:                                    ; preds = %125
  %133 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

; <label>:136:                                    ; preds = %132
  %.1.lcssa4 = phi i8 [ %.17, %132 ]
  br label %238

; <label>:137:                                    ; preds = %132
  %138 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %139 = load %struct.bz_stream*, %struct.bz_stream** %138, align 8
  %140 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %139, i32 0, i32 0
  %141 = load i8*, i8** %140, align 8
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %145 = load i32, i32* %144, align 4
  %146 = icmp ne i32 %143, %145
  br i1 %146, label %147, label %183

; <label>:147:                                    ; preds = %137
  %148 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 1
  br i1 %150, label %151, label %183

; <label>:151:                                    ; preds = %147
  %152 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %153 = load i32, i32* %152, align 4
  %154 = trunc i32 %153 to i8
  %155 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %156 = load i32, i32* %155, align 8
  %157 = shl i32 %156, 8
  %158 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %159 = load i32, i32* %158, align 8
  %160 = lshr i32 %159, 24
  %161 = zext i8 %154 to i32
  %162 = xor i32 %160, %161
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = xor i32 %157, %165
  %167 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  store i32 %166, i32* %167, align 8
  %168 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %169 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %170 = load i32, i32* %169, align 4
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds [256 x i8], [256 x i8]* %168, i64 0, i64 %171
  store i8 1, i8* %172, align 1
  %173 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %174 = load i8*, i8** %173, align 8
  %175 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i8, i8* %174, i64 %177
  store i8 %154, i8* %178, align 1
  %179 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %180 = load i32, i32* %179, align 4
  %181 = add nsw i32 %180, 1
  store i32 %181, i32* %179, align 4
  %182 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  store i32 %143, i32* %182, align 4
  br label %204

; <label>:183:                                    ; preds = %147, %137
  %184 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %185 = load i32, i32* %184, align 4
  %186 = icmp ne i32 %143, %185
  br i1 %186, label %191, label %187

; <label>:187:                                    ; preds = %183
  %188 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %189 = load i32, i32* %188, align 8
  %190 = icmp eq i32 %189, 255
  br i1 %190, label %191, label %199

; <label>:191:                                    ; preds = %187, %183
  %192 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %193 = load i32, i32* %192, align 4
  %194 = icmp ult i32 %193, 256
  br i1 %194, label %195, label %196

; <label>:195:                                    ; preds = %191
  call void @add_pair_to_block(%struct.EState* %0)
  br label %196

; <label>:196:                                    ; preds = %195, %191
  %197 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  store i32 %143, i32* %197, align 4
  %198 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  store i32 1, i32* %198, align 8
  br label %203

; <label>:199:                                    ; preds = %187
  %200 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %201 = load i32, i32* %200, align 8
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %200, align 8
  br label %203

; <label>:203:                                    ; preds = %199, %196
  br label %204

; <label>:204:                                    ; preds = %203, %151
  %205 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %206 = load %struct.bz_stream*, %struct.bz_stream** %205, align 8
  %207 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %206, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = getelementptr inbounds i8, i8* %208, i32 1
  store i8* %209, i8** %207, align 8
  %210 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %211 = load %struct.bz_stream*, %struct.bz_stream** %210, align 8
  %212 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 8
  %214 = add i32 %213, -1
  store i32 %214, i32* %212, align 8
  %215 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %216 = load %struct.bz_stream*, %struct.bz_stream** %215, align 8
  %217 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %216, i32 0, i32 2
  %218 = load i32, i32* %217, align 4
  %219 = add i32 %218, 1
  store i32 %219, i32* %217, align 4
  %220 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %221 = load %struct.bz_stream*, %struct.bz_stream** %220, align 8
  %222 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %221, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %231

; <label>:225:                                    ; preds = %204
  %226 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %227 = load %struct.bz_stream*, %struct.bz_stream** %226, align 8
  %228 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %227, i32 0, i32 3
  %229 = load i32, i32* %228, align 8
  %230 = add i32 %229, 1
  store i32 %230, i32* %228, align 8
  br label %231

; <label>:231:                                    ; preds = %225, %204
  %232 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 3
  %233 = load i32, i32* %232, align 8
  %234 = add i32 %233, -1
  store i32 %234, i32* %232, align 8
  %235 = load i32, i32* %119, align 4
  %236 = load i32, i32* %121, align 8
  %237 = icmp sge i32 %235, %236
  br i1 %237, label %._crit_edge10, label %125

; <label>:238:                                    ; preds = %136, %131, %124
  %.15 = phi i8 [ %.1.lcssa4, %136 ], [ %.1.lcssa3, %131 ], [ %.1.lcssa, %124 ]
  br label %239

; <label>:239:                                    ; preds = %238, %117
  %.2 = phi i8 [ %.02, %117 ], [ %.15, %238 ]
  ret i8 %.2
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_RL(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = icmp ult i32 %3, 256
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %1
  call void @add_pair_to_block(%struct.EState* %0)
  br label %6

; <label>:6:                                      ; preds = %5, %1
  call void @init_RL(%struct.EState* %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_pair_to_block(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = trunc i32 %3 to i8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 0, %6
  br i1 %7, label %.lr.ph, label %26

.lr.ph:                                           ; preds = %1
  br label %8

; <label>:8:                                      ; preds = %.lr.ph, %22
  %.01 = phi i32 [ 0, %.lr.ph ], [ %23, %22 ]
  call void @unroll_loop(i32 10)
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %10 = load i32, i32* %9, align 8
  %11 = shl i32 %10, 8
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %13 = load i32, i32* %12, align 8
  %14 = lshr i32 %13, 24
  %15 = zext i8 %4 to i32
  %16 = xor i32 %14, %15
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = xor i32 %11, %19
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  store i32 %20, i32* %21, align 8
  br label %22

; <label>:22:                                     ; preds = %8
  %23 = add nuw nsw i32 %.01, 1
  %24 = load i32, i32* %5, align 8
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %8, label %._crit_edge

._crit_edge:                                      ; preds = %22
  br label %26

; <label>:26:                                     ; preds = %._crit_edge, %1
  %27 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* %27, i64 0, i64 %30
  store i8 1, i8* %31, align 1
  %32 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %91 [
    i32 1, label %34
    i32 2, label %44
    i32 3, label %63
  ]

; <label>:34:                                     ; preds = %26
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  store i8 %4, i8* %40, align 1
  %41 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %41, align 4
  br label %147

; <label>:44:                                     ; preds = %26
  %45 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  store i8 %4, i8* %50, align 1
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %51, align 4
  %54 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %55, i64 %58
  store i8 %4, i8* %59, align 1
  %60 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %60, align 4
  br label %147

; <label>:63:                                     ; preds = %26
  %64 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %65, i64 %68
  store i8 %4, i8* %69, align 1
  %70 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %74 = load i8*, i8** %73, align 8
  %75 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %74, i64 %77
  store i8 %4, i8* %78, align 1
  %79 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %79, align 4
  %82 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %83, i64 %86
  store i8 %4, i8* %87, align 1
  %88 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %89 = load i32, i32* %88, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %88, align 4
  br label %147

; <label>:91:                                     ; preds = %26
  %92 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %93 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %94 = load i32, i32* %93, align 8
  %95 = sub nsw i32 %94, 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [256 x i8], [256 x i8]* %92, i64 0, i64 %96
  store i8 1, i8* %97, align 1
  %98 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  store i8 %4, i8* %103, align 1
  %104 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %105 = load i32, i32* %104, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %108, i64 %111
  store i8 %4, i8* %112, align 1
  %113 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %114 = load i32, i32* %113, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %113, align 4
  %116 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %117, i64 %120
  store i8 %4, i8* %121, align 1
  %122 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %123 = load i32, i32* %122, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %122, align 4
  %125 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i8, i8* %126, i64 %129
  store i8 %4, i8* %130, align 1
  %131 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %132 = load i32, i32* %131, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %131, align 4
  %134 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %135 = load i32, i32* %134, align 8
  %136 = sub nsw i32 %135, 4
  %137 = trunc i32 %136 to i8
  %138 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %139, i64 %142
  store i8 %137, i8* %143, align 1
  %144 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %145 = load i32, i32* %144, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %144, align 4
  br label %147

; <label>:147:                                    ; preds = %91, %63, %44, %34
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompressEnd(%struct.bz_stream*) #0 {
  %2 = icmp eq %struct.bz_stream* %0, null
  br i1 %2, label %3, label %4

; <label>:3:                                      ; preds = %1
  br label %59

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.EState*
  %8 = icmp eq %struct.EState* %7, null
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %4
  br label %59

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 0
  %12 = load %struct.bz_stream*, %struct.bz_stream** %11, align 8
  %13 = icmp ne %struct.bz_stream* %12, %0
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %10
  br label %59

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 4
  %17 = load i32*, i32** %16, align 8
  %18 = icmp ne i32* %17, null
  br i1 %18, label %19, label %27

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %21 = load void (i8*, i8*)*, void (i8*, i8*)** %20, align 8
  %22 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 4
  %25 = load i32*, i32** %24, align 8
  %26 = bitcast i32* %25 to i8*
  call void %21(i8* %23, i8* %26)
  br label %27

; <label>:27:                                     ; preds = %19, %15
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 5
  %29 = load i32*, i32** %28, align 8
  %30 = icmp ne i32* %29, null
  br i1 %30, label %31, label %39

; <label>:31:                                     ; preds = %27
  %32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %33 = load void (i8*, i8*)*, void (i8*, i8*)** %32, align 8
  %34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 5
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast i32* %37 to i8*
  call void %33(i8* %35, i8* %38)
  br label %39

; <label>:39:                                     ; preds = %31, %27
  %40 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 6
  %41 = load i32*, i32** %40, align 8
  %42 = icmp ne i32* %41, null
  br i1 %42, label %43, label %51

; <label>:43:                                     ; preds = %39
  %44 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %45 = load void (i8*, i8*)*, void (i8*, i8*)** %44, align 8
  %46 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 6
  %49 = load i32*, i32** %48, align 8
  %50 = bitcast i32* %49 to i8*
  call void %45(i8* %47, i8* %50)
  br label %51

; <label>:51:                                     ; preds = %43, %39
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %53 = load void (i8*, i8*)*, void (i8*, i8*)** %52, align 8
  %54 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %57 = load i8*, i8** %56, align 8
  call void %53(i8* %55, i8* %57)
  %58 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  store i8* null, i8** %58, align 8
  br label %59

; <label>:59:                                     ; preds = %51, %14, %9, %3
  %.0 = phi i32 [ -2, %3 ], [ -2, %9 ], [ -2, %14 ], [ 0, %51 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompressInit(%struct.bz_stream*, i32, i32) #0 {
  %4 = call i32 @bz_config_ok()
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %7, label %6

; <label>:6:                                      ; preds = %3
  br label %60

; <label>:7:                                      ; preds = %3
  %8 = icmp eq %struct.bz_stream* %0, null
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %7
  br label %60

; <label>:10:                                     ; preds = %7
  %11 = icmp ne i32 %2, 0
  br i1 %11, label %12, label %15

; <label>:12:                                     ; preds = %10
  %13 = icmp ne i32 %2, 1
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %12
  br label %60

; <label>:15:                                     ; preds = %12, %10
  %16 = icmp slt i32 %1, 0
  br i1 %16, label %19, label %17

; <label>:17:                                     ; preds = %15
  %18 = icmp sgt i32 %1, 4
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %17, %15
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %22 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %21, align 8
  %23 = icmp eq i8* (i8*, i32, i32)* %22, null
  br i1 %23, label %24, label %26

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %25, align 8
  br label %26

; <label>:26:                                     ; preds = %24, %20
  %27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %27, align 8
  %29 = icmp eq void (i8*, i8*)* %28, null
  br i1 %29, label %30, label %32

; <label>:30:                                     ; preds = %26
  %31 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %31, align 8
  br label %32

; <label>:32:                                     ; preds = %30, %26
  %33 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %34 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %33, align 8
  %35 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %36 = load i8*, i8** %35, align 8
  %37 = call i8* %34(i8* %36, i32 64144, i32 1)
  %38 = bitcast i8* %37 to %struct.DState*
  %39 = icmp eq %struct.DState* %38, null
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %32
  br label %60

; <label>:41:                                     ; preds = %32
  %42 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 0
  store %struct.bz_stream* %0, %struct.bz_stream** %42, align 8
  %43 = bitcast %struct.DState* %38 to i8*
  %44 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 1
  store i32 10, i32* %45, align 8
  %46 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 8
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 7
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 26
  store i32 0, i32* %48, align 4
  %49 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 2
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 3
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 6
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 7
  store i32 0, i32* %52, align 8
  %53 = trunc i32 %2 to i8
  %54 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 10
  store i8 %53, i8* %54, align 4
  %55 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 22
  store i8* null, i8** %55, align 8
  %56 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 21
  store i16* null, i16** %56, align 8
  %57 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 20
  store i32* null, i32** %57, align 8
  %58 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 11
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %struct.DState, %struct.DState* %38, i32 0, i32 12
  store i32 %1, i32* %59, align 4
  br label %60

; <label>:60:                                     ; preds = %41, %40, %19, %14, %9, %6
  %.0 = phi i32 [ -2, %9 ], [ -2, %14 ], [ -2, %19 ], [ -3, %40 ], [ 0, %41 ], [ -9, %6 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_indexIntoF(i32, i32*) #0 {
  br label %3

; <label>:3:                                      ; preds = %13, %2
  %.01 = phi i32 [ 0, %2 ], [ %.12, %13 ]
  %.0 = phi i32 [ 256, %2 ], [ %.1, %13 ]
  call void @unroll_loop(i32 35)
  %4 = add nsw i32 %.01, %.0
  %5 = ashr i32 %4, 1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32, i32* %1, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = icmp sge i32 %0, %8
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %3
  br label %12

; <label>:11:                                     ; preds = %3
  br label %12

; <label>:12:                                     ; preds = %11, %10
  %.12 = phi i32 [ %5, %10 ], [ %.01, %11 ]
  %.1 = phi i32 [ %.0, %10 ], [ %5, %11 ]
  br label %13

; <label>:13:                                     ; preds = %12
  %14 = sub nsw i32 %.1, %.12
  %15 = icmp ne i32 %14, 1
  br i1 %15, label %3, label %16

; <label>:16:                                     ; preds = %13
  %.12.lcssa = phi i32 [ %.12, %13 ]
  ret i32 %.12.lcssa
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompress(%struct.bz_stream*) #0 {
  %2 = icmp eq %struct.bz_stream* %0, null
  br i1 %2, label %3, label %4

; <label>:3:                                      ; preds = %1
  br label %130

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.DState*
  %8 = icmp eq %struct.DState* %7, null
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %4
  br label %130

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 0
  %12 = load %struct.bz_stream*, %struct.bz_stream** %11, align 8
  %13 = icmp ne %struct.bz_stream* %12, %0
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %10
  br label %130

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %.lr.ph

.lr.ph:                                           ; preds = %15
  br label %20

._crit_edge:                                      ; preds = %127
  br label %19

; <label>:19:                                     ; preds = %._crit_edge, %15
  br label %130

; <label>:20:                                     ; preds = %.lr.ph, %127
  call void @unroll_loop(i32 36)
  %21 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %94

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 10
  %26 = load i8, i8* %25, align 4
  %27 = icmp ne i8 %26, 0
  br i1 %27, label %28, label %30

; <label>:28:                                     ; preds = %24
  %29 = call zeroext i8 @unRLE_obuf_to_output_SMALL(%struct.DState* %7)
  br label %32

; <label>:30:                                     ; preds = %24
  %31 = call zeroext i8 @unRLE_obuf_to_output_FAST(%struct.DState* %7)
  br label %32

; <label>:32:                                     ; preds = %30, %28
  %.01 = phi i8 [ %29, %28 ], [ %31, %30 ]
  %33 = icmp ne i8 %.01, 0
  br i1 %33, label %34, label %35

; <label>:34:                                     ; preds = %32
  br label %130

; <label>:35:                                     ; preds = %32
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 17
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 51
  %39 = load i32, i32* %38, align 8
  %40 = add nsw i32 %39, 1
  %41 = icmp eq i32 %37, %40
  br i1 %41, label %42, label %92

; <label>:42:                                     ; preds = %35
  %43 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %92

; <label>:46:                                     ; preds = %42
  %47 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 25
  %48 = load i32, i32* %47, align 8
  %49 = xor i32 %48, -1
  %50 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 25
  store i32 %49, i32* %50, align 8
  %51 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 12
  %52 = load i32, i32* %51, align 4
  %53 = icmp sge i32 %52, 3
  br i1 %53, label %54, label %62

; <label>:54:                                     ; preds = %46
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %56 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 23
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 25
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr [18 x i8], [18 x i8]* @.str.2.108, i32 0, i32 0
  %61 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %55, i8* %60, i32 %57, i32 %59)
  br label %62

; <label>:62:                                     ; preds = %54, %46
  %63 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 12
  %64 = load i32, i32* %63, align 4
  %65 = icmp sge i32 %64, 2
  br i1 %65, label %66, label %70

; <label>:66:                                     ; preds = %62
  %67 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %68 = getelementptr [2 x i8], [2 x i8]* @.str.3.109, i32 0, i32 0
  %69 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %67, i8* %68)
  br label %70

; <label>:70:                                     ; preds = %66, %62
  %71 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 25
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 23
  %74 = load i32, i32* %73, align 8
  %75 = icmp ne i32 %72, %74
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %70
  br label %130

; <label>:77:                                     ; preds = %70
  %78 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 26
  %79 = load i32, i32* %78, align 4
  %80 = shl i32 %79, 1
  %81 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 26
  %82 = load i32, i32* %81, align 4
  %83 = lshr i32 %82, 31
  %84 = or i32 %80, %83
  %85 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 26
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 25
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 26
  %89 = load i32, i32* %88, align 4
  %90 = xor i32 %89, %87
  store i32 %90, i32* %88, align 4
  %91 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 1
  store i32 14, i32* %91, align 8
  br label %93

; <label>:92:                                     ; preds = %42, %35
  br label %130

; <label>:93:                                     ; preds = %77
  br label %94

; <label>:94:                                     ; preds = %93, %20
  %95 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = icmp sge i32 %96, 10
  br i1 %97, label %98, label %127

; <label>:98:                                     ; preds = %94
  %99 = call i32 @BZ2_decompress(%struct.DState* %7)
  %100 = icmp eq i32 %99, 4
  br i1 %100, label %101, label %121

; <label>:101:                                    ; preds = %98
  %.lcssa = phi i32 [ %99, %98 ]
  %102 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 12
  %103 = load i32, i32* %102, align 4
  %104 = icmp sge i32 %103, 3
  br i1 %104, label %105, label %113

; <label>:105:                                    ; preds = %101
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %107 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 24
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 26
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr [55 x i8], [55 x i8]* @.str.4.110, i32 0, i32 0
  %112 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %106, i8* %111, i32 %108, i32 %110)
  br label %113

; <label>:113:                                    ; preds = %105, %101
  %114 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 26
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 24
  %117 = load i32, i32* %116, align 4
  %118 = icmp ne i32 %115, %117
  br i1 %118, label %119, label %120

; <label>:119:                                    ; preds = %113
  br label %130

; <label>:120:                                    ; preds = %113
  br label %130

; <label>:121:                                    ; preds = %98
  %122 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  %124 = icmp ne i32 %123, 2
  br i1 %124, label %125, label %126

; <label>:125:                                    ; preds = %121
  %.lcssa2 = phi i32 [ %99, %121 ]
  br label %130

; <label>:126:                                    ; preds = %121
  br label %127

; <label>:127:                                    ; preds = %126, %94
  %128 = load i32, i32* %16, align 8
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %._crit_edge, label %20

; <label>:130:                                    ; preds = %125, %120, %119, %92, %76, %34, %19, %14, %9, %3
  %.0 = phi i32 [ -2, %3 ], [ -2, %9 ], [ -2, %14 ], [ -1, %19 ], [ -4, %34 ], [ -4, %76 ], [ -4, %119 ], [ %.lcssa, %120 ], [ %.lcssa2, %125 ], [ 0, %92 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @unRLE_obuf_to_output_SMALL(%struct.DState*) #0 {
  %2 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %3 = load i8, i8* %2, align 4
  %4 = icmp ne i8 %3, 0
  br i1 %4, label %5, label %522

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %7 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %8 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %._crit_edge, label %.lr.ph.lr.ph

.lr.ph.lr.ph:                                     ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.backedge
  call void @unroll_loop(i32 23)
  br label %12

.._crit_edge_crit_edge:                           ; preds = %.backedge
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge_crit_edge, %5
  br label %11

._crit_edge2:                                     ; preds = %68
  br label %11

; <label>:11:                                     ; preds = %._crit_edge2, %._crit_edge
  br label %884

; <label>:12:                                     ; preds = %.lr.ph, %68
  call void @unroll_loop(i32 38)
  %13 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %12
  br label %73

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %19 = load i8, i8* %18, align 4
  %20 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %21 = load %struct.bz_stream*, %struct.bz_stream** %20, align 8
  %22 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 8
  store i8 %19, i8* %23, align 1
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %25 = load i32, i32* %24, align 8
  %26 = shl i32 %25, 8
  %27 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %28 = load i32, i32* %27, align 8
  %29 = lshr i32 %28, 24
  %30 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %31 = load i8, i8* %30, align 4
  %32 = zext i8 %31 to i32
  %33 = xor i32 %29, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = xor i32 %26, %36
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %43 = load %struct.bz_stream*, %struct.bz_stream** %42, align 8
  %44 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %43, i32 0, i32 4
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %44, align 8
  %47 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %48 = load %struct.bz_stream*, %struct.bz_stream** %47, align 8
  %49 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %48, i32 0, i32 5
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, -1
  store i32 %51, i32* %49, align 8
  %52 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %53 = load %struct.bz_stream*, %struct.bz_stream** %52, align 8
  %54 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %53, i32 0, i32 6
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %54, align 4
  %57 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %58 = load %struct.bz_stream*, %struct.bz_stream** %57, align 8
  %59 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %58, i32 0, i32 6
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %68

; <label>:62:                                     ; preds = %17
  %63 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %64 = load %struct.bz_stream*, %struct.bz_stream** %63, align 8
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 8
  br label %68

; <label>:68:                                     ; preds = %62, %17
  %69 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %70 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %._crit_edge2, label %12

; <label>:73:                                     ; preds = %16
  %74 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  %79 = icmp eq i32 %75, %78
  br i1 %79, label %80, label %81

; <label>:80:                                     ; preds = %73
  br label %884

; <label>:81:                                     ; preds = %73
  %82 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, 1
  %87 = icmp sgt i32 %83, %86
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %81
  br label %884

; <label>:89:                                     ; preds = %81
  %90 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 1, i32* %90, align 8
  %91 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %92 = load i32, i32* %91, align 8
  %93 = trunc i32 %92 to i8
  %94 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  store i8 %93, i8* %94, align 4
  %95 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %98 = load i32, i32* %97, align 8
  %99 = mul i32 100000, %98
  %100 = icmp uge i32 %96, %99
  br i1 %100, label %101, label %102

; <label>:101:                                    ; preds = %89
  br label %884

; <label>:102:                                    ; preds = %89
  %103 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %106 = getelementptr inbounds [257 x i32], [257 x i32]* %105, i32 0, i32 0
  %107 = call i32 @BZ2_indexIntoF(i32 %104, i32* %106)
  %108 = trunc i32 %107 to i8
  %109 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %110 = load i16*, i16** %109, align 8
  %111 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i16, i16* %110, i64 %113
  %115 = load i16, i16* %114, align 2
  %116 = zext i16 %115 to i32
  %117 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %120 = load i32, i32* %119, align 4
  %121 = lshr i32 %120, 1
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %118, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %127 = load i32, i32* %126, align 4
  %128 = shl i32 %127, 2
  %129 = and i32 %128, 4
  %130 = lshr i32 %125, %129
  %131 = and i32 %130, 15
  %132 = shl i32 %131, 16
  %133 = or i32 %116, %132
  %134 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %154

; <label>:138:                                    ; preds = %102
  %139 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %143, i32* %144, align 8
  %145 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %146 = load i32, i32* %145, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %145, align 4
  %148 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 512
  br i1 %150, label %151, label %153

; <label>:151:                                    ; preds = %138
  %152 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %152, align 4
  br label %153

; <label>:153:                                    ; preds = %151, %138
  br label %154

; <label>:154:                                    ; preds = %153, %102
  %155 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %156 = load i32, i32* %155, align 8
  %157 = add nsw i32 %156, -1
  store i32 %157, i32* %155, align 8
  %158 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %159, 1
  %161 = zext i1 %160 to i64
  %162 = select i1 %160, i32 1, i32 0
  %163 = zext i8 %108 to i32
  %164 = xor i32 %163, %162
  %165 = trunc i32 %164 to i8
  %166 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %167 = load i32, i32* %166, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %172 = load i32, i32* %171, align 8
  %173 = add nsw i32 %172, 1
  %174 = icmp eq i32 %170, %173
  br i1 %174, label %175, label %176

; <label>:175:                                    ; preds = %154
  br label %.backedge

; <label>:176:                                    ; preds = %154
  %177 = zext i8 %165 to i32
  %178 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %179 = load i32, i32* %178, align 8
  %180 = icmp ne i32 %177, %179
  br i1 %180, label %181, label %184

; <label>:181:                                    ; preds = %176
  %182 = zext i8 %165 to i32
  %183 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %182, i32* %183, align 8
  br label %.backedge

; <label>:184:                                    ; preds = %176
  %185 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 2, i32* %185, align 8
  %186 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %187 = load i32, i32* %186, align 4
  %188 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %189 = load i32, i32* %188, align 8
  %190 = mul i32 100000, %189
  %191 = icmp uge i32 %187, %190
  br i1 %191, label %192, label %193

; <label>:192:                                    ; preds = %184
  br label %884

; <label>:193:                                    ; preds = %184
  %194 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %197 = getelementptr inbounds [257 x i32], [257 x i32]* %196, i32 0, i32 0
  %198 = call i32 @BZ2_indexIntoF(i32 %195, i32* %197)
  %199 = trunc i32 %198 to i8
  %200 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %201 = load i16*, i16** %200, align 8
  %202 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds i16, i16* %201, i64 %204
  %206 = load i16, i16* %205, align 2
  %207 = zext i16 %206 to i32
  %208 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %211 = load i32, i32* %210, align 4
  %212 = lshr i32 %211, 1
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds i8, i8* %209, i64 %213
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i32
  %217 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %218 = load i32, i32* %217, align 4
  %219 = shl i32 %218, 2
  %220 = and i32 %219, 4
  %221 = lshr i32 %216, %220
  %222 = and i32 %221, 15
  %223 = shl i32 %222, 16
  %224 = or i32 %207, %223
  %225 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %224, i32* %225, align 4
  %226 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %245

; <label>:229:                                    ; preds = %193
  %230 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %232
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %234, i32* %235, align 8
  %236 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %237 = load i32, i32* %236, align 4
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %236, align 4
  %239 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 512
  br i1 %241, label %242, label %244

; <label>:242:                                    ; preds = %229
  %243 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %243, align 4
  br label %244

; <label>:244:                                    ; preds = %242, %229
  br label %245

; <label>:245:                                    ; preds = %244, %193
  %246 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %247 = load i32, i32* %246, align 8
  %248 = add nsw i32 %247, -1
  store i32 %248, i32* %246, align 8
  %249 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %250 = load i32, i32* %249, align 8
  %251 = icmp eq i32 %250, 1
  %252 = zext i1 %251 to i64
  %253 = select i1 %251, i32 1, i32 0
  %254 = zext i8 %199 to i32
  %255 = xor i32 %254, %253
  %256 = trunc i32 %255 to i8
  %257 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %258 = load i32, i32* %257, align 4
  %259 = add nsw i32 %258, 1
  store i32 %259, i32* %257, align 4
  %260 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %263 = load i32, i32* %262, align 8
  %264 = add nsw i32 %263, 1
  %265 = icmp eq i32 %261, %264
  br i1 %265, label %266, label %267

; <label>:266:                                    ; preds = %245
  br label %.backedge

; <label>:267:                                    ; preds = %245
  %268 = zext i8 %256 to i32
  %269 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %270 = load i32, i32* %269, align 8
  %271 = icmp ne i32 %268, %270
  br i1 %271, label %272, label %275

; <label>:272:                                    ; preds = %267
  %273 = zext i8 %256 to i32
  %274 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %273, i32* %274, align 8
  br label %.backedge

; <label>:275:                                    ; preds = %267
  %276 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 3, i32* %276, align 8
  %277 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %278 = load i32, i32* %277, align 4
  %279 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %280 = load i32, i32* %279, align 8
  %281 = mul i32 100000, %280
  %282 = icmp uge i32 %278, %281
  br i1 %282, label %283, label %284

; <label>:283:                                    ; preds = %275
  br label %884

; <label>:284:                                    ; preds = %275
  %285 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %286 = load i32, i32* %285, align 4
  %287 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %288 = getelementptr inbounds [257 x i32], [257 x i32]* %287, i32 0, i32 0
  %289 = call i32 @BZ2_indexIntoF(i32 %286, i32* %288)
  %290 = trunc i32 %289 to i8
  %291 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %292 = load i16*, i16** %291, align 8
  %293 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %294 = load i32, i32* %293, align 4
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds i16, i16* %292, i64 %295
  %297 = load i16, i16* %296, align 2
  %298 = zext i16 %297 to i32
  %299 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %300 = load i8*, i8** %299, align 8
  %301 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %302 = load i32, i32* %301, align 4
  %303 = lshr i32 %302, 1
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds i8, i8* %300, i64 %304
  %306 = load i8, i8* %305, align 1
  %307 = zext i8 %306 to i32
  %308 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %309 = load i32, i32* %308, align 4
  %310 = shl i32 %309, 2
  %311 = and i32 %310, 4
  %312 = lshr i32 %307, %311
  %313 = and i32 %312, 15
  %314 = shl i32 %313, 16
  %315 = or i32 %298, %314
  %316 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %315, i32* %316, align 4
  %317 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %318 = load i32, i32* %317, align 8
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %336

; <label>:320:                                    ; preds = %284
  %321 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %322 = load i32, i32* %321, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %323
  %325 = load i32, i32* %324, align 4
  %326 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %325, i32* %326, align 8
  %327 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %328 = load i32, i32* %327, align 4
  %329 = add nsw i32 %328, 1
  store i32 %329, i32* %327, align 4
  %330 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %331 = load i32, i32* %330, align 4
  %332 = icmp eq i32 %331, 512
  br i1 %332, label %333, label %335

; <label>:333:                                    ; preds = %320
  %334 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %334, align 4
  br label %335

; <label>:335:                                    ; preds = %333, %320
  br label %336

; <label>:336:                                    ; preds = %335, %284
  %337 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %338 = load i32, i32* %337, align 8
  %339 = add nsw i32 %338, -1
  store i32 %339, i32* %337, align 8
  %340 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %341 = load i32, i32* %340, align 8
  %342 = icmp eq i32 %341, 1
  %343 = zext i1 %342 to i64
  %344 = select i1 %342, i32 1, i32 0
  %345 = zext i8 %290 to i32
  %346 = xor i32 %345, %344
  %347 = trunc i32 %346 to i8
  %348 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %349 = load i32, i32* %348, align 4
  %350 = add nsw i32 %349, 1
  store i32 %350, i32* %348, align 4
  %351 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %354 = load i32, i32* %353, align 8
  %355 = add nsw i32 %354, 1
  %356 = icmp eq i32 %352, %355
  br i1 %356, label %357, label %358

; <label>:357:                                    ; preds = %336
  br label %.backedge

; <label>:358:                                    ; preds = %336
  %359 = zext i8 %347 to i32
  %360 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %361 = load i32, i32* %360, align 8
  %362 = icmp ne i32 %359, %361
  br i1 %362, label %363, label %366

; <label>:363:                                    ; preds = %358
  %364 = zext i8 %347 to i32
  %365 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %364, i32* %365, align 8
  br label %.backedge

; <label>:366:                                    ; preds = %358
  %367 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %368 = load i32, i32* %367, align 4
  %369 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %370 = load i32, i32* %369, align 8
  %371 = mul i32 100000, %370
  %372 = icmp uge i32 %368, %371
  br i1 %372, label %373, label %374

; <label>:373:                                    ; preds = %366
  br label %884

; <label>:374:                                    ; preds = %366
  %375 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %376 = load i32, i32* %375, align 4
  %377 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %378 = getelementptr inbounds [257 x i32], [257 x i32]* %377, i32 0, i32 0
  %379 = call i32 @BZ2_indexIntoF(i32 %376, i32* %378)
  %380 = trunc i32 %379 to i8
  %381 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %382 = load i16*, i16** %381, align 8
  %383 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %384 = load i32, i32* %383, align 4
  %385 = zext i32 %384 to i64
  %386 = getelementptr inbounds i16, i16* %382, i64 %385
  %387 = load i16, i16* %386, align 2
  %388 = zext i16 %387 to i32
  %389 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %390 = load i8*, i8** %389, align 8
  %391 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %392 = load i32, i32* %391, align 4
  %393 = lshr i32 %392, 1
  %394 = zext i32 %393 to i64
  %395 = getelementptr inbounds i8, i8* %390, i64 %394
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i32
  %398 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %399 = load i32, i32* %398, align 4
  %400 = shl i32 %399, 2
  %401 = and i32 %400, 4
  %402 = lshr i32 %397, %401
  %403 = and i32 %402, 15
  %404 = shl i32 %403, 16
  %405 = or i32 %388, %404
  %406 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %405, i32* %406, align 4
  %407 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %408 = load i32, i32* %407, align 8
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %426

; <label>:410:                                    ; preds = %374
  %411 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %412 = load i32, i32* %411, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %413
  %415 = load i32, i32* %414, align 4
  %416 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %415, i32* %416, align 8
  %417 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %418 = load i32, i32* %417, align 4
  %419 = add nsw i32 %418, 1
  store i32 %419, i32* %417, align 4
  %420 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %421 = load i32, i32* %420, align 4
  %422 = icmp eq i32 %421, 512
  br i1 %422, label %423, label %425

; <label>:423:                                    ; preds = %410
  %424 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %424, align 4
  br label %425

; <label>:425:                                    ; preds = %423, %410
  br label %426

; <label>:426:                                    ; preds = %425, %374
  %427 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %428 = load i32, i32* %427, align 8
  %429 = add nsw i32 %428, -1
  store i32 %429, i32* %427, align 8
  %430 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %431 = load i32, i32* %430, align 8
  %432 = icmp eq i32 %431, 1
  %433 = zext i1 %432 to i64
  %434 = select i1 %432, i32 1, i32 0
  %435 = zext i8 %380 to i32
  %436 = xor i32 %435, %434
  %437 = trunc i32 %436 to i8
  %438 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %439 = load i32, i32* %438, align 4
  %440 = add nsw i32 %439, 1
  store i32 %440, i32* %438, align 4
  %441 = zext i8 %437 to i32
  %442 = add nsw i32 %441, 4
  %443 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 %442, i32* %443, align 8
  %444 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %445 = load i32, i32* %444, align 4
  %446 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %447 = load i32, i32* %446, align 8
  %448 = mul i32 100000, %447
  %449 = icmp uge i32 %445, %448
  br i1 %449, label %450, label %451

; <label>:450:                                    ; preds = %426
  br label %884

; <label>:451:                                    ; preds = %426
  %452 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %453 = load i32, i32* %452, align 4
  %454 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %455 = getelementptr inbounds [257 x i32], [257 x i32]* %454, i32 0, i32 0
  %456 = call i32 @BZ2_indexIntoF(i32 %453, i32* %455)
  %457 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %456, i32* %457, align 8
  %458 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %459 = load i16*, i16** %458, align 8
  %460 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %461 = load i32, i32* %460, align 4
  %462 = zext i32 %461 to i64
  %463 = getelementptr inbounds i16, i16* %459, i64 %462
  %464 = load i16, i16* %463, align 2
  %465 = zext i16 %464 to i32
  %466 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %467 = load i8*, i8** %466, align 8
  %468 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %469 = load i32, i32* %468, align 4
  %470 = lshr i32 %469, 1
  %471 = zext i32 %470 to i64
  %472 = getelementptr inbounds i8, i8* %467, i64 %471
  %473 = load i8, i8* %472, align 1
  %474 = zext i8 %473 to i32
  %475 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %476 = load i32, i32* %475, align 4
  %477 = shl i32 %476, 2
  %478 = and i32 %477, 4
  %479 = lshr i32 %474, %478
  %480 = and i32 %479, 15
  %481 = shl i32 %480, 16
  %482 = or i32 %465, %481
  %483 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %482, i32* %483, align 4
  %484 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %485 = load i32, i32* %484, align 8
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %503

; <label>:487:                                    ; preds = %451
  %488 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %489 = load i32, i32* %488, align 4
  %490 = sext i32 %489 to i64
  %491 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %492, i32* %493, align 8
  %494 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %495 = load i32, i32* %494, align 4
  %496 = add nsw i32 %495, 1
  store i32 %496, i32* %494, align 4
  %497 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %498 = load i32, i32* %497, align 4
  %499 = icmp eq i32 %498, 512
  br i1 %499, label %500, label %502

; <label>:500:                                    ; preds = %487
  %501 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %501, align 4
  br label %502

; <label>:502:                                    ; preds = %500, %487
  br label %503

; <label>:503:                                    ; preds = %502, %451
  %504 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %505 = load i32, i32* %504, align 8
  %506 = add nsw i32 %505, -1
  store i32 %506, i32* %504, align 8
  %507 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %508 = load i32, i32* %507, align 8
  %509 = icmp eq i32 %508, 1
  %510 = zext i1 %509 to i64
  %511 = select i1 %509, i32 1, i32 0
  %512 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %513 = load i32, i32* %512, align 8
  %514 = xor i32 %513, %511
  store i32 %514, i32* %512, align 8
  %515 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %516 = load i32, i32* %515, align 4
  %517 = add nsw i32 %516, 1
  store i32 %517, i32* %515, align 4
  br label %.backedge

.backedge:                                        ; preds = %503, %363, %357, %272, %266, %181, %175
  %518 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %519 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %518, i32 0, i32 5
  %520 = load i32, i32* %519, align 8
  %521 = icmp eq i32 %520, 0
  br i1 %521, label %.._crit_edge_crit_edge, label %.lr.ph

; <label>:522:                                    ; preds = %1
  %523 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %524 = load %struct.bz_stream*, %struct.bz_stream** %523, align 8
  %525 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %524, i32 0, i32 5
  %526 = load i32, i32* %525, align 8
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %._crit_edge5, label %.lr.ph4.lr.ph

.lr.ph4.lr.ph:                                    ; preds = %522
  br label %.lr.ph4

.lr.ph4:                                          ; preds = %.lr.ph4.lr.ph, %.backedge1
  call void @unroll_loop(i32 37)
  br label %529

.._crit_edge5_crit_edge:                          ; preds = %.backedge1
  br label %._crit_edge5

._crit_edge5:                                     ; preds = %.._crit_edge5_crit_edge, %522
  br label %528

._crit_edge6:                                     ; preds = %585
  br label %528

; <label>:528:                                    ; preds = %._crit_edge6, %._crit_edge5
  br label %884

; <label>:529:                                    ; preds = %.lr.ph4, %585
  call void @unroll_loop(i32 39)
  %530 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %531 = load i32, i32* %530, align 8
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %534

; <label>:533:                                    ; preds = %529
  br label %590

; <label>:534:                                    ; preds = %529
  %535 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %536 = load i8, i8* %535, align 4
  %537 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %538 = load %struct.bz_stream*, %struct.bz_stream** %537, align 8
  %539 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %538, i32 0, i32 4
  %540 = load i8*, i8** %539, align 8
  store i8 %536, i8* %540, align 1
  %541 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %542 = load i32, i32* %541, align 8
  %543 = shl i32 %542, 8
  %544 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %545 = load i32, i32* %544, align 8
  %546 = lshr i32 %545, 24
  %547 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %548 = load i8, i8* %547, align 4
  %549 = zext i8 %548 to i32
  %550 = xor i32 %546, %549
  %551 = zext i32 %550 to i64
  %552 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %551
  %553 = load i32, i32* %552, align 4
  %554 = xor i32 %543, %553
  %555 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  store i32 %554, i32* %555, align 8
  %556 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %557 = load i32, i32* %556, align 8
  %558 = add nsw i32 %557, -1
  store i32 %558, i32* %556, align 8
  %559 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %560 = load %struct.bz_stream*, %struct.bz_stream** %559, align 8
  %561 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %560, i32 0, i32 4
  %562 = load i8*, i8** %561, align 8
  %563 = getelementptr inbounds i8, i8* %562, i32 1
  store i8* %563, i8** %561, align 8
  %564 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %565 = load %struct.bz_stream*, %struct.bz_stream** %564, align 8
  %566 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %565, i32 0, i32 5
  %567 = load i32, i32* %566, align 8
  %568 = add i32 %567, -1
  store i32 %568, i32* %566, align 8
  %569 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %570 = load %struct.bz_stream*, %struct.bz_stream** %569, align 8
  %571 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %570, i32 0, i32 6
  %572 = load i32, i32* %571, align 4
  %573 = add i32 %572, 1
  store i32 %573, i32* %571, align 4
  %574 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %575 = load %struct.bz_stream*, %struct.bz_stream** %574, align 8
  %576 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %575, i32 0, i32 6
  %577 = load i32, i32* %576, align 4
  %578 = icmp eq i32 %577, 0
  br i1 %578, label %579, label %585

; <label>:579:                                    ; preds = %534
  %580 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %581 = load %struct.bz_stream*, %struct.bz_stream** %580, align 8
  %582 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %581, i32 0, i32 7
  %583 = load i32, i32* %582, align 8
  %584 = add i32 %583, 1
  store i32 %584, i32* %582, align 8
  br label %585

; <label>:585:                                    ; preds = %579, %534
  %586 = load %struct.bz_stream*, %struct.bz_stream** %523, align 8
  %587 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %586, i32 0, i32 5
  %588 = load i32, i32* %587, align 8
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %._crit_edge6, label %529

; <label>:590:                                    ; preds = %533
  %591 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %592 = load i32, i32* %591, align 4
  %593 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %594 = load i32, i32* %593, align 8
  %595 = add nsw i32 %594, 1
  %596 = icmp eq i32 %592, %595
  br i1 %596, label %597, label %598

; <label>:597:                                    ; preds = %590
  br label %884

; <label>:598:                                    ; preds = %590
  %599 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %600 = load i32, i32* %599, align 4
  %601 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %602 = load i32, i32* %601, align 8
  %603 = add nsw i32 %602, 1
  %604 = icmp sgt i32 %600, %603
  br i1 %604, label %605, label %606

; <label>:605:                                    ; preds = %598
  br label %884

; <label>:606:                                    ; preds = %598
  %607 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 1, i32* %607, align 8
  %608 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %609 = load i32, i32* %608, align 8
  %610 = trunc i32 %609 to i8
  %611 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  store i8 %610, i8* %611, align 4
  %612 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %613 = load i32, i32* %612, align 4
  %614 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %615 = load i32, i32* %614, align 8
  %616 = mul i32 100000, %615
  %617 = icmp uge i32 %613, %616
  br i1 %617, label %618, label %619

; <label>:618:                                    ; preds = %606
  br label %884

; <label>:619:                                    ; preds = %606
  %620 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %621 = load i32, i32* %620, align 4
  %622 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %623 = getelementptr inbounds [257 x i32], [257 x i32]* %622, i32 0, i32 0
  %624 = call i32 @BZ2_indexIntoF(i32 %621, i32* %623)
  %625 = trunc i32 %624 to i8
  %626 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %627 = load i16*, i16** %626, align 8
  %628 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %629 = load i32, i32* %628, align 4
  %630 = zext i32 %629 to i64
  %631 = getelementptr inbounds i16, i16* %627, i64 %630
  %632 = load i16, i16* %631, align 2
  %633 = zext i16 %632 to i32
  %634 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %635 = load i8*, i8** %634, align 8
  %636 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %637 = load i32, i32* %636, align 4
  %638 = lshr i32 %637, 1
  %639 = zext i32 %638 to i64
  %640 = getelementptr inbounds i8, i8* %635, i64 %639
  %641 = load i8, i8* %640, align 1
  %642 = zext i8 %641 to i32
  %643 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %644 = load i32, i32* %643, align 4
  %645 = shl i32 %644, 2
  %646 = and i32 %645, 4
  %647 = lshr i32 %642, %646
  %648 = and i32 %647, 15
  %649 = shl i32 %648, 16
  %650 = or i32 %633, %649
  %651 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %650, i32* %651, align 4
  %652 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %653 = load i32, i32* %652, align 4
  %654 = add nsw i32 %653, 1
  store i32 %654, i32* %652, align 4
  %655 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %656 = load i32, i32* %655, align 4
  %657 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %658 = load i32, i32* %657, align 8
  %659 = add nsw i32 %658, 1
  %660 = icmp eq i32 %656, %659
  br i1 %660, label %661, label %662

; <label>:661:                                    ; preds = %619
  br label %.backedge1

; <label>:662:                                    ; preds = %619
  %663 = zext i8 %625 to i32
  %664 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %665 = load i32, i32* %664, align 8
  %666 = icmp ne i32 %663, %665
  br i1 %666, label %667, label %670

; <label>:667:                                    ; preds = %662
  %668 = zext i8 %625 to i32
  %669 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %668, i32* %669, align 8
  br label %.backedge1

; <label>:670:                                    ; preds = %662
  %671 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 2, i32* %671, align 8
  %672 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %673 = load i32, i32* %672, align 4
  %674 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %675 = load i32, i32* %674, align 8
  %676 = mul i32 100000, %675
  %677 = icmp uge i32 %673, %676
  br i1 %677, label %678, label %679

; <label>:678:                                    ; preds = %670
  br label %884

; <label>:679:                                    ; preds = %670
  %680 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %681 = load i32, i32* %680, align 4
  %682 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %683 = getelementptr inbounds [257 x i32], [257 x i32]* %682, i32 0, i32 0
  %684 = call i32 @BZ2_indexIntoF(i32 %681, i32* %683)
  %685 = trunc i32 %684 to i8
  %686 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %687 = load i16*, i16** %686, align 8
  %688 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %689 = load i32, i32* %688, align 4
  %690 = zext i32 %689 to i64
  %691 = getelementptr inbounds i16, i16* %687, i64 %690
  %692 = load i16, i16* %691, align 2
  %693 = zext i16 %692 to i32
  %694 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %695 = load i8*, i8** %694, align 8
  %696 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %697 = load i32, i32* %696, align 4
  %698 = lshr i32 %697, 1
  %699 = zext i32 %698 to i64
  %700 = getelementptr inbounds i8, i8* %695, i64 %699
  %701 = load i8, i8* %700, align 1
  %702 = zext i8 %701 to i32
  %703 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %704 = load i32, i32* %703, align 4
  %705 = shl i32 %704, 2
  %706 = and i32 %705, 4
  %707 = lshr i32 %702, %706
  %708 = and i32 %707, 15
  %709 = shl i32 %708, 16
  %710 = or i32 %693, %709
  %711 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %710, i32* %711, align 4
  %712 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %713 = load i32, i32* %712, align 4
  %714 = add nsw i32 %713, 1
  store i32 %714, i32* %712, align 4
  %715 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %716 = load i32, i32* %715, align 4
  %717 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %718 = load i32, i32* %717, align 8
  %719 = add nsw i32 %718, 1
  %720 = icmp eq i32 %716, %719
  br i1 %720, label %721, label %722

; <label>:721:                                    ; preds = %679
  br label %.backedge1

; <label>:722:                                    ; preds = %679
  %723 = zext i8 %685 to i32
  %724 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %725 = load i32, i32* %724, align 8
  %726 = icmp ne i32 %723, %725
  br i1 %726, label %727, label %730

; <label>:727:                                    ; preds = %722
  %728 = zext i8 %685 to i32
  %729 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %728, i32* %729, align 8
  br label %.backedge1

; <label>:730:                                    ; preds = %722
  %731 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 3, i32* %731, align 8
  %732 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %733 = load i32, i32* %732, align 4
  %734 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %735 = load i32, i32* %734, align 8
  %736 = mul i32 100000, %735
  %737 = icmp uge i32 %733, %736
  br i1 %737, label %738, label %739

; <label>:738:                                    ; preds = %730
  br label %884

; <label>:739:                                    ; preds = %730
  %740 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %741 = load i32, i32* %740, align 4
  %742 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %743 = getelementptr inbounds [257 x i32], [257 x i32]* %742, i32 0, i32 0
  %744 = call i32 @BZ2_indexIntoF(i32 %741, i32* %743)
  %745 = trunc i32 %744 to i8
  %746 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %747 = load i16*, i16** %746, align 8
  %748 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %749 = load i32, i32* %748, align 4
  %750 = zext i32 %749 to i64
  %751 = getelementptr inbounds i16, i16* %747, i64 %750
  %752 = load i16, i16* %751, align 2
  %753 = zext i16 %752 to i32
  %754 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %755 = load i8*, i8** %754, align 8
  %756 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %757 = load i32, i32* %756, align 4
  %758 = lshr i32 %757, 1
  %759 = zext i32 %758 to i64
  %760 = getelementptr inbounds i8, i8* %755, i64 %759
  %761 = load i8, i8* %760, align 1
  %762 = zext i8 %761 to i32
  %763 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %764 = load i32, i32* %763, align 4
  %765 = shl i32 %764, 2
  %766 = and i32 %765, 4
  %767 = lshr i32 %762, %766
  %768 = and i32 %767, 15
  %769 = shl i32 %768, 16
  %770 = or i32 %753, %769
  %771 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %770, i32* %771, align 4
  %772 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %773 = load i32, i32* %772, align 4
  %774 = add nsw i32 %773, 1
  store i32 %774, i32* %772, align 4
  %775 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %776 = load i32, i32* %775, align 4
  %777 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %778 = load i32, i32* %777, align 8
  %779 = add nsw i32 %778, 1
  %780 = icmp eq i32 %776, %779
  br i1 %780, label %781, label %782

; <label>:781:                                    ; preds = %739
  br label %.backedge1

; <label>:782:                                    ; preds = %739
  %783 = zext i8 %745 to i32
  %784 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %785 = load i32, i32* %784, align 8
  %786 = icmp ne i32 %783, %785
  br i1 %786, label %787, label %790

; <label>:787:                                    ; preds = %782
  %788 = zext i8 %745 to i32
  %789 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %788, i32* %789, align 8
  br label %.backedge1

; <label>:790:                                    ; preds = %782
  %791 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %792 = load i32, i32* %791, align 4
  %793 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %794 = load i32, i32* %793, align 8
  %795 = mul i32 100000, %794
  %796 = icmp uge i32 %792, %795
  br i1 %796, label %797, label %798

; <label>:797:                                    ; preds = %790
  br label %884

; <label>:798:                                    ; preds = %790
  %799 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %800 = load i32, i32* %799, align 4
  %801 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %802 = getelementptr inbounds [257 x i32], [257 x i32]* %801, i32 0, i32 0
  %803 = call i32 @BZ2_indexIntoF(i32 %800, i32* %802)
  %804 = trunc i32 %803 to i8
  %805 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %806 = load i16*, i16** %805, align 8
  %807 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %808 = load i32, i32* %807, align 4
  %809 = zext i32 %808 to i64
  %810 = getelementptr inbounds i16, i16* %806, i64 %809
  %811 = load i16, i16* %810, align 2
  %812 = zext i16 %811 to i32
  %813 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %814 = load i8*, i8** %813, align 8
  %815 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %816 = load i32, i32* %815, align 4
  %817 = lshr i32 %816, 1
  %818 = zext i32 %817 to i64
  %819 = getelementptr inbounds i8, i8* %814, i64 %818
  %820 = load i8, i8* %819, align 1
  %821 = zext i8 %820 to i32
  %822 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %823 = load i32, i32* %822, align 4
  %824 = shl i32 %823, 2
  %825 = and i32 %824, 4
  %826 = lshr i32 %821, %825
  %827 = and i32 %826, 15
  %828 = shl i32 %827, 16
  %829 = or i32 %812, %828
  %830 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %829, i32* %830, align 4
  %831 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %832 = load i32, i32* %831, align 4
  %833 = add nsw i32 %832, 1
  store i32 %833, i32* %831, align 4
  %834 = zext i8 %804 to i32
  %835 = add nsw i32 %834, 4
  %836 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 %835, i32* %836, align 8
  %837 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %838 = load i32, i32* %837, align 4
  %839 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %840 = load i32, i32* %839, align 8
  %841 = mul i32 100000, %840
  %842 = icmp uge i32 %838, %841
  br i1 %842, label %843, label %844

; <label>:843:                                    ; preds = %798
  br label %884

; <label>:844:                                    ; preds = %798
  %845 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %846 = load i32, i32* %845, align 4
  %847 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %848 = getelementptr inbounds [257 x i32], [257 x i32]* %847, i32 0, i32 0
  %849 = call i32 @BZ2_indexIntoF(i32 %846, i32* %848)
  %850 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %849, i32* %850, align 8
  %851 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %852 = load i16*, i16** %851, align 8
  %853 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %854 = load i32, i32* %853, align 4
  %855 = zext i32 %854 to i64
  %856 = getelementptr inbounds i16, i16* %852, i64 %855
  %857 = load i16, i16* %856, align 2
  %858 = zext i16 %857 to i32
  %859 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %860 = load i8*, i8** %859, align 8
  %861 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %862 = load i32, i32* %861, align 4
  %863 = lshr i32 %862, 1
  %864 = zext i32 %863 to i64
  %865 = getelementptr inbounds i8, i8* %860, i64 %864
  %866 = load i8, i8* %865, align 1
  %867 = zext i8 %866 to i32
  %868 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %869 = load i32, i32* %868, align 4
  %870 = shl i32 %869, 2
  %871 = and i32 %870, 4
  %872 = lshr i32 %867, %871
  %873 = and i32 %872, 15
  %874 = shl i32 %873, 16
  %875 = or i32 %858, %874
  %876 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %875, i32* %876, align 4
  %877 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %878 = load i32, i32* %877, align 4
  %879 = add nsw i32 %878, 1
  store i32 %879, i32* %877, align 4
  br label %.backedge1

.backedge1:                                       ; preds = %844, %787, %781, %727, %721, %667, %661
  %880 = load %struct.bz_stream*, %struct.bz_stream** %523, align 8
  %881 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %880, i32 0, i32 5
  %882 = load i32, i32* %881, align 8
  %883 = icmp eq i32 %882, 0
  br i1 %883, label %.._crit_edge5_crit_edge, label %.lr.ph4

; <label>:884:                                    ; preds = %843, %797, %738, %678, %618, %605, %597, %528, %450, %373, %283, %192, %101, %88, %80, %11
  %.0 = phi i8 [ 0, %11 ], [ 0, %80 ], [ 1, %88 ], [ 1, %101 ], [ 1, %192 ], [ 1, %283 ], [ 1, %373 ], [ 1, %450 ], [ 0, %528 ], [ 0, %597 ], [ 1, %605 ], [ 1, %618 ], [ 1, %678 ], [ 1, %738 ], [ 1, %797 ], [ 1, %843 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @unRLE_obuf_to_output_FAST(%struct.DState*) #0 {
  %2 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %3 = load i8, i8* %2, align 4
  %4 = icmp ne i8 %3, 0
  br i1 %4, label %5, label %439

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %7 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %8 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %._crit_edge, label %.lr.ph.lr.ph

.lr.ph.lr.ph:                                     ; preds = %5
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.backedge
  call void @unroll_loop(i32 40)
  br label %12

.._crit_edge_crit_edge:                           ; preds = %.backedge
  br label %._crit_edge

._crit_edge:                                      ; preds = %.._crit_edge_crit_edge, %5
  br label %11

._crit_edge110:                                   ; preds = %68
  br label %11

; <label>:11:                                     ; preds = %._crit_edge110, %._crit_edge
  br label %630

; <label>:12:                                     ; preds = %.lr.ph, %68
  call void @unroll_loop(i32 32)
  %13 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %12
  br label %73

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %19 = load i8, i8* %18, align 4
  %20 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %21 = load %struct.bz_stream*, %struct.bz_stream** %20, align 8
  %22 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %21, i32 0, i32 4
  %23 = load i8*, i8** %22, align 8
  store i8 %19, i8* %23, align 1
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %25 = load i32, i32* %24, align 8
  %26 = shl i32 %25, 8
  %27 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %28 = load i32, i32* %27, align 8
  %29 = lshr i32 %28, 24
  %30 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %31 = load i8, i8* %30, align 4
  %32 = zext i8 %31 to i32
  %33 = xor i32 %29, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = xor i32 %26, %36
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = add nsw i32 %40, -1
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %43 = load %struct.bz_stream*, %struct.bz_stream** %42, align 8
  %44 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %43, i32 0, i32 4
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %44, align 8
  %47 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %48 = load %struct.bz_stream*, %struct.bz_stream** %47, align 8
  %49 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %48, i32 0, i32 5
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, -1
  store i32 %51, i32* %49, align 8
  %52 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %53 = load %struct.bz_stream*, %struct.bz_stream** %52, align 8
  %54 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %53, i32 0, i32 6
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %54, align 4
  %57 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %58 = load %struct.bz_stream*, %struct.bz_stream** %57, align 8
  %59 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %58, i32 0, i32 6
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %68

; <label>:62:                                     ; preds = %17
  %63 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %64 = load %struct.bz_stream*, %struct.bz_stream** %63, align 8
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 7
  %66 = load i32, i32* %65, align 8
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 8
  br label %68

; <label>:68:                                     ; preds = %62, %17
  %69 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %70 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %69, i32 0, i32 5
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %._crit_edge110, label %12

; <label>:73:                                     ; preds = %16
  %74 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  %79 = icmp eq i32 %75, %78
  br i1 %79, label %80, label %81

; <label>:80:                                     ; preds = %73
  br label %630

; <label>:81:                                     ; preds = %73
  %82 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %85 = load i32, i32* %84, align 8
  %86 = add nsw i32 %85, 1
  %87 = icmp sgt i32 %83, %86
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %81
  br label %630

; <label>:89:                                     ; preds = %81
  %90 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 1, i32* %90, align 8
  %91 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %92 = load i32, i32* %91, align 8
  %93 = trunc i32 %92 to i8
  %94 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  store i8 %93, i8* %94, align 4
  %95 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %98 = load i32, i32* %97, align 8
  %99 = mul i32 100000, %98
  %100 = icmp uge i32 %96, %99
  br i1 %100, label %101, label %102

; <label>:101:                                    ; preds = %89
  br label %630

; <label>:102:                                    ; preds = %89
  %103 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %104, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %109, i32* %110, align 4
  %111 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %112 = load i32, i32* %111, align 4
  %113 = and i32 %112, 255
  %114 = trunc i32 %113 to i8
  %115 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %116 = load i32, i32* %115, align 4
  %117 = lshr i32 %116, 8
  store i32 %117, i32* %115, align 4
  %118 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %137

; <label>:121:                                    ; preds = %102
  %122 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %123 = load i32, i32* %122, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %126, i32* %127, align 8
  %128 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %129 = load i32, i32* %128, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 512
  br i1 %133, label %134, label %136

; <label>:134:                                    ; preds = %121
  %135 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %135, align 4
  br label %136

; <label>:136:                                    ; preds = %134, %121
  br label %137

; <label>:137:                                    ; preds = %136, %102
  %138 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %139 = load i32, i32* %138, align 8
  %140 = add nsw i32 %139, -1
  store i32 %140, i32* %138, align 8
  %141 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 1
  %144 = zext i1 %143 to i64
  %145 = select i1 %143, i32 1, i32 0
  %146 = zext i8 %114 to i32
  %147 = xor i32 %146, %145
  %148 = trunc i32 %147 to i8
  %149 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %150 = load i32, i32* %149, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %149, align 4
  %152 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %153 = load i32, i32* %152, align 4
  %154 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %155 = load i32, i32* %154, align 8
  %156 = add nsw i32 %155, 1
  %157 = icmp eq i32 %153, %156
  br i1 %157, label %158, label %159

; <label>:158:                                    ; preds = %137
  br label %.backedge

; <label>:159:                                    ; preds = %137
  %160 = zext i8 %148 to i32
  %161 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %162 = load i32, i32* %161, align 8
  %163 = icmp ne i32 %160, %162
  br i1 %163, label %164, label %167

; <label>:164:                                    ; preds = %159
  %165 = zext i8 %148 to i32
  %166 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %165, i32* %166, align 8
  br label %.backedge

; <label>:167:                                    ; preds = %159
  %168 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 2, i32* %168, align 8
  %169 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %170 = load i32, i32* %169, align 4
  %171 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %172 = load i32, i32* %171, align 8
  %173 = mul i32 100000, %172
  %174 = icmp uge i32 %170, %173
  br i1 %174, label %175, label %176

; <label>:175:                                    ; preds = %167
  br label %630

; <label>:176:                                    ; preds = %167
  %177 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %178 = load i32*, i32** %177, align 8
  %179 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %180 = load i32, i32* %179, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds i32, i32* %178, i64 %181
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %183, i32* %184, align 4
  %185 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %186 = load i32, i32* %185, align 4
  %187 = and i32 %186, 255
  %188 = trunc i32 %187 to i8
  %189 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %190 = load i32, i32* %189, align 4
  %191 = lshr i32 %190, 8
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %211

; <label>:195:                                    ; preds = %176
  %196 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %197 = load i32, i32* %196, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %200, i32* %201, align 8
  %202 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %203 = load i32, i32* %202, align 4
  %204 = add nsw i32 %203, 1
  store i32 %204, i32* %202, align 4
  %205 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 512
  br i1 %207, label %208, label %210

; <label>:208:                                    ; preds = %195
  %209 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %209, align 4
  br label %210

; <label>:210:                                    ; preds = %208, %195
  br label %211

; <label>:211:                                    ; preds = %210, %176
  %212 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %213 = load i32, i32* %212, align 8
  %214 = add nsw i32 %213, -1
  store i32 %214, i32* %212, align 8
  %215 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %216, 1
  %218 = zext i1 %217 to i64
  %219 = select i1 %217, i32 1, i32 0
  %220 = zext i8 %188 to i32
  %221 = xor i32 %220, %219
  %222 = trunc i32 %221 to i8
  %223 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %224 = load i32, i32* %223, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %223, align 4
  %226 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %229 = load i32, i32* %228, align 8
  %230 = add nsw i32 %229, 1
  %231 = icmp eq i32 %227, %230
  br i1 %231, label %232, label %233

; <label>:232:                                    ; preds = %211
  br label %.backedge

; <label>:233:                                    ; preds = %211
  %234 = zext i8 %222 to i32
  %235 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %236 = load i32, i32* %235, align 8
  %237 = icmp ne i32 %234, %236
  br i1 %237, label %238, label %241

; <label>:238:                                    ; preds = %233
  %239 = zext i8 %222 to i32
  %240 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %239, i32* %240, align 8
  br label %.backedge

; <label>:241:                                    ; preds = %233
  %242 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 3, i32* %242, align 8
  %243 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %244 = load i32, i32* %243, align 4
  %245 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %246 = load i32, i32* %245, align 8
  %247 = mul i32 100000, %246
  %248 = icmp uge i32 %244, %247
  br i1 %248, label %249, label %250

; <label>:249:                                    ; preds = %241
  br label %630

; <label>:250:                                    ; preds = %241
  %251 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %252 = load i32*, i32** %251, align 8
  %253 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %254 = load i32, i32* %253, align 4
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds i32, i32* %252, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %257, i32* %258, align 4
  %259 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %260 = load i32, i32* %259, align 4
  %261 = and i32 %260, 255
  %262 = trunc i32 %261 to i8
  %263 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %264 = load i32, i32* %263, align 4
  %265 = lshr i32 %264, 8
  store i32 %265, i32* %263, align 4
  %266 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %267 = load i32, i32* %266, align 8
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %285

; <label>:269:                                    ; preds = %250
  %270 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %271 = load i32, i32* %270, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %274, i32* %275, align 8
  %276 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %277 = load i32, i32* %276, align 4
  %278 = add nsw i32 %277, 1
  store i32 %278, i32* %276, align 4
  %279 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %280 = load i32, i32* %279, align 4
  %281 = icmp eq i32 %280, 512
  br i1 %281, label %282, label %284

; <label>:282:                                    ; preds = %269
  %283 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %283, align 4
  br label %284

; <label>:284:                                    ; preds = %282, %269
  br label %285

; <label>:285:                                    ; preds = %284, %250
  %286 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %287 = load i32, i32* %286, align 8
  %288 = add nsw i32 %287, -1
  store i32 %288, i32* %286, align 8
  %289 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %290 = load i32, i32* %289, align 8
  %291 = icmp eq i32 %290, 1
  %292 = zext i1 %291 to i64
  %293 = select i1 %291, i32 1, i32 0
  %294 = zext i8 %262 to i32
  %295 = xor i32 %294, %293
  %296 = trunc i32 %295 to i8
  %297 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %298 = load i32, i32* %297, align 4
  %299 = add nsw i32 %298, 1
  store i32 %299, i32* %297, align 4
  %300 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %301 = load i32, i32* %300, align 4
  %302 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %303 = load i32, i32* %302, align 8
  %304 = add nsw i32 %303, 1
  %305 = icmp eq i32 %301, %304
  br i1 %305, label %306, label %307

; <label>:306:                                    ; preds = %285
  br label %.backedge

; <label>:307:                                    ; preds = %285
  %308 = zext i8 %296 to i32
  %309 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %310 = load i32, i32* %309, align 8
  %311 = icmp ne i32 %308, %310
  br i1 %311, label %312, label %315

; <label>:312:                                    ; preds = %307
  %313 = zext i8 %296 to i32
  %314 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %313, i32* %314, align 8
  br label %.backedge

; <label>:315:                                    ; preds = %307
  %316 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %317 = load i32, i32* %316, align 4
  %318 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %319 = load i32, i32* %318, align 8
  %320 = mul i32 100000, %319
  %321 = icmp uge i32 %317, %320
  br i1 %321, label %322, label %323

; <label>:322:                                    ; preds = %315
  br label %630

; <label>:323:                                    ; preds = %315
  %324 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %325 = load i32*, i32** %324, align 8
  %326 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %327 = load i32, i32* %326, align 4
  %328 = zext i32 %327 to i64
  %329 = getelementptr inbounds i32, i32* %325, i64 %328
  %330 = load i32, i32* %329, align 4
  %331 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %330, i32* %331, align 4
  %332 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %333 = load i32, i32* %332, align 4
  %334 = and i32 %333, 255
  %335 = trunc i32 %334 to i8
  %336 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %337 = load i32, i32* %336, align 4
  %338 = lshr i32 %337, 8
  store i32 %338, i32* %336, align 4
  %339 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %340 = load i32, i32* %339, align 8
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %358

; <label>:342:                                    ; preds = %323
  %343 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %344 = load i32, i32* %343, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %345
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %347, i32* %348, align 8
  %349 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %350 = load i32, i32* %349, align 4
  %351 = add nsw i32 %350, 1
  store i32 %351, i32* %349, align 4
  %352 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %353 = load i32, i32* %352, align 4
  %354 = icmp eq i32 %353, 512
  br i1 %354, label %355, label %357

; <label>:355:                                    ; preds = %342
  %356 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %356, align 4
  br label %357

; <label>:357:                                    ; preds = %355, %342
  br label %358

; <label>:358:                                    ; preds = %357, %323
  %359 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %360 = load i32, i32* %359, align 8
  %361 = add nsw i32 %360, -1
  store i32 %361, i32* %359, align 8
  %362 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %363 = load i32, i32* %362, align 8
  %364 = icmp eq i32 %363, 1
  %365 = zext i1 %364 to i64
  %366 = select i1 %364, i32 1, i32 0
  %367 = zext i8 %335 to i32
  %368 = xor i32 %367, %366
  %369 = trunc i32 %368 to i8
  %370 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %371 = load i32, i32* %370, align 4
  %372 = add nsw i32 %371, 1
  store i32 %372, i32* %370, align 4
  %373 = zext i8 %369 to i32
  %374 = add nsw i32 %373, 4
  %375 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 %374, i32* %375, align 8
  %376 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %377 = load i32, i32* %376, align 4
  %378 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %379 = load i32, i32* %378, align 8
  %380 = mul i32 100000, %379
  %381 = icmp uge i32 %377, %380
  br i1 %381, label %382, label %383

; <label>:382:                                    ; preds = %358
  br label %630

; <label>:383:                                    ; preds = %358
  %384 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %385 = load i32*, i32** %384, align 8
  %386 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %387 = load i32, i32* %386, align 4
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds i32, i32* %385, i64 %388
  %390 = load i32, i32* %389, align 4
  %391 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %390, i32* %391, align 4
  %392 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %393 = load i32, i32* %392, align 4
  %394 = and i32 %393, 255
  %395 = trunc i32 %394 to i8
  %396 = zext i8 %395 to i32
  %397 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %396, i32* %397, align 8
  %398 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %399 = load i32, i32* %398, align 4
  %400 = lshr i32 %399, 8
  store i32 %400, i32* %398, align 4
  %401 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %402 = load i32, i32* %401, align 8
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %420

; <label>:404:                                    ; preds = %383
  %405 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %406 = load i32, i32* %405, align 4
  %407 = sext i32 %406 to i64
  %408 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %407
  %409 = load i32, i32* %408, align 4
  %410 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %409, i32* %410, align 8
  %411 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %412 = load i32, i32* %411, align 4
  %413 = add nsw i32 %412, 1
  store i32 %413, i32* %411, align 4
  %414 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %415 = load i32, i32* %414, align 4
  %416 = icmp eq i32 %415, 512
  br i1 %416, label %417, label %419

; <label>:417:                                    ; preds = %404
  %418 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %418, align 4
  br label %419

; <label>:419:                                    ; preds = %417, %404
  br label %420

; <label>:420:                                    ; preds = %419, %383
  %421 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %422 = load i32, i32* %421, align 8
  %423 = add nsw i32 %422, -1
  store i32 %423, i32* %421, align 8
  %424 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %425 = load i32, i32* %424, align 8
  %426 = icmp eq i32 %425, 1
  %427 = zext i1 %426 to i64
  %428 = select i1 %426, i32 1, i32 0
  %429 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %430 = load i32, i32* %429, align 8
  %431 = xor i32 %430, %428
  store i32 %431, i32* %429, align 8
  %432 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %433 = load i32, i32* %432, align 4
  %434 = add nsw i32 %433, 1
  store i32 %434, i32* %432, align 4
  br label %.backedge

.backedge:                                        ; preds = %420, %312, %306, %238, %232, %164, %158
  %435 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %436 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %435, i32 0, i32 5
  %437 = load i32, i32* %436, align 8
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %.._crit_edge_crit_edge, label %.lr.ph

; <label>:439:                                    ; preds = %1
  %440 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %441 = load i32, i32* %440, align 8
  %442 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %443 = load i8, i8* %442, align 4
  %444 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %445 = load i32, i32* %444, align 8
  %446 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %447 = load i32, i32* %446, align 4
  %448 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %449 = load i32, i32* %448, align 8
  %450 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %451 = load i32*, i32** %450, align 8
  %452 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %453 = load i32, i32* %452, align 4
  %454 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %455 = load %struct.bz_stream*, %struct.bz_stream** %454, align 8
  %456 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %455, i32 0, i32 4
  %457 = load i8*, i8** %456, align 8
  %458 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %459 = load %struct.bz_stream*, %struct.bz_stream** %458, align 8
  %460 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %459, i32 0, i32 5
  %461 = load i32, i32* %460, align 8
  %462 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %463 = load i32, i32* %462, align 8
  %464 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %465 = load i32, i32* %464, align 8
  %466 = add nsw i32 %465, 1
  br label %467

; <label>:467:                                    ; preds = %.backedge109, %439
  %.027 = phi i32 [ %453, %439 ], [ %.027.be, %.backedge109 ]
  %.022 = phi i8* [ %457, %439 ], [ %.325, %.backedge109 ]
  %.018 = phi i32 [ %449, %439 ], [ %.018.be, %.backedge109 ]
  %.014 = phi i32 [ %447, %439 ], [ %.014.be, %.backedge109 ]
  %.011 = phi i32 [ %445, %439 ], [ %.011.be, %.backedge109 ]
  %.07 = phi i8 [ %443, %439 ], [ %510, %.backedge109 ]
  %.02 = phi i32 [ %441, %439 ], [ %.35, %.backedge109 ]
  %.01 = phi i32 [ %461, %439 ], [ %.3, %.backedge109 ]
  call void @unroll_loop(i32 33)
  %468 = icmp sgt i32 %.011, 0
  br i1 %468, label %469, label %503

; <label>:469:                                    ; preds = %467
  %470 = icmp eq i32 %.01, 0
  br i1 %470, label %._crit_edge117, label %.lr.ph116

.lr.ph116:                                        ; preds = %469
  br label %472

._crit_edge117:                                   ; preds = %469
  %split = phi i32 [ %.027, %469 ]
  %split118 = phi i32 [ %.018, %469 ]
  %split119 = phi i32 [ %.014, %469 ]
  %split120 = phi i8 [ %.07, %469 ]
  %split121 = phi i8* [ %.022, %469 ]
  %split122 = phi i32 [ %.011, %469 ]
  %split123 = phi i32 [ %.02, %469 ]
  %split124 = phi i32 [ %.01, %469 ]
  br label %471

._crit_edge125:                                   ; preds = %475
  %split126 = phi i32 [ %.027, %475 ]
  %split127 = phi i32 [ %.018, %475 ]
  %split128 = phi i32 [ %.014, %475 ]
  %split129 = phi i8 [ %.07, %475 ]
  %split130 = phi i8* [ %485, %475 ]
  %split131 = phi i32 [ %484, %475 ]
  %split132 = phi i32 [ %483, %475 ]
  %split133 = phi i32 [ %486, %475 ]
  br label %471

; <label>:471:                                    ; preds = %._crit_edge125, %._crit_edge117
  %.027.lcssa = phi i32 [ %split126, %._crit_edge125 ], [ %split, %._crit_edge117 ]
  %.018.lcssa = phi i32 [ %split127, %._crit_edge125 ], [ %split118, %._crit_edge117 ]
  %.014.lcssa = phi i32 [ %split128, %._crit_edge125 ], [ %split119, %._crit_edge117 ]
  %.07.lcssa = phi i8 [ %split129, %._crit_edge125 ], [ %split120, %._crit_edge117 ]
  %.123.lcssa = phi i8* [ %split130, %._crit_edge125 ], [ %split121, %._crit_edge117 ]
  %.112.lcssa = phi i32 [ %split131, %._crit_edge125 ], [ %split122, %._crit_edge117 ]
  %.13.lcssa = phi i32 [ %split132, %._crit_edge125 ], [ %split123, %._crit_edge117 ]
  %.1.lcssa = phi i32 [ %split133, %._crit_edge125 ], [ %split124, %._crit_edge117 ]
  br label %593

; <label>:472:                                    ; preds = %.lr.ph116, %475
  %.1114 = phi i32 [ %.01, %.lr.ph116 ], [ %486, %475 ]
  %.13113 = phi i32 [ %.02, %.lr.ph116 ], [ %483, %475 ]
  %.112112 = phi i32 [ %.011, %.lr.ph116 ], [ %484, %475 ]
  %.123111 = phi i8* [ %.022, %.lr.ph116 ], [ %485, %475 ]
  call void @unroll_loop(i32 34)
  %473 = icmp eq i32 %.112112, 1
  br i1 %473, label %474, label %475

; <label>:474:                                    ; preds = %472
  %.123.lcssa34 = phi i8* [ %.123111, %472 ]
  %.13.lcssa32 = phi i32 [ %.13113, %472 ]
  %.1.lcssa31 = phi i32 [ %.1114, %472 ]
  br label %488

; <label>:475:                                    ; preds = %472
  store i8 %.07, i8* %.123111, align 1
  %476 = shl i32 %.13113, 8
  %477 = lshr i32 %.13113, 24
  %478 = zext i8 %.07 to i32
  %479 = xor i32 %477, %478
  %480 = zext i32 %479 to i64
  %481 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = xor i32 %476, %482
  %484 = add nsw i32 %.112112, -1
  %485 = getelementptr inbounds i8, i8* %.123111, i32 1
  %486 = add i32 %.1114, -1
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %._crit_edge125, label %472

; <label>:488:                                    ; preds = %474
  br label %489

; <label>:489:                                    ; preds = %528, %524, %488
  %.128 = phi i32 [ %.027, %488 ], [ %520, %524 ], [ %520, %528 ]
  %.224 = phi i8* [ %.123.lcssa34, %488 ], [ %.325, %524 ], [ %.325, %528 ]
  %.119 = phi i32 [ %.018, %488 ], [ %525, %524 ], [ %.220, %528 ]
  %.115 = phi i32 [ %.014, %488 ], [ %521, %524 ], [ %521, %528 ]
  %.18 = phi i8 [ %.07, %488 ], [ %510, %524 ], [ %510, %528 ]
  %.24 = phi i32 [ %.13.lcssa32, %488 ], [ %.35, %524 ], [ %.35, %528 ]
  %.2 = phi i32 [ %.1.lcssa31, %488 ], [ %.3, %524 ], [ %.3, %528 ]
  %490 = icmp eq i32 %.2, 0
  br i1 %490, label %491, label %492

; <label>:491:                                    ; preds = %489
  %.128.lcssa = phi i32 [ %.128, %489 ]
  %.224.lcssa = phi i8* [ %.224, %489 ]
  %.119.lcssa = phi i32 [ %.119, %489 ]
  %.115.lcssa = phi i32 [ %.115, %489 ]
  %.18.lcssa = phi i8 [ %.18, %489 ]
  %.24.lcssa = phi i32 [ %.24, %489 ]
  %.2.lcssa = phi i32 [ %.2, %489 ]
  br label %593

; <label>:492:                                    ; preds = %489
  store i8 %.18, i8* %.224, align 1
  %493 = shl i32 %.24, 8
  %494 = lshr i32 %.24, 24
  %495 = zext i8 %.18 to i32
  %496 = xor i32 %494, %495
  %497 = zext i32 %496 to i64
  %498 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %497
  %499 = load i32, i32* %498, align 4
  %500 = xor i32 %493, %499
  %501 = getelementptr inbounds i8, i8* %.224, i32 1
  %502 = add i32 %.2, -1
  br label %503

; <label>:503:                                    ; preds = %492, %467
  %.229 = phi i32 [ %.128, %492 ], [ %.027, %467 ]
  %.325 = phi i8* [ %501, %492 ], [ %.022, %467 ]
  %.220 = phi i32 [ %.119, %492 ], [ %.018, %467 ]
  %.216 = phi i32 [ %.115, %492 ], [ %.014, %467 ]
  %.29 = phi i8 [ %.18, %492 ], [ %.07, %467 ]
  %.35 = phi i32 [ %500, %492 ], [ %.02, %467 ]
  %.3 = phi i32 [ %502, %492 ], [ %.01, %467 ]
  %504 = icmp sgt i32 %.216, %466
  br i1 %504, label %505, label %506

; <label>:505:                                    ; preds = %503
  br label %630

; <label>:506:                                    ; preds = %503
  %507 = icmp eq i32 %.216, %466
  br i1 %507, label %508, label %509

; <label>:508:                                    ; preds = %506
  %.229.lcssa103 = phi i32 [ %.229, %506 ]
  %.325.lcssa97 = phi i8* [ %.325, %506 ]
  %.220.lcssa91 = phi i32 [ %.220, %506 ]
  %.216.lcssa85 = phi i32 [ %.216, %506 ]
  %.29.lcssa79 = phi i8 [ %.29, %506 ]
  %.35.lcssa73 = phi i32 [ %.35, %506 ]
  %.3.lcssa67 = phi i32 [ %.3, %506 ]
  br label %593

; <label>:509:                                    ; preds = %506
  %510 = trunc i32 %.220 to i8
  %511 = mul i32 100000, %463
  %512 = icmp uge i32 %.229, %511
  br i1 %512, label %513, label %514

; <label>:513:                                    ; preds = %509
  br label %630

; <label>:514:                                    ; preds = %509
  %515 = zext i32 %.229 to i64
  %516 = getelementptr inbounds i32, i32* %451, i64 %515
  %517 = load i32, i32* %516, align 4
  %518 = and i32 %517, 255
  %519 = trunc i32 %518 to i8
  %520 = lshr i32 %517, 8
  %521 = add nsw i32 %.216, 1
  %522 = zext i8 %519 to i32
  %523 = icmp ne i32 %522, %.220
  br i1 %523, label %524, label %526

; <label>:524:                                    ; preds = %514
  %525 = zext i8 %519 to i32
  br label %489

; <label>:526:                                    ; preds = %514
  %527 = icmp eq i32 %521, %466
  br i1 %527, label %528, label %529

; <label>:528:                                    ; preds = %526
  br label %489

; <label>:529:                                    ; preds = %526
  %530 = mul i32 100000, %463
  %531 = icmp uge i32 %520, %530
  br i1 %531, label %532, label %533

; <label>:532:                                    ; preds = %529
  br label %630

; <label>:533:                                    ; preds = %529
  %534 = zext i32 %520 to i64
  %535 = getelementptr inbounds i32, i32* %451, i64 %534
  %536 = load i32, i32* %535, align 4
  %537 = and i32 %536, 255
  %538 = trunc i32 %537 to i8
  %539 = lshr i32 %536, 8
  %540 = add nsw i32 %521, 1
  %541 = icmp eq i32 %540, %466
  br i1 %541, label %542, label %543

; <label>:542:                                    ; preds = %533
  br label %.backedge109

; <label>:543:                                    ; preds = %533
  %544 = zext i8 %538 to i32
  %545 = icmp ne i32 %544, %.220
  br i1 %545, label %546, label %548

; <label>:546:                                    ; preds = %543
  %547 = zext i8 %538 to i32
  br label %.backedge109

; <label>:548:                                    ; preds = %543
  %549 = mul i32 100000, %463
  %550 = icmp uge i32 %539, %549
  br i1 %550, label %551, label %552

; <label>:551:                                    ; preds = %548
  br label %630

; <label>:552:                                    ; preds = %548
  %553 = zext i32 %539 to i64
  %554 = getelementptr inbounds i32, i32* %451, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = and i32 %555, 255
  %557 = trunc i32 %556 to i8
  %558 = lshr i32 %555, 8
  %559 = add nsw i32 %540, 1
  %560 = icmp eq i32 %559, %466
  br i1 %560, label %561, label %562

; <label>:561:                                    ; preds = %552
  br label %.backedge109

; <label>:562:                                    ; preds = %552
  %563 = zext i8 %557 to i32
  %564 = icmp ne i32 %563, %.220
  br i1 %564, label %565, label %567

; <label>:565:                                    ; preds = %562
  %566 = zext i8 %557 to i32
  br label %.backedge109

; <label>:567:                                    ; preds = %562
  %568 = mul i32 100000, %463
  %569 = icmp uge i32 %558, %568
  br i1 %569, label %570, label %571

; <label>:570:                                    ; preds = %567
  br label %630

; <label>:571:                                    ; preds = %567
  %572 = zext i32 %558 to i64
  %573 = getelementptr inbounds i32, i32* %451, i64 %572
  %574 = load i32, i32* %573, align 4
  %575 = and i32 %574, 255
  %576 = trunc i32 %575 to i8
  %577 = lshr i32 %574, 8
  %578 = add nsw i32 %559, 1
  %579 = zext i8 %576 to i32
  %580 = add nsw i32 %579, 4
  %581 = mul i32 100000, %463
  %582 = icmp uge i32 %577, %581
  br i1 %582, label %583, label %584

; <label>:583:                                    ; preds = %571
  br label %630

; <label>:584:                                    ; preds = %571
  %585 = zext i32 %577 to i64
  %586 = getelementptr inbounds i32, i32* %451, i64 %585
  %587 = load i32, i32* %586, align 4
  %588 = and i32 %587, 255
  %589 = trunc i32 %588 to i8
  %590 = zext i8 %589 to i32
  %591 = lshr i32 %587, 8
  %592 = add nsw i32 %578, 1
  br label %.backedge109

.backedge109:                                     ; preds = %584, %565, %561, %546, %542
  %.027.be = phi i32 [ %539, %542 ], [ %539, %546 ], [ %558, %561 ], [ %558, %565 ], [ %591, %584 ]
  %.018.be = phi i32 [ %.220, %542 ], [ %547, %546 ], [ %.220, %561 ], [ %566, %565 ], [ %590, %584 ]
  %.014.be = phi i32 [ %540, %542 ], [ %540, %546 ], [ %559, %561 ], [ %559, %565 ], [ %592, %584 ]
  %.011.be = phi i32 [ 2, %542 ], [ 2, %546 ], [ 3, %561 ], [ 3, %565 ], [ %580, %584 ]
  br label %467

; <label>:593:                                    ; preds = %508, %491, %471
  %.330 = phi i32 [ %.027.lcssa, %471 ], [ %.128.lcssa, %491 ], [ %.229.lcssa103, %508 ]
  %.426 = phi i8* [ %.123.lcssa, %471 ], [ %.224.lcssa, %491 ], [ %.325.lcssa97, %508 ]
  %.321 = phi i32 [ %.018.lcssa, %471 ], [ %.119.lcssa, %491 ], [ %.220.lcssa91, %508 ]
  %.317 = phi i32 [ %.014.lcssa, %471 ], [ %.115.lcssa, %491 ], [ %.216.lcssa85, %508 ]
  %.213 = phi i32 [ %.112.lcssa, %471 ], [ 1, %491 ], [ 0, %508 ]
  %.310 = phi i8 [ %.07.lcssa, %471 ], [ %.18.lcssa, %491 ], [ %.29.lcssa79, %508 ]
  %.46 = phi i32 [ %.13.lcssa, %471 ], [ %.24.lcssa, %491 ], [ %.35.lcssa73, %508 ]
  %.4 = phi i32 [ %.1.lcssa, %471 ], [ %.2.lcssa, %491 ], [ %.3.lcssa67, %508 ]
  %594 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %595 = load %struct.bz_stream*, %struct.bz_stream** %594, align 8
  %596 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %595, i32 0, i32 6
  %597 = load i32, i32* %596, align 4
  %598 = sub i32 %461, %.4
  %599 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %600 = load %struct.bz_stream*, %struct.bz_stream** %599, align 8
  %601 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %600, i32 0, i32 6
  %602 = load i32, i32* %601, align 4
  %603 = add i32 %602, %598
  store i32 %603, i32* %601, align 4
  %604 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %605 = load %struct.bz_stream*, %struct.bz_stream** %604, align 8
  %606 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %605, i32 0, i32 6
  %607 = load i32, i32* %606, align 4
  %608 = icmp ult i32 %607, %597
  br i1 %608, label %609, label %615

; <label>:609:                                    ; preds = %593
  %610 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %611 = load %struct.bz_stream*, %struct.bz_stream** %610, align 8
  %612 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %611, i32 0, i32 7
  %613 = load i32, i32* %612, align 8
  %614 = add i32 %613, 1
  store i32 %614, i32* %612, align 8
  br label %615

; <label>:615:                                    ; preds = %609, %593
  %616 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  store i32 %.46, i32* %616, align 8
  %617 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  store i8 %.310, i8* %617, align 4
  %618 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 %.213, i32* %618, align 8
  %619 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  store i32 %.317, i32* %619, align 4
  %620 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %.321, i32* %620, align 8
  %621 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  store i32* %451, i32** %621, align 8
  %622 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %.330, i32* %622, align 4
  %623 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %624 = load %struct.bz_stream*, %struct.bz_stream** %623, align 8
  %625 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %624, i32 0, i32 4
  store i8* %.426, i8** %625, align 8
  %626 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %627 = load %struct.bz_stream*, %struct.bz_stream** %626, align 8
  %628 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %627, i32 0, i32 5
  store i32 %.4, i32* %628, align 8
  br label %629

; <label>:629:                                    ; preds = %615
  br label %630

; <label>:630:                                    ; preds = %629, %583, %570, %551, %532, %513, %505, %382, %322, %249, %175, %101, %88, %80, %11
  %.0 = phi i8 [ 0, %11 ], [ 0, %80 ], [ 1, %88 ], [ 1, %101 ], [ 1, %175 ], [ 1, %249 ], [ 1, %322 ], [ 1, %382 ], [ 0, %629 ], [ 1, %505 ], [ 1, %513 ], [ 1, %532 ], [ 1, %551 ], [ 1, %570 ], [ 1, %583 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompressEnd(%struct.bz_stream*) #0 {
  %2 = icmp eq %struct.bz_stream* %0, null
  br i1 %2, label %3, label %4

; <label>:3:                                      ; preds = %1
  br label %58

; <label>:4:                                      ; preds = %1
  %5 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.DState*
  %8 = icmp eq %struct.DState* %7, null
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %4
  br label %58

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 0
  %12 = load %struct.bz_stream*, %struct.bz_stream** %11, align 8
  %13 = icmp ne %struct.bz_stream* %12, %0
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %10
  br label %58

; <label>:15:                                     ; preds = %10
  %16 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 20
  %17 = load i32*, i32** %16, align 8
  %18 = icmp ne i32* %17, null
  br i1 %18, label %19, label %27

; <label>:19:                                     ; preds = %15
  %20 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %21 = load void (i8*, i8*)*, void (i8*, i8*)** %20, align 8
  %22 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 20
  %25 = load i32*, i32** %24, align 8
  %26 = bitcast i32* %25 to i8*
  call void %21(i8* %23, i8* %26)
  br label %27

; <label>:27:                                     ; preds = %19, %15
  %28 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 21
  %29 = load i16*, i16** %28, align 8
  %30 = icmp ne i16* %29, null
  br i1 %30, label %31, label %39

; <label>:31:                                     ; preds = %27
  %32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %33 = load void (i8*, i8*)*, void (i8*, i8*)** %32, align 8
  %34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 21
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast i16* %37 to i8*
  call void %33(i8* %35, i8* %38)
  br label %39

; <label>:39:                                     ; preds = %31, %27
  %40 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 22
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %50

; <label>:43:                                     ; preds = %39
  %44 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %45 = load void (i8*, i8*)*, void (i8*, i8*)** %44, align 8
  %46 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %struct.DState, %struct.DState* %7, i32 0, i32 22
  %49 = load i8*, i8** %48, align 8
  call void %45(i8* %47, i8* %49)
  br label %50

; <label>:50:                                     ; preds = %43, %39
  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %52 = load void (i8*, i8*)*, void (i8*, i8*)** %51, align 8
  %53 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %56 = load i8*, i8** %55, align 8
  call void %52(i8* %54, i8* %56)
  %57 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  store i8* null, i8** %57, align 8
  br label %58

; <label>:58:                                     ; preds = %50, %14, %9, %3
  %.0 = phi i32 [ -2, %3 ], [ -2, %9 ], [ -2, %14 ], [ 0, %50 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzWriteOpen(i32*, %struct._IO_FILE*, i32, i32, i32) #2 {
  %6 = icmp ne i32* %0, null
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %5
  store i32 0, i32* %0, align 4
  br label %8

; <label>:8:                                      ; preds = %7, %5
  %9 = icmp ne %struct.bzFile* null, null
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %8
  %11 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 0, i32* %11, align 8
  br label %12

; <label>:12:                                     ; preds = %10, %8
  %13 = icmp eq %struct._IO_FILE* %1, null
  br i1 %13, label %26, label %14

; <label>:14:                                     ; preds = %12
  %15 = icmp slt i32 %2, 1
  br i1 %15, label %26, label %16

; <label>:16:                                     ; preds = %14
  %17 = icmp sgt i32 %2, 9
  br i1 %17, label %26, label %18

; <label>:18:                                     ; preds = %16
  %19 = icmp slt i32 %4, 0
  br i1 %19, label %26, label %20

; <label>:20:                                     ; preds = %18
  %21 = icmp sgt i32 %4, 250
  br i1 %21, label %26, label %22

; <label>:22:                                     ; preds = %20
  %23 = icmp slt i32 %3, 0
  br i1 %23, label %26, label %24

; <label>:24:                                     ; preds = %22
  %25 = icmp sgt i32 %3, 4
  br i1 %25, label %26, label %34

; <label>:26:                                     ; preds = %24, %22, %20, %18, %16, %14, %12
  %27 = icmp ne i32* %0, null
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %26
  store i32 -2, i32* %0, align 4
  br label %29

; <label>:29:                                     ; preds = %28, %26
  %30 = icmp ne %struct.bzFile* null, null
  br i1 %30, label %31, label %33

; <label>:31:                                     ; preds = %29
  %32 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -2, i32* %32, align 8
  br label %33

; <label>:33:                                     ; preds = %31, %29
  br label %95

; <label>:34:                                     ; preds = %24
  %35 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %45

; <label>:37:                                     ; preds = %34
  %38 = icmp ne i32* %0, null
  br i1 %38, label %39, label %40

; <label>:39:                                     ; preds = %37
  store i32 -6, i32* %0, align 4
  br label %40

; <label>:40:                                     ; preds = %39, %37
  %41 = icmp ne %struct.bzFile* null, null
  br i1 %41, label %42, label %44

; <label>:42:                                     ; preds = %40
  %43 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -6, i32* %43, align 8
  br label %44

; <label>:44:                                     ; preds = %42, %40
  br label %95

; <label>:45:                                     ; preds = %34
  %46 = call noalias i8* @malloc(i64 5104) #9, !track !55
  %47 = bitcast i8* %46 to %struct.bzFile*
  %48 = icmp eq %struct.bzFile* %47, null
  br i1 %48, label %49, label %57

; <label>:49:                                     ; preds = %45
  %50 = icmp ne i32* %0, null
  br i1 %50, label %51, label %52

; <label>:51:                                     ; preds = %49
  store i32 -3, i32* %0, align 4
  br label %52

; <label>:52:                                     ; preds = %51, %49
  %53 = icmp ne %struct.bzFile* %47, null
  br i1 %53, label %54, label %56

; <label>:54:                                     ; preds = %52
  %55 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 5
  store i32 -3, i32* %55, align 8
  br label %56

; <label>:56:                                     ; preds = %54, %52
  br label %95

; <label>:57:                                     ; preds = %45
  %58 = icmp ne i32* %0, null
  br i1 %58, label %59, label %60

; <label>:59:                                     ; preds = %57
  store i32 0, i32* %0, align 4
  br label %60

; <label>:60:                                     ; preds = %59, %57
  %61 = icmp ne %struct.bzFile* %47, null
  br i1 %61, label %62, label %64

; <label>:62:                                     ; preds = %60
  %63 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 5
  store i32 0, i32* %63, align 8
  br label %64

; <label>:64:                                     ; preds = %62, %60
  %65 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 6
  store i8 0, i8* %65, align 4
  %66 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 2
  store i32 0, i32* %66, align 8
  %67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 0
  store %struct._IO_FILE* %1, %struct._IO_FILE** %67, align 8
  %68 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 3
  store i8 1, i8* %68, align 4
  %69 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 4
  %70 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %69, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %70, align 8
  %71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 4
  %72 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %71, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %72, align 8
  %73 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 4
  %74 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %73, i32 0, i32 11
  store i8* null, i8** %74, align 8
  %75 = icmp eq i32 %4, 0
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %64
  br label %77

; <label>:77:                                     ; preds = %76, %64
  %.01 = phi i32 [ 30, %76 ], [ %4, %64 ]
  %78 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 4
  %79 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %78, i32 %2, i32 %3, i32 %.01)
  %80 = icmp ne i32 %79, 0
  br i1 %80, label %81, label %90

; <label>:81:                                     ; preds = %77
  %82 = icmp ne i32* %0, null
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %81
  store i32 %79, i32* %0, align 4
  br label %84

; <label>:84:                                     ; preds = %83, %81
  %85 = icmp ne %struct.bzFile* %47, null
  br i1 %85, label %86, label %88

; <label>:86:                                     ; preds = %84
  %87 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 5
  store i32 %79, i32* %87, align 8
  br label %88

; <label>:88:                                     ; preds = %86, %84
  %89 = bitcast %struct.bzFile* %47 to i8*
  call void @free(i8* %89) #9
  br label %95

; <label>:90:                                     ; preds = %77
  %91 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 4
  %92 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %91, i32 0, i32 1
  store i32 0, i32* %92, align 8
  %93 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %47, i32 0, i32 6
  store i8 1, i8* %93, align 4
  %94 = bitcast %struct.bzFile* %47 to i8*
  br label %95

; <label>:95:                                     ; preds = %90, %88, %56, %44, %33
  %.0 = phi i8* [ null, %33 ], [ null, %44 ], [ null, %56 ], [ null, %88 ], [ %94, %90 ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWrite(i32*, i8*, i8*, i32) #0 {
  %5 = bitcast i8* %1 to %struct.bzFile*
  %6 = icmp ne i32* %0, null
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %4
  store i32 0, i32* %0, align 4
  br label %8

; <label>:8:                                      ; preds = %7, %4
  %9 = icmp ne %struct.bzFile* %5, null
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %8
  %11 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %11, align 8
  br label %12

; <label>:12:                                     ; preds = %10, %8
  %13 = icmp eq %struct.bzFile* %5, null
  br i1 %13, label %18, label %14

; <label>:14:                                     ; preds = %12
  %15 = icmp eq i8* %2, null
  br i1 %15, label %18, label %16

; <label>:16:                                     ; preds = %14
  %17 = icmp slt i32 %3, 0
  br i1 %17, label %18, label %26

; <label>:18:                                     ; preds = %16, %14, %12
  %19 = icmp ne i32* %0, null
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %18
  store i32 -2, i32* %0, align 4
  br label %21

; <label>:21:                                     ; preds = %20, %18
  %22 = icmp ne %struct.bzFile* %5, null
  br i1 %22, label %23, label %25

; <label>:23:                                     ; preds = %21
  %24 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -2, i32* %24, align 8
  br label %25

; <label>:25:                                     ; preds = %23, %21
  br label %131

; <label>:26:                                     ; preds = %16
  %27 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 3
  %28 = load i8, i8* %27, align 4
  %29 = icmp ne i8 %28, 0
  br i1 %29, label %38, label %30

; <label>:30:                                     ; preds = %26
  %31 = icmp ne i32* %0, null
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %30
  store i32 -1, i32* %0, align 4
  br label %33

; <label>:33:                                     ; preds = %32, %30
  %34 = icmp ne %struct.bzFile* %5, null
  br i1 %34, label %35, label %37

; <label>:35:                                     ; preds = %33
  %36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -1, i32* %36, align 8
  br label %37

; <label>:37:                                     ; preds = %35, %33
  br label %131

; <label>:38:                                     ; preds = %26
  %39 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %39, align 8
  %41 = call i32 @ferror(%struct._IO_FILE* %40) #9
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %51

; <label>:43:                                     ; preds = %38
  %44 = icmp ne i32* %0, null
  br i1 %44, label %45, label %46

; <label>:45:                                     ; preds = %43
  store i32 -6, i32* %0, align 4
  br label %46

; <label>:46:                                     ; preds = %45, %43
  %47 = icmp ne %struct.bzFile* %5, null
  br i1 %47, label %48, label %50

; <label>:48:                                     ; preds = %46
  %49 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -6, i32* %49, align 8
  br label %50

; <label>:50:                                     ; preds = %48, %46
  br label %131

; <label>:51:                                     ; preds = %38
  %52 = icmp eq i32 %3, 0
  br i1 %52, label %53, label %61

; <label>:53:                                     ; preds = %51
  %54 = icmp ne i32* %0, null
  br i1 %54, label %55, label %56

; <label>:55:                                     ; preds = %53
  store i32 0, i32* %0, align 4
  br label %56

; <label>:56:                                     ; preds = %55, %53
  %57 = icmp ne %struct.bzFile* %5, null
  br i1 %57, label %58, label %60

; <label>:58:                                     ; preds = %56
  %59 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %59, align 8
  br label %60

; <label>:60:                                     ; preds = %58, %56
  br label %131

; <label>:61:                                     ; preds = %51
  %62 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %63 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %62, i32 0, i32 1
  store i32 %3, i32* %63, align 8
  %64 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 0
  store i8* %2, i8** %65, align 8
  %66 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %67 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %66, i32 0, i32 5
  store i32 5000, i32* %67, align 8
  %68 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 1
  %69 = getelementptr inbounds [5000 x i8], [5000 x i8]* %68, i32 0, i32 0
  %70 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %71 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %70, i32 0, i32 4
  store i8* %69, i8** %71, align 8
  %72 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %73 = call i32 @BZ2_bzCompress(%struct.bz_stream* %72, i32 0)
  %74 = icmp ne i32 %73, 1
  br i1 %74, label %78, label %.lr.ph

.lr.ph:                                           ; preds = %61
  br label %86

; <label>:75:                                     ; preds = %118
  store i32 5000, i32* %67, align 8
  store i8* %69, i8** %71, align 8
  %76 = call i32 @BZ2_bzCompress(%struct.bz_stream* %72, i32 0)
  %77 = icmp ne i32 %76, 1
  br i1 %77, label %._crit_edge, label %86

._crit_edge:                                      ; preds = %75
  %split = phi i32 [ %76, %75 ]
  br label %78

; <label>:78:                                     ; preds = %._crit_edge, %61
  %.lcssa = phi i32 [ %split, %._crit_edge ], [ %73, %61 ]
  %79 = icmp ne i32* %0, null
  br i1 %79, label %80, label %81

; <label>:80:                                     ; preds = %78
  store i32 %.lcssa, i32* %0, align 4
  br label %81

; <label>:81:                                     ; preds = %80, %78
  %82 = icmp ne %struct.bzFile* %5, null
  br i1 %82, label %83, label %85

; <label>:83:                                     ; preds = %81
  %84 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 %.lcssa, i32* %84, align 8
  br label %85

; <label>:85:                                     ; preds = %83, %81
  br label %131

; <label>:86:                                     ; preds = %.lr.ph, %75
  call void @unroll_loop(i32 41)
  %87 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %88 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %87, i32 0, i32 5
  %89 = load i32, i32* %88, align 8
  %90 = icmp ult i32 %89, 5000
  br i1 %90, label %91, label %118

; <label>:91:                                     ; preds = %86
  %92 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %93 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %92, i32 0, i32 5
  %94 = load i32, i32* %93, align 8
  %95 = sub i32 5000, %94
  %96 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 1
  %97 = getelementptr inbounds [5000 x i8], [5000 x i8]* %96, i32 0, i32 0
  %98 = sext i32 %95 to i64
  %99 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** %99, align 8
  %101 = call i64 @fwrite(i8* %97, i64 1, i64 %98, %struct._IO_FILE* %100)
  %102 = trunc i64 %101 to i32
  %103 = icmp ne i32 %95, %102
  br i1 %103, label %109, label %104

; <label>:104:                                    ; preds = %91
  %105 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %106 = load %struct._IO_FILE*, %struct._IO_FILE** %105, align 8
  %107 = call i32 @ferror(%struct._IO_FILE* %106) #9
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %117

; <label>:109:                                    ; preds = %104, %91
  %110 = icmp ne i32* %0, null
  br i1 %110, label %111, label %112

; <label>:111:                                    ; preds = %109
  store i32 -6, i32* %0, align 4
  br label %112

; <label>:112:                                    ; preds = %111, %109
  %113 = icmp ne %struct.bzFile* %5, null
  br i1 %113, label %114, label %116

; <label>:114:                                    ; preds = %112
  %115 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -6, i32* %115, align 8
  br label %116

; <label>:116:                                    ; preds = %114, %112
  br label %131

; <label>:117:                                    ; preds = %104
  br label %118

; <label>:118:                                    ; preds = %117, %86
  %119 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %120 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %75

; <label>:123:                                    ; preds = %118
  %124 = icmp ne i32* %0, null
  br i1 %124, label %125, label %126

; <label>:125:                                    ; preds = %123
  store i32 0, i32* %0, align 4
  br label %126

; <label>:126:                                    ; preds = %125, %123
  %127 = icmp ne %struct.bzFile* %5, null
  br i1 %127, label %128, label %130

; <label>:128:                                    ; preds = %126
  %129 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %129, align 8
  br label %130

; <label>:130:                                    ; preds = %128, %126
  br label %131

; <label>:131:                                    ; preds = %130, %116, %85, %60, %50, %37, %25
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWriteClose(i32*, i8*, i32, i32*, i32*) #0 {
  call void @BZ2_bzWriteClose64(i32* %0, i8* %1, i32 %2, i32* %3, i32* null, i32* %4, i32* null)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWriteClose64(i32*, i8*, i32, i32*, i32*, i32*, i32*) #0 {
  %8 = bitcast i8* %1 to %struct.bzFile*
  %9 = icmp eq %struct.bzFile* %8, null
  br i1 %9, label %10, label %18

; <label>:10:                                     ; preds = %7
  %11 = icmp ne i32* %0, null
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %10
  store i32 0, i32* %0, align 4
  br label %13

; <label>:13:                                     ; preds = %12, %10
  %14 = icmp ne %struct.bzFile* %8, null
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %13
  %16 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 0, i32* %16, align 8
  br label %17

; <label>:17:                                     ; preds = %15, %13
  br label %177

; <label>:18:                                     ; preds = %7
  %19 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 3
  %20 = load i8, i8* %19, align 4
  %21 = icmp ne i8 %20, 0
  br i1 %21, label %30, label %22

; <label>:22:                                     ; preds = %18
  %23 = icmp ne i32* %0, null
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %22
  store i32 -1, i32* %0, align 4
  br label %25

; <label>:25:                                     ; preds = %24, %22
  %26 = icmp ne %struct.bzFile* %8, null
  br i1 %26, label %27, label %29

; <label>:27:                                     ; preds = %25
  %28 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 -1, i32* %28, align 8
  br label %29

; <label>:29:                                     ; preds = %27, %25
  br label %177

; <label>:30:                                     ; preds = %18
  %31 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %31, align 8
  %33 = call i32 @ferror(%struct._IO_FILE* %32) #9
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %43

; <label>:35:                                     ; preds = %30
  %36 = icmp ne i32* %0, null
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %35
  store i32 -6, i32* %0, align 4
  br label %38

; <label>:38:                                     ; preds = %37, %35
  %39 = icmp ne %struct.bzFile* %8, null
  br i1 %39, label %40, label %42

; <label>:40:                                     ; preds = %38
  %41 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 -6, i32* %41, align 8
  br label %42

; <label>:42:                                     ; preds = %40, %38
  br label %177

; <label>:43:                                     ; preds = %30
  %44 = icmp ne i32* %3, null
  br i1 %44, label %45, label %46

; <label>:45:                                     ; preds = %43
  store i32 0, i32* %3, align 4
  br label %46

; <label>:46:                                     ; preds = %45, %43
  %47 = icmp ne i32* %4, null
  br i1 %47, label %48, label %49

; <label>:48:                                     ; preds = %46
  store i32 0, i32* %4, align 4
  br label %49

; <label>:49:                                     ; preds = %48, %46
  %50 = icmp ne i32* %5, null
  br i1 %50, label %51, label %52

; <label>:51:                                     ; preds = %49
  store i32 0, i32* %5, align 4
  br label %52

; <label>:52:                                     ; preds = %51, %49
  %53 = icmp ne i32* %6, null
  br i1 %53, label %54, label %55

; <label>:54:                                     ; preds = %52
  store i32 0, i32* %6, align 4
  br label %55

; <label>:55:                                     ; preds = %54, %52
  %56 = icmp ne i32 %2, 0
  br i1 %56, label %118, label %57

; <label>:57:                                     ; preds = %55
  %58 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %118

; <label>:61:                                     ; preds = %57
  br label %62

; <label>:62:                                     ; preds = %114, %61
  call void @unroll_loop(i32 42)
  %63 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %64 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %63, i32 0, i32 5
  store i32 5000, i32* %64, align 8
  %65 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 1
  %66 = getelementptr inbounds [5000 x i8], [5000 x i8]* %65, i32 0, i32 0
  %67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %67, i32 0, i32 4
  store i8* %66, i8** %68, align 8
  %69 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %70 = call i32 @BZ2_bzCompress(%struct.bz_stream* %69, i32 2)
  %71 = icmp ne i32 %70, 3
  br i1 %71, label %72, label %82

; <label>:72:                                     ; preds = %62
  %73 = icmp ne i32 %70, 4
  br i1 %73, label %74, label %82

; <label>:74:                                     ; preds = %72
  %.lcssa = phi i32 [ %70, %72 ]
  %75 = icmp ne i32* %0, null
  br i1 %75, label %76, label %77

; <label>:76:                                     ; preds = %74
  store i32 %.lcssa, i32* %0, align 4
  br label %77

; <label>:77:                                     ; preds = %76, %74
  %78 = icmp ne %struct.bzFile* %8, null
  br i1 %78, label %79, label %81

; <label>:79:                                     ; preds = %77
  %80 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 %.lcssa, i32* %80, align 8
  br label %81

; <label>:81:                                     ; preds = %79, %77
  br label %177

; <label>:82:                                     ; preds = %72, %62
  %83 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %84 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %83, i32 0, i32 5
  %85 = load i32, i32* %84, align 8
  %86 = icmp ult i32 %85, 5000
  br i1 %86, label %87, label %114

; <label>:87:                                     ; preds = %82
  %88 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %89 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %88, i32 0, i32 5
  %90 = load i32, i32* %89, align 8
  %91 = sub i32 5000, %90
  %92 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 1
  %93 = getelementptr inbounds [5000 x i8], [5000 x i8]* %92, i32 0, i32 0
  %94 = sext i32 %91 to i64
  %95 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** %95, align 8
  %97 = call i64 @fwrite(i8* %93, i64 1, i64 %94, %struct._IO_FILE* %96)
  %98 = trunc i64 %97 to i32
  %99 = icmp ne i32 %91, %98
  br i1 %99, label %105, label %100

; <label>:100:                                    ; preds = %87
  %101 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** %101, align 8
  %103 = call i32 @ferror(%struct._IO_FILE* %102) #9
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %113

; <label>:105:                                    ; preds = %100, %87
  %106 = icmp ne i32* %0, null
  br i1 %106, label %107, label %108

; <label>:107:                                    ; preds = %105
  store i32 -6, i32* %0, align 4
  br label %108

; <label>:108:                                    ; preds = %107, %105
  %109 = icmp ne %struct.bzFile* %8, null
  br i1 %109, label %110, label %112

; <label>:110:                                    ; preds = %108
  %111 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 -6, i32* %111, align 8
  br label %112

; <label>:112:                                    ; preds = %110, %108
  br label %177

; <label>:113:                                    ; preds = %100
  br label %114

; <label>:114:                                    ; preds = %113, %82
  %115 = icmp eq i32 %70, 4
  br i1 %115, label %116, label %62

; <label>:116:                                    ; preds = %114
  br label %117

; <label>:117:                                    ; preds = %116
  br label %118

; <label>:118:                                    ; preds = %117, %57, %55
  %119 = icmp ne i32 %2, 0
  br i1 %119, label %142, label %120

; <label>:120:                                    ; preds = %118
  %121 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** %121, align 8
  %123 = call i32 @ferror(%struct._IO_FILE* %122) #9
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %142, label %125

; <label>:125:                                    ; preds = %120
  %126 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %127 = load %struct._IO_FILE*, %struct._IO_FILE** %126, align 8
  %128 = call i32 @fflush(%struct._IO_FILE* %127)
  %129 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** %129, align 8
  %131 = call i32 @ferror(%struct._IO_FILE* %130) #9
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %141

; <label>:133:                                    ; preds = %125
  %134 = icmp ne i32* %0, null
  br i1 %134, label %135, label %136

; <label>:135:                                    ; preds = %133
  store i32 -6, i32* %0, align 4
  br label %136

; <label>:136:                                    ; preds = %135, %133
  %137 = icmp ne %struct.bzFile* %8, null
  br i1 %137, label %138, label %140

; <label>:138:                                    ; preds = %136
  %139 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 -6, i32* %139, align 8
  br label %140

; <label>:140:                                    ; preds = %138, %136
  br label %177

; <label>:141:                                    ; preds = %125
  br label %142

; <label>:142:                                    ; preds = %141, %120, %118
  %143 = icmp ne i32* %3, null
  br i1 %143, label %144, label %148

; <label>:144:                                    ; preds = %142
  %145 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %146 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %145, i32 0, i32 2
  %147 = load i32, i32* %146, align 4
  store i32 %147, i32* %3, align 4
  br label %148

; <label>:148:                                    ; preds = %144, %142
  %149 = icmp ne i32* %4, null
  br i1 %149, label %150, label %154

; <label>:150:                                    ; preds = %148
  %151 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %152 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %151, i32 0, i32 3
  %153 = load i32, i32* %152, align 8
  store i32 %153, i32* %4, align 4
  br label %154

; <label>:154:                                    ; preds = %150, %148
  %155 = icmp ne i32* %5, null
  br i1 %155, label %156, label %160

; <label>:156:                                    ; preds = %154
  %157 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %158 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %157, i32 0, i32 6
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %5, align 4
  br label %160

; <label>:160:                                    ; preds = %156, %154
  %161 = icmp ne i32* %6, null
  br i1 %161, label %162, label %166

; <label>:162:                                    ; preds = %160
  %163 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %164 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %163, i32 0, i32 7
  %165 = load i32, i32* %164, align 8
  store i32 %165, i32* %6, align 4
  br label %166

; <label>:166:                                    ; preds = %162, %160
  %167 = icmp ne i32* %0, null
  br i1 %167, label %168, label %169

; <label>:168:                                    ; preds = %166
  store i32 0, i32* %0, align 4
  br label %169

; <label>:169:                                    ; preds = %168, %166
  %170 = icmp ne %struct.bzFile* %8, null
  br i1 %170, label %171, label %173

; <label>:171:                                    ; preds = %169
  %172 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 0, i32* %172, align 8
  br label %173

; <label>:173:                                    ; preds = %171, %169
  %174 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %175 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %174)
  %176 = bitcast %struct.bzFile* %8 to i8*
  call void @free(i8* %176) #9
  br label %177

; <label>:177:                                    ; preds = %173, %140, %112, %81, %42, %29, %17
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzReadOpen(i32*, %struct._IO_FILE*, i32, i32, i8*, i32) #2 {
  %7 = icmp ne i32* %0, null
  br i1 %7, label %8, label %9

; <label>:8:                                      ; preds = %6
  store i32 0, i32* %0, align 4
  br label %9

; <label>:9:                                      ; preds = %8, %6
  %10 = icmp ne %struct.bzFile* null, null
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %9
  %12 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 0, i32* %12, align 8
  br label %13

; <label>:13:                                     ; preds = %11, %9
  %14 = icmp eq %struct._IO_FILE* %1, null
  br i1 %14, label %33, label %15

; <label>:15:                                     ; preds = %13
  %16 = icmp ne i32 %3, 0
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %15
  %18 = icmp ne i32 %3, 1
  br i1 %18, label %33, label %19

; <label>:19:                                     ; preds = %17, %15
  %20 = icmp slt i32 %2, 0
  br i1 %20, label %33, label %21

; <label>:21:                                     ; preds = %19
  %22 = icmp sgt i32 %2, 4
  br i1 %22, label %33, label %23

; <label>:23:                                     ; preds = %21
  %24 = icmp eq i8* %4, null
  br i1 %24, label %25, label %27

; <label>:25:                                     ; preds = %23
  %26 = icmp ne i32 %5, 0
  br i1 %26, label %33, label %27

; <label>:27:                                     ; preds = %25, %23
  %28 = icmp ne i8* %4, null
  br i1 %28, label %29, label %41

; <label>:29:                                     ; preds = %27
  %30 = icmp slt i32 %5, 0
  br i1 %30, label %33, label %31

; <label>:31:                                     ; preds = %29
  %32 = icmp sgt i32 %5, 5000
  br i1 %32, label %33, label %41

; <label>:33:                                     ; preds = %31, %29, %25, %21, %19, %17, %13
  %34 = icmp ne i32* %0, null
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %33
  store i32 -2, i32* %0, align 4
  br label %36

; <label>:36:                                     ; preds = %35, %33
  %37 = icmp ne %struct.bzFile* null, null
  br i1 %37, label %38, label %40

; <label>:38:                                     ; preds = %36
  %39 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -2, i32* %39, align 8
  br label %40

; <label>:40:                                     ; preds = %38, %36
  br label %120

; <label>:41:                                     ; preds = %31, %27
  %42 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %52

; <label>:44:                                     ; preds = %41
  %45 = icmp ne i32* %0, null
  br i1 %45, label %46, label %47

; <label>:46:                                     ; preds = %44
  store i32 -6, i32* %0, align 4
  br label %47

; <label>:47:                                     ; preds = %46, %44
  %48 = icmp ne %struct.bzFile* null, null
  br i1 %48, label %49, label %51

; <label>:49:                                     ; preds = %47
  %50 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -6, i32* %50, align 8
  br label %51

; <label>:51:                                     ; preds = %49, %47
  br label %120

; <label>:52:                                     ; preds = %41
  %53 = call noalias i8* @malloc(i64 5104) #9, !track !56
  %54 = bitcast i8* %53 to %struct.bzFile*
  %55 = icmp eq %struct.bzFile* %54, null
  br i1 %55, label %56, label %64

; <label>:56:                                     ; preds = %52
  %57 = icmp ne i32* %0, null
  br i1 %57, label %58, label %59

; <label>:58:                                     ; preds = %56
  store i32 -3, i32* %0, align 4
  br label %59

; <label>:59:                                     ; preds = %58, %56
  %60 = icmp ne %struct.bzFile* %54, null
  br i1 %60, label %61, label %63

; <label>:61:                                     ; preds = %59
  %62 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 5
  store i32 -3, i32* %62, align 8
  br label %63

; <label>:63:                                     ; preds = %61, %59
  br label %120

; <label>:64:                                     ; preds = %52
  %65 = icmp ne i32* %0, null
  br i1 %65, label %66, label %67

; <label>:66:                                     ; preds = %64
  store i32 0, i32* %0, align 4
  br label %67

; <label>:67:                                     ; preds = %66, %64
  %68 = icmp ne %struct.bzFile* %54, null
  br i1 %68, label %69, label %71

; <label>:69:                                     ; preds = %67
  %70 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 5
  store i32 0, i32* %70, align 8
  br label %71

; <label>:71:                                     ; preds = %69, %67
  %72 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 6
  store i8 0, i8* %72, align 4
  %73 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 0
  store %struct._IO_FILE* %1, %struct._IO_FILE** %73, align 8
  %74 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 2
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 3
  store i8 0, i8* %75, align 4
  %76 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 4
  %77 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %76, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %77, align 8
  %78 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 4
  %79 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %78, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %79, align 8
  %80 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 4
  %81 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %80, i32 0, i32 11
  store i8* null, i8** %81, align 8
  %82 = icmp sgt i32 %5, 0
  br i1 %82, label %.lr.ph, label %96

.lr.ph:                                           ; preds = %71
  br label %83

; <label>:83:                                     ; preds = %.lr.ph, %83
  %.014 = phi i32 [ %5, %.lr.ph ], [ %94, %83 ]
  %.023 = phi i8* [ %4, %.lr.ph ], [ %93, %83 ]
  call void @unroll_loop(i32 43)
  %84 = load i8, i8* %.023, align 1
  %85 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 1
  %86 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds [5000 x i8], [5000 x i8]* %85, i64 0, i64 %88
  store i8 %84, i8* %89, align 1
  %90 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %90, align 8
  %93 = getelementptr inbounds i8, i8* %.023, i64 1
  %94 = add nsw i32 %.014, -1
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %83, label %._crit_edge

._crit_edge:                                      ; preds = %83
  br label %96

; <label>:96:                                     ; preds = %._crit_edge, %71
  %97 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 4
  %98 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %97, i32 %2, i32 %3)
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %109

; <label>:100:                                    ; preds = %96
  %101 = icmp ne i32* %0, null
  br i1 %101, label %102, label %103

; <label>:102:                                    ; preds = %100
  store i32 %98, i32* %0, align 4
  br label %103

; <label>:103:                                    ; preds = %102, %100
  %104 = icmp ne %struct.bzFile* %54, null
  br i1 %104, label %105, label %107

; <label>:105:                                    ; preds = %103
  %106 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 5
  store i32 %98, i32* %106, align 8
  br label %107

; <label>:107:                                    ; preds = %105, %103
  %108 = bitcast %struct.bzFile* %54 to i8*
  call void @free(i8* %108) #9
  br label %120

; <label>:109:                                    ; preds = %96
  %110 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 4
  %113 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %112, i32 0, i32 1
  store i32 %111, i32* %113, align 8
  %114 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 1
  %115 = getelementptr inbounds [5000 x i8], [5000 x i8]* %114, i32 0, i32 0
  %116 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 4
  %117 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %116, i32 0, i32 0
  store i8* %115, i8** %117, align 8
  %118 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %54, i32 0, i32 6
  store i8 1, i8* %118, align 4
  %119 = bitcast %struct.bzFile* %54 to i8*
  br label %120

; <label>:120:                                    ; preds = %109, %107, %63, %51, %40
  %.0 = phi i8* [ null, %40 ], [ null, %51 ], [ null, %63 ], [ null, %107 ], [ %119, %109 ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzReadClose(i32*, i8*) #0 {
  %3 = bitcast i8* %1 to %struct.bzFile*
  %4 = icmp ne i32* %0, null
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %2
  store i32 0, i32* %0, align 4
  br label %6

; <label>:6:                                      ; preds = %5, %2
  %7 = icmp ne %struct.bzFile* %3, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %6
  %9 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  store i32 0, i32* %9, align 8
  br label %10

; <label>:10:                                     ; preds = %8, %6
  %11 = icmp eq %struct.bzFile* %3, null
  br i1 %11, label %12, label %20

; <label>:12:                                     ; preds = %10
  %13 = icmp ne i32* %0, null
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %12
  store i32 0, i32* %0, align 4
  br label %15

; <label>:15:                                     ; preds = %14, %12
  %16 = icmp ne %struct.bzFile* %3, null
  br i1 %16, label %17, label %19

; <label>:17:                                     ; preds = %15
  %18 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  store i32 0, i32* %18, align 8
  br label %19

; <label>:19:                                     ; preds = %17, %15
  br label %41

; <label>:20:                                     ; preds = %10
  %21 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 3
  %22 = load i8, i8* %21, align 4
  %23 = icmp ne i8 %22, 0
  br i1 %23, label %24, label %32

; <label>:24:                                     ; preds = %20
  %25 = icmp ne i32* %0, null
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %24
  store i32 -1, i32* %0, align 4
  br label %27

; <label>:27:                                     ; preds = %26, %24
  %28 = icmp ne %struct.bzFile* %3, null
  br i1 %28, label %29, label %31

; <label>:29:                                     ; preds = %27
  %30 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  store i32 -1, i32* %30, align 8
  br label %31

; <label>:31:                                     ; preds = %29, %27
  br label %41

; <label>:32:                                     ; preds = %20
  %33 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 6
  %34 = load i8, i8* %33, align 4
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %36, label %39

; <label>:36:                                     ; preds = %32
  %37 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 4
  %38 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %37)
  br label %39

; <label>:39:                                     ; preds = %36, %32
  %40 = bitcast %struct.bzFile* %3 to i8*
  call void @free(i8* %40) #9
  br label %41

; <label>:41:                                     ; preds = %39, %31, %19
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzRead(i32*, i8*, i8*, i32) #0 {
  %5 = bitcast i8* %1 to %struct.bzFile*
  %6 = icmp ne i32* %0, null
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %4
  store i32 0, i32* %0, align 4
  br label %8

; <label>:8:                                      ; preds = %7, %4
  %9 = icmp ne %struct.bzFile* %5, null
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %8
  %11 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %11, align 8
  br label %12

; <label>:12:                                     ; preds = %10, %8
  %13 = icmp eq %struct.bzFile* %5, null
  br i1 %13, label %18, label %14

; <label>:14:                                     ; preds = %12
  %15 = icmp eq i8* %2, null
  br i1 %15, label %18, label %16

; <label>:16:                                     ; preds = %14
  %17 = icmp slt i32 %3, 0
  br i1 %17, label %18, label %26

; <label>:18:                                     ; preds = %16, %14, %12
  %19 = icmp ne i32* %0, null
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %18
  store i32 -2, i32* %0, align 4
  br label %21

; <label>:21:                                     ; preds = %20, %18
  %22 = icmp ne %struct.bzFile* %5, null
  br i1 %22, label %23, label %25

; <label>:23:                                     ; preds = %21
  %24 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -2, i32* %24, align 8
  br label %25

; <label>:25:                                     ; preds = %23, %21
  br label %175

; <label>:26:                                     ; preds = %16
  %27 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 3
  %28 = load i8, i8* %27, align 4
  %29 = icmp ne i8 %28, 0
  br i1 %29, label %30, label %38

; <label>:30:                                     ; preds = %26
  %31 = icmp ne i32* %0, null
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %30
  store i32 -1, i32* %0, align 4
  br label %33

; <label>:33:                                     ; preds = %32, %30
  %34 = icmp ne %struct.bzFile* %5, null
  br i1 %34, label %35, label %37

; <label>:35:                                     ; preds = %33
  %36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -1, i32* %36, align 8
  br label %37

; <label>:37:                                     ; preds = %35, %33
  br label %175

; <label>:38:                                     ; preds = %26
  %39 = icmp eq i32 %3, 0
  br i1 %39, label %40, label %48

; <label>:40:                                     ; preds = %38
  %41 = icmp ne i32* %0, null
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %40
  store i32 0, i32* %0, align 4
  br label %43

; <label>:43:                                     ; preds = %42, %40
  %44 = icmp ne %struct.bzFile* %5, null
  br i1 %44, label %45, label %47

; <label>:45:                                     ; preds = %43
  %46 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %46, align 8
  br label %47

; <label>:47:                                     ; preds = %45, %43
  br label %175

; <label>:48:                                     ; preds = %38
  %49 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %50 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %49, i32 0, i32 5
  store i32 %3, i32* %50, align 8
  %51 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %51, i32 0, i32 4
  store i8* %2, i8** %52, align 8
  %53 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** %53, align 8
  %55 = call i32 @ferror(%struct._IO_FILE* %54) #9
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %61, label %.lr.ph

.lr.ph:                                           ; preds = %48
  br label %69

; <label>:57:                                     ; preds = %162
  %58 = load %struct._IO_FILE*, %struct._IO_FILE** %53, align 8
  %59 = call i32 @ferror(%struct._IO_FILE* %58) #9
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %._crit_edge, label %69

._crit_edge:                                      ; preds = %57
  br label %61

; <label>:61:                                     ; preds = %._crit_edge, %48
  %62 = icmp ne i32* %0, null
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %61
  store i32 -6, i32* %0, align 4
  br label %64

; <label>:64:                                     ; preds = %63, %61
  %65 = icmp ne %struct.bzFile* %5, null
  br i1 %65, label %66, label %68

; <label>:66:                                     ; preds = %64
  %67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -6, i32* %67, align 8
  br label %68

; <label>:68:                                     ; preds = %66, %64
  br label %175

; <label>:69:                                     ; preds = %.lr.ph, %57
  call void @unroll_loop(i32 44)
  %70 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %71 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %108

; <label>:74:                                     ; preds = %69
  %75 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %75, align 8
  %77 = call zeroext i8 @myfeof.123(%struct._IO_FILE* %76)
  %78 = icmp ne i8 %77, 0
  br i1 %78, label %108, label %79

; <label>:79:                                     ; preds = %74
  %80 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 1
  %81 = getelementptr inbounds [5000 x i8], [5000 x i8]* %80, i32 0, i32 0
  %82 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** %82, align 8
  %84 = call i64 @fread(i8* %81, i64 1, i64 5000, %struct._IO_FILE* %83)
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %86, align 8
  %88 = call i32 @ferror(%struct._IO_FILE* %87) #9
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %90, label %98

; <label>:90:                                     ; preds = %79
  %91 = icmp ne i32* %0, null
  br i1 %91, label %92, label %93

; <label>:92:                                     ; preds = %90
  store i32 -6, i32* %0, align 4
  br label %93

; <label>:93:                                     ; preds = %92, %90
  %94 = icmp ne %struct.bzFile* %5, null
  br i1 %94, label %95, label %97

; <label>:95:                                     ; preds = %93
  %96 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -6, i32* %96, align 8
  br label %97

; <label>:97:                                     ; preds = %95, %93
  br label %175

; <label>:98:                                     ; preds = %79
  %99 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 2
  store i32 %85, i32* %99, align 8
  %100 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 2
  %101 = load i32, i32* %100, align 8
  %102 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %103 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %102, i32 0, i32 1
  store i32 %101, i32* %103, align 8
  %104 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 1
  %105 = getelementptr inbounds [5000 x i8], [5000 x i8]* %104, i32 0, i32 0
  %106 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %107 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %106, i32 0, i32 0
  store i8* %105, i8** %107, align 8
  br label %108

; <label>:108:                                    ; preds = %98, %74, %69
  %109 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %110 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %109)
  %111 = icmp ne i32 %110, 0
  br i1 %111, label %112, label %122

; <label>:112:                                    ; preds = %108
  %113 = icmp ne i32 %110, 4
  br i1 %113, label %114, label %122

; <label>:114:                                    ; preds = %112
  %.lcssa = phi i32 [ %110, %112 ]
  %115 = icmp ne i32* %0, null
  br i1 %115, label %116, label %117

; <label>:116:                                    ; preds = %114
  store i32 %.lcssa, i32* %0, align 4
  br label %117

; <label>:117:                                    ; preds = %116, %114
  %118 = icmp ne %struct.bzFile* %5, null
  br i1 %118, label %119, label %121

; <label>:119:                                    ; preds = %117
  %120 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 %.lcssa, i32* %120, align 8
  br label %121

; <label>:121:                                    ; preds = %119, %117
  br label %175

; <label>:122:                                    ; preds = %112, %108
  %123 = icmp eq i32 %110, 0
  br i1 %123, label %124, label %148

; <label>:124:                                    ; preds = %122
  %125 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %126 = load %struct._IO_FILE*, %struct._IO_FILE** %125, align 8
  %127 = call zeroext i8 @myfeof.123(%struct._IO_FILE* %126)
  %128 = zext i8 %127 to i32
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %130, label %148

; <label>:130:                                    ; preds = %124
  %131 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %132 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %148

; <label>:135:                                    ; preds = %130
  %136 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %137 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %136, i32 0, i32 5
  %138 = load i32, i32* %137, align 8
  %139 = icmp ugt i32 %138, 0
  br i1 %139, label %140, label %148

; <label>:140:                                    ; preds = %135
  %141 = icmp ne i32* %0, null
  br i1 %141, label %142, label %143

; <label>:142:                                    ; preds = %140
  store i32 -7, i32* %0, align 4
  br label %143

; <label>:143:                                    ; preds = %142, %140
  %144 = icmp ne %struct.bzFile* %5, null
  br i1 %144, label %145, label %147

; <label>:145:                                    ; preds = %143
  %146 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -7, i32* %146, align 8
  br label %147

; <label>:147:                                    ; preds = %145, %143
  br label %175

; <label>:148:                                    ; preds = %135, %130, %124, %122
  %149 = icmp eq i32 %110, 4
  br i1 %149, label %150, label %162

; <label>:150:                                    ; preds = %148
  %151 = icmp ne i32* %0, null
  br i1 %151, label %152, label %153

; <label>:152:                                    ; preds = %150
  store i32 4, i32* %0, align 4
  br label %153

; <label>:153:                                    ; preds = %152, %150
  %154 = icmp ne %struct.bzFile* %5, null
  br i1 %154, label %155, label %157

; <label>:155:                                    ; preds = %153
  %156 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 4, i32* %156, align 8
  br label %157

; <label>:157:                                    ; preds = %155, %153
  %158 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %159 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %158, i32 0, i32 5
  %160 = load i32, i32* %159, align 8
  %161 = sub i32 %3, %160
  br label %175

; <label>:162:                                    ; preds = %148
  %163 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %164 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %163, i32 0, i32 5
  %165 = load i32, i32* %164, align 8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %57

; <label>:167:                                    ; preds = %162
  %168 = icmp ne i32* %0, null
  br i1 %168, label %169, label %170

; <label>:169:                                    ; preds = %167
  store i32 0, i32* %0, align 4
  br label %170

; <label>:170:                                    ; preds = %169, %167
  %171 = icmp ne %struct.bzFile* %5, null
  br i1 %171, label %172, label %174

; <label>:172:                                    ; preds = %170
  %173 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %173, align 8
  br label %174

; <label>:174:                                    ; preds = %172, %170
  br label %175

; <label>:175:                                    ; preds = %174, %157, %147, %121, %97, %68, %47, %37, %25
  %.0 = phi i32 [ 0, %25 ], [ 0, %37 ], [ 0, %47 ], [ 0, %68 ], [ 0, %121 ], [ 0, %147 ], [ %161, %157 ], [ %3, %174 ], [ 0, %97 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @myfeof.123(%struct._IO_FILE*) #0 {
  %2 = call i32 @fgetc(%struct._IO_FILE* %0)
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  br label %7

; <label>:5:                                      ; preds = %1
  %6 = call i32 @ungetc(i32 %2, %struct._IO_FILE* %0)
  br label %7

; <label>:7:                                      ; preds = %5, %4
  %.0 = phi i8 [ 1, %4 ], [ 0, %5 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzReadGetUnused(i32*, i8*, i8**, i32*) #0 {
  %5 = bitcast i8* %1 to %struct.bzFile*
  %6 = icmp eq %struct.bzFile* %5, null
  br i1 %6, label %7, label %15

; <label>:7:                                      ; preds = %4
  %8 = icmp ne i32* %0, null
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %7
  store i32 -2, i32* %0, align 4
  br label %10

; <label>:10:                                     ; preds = %9, %7
  %11 = icmp ne %struct.bzFile* %5, null
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %10
  %13 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -2, i32* %13, align 8
  br label %14

; <label>:14:                                     ; preds = %12, %10
  br label %53

; <label>:15:                                     ; preds = %4
  %16 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  %17 = load i32, i32* %16, align 8
  %18 = icmp ne i32 %17, 4
  br i1 %18, label %19, label %27

; <label>:19:                                     ; preds = %15
  %20 = icmp ne i32* %0, null
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %19
  store i32 -1, i32* %0, align 4
  br label %22

; <label>:22:                                     ; preds = %21, %19
  %23 = icmp ne %struct.bzFile* %5, null
  br i1 %23, label %24, label %26

; <label>:24:                                     ; preds = %22
  %25 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -1, i32* %25, align 8
  br label %26

; <label>:26:                                     ; preds = %24, %22
  br label %53

; <label>:27:                                     ; preds = %15
  %28 = icmp eq i8** %2, null
  br i1 %28, label %31, label %29

; <label>:29:                                     ; preds = %27
  %30 = icmp eq i32* %3, null
  br i1 %30, label %31, label %39

; <label>:31:                                     ; preds = %29, %27
  %32 = icmp ne i32* %0, null
  br i1 %32, label %33, label %34

; <label>:33:                                     ; preds = %31
  store i32 -2, i32* %0, align 4
  br label %34

; <label>:34:                                     ; preds = %33, %31
  %35 = icmp ne %struct.bzFile* %5, null
  br i1 %35, label %36, label %38

; <label>:36:                                     ; preds = %34
  %37 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -2, i32* %37, align 8
  br label %38

; <label>:38:                                     ; preds = %36, %34
  br label %53

; <label>:39:                                     ; preds = %29
  %40 = icmp ne i32* %0, null
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %39
  store i32 0, i32* %0, align 4
  br label %42

; <label>:42:                                     ; preds = %41, %39
  %43 = icmp ne %struct.bzFile* %5, null
  br i1 %43, label %44, label %46

; <label>:44:                                     ; preds = %42
  %45 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %45, align 8
  br label %46

; <label>:46:                                     ; preds = %44, %42
  %47 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %3, align 4
  %50 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  store i8* %52, i8** %2, align 8
  br label %53

; <label>:53:                                     ; preds = %46, %38, %26, %14
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzBuffToBuffCompress(i8*, i32*, i8*, i32, i32, i32, i32) #0 {
  %8 = alloca %struct.bz_stream, align 8, !track !57
  %9 = icmp eq i8* %0, null
  br i1 %9, label %26, label %10

; <label>:10:                                     ; preds = %7
  %11 = icmp eq i32* %1, null
  br i1 %11, label %26, label %12

; <label>:12:                                     ; preds = %10
  %13 = icmp eq i8* %2, null
  br i1 %13, label %26, label %14

; <label>:14:                                     ; preds = %12
  %15 = icmp slt i32 %4, 1
  br i1 %15, label %26, label %16

; <label>:16:                                     ; preds = %14
  %17 = icmp sgt i32 %4, 9
  br i1 %17, label %26, label %18

; <label>:18:                                     ; preds = %16
  %19 = icmp slt i32 %5, 0
  br i1 %19, label %26, label %20

; <label>:20:                                     ; preds = %18
  %21 = icmp sgt i32 %5, 4
  br i1 %21, label %26, label %22

; <label>:22:                                     ; preds = %20
  %23 = icmp slt i32 %6, 0
  br i1 %23, label %26, label %24

; <label>:24:                                     ; preds = %22
  %25 = icmp sgt i32 %6, 250
  br i1 %25, label %26, label %27

; <label>:26:                                     ; preds = %24, %22, %20, %18, %16, %14, %12, %10, %7
  br label %59

; <label>:27:                                     ; preds = %24
  %28 = icmp eq i32 %6, 0
  br i1 %28, label %29, label %30

; <label>:29:                                     ; preds = %27
  br label %30

; <label>:30:                                     ; preds = %29, %27
  %.01 = phi i32 [ 30, %29 ], [ %6, %27 ]
  %31 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %31, align 8
  %32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %32, align 8
  %33 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 11
  store i8* null, i8** %33, align 8
  %34 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %8, i32 %4, i32 %5, i32 %.01)
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %30
  br label %59

; <label>:37:                                     ; preds = %30
  %38 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 0
  store i8* %2, i8** %38, align 8
  %39 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 4
  store i8* %0, i8** %39, align 8
  %40 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 1
  store i32 %3, i32* %40, align 8
  %41 = load i32, i32* %1, align 4
  %42 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 5
  store i32 %41, i32* %42, align 8
  %43 = call i32 @BZ2_bzCompress(%struct.bz_stream* %8, i32 2)
  %44 = icmp eq i32 %43, 3
  br i1 %44, label %45, label %46

; <label>:45:                                     ; preds = %37
  br label %55

; <label>:46:                                     ; preds = %37
  %47 = icmp ne i32 %43, 4
  br i1 %47, label %48, label %49

; <label>:48:                                     ; preds = %46
  br label %57

; <label>:49:                                     ; preds = %46
  %50 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 5
  %51 = load i32, i32* %50, align 8
  %52 = load i32, i32* %1, align 4
  %53 = sub i32 %52, %51
  store i32 %53, i32* %1, align 4
  %54 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %8)
  br label %59

; <label>:55:                                     ; preds = %45
  %56 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %8)
  br label %59

; <label>:57:                                     ; preds = %48
  %58 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %8)
  br label %59

; <label>:59:                                     ; preds = %57, %55, %49, %36, %26
  %.0 = phi i32 [ -2, %26 ], [ %34, %36 ], [ -8, %55 ], [ %43, %57 ], [ 0, %49 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzBuffToBuffDecompress(i8*, i32*, i8*, i32, i32, i32) #0 {
  %7 = alloca %struct.bz_stream, align 8, !track !58
  %8 = icmp eq i8* %0, null
  br i1 %8, label %21, label %9

; <label>:9:                                      ; preds = %6
  %10 = icmp eq i32* %1, null
  br i1 %10, label %21, label %11

; <label>:11:                                     ; preds = %9
  %12 = icmp eq i8* %2, null
  br i1 %12, label %21, label %13

; <label>:13:                                     ; preds = %11
  %14 = icmp ne i32 %4, 0
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %13
  %16 = icmp ne i32 %4, 1
  br i1 %16, label %21, label %17

; <label>:17:                                     ; preds = %15, %13
  %18 = icmp slt i32 %5, 0
  br i1 %18, label %21, label %19

; <label>:19:                                     ; preds = %17
  %20 = icmp sgt i32 %5, 4
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %19, %17, %15, %11, %9, %6
  br label %57

; <label>:22:                                     ; preds = %19
  %23 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %23, align 8
  %24 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %24, align 8
  %25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 11
  store i8* null, i8** %25, align 8
  %26 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %7, i32 %5, i32 %4)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %22
  br label %57

; <label>:29:                                     ; preds = %22
  %30 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 0
  store i8* %2, i8** %30, align 8
  %31 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 4
  store i8* %0, i8** %31, align 8
  %32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 1
  store i32 %3, i32* %32, align 8
  %33 = load i32, i32* %1, align 4
  %34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  store i32 %33, i32* %34, align 8
  %35 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %7)
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

; <label>:37:                                     ; preds = %29
  br label %47

; <label>:38:                                     ; preds = %29
  %39 = icmp ne i32 %35, 4
  br i1 %39, label %40, label %41

; <label>:40:                                     ; preds = %38
  br label %55

; <label>:41:                                     ; preds = %38
  %42 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  %43 = load i32, i32* %42, align 8
  %44 = load i32, i32* %1, align 4
  %45 = sub i32 %44, %43
  store i32 %45, i32* %1, align 4
  %46 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %7)
  br label %57

; <label>:47:                                     ; preds = %37
  %48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  %49 = load i32, i32* %48, align 8
  %50 = icmp ugt i32 %49, 0
  br i1 %50, label %51, label %53

; <label>:51:                                     ; preds = %47
  %52 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %7)
  br label %57

; <label>:53:                                     ; preds = %47
  %54 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %7)
  br label %57

; <label>:55:                                     ; preds = %40
  %56 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %7)
  br label %57

; <label>:57:                                     ; preds = %55, %53, %51, %41, %28, %21
  %.0 = phi i32 [ -2, %21 ], [ %26, %28 ], [ -7, %51 ], [ -8, %53 ], [ %35, %55 ], [ 0, %41 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzopen(i8*, i8*) #0 {
  %3 = call i8* @bzopen_or_bzdopen(i8* %0, i32 -1, i8* %1, i32 0)
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @bzopen_or_bzdopen(i8*, i32, i8*, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca [5000 x i8], align 16
  %7 = alloca [10 x i8], align 1
  %8 = bitcast [10 x i8]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 10, i1 false)
  %9 = icmp eq i8* %2, null
  br i1 %9, label %10, label %11

; <label>:10:                                     ; preds = %4
  br label %101

; <label>:11:                                     ; preds = %4
  %12 = load i8, i8* %2, align 1
  %13 = icmp ne i8 %12, 0
  br i1 %13, label %.lr.ph, label %40

.lr.ph:                                           ; preds = %11
  br label %14

; <label>:14:                                     ; preds = %.lr.ph, %36
  %.0113 = phi i32 [ 0, %.lr.ph ], [ %.1, %36 ]
  %.0312 = phi i8* [ %2, %.lr.ph ], [ %37, %36 ]
  %.0611 = phi i32 [ 9, %.lr.ph ], [ %.2, %36 ]
  %.0810 = phi i32 [ 0, %.lr.ph ], [ %.19, %36 ]
  %15 = load i8, i8* %.0312, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %20 [
    i32 114, label %17
    i32 119, label %18
    i32 115, label %19
  ]

; <label>:17:                                     ; preds = %14
  br label %36

; <label>:18:                                     ; preds = %14
  br label %36

; <label>:19:                                     ; preds = %14
  br label %36

; <label>:20:                                     ; preds = %14
  %21 = call i16** @__ctype_b_loc() #13
  %22 = load i16*, i16** %21, align 8
  %23 = load i8, i8* %.0312, align 1
  %24 = sext i8 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i16, i16* %22, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = and i32 %28, 2048
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %35

; <label>:31:                                     ; preds = %20
  %32 = load i8, i8* %.0312, align 1
  %33 = sext i8 %32 to i32
  %34 = sub nsw i32 %33, 48
  br label %35

; <label>:35:                                     ; preds = %31, %20
  %.17 = phi i32 [ %34, %31 ], [ %.0611, %20 ]
  br label %36

; <label>:36:                                     ; preds = %35, %19, %18, %17
  %.19 = phi i32 [ %.0810, %35 ], [ %.0810, %19 ], [ 1, %18 ], [ 0, %17 ]
  %.2 = phi i32 [ %.17, %35 ], [ %.0611, %19 ], [ %.0611, %18 ], [ %.0611, %17 ]
  %.1 = phi i32 [ %.0113, %35 ], [ 1, %19 ], [ %.0113, %18 ], [ %.0113, %17 ]
  %37 = getelementptr inbounds i8, i8* %.0312, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp ne i8 %38, 0
  br i1 %39, label %14, label %._crit_edge

._crit_edge:                                      ; preds = %36
  %split = phi i32 [ %.19, %36 ]
  %split14 = phi i32 [ %.2, %36 ]
  %split15 = phi i32 [ %.1, %36 ]
  br label %40

; <label>:40:                                     ; preds = %._crit_edge, %11
  %.08.lcssa = phi i32 [ %split, %._crit_edge ], [ 0, %11 ]
  %.06.lcssa = phi i32 [ %split14, %._crit_edge ], [ 9, %11 ]
  %.01.lcssa = phi i32 [ %split15, %._crit_edge ], [ 0, %11 ]
  %41 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i32 0, i32 0
  %42 = icmp ne i32 %.08.lcssa, 0
  %43 = zext i1 %42 to i64
  %44 = getelementptr [2 x i8], [2 x i8]* @.str.6.126, i32 0, i32 0
  %45 = getelementptr [2 x i8], [2 x i8]* @.str.7.127, i32 0, i32 0
  %46 = select i1 %42, i8* %44, i8* %45
  %47 = call i8* @strcat(i8* %41, i8* %46) #9
  %48 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i32 0, i32 0
  %49 = getelementptr [2 x i8], [2 x i8]* @.str.8.128, i32 0, i32 0
  %50 = call i8* @strcat(i8* %48, i8* %49) #9
  %51 = icmp eq i32 %3, 0
  br i1 %51, label %52, label %70

; <label>:52:                                     ; preds = %40
  %53 = icmp eq i8* %0, null
  br i1 %53, label %58, label %54

; <label>:54:                                     ; preds = %52
  %55 = getelementptr [1 x i8], [1 x i8]* @.str.9.129, i32 0, i32 0
  %56 = call i32 @strcmp(i8* %0, i8* %55) #10
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %66

; <label>:58:                                     ; preds = %54, %52
  %59 = icmp ne i32 %.08.lcssa, 0
  br i1 %59, label %60, label %62

; <label>:60:                                     ; preds = %58
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  br label %64

; <label>:62:                                     ; preds = %58
  %63 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  br label %64

; <label>:64:                                     ; preds = %62, %60
  %65 = phi %struct._IO_FILE* [ %61, %60 ], [ %63, %62 ]
  br label %69

; <label>:66:                                     ; preds = %54
  %67 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i32 0, i32 0
  %68 = call %struct._IO_FILE* @fopen64(i8* %0, i8* %67), !track !59
  br label %69

; <label>:69:                                     ; preds = %66, %64
  %.04 = phi %struct._IO_FILE* [ %65, %64 ], [ %68, %66 ]
  br label %73

; <label>:70:                                     ; preds = %40
  %71 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i32 0, i32 0
  %72 = call %struct._IO_FILE* @fdopen(i32 %1, i8* %71) #9, !track !60
  br label %73

; <label>:73:                                     ; preds = %70, %69
  %.15 = phi %struct._IO_FILE* [ %.04, %69 ], [ %72, %70 ]
  %74 = icmp eq %struct._IO_FILE* %.15, null
  br i1 %74, label %75, label %76

; <label>:75:                                     ; preds = %73
  br label %101

; <label>:76:                                     ; preds = %73
  %77 = icmp ne i32 %.08.lcssa, 0
  br i1 %77, label %78, label %86

; <label>:78:                                     ; preds = %76
  %79 = icmp slt i32 %.06.lcssa, 1
  br i1 %79, label %80, label %81

; <label>:80:                                     ; preds = %78
  br label %81

; <label>:81:                                     ; preds = %80, %78
  %.3 = phi i32 [ 1, %80 ], [ %.06.lcssa, %78 ]
  %82 = icmp sgt i32 %.3, 9
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %81
  br label %84

; <label>:84:                                     ; preds = %83, %81
  %.4 = phi i32 [ 9, %83 ], [ %.3, %81 ]
  %85 = call i8* @BZ2_bzWriteOpen(i32* %5, %struct._IO_FILE* %.15, i32 %.4, i32 0, i32 30)
  br label %89

; <label>:86:                                     ; preds = %76
  %87 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i32 0, i32 0
  %88 = call i8* @BZ2_bzReadOpen(i32* %5, %struct._IO_FILE* %.15, i32 0, i32 %.01.lcssa, i8* %87, i32 0)
  br label %89

; <label>:89:                                     ; preds = %86, %84
  %.02 = phi i8* [ %85, %84 ], [ %88, %86 ]
  %90 = icmp eq i8* %.02, null
  br i1 %90, label %91, label %100

; <label>:91:                                     ; preds = %89
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %93 = icmp ne %struct._IO_FILE* %.15, %92
  br i1 %93, label %94, label %99

; <label>:94:                                     ; preds = %91
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %96 = icmp ne %struct._IO_FILE* %.15, %95
  br i1 %96, label %97, label %99

; <label>:97:                                     ; preds = %94
  %98 = call i32 @fclose(%struct._IO_FILE* %.15)
  br label %99

; <label>:99:                                     ; preds = %97, %94, %91
  br label %101

; <label>:100:                                    ; preds = %89
  br label %101

; <label>:101:                                    ; preds = %100, %99, %75, %10
  %.0 = phi i8* [ null, %10 ], [ null, %75 ], [ null, %99 ], [ %.02, %100 ]
  ret i8* %.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #8

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzdopen(i32, i8*) #0 {
  %3 = call i8* @bzopen_or_bzdopen(i8* null, i32 %0, i8* %1, i32 1)
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzread(i8*, i8*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i8* %0 to %struct.bzFile*
  %6 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %3
  br label %19

; <label>:10:                                     ; preds = %3
  %11 = call i32 @BZ2_bzRead(i32* %4, i8* %0, i8* %1, i32 %2)
  %12 = load i32, i32* %4, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

; <label>:14:                                     ; preds = %10
  %15 = load i32, i32* %4, align 4
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %18

; <label>:17:                                     ; preds = %14, %10
  br label %19

; <label>:18:                                     ; preds = %14
  br label %19

; <label>:19:                                     ; preds = %18, %17, %9
  %.0 = phi i32 [ 0, %9 ], [ %11, %17 ], [ -1, %18 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzwrite(i8*, i8*, i32) #0 {
  %4 = alloca i32, align 4
  call void @BZ2_bzWrite(i32* %4, i8* %0, i8* %1, i32 %2)
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %3
  br label %9

; <label>:8:                                      ; preds = %3
  br label %9

; <label>:9:                                      ; preds = %8, %7
  %.0 = phi i32 [ %2, %7 ], [ -1, %8 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzflush(i8*) #0 {
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzclose(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = icmp eq i8* %0, null
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  br label %27

; <label>:5:                                      ; preds = %1
  %6 = bitcast i8* %0 to %struct.bzFile*
  %7 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %6, i32 0, i32 0
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %9 = bitcast i8* %0 to %struct.bzFile*
  %10 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %9, i32 0, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = icmp ne i8 %11, 0
  br i1 %12, label %13, label %18

; <label>:13:                                     ; preds = %5
  call void @BZ2_bzWriteClose(i32* %2, i8* %0, i32 0, i32* null, i32* null)
  %14 = load i32, i32* %2, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %13
  call void @BZ2_bzWriteClose(i32* null, i8* %0, i32 1, i32* null, i32* null)
  br label %17

; <label>:17:                                     ; preds = %16, %13
  br label %19

; <label>:18:                                     ; preds = %5
  call void @BZ2_bzReadClose(i32* %2, i8* %0)
  br label %19

; <label>:19:                                     ; preds = %18, %17
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %21 = icmp ne %struct._IO_FILE* %8, %20
  br i1 %21, label %22, label %27

; <label>:22:                                     ; preds = %19
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %24 = icmp ne %struct._IO_FILE* %8, %23
  br i1 %24, label %25, label %27

; <label>:25:                                     ; preds = %22
  %26 = call i32 @fclose(%struct._IO_FILE* %8)
  br label %27

; <label>:27:                                     ; preds = %4, %25, %22, %19
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzerror(i8*, i32*) #0 {
  %3 = bitcast i8* %0 to %struct.bzFile*
  %4 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %2
  br label %8

; <label>:8:                                      ; preds = %7, %2
  %.0 = phi i32 [ 0, %7 ], [ %5, %2 ]
  store i32 %.0, i32* %1, align 4
  %9 = mul nsw i32 %.0, -1
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [16 x i8*], [16 x i8*]* @bzerrorstrings, i64 0, i64 %10
  %12 = load i8*, i8** %11, align 8
  ret i8* %12
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bsInitWrite(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_compressBlock(%struct.EState*, i8 zeroext) #0 {
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %46

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %8 = load i32, i32* %7, align 8
  %9 = xor i32 %8, -1
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %12 = load i32, i32* %11, align 4
  %13 = shl i32 %12, 1
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 31
  %17 = or i32 %13, %16
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %22 = load i32, i32* %21, align 4
  %23 = xor i32 %22, %20
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 29
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 1
  br i1 %26, label %27, label %29

; <label>:27:                                     ; preds = %6
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  store i32 0, i32* %28, align 4
  br label %29

; <label>:29:                                     ; preds = %27, %6
  %30 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %31 = load i32, i32* %30, align 8
  %32 = icmp sge i32 %31, 2
  br i1 %32, label %33, label %45

; <label>:33:                                     ; preds = %29
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 29
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr [62 x i8], [62 x i8]* @.str.147, i32 0, i32 0
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* %43, i32 %36, i32 %38, i32 %40, i32 %42)
  br label %45

; <label>:45:                                     ; preds = %33, %29
  call void @BZ2_blockSort(%struct.EState* %0)
  br label %46

; <label>:46:                                     ; preds = %45, %2
  %47 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 5
  %48 = load i32*, i32** %47, align 8
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  %54 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 11
  store i8* %53, i8** %54, align 8
  %55 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 29
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %63

; <label>:58:                                     ; preds = %46
  call void @BZ2_bsInitWrite(%struct.EState* %0)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 66)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 90)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 104)
  %59 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 30
  %60 = load i32, i32* %59, align 8
  %61 = add nsw i32 48, %60
  %62 = trunc i32 %61 to i8
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext %62)
  br label %63

; <label>:63:                                     ; preds = %58, %46
  %64 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %72

; <label>:67:                                     ; preds = %63
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 49)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 65)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 89)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 38)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 83)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 89)
  %68 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %69 = load i32, i32* %68, align 8
  call void @bsPutUInt32(%struct.EState* %0, i32 %69)
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  %70 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 7
  %71 = load i32, i32* %70, align 8
  call void @bsW(%struct.EState* %0, i32 24, i32 %71)
  call void @generateMTFValues(%struct.EState* %0)
  call void @sendMTFValues(%struct.EState* %0)
  br label %72

; <label>:72:                                     ; preds = %67, %63
  %73 = icmp ne i8 %1, 0
  br i1 %73, label %74, label %87

; <label>:74:                                     ; preds = %72
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 23)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 114)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 69)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 56)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 80)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext -112)
  %75 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %76 = load i32, i32* %75, align 4
  call void @bsPutUInt32(%struct.EState* %0, i32 %76)
  %77 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %78 = load i32, i32* %77, align 8
  %79 = icmp sge i32 %78, 2
  br i1 %79, label %80, label %86

; <label>:80:                                     ; preds = %74
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %82 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr [36 x i8], [36 x i8]* @.str.1.148, i32 0, i32 0
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* %84, i32 %83)
  br label %86

; <label>:86:                                     ; preds = %80, %74
  call void @bsFinishWrite(%struct.EState* %0)
  br label %87

; <label>:87:                                     ; preds = %86, %72
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsPutUChar(%struct.EState*, i8 zeroext) #0 {
  %3 = zext i8 %1 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsPutUInt32(%struct.EState*, i32) #0 {
  %3 = lshr i32 %1, 24
  %4 = zext i32 %3 to i64
  %5 = and i64 %4, 255
  %6 = trunc i64 %5 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %6)
  %7 = lshr i32 %1, 16
  %8 = zext i32 %7 to i64
  %9 = and i64 %8, 255
  %10 = trunc i64 %9 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %10)
  %11 = lshr i32 %1, 8
  %12 = zext i32 %11 to i64
  %13 = and i64 %12, 255
  %14 = trunc i64 %13 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %14)
  %15 = zext i32 %1 to i64
  %16 = and i64 %15, 255
  %17 = trunc i64 %16 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %17)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsW(%struct.EState*, i32, i32) #0 {
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %5 = load i32, i32* %4, align 4
  %6 = icmp sge i32 %5, 8
  br i1 %6, label %.lr.ph, label %29

.lr.ph:                                           ; preds = %3
  br label %7

; <label>:7:                                      ; preds = %.lr.ph, %7
  call void @unroll_loop(i32 45)
  %8 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %9 = load i32, i32* %8, align 8
  %10 = lshr i32 %9, 24
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 11
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %13, i64 %16
  store i8 %11, i8* %17, align 1
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %22 = load i32, i32* %21, align 8
  %23 = shl i32 %22, 8
  store i32 %23, i32* %21, align 8
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %25, 8
  store i32 %26, i32* %24, align 4
  %27 = load i32, i32* %4, align 4
  %28 = icmp sge i32 %27, 8
  br i1 %28, label %7, label %._crit_edge

._crit_edge:                                      ; preds = %7
  br label %29

; <label>:29:                                     ; preds = %._crit_edge, %3
  %30 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 32, %31
  %33 = sub nsw i32 %32, %1
  %34 = shl i32 %2, %33
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %36 = load i32, i32* %35, align 8
  %37 = or i32 %36, %34
  store i32 %37, i32* %35, align 8
  %38 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %39, %1
  store i32 %40, i32* %38, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @generateMTFValues(%struct.EState*) #0 {
  %2 = alloca [256 x i8], align 16
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 8
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 10
  %8 = load i16*, i16** %7, align 8
  call void @makeMaps_e(%struct.EState* %0)
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  %12 = icmp sle i32 0, %11
  br i1 %12, label %.lr.ph31, label %18

.lr.ph31:                                         ; preds = %1
  %13 = add i32 %10, 2
  br label %14

; <label>:14:                                     ; preds = %.lr.ph31, %17
  %indvars.iv33 = phi i64 [ 0, %.lr.ph31 ], [ %indvars.iv.next34, %17 ]
  call void @unroll_loop(i32 46)
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %16 = getelementptr inbounds [258 x i32], [258 x i32]* %15, i64 0, i64 %indvars.iv33
  store i32 0, i32* %16, align 4
  br label %17

; <label>:17:                                     ; preds = %14
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1
  %wide.trip.count = zext i32 %13 to i64
  %exitcond = icmp ne i64 %indvars.iv.next34, %wide.trip.count
  br i1 %exitcond, label %14, label %._crit_edge32

._crit_edge32:                                    ; preds = %17
  br label %18

; <label>:18:                                     ; preds = %._crit_edge32, %1
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 0, %20
  br i1 %21, label %.lr.ph25, label %30

.lr.ph25:                                         ; preds = %18
  br label %22

; <label>:22:                                     ; preds = %.lr.ph25, %26
  %indvars.iv27 = phi i64 [ 0, %.lr.ph25 ], [ %indvars.iv.next28, %26 ]
  call void @unroll_loop(i32 47)
  %23 = trunc i64 %indvars.iv27 to i32
  %24 = trunc i32 %23 to i8
  %25 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 %indvars.iv27
  store i8 %24, i8* %25, align 1
  br label %26

; <label>:26:                                     ; preds = %22
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  %27 = load i32, i32* %19, align 4
  %28 = sext i32 %27 to i64
  %29 = icmp slt i64 %indvars.iv.next28, %28
  br i1 %29, label %22, label %._crit_edge26

._crit_edge26:                                    ; preds = %26
  br label %30

; <label>:30:                                     ; preds = %._crit_edge26, %18
  %31 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 0, %32
  br i1 %33, label %.lr.ph19, label %126

.lr.ph19:                                         ; preds = %30
  br label %34

; <label>:34:                                     ; preds = %.lr.ph19, %122
  %indvars.iv = phi i64 [ 0, %.lr.ph19 ], [ %indvars.iv.next, %122 ]
  %.0316 = phi i32 [ 0, %.lr.ph19 ], [ %.3, %122 ]
  %.0615 = phi i32 [ 0, %.lr.ph19 ], [ %.410, %122 ]
  call void @unroll_loop(i32 48)
  %35 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %36, 1
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %39, label %43

; <label>:39:                                     ; preds = %34
  %40 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %37, %41
  br label %43

; <label>:43:                                     ; preds = %39, %34
  %.02 = phi i32 [ %42, %39 ], [ %37, %34 ]
  %44 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 23
  %45 = sext i32 %.02 to i64
  %46 = getelementptr inbounds i8, i8* %6, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %44, i64 0, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %52 = load i8, i8* %51, align 16
  %53 = zext i8 %52 to i32
  %54 = zext i8 %50 to i32
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %56, label %58

; <label>:56:                                     ; preds = %43
  %57 = add nsw i32 %.0316, 1
  br label %121

; <label>:58:                                     ; preds = %43
  %59 = icmp sgt i32 %.0316, 0
  br i1 %59, label %60, label %88

; <label>:60:                                     ; preds = %58
  %61 = add nsw i32 %.0316, -1
  br label %62

; <label>:62:                                     ; preds = %60, %84
  %.17 = phi i32 [ %.0615, %60 ], [ %.28, %84 ]
  %.14 = phi i32 [ %61, %60 ], [ %86, %84 ]
  call void @unroll_loop(i32 49)
  %63 = and i32 %.14, 1
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %73

; <label>:65:                                     ; preds = %62
  %66 = sext i32 %.17 to i64
  %67 = getelementptr inbounds i16, i16* %8, i64 %66
  store i16 1, i16* %67, align 2
  %68 = add nsw i32 %.17, 1
  %69 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %70 = getelementptr inbounds [258 x i32], [258 x i32]* %69, i64 0, i64 1
  %71 = load i32, i32* %70, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %70, align 4
  br label %81

; <label>:73:                                     ; preds = %62
  %74 = sext i32 %.17 to i64
  %75 = getelementptr inbounds i16, i16* %8, i64 %74
  store i16 0, i16* %75, align 2
  %76 = add nsw i32 %.17, 1
  %77 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %78 = getelementptr inbounds [258 x i32], [258 x i32]* %77, i64 0, i64 0
  %79 = load i32, i32* %78, align 8
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %78, align 8
  br label %81

; <label>:81:                                     ; preds = %73, %65
  %.28 = phi i32 [ %68, %65 ], [ %76, %73 ]
  %82 = icmp slt i32 %.14, 2
  br i1 %82, label %83, label %84

; <label>:83:                                     ; preds = %81
  %.28.lcssa = phi i32 [ %.28, %81 ]
  br label %87

; <label>:84:                                     ; preds = %81
  %85 = sub nsw i32 %.14, 2
  %86 = sdiv i32 %85, 2
  br label %62

; <label>:87:                                     ; preds = %83
  br label %88

; <label>:88:                                     ; preds = %87, %58
  %.39 = phi i32 [ %.28.lcssa, %87 ], [ %.0615, %58 ]
  %.25 = phi i32 [ 0, %87 ], [ %.0316, %58 ]
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 1
  %90 = load i8, i8* %89, align 1
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %92 = load i8, i8* %91, align 16
  %93 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 1
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 1
  %95 = zext i8 %50 to i32
  %96 = zext i8 %90 to i32
  %97 = icmp ne i32 %95, %96
  br i1 %97, label %.lr.ph, label %103

.lr.ph:                                           ; preds = %88
  br label %98

; <label>:98:                                     ; preds = %.lr.ph, %98
  %.013 = phi i8* [ %94, %.lr.ph ], [ %99, %98 ]
  %.01112 = phi i8 [ %90, %.lr.ph ], [ %100, %98 ]
  call void @unroll_loop(i32 50)
  %99 = getelementptr inbounds i8, i8* %.013, i32 1
  %100 = load i8, i8* %99, align 1
  store i8 %.01112, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = icmp ne i32 %95, %101
  br i1 %102, label %98, label %._crit_edge

._crit_edge:                                      ; preds = %98
  %split = phi i8 [ %100, %98 ]
  %split14 = phi i8* [ %99, %98 ]
  br label %103

; <label>:103:                                    ; preds = %._crit_edge, %88
  %.011.lcssa = phi i8 [ %split, %._crit_edge ], [ %90, %88 ]
  %.0.lcssa = phi i8* [ %split14, %._crit_edge ], [ %94, %88 ]
  %104 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  store i8 %.011.lcssa, i8* %104, align 16
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %106 = ptrtoint i8* %.0.lcssa to i64
  %107 = ptrtoint i8* %105 to i64
  %108 = sub i64 %106, %107
  %109 = trunc i64 %108 to i32
  %110 = add nsw i32 %109, 1
  %111 = trunc i32 %110 to i16
  %112 = sext i32 %.39 to i64
  %113 = getelementptr inbounds i16, i16* %8, i64 %112
  store i16 %111, i16* %113, align 2
  %114 = add nsw i32 %.39, 1
  %115 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %116 = add nsw i32 %109, 1
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds [258 x i32], [258 x i32]* %115, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 4
  br label %121

; <label>:121:                                    ; preds = %103, %56
  %.410 = phi i32 [ %.0615, %56 ], [ %114, %103 ]
  %.3 = phi i32 [ %57, %56 ], [ %.25, %103 ]
  br label %122

; <label>:122:                                    ; preds = %121
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %123 = load i32, i32* %31, align 4
  %124 = sext i32 %123 to i64
  %125 = icmp slt i64 %indvars.iv.next, %124
  br i1 %125, label %34, label %._crit_edge20

._crit_edge20:                                    ; preds = %122
  %split21 = phi i32 [ %.410, %122 ]
  %split22 = phi i32 [ %.3, %122 ]
  br label %126

; <label>:126:                                    ; preds = %._crit_edge20, %30
  %.06.lcssa = phi i32 [ %split21, %._crit_edge20 ], [ 0, %30 ]
  %.03.lcssa = phi i32 [ %split22, %._crit_edge20 ], [ 0, %30 ]
  %127 = icmp sgt i32 %.03.lcssa, 0
  br i1 %127, label %128, label %156

; <label>:128:                                    ; preds = %126
  %129 = add nsw i32 %.03.lcssa, -1
  br label %130

; <label>:130:                                    ; preds = %128, %152
  %.5 = phi i32 [ %.06.lcssa, %128 ], [ %.6, %152 ]
  %.4 = phi i32 [ %129, %128 ], [ %154, %152 ]
  call void @unroll_loop(i32 51)
  %131 = and i32 %.4, 1
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %133, label %141

; <label>:133:                                    ; preds = %130
  %134 = sext i32 %.5 to i64
  %135 = getelementptr inbounds i16, i16* %8, i64 %134
  store i16 1, i16* %135, align 2
  %136 = add nsw i32 %.5, 1
  %137 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %138 = getelementptr inbounds [258 x i32], [258 x i32]* %137, i64 0, i64 1
  %139 = load i32, i32* %138, align 4
  %140 = add nsw i32 %139, 1
  store i32 %140, i32* %138, align 4
  br label %149

; <label>:141:                                    ; preds = %130
  %142 = sext i32 %.5 to i64
  %143 = getelementptr inbounds i16, i16* %8, i64 %142
  store i16 0, i16* %143, align 2
  %144 = add nsw i32 %.5, 1
  %145 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %146 = getelementptr inbounds [258 x i32], [258 x i32]* %145, i64 0, i64 0
  %147 = load i32, i32* %146, align 8
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %146, align 8
  br label %149

; <label>:149:                                    ; preds = %141, %133
  %.6 = phi i32 [ %136, %133 ], [ %144, %141 ]
  %150 = icmp slt i32 %.4, 2
  br i1 %150, label %151, label %152

; <label>:151:                                    ; preds = %149
  %.6.lcssa = phi i32 [ %.6, %149 ]
  br label %155

; <label>:152:                                    ; preds = %149
  %153 = sub nsw i32 %.4, 2
  %154 = sdiv i32 %153, 2
  br label %130

; <label>:155:                                    ; preds = %151
  br label %156

; <label>:156:                                    ; preds = %155, %126
  %.7 = phi i32 [ %.6.lcssa, %155 ], [ %.06.lcssa, %126 ]
  %157 = trunc i32 %11 to i16
  %158 = sext i32 %.7 to i64
  %159 = getelementptr inbounds i16, i16* %8, i64 %158
  store i16 %157, i16* %159, align 2
  %160 = add nsw i32 %.7, 1
  %161 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %162 = sext i32 %11 to i64
  %163 = getelementptr inbounds [258 x i32], [258 x i32]* %161, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %163, align 4
  %166 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  store i32 %160, i32* %166, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @sendMTFValues(%struct.EState*) #0 {
  %2 = alloca [6 x i16], align 2, !track !61
  %3 = alloca [6 x i32], align 16
  %4 = alloca [6 x i8], align 1
  %5 = alloca [16 x i8], align 16
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 10
  %7 = load i16*, i16** %6, align 8
  %8 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %9 = load i32, i32* %8, align 8
  %10 = icmp sge i32 %9, 3
  br i1 %10, label %11, label %21

; <label>:11:                                     ; preds = %1
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr [64 x i8], [64 x i8]* @.str.2.149, i32 0, i32 0
  %20 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* %19, i32 %14, i32 %16, i32 %18)
  br label %21

; <label>:21:                                     ; preds = %11, %1
  %22 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, 2
  %25 = add i32 %23, 2
  br label %26

; <label>:26:                                     ; preds = %21, %34
  %indvars.iv256 = phi i64 [ 0, %21 ], [ %indvars.iv.next257, %34 ]
  call void @unroll_loop(i32 53)
  %27 = icmp slt i32 0, %24
  br i1 %27, label %.lr.ph247, label %33

.lr.ph247:                                        ; preds = %26
  br label %28

; <label>:28:                                     ; preds = %.lr.ph247, %32
  %indvars.iv249 = phi i64 [ 0, %.lr.ph247 ], [ %indvars.iv.next250, %32 ]
  call void @unroll_loop(i32 54)
  %29 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %30 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %29, i64 0, i64 %indvars.iv256
  %31 = getelementptr inbounds [258 x i8], [258 x i8]* %30, i64 0, i64 %indvars.iv249
  store i8 15, i8* %31, align 1
  br label %32

; <label>:32:                                     ; preds = %28
  %indvars.iv.next250 = add nuw nsw i64 %indvars.iv249, 1
  %wide.trip.count251 = zext i32 %25 to i64
  %exitcond252 = icmp ne i64 %indvars.iv.next250, %wide.trip.count251
  br i1 %exitcond252, label %28, label %._crit_edge248

._crit_edge248:                                   ; preds = %32
  br label %33

; <label>:33:                                     ; preds = %._crit_edge248, %26
  br label %34

; <label>:34:                                     ; preds = %33
  %indvars.iv.next257 = add nuw nsw i64 %indvars.iv256, 1
  %exitcond258 = icmp ne i64 %indvars.iv.next257, 6
  br i1 %exitcond258, label %26, label %35

; <label>:35:                                     ; preds = %34
  %36 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %37 = load i32, i32* %36, align 4
  %38 = icmp sgt i32 %37, 0
  br i1 %38, label %40, label %39

; <label>:39:                                     ; preds = %35
  call void @BZ2_bz__AssertH__fail(i32 3001)
  br label %40

; <label>:40:                                     ; preds = %39, %35
  %41 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 200
  br i1 %43, label %44, label %45

; <label>:44:                                     ; preds = %40
  br label %64

; <label>:45:                                     ; preds = %40
  %46 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 600
  br i1 %48, label %49, label %50

; <label>:49:                                     ; preds = %45
  br label %63

; <label>:50:                                     ; preds = %45
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 1200
  br i1 %53, label %54, label %55

; <label>:54:                                     ; preds = %50
  br label %62

; <label>:55:                                     ; preds = %50
  %56 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %57 = load i32, i32* %56, align 4
  %58 = icmp slt i32 %57, 2400
  br i1 %58, label %59, label %60

; <label>:59:                                     ; preds = %55
  br label %61

; <label>:60:                                     ; preds = %55
  br label %61

; <label>:61:                                     ; preds = %60, %59
  %.043 = phi i32 [ 5, %59 ], [ 6, %60 ]
  br label %62

; <label>:62:                                     ; preds = %61, %54
  %.144 = phi i32 [ 4, %54 ], [ %.043, %61 ]
  br label %63

; <label>:63:                                     ; preds = %62, %49
  %.245 = phi i32 [ 3, %49 ], [ %.144, %62 ]
  br label %64

; <label>:64:                                     ; preds = %63, %44
  %.346 = phi i32 [ 2, %44 ], [ %.245, %63 ]
  %65 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %23, 2
  %68 = zext i32 %.346 to i64
  %69 = sext i32 %.346 to i64
  %70 = zext i32 %.346 to i64
  br label %71

; <label>:71:                                     ; preds = %64, %144
  %indvars.iv243 = phi i64 [ %68, %64 ], [ %indvars.iv.next244, %144 ]
  %.022242 = phi i32 [ 0, %64 ], [ %145, %144 ]
  %.050240 = phi i32 [ %66, %64 ], [ %146, %144 ]
  call void @unroll_loop(i32 55)
  %72 = trunc i64 %indvars.iv243 to i32
  %73 = sdiv i32 %.050240, %72
  %74 = add i32 %.022242, -1
  %75 = sext i32 %74 to i64
  br label %76

; <label>:76:                                     ; preds = %84, %71
  %indvars.iv229 = phi i64 [ %indvars.iv.next230, %84 ], [ %75, %71 ]
  %.047 = phi i32 [ 0, %71 ], [ %88, %84 ]
  call void @unroll_loop(i32 56)
  %77 = icmp slt i32 %.047, %73
  br i1 %77, label %78, label %82

; <label>:78:                                     ; preds = %76
  %79 = sub nsw i32 %24, 1
  %80 = sext i32 %79 to i64
  %81 = icmp slt i64 %indvars.iv229, %80
  br label %82

; <label>:82:                                     ; preds = %78, %76
  %83 = phi i1 [ false, %76 ], [ %81, %78 ]
  br i1 %83, label %84, label %89

; <label>:84:                                     ; preds = %82
  %indvars.iv.next230 = add i64 %indvars.iv229, 1
  %85 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %86 = getelementptr inbounds [258 x i32], [258 x i32]* %85, i64 0, i64 %indvars.iv.next230
  %87 = load i32, i32* %86, align 4
  %88 = add nsw i32 %.047, %87
  br label %76

; <label>:89:                                     ; preds = %82
  %.047.lcssa = phi i32 [ %.047, %82 ]
  %.025.lcssa.wide = phi i64 [ %indvars.iv229, %82 ]
  %90 = trunc i64 %.025.lcssa.wide to i32
  %91 = icmp sgt i32 %90, %.022242
  br i1 %91, label %92, label %107

; <label>:92:                                     ; preds = %89
  %93 = icmp ne i64 %indvars.iv243, %70
  br i1 %93, label %94, label %107

; <label>:94:                                     ; preds = %92
  %95 = icmp ne i64 %indvars.iv243, 1
  br i1 %95, label %96, label %107

; <label>:96:                                     ; preds = %94
  %97 = sub nuw nsw i64 %69, %indvars.iv243
  %98 = trunc i64 %97 to i32
  %.urem = urem i32 %98, 2
  %99 = icmp eq i32 %.urem, 1
  br i1 %99, label %100, label %107

; <label>:100:                                    ; preds = %96
  %101 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %102 = sext i32 %90 to i64
  %103 = getelementptr inbounds [258 x i32], [258 x i32]* %101, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sub nsw i32 %.047.lcssa, %104
  %106 = add nsw i32 %90, -1
  br label %107

; <label>:107:                                    ; preds = %100, %96, %94, %92, %89
  %.148 = phi i32 [ %105, %100 ], [ %.047.lcssa, %96 ], [ %.047.lcssa, %94 ], [ %.047.lcssa, %92 ], [ %.047.lcssa, %89 ]
  %.126 = phi i32 [ %106, %100 ], [ %90, %96 ], [ %90, %94 ], [ %90, %92 ], [ %90, %89 ]
  %108 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %109 = load i32, i32* %108, align 8
  %110 = icmp sge i32 %109, 3
  br i1 %110, label %111, label %124

; <label>:111:                                    ; preds = %107
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %113 = sitofp i32 %.148 to float
  %114 = fpext float %113 to double
  %115 = fmul double 1.000000e+02, %114
  %116 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %117 = load i32, i32* %116, align 4
  %118 = sitofp i32 %117 to float
  %119 = fpext float %118 to double
  %120 = fdiv double %115, %119
  %121 = trunc i64 %indvars.iv243 to i32
  %122 = getelementptr [59 x i8], [59 x i8]* @.str.3.150, i32 0, i32 0
  %123 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %122, i32 %121, i32 %.022242, i32 %.126, i32 %.148, double %120)
  br label %124

; <label>:124:                                    ; preds = %111, %107
  %125 = icmp slt i32 0, %24
  br i1 %125, label %.lr.ph234, label %144

.lr.ph234:                                        ; preds = %124
  %126 = sext i32 %.126 to i64
  %127 = sext i32 %.022242 to i64
  br label %128

; <label>:128:                                    ; preds = %.lr.ph234, %143
  %indvars.iv236 = phi i64 [ 0, %.lr.ph234 ], [ %indvars.iv.next237, %143 ]
  call void @unroll_loop(i32 57)
  %129 = icmp sge i64 %indvars.iv236, %127
  br i1 %129, label %130, label %137

; <label>:130:                                    ; preds = %128
  %131 = icmp sle i64 %indvars.iv236, %126
  br i1 %131, label %132, label %137

; <label>:132:                                    ; preds = %130
  %133 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %134 = sub nsw i64 %indvars.iv243, 1
  %135 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %133, i64 0, i64 %134
  %136 = getelementptr inbounds [258 x i8], [258 x i8]* %135, i64 0, i64 %indvars.iv236
  store i8 0, i8* %136, align 1
  br label %142

; <label>:137:                                    ; preds = %130, %128
  %138 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %139 = sub nsw i64 %indvars.iv243, 1
  %140 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %138, i64 0, i64 %139
  %141 = getelementptr inbounds [258 x i8], [258 x i8]* %140, i64 0, i64 %indvars.iv236
  store i8 15, i8* %141, align 1
  br label %142

; <label>:142:                                    ; preds = %137, %132
  br label %143

; <label>:143:                                    ; preds = %142
  %indvars.iv.next237 = add nuw nsw i64 %indvars.iv236, 1
  %wide.trip.count238 = zext i32 %67 to i64
  %exitcond239 = icmp ne i64 %indvars.iv.next237, %wide.trip.count238
  br i1 %exitcond239, label %128, label %._crit_edge235

._crit_edge235:                                   ; preds = %143
  br label %144

; <label>:144:                                    ; preds = %._crit_edge235, %124
  %indvars.iv.next244 = add nsw i64 %indvars.iv243, -1
  %145 = add nsw i32 %.126, 1
  %146 = sub nsw i32 %.050240, %.148
  %147 = icmp sgt i64 %indvars.iv.next244, 0
  br i1 %147, label %71, label %148

; <label>:148:                                    ; preds = %144
  %149 = add i32 %23, 2
  br label %150

; <label>:150:                                    ; preds = %148, %2013
  %.034227 = phi i32 [ 0, %148 ], [ %2014, %2013 ]
  call void @unroll_loop(i32 58)
  br label %151

; <label>:151:                                    ; preds = %150, %153
  %indvars.iv153 = phi i64 [ 0, %150 ], [ %indvars.iv.next154, %153 ]
  %152 = getelementptr inbounds [6 x i32], [6 x i32]* %3, i64 0, i64 %indvars.iv153
  store i32 0, i32* %152, align 4
  br label %153

; <label>:153:                                    ; preds = %151
  %indvars.iv.next154 = add nuw nsw i64 %indvars.iv153, 1
  %wide.trip.count155 = zext i32 %.346 to i64
  %exitcond156 = icmp ne i64 %indvars.iv.next154, %wide.trip.count155
  br i1 %exitcond156, label %151, label %154

; <label>:154:                                    ; preds = %153
  br label %155

; <label>:155:                                    ; preds = %154, %163
  %indvars.iv166 = phi i64 [ 0, %154 ], [ %indvars.iv.next167, %163 ]
  call void @unroll_loop(i32 59)
  %156 = icmp slt i32 0, %24
  br i1 %156, label %.lr.ph159, label %162

.lr.ph159:                                        ; preds = %155
  br label %157

; <label>:157:                                    ; preds = %.lr.ph159, %161
  %indvars.iv161 = phi i64 [ 0, %.lr.ph159 ], [ %indvars.iv.next162, %161 ]
  call void @unroll_loop(i32 60)
  %158 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %159 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %158, i64 0, i64 %indvars.iv166
  %160 = getelementptr inbounds [258 x i32], [258 x i32]* %159, i64 0, i64 %indvars.iv161
  store i32 0, i32* %160, align 4
  br label %161

; <label>:161:                                    ; preds = %157
  %indvars.iv.next162 = add nuw nsw i64 %indvars.iv161, 1
  %wide.trip.count163 = zext i32 %149 to i64
  %exitcond164 = icmp ne i64 %indvars.iv.next162, %wide.trip.count163
  br i1 %exitcond164, label %157, label %._crit_edge160

._crit_edge160:                                   ; preds = %161
  br label %162

; <label>:162:                                    ; preds = %._crit_edge160, %155
  br label %163

; <label>:163:                                    ; preds = %162
  %indvars.iv.next167 = add nuw nsw i64 %indvars.iv166, 1
  %wide.trip.count168 = zext i32 %.346 to i64
  %exitcond169 = icmp ne i64 %indvars.iv.next167, %wide.trip.count168
  br i1 %exitcond169, label %155, label %164

; <label>:164:                                    ; preds = %163
  %165 = icmp eq i32 %.346, 6
  br i1 %165, label %166, label %216

; <label>:166:                                    ; preds = %164
  %167 = icmp slt i32 0, %24
  br i1 %167, label %.lr.ph172, label %215

.lr.ph172:                                        ; preds = %166
  br label %168

; <label>:168:                                    ; preds = %.lr.ph172, %214
  %indvars.iv174 = phi i64 [ 0, %.lr.ph172 ], [ %indvars.iv.next175, %214 ]
  call void @unroll_loop(i32 61)
  %169 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %170 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %169, i64 0, i64 1
  %171 = getelementptr inbounds [258 x i8], [258 x i8]* %170, i64 0, i64 %indvars.iv174
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = shl i32 %173, 16
  %175 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %176 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %175, i64 0, i64 0
  %177 = getelementptr inbounds [258 x i8], [258 x i8]* %176, i64 0, i64 %indvars.iv174
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = or i32 %174, %179
  %181 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %182 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %181, i64 0, i64 %indvars.iv174
  %183 = getelementptr inbounds [4 x i32], [4 x i32]* %182, i64 0, i64 0
  store i32 %180, i32* %183, align 8
  %184 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %185 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %184, i64 0, i64 3
  %186 = getelementptr inbounds [258 x i8], [258 x i8]* %185, i64 0, i64 %indvars.iv174
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = shl i32 %188, 16
  %190 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %191 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %190, i64 0, i64 2
  %192 = getelementptr inbounds [258 x i8], [258 x i8]* %191, i64 0, i64 %indvars.iv174
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i32
  %195 = or i32 %189, %194
  %196 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %197 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %196, i64 0, i64 %indvars.iv174
  %198 = getelementptr inbounds [4 x i32], [4 x i32]* %197, i64 0, i64 1
  store i32 %195, i32* %198, align 4
  %199 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %200 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %199, i64 0, i64 5
  %201 = getelementptr inbounds [258 x i8], [258 x i8]* %200, i64 0, i64 %indvars.iv174
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = shl i32 %203, 16
  %205 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %206 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %205, i64 0, i64 4
  %207 = getelementptr inbounds [258 x i8], [258 x i8]* %206, i64 0, i64 %indvars.iv174
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = or i32 %204, %209
  %211 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %212 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %211, i64 0, i64 %indvars.iv174
  %213 = getelementptr inbounds [4 x i32], [4 x i32]* %212, i64 0, i64 2
  store i32 %210, i32* %213, align 8
  br label %214

; <label>:214:                                    ; preds = %168
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %wide.trip.count176 = zext i32 %149 to i64
  %exitcond177 = icmp ne i64 %indvars.iv.next175, %wide.trip.count176
  br i1 %exitcond177, label %168, label %._crit_edge173

._crit_edge173:                                   ; preds = %214
  br label %215

; <label>:215:                                    ; preds = %._crit_edge173, %166
  br label %216

; <label>:216:                                    ; preds = %215, %164
  %217 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %218 = load i32, i32* %217, align 4
  %219 = icmp sge i32 0, %218
  br i1 %219, label %221, label %.lr.ph211

.lr.ph211:                                        ; preds = %216
  br label %222

._crit_edge212:                                   ; preds = %1978
  %split213.wide = phi i64 [ %indvars.iv.next216, %1978 ]
  %split214 = phi i32 [ %1398, %1978 ]
  %220 = trunc i64 %split213.wide to i32
  br label %221

; <label>:221:                                    ; preds = %._crit_edge212, %216
  %.136.lcssa = phi i32 [ %220, %._crit_edge212 ], [ 0, %216 ]
  %.029.lcssa = phi i32 [ %split214, %._crit_edge212 ], [ 0, %216 ]
  br label %1982

; <label>:222:                                    ; preds = %.lr.ph211, %1978
  %indvars.iv215 = phi i64 [ 0, %.lr.ph211 ], [ %indvars.iv.next216, %1978 ]
  %.123209 = phi i32 [ 0, %.lr.ph211 ], [ %1979, %1978 ]
  %.029208 = phi i32 [ 0, %.lr.ph211 ], [ %1398, %1978 ]
  call void @unroll_loop(i32 62)
  %223 = add nsw i32 %.123209, 50
  %224 = sub nsw i32 %223, 1
  %225 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %226 = load i32, i32* %225, align 4
  %227 = icmp sge i32 %224, %226
  br i1 %227, label %228, label %232

; <label>:228:                                    ; preds = %222
  %229 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %230 = load i32, i32* %229, align 4
  %231 = sub nsw i32 %230, 1
  br label %232

; <label>:232:                                    ; preds = %228, %222
  %.227 = phi i32 [ %231, %228 ], [ %224, %222 ]
  br label %233

; <label>:233:                                    ; preds = %232, %235
  %indvars.iv179 = phi i64 [ 0, %232 ], [ %indvars.iv.next180, %235 ]
  call void @unroll_loop(i32 63)
  %234 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 %indvars.iv179
  store i16 0, i16* %234, align 2
  br label %235

; <label>:235:                                    ; preds = %233
  %indvars.iv.next180 = add nuw nsw i64 %indvars.iv179, 1
  %wide.trip.count181 = zext i32 %.346 to i64
  %exitcond182 = icmp ne i64 %indvars.iv.next180, %wide.trip.count181
  br i1 %exitcond182, label %233, label %236

; <label>:236:                                    ; preds = %235
  %237 = icmp eq i32 %.346, 6
  br i1 %237, label %238, label %1360

; <label>:238:                                    ; preds = %236
  %239 = sub nsw i32 %.227, %.123209
  %240 = add nsw i32 %239, 1
  %241 = icmp eq i32 50, %240
  br i1 %241, label %242, label %1360

; <label>:242:                                    ; preds = %238
  %243 = sext i32 %.123209 to i64
  %244 = getelementptr inbounds i16, i16* %7, i64 %243
  %245 = load i16, i16* %244, align 2
  %246 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %247 = zext i16 %245 to i64
  %248 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %246, i64 0, i64 %247
  %249 = getelementptr inbounds [4 x i32], [4 x i32]* %248, i64 0, i64 0
  %250 = load i32, i32* %249, align 8
  %251 = add i32 0, %250
  %252 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %253 = zext i16 %245 to i64
  %254 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %252, i64 0, i64 %253
  %255 = getelementptr inbounds [4 x i32], [4 x i32]* %254, i64 0, i64 1
  %256 = load i32, i32* %255, align 4
  %257 = add i32 0, %256
  %258 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %259 = zext i16 %245 to i64
  %260 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %258, i64 0, i64 %259
  %261 = getelementptr inbounds [4 x i32], [4 x i32]* %260, i64 0, i64 2
  %262 = load i32, i32* %261, align 8
  %263 = add i32 0, %262
  %264 = add nsw i32 %.123209, 1
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds i16, i16* %7, i64 %265
  %267 = load i16, i16* %266, align 2
  %268 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %269 = zext i16 %267 to i64
  %270 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %268, i64 0, i64 %269
  %271 = getelementptr inbounds [4 x i32], [4 x i32]* %270, i64 0, i64 0
  %272 = load i32, i32* %271, align 8
  %273 = add i32 %251, %272
  %274 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %275 = zext i16 %267 to i64
  %276 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %274, i64 0, i64 %275
  %277 = getelementptr inbounds [4 x i32], [4 x i32]* %276, i64 0, i64 1
  %278 = load i32, i32* %277, align 4
  %279 = add i32 %257, %278
  %280 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %281 = zext i16 %267 to i64
  %282 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %280, i64 0, i64 %281
  %283 = getelementptr inbounds [4 x i32], [4 x i32]* %282, i64 0, i64 2
  %284 = load i32, i32* %283, align 8
  %285 = add i32 %263, %284
  %286 = add nsw i32 %.123209, 2
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds i16, i16* %7, i64 %287
  %289 = load i16, i16* %288, align 2
  %290 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %291 = zext i16 %289 to i64
  %292 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %290, i64 0, i64 %291
  %293 = getelementptr inbounds [4 x i32], [4 x i32]* %292, i64 0, i64 0
  %294 = load i32, i32* %293, align 8
  %295 = add i32 %273, %294
  %296 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %297 = zext i16 %289 to i64
  %298 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %296, i64 0, i64 %297
  %299 = getelementptr inbounds [4 x i32], [4 x i32]* %298, i64 0, i64 1
  %300 = load i32, i32* %299, align 4
  %301 = add i32 %279, %300
  %302 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %303 = zext i16 %289 to i64
  %304 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %302, i64 0, i64 %303
  %305 = getelementptr inbounds [4 x i32], [4 x i32]* %304, i64 0, i64 2
  %306 = load i32, i32* %305, align 8
  %307 = add i32 %285, %306
  %308 = add nsw i32 %.123209, 3
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i16, i16* %7, i64 %309
  %311 = load i16, i16* %310, align 2
  %312 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %313 = zext i16 %311 to i64
  %314 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %312, i64 0, i64 %313
  %315 = getelementptr inbounds [4 x i32], [4 x i32]* %314, i64 0, i64 0
  %316 = load i32, i32* %315, align 8
  %317 = add i32 %295, %316
  %318 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %319 = zext i16 %311 to i64
  %320 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %318, i64 0, i64 %319
  %321 = getelementptr inbounds [4 x i32], [4 x i32]* %320, i64 0, i64 1
  %322 = load i32, i32* %321, align 4
  %323 = add i32 %301, %322
  %324 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %325 = zext i16 %311 to i64
  %326 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %324, i64 0, i64 %325
  %327 = getelementptr inbounds [4 x i32], [4 x i32]* %326, i64 0, i64 2
  %328 = load i32, i32* %327, align 8
  %329 = add i32 %307, %328
  %330 = add nsw i32 %.123209, 4
  %331 = sext i32 %330 to i64
  %332 = getelementptr inbounds i16, i16* %7, i64 %331
  %333 = load i16, i16* %332, align 2
  %334 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %335 = zext i16 %333 to i64
  %336 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %334, i64 0, i64 %335
  %337 = getelementptr inbounds [4 x i32], [4 x i32]* %336, i64 0, i64 0
  %338 = load i32, i32* %337, align 8
  %339 = add i32 %317, %338
  %340 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %341 = zext i16 %333 to i64
  %342 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %340, i64 0, i64 %341
  %343 = getelementptr inbounds [4 x i32], [4 x i32]* %342, i64 0, i64 1
  %344 = load i32, i32* %343, align 4
  %345 = add i32 %323, %344
  %346 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %347 = zext i16 %333 to i64
  %348 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %346, i64 0, i64 %347
  %349 = getelementptr inbounds [4 x i32], [4 x i32]* %348, i64 0, i64 2
  %350 = load i32, i32* %349, align 8
  %351 = add i32 %329, %350
  %352 = add nsw i32 %.123209, 5
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds i16, i16* %7, i64 %353
  %355 = load i16, i16* %354, align 2
  %356 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %357 = zext i16 %355 to i64
  %358 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %356, i64 0, i64 %357
  %359 = getelementptr inbounds [4 x i32], [4 x i32]* %358, i64 0, i64 0
  %360 = load i32, i32* %359, align 8
  %361 = add i32 %339, %360
  %362 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %363 = zext i16 %355 to i64
  %364 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %362, i64 0, i64 %363
  %365 = getelementptr inbounds [4 x i32], [4 x i32]* %364, i64 0, i64 1
  %366 = load i32, i32* %365, align 4
  %367 = add i32 %345, %366
  %368 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %369 = zext i16 %355 to i64
  %370 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %368, i64 0, i64 %369
  %371 = getelementptr inbounds [4 x i32], [4 x i32]* %370, i64 0, i64 2
  %372 = load i32, i32* %371, align 8
  %373 = add i32 %351, %372
  %374 = add nsw i32 %.123209, 6
  %375 = sext i32 %374 to i64
  %376 = getelementptr inbounds i16, i16* %7, i64 %375
  %377 = load i16, i16* %376, align 2
  %378 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %379 = zext i16 %377 to i64
  %380 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %378, i64 0, i64 %379
  %381 = getelementptr inbounds [4 x i32], [4 x i32]* %380, i64 0, i64 0
  %382 = load i32, i32* %381, align 8
  %383 = add i32 %361, %382
  %384 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %385 = zext i16 %377 to i64
  %386 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %384, i64 0, i64 %385
  %387 = getelementptr inbounds [4 x i32], [4 x i32]* %386, i64 0, i64 1
  %388 = load i32, i32* %387, align 4
  %389 = add i32 %367, %388
  %390 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %391 = zext i16 %377 to i64
  %392 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %390, i64 0, i64 %391
  %393 = getelementptr inbounds [4 x i32], [4 x i32]* %392, i64 0, i64 2
  %394 = load i32, i32* %393, align 8
  %395 = add i32 %373, %394
  %396 = add nsw i32 %.123209, 7
  %397 = sext i32 %396 to i64
  %398 = getelementptr inbounds i16, i16* %7, i64 %397
  %399 = load i16, i16* %398, align 2
  %400 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %401 = zext i16 %399 to i64
  %402 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %400, i64 0, i64 %401
  %403 = getelementptr inbounds [4 x i32], [4 x i32]* %402, i64 0, i64 0
  %404 = load i32, i32* %403, align 8
  %405 = add i32 %383, %404
  %406 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %407 = zext i16 %399 to i64
  %408 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %406, i64 0, i64 %407
  %409 = getelementptr inbounds [4 x i32], [4 x i32]* %408, i64 0, i64 1
  %410 = load i32, i32* %409, align 4
  %411 = add i32 %389, %410
  %412 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %413 = zext i16 %399 to i64
  %414 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %412, i64 0, i64 %413
  %415 = getelementptr inbounds [4 x i32], [4 x i32]* %414, i64 0, i64 2
  %416 = load i32, i32* %415, align 8
  %417 = add i32 %395, %416
  %418 = add nsw i32 %.123209, 8
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i16, i16* %7, i64 %419
  %421 = load i16, i16* %420, align 2
  %422 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %423 = zext i16 %421 to i64
  %424 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %422, i64 0, i64 %423
  %425 = getelementptr inbounds [4 x i32], [4 x i32]* %424, i64 0, i64 0
  %426 = load i32, i32* %425, align 8
  %427 = add i32 %405, %426
  %428 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %429 = zext i16 %421 to i64
  %430 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %428, i64 0, i64 %429
  %431 = getelementptr inbounds [4 x i32], [4 x i32]* %430, i64 0, i64 1
  %432 = load i32, i32* %431, align 4
  %433 = add i32 %411, %432
  %434 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %435 = zext i16 %421 to i64
  %436 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %434, i64 0, i64 %435
  %437 = getelementptr inbounds [4 x i32], [4 x i32]* %436, i64 0, i64 2
  %438 = load i32, i32* %437, align 8
  %439 = add i32 %417, %438
  %440 = add nsw i32 %.123209, 9
  %441 = sext i32 %440 to i64
  %442 = getelementptr inbounds i16, i16* %7, i64 %441
  %443 = load i16, i16* %442, align 2
  %444 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %445 = zext i16 %443 to i64
  %446 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %444, i64 0, i64 %445
  %447 = getelementptr inbounds [4 x i32], [4 x i32]* %446, i64 0, i64 0
  %448 = load i32, i32* %447, align 8
  %449 = add i32 %427, %448
  %450 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %451 = zext i16 %443 to i64
  %452 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %450, i64 0, i64 %451
  %453 = getelementptr inbounds [4 x i32], [4 x i32]* %452, i64 0, i64 1
  %454 = load i32, i32* %453, align 4
  %455 = add i32 %433, %454
  %456 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %457 = zext i16 %443 to i64
  %458 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %456, i64 0, i64 %457
  %459 = getelementptr inbounds [4 x i32], [4 x i32]* %458, i64 0, i64 2
  %460 = load i32, i32* %459, align 8
  %461 = add i32 %439, %460
  %462 = add nsw i32 %.123209, 10
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds i16, i16* %7, i64 %463
  %465 = load i16, i16* %464, align 2
  %466 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %467 = zext i16 %465 to i64
  %468 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %466, i64 0, i64 %467
  %469 = getelementptr inbounds [4 x i32], [4 x i32]* %468, i64 0, i64 0
  %470 = load i32, i32* %469, align 8
  %471 = add i32 %449, %470
  %472 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %473 = zext i16 %465 to i64
  %474 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %472, i64 0, i64 %473
  %475 = getelementptr inbounds [4 x i32], [4 x i32]* %474, i64 0, i64 1
  %476 = load i32, i32* %475, align 4
  %477 = add i32 %455, %476
  %478 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %479 = zext i16 %465 to i64
  %480 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %478, i64 0, i64 %479
  %481 = getelementptr inbounds [4 x i32], [4 x i32]* %480, i64 0, i64 2
  %482 = load i32, i32* %481, align 8
  %483 = add i32 %461, %482
  %484 = add nsw i32 %.123209, 11
  %485 = sext i32 %484 to i64
  %486 = getelementptr inbounds i16, i16* %7, i64 %485
  %487 = load i16, i16* %486, align 2
  %488 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %489 = zext i16 %487 to i64
  %490 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %488, i64 0, i64 %489
  %491 = getelementptr inbounds [4 x i32], [4 x i32]* %490, i64 0, i64 0
  %492 = load i32, i32* %491, align 8
  %493 = add i32 %471, %492
  %494 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %495 = zext i16 %487 to i64
  %496 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %494, i64 0, i64 %495
  %497 = getelementptr inbounds [4 x i32], [4 x i32]* %496, i64 0, i64 1
  %498 = load i32, i32* %497, align 4
  %499 = add i32 %477, %498
  %500 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %501 = zext i16 %487 to i64
  %502 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %500, i64 0, i64 %501
  %503 = getelementptr inbounds [4 x i32], [4 x i32]* %502, i64 0, i64 2
  %504 = load i32, i32* %503, align 8
  %505 = add i32 %483, %504
  %506 = add nsw i32 %.123209, 12
  %507 = sext i32 %506 to i64
  %508 = getelementptr inbounds i16, i16* %7, i64 %507
  %509 = load i16, i16* %508, align 2
  %510 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %511 = zext i16 %509 to i64
  %512 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %510, i64 0, i64 %511
  %513 = getelementptr inbounds [4 x i32], [4 x i32]* %512, i64 0, i64 0
  %514 = load i32, i32* %513, align 8
  %515 = add i32 %493, %514
  %516 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %517 = zext i16 %509 to i64
  %518 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %516, i64 0, i64 %517
  %519 = getelementptr inbounds [4 x i32], [4 x i32]* %518, i64 0, i64 1
  %520 = load i32, i32* %519, align 4
  %521 = add i32 %499, %520
  %522 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %523 = zext i16 %509 to i64
  %524 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %522, i64 0, i64 %523
  %525 = getelementptr inbounds [4 x i32], [4 x i32]* %524, i64 0, i64 2
  %526 = load i32, i32* %525, align 8
  %527 = add i32 %505, %526
  %528 = add nsw i32 %.123209, 13
  %529 = sext i32 %528 to i64
  %530 = getelementptr inbounds i16, i16* %7, i64 %529
  %531 = load i16, i16* %530, align 2
  %532 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %533 = zext i16 %531 to i64
  %534 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %532, i64 0, i64 %533
  %535 = getelementptr inbounds [4 x i32], [4 x i32]* %534, i64 0, i64 0
  %536 = load i32, i32* %535, align 8
  %537 = add i32 %515, %536
  %538 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %539 = zext i16 %531 to i64
  %540 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %538, i64 0, i64 %539
  %541 = getelementptr inbounds [4 x i32], [4 x i32]* %540, i64 0, i64 1
  %542 = load i32, i32* %541, align 4
  %543 = add i32 %521, %542
  %544 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %545 = zext i16 %531 to i64
  %546 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %544, i64 0, i64 %545
  %547 = getelementptr inbounds [4 x i32], [4 x i32]* %546, i64 0, i64 2
  %548 = load i32, i32* %547, align 8
  %549 = add i32 %527, %548
  %550 = add nsw i32 %.123209, 14
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds i16, i16* %7, i64 %551
  %553 = load i16, i16* %552, align 2
  %554 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %555 = zext i16 %553 to i64
  %556 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %554, i64 0, i64 %555
  %557 = getelementptr inbounds [4 x i32], [4 x i32]* %556, i64 0, i64 0
  %558 = load i32, i32* %557, align 8
  %559 = add i32 %537, %558
  %560 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %561 = zext i16 %553 to i64
  %562 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %560, i64 0, i64 %561
  %563 = getelementptr inbounds [4 x i32], [4 x i32]* %562, i64 0, i64 1
  %564 = load i32, i32* %563, align 4
  %565 = add i32 %543, %564
  %566 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %567 = zext i16 %553 to i64
  %568 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %566, i64 0, i64 %567
  %569 = getelementptr inbounds [4 x i32], [4 x i32]* %568, i64 0, i64 2
  %570 = load i32, i32* %569, align 8
  %571 = add i32 %549, %570
  %572 = add nsw i32 %.123209, 15
  %573 = sext i32 %572 to i64
  %574 = getelementptr inbounds i16, i16* %7, i64 %573
  %575 = load i16, i16* %574, align 2
  %576 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %577 = zext i16 %575 to i64
  %578 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %576, i64 0, i64 %577
  %579 = getelementptr inbounds [4 x i32], [4 x i32]* %578, i64 0, i64 0
  %580 = load i32, i32* %579, align 8
  %581 = add i32 %559, %580
  %582 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %583 = zext i16 %575 to i64
  %584 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %582, i64 0, i64 %583
  %585 = getelementptr inbounds [4 x i32], [4 x i32]* %584, i64 0, i64 1
  %586 = load i32, i32* %585, align 4
  %587 = add i32 %565, %586
  %588 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %589 = zext i16 %575 to i64
  %590 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %588, i64 0, i64 %589
  %591 = getelementptr inbounds [4 x i32], [4 x i32]* %590, i64 0, i64 2
  %592 = load i32, i32* %591, align 8
  %593 = add i32 %571, %592
  %594 = add nsw i32 %.123209, 16
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds i16, i16* %7, i64 %595
  %597 = load i16, i16* %596, align 2
  %598 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %599 = zext i16 %597 to i64
  %600 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %598, i64 0, i64 %599
  %601 = getelementptr inbounds [4 x i32], [4 x i32]* %600, i64 0, i64 0
  %602 = load i32, i32* %601, align 8
  %603 = add i32 %581, %602
  %604 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %605 = zext i16 %597 to i64
  %606 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %604, i64 0, i64 %605
  %607 = getelementptr inbounds [4 x i32], [4 x i32]* %606, i64 0, i64 1
  %608 = load i32, i32* %607, align 4
  %609 = add i32 %587, %608
  %610 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %611 = zext i16 %597 to i64
  %612 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %610, i64 0, i64 %611
  %613 = getelementptr inbounds [4 x i32], [4 x i32]* %612, i64 0, i64 2
  %614 = load i32, i32* %613, align 8
  %615 = add i32 %593, %614
  %616 = add nsw i32 %.123209, 17
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds i16, i16* %7, i64 %617
  %619 = load i16, i16* %618, align 2
  %620 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %621 = zext i16 %619 to i64
  %622 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %620, i64 0, i64 %621
  %623 = getelementptr inbounds [4 x i32], [4 x i32]* %622, i64 0, i64 0
  %624 = load i32, i32* %623, align 8
  %625 = add i32 %603, %624
  %626 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %627 = zext i16 %619 to i64
  %628 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %626, i64 0, i64 %627
  %629 = getelementptr inbounds [4 x i32], [4 x i32]* %628, i64 0, i64 1
  %630 = load i32, i32* %629, align 4
  %631 = add i32 %609, %630
  %632 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %633 = zext i16 %619 to i64
  %634 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %632, i64 0, i64 %633
  %635 = getelementptr inbounds [4 x i32], [4 x i32]* %634, i64 0, i64 2
  %636 = load i32, i32* %635, align 8
  %637 = add i32 %615, %636
  %638 = add nsw i32 %.123209, 18
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds i16, i16* %7, i64 %639
  %641 = load i16, i16* %640, align 2
  %642 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %643 = zext i16 %641 to i64
  %644 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %642, i64 0, i64 %643
  %645 = getelementptr inbounds [4 x i32], [4 x i32]* %644, i64 0, i64 0
  %646 = load i32, i32* %645, align 8
  %647 = add i32 %625, %646
  %648 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %649 = zext i16 %641 to i64
  %650 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %648, i64 0, i64 %649
  %651 = getelementptr inbounds [4 x i32], [4 x i32]* %650, i64 0, i64 1
  %652 = load i32, i32* %651, align 4
  %653 = add i32 %631, %652
  %654 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %655 = zext i16 %641 to i64
  %656 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %654, i64 0, i64 %655
  %657 = getelementptr inbounds [4 x i32], [4 x i32]* %656, i64 0, i64 2
  %658 = load i32, i32* %657, align 8
  %659 = add i32 %637, %658
  %660 = add nsw i32 %.123209, 19
  %661 = sext i32 %660 to i64
  %662 = getelementptr inbounds i16, i16* %7, i64 %661
  %663 = load i16, i16* %662, align 2
  %664 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %665 = zext i16 %663 to i64
  %666 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %664, i64 0, i64 %665
  %667 = getelementptr inbounds [4 x i32], [4 x i32]* %666, i64 0, i64 0
  %668 = load i32, i32* %667, align 8
  %669 = add i32 %647, %668
  %670 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %671 = zext i16 %663 to i64
  %672 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %670, i64 0, i64 %671
  %673 = getelementptr inbounds [4 x i32], [4 x i32]* %672, i64 0, i64 1
  %674 = load i32, i32* %673, align 4
  %675 = add i32 %653, %674
  %676 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %677 = zext i16 %663 to i64
  %678 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %676, i64 0, i64 %677
  %679 = getelementptr inbounds [4 x i32], [4 x i32]* %678, i64 0, i64 2
  %680 = load i32, i32* %679, align 8
  %681 = add i32 %659, %680
  %682 = add nsw i32 %.123209, 20
  %683 = sext i32 %682 to i64
  %684 = getelementptr inbounds i16, i16* %7, i64 %683
  %685 = load i16, i16* %684, align 2
  %686 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %687 = zext i16 %685 to i64
  %688 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %686, i64 0, i64 %687
  %689 = getelementptr inbounds [4 x i32], [4 x i32]* %688, i64 0, i64 0
  %690 = load i32, i32* %689, align 8
  %691 = add i32 %669, %690
  %692 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %693 = zext i16 %685 to i64
  %694 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %692, i64 0, i64 %693
  %695 = getelementptr inbounds [4 x i32], [4 x i32]* %694, i64 0, i64 1
  %696 = load i32, i32* %695, align 4
  %697 = add i32 %675, %696
  %698 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %699 = zext i16 %685 to i64
  %700 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %698, i64 0, i64 %699
  %701 = getelementptr inbounds [4 x i32], [4 x i32]* %700, i64 0, i64 2
  %702 = load i32, i32* %701, align 8
  %703 = add i32 %681, %702
  %704 = add nsw i32 %.123209, 21
  %705 = sext i32 %704 to i64
  %706 = getelementptr inbounds i16, i16* %7, i64 %705
  %707 = load i16, i16* %706, align 2
  %708 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %709 = zext i16 %707 to i64
  %710 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %708, i64 0, i64 %709
  %711 = getelementptr inbounds [4 x i32], [4 x i32]* %710, i64 0, i64 0
  %712 = load i32, i32* %711, align 8
  %713 = add i32 %691, %712
  %714 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %715 = zext i16 %707 to i64
  %716 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %714, i64 0, i64 %715
  %717 = getelementptr inbounds [4 x i32], [4 x i32]* %716, i64 0, i64 1
  %718 = load i32, i32* %717, align 4
  %719 = add i32 %697, %718
  %720 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %721 = zext i16 %707 to i64
  %722 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %720, i64 0, i64 %721
  %723 = getelementptr inbounds [4 x i32], [4 x i32]* %722, i64 0, i64 2
  %724 = load i32, i32* %723, align 8
  %725 = add i32 %703, %724
  %726 = add nsw i32 %.123209, 22
  %727 = sext i32 %726 to i64
  %728 = getelementptr inbounds i16, i16* %7, i64 %727
  %729 = load i16, i16* %728, align 2
  %730 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %731 = zext i16 %729 to i64
  %732 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %730, i64 0, i64 %731
  %733 = getelementptr inbounds [4 x i32], [4 x i32]* %732, i64 0, i64 0
  %734 = load i32, i32* %733, align 8
  %735 = add i32 %713, %734
  %736 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %737 = zext i16 %729 to i64
  %738 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %736, i64 0, i64 %737
  %739 = getelementptr inbounds [4 x i32], [4 x i32]* %738, i64 0, i64 1
  %740 = load i32, i32* %739, align 4
  %741 = add i32 %719, %740
  %742 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %743 = zext i16 %729 to i64
  %744 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %742, i64 0, i64 %743
  %745 = getelementptr inbounds [4 x i32], [4 x i32]* %744, i64 0, i64 2
  %746 = load i32, i32* %745, align 8
  %747 = add i32 %725, %746
  %748 = add nsw i32 %.123209, 23
  %749 = sext i32 %748 to i64
  %750 = getelementptr inbounds i16, i16* %7, i64 %749
  %751 = load i16, i16* %750, align 2
  %752 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %753 = zext i16 %751 to i64
  %754 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %752, i64 0, i64 %753
  %755 = getelementptr inbounds [4 x i32], [4 x i32]* %754, i64 0, i64 0
  %756 = load i32, i32* %755, align 8
  %757 = add i32 %735, %756
  %758 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %759 = zext i16 %751 to i64
  %760 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %758, i64 0, i64 %759
  %761 = getelementptr inbounds [4 x i32], [4 x i32]* %760, i64 0, i64 1
  %762 = load i32, i32* %761, align 4
  %763 = add i32 %741, %762
  %764 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %765 = zext i16 %751 to i64
  %766 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %764, i64 0, i64 %765
  %767 = getelementptr inbounds [4 x i32], [4 x i32]* %766, i64 0, i64 2
  %768 = load i32, i32* %767, align 8
  %769 = add i32 %747, %768
  %770 = add nsw i32 %.123209, 24
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds i16, i16* %7, i64 %771
  %773 = load i16, i16* %772, align 2
  %774 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %775 = zext i16 %773 to i64
  %776 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %774, i64 0, i64 %775
  %777 = getelementptr inbounds [4 x i32], [4 x i32]* %776, i64 0, i64 0
  %778 = load i32, i32* %777, align 8
  %779 = add i32 %757, %778
  %780 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %781 = zext i16 %773 to i64
  %782 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %780, i64 0, i64 %781
  %783 = getelementptr inbounds [4 x i32], [4 x i32]* %782, i64 0, i64 1
  %784 = load i32, i32* %783, align 4
  %785 = add i32 %763, %784
  %786 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %787 = zext i16 %773 to i64
  %788 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %786, i64 0, i64 %787
  %789 = getelementptr inbounds [4 x i32], [4 x i32]* %788, i64 0, i64 2
  %790 = load i32, i32* %789, align 8
  %791 = add i32 %769, %790
  %792 = add nsw i32 %.123209, 25
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds i16, i16* %7, i64 %793
  %795 = load i16, i16* %794, align 2
  %796 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %797 = zext i16 %795 to i64
  %798 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %796, i64 0, i64 %797
  %799 = getelementptr inbounds [4 x i32], [4 x i32]* %798, i64 0, i64 0
  %800 = load i32, i32* %799, align 8
  %801 = add i32 %779, %800
  %802 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %803 = zext i16 %795 to i64
  %804 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %802, i64 0, i64 %803
  %805 = getelementptr inbounds [4 x i32], [4 x i32]* %804, i64 0, i64 1
  %806 = load i32, i32* %805, align 4
  %807 = add i32 %785, %806
  %808 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %809 = zext i16 %795 to i64
  %810 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %808, i64 0, i64 %809
  %811 = getelementptr inbounds [4 x i32], [4 x i32]* %810, i64 0, i64 2
  %812 = load i32, i32* %811, align 8
  %813 = add i32 %791, %812
  %814 = add nsw i32 %.123209, 26
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds i16, i16* %7, i64 %815
  %817 = load i16, i16* %816, align 2
  %818 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %819 = zext i16 %817 to i64
  %820 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %818, i64 0, i64 %819
  %821 = getelementptr inbounds [4 x i32], [4 x i32]* %820, i64 0, i64 0
  %822 = load i32, i32* %821, align 8
  %823 = add i32 %801, %822
  %824 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %825 = zext i16 %817 to i64
  %826 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %824, i64 0, i64 %825
  %827 = getelementptr inbounds [4 x i32], [4 x i32]* %826, i64 0, i64 1
  %828 = load i32, i32* %827, align 4
  %829 = add i32 %807, %828
  %830 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %831 = zext i16 %817 to i64
  %832 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %830, i64 0, i64 %831
  %833 = getelementptr inbounds [4 x i32], [4 x i32]* %832, i64 0, i64 2
  %834 = load i32, i32* %833, align 8
  %835 = add i32 %813, %834
  %836 = add nsw i32 %.123209, 27
  %837 = sext i32 %836 to i64
  %838 = getelementptr inbounds i16, i16* %7, i64 %837
  %839 = load i16, i16* %838, align 2
  %840 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %841 = zext i16 %839 to i64
  %842 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %840, i64 0, i64 %841
  %843 = getelementptr inbounds [4 x i32], [4 x i32]* %842, i64 0, i64 0
  %844 = load i32, i32* %843, align 8
  %845 = add i32 %823, %844
  %846 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %847 = zext i16 %839 to i64
  %848 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %846, i64 0, i64 %847
  %849 = getelementptr inbounds [4 x i32], [4 x i32]* %848, i64 0, i64 1
  %850 = load i32, i32* %849, align 4
  %851 = add i32 %829, %850
  %852 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %853 = zext i16 %839 to i64
  %854 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %852, i64 0, i64 %853
  %855 = getelementptr inbounds [4 x i32], [4 x i32]* %854, i64 0, i64 2
  %856 = load i32, i32* %855, align 8
  %857 = add i32 %835, %856
  %858 = add nsw i32 %.123209, 28
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds i16, i16* %7, i64 %859
  %861 = load i16, i16* %860, align 2
  %862 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %863 = zext i16 %861 to i64
  %864 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %862, i64 0, i64 %863
  %865 = getelementptr inbounds [4 x i32], [4 x i32]* %864, i64 0, i64 0
  %866 = load i32, i32* %865, align 8
  %867 = add i32 %845, %866
  %868 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %869 = zext i16 %861 to i64
  %870 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %868, i64 0, i64 %869
  %871 = getelementptr inbounds [4 x i32], [4 x i32]* %870, i64 0, i64 1
  %872 = load i32, i32* %871, align 4
  %873 = add i32 %851, %872
  %874 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %875 = zext i16 %861 to i64
  %876 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %874, i64 0, i64 %875
  %877 = getelementptr inbounds [4 x i32], [4 x i32]* %876, i64 0, i64 2
  %878 = load i32, i32* %877, align 8
  %879 = add i32 %857, %878
  %880 = add nsw i32 %.123209, 29
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds i16, i16* %7, i64 %881
  %883 = load i16, i16* %882, align 2
  %884 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %885 = zext i16 %883 to i64
  %886 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %884, i64 0, i64 %885
  %887 = getelementptr inbounds [4 x i32], [4 x i32]* %886, i64 0, i64 0
  %888 = load i32, i32* %887, align 8
  %889 = add i32 %867, %888
  %890 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %891 = zext i16 %883 to i64
  %892 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %890, i64 0, i64 %891
  %893 = getelementptr inbounds [4 x i32], [4 x i32]* %892, i64 0, i64 1
  %894 = load i32, i32* %893, align 4
  %895 = add i32 %873, %894
  %896 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %897 = zext i16 %883 to i64
  %898 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %896, i64 0, i64 %897
  %899 = getelementptr inbounds [4 x i32], [4 x i32]* %898, i64 0, i64 2
  %900 = load i32, i32* %899, align 8
  %901 = add i32 %879, %900
  %902 = add nsw i32 %.123209, 30
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds i16, i16* %7, i64 %903
  %905 = load i16, i16* %904, align 2
  %906 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %907 = zext i16 %905 to i64
  %908 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %906, i64 0, i64 %907
  %909 = getelementptr inbounds [4 x i32], [4 x i32]* %908, i64 0, i64 0
  %910 = load i32, i32* %909, align 8
  %911 = add i32 %889, %910
  %912 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %913 = zext i16 %905 to i64
  %914 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %912, i64 0, i64 %913
  %915 = getelementptr inbounds [4 x i32], [4 x i32]* %914, i64 0, i64 1
  %916 = load i32, i32* %915, align 4
  %917 = add i32 %895, %916
  %918 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %919 = zext i16 %905 to i64
  %920 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %918, i64 0, i64 %919
  %921 = getelementptr inbounds [4 x i32], [4 x i32]* %920, i64 0, i64 2
  %922 = load i32, i32* %921, align 8
  %923 = add i32 %901, %922
  %924 = add nsw i32 %.123209, 31
  %925 = sext i32 %924 to i64
  %926 = getelementptr inbounds i16, i16* %7, i64 %925
  %927 = load i16, i16* %926, align 2
  %928 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %929 = zext i16 %927 to i64
  %930 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %928, i64 0, i64 %929
  %931 = getelementptr inbounds [4 x i32], [4 x i32]* %930, i64 0, i64 0
  %932 = load i32, i32* %931, align 8
  %933 = add i32 %911, %932
  %934 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %935 = zext i16 %927 to i64
  %936 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %934, i64 0, i64 %935
  %937 = getelementptr inbounds [4 x i32], [4 x i32]* %936, i64 0, i64 1
  %938 = load i32, i32* %937, align 4
  %939 = add i32 %917, %938
  %940 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %941 = zext i16 %927 to i64
  %942 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %940, i64 0, i64 %941
  %943 = getelementptr inbounds [4 x i32], [4 x i32]* %942, i64 0, i64 2
  %944 = load i32, i32* %943, align 8
  %945 = add i32 %923, %944
  %946 = add nsw i32 %.123209, 32
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds i16, i16* %7, i64 %947
  %949 = load i16, i16* %948, align 2
  %950 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %951 = zext i16 %949 to i64
  %952 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %950, i64 0, i64 %951
  %953 = getelementptr inbounds [4 x i32], [4 x i32]* %952, i64 0, i64 0
  %954 = load i32, i32* %953, align 8
  %955 = add i32 %933, %954
  %956 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %957 = zext i16 %949 to i64
  %958 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %956, i64 0, i64 %957
  %959 = getelementptr inbounds [4 x i32], [4 x i32]* %958, i64 0, i64 1
  %960 = load i32, i32* %959, align 4
  %961 = add i32 %939, %960
  %962 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %963 = zext i16 %949 to i64
  %964 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %962, i64 0, i64 %963
  %965 = getelementptr inbounds [4 x i32], [4 x i32]* %964, i64 0, i64 2
  %966 = load i32, i32* %965, align 8
  %967 = add i32 %945, %966
  %968 = add nsw i32 %.123209, 33
  %969 = sext i32 %968 to i64
  %970 = getelementptr inbounds i16, i16* %7, i64 %969
  %971 = load i16, i16* %970, align 2
  %972 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %973 = zext i16 %971 to i64
  %974 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %972, i64 0, i64 %973
  %975 = getelementptr inbounds [4 x i32], [4 x i32]* %974, i64 0, i64 0
  %976 = load i32, i32* %975, align 8
  %977 = add i32 %955, %976
  %978 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %979 = zext i16 %971 to i64
  %980 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %978, i64 0, i64 %979
  %981 = getelementptr inbounds [4 x i32], [4 x i32]* %980, i64 0, i64 1
  %982 = load i32, i32* %981, align 4
  %983 = add i32 %961, %982
  %984 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %985 = zext i16 %971 to i64
  %986 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %984, i64 0, i64 %985
  %987 = getelementptr inbounds [4 x i32], [4 x i32]* %986, i64 0, i64 2
  %988 = load i32, i32* %987, align 8
  %989 = add i32 %967, %988
  %990 = add nsw i32 %.123209, 34
  %991 = sext i32 %990 to i64
  %992 = getelementptr inbounds i16, i16* %7, i64 %991
  %993 = load i16, i16* %992, align 2
  %994 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %995 = zext i16 %993 to i64
  %996 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %994, i64 0, i64 %995
  %997 = getelementptr inbounds [4 x i32], [4 x i32]* %996, i64 0, i64 0
  %998 = load i32, i32* %997, align 8
  %999 = add i32 %977, %998
  %1000 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1001 = zext i16 %993 to i64
  %1002 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1000, i64 0, i64 %1001
  %1003 = getelementptr inbounds [4 x i32], [4 x i32]* %1002, i64 0, i64 1
  %1004 = load i32, i32* %1003, align 4
  %1005 = add i32 %983, %1004
  %1006 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1007 = zext i16 %993 to i64
  %1008 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1006, i64 0, i64 %1007
  %1009 = getelementptr inbounds [4 x i32], [4 x i32]* %1008, i64 0, i64 2
  %1010 = load i32, i32* %1009, align 8
  %1011 = add i32 %989, %1010
  %1012 = add nsw i32 %.123209, 35
  %1013 = sext i32 %1012 to i64
  %1014 = getelementptr inbounds i16, i16* %7, i64 %1013
  %1015 = load i16, i16* %1014, align 2
  %1016 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1017 = zext i16 %1015 to i64
  %1018 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1016, i64 0, i64 %1017
  %1019 = getelementptr inbounds [4 x i32], [4 x i32]* %1018, i64 0, i64 0
  %1020 = load i32, i32* %1019, align 8
  %1021 = add i32 %999, %1020
  %1022 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1023 = zext i16 %1015 to i64
  %1024 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1022, i64 0, i64 %1023
  %1025 = getelementptr inbounds [4 x i32], [4 x i32]* %1024, i64 0, i64 1
  %1026 = load i32, i32* %1025, align 4
  %1027 = add i32 %1005, %1026
  %1028 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1029 = zext i16 %1015 to i64
  %1030 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1028, i64 0, i64 %1029
  %1031 = getelementptr inbounds [4 x i32], [4 x i32]* %1030, i64 0, i64 2
  %1032 = load i32, i32* %1031, align 8
  %1033 = add i32 %1011, %1032
  %1034 = add nsw i32 %.123209, 36
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds i16, i16* %7, i64 %1035
  %1037 = load i16, i16* %1036, align 2
  %1038 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1039 = zext i16 %1037 to i64
  %1040 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1038, i64 0, i64 %1039
  %1041 = getelementptr inbounds [4 x i32], [4 x i32]* %1040, i64 0, i64 0
  %1042 = load i32, i32* %1041, align 8
  %1043 = add i32 %1021, %1042
  %1044 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1045 = zext i16 %1037 to i64
  %1046 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1044, i64 0, i64 %1045
  %1047 = getelementptr inbounds [4 x i32], [4 x i32]* %1046, i64 0, i64 1
  %1048 = load i32, i32* %1047, align 4
  %1049 = add i32 %1027, %1048
  %1050 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1051 = zext i16 %1037 to i64
  %1052 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1050, i64 0, i64 %1051
  %1053 = getelementptr inbounds [4 x i32], [4 x i32]* %1052, i64 0, i64 2
  %1054 = load i32, i32* %1053, align 8
  %1055 = add i32 %1033, %1054
  %1056 = add nsw i32 %.123209, 37
  %1057 = sext i32 %1056 to i64
  %1058 = getelementptr inbounds i16, i16* %7, i64 %1057
  %1059 = load i16, i16* %1058, align 2
  %1060 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1061 = zext i16 %1059 to i64
  %1062 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1060, i64 0, i64 %1061
  %1063 = getelementptr inbounds [4 x i32], [4 x i32]* %1062, i64 0, i64 0
  %1064 = load i32, i32* %1063, align 8
  %1065 = add i32 %1043, %1064
  %1066 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1067 = zext i16 %1059 to i64
  %1068 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1066, i64 0, i64 %1067
  %1069 = getelementptr inbounds [4 x i32], [4 x i32]* %1068, i64 0, i64 1
  %1070 = load i32, i32* %1069, align 4
  %1071 = add i32 %1049, %1070
  %1072 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1073 = zext i16 %1059 to i64
  %1074 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1072, i64 0, i64 %1073
  %1075 = getelementptr inbounds [4 x i32], [4 x i32]* %1074, i64 0, i64 2
  %1076 = load i32, i32* %1075, align 8
  %1077 = add i32 %1055, %1076
  %1078 = add nsw i32 %.123209, 38
  %1079 = sext i32 %1078 to i64
  %1080 = getelementptr inbounds i16, i16* %7, i64 %1079
  %1081 = load i16, i16* %1080, align 2
  %1082 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1083 = zext i16 %1081 to i64
  %1084 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1082, i64 0, i64 %1083
  %1085 = getelementptr inbounds [4 x i32], [4 x i32]* %1084, i64 0, i64 0
  %1086 = load i32, i32* %1085, align 8
  %1087 = add i32 %1065, %1086
  %1088 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1089 = zext i16 %1081 to i64
  %1090 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1088, i64 0, i64 %1089
  %1091 = getelementptr inbounds [4 x i32], [4 x i32]* %1090, i64 0, i64 1
  %1092 = load i32, i32* %1091, align 4
  %1093 = add i32 %1071, %1092
  %1094 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1095 = zext i16 %1081 to i64
  %1096 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1094, i64 0, i64 %1095
  %1097 = getelementptr inbounds [4 x i32], [4 x i32]* %1096, i64 0, i64 2
  %1098 = load i32, i32* %1097, align 8
  %1099 = add i32 %1077, %1098
  %1100 = add nsw i32 %.123209, 39
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds i16, i16* %7, i64 %1101
  %1103 = load i16, i16* %1102, align 2
  %1104 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1105 = zext i16 %1103 to i64
  %1106 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1104, i64 0, i64 %1105
  %1107 = getelementptr inbounds [4 x i32], [4 x i32]* %1106, i64 0, i64 0
  %1108 = load i32, i32* %1107, align 8
  %1109 = add i32 %1087, %1108
  %1110 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1111 = zext i16 %1103 to i64
  %1112 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1110, i64 0, i64 %1111
  %1113 = getelementptr inbounds [4 x i32], [4 x i32]* %1112, i64 0, i64 1
  %1114 = load i32, i32* %1113, align 4
  %1115 = add i32 %1093, %1114
  %1116 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1117 = zext i16 %1103 to i64
  %1118 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1116, i64 0, i64 %1117
  %1119 = getelementptr inbounds [4 x i32], [4 x i32]* %1118, i64 0, i64 2
  %1120 = load i32, i32* %1119, align 8
  %1121 = add i32 %1099, %1120
  %1122 = add nsw i32 %.123209, 40
  %1123 = sext i32 %1122 to i64
  %1124 = getelementptr inbounds i16, i16* %7, i64 %1123
  %1125 = load i16, i16* %1124, align 2
  %1126 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1127 = zext i16 %1125 to i64
  %1128 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1126, i64 0, i64 %1127
  %1129 = getelementptr inbounds [4 x i32], [4 x i32]* %1128, i64 0, i64 0
  %1130 = load i32, i32* %1129, align 8
  %1131 = add i32 %1109, %1130
  %1132 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1133 = zext i16 %1125 to i64
  %1134 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1132, i64 0, i64 %1133
  %1135 = getelementptr inbounds [4 x i32], [4 x i32]* %1134, i64 0, i64 1
  %1136 = load i32, i32* %1135, align 4
  %1137 = add i32 %1115, %1136
  %1138 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1139 = zext i16 %1125 to i64
  %1140 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1138, i64 0, i64 %1139
  %1141 = getelementptr inbounds [4 x i32], [4 x i32]* %1140, i64 0, i64 2
  %1142 = load i32, i32* %1141, align 8
  %1143 = add i32 %1121, %1142
  %1144 = add nsw i32 %.123209, 41
  %1145 = sext i32 %1144 to i64
  %1146 = getelementptr inbounds i16, i16* %7, i64 %1145
  %1147 = load i16, i16* %1146, align 2
  %1148 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1149 = zext i16 %1147 to i64
  %1150 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1148, i64 0, i64 %1149
  %1151 = getelementptr inbounds [4 x i32], [4 x i32]* %1150, i64 0, i64 0
  %1152 = load i32, i32* %1151, align 8
  %1153 = add i32 %1131, %1152
  %1154 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1155 = zext i16 %1147 to i64
  %1156 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1154, i64 0, i64 %1155
  %1157 = getelementptr inbounds [4 x i32], [4 x i32]* %1156, i64 0, i64 1
  %1158 = load i32, i32* %1157, align 4
  %1159 = add i32 %1137, %1158
  %1160 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1161 = zext i16 %1147 to i64
  %1162 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1160, i64 0, i64 %1161
  %1163 = getelementptr inbounds [4 x i32], [4 x i32]* %1162, i64 0, i64 2
  %1164 = load i32, i32* %1163, align 8
  %1165 = add i32 %1143, %1164
  %1166 = add nsw i32 %.123209, 42
  %1167 = sext i32 %1166 to i64
  %1168 = getelementptr inbounds i16, i16* %7, i64 %1167
  %1169 = load i16, i16* %1168, align 2
  %1170 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1171 = zext i16 %1169 to i64
  %1172 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1170, i64 0, i64 %1171
  %1173 = getelementptr inbounds [4 x i32], [4 x i32]* %1172, i64 0, i64 0
  %1174 = load i32, i32* %1173, align 8
  %1175 = add i32 %1153, %1174
  %1176 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1177 = zext i16 %1169 to i64
  %1178 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1176, i64 0, i64 %1177
  %1179 = getelementptr inbounds [4 x i32], [4 x i32]* %1178, i64 0, i64 1
  %1180 = load i32, i32* %1179, align 4
  %1181 = add i32 %1159, %1180
  %1182 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1183 = zext i16 %1169 to i64
  %1184 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1182, i64 0, i64 %1183
  %1185 = getelementptr inbounds [4 x i32], [4 x i32]* %1184, i64 0, i64 2
  %1186 = load i32, i32* %1185, align 8
  %1187 = add i32 %1165, %1186
  %1188 = add nsw i32 %.123209, 43
  %1189 = sext i32 %1188 to i64
  %1190 = getelementptr inbounds i16, i16* %7, i64 %1189
  %1191 = load i16, i16* %1190, align 2
  %1192 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1193 = zext i16 %1191 to i64
  %1194 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1192, i64 0, i64 %1193
  %1195 = getelementptr inbounds [4 x i32], [4 x i32]* %1194, i64 0, i64 0
  %1196 = load i32, i32* %1195, align 8
  %1197 = add i32 %1175, %1196
  %1198 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1199 = zext i16 %1191 to i64
  %1200 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1198, i64 0, i64 %1199
  %1201 = getelementptr inbounds [4 x i32], [4 x i32]* %1200, i64 0, i64 1
  %1202 = load i32, i32* %1201, align 4
  %1203 = add i32 %1181, %1202
  %1204 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1205 = zext i16 %1191 to i64
  %1206 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1204, i64 0, i64 %1205
  %1207 = getelementptr inbounds [4 x i32], [4 x i32]* %1206, i64 0, i64 2
  %1208 = load i32, i32* %1207, align 8
  %1209 = add i32 %1187, %1208
  %1210 = add nsw i32 %.123209, 44
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds i16, i16* %7, i64 %1211
  %1213 = load i16, i16* %1212, align 2
  %1214 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1215 = zext i16 %1213 to i64
  %1216 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1214, i64 0, i64 %1215
  %1217 = getelementptr inbounds [4 x i32], [4 x i32]* %1216, i64 0, i64 0
  %1218 = load i32, i32* %1217, align 8
  %1219 = add i32 %1197, %1218
  %1220 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1221 = zext i16 %1213 to i64
  %1222 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1220, i64 0, i64 %1221
  %1223 = getelementptr inbounds [4 x i32], [4 x i32]* %1222, i64 0, i64 1
  %1224 = load i32, i32* %1223, align 4
  %1225 = add i32 %1203, %1224
  %1226 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1227 = zext i16 %1213 to i64
  %1228 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1226, i64 0, i64 %1227
  %1229 = getelementptr inbounds [4 x i32], [4 x i32]* %1228, i64 0, i64 2
  %1230 = load i32, i32* %1229, align 8
  %1231 = add i32 %1209, %1230
  %1232 = add nsw i32 %.123209, 45
  %1233 = sext i32 %1232 to i64
  %1234 = getelementptr inbounds i16, i16* %7, i64 %1233
  %1235 = load i16, i16* %1234, align 2
  %1236 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1237 = zext i16 %1235 to i64
  %1238 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1236, i64 0, i64 %1237
  %1239 = getelementptr inbounds [4 x i32], [4 x i32]* %1238, i64 0, i64 0
  %1240 = load i32, i32* %1239, align 8
  %1241 = add i32 %1219, %1240
  %1242 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1243 = zext i16 %1235 to i64
  %1244 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1242, i64 0, i64 %1243
  %1245 = getelementptr inbounds [4 x i32], [4 x i32]* %1244, i64 0, i64 1
  %1246 = load i32, i32* %1245, align 4
  %1247 = add i32 %1225, %1246
  %1248 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1249 = zext i16 %1235 to i64
  %1250 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1248, i64 0, i64 %1249
  %1251 = getelementptr inbounds [4 x i32], [4 x i32]* %1250, i64 0, i64 2
  %1252 = load i32, i32* %1251, align 8
  %1253 = add i32 %1231, %1252
  %1254 = add nsw i32 %.123209, 46
  %1255 = sext i32 %1254 to i64
  %1256 = getelementptr inbounds i16, i16* %7, i64 %1255
  %1257 = load i16, i16* %1256, align 2
  %1258 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1259 = zext i16 %1257 to i64
  %1260 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1258, i64 0, i64 %1259
  %1261 = getelementptr inbounds [4 x i32], [4 x i32]* %1260, i64 0, i64 0
  %1262 = load i32, i32* %1261, align 8
  %1263 = add i32 %1241, %1262
  %1264 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1265 = zext i16 %1257 to i64
  %1266 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1264, i64 0, i64 %1265
  %1267 = getelementptr inbounds [4 x i32], [4 x i32]* %1266, i64 0, i64 1
  %1268 = load i32, i32* %1267, align 4
  %1269 = add i32 %1247, %1268
  %1270 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1271 = zext i16 %1257 to i64
  %1272 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1270, i64 0, i64 %1271
  %1273 = getelementptr inbounds [4 x i32], [4 x i32]* %1272, i64 0, i64 2
  %1274 = load i32, i32* %1273, align 8
  %1275 = add i32 %1253, %1274
  %1276 = add nsw i32 %.123209, 47
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds i16, i16* %7, i64 %1277
  %1279 = load i16, i16* %1278, align 2
  %1280 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1281 = zext i16 %1279 to i64
  %1282 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1280, i64 0, i64 %1281
  %1283 = getelementptr inbounds [4 x i32], [4 x i32]* %1282, i64 0, i64 0
  %1284 = load i32, i32* %1283, align 8
  %1285 = add i32 %1263, %1284
  %1286 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1287 = zext i16 %1279 to i64
  %1288 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1286, i64 0, i64 %1287
  %1289 = getelementptr inbounds [4 x i32], [4 x i32]* %1288, i64 0, i64 1
  %1290 = load i32, i32* %1289, align 4
  %1291 = add i32 %1269, %1290
  %1292 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1293 = zext i16 %1279 to i64
  %1294 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1292, i64 0, i64 %1293
  %1295 = getelementptr inbounds [4 x i32], [4 x i32]* %1294, i64 0, i64 2
  %1296 = load i32, i32* %1295, align 8
  %1297 = add i32 %1275, %1296
  %1298 = add nsw i32 %.123209, 48
  %1299 = sext i32 %1298 to i64
  %1300 = getelementptr inbounds i16, i16* %7, i64 %1299
  %1301 = load i16, i16* %1300, align 2
  %1302 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1303 = zext i16 %1301 to i64
  %1304 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1302, i64 0, i64 %1303
  %1305 = getelementptr inbounds [4 x i32], [4 x i32]* %1304, i64 0, i64 0
  %1306 = load i32, i32* %1305, align 8
  %1307 = add i32 %1285, %1306
  %1308 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1309 = zext i16 %1301 to i64
  %1310 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1308, i64 0, i64 %1309
  %1311 = getelementptr inbounds [4 x i32], [4 x i32]* %1310, i64 0, i64 1
  %1312 = load i32, i32* %1311, align 4
  %1313 = add i32 %1291, %1312
  %1314 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1315 = zext i16 %1301 to i64
  %1316 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1314, i64 0, i64 %1315
  %1317 = getelementptr inbounds [4 x i32], [4 x i32]* %1316, i64 0, i64 2
  %1318 = load i32, i32* %1317, align 8
  %1319 = add i32 %1297, %1318
  %1320 = add nsw i32 %.123209, 49
  %1321 = sext i32 %1320 to i64
  %1322 = getelementptr inbounds i16, i16* %7, i64 %1321
  %1323 = load i16, i16* %1322, align 2
  %1324 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1325 = zext i16 %1323 to i64
  %1326 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1324, i64 0, i64 %1325
  %1327 = getelementptr inbounds [4 x i32], [4 x i32]* %1326, i64 0, i64 0
  %1328 = load i32, i32* %1327, align 8
  %1329 = add i32 %1307, %1328
  %1330 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1331 = zext i16 %1323 to i64
  %1332 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1330, i64 0, i64 %1331
  %1333 = getelementptr inbounds [4 x i32], [4 x i32]* %1332, i64 0, i64 1
  %1334 = load i32, i32* %1333, align 4
  %1335 = add i32 %1313, %1334
  %1336 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %1337 = zext i16 %1323 to i64
  %1338 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %1336, i64 0, i64 %1337
  %1339 = getelementptr inbounds [4 x i32], [4 x i32]* %1338, i64 0, i64 2
  %1340 = load i32, i32* %1339, align 8
  %1341 = add i32 %1319, %1340
  %1342 = and i32 %1329, 65535
  %1343 = trunc i32 %1342 to i16
  %1344 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 0
  store i16 %1343, i16* %1344, align 2
  %1345 = lshr i32 %1329, 16
  %1346 = trunc i32 %1345 to i16
  %1347 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 1
  store i16 %1346, i16* %1347, align 2
  %1348 = and i32 %1335, 65535
  %1349 = trunc i32 %1348 to i16
  %1350 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 2
  store i16 %1349, i16* %1350, align 2
  %1351 = lshr i32 %1335, 16
  %1352 = trunc i32 %1351 to i16
  %1353 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 3
  store i16 %1352, i16* %1353, align 2
  %1354 = and i32 %1341, 65535
  %1355 = trunc i32 %1354 to i16
  %1356 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 4
  store i16 %1355, i16* %1356, align 2
  %1357 = lshr i32 %1341, 16
  %1358 = trunc i32 %1357 to i16
  %1359 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 5
  store i16 %1358, i16* %1359, align 2
  br label %1384

; <label>:1360:                                   ; preds = %238, %236
  %1361 = icmp sle i32 %.123209, %.227
  br i1 %1361, label %.lr.ph190, label %1383

.lr.ph190:                                        ; preds = %1360
  %1362 = sext i32 %.123209 to i64
  %1363 = sext i32 %.227 to i64
  br label %1364

; <label>:1364:                                   ; preds = %.lr.ph190, %1381
  %indvars.iv192 = phi i64 [ %1362, %.lr.ph190 ], [ %indvars.iv.next193, %1381 ]
  call void @unroll_loop(i32 64)
  %1365 = getelementptr inbounds i16, i16* %7, i64 %indvars.iv192
  %1366 = load i16, i16* %1365, align 2
  br label %1367

; <label>:1367:                                   ; preds = %1364, %1379
  %indvars.iv184 = phi i64 [ 0, %1364 ], [ %indvars.iv.next185, %1379 ]
  call void @unroll_loop(i32 65)
  %1368 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %1369 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %1368, i64 0, i64 %indvars.iv184
  %1370 = zext i16 %1366 to i64
  %1371 = getelementptr inbounds [258 x i8], [258 x i8]* %1369, i64 0, i64 %1370
  %1372 = load i8, i8* %1371, align 1
  %1373 = zext i8 %1372 to i32
  %1374 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 %indvars.iv184
  %1375 = load i16, i16* %1374, align 2
  %1376 = zext i16 %1375 to i32
  %1377 = add nsw i32 %1376, %1373
  %1378 = trunc i32 %1377 to i16
  store i16 %1378, i16* %1374, align 2
  br label %1379

; <label>:1379:                                   ; preds = %1367
  %indvars.iv.next185 = add nuw nsw i64 %indvars.iv184, 1
  %wide.trip.count186 = zext i32 %.346 to i64
  %exitcond187 = icmp ne i64 %indvars.iv.next185, %wide.trip.count186
  br i1 %exitcond187, label %1367, label %1380

; <label>:1380:                                   ; preds = %1379
  br label %1381

; <label>:1381:                                   ; preds = %1380
  %indvars.iv.next193 = add i64 %indvars.iv192, 1
  %1382 = icmp sle i64 %indvars.iv.next193, %1363
  br i1 %1382, label %1364, label %._crit_edge191

._crit_edge191:                                   ; preds = %1381
  br label %1383

; <label>:1383:                                   ; preds = %._crit_edge191, %1360
  br label %1384

; <label>:1384:                                   ; preds = %1383, %242
  br label %1385

; <label>:1385:                                   ; preds = %1384, %1396
  %indvars.iv197 = phi i64 [ 0, %1384 ], [ %indvars.iv.next198, %1396 ]
  %.030195 = phi i32 [ -1, %1384 ], [ %.131, %1396 ]
  %.032194 = phi i32 [ 999999999, %1384 ], [ %.133, %1396 ]
  call void @unroll_loop(i32 66)
  %1386 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 %indvars.iv197
  %1387 = load i16, i16* %1386, align 2
  %1388 = zext i16 %1387 to i32
  %1389 = icmp slt i32 %1388, %.032194
  br i1 %1389, label %1390, label %1395

; <label>:1390:                                   ; preds = %1385
  %1391 = getelementptr inbounds [6 x i16], [6 x i16]* %2, i64 0, i64 %indvars.iv197
  %1392 = load i16, i16* %1391, align 2
  %1393 = zext i16 %1392 to i32
  %1394 = trunc i64 %indvars.iv197 to i32
  br label %1395

; <label>:1395:                                   ; preds = %1390, %1385
  %.133 = phi i32 [ %1393, %1390 ], [ %.032194, %1385 ]
  %.131 = phi i32 [ %1394, %1390 ], [ %.030195, %1385 ]
  br label %1396

; <label>:1396:                                   ; preds = %1395
  %indvars.iv.next198 = add nuw nsw i64 %indvars.iv197, 1
  %wide.trip.count199 = zext i32 %.346 to i64
  %exitcond200 = icmp ne i64 %indvars.iv.next198, %wide.trip.count199
  br i1 %exitcond200, label %1385, label %1397

; <label>:1397:                                   ; preds = %1396
  %.032.lcssa = phi i32 [ %.133, %1396 ]
  %.030.lcssa = phi i32 [ %.131, %1396 ]
  %1398 = add nsw i32 %.029208, %.032.lcssa
  %1399 = sext i32 %.030.lcssa to i64
  %1400 = getelementptr inbounds [6 x i32], [6 x i32]* %3, i64 0, i64 %1399
  %1401 = load i32, i32* %1400, align 4
  %1402 = add nsw i32 %1401, 1
  store i32 %1402, i32* %1400, align 4
  %1403 = trunc i32 %.030.lcssa to i8
  %1404 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %1405 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1404, i64 0, i64 %indvars.iv215
  store i8 %1403, i8* %1405, align 1
  %indvars.iv.next216 = add nuw i64 %indvars.iv215, 1
  %1406 = icmp eq i32 %.346, 6
  br i1 %1406, label %1407, label %1961

; <label>:1407:                                   ; preds = %1397
  %1408 = sub nsw i32 %.227, %.123209
  %1409 = add nsw i32 %1408, 1
  %1410 = icmp eq i32 50, %1409
  br i1 %1410, label %1411, label %1961

; <label>:1411:                                   ; preds = %1407
  %1412 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1413 = sext i32 %.030.lcssa to i64
  %1414 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1412, i64 0, i64 %1413
  %1415 = sext i32 %.123209 to i64
  %1416 = getelementptr inbounds i16, i16* %7, i64 %1415
  %1417 = load i16, i16* %1416, align 2
  %1418 = zext i16 %1417 to i64
  %1419 = getelementptr inbounds [258 x i32], [258 x i32]* %1414, i64 0, i64 %1418
  %1420 = load i32, i32* %1419, align 4
  %1421 = add nsw i32 %1420, 1
  store i32 %1421, i32* %1419, align 4
  %1422 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1423 = sext i32 %.030.lcssa to i64
  %1424 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1422, i64 0, i64 %1423
  %1425 = add nsw i32 %.123209, 1
  %1426 = sext i32 %1425 to i64
  %1427 = getelementptr inbounds i16, i16* %7, i64 %1426
  %1428 = load i16, i16* %1427, align 2
  %1429 = zext i16 %1428 to i64
  %1430 = getelementptr inbounds [258 x i32], [258 x i32]* %1424, i64 0, i64 %1429
  %1431 = load i32, i32* %1430, align 4
  %1432 = add nsw i32 %1431, 1
  store i32 %1432, i32* %1430, align 4
  %1433 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1434 = sext i32 %.030.lcssa to i64
  %1435 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1433, i64 0, i64 %1434
  %1436 = add nsw i32 %.123209, 2
  %1437 = sext i32 %1436 to i64
  %1438 = getelementptr inbounds i16, i16* %7, i64 %1437
  %1439 = load i16, i16* %1438, align 2
  %1440 = zext i16 %1439 to i64
  %1441 = getelementptr inbounds [258 x i32], [258 x i32]* %1435, i64 0, i64 %1440
  %1442 = load i32, i32* %1441, align 4
  %1443 = add nsw i32 %1442, 1
  store i32 %1443, i32* %1441, align 4
  %1444 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1445 = sext i32 %.030.lcssa to i64
  %1446 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1444, i64 0, i64 %1445
  %1447 = add nsw i32 %.123209, 3
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds i16, i16* %7, i64 %1448
  %1450 = load i16, i16* %1449, align 2
  %1451 = zext i16 %1450 to i64
  %1452 = getelementptr inbounds [258 x i32], [258 x i32]* %1446, i64 0, i64 %1451
  %1453 = load i32, i32* %1452, align 4
  %1454 = add nsw i32 %1453, 1
  store i32 %1454, i32* %1452, align 4
  %1455 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1456 = sext i32 %.030.lcssa to i64
  %1457 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1455, i64 0, i64 %1456
  %1458 = add nsw i32 %.123209, 4
  %1459 = sext i32 %1458 to i64
  %1460 = getelementptr inbounds i16, i16* %7, i64 %1459
  %1461 = load i16, i16* %1460, align 2
  %1462 = zext i16 %1461 to i64
  %1463 = getelementptr inbounds [258 x i32], [258 x i32]* %1457, i64 0, i64 %1462
  %1464 = load i32, i32* %1463, align 4
  %1465 = add nsw i32 %1464, 1
  store i32 %1465, i32* %1463, align 4
  %1466 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1467 = sext i32 %.030.lcssa to i64
  %1468 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1466, i64 0, i64 %1467
  %1469 = add nsw i32 %.123209, 5
  %1470 = sext i32 %1469 to i64
  %1471 = getelementptr inbounds i16, i16* %7, i64 %1470
  %1472 = load i16, i16* %1471, align 2
  %1473 = zext i16 %1472 to i64
  %1474 = getelementptr inbounds [258 x i32], [258 x i32]* %1468, i64 0, i64 %1473
  %1475 = load i32, i32* %1474, align 4
  %1476 = add nsw i32 %1475, 1
  store i32 %1476, i32* %1474, align 4
  %1477 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1478 = sext i32 %.030.lcssa to i64
  %1479 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1477, i64 0, i64 %1478
  %1480 = add nsw i32 %.123209, 6
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds i16, i16* %7, i64 %1481
  %1483 = load i16, i16* %1482, align 2
  %1484 = zext i16 %1483 to i64
  %1485 = getelementptr inbounds [258 x i32], [258 x i32]* %1479, i64 0, i64 %1484
  %1486 = load i32, i32* %1485, align 4
  %1487 = add nsw i32 %1486, 1
  store i32 %1487, i32* %1485, align 4
  %1488 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1489 = sext i32 %.030.lcssa to i64
  %1490 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1488, i64 0, i64 %1489
  %1491 = add nsw i32 %.123209, 7
  %1492 = sext i32 %1491 to i64
  %1493 = getelementptr inbounds i16, i16* %7, i64 %1492
  %1494 = load i16, i16* %1493, align 2
  %1495 = zext i16 %1494 to i64
  %1496 = getelementptr inbounds [258 x i32], [258 x i32]* %1490, i64 0, i64 %1495
  %1497 = load i32, i32* %1496, align 4
  %1498 = add nsw i32 %1497, 1
  store i32 %1498, i32* %1496, align 4
  %1499 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1500 = sext i32 %.030.lcssa to i64
  %1501 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1499, i64 0, i64 %1500
  %1502 = add nsw i32 %.123209, 8
  %1503 = sext i32 %1502 to i64
  %1504 = getelementptr inbounds i16, i16* %7, i64 %1503
  %1505 = load i16, i16* %1504, align 2
  %1506 = zext i16 %1505 to i64
  %1507 = getelementptr inbounds [258 x i32], [258 x i32]* %1501, i64 0, i64 %1506
  %1508 = load i32, i32* %1507, align 4
  %1509 = add nsw i32 %1508, 1
  store i32 %1509, i32* %1507, align 4
  %1510 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1511 = sext i32 %.030.lcssa to i64
  %1512 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1510, i64 0, i64 %1511
  %1513 = add nsw i32 %.123209, 9
  %1514 = sext i32 %1513 to i64
  %1515 = getelementptr inbounds i16, i16* %7, i64 %1514
  %1516 = load i16, i16* %1515, align 2
  %1517 = zext i16 %1516 to i64
  %1518 = getelementptr inbounds [258 x i32], [258 x i32]* %1512, i64 0, i64 %1517
  %1519 = load i32, i32* %1518, align 4
  %1520 = add nsw i32 %1519, 1
  store i32 %1520, i32* %1518, align 4
  %1521 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1522 = sext i32 %.030.lcssa to i64
  %1523 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1521, i64 0, i64 %1522
  %1524 = add nsw i32 %.123209, 10
  %1525 = sext i32 %1524 to i64
  %1526 = getelementptr inbounds i16, i16* %7, i64 %1525
  %1527 = load i16, i16* %1526, align 2
  %1528 = zext i16 %1527 to i64
  %1529 = getelementptr inbounds [258 x i32], [258 x i32]* %1523, i64 0, i64 %1528
  %1530 = load i32, i32* %1529, align 4
  %1531 = add nsw i32 %1530, 1
  store i32 %1531, i32* %1529, align 4
  %1532 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1533 = sext i32 %.030.lcssa to i64
  %1534 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1532, i64 0, i64 %1533
  %1535 = add nsw i32 %.123209, 11
  %1536 = sext i32 %1535 to i64
  %1537 = getelementptr inbounds i16, i16* %7, i64 %1536
  %1538 = load i16, i16* %1537, align 2
  %1539 = zext i16 %1538 to i64
  %1540 = getelementptr inbounds [258 x i32], [258 x i32]* %1534, i64 0, i64 %1539
  %1541 = load i32, i32* %1540, align 4
  %1542 = add nsw i32 %1541, 1
  store i32 %1542, i32* %1540, align 4
  %1543 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1544 = sext i32 %.030.lcssa to i64
  %1545 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1543, i64 0, i64 %1544
  %1546 = add nsw i32 %.123209, 12
  %1547 = sext i32 %1546 to i64
  %1548 = getelementptr inbounds i16, i16* %7, i64 %1547
  %1549 = load i16, i16* %1548, align 2
  %1550 = zext i16 %1549 to i64
  %1551 = getelementptr inbounds [258 x i32], [258 x i32]* %1545, i64 0, i64 %1550
  %1552 = load i32, i32* %1551, align 4
  %1553 = add nsw i32 %1552, 1
  store i32 %1553, i32* %1551, align 4
  %1554 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1555 = sext i32 %.030.lcssa to i64
  %1556 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1554, i64 0, i64 %1555
  %1557 = add nsw i32 %.123209, 13
  %1558 = sext i32 %1557 to i64
  %1559 = getelementptr inbounds i16, i16* %7, i64 %1558
  %1560 = load i16, i16* %1559, align 2
  %1561 = zext i16 %1560 to i64
  %1562 = getelementptr inbounds [258 x i32], [258 x i32]* %1556, i64 0, i64 %1561
  %1563 = load i32, i32* %1562, align 4
  %1564 = add nsw i32 %1563, 1
  store i32 %1564, i32* %1562, align 4
  %1565 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1566 = sext i32 %.030.lcssa to i64
  %1567 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1565, i64 0, i64 %1566
  %1568 = add nsw i32 %.123209, 14
  %1569 = sext i32 %1568 to i64
  %1570 = getelementptr inbounds i16, i16* %7, i64 %1569
  %1571 = load i16, i16* %1570, align 2
  %1572 = zext i16 %1571 to i64
  %1573 = getelementptr inbounds [258 x i32], [258 x i32]* %1567, i64 0, i64 %1572
  %1574 = load i32, i32* %1573, align 4
  %1575 = add nsw i32 %1574, 1
  store i32 %1575, i32* %1573, align 4
  %1576 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1577 = sext i32 %.030.lcssa to i64
  %1578 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1576, i64 0, i64 %1577
  %1579 = add nsw i32 %.123209, 15
  %1580 = sext i32 %1579 to i64
  %1581 = getelementptr inbounds i16, i16* %7, i64 %1580
  %1582 = load i16, i16* %1581, align 2
  %1583 = zext i16 %1582 to i64
  %1584 = getelementptr inbounds [258 x i32], [258 x i32]* %1578, i64 0, i64 %1583
  %1585 = load i32, i32* %1584, align 4
  %1586 = add nsw i32 %1585, 1
  store i32 %1586, i32* %1584, align 4
  %1587 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1588 = sext i32 %.030.lcssa to i64
  %1589 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1587, i64 0, i64 %1588
  %1590 = add nsw i32 %.123209, 16
  %1591 = sext i32 %1590 to i64
  %1592 = getelementptr inbounds i16, i16* %7, i64 %1591
  %1593 = load i16, i16* %1592, align 2
  %1594 = zext i16 %1593 to i64
  %1595 = getelementptr inbounds [258 x i32], [258 x i32]* %1589, i64 0, i64 %1594
  %1596 = load i32, i32* %1595, align 4
  %1597 = add nsw i32 %1596, 1
  store i32 %1597, i32* %1595, align 4
  %1598 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1599 = sext i32 %.030.lcssa to i64
  %1600 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1598, i64 0, i64 %1599
  %1601 = add nsw i32 %.123209, 17
  %1602 = sext i32 %1601 to i64
  %1603 = getelementptr inbounds i16, i16* %7, i64 %1602
  %1604 = load i16, i16* %1603, align 2
  %1605 = zext i16 %1604 to i64
  %1606 = getelementptr inbounds [258 x i32], [258 x i32]* %1600, i64 0, i64 %1605
  %1607 = load i32, i32* %1606, align 4
  %1608 = add nsw i32 %1607, 1
  store i32 %1608, i32* %1606, align 4
  %1609 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1610 = sext i32 %.030.lcssa to i64
  %1611 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1609, i64 0, i64 %1610
  %1612 = add nsw i32 %.123209, 18
  %1613 = sext i32 %1612 to i64
  %1614 = getelementptr inbounds i16, i16* %7, i64 %1613
  %1615 = load i16, i16* %1614, align 2
  %1616 = zext i16 %1615 to i64
  %1617 = getelementptr inbounds [258 x i32], [258 x i32]* %1611, i64 0, i64 %1616
  %1618 = load i32, i32* %1617, align 4
  %1619 = add nsw i32 %1618, 1
  store i32 %1619, i32* %1617, align 4
  %1620 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1621 = sext i32 %.030.lcssa to i64
  %1622 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1620, i64 0, i64 %1621
  %1623 = add nsw i32 %.123209, 19
  %1624 = sext i32 %1623 to i64
  %1625 = getelementptr inbounds i16, i16* %7, i64 %1624
  %1626 = load i16, i16* %1625, align 2
  %1627 = zext i16 %1626 to i64
  %1628 = getelementptr inbounds [258 x i32], [258 x i32]* %1622, i64 0, i64 %1627
  %1629 = load i32, i32* %1628, align 4
  %1630 = add nsw i32 %1629, 1
  store i32 %1630, i32* %1628, align 4
  %1631 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1632 = sext i32 %.030.lcssa to i64
  %1633 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1631, i64 0, i64 %1632
  %1634 = add nsw i32 %.123209, 20
  %1635 = sext i32 %1634 to i64
  %1636 = getelementptr inbounds i16, i16* %7, i64 %1635
  %1637 = load i16, i16* %1636, align 2
  %1638 = zext i16 %1637 to i64
  %1639 = getelementptr inbounds [258 x i32], [258 x i32]* %1633, i64 0, i64 %1638
  %1640 = load i32, i32* %1639, align 4
  %1641 = add nsw i32 %1640, 1
  store i32 %1641, i32* %1639, align 4
  %1642 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1643 = sext i32 %.030.lcssa to i64
  %1644 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1642, i64 0, i64 %1643
  %1645 = add nsw i32 %.123209, 21
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds i16, i16* %7, i64 %1646
  %1648 = load i16, i16* %1647, align 2
  %1649 = zext i16 %1648 to i64
  %1650 = getelementptr inbounds [258 x i32], [258 x i32]* %1644, i64 0, i64 %1649
  %1651 = load i32, i32* %1650, align 4
  %1652 = add nsw i32 %1651, 1
  store i32 %1652, i32* %1650, align 4
  %1653 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1654 = sext i32 %.030.lcssa to i64
  %1655 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1653, i64 0, i64 %1654
  %1656 = add nsw i32 %.123209, 22
  %1657 = sext i32 %1656 to i64
  %1658 = getelementptr inbounds i16, i16* %7, i64 %1657
  %1659 = load i16, i16* %1658, align 2
  %1660 = zext i16 %1659 to i64
  %1661 = getelementptr inbounds [258 x i32], [258 x i32]* %1655, i64 0, i64 %1660
  %1662 = load i32, i32* %1661, align 4
  %1663 = add nsw i32 %1662, 1
  store i32 %1663, i32* %1661, align 4
  %1664 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1665 = sext i32 %.030.lcssa to i64
  %1666 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1664, i64 0, i64 %1665
  %1667 = add nsw i32 %.123209, 23
  %1668 = sext i32 %1667 to i64
  %1669 = getelementptr inbounds i16, i16* %7, i64 %1668
  %1670 = load i16, i16* %1669, align 2
  %1671 = zext i16 %1670 to i64
  %1672 = getelementptr inbounds [258 x i32], [258 x i32]* %1666, i64 0, i64 %1671
  %1673 = load i32, i32* %1672, align 4
  %1674 = add nsw i32 %1673, 1
  store i32 %1674, i32* %1672, align 4
  %1675 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1676 = sext i32 %.030.lcssa to i64
  %1677 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1675, i64 0, i64 %1676
  %1678 = add nsw i32 %.123209, 24
  %1679 = sext i32 %1678 to i64
  %1680 = getelementptr inbounds i16, i16* %7, i64 %1679
  %1681 = load i16, i16* %1680, align 2
  %1682 = zext i16 %1681 to i64
  %1683 = getelementptr inbounds [258 x i32], [258 x i32]* %1677, i64 0, i64 %1682
  %1684 = load i32, i32* %1683, align 4
  %1685 = add nsw i32 %1684, 1
  store i32 %1685, i32* %1683, align 4
  %1686 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1687 = sext i32 %.030.lcssa to i64
  %1688 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1686, i64 0, i64 %1687
  %1689 = add nsw i32 %.123209, 25
  %1690 = sext i32 %1689 to i64
  %1691 = getelementptr inbounds i16, i16* %7, i64 %1690
  %1692 = load i16, i16* %1691, align 2
  %1693 = zext i16 %1692 to i64
  %1694 = getelementptr inbounds [258 x i32], [258 x i32]* %1688, i64 0, i64 %1693
  %1695 = load i32, i32* %1694, align 4
  %1696 = add nsw i32 %1695, 1
  store i32 %1696, i32* %1694, align 4
  %1697 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1698 = sext i32 %.030.lcssa to i64
  %1699 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1697, i64 0, i64 %1698
  %1700 = add nsw i32 %.123209, 26
  %1701 = sext i32 %1700 to i64
  %1702 = getelementptr inbounds i16, i16* %7, i64 %1701
  %1703 = load i16, i16* %1702, align 2
  %1704 = zext i16 %1703 to i64
  %1705 = getelementptr inbounds [258 x i32], [258 x i32]* %1699, i64 0, i64 %1704
  %1706 = load i32, i32* %1705, align 4
  %1707 = add nsw i32 %1706, 1
  store i32 %1707, i32* %1705, align 4
  %1708 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1709 = sext i32 %.030.lcssa to i64
  %1710 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1708, i64 0, i64 %1709
  %1711 = add nsw i32 %.123209, 27
  %1712 = sext i32 %1711 to i64
  %1713 = getelementptr inbounds i16, i16* %7, i64 %1712
  %1714 = load i16, i16* %1713, align 2
  %1715 = zext i16 %1714 to i64
  %1716 = getelementptr inbounds [258 x i32], [258 x i32]* %1710, i64 0, i64 %1715
  %1717 = load i32, i32* %1716, align 4
  %1718 = add nsw i32 %1717, 1
  store i32 %1718, i32* %1716, align 4
  %1719 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1720 = sext i32 %.030.lcssa to i64
  %1721 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1719, i64 0, i64 %1720
  %1722 = add nsw i32 %.123209, 28
  %1723 = sext i32 %1722 to i64
  %1724 = getelementptr inbounds i16, i16* %7, i64 %1723
  %1725 = load i16, i16* %1724, align 2
  %1726 = zext i16 %1725 to i64
  %1727 = getelementptr inbounds [258 x i32], [258 x i32]* %1721, i64 0, i64 %1726
  %1728 = load i32, i32* %1727, align 4
  %1729 = add nsw i32 %1728, 1
  store i32 %1729, i32* %1727, align 4
  %1730 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1731 = sext i32 %.030.lcssa to i64
  %1732 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1730, i64 0, i64 %1731
  %1733 = add nsw i32 %.123209, 29
  %1734 = sext i32 %1733 to i64
  %1735 = getelementptr inbounds i16, i16* %7, i64 %1734
  %1736 = load i16, i16* %1735, align 2
  %1737 = zext i16 %1736 to i64
  %1738 = getelementptr inbounds [258 x i32], [258 x i32]* %1732, i64 0, i64 %1737
  %1739 = load i32, i32* %1738, align 4
  %1740 = add nsw i32 %1739, 1
  store i32 %1740, i32* %1738, align 4
  %1741 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1742 = sext i32 %.030.lcssa to i64
  %1743 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1741, i64 0, i64 %1742
  %1744 = add nsw i32 %.123209, 30
  %1745 = sext i32 %1744 to i64
  %1746 = getelementptr inbounds i16, i16* %7, i64 %1745
  %1747 = load i16, i16* %1746, align 2
  %1748 = zext i16 %1747 to i64
  %1749 = getelementptr inbounds [258 x i32], [258 x i32]* %1743, i64 0, i64 %1748
  %1750 = load i32, i32* %1749, align 4
  %1751 = add nsw i32 %1750, 1
  store i32 %1751, i32* %1749, align 4
  %1752 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1753 = sext i32 %.030.lcssa to i64
  %1754 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1752, i64 0, i64 %1753
  %1755 = add nsw i32 %.123209, 31
  %1756 = sext i32 %1755 to i64
  %1757 = getelementptr inbounds i16, i16* %7, i64 %1756
  %1758 = load i16, i16* %1757, align 2
  %1759 = zext i16 %1758 to i64
  %1760 = getelementptr inbounds [258 x i32], [258 x i32]* %1754, i64 0, i64 %1759
  %1761 = load i32, i32* %1760, align 4
  %1762 = add nsw i32 %1761, 1
  store i32 %1762, i32* %1760, align 4
  %1763 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1764 = sext i32 %.030.lcssa to i64
  %1765 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1763, i64 0, i64 %1764
  %1766 = add nsw i32 %.123209, 32
  %1767 = sext i32 %1766 to i64
  %1768 = getelementptr inbounds i16, i16* %7, i64 %1767
  %1769 = load i16, i16* %1768, align 2
  %1770 = zext i16 %1769 to i64
  %1771 = getelementptr inbounds [258 x i32], [258 x i32]* %1765, i64 0, i64 %1770
  %1772 = load i32, i32* %1771, align 4
  %1773 = add nsw i32 %1772, 1
  store i32 %1773, i32* %1771, align 4
  %1774 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1775 = sext i32 %.030.lcssa to i64
  %1776 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1774, i64 0, i64 %1775
  %1777 = add nsw i32 %.123209, 33
  %1778 = sext i32 %1777 to i64
  %1779 = getelementptr inbounds i16, i16* %7, i64 %1778
  %1780 = load i16, i16* %1779, align 2
  %1781 = zext i16 %1780 to i64
  %1782 = getelementptr inbounds [258 x i32], [258 x i32]* %1776, i64 0, i64 %1781
  %1783 = load i32, i32* %1782, align 4
  %1784 = add nsw i32 %1783, 1
  store i32 %1784, i32* %1782, align 4
  %1785 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1786 = sext i32 %.030.lcssa to i64
  %1787 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1785, i64 0, i64 %1786
  %1788 = add nsw i32 %.123209, 34
  %1789 = sext i32 %1788 to i64
  %1790 = getelementptr inbounds i16, i16* %7, i64 %1789
  %1791 = load i16, i16* %1790, align 2
  %1792 = zext i16 %1791 to i64
  %1793 = getelementptr inbounds [258 x i32], [258 x i32]* %1787, i64 0, i64 %1792
  %1794 = load i32, i32* %1793, align 4
  %1795 = add nsw i32 %1794, 1
  store i32 %1795, i32* %1793, align 4
  %1796 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1797 = sext i32 %.030.lcssa to i64
  %1798 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1796, i64 0, i64 %1797
  %1799 = add nsw i32 %.123209, 35
  %1800 = sext i32 %1799 to i64
  %1801 = getelementptr inbounds i16, i16* %7, i64 %1800
  %1802 = load i16, i16* %1801, align 2
  %1803 = zext i16 %1802 to i64
  %1804 = getelementptr inbounds [258 x i32], [258 x i32]* %1798, i64 0, i64 %1803
  %1805 = load i32, i32* %1804, align 4
  %1806 = add nsw i32 %1805, 1
  store i32 %1806, i32* %1804, align 4
  %1807 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1808 = sext i32 %.030.lcssa to i64
  %1809 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1807, i64 0, i64 %1808
  %1810 = add nsw i32 %.123209, 36
  %1811 = sext i32 %1810 to i64
  %1812 = getelementptr inbounds i16, i16* %7, i64 %1811
  %1813 = load i16, i16* %1812, align 2
  %1814 = zext i16 %1813 to i64
  %1815 = getelementptr inbounds [258 x i32], [258 x i32]* %1809, i64 0, i64 %1814
  %1816 = load i32, i32* %1815, align 4
  %1817 = add nsw i32 %1816, 1
  store i32 %1817, i32* %1815, align 4
  %1818 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1819 = sext i32 %.030.lcssa to i64
  %1820 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1818, i64 0, i64 %1819
  %1821 = add nsw i32 %.123209, 37
  %1822 = sext i32 %1821 to i64
  %1823 = getelementptr inbounds i16, i16* %7, i64 %1822
  %1824 = load i16, i16* %1823, align 2
  %1825 = zext i16 %1824 to i64
  %1826 = getelementptr inbounds [258 x i32], [258 x i32]* %1820, i64 0, i64 %1825
  %1827 = load i32, i32* %1826, align 4
  %1828 = add nsw i32 %1827, 1
  store i32 %1828, i32* %1826, align 4
  %1829 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1830 = sext i32 %.030.lcssa to i64
  %1831 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1829, i64 0, i64 %1830
  %1832 = add nsw i32 %.123209, 38
  %1833 = sext i32 %1832 to i64
  %1834 = getelementptr inbounds i16, i16* %7, i64 %1833
  %1835 = load i16, i16* %1834, align 2
  %1836 = zext i16 %1835 to i64
  %1837 = getelementptr inbounds [258 x i32], [258 x i32]* %1831, i64 0, i64 %1836
  %1838 = load i32, i32* %1837, align 4
  %1839 = add nsw i32 %1838, 1
  store i32 %1839, i32* %1837, align 4
  %1840 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1841 = sext i32 %.030.lcssa to i64
  %1842 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1840, i64 0, i64 %1841
  %1843 = add nsw i32 %.123209, 39
  %1844 = sext i32 %1843 to i64
  %1845 = getelementptr inbounds i16, i16* %7, i64 %1844
  %1846 = load i16, i16* %1845, align 2
  %1847 = zext i16 %1846 to i64
  %1848 = getelementptr inbounds [258 x i32], [258 x i32]* %1842, i64 0, i64 %1847
  %1849 = load i32, i32* %1848, align 4
  %1850 = add nsw i32 %1849, 1
  store i32 %1850, i32* %1848, align 4
  %1851 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1852 = sext i32 %.030.lcssa to i64
  %1853 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1851, i64 0, i64 %1852
  %1854 = add nsw i32 %.123209, 40
  %1855 = sext i32 %1854 to i64
  %1856 = getelementptr inbounds i16, i16* %7, i64 %1855
  %1857 = load i16, i16* %1856, align 2
  %1858 = zext i16 %1857 to i64
  %1859 = getelementptr inbounds [258 x i32], [258 x i32]* %1853, i64 0, i64 %1858
  %1860 = load i32, i32* %1859, align 4
  %1861 = add nsw i32 %1860, 1
  store i32 %1861, i32* %1859, align 4
  %1862 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1863 = sext i32 %.030.lcssa to i64
  %1864 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1862, i64 0, i64 %1863
  %1865 = add nsw i32 %.123209, 41
  %1866 = sext i32 %1865 to i64
  %1867 = getelementptr inbounds i16, i16* %7, i64 %1866
  %1868 = load i16, i16* %1867, align 2
  %1869 = zext i16 %1868 to i64
  %1870 = getelementptr inbounds [258 x i32], [258 x i32]* %1864, i64 0, i64 %1869
  %1871 = load i32, i32* %1870, align 4
  %1872 = add nsw i32 %1871, 1
  store i32 %1872, i32* %1870, align 4
  %1873 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1874 = sext i32 %.030.lcssa to i64
  %1875 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1873, i64 0, i64 %1874
  %1876 = add nsw i32 %.123209, 42
  %1877 = sext i32 %1876 to i64
  %1878 = getelementptr inbounds i16, i16* %7, i64 %1877
  %1879 = load i16, i16* %1878, align 2
  %1880 = zext i16 %1879 to i64
  %1881 = getelementptr inbounds [258 x i32], [258 x i32]* %1875, i64 0, i64 %1880
  %1882 = load i32, i32* %1881, align 4
  %1883 = add nsw i32 %1882, 1
  store i32 %1883, i32* %1881, align 4
  %1884 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1885 = sext i32 %.030.lcssa to i64
  %1886 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1884, i64 0, i64 %1885
  %1887 = add nsw i32 %.123209, 43
  %1888 = sext i32 %1887 to i64
  %1889 = getelementptr inbounds i16, i16* %7, i64 %1888
  %1890 = load i16, i16* %1889, align 2
  %1891 = zext i16 %1890 to i64
  %1892 = getelementptr inbounds [258 x i32], [258 x i32]* %1886, i64 0, i64 %1891
  %1893 = load i32, i32* %1892, align 4
  %1894 = add nsw i32 %1893, 1
  store i32 %1894, i32* %1892, align 4
  %1895 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1896 = sext i32 %.030.lcssa to i64
  %1897 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1895, i64 0, i64 %1896
  %1898 = add nsw i32 %.123209, 44
  %1899 = sext i32 %1898 to i64
  %1900 = getelementptr inbounds i16, i16* %7, i64 %1899
  %1901 = load i16, i16* %1900, align 2
  %1902 = zext i16 %1901 to i64
  %1903 = getelementptr inbounds [258 x i32], [258 x i32]* %1897, i64 0, i64 %1902
  %1904 = load i32, i32* %1903, align 4
  %1905 = add nsw i32 %1904, 1
  store i32 %1905, i32* %1903, align 4
  %1906 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1907 = sext i32 %.030.lcssa to i64
  %1908 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1906, i64 0, i64 %1907
  %1909 = add nsw i32 %.123209, 45
  %1910 = sext i32 %1909 to i64
  %1911 = getelementptr inbounds i16, i16* %7, i64 %1910
  %1912 = load i16, i16* %1911, align 2
  %1913 = zext i16 %1912 to i64
  %1914 = getelementptr inbounds [258 x i32], [258 x i32]* %1908, i64 0, i64 %1913
  %1915 = load i32, i32* %1914, align 4
  %1916 = add nsw i32 %1915, 1
  store i32 %1916, i32* %1914, align 4
  %1917 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1918 = sext i32 %.030.lcssa to i64
  %1919 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1917, i64 0, i64 %1918
  %1920 = add nsw i32 %.123209, 46
  %1921 = sext i32 %1920 to i64
  %1922 = getelementptr inbounds i16, i16* %7, i64 %1921
  %1923 = load i16, i16* %1922, align 2
  %1924 = zext i16 %1923 to i64
  %1925 = getelementptr inbounds [258 x i32], [258 x i32]* %1919, i64 0, i64 %1924
  %1926 = load i32, i32* %1925, align 4
  %1927 = add nsw i32 %1926, 1
  store i32 %1927, i32* %1925, align 4
  %1928 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1929 = sext i32 %.030.lcssa to i64
  %1930 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1928, i64 0, i64 %1929
  %1931 = add nsw i32 %.123209, 47
  %1932 = sext i32 %1931 to i64
  %1933 = getelementptr inbounds i16, i16* %7, i64 %1932
  %1934 = load i16, i16* %1933, align 2
  %1935 = zext i16 %1934 to i64
  %1936 = getelementptr inbounds [258 x i32], [258 x i32]* %1930, i64 0, i64 %1935
  %1937 = load i32, i32* %1936, align 4
  %1938 = add nsw i32 %1937, 1
  store i32 %1938, i32* %1936, align 4
  %1939 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1940 = sext i32 %.030.lcssa to i64
  %1941 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1939, i64 0, i64 %1940
  %1942 = add nsw i32 %.123209, 48
  %1943 = sext i32 %1942 to i64
  %1944 = getelementptr inbounds i16, i16* %7, i64 %1943
  %1945 = load i16, i16* %1944, align 2
  %1946 = zext i16 %1945 to i64
  %1947 = getelementptr inbounds [258 x i32], [258 x i32]* %1941, i64 0, i64 %1946
  %1948 = load i32, i32* %1947, align 4
  %1949 = add nsw i32 %1948, 1
  store i32 %1949, i32* %1947, align 4
  %1950 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1951 = sext i32 %.030.lcssa to i64
  %1952 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1950, i64 0, i64 %1951
  %1953 = add nsw i32 %.123209, 49
  %1954 = sext i32 %1953 to i64
  %1955 = getelementptr inbounds i16, i16* %7, i64 %1954
  %1956 = load i16, i16* %1955, align 2
  %1957 = zext i16 %1956 to i64
  %1958 = getelementptr inbounds [258 x i32], [258 x i32]* %1952, i64 0, i64 %1957
  %1959 = load i32, i32* %1958, align 4
  %1960 = add nsw i32 %1959, 1
  store i32 %1960, i32* %1958, align 4
  br label %1978

; <label>:1961:                                   ; preds = %1407, %1397
  %1962 = icmp sle i32 %.123209, %.227
  br i1 %1962, label %.lr.ph203, label %1977

.lr.ph203:                                        ; preds = %1961
  %1963 = sext i32 %.123209 to i64
  %1964 = sext i32 %.227 to i64
  br label %1965

; <label>:1965:                                   ; preds = %.lr.ph203, %1975
  %indvars.iv205 = phi i64 [ %1963, %.lr.ph203 ], [ %indvars.iv.next206, %1975 ]
  call void @unroll_loop(i32 67)
  %1966 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %1967 = sext i32 %.030.lcssa to i64
  %1968 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1966, i64 0, i64 %1967
  %1969 = getelementptr inbounds i16, i16* %7, i64 %indvars.iv205
  %1970 = load i16, i16* %1969, align 2
  %1971 = zext i16 %1970 to i64
  %1972 = getelementptr inbounds [258 x i32], [258 x i32]* %1968, i64 0, i64 %1971
  %1973 = load i32, i32* %1972, align 4
  %1974 = add nsw i32 %1973, 1
  store i32 %1974, i32* %1972, align 4
  br label %1975

; <label>:1975:                                   ; preds = %1965
  %indvars.iv.next206 = add i64 %indvars.iv205, 1
  %1976 = icmp sle i64 %indvars.iv.next206, %1964
  br i1 %1976, label %1965, label %._crit_edge204

._crit_edge204:                                   ; preds = %1975
  br label %1977

; <label>:1977:                                   ; preds = %._crit_edge204, %1961
  br label %1978

; <label>:1978:                                   ; preds = %1977, %1411
  %1979 = add nsw i32 %.227, 1
  %1980 = load i32, i32* %217, align 4
  %1981 = icmp sge i32 %1979, %1980
  br i1 %1981, label %._crit_edge212, label %222

; <label>:1982:                                   ; preds = %221
  %1983 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %1984 = load i32, i32* %1983, align 8
  %1985 = icmp sge i32 %1984, 3
  br i1 %1985, label %1986, label %2003

; <label>:1986:                                   ; preds = %1982
  %1987 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1988 = add nuw nsw i32 %.034227, 1
  %1989 = sdiv i32 %.029.lcssa, 8
  %1990 = getelementptr [41 x i8], [41 x i8]* @.str.4.151, i32 0, i32 0
  %1991 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1987, i8* %1990, i32 %1988, i32 %1989)
  br label %1992

; <label>:1992:                                   ; preds = %1986, %1998
  %indvars.iv218 = phi i64 [ 0, %1986 ], [ %indvars.iv.next219, %1998 ]
  call void @unroll_loop(i32 68)
  %1993 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1994 = getelementptr inbounds [6 x i32], [6 x i32]* %3, i64 0, i64 %indvars.iv218
  %1995 = load i32, i32* %1994, align 4
  %1996 = getelementptr [4 x i8], [4 x i8]* @.str.5.152, i32 0, i32 0
  %1997 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1993, i8* %1996, i32 %1995)
  br label %1998

; <label>:1998:                                   ; preds = %1992
  %indvars.iv.next219 = add nuw nsw i64 %indvars.iv218, 1
  %wide.trip.count220 = zext i32 %.346 to i64
  %exitcond221 = icmp ne i64 %indvars.iv.next219, %wide.trip.count220
  br i1 %exitcond221, label %1992, label %1999

; <label>:1999:                                   ; preds = %1998
  %2000 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2001 = getelementptr [2 x i8], [2 x i8]* @.str.6.153, i32 0, i32 0
  %2002 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2000, i8* %2001)
  br label %2003

; <label>:2003:                                   ; preds = %1999, %1982
  br label %2004

; <label>:2004:                                   ; preds = %2003, %2011
  %indvars.iv223 = phi i64 [ 0, %2003 ], [ %indvars.iv.next224, %2011 ]
  call void @unroll_loop(i32 69)
  %2005 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2006 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2005, i64 0, i64 %indvars.iv223
  %2007 = getelementptr inbounds [258 x i8], [258 x i8]* %2006, i64 0, i64 0
  %2008 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %2009 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2008, i64 0, i64 %indvars.iv223
  %2010 = getelementptr inbounds [258 x i32], [258 x i32]* %2009, i64 0, i64 0
  call void @BZ2_hbMakeCodeLengths(i8* %2007, i32* %2010, i32 %24, i32 17)
  br label %2011

; <label>:2011:                                   ; preds = %2004
  %indvars.iv.next224 = add nuw nsw i64 %indvars.iv223, 1
  %wide.trip.count225 = zext i32 %.346 to i64
  %exitcond226 = icmp ne i64 %indvars.iv.next224, %wide.trip.count225
  br i1 %exitcond226, label %2004, label %2012

; <label>:2012:                                   ; preds = %2011
  br label %2013

; <label>:2013:                                   ; preds = %2012
  %2014 = add nuw nsw i32 %.034227, 1
  %exitcond228 = icmp ne i32 %2014, 4
  br i1 %exitcond228, label %150, label %2015

; <label>:2015:                                   ; preds = %2013
  %.035.lcssa = phi i32 [ %.136.lcssa, %2013 ]
  %2016 = icmp slt i32 %.346, 8
  br i1 %2016, label %2018, label %2017

; <label>:2017:                                   ; preds = %2015
  call void @BZ2_bz__AssertH__fail(i32 3002)
  br label %2018

; <label>:2018:                                   ; preds = %2017, %2015
  %2019 = icmp slt i32 %.035.lcssa, 32768
  br i1 %2019, label %2020, label %2022

; <label>:2020:                                   ; preds = %2018
  %2021 = icmp sle i32 %.035.lcssa, 18002
  br i1 %2021, label %2023, label %2022

; <label>:2022:                                   ; preds = %2020, %2018
  call void @BZ2_bz__AssertH__fail(i32 3003)
  br label %2023

; <label>:2023:                                   ; preds = %2022, %2020
  br label %2024

; <label>:2024:                                   ; preds = %2023, %2027
  %indvars.iv148 = phi i64 [ 0, %2023 ], [ %indvars.iv.next149, %2027 ]
  %.210147 = phi i32 [ 0, %2023 ], [ %2028, %2027 ]
  %2025 = trunc i32 %.210147 to i8
  %2026 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 %indvars.iv148
  store i8 %2025, i8* %2026, align 1
  br label %2027

; <label>:2027:                                   ; preds = %2024
  %indvars.iv.next149 = add nuw nsw i64 %indvars.iv148, 1
  %2028 = add nuw nsw i32 %.210147, 1
  %wide.trip.count150 = zext i32 %.346 to i64
  %exitcond151 = icmp ne i64 %indvars.iv.next149, %wide.trip.count150
  br i1 %exitcond151, label %2024, label %2029

; <label>:2029:                                   ; preds = %2027
  %2030 = icmp slt i32 0, %.035.lcssa
  br i1 %2030, label %.lr.ph141, label %2054

.lr.ph141:                                        ; preds = %2029
  br label %2031

; <label>:2031:                                   ; preds = %.lr.ph141, %2053
  %indvars.iv143 = phi i64 [ 0, %.lr.ph141 ], [ %indvars.iv.next144, %2053 ]
  call void @unroll_loop(i32 70)
  %2032 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2033 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2032, i64 0, i64 %indvars.iv143
  %2034 = load i8, i8* %2033, align 1
  %2035 = sext i32 0 to i64
  %2036 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 %2035
  %2037 = load i8, i8* %2036, align 1
  %2038 = zext i8 %2034 to i32
  %2039 = zext i8 %2037 to i32
  %2040 = icmp ne i32 %2038, %2039
  br i1 %2040, label %.lr.ph133, label %2048

.lr.ph133:                                        ; preds = %2031
  br label %2041

; <label>:2041:                                   ; preds = %.lr.ph133, %2041
  %indvars.iv137 = phi i64 [ 0, %.lr.ph133 ], [ %indvars.iv.next138, %2041 ]
  %.037130 = phi i8 [ %2037, %.lr.ph133 ], [ %2043, %2041 ]
  call void @unroll_loop(i32 71)
  %indvars.iv.next138 = add nuw nsw i64 %indvars.iv137, 1
  %2042 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 %indvars.iv.next138
  %2043 = load i8, i8* %2042, align 1
  %2044 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 %indvars.iv.next138
  store i8 %.037130, i8* %2044, align 1
  %2045 = zext i8 %2043 to i32
  %2046 = icmp ne i32 %2038, %2045
  br i1 %2046, label %2041, label %._crit_edge134

._crit_edge134:                                   ; preds = %2041
  %split135 = phi i8 [ %2043, %2041 ]
  %split136.wide = phi i64 [ %indvars.iv.next138, %2041 ]
  %2047 = trunc i64 %split136.wide to i32
  br label %2048

; <label>:2048:                                   ; preds = %._crit_edge134, %2031
  %.037.lcssa = phi i8 [ %split135, %._crit_edge134 ], [ %2037, %2031 ]
  %.018.lcssa = phi i32 [ %2047, %._crit_edge134 ], [ 0, %2031 ]
  %2049 = getelementptr inbounds [6 x i8], [6 x i8]* %4, i64 0, i64 0
  store i8 %.037.lcssa, i8* %2049, align 1
  %2050 = trunc i32 %.018.lcssa to i8
  %2051 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 34
  %2052 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2051, i64 0, i64 %indvars.iv143
  store i8 %2050, i8* %2052, align 1
  br label %2053

; <label>:2053:                                   ; preds = %2048
  %indvars.iv.next144 = add nuw nsw i64 %indvars.iv143, 1
  %wide.trip.count145 = zext i32 %.035.lcssa to i64
  %exitcond146 = icmp ne i64 %indvars.iv.next144, %wide.trip.count145
  br i1 %exitcond146, label %2031, label %._crit_edge142

._crit_edge142:                                   ; preds = %2053
  br label %2054

; <label>:2054:                                   ; preds = %._crit_edge142, %2029
  %2055 = add i32 %23, 2
  br label %2056

; <label>:2056:                                   ; preds = %2054, %2099
  %indvars.iv126 = phi i64 [ 0, %2054 ], [ %indvars.iv.next127, %2099 ]
  call void @unroll_loop(i32 72)
  %2057 = icmp slt i32 0, %24
  br i1 %2057, label %.lr.ph117, label %2086

.lr.ph117:                                        ; preds = %2056
  br label %2058

; <label>:2058:                                   ; preds = %.lr.ph117, %2085
  %indvars.iv121 = phi i64 [ 0, %.lr.ph117 ], [ %indvars.iv.next122, %2085 ]
  %.038114 = phi i32 [ 32, %.lr.ph117 ], [ %.139, %2085 ]
  %.040113 = phi i32 [ 0, %.lr.ph117 ], [ %.141, %2085 ]
  call void @unroll_loop(i32 73)
  %2059 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2060 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2059, i64 0, i64 %indvars.iv126
  %2061 = getelementptr inbounds [258 x i8], [258 x i8]* %2060, i64 0, i64 %indvars.iv121
  %2062 = load i8, i8* %2061, align 1
  %2063 = zext i8 %2062 to i32
  %2064 = icmp sgt i32 %2063, %.040113
  br i1 %2064, label %2065, label %2071

; <label>:2065:                                   ; preds = %2058
  %2066 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2067 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2066, i64 0, i64 %indvars.iv126
  %2068 = getelementptr inbounds [258 x i8], [258 x i8]* %2067, i64 0, i64 %indvars.iv121
  %2069 = load i8, i8* %2068, align 1
  %2070 = zext i8 %2069 to i32
  br label %2071

; <label>:2071:                                   ; preds = %2065, %2058
  %.141 = phi i32 [ %2070, %2065 ], [ %.040113, %2058 ]
  %2072 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2073 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2072, i64 0, i64 %indvars.iv126
  %2074 = getelementptr inbounds [258 x i8], [258 x i8]* %2073, i64 0, i64 %indvars.iv121
  %2075 = load i8, i8* %2074, align 1
  %2076 = zext i8 %2075 to i32
  %2077 = icmp slt i32 %2076, %.038114
  br i1 %2077, label %2078, label %2084

; <label>:2078:                                   ; preds = %2071
  %2079 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2080 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2079, i64 0, i64 %indvars.iv126
  %2081 = getelementptr inbounds [258 x i8], [258 x i8]* %2080, i64 0, i64 %indvars.iv121
  %2082 = load i8, i8* %2081, align 1
  %2083 = zext i8 %2082 to i32
  br label %2084

; <label>:2084:                                   ; preds = %2078, %2071
  %.139 = phi i32 [ %2083, %2078 ], [ %.038114, %2071 ]
  br label %2085

; <label>:2085:                                   ; preds = %2084
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1
  %wide.trip.count123 = zext i32 %2055 to i64
  %exitcond124 = icmp ne i64 %indvars.iv.next122, %wide.trip.count123
  br i1 %exitcond124, label %2058, label %._crit_edge118

._crit_edge118:                                   ; preds = %2085
  %split119 = phi i32 [ %.141, %2085 ]
  %split120 = phi i32 [ %.139, %2085 ]
  br label %2086

; <label>:2086:                                   ; preds = %._crit_edge118, %2056
  %.040.lcssa = phi i32 [ %split119, %._crit_edge118 ], [ 0, %2056 ]
  %.038.lcssa = phi i32 [ %split120, %._crit_edge118 ], [ 32, %2056 ]
  %2087 = icmp sgt i32 %.040.lcssa, 17
  br i1 %2087, label %2088, label %2089

; <label>:2088:                                   ; preds = %2086
  call void @BZ2_bz__AssertH__fail(i32 3004)
  br label %2089

; <label>:2089:                                   ; preds = %2088, %2086
  %2090 = icmp slt i32 %.038.lcssa, 1
  br i1 %2090, label %2091, label %2092

; <label>:2091:                                   ; preds = %2089
  call void @BZ2_bz__AssertH__fail(i32 3005)
  br label %2092

; <label>:2092:                                   ; preds = %2091, %2089
  %2093 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 36
  %2094 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2093, i64 0, i64 %indvars.iv126
  %2095 = getelementptr inbounds [258 x i32], [258 x i32]* %2094, i64 0, i64 0
  %2096 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2097 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2096, i64 0, i64 %indvars.iv126
  %2098 = getelementptr inbounds [258 x i8], [258 x i8]* %2097, i64 0, i64 0
  call void @BZ2_hbAssignCodes(i32* %2095, i8* %2098, i32 %.038.lcssa, i32 %.040.lcssa, i32 %24)
  br label %2099

; <label>:2099:                                   ; preds = %2092
  %indvars.iv.next127 = add nuw nsw i64 %indvars.iv126, 1
  %wide.trip.count128 = zext i32 %.346 to i64
  %exitcond129 = icmp ne i64 %indvars.iv.next127, %wide.trip.count128
  br i1 %exitcond129, label %2056, label %2100

; <label>:2100:                                   ; preds = %2099
  br label %2101

; <label>:2101:                                   ; preds = %2100, %2115
  %indvars.iv110 = phi i64 [ 0, %2100 ], [ %indvars.iv.next111, %2115 ]
  %2102 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %indvars.iv110
  store i8 0, i8* %2102, align 1
  br label %2103

; <label>:2103:                                   ; preds = %2101, %2113
  %indvars.iv106 = phi i64 [ 0, %2101 ], [ %indvars.iv.next107, %2113 ]
  call void @unroll_loop(i32 74)
  %2104 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %2105 = mul nuw nsw i64 %indvars.iv110, 16
  %2106 = add nuw nsw i64 %2105, %indvars.iv106
  %2107 = getelementptr inbounds [256 x i8], [256 x i8]* %2104, i64 0, i64 %2106
  %2108 = load i8, i8* %2107, align 1
  %2109 = icmp ne i8 %2108, 0
  br i1 %2109, label %2110, label %2112

; <label>:2110:                                   ; preds = %2103
  %2111 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %indvars.iv110
  store i8 1, i8* %2111, align 1
  br label %2112

; <label>:2112:                                   ; preds = %2110, %2103
  br label %2113

; <label>:2113:                                   ; preds = %2112
  %indvars.iv.next107 = add nuw nsw i64 %indvars.iv106, 1
  %exitcond108 = icmp ne i64 %indvars.iv.next107, 16
  br i1 %exitcond108, label %2103, label %2114

; <label>:2114:                                   ; preds = %2113
  br label %2115

; <label>:2115:                                   ; preds = %2114
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond112 = icmp ne i64 %indvars.iv.next111, 16
  br i1 %exitcond112, label %2101, label %2116

; <label>:2116:                                   ; preds = %2115
  %2117 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2118 = load i32, i32* %2117, align 4
  br label %2119

; <label>:2119:                                   ; preds = %2116, %2126
  %indvars.iv102 = phi i64 [ 0, %2116 ], [ %indvars.iv.next103, %2126 ]
  call void @unroll_loop(i32 75)
  %2120 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %indvars.iv102
  %2121 = load i8, i8* %2120, align 1
  %2122 = icmp ne i8 %2121, 0
  br i1 %2122, label %2123, label %2124

; <label>:2123:                                   ; preds = %2119
  call void @bsW(%struct.EState* %0, i32 1, i32 1)
  br label %2125

; <label>:2124:                                   ; preds = %2119
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  br label %2125

; <label>:2125:                                   ; preds = %2124, %2123
  br label %2126

; <label>:2126:                                   ; preds = %2125
  %indvars.iv.next103 = add nuw nsw i64 %indvars.iv102, 1
  %exitcond104 = icmp ne i64 %indvars.iv.next103, 16
  br i1 %exitcond104, label %2119, label %2127

; <label>:2127:                                   ; preds = %2126
  br label %2128

; <label>:2128:                                   ; preds = %2127, %2146
  %indvars.iv98 = phi i64 [ 0, %2127 ], [ %indvars.iv.next99, %2146 ]
  %2129 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 %indvars.iv98
  %2130 = load i8, i8* %2129, align 1
  %2131 = icmp ne i8 %2130, 0
  br i1 %2131, label %2132, label %2145

; <label>:2132:                                   ; preds = %2128
  br label %2133

; <label>:2133:                                   ; preds = %2132, %2143
  %indvars.iv94 = phi i64 [ 0, %2132 ], [ %indvars.iv.next95, %2143 ]
  call void @unroll_loop(i32 76)
  %2134 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %2135 = mul nuw nsw i64 %indvars.iv98, 16
  %2136 = add nuw nsw i64 %2135, %indvars.iv94
  %2137 = getelementptr inbounds [256 x i8], [256 x i8]* %2134, i64 0, i64 %2136
  %2138 = load i8, i8* %2137, align 1
  %2139 = icmp ne i8 %2138, 0
  br i1 %2139, label %2140, label %2141

; <label>:2140:                                   ; preds = %2133
  call void @bsW(%struct.EState* %0, i32 1, i32 1)
  br label %2142

; <label>:2141:                                   ; preds = %2133
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  br label %2142

; <label>:2142:                                   ; preds = %2141, %2140
  br label %2143

; <label>:2143:                                   ; preds = %2142
  %indvars.iv.next95 = add nuw nsw i64 %indvars.iv94, 1
  %exitcond96 = icmp ne i64 %indvars.iv.next95, 16
  br i1 %exitcond96, label %2133, label %2144

; <label>:2144:                                   ; preds = %2143
  br label %2145

; <label>:2145:                                   ; preds = %2144, %2128
  br label %2146

; <label>:2146:                                   ; preds = %2145
  %indvars.iv.next99 = add nuw nsw i64 %indvars.iv98, 1
  %exitcond100 = icmp ne i64 %indvars.iv.next99, 16
  br i1 %exitcond100, label %2128, label %2147

; <label>:2147:                                   ; preds = %2146
  %2148 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %2149 = load i32, i32* %2148, align 8
  %2150 = icmp sge i32 %2149, 3
  br i1 %2150, label %2151, label %2158

; <label>:2151:                                   ; preds = %2147
  %2152 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2153 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2154 = load i32, i32* %2153, align 4
  %2155 = sub nsw i32 %2154, %2118
  %2156 = getelementptr [26 x i8], [26 x i8]* @.str.7.154, i32 0, i32 0
  %2157 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2152, i8* %2156, i32 %2155)
  br label %2158

; <label>:2158:                                   ; preds = %2151, %2147
  %2159 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2160 = load i32, i32* %2159, align 4
  call void @bsW(%struct.EState* %0, i32 3, i32 %.346)
  call void @bsW(%struct.EState* %0, i32 15, i32 %.035.lcssa)
  %2161 = icmp slt i32 0, %.035.lcssa
  br i1 %2161, label %.lr.ph87, label %2176

.lr.ph87:                                         ; preds = %2158
  br label %2162

; <label>:2162:                                   ; preds = %.lr.ph87, %2175
  %indvars.iv89 = phi i64 [ 0, %.lr.ph87 ], [ %indvars.iv.next90, %2175 ]
  call void @unroll_loop(i32 77)
  %2163 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 34
  %2164 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2163, i64 0, i64 %indvars.iv89
  %2165 = load i8, i8* %2164, align 1
  %2166 = zext i8 %2165 to i32
  %2167 = icmp slt i32 0, %2166
  br i1 %2167, label %.lr.ph83, label %2174

.lr.ph83:                                         ; preds = %2162
  br label %2168

; <label>:2168:                                   ; preds = %.lr.ph83, %2169
  %.32181 = phi i32 [ 0, %.lr.ph83 ], [ %2170, %2169 ]
  call void @unroll_loop(i32 78)
  call void @bsW(%struct.EState* %0, i32 1, i32 1)
  br label %2169

; <label>:2169:                                   ; preds = %2168
  %2170 = add nuw nsw i32 %.32181, 1
  %2171 = load i8, i8* %2164, align 1
  %2172 = zext i8 %2171 to i32
  %2173 = icmp ult i32 %2170, %2172
  br i1 %2173, label %2168, label %._crit_edge84

._crit_edge84:                                    ; preds = %2169
  br label %2174

; <label>:2174:                                   ; preds = %._crit_edge84, %2162
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  br label %2175

; <label>:2175:                                   ; preds = %2174
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1
  %wide.trip.count91 = zext i32 %.035.lcssa to i64
  %exitcond92 = icmp ne i64 %indvars.iv.next90, %wide.trip.count91
  br i1 %exitcond92, label %2162, label %._crit_edge88

._crit_edge88:                                    ; preds = %2175
  br label %2176

; <label>:2176:                                   ; preds = %._crit_edge88, %2158
  %2177 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %2178 = load i32, i32* %2177, align 8
  %2179 = icmp sge i32 %2178, 3
  br i1 %2179, label %2180, label %2187

; <label>:2180:                                   ; preds = %2176
  %2181 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2182 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2183 = load i32, i32* %2182, align 4
  %2184 = sub nsw i32 %2183, %2160
  %2185 = getelementptr [15 x i8], [15 x i8]* @.str.8.155, i32 0, i32 0
  %2186 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2181, i8* %2185, i32 %2184)
  br label %2187

; <label>:2187:                                   ; preds = %2180, %2176
  %2188 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2189 = load i32, i32* %2188, align 4
  %2190 = add i32 %23, 2
  br label %2191

; <label>:2191:                                   ; preds = %2187, %2225
  %indvars.iv77 = phi i64 [ 0, %2187 ], [ %indvars.iv.next78, %2225 ]
  call void @unroll_loop(i32 79)
  %2192 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2193 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2192, i64 0, i64 %indvars.iv77
  %2194 = getelementptr inbounds [258 x i8], [258 x i8]* %2193, i64 0, i64 0
  %2195 = load i8, i8* %2194, align 2
  %2196 = zext i8 %2195 to i32
  call void @bsW(%struct.EState* %0, i32 5, i32 %2196)
  %2197 = icmp slt i32 0, %24
  br i1 %2197, label %.lr.ph72, label %2224

.lr.ph72:                                         ; preds = %2191
  br label %2198

; <label>:2198:                                   ; preds = %.lr.ph72, %2223
  %indvars.iv74 = phi i64 [ 0, %.lr.ph72 ], [ %indvars.iv.next75, %2223 ]
  %.070 = phi i32 [ %2196, %.lr.ph72 ], [ %.2.lcssa, %2223 ]
  call void @unroll_loop(i32 80)
  %2199 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2200 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2199, i64 0, i64 %indvars.iv77
  %2201 = getelementptr inbounds [258 x i8], [258 x i8]* %2200, i64 0, i64 %indvars.iv74
  %2202 = load i8, i8* %2201, align 1
  %2203 = zext i8 %2202 to i32
  %2204 = icmp slt i32 %.070, %2203
  br i1 %2204, label %.lr.ph61, label %2210

.lr.ph61:                                         ; preds = %2198
  br label %2205

; <label>:2205:                                   ; preds = %.lr.ph61, %2205
  %.159 = phi i32 [ %.070, %.lr.ph61 ], [ %2206, %2205 ]
  call void @unroll_loop(i32 81)
  call void @bsW(%struct.EState* %0, i32 2, i32 2)
  %2206 = add nsw i32 %.159, 1
  %2207 = load i8, i8* %2201, align 1
  %2208 = zext i8 %2207 to i32
  %2209 = icmp slt i32 %2206, %2208
  br i1 %2209, label %2205, label %._crit_edge62

._crit_edge62:                                    ; preds = %2205
  %split63 = phi i32 [ %2206, %2205 ]
  br label %2210

; <label>:2210:                                   ; preds = %._crit_edge62, %2198
  %.1.lcssa = phi i32 [ %split63, %._crit_edge62 ], [ %.070, %2198 ]
  %2211 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2212 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2211, i64 0, i64 %indvars.iv77
  %2213 = getelementptr inbounds [258 x i8], [258 x i8]* %2212, i64 0, i64 %indvars.iv74
  %2214 = load i8, i8* %2213, align 1
  %2215 = zext i8 %2214 to i32
  %2216 = icmp sgt i32 %.1.lcssa, %2215
  br i1 %2216, label %.lr.ph66, label %2222

.lr.ph66:                                         ; preds = %2210
  br label %2217

; <label>:2217:                                   ; preds = %.lr.ph66, %2217
  %.264 = phi i32 [ %.1.lcssa, %.lr.ph66 ], [ %2218, %2217 ]
  call void @unroll_loop(i32 82)
  call void @bsW(%struct.EState* %0, i32 2, i32 3)
  %2218 = add nsw i32 %.264, -1
  %2219 = load i8, i8* %2213, align 1
  %2220 = zext i8 %2219 to i32
  %2221 = icmp sgt i32 %2218, %2220
  br i1 %2221, label %2217, label %._crit_edge67

._crit_edge67:                                    ; preds = %2217
  %split68 = phi i32 [ %2218, %2217 ]
  br label %2222

; <label>:2222:                                   ; preds = %._crit_edge67, %2210
  %.2.lcssa = phi i32 [ %split68, %._crit_edge67 ], [ %.1.lcssa, %2210 ]
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  br label %2223

; <label>:2223:                                   ; preds = %2222
  %indvars.iv.next75 = add nuw nsw i64 %indvars.iv74, 1
  %wide.trip.count = zext i32 %2190 to i64
  %exitcond = icmp ne i64 %indvars.iv.next75, %wide.trip.count
  br i1 %exitcond, label %2198, label %._crit_edge73

._crit_edge73:                                    ; preds = %2223
  br label %2224

; <label>:2224:                                   ; preds = %._crit_edge73, %2191
  br label %2225

; <label>:2225:                                   ; preds = %2224
  %indvars.iv.next78 = add nuw nsw i64 %indvars.iv77, 1
  %wide.trip.count79 = zext i32 %.346 to i64
  %exitcond80 = icmp ne i64 %indvars.iv.next78, %wide.trip.count79
  br i1 %exitcond80, label %2191, label %2226

; <label>:2226:                                   ; preds = %2225
  %2227 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %2228 = load i32, i32* %2227, align 8
  %2229 = icmp sge i32 %2228, 3
  br i1 %2229, label %2230, label %2237

; <label>:2230:                                   ; preds = %2226
  %2231 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2232 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2233 = load i32, i32* %2232, align 4
  %2234 = sub nsw i32 %2233, %2189
  %2235 = getelementptr [18 x i8], [18 x i8]* @.str.9.156, i32 0, i32 0
  %2236 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2231, i8* %2235, i32 %2234)
  br label %2237

; <label>:2237:                                   ; preds = %2230, %2226
  %2238 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2239 = load i32, i32* %2238, align 4
  %2240 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %2241 = load i32, i32* %2240, align 4
  %2242 = icmp sge i32 0, %2241
  br i1 %2242, label %2243, label %.lr.ph57

.lr.ph57:                                         ; preds = %2237
  br label %2244

._crit_edge58:                                    ; preds = %2867
  %split = phi i32 [ %2869, %2867 ]
  br label %2243

; <label>:2243:                                   ; preds = %._crit_edge58, %2237
  %.042.lcssa = phi i32 [ %split, %._crit_edge58 ], [ 0, %2237 ]
  br label %2872

; <label>:2244:                                   ; preds = %.lr.ph57, %2867
  %.22455 = phi i32 [ 0, %.lr.ph57 ], [ %2868, %2867 ]
  %.04252 = phi i32 [ 0, %.lr.ph57 ], [ %2869, %2867 ]
  call void @unroll_loop(i32 83)
  %2245 = add nsw i32 %.22455, 50
  %2246 = sub nsw i32 %2245, 1
  %2247 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %2248 = load i32, i32* %2247, align 4
  %2249 = icmp sge i32 %2246, %2248
  br i1 %2249, label %2250, label %2254

; <label>:2250:                                   ; preds = %2244
  %2251 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %2252 = load i32, i32* %2251, align 4
  %2253 = sub nsw i32 %2252, 1
  br label %2254

; <label>:2254:                                   ; preds = %2250, %2244
  %.328 = phi i32 [ %2253, %2250 ], [ %2246, %2244 ]
  %2255 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2256 = sext i32 %.04252 to i64
  %2257 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2255, i64 0, i64 %2256
  %2258 = load i8, i8* %2257, align 1
  %2259 = zext i8 %2258 to i32
  %2260 = icmp slt i32 %2259, %.346
  br i1 %2260, label %2262, label %2261

; <label>:2261:                                   ; preds = %2254
  call void @BZ2_bz__AssertH__fail(i32 3006)
  br label %2262

; <label>:2262:                                   ; preds = %2261, %2254
  %2263 = icmp eq i32 %.346, 6
  br i1 %2263, label %2264, label %2834

; <label>:2264:                                   ; preds = %2262
  %2265 = sub nsw i32 %.328, %.22455
  %2266 = add nsw i32 %2265, 1
  %2267 = icmp eq i32 50, %2266
  br i1 %2267, label %2268, label %2834

; <label>:2268:                                   ; preds = %2264
  %2269 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2270 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2271 = sext i32 %.04252 to i64
  %2272 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2270, i64 0, i64 %2271
  %2273 = load i8, i8* %2272, align 1
  %2274 = zext i8 %2273 to i64
  %2275 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2269, i64 0, i64 %2274
  %2276 = getelementptr inbounds [258 x i8], [258 x i8]* %2275, i64 0, i64 0
  %2277 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 36
  %2278 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2279 = sext i32 %.04252 to i64
  %2280 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2278, i64 0, i64 %2279
  %2281 = load i8, i8* %2280, align 1
  %2282 = zext i8 %2281 to i64
  %2283 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2277, i64 0, i64 %2282
  %2284 = getelementptr inbounds [258 x i32], [258 x i32]* %2283, i64 0, i64 0
  %2285 = sext i32 %.22455 to i64
  %2286 = getelementptr inbounds i16, i16* %7, i64 %2285
  %2287 = load i16, i16* %2286, align 2
  %2288 = zext i16 %2287 to i64
  %2289 = getelementptr inbounds i8, i8* %2276, i64 %2288
  %2290 = load i8, i8* %2289, align 1
  %2291 = zext i8 %2290 to i32
  %2292 = zext i16 %2287 to i64
  %2293 = getelementptr inbounds i32, i32* %2284, i64 %2292
  %2294 = load i32, i32* %2293, align 4
  call void @bsW(%struct.EState* %0, i32 %2291, i32 %2294)
  %2295 = add nsw i32 %.22455, 1
  %2296 = sext i32 %2295 to i64
  %2297 = getelementptr inbounds i16, i16* %7, i64 %2296
  %2298 = load i16, i16* %2297, align 2
  %2299 = zext i16 %2298 to i64
  %2300 = getelementptr inbounds i8, i8* %2276, i64 %2299
  %2301 = load i8, i8* %2300, align 1
  %2302 = zext i8 %2301 to i32
  %2303 = zext i16 %2298 to i64
  %2304 = getelementptr inbounds i32, i32* %2284, i64 %2303
  %2305 = load i32, i32* %2304, align 4
  call void @bsW(%struct.EState* %0, i32 %2302, i32 %2305)
  %2306 = add nsw i32 %.22455, 2
  %2307 = sext i32 %2306 to i64
  %2308 = getelementptr inbounds i16, i16* %7, i64 %2307
  %2309 = load i16, i16* %2308, align 2
  %2310 = zext i16 %2309 to i64
  %2311 = getelementptr inbounds i8, i8* %2276, i64 %2310
  %2312 = load i8, i8* %2311, align 1
  %2313 = zext i8 %2312 to i32
  %2314 = zext i16 %2309 to i64
  %2315 = getelementptr inbounds i32, i32* %2284, i64 %2314
  %2316 = load i32, i32* %2315, align 4
  call void @bsW(%struct.EState* %0, i32 %2313, i32 %2316)
  %2317 = add nsw i32 %.22455, 3
  %2318 = sext i32 %2317 to i64
  %2319 = getelementptr inbounds i16, i16* %7, i64 %2318
  %2320 = load i16, i16* %2319, align 2
  %2321 = zext i16 %2320 to i64
  %2322 = getelementptr inbounds i8, i8* %2276, i64 %2321
  %2323 = load i8, i8* %2322, align 1
  %2324 = zext i8 %2323 to i32
  %2325 = zext i16 %2320 to i64
  %2326 = getelementptr inbounds i32, i32* %2284, i64 %2325
  %2327 = load i32, i32* %2326, align 4
  call void @bsW(%struct.EState* %0, i32 %2324, i32 %2327)
  %2328 = add nsw i32 %.22455, 4
  %2329 = sext i32 %2328 to i64
  %2330 = getelementptr inbounds i16, i16* %7, i64 %2329
  %2331 = load i16, i16* %2330, align 2
  %2332 = zext i16 %2331 to i64
  %2333 = getelementptr inbounds i8, i8* %2276, i64 %2332
  %2334 = load i8, i8* %2333, align 1
  %2335 = zext i8 %2334 to i32
  %2336 = zext i16 %2331 to i64
  %2337 = getelementptr inbounds i32, i32* %2284, i64 %2336
  %2338 = load i32, i32* %2337, align 4
  call void @bsW(%struct.EState* %0, i32 %2335, i32 %2338)
  %2339 = add nsw i32 %.22455, 5
  %2340 = sext i32 %2339 to i64
  %2341 = getelementptr inbounds i16, i16* %7, i64 %2340
  %2342 = load i16, i16* %2341, align 2
  %2343 = zext i16 %2342 to i64
  %2344 = getelementptr inbounds i8, i8* %2276, i64 %2343
  %2345 = load i8, i8* %2344, align 1
  %2346 = zext i8 %2345 to i32
  %2347 = zext i16 %2342 to i64
  %2348 = getelementptr inbounds i32, i32* %2284, i64 %2347
  %2349 = load i32, i32* %2348, align 4
  call void @bsW(%struct.EState* %0, i32 %2346, i32 %2349)
  %2350 = add nsw i32 %.22455, 6
  %2351 = sext i32 %2350 to i64
  %2352 = getelementptr inbounds i16, i16* %7, i64 %2351
  %2353 = load i16, i16* %2352, align 2
  %2354 = zext i16 %2353 to i64
  %2355 = getelementptr inbounds i8, i8* %2276, i64 %2354
  %2356 = load i8, i8* %2355, align 1
  %2357 = zext i8 %2356 to i32
  %2358 = zext i16 %2353 to i64
  %2359 = getelementptr inbounds i32, i32* %2284, i64 %2358
  %2360 = load i32, i32* %2359, align 4
  call void @bsW(%struct.EState* %0, i32 %2357, i32 %2360)
  %2361 = add nsw i32 %.22455, 7
  %2362 = sext i32 %2361 to i64
  %2363 = getelementptr inbounds i16, i16* %7, i64 %2362
  %2364 = load i16, i16* %2363, align 2
  %2365 = zext i16 %2364 to i64
  %2366 = getelementptr inbounds i8, i8* %2276, i64 %2365
  %2367 = load i8, i8* %2366, align 1
  %2368 = zext i8 %2367 to i32
  %2369 = zext i16 %2364 to i64
  %2370 = getelementptr inbounds i32, i32* %2284, i64 %2369
  %2371 = load i32, i32* %2370, align 4
  call void @bsW(%struct.EState* %0, i32 %2368, i32 %2371)
  %2372 = add nsw i32 %.22455, 8
  %2373 = sext i32 %2372 to i64
  %2374 = getelementptr inbounds i16, i16* %7, i64 %2373
  %2375 = load i16, i16* %2374, align 2
  %2376 = zext i16 %2375 to i64
  %2377 = getelementptr inbounds i8, i8* %2276, i64 %2376
  %2378 = load i8, i8* %2377, align 1
  %2379 = zext i8 %2378 to i32
  %2380 = zext i16 %2375 to i64
  %2381 = getelementptr inbounds i32, i32* %2284, i64 %2380
  %2382 = load i32, i32* %2381, align 4
  call void @bsW(%struct.EState* %0, i32 %2379, i32 %2382)
  %2383 = add nsw i32 %.22455, 9
  %2384 = sext i32 %2383 to i64
  %2385 = getelementptr inbounds i16, i16* %7, i64 %2384
  %2386 = load i16, i16* %2385, align 2
  %2387 = zext i16 %2386 to i64
  %2388 = getelementptr inbounds i8, i8* %2276, i64 %2387
  %2389 = load i8, i8* %2388, align 1
  %2390 = zext i8 %2389 to i32
  %2391 = zext i16 %2386 to i64
  %2392 = getelementptr inbounds i32, i32* %2284, i64 %2391
  %2393 = load i32, i32* %2392, align 4
  call void @bsW(%struct.EState* %0, i32 %2390, i32 %2393)
  %2394 = add nsw i32 %.22455, 10
  %2395 = sext i32 %2394 to i64
  %2396 = getelementptr inbounds i16, i16* %7, i64 %2395
  %2397 = load i16, i16* %2396, align 2
  %2398 = zext i16 %2397 to i64
  %2399 = getelementptr inbounds i8, i8* %2276, i64 %2398
  %2400 = load i8, i8* %2399, align 1
  %2401 = zext i8 %2400 to i32
  %2402 = zext i16 %2397 to i64
  %2403 = getelementptr inbounds i32, i32* %2284, i64 %2402
  %2404 = load i32, i32* %2403, align 4
  call void @bsW(%struct.EState* %0, i32 %2401, i32 %2404)
  %2405 = add nsw i32 %.22455, 11
  %2406 = sext i32 %2405 to i64
  %2407 = getelementptr inbounds i16, i16* %7, i64 %2406
  %2408 = load i16, i16* %2407, align 2
  %2409 = zext i16 %2408 to i64
  %2410 = getelementptr inbounds i8, i8* %2276, i64 %2409
  %2411 = load i8, i8* %2410, align 1
  %2412 = zext i8 %2411 to i32
  %2413 = zext i16 %2408 to i64
  %2414 = getelementptr inbounds i32, i32* %2284, i64 %2413
  %2415 = load i32, i32* %2414, align 4
  call void @bsW(%struct.EState* %0, i32 %2412, i32 %2415)
  %2416 = add nsw i32 %.22455, 12
  %2417 = sext i32 %2416 to i64
  %2418 = getelementptr inbounds i16, i16* %7, i64 %2417
  %2419 = load i16, i16* %2418, align 2
  %2420 = zext i16 %2419 to i64
  %2421 = getelementptr inbounds i8, i8* %2276, i64 %2420
  %2422 = load i8, i8* %2421, align 1
  %2423 = zext i8 %2422 to i32
  %2424 = zext i16 %2419 to i64
  %2425 = getelementptr inbounds i32, i32* %2284, i64 %2424
  %2426 = load i32, i32* %2425, align 4
  call void @bsW(%struct.EState* %0, i32 %2423, i32 %2426)
  %2427 = add nsw i32 %.22455, 13
  %2428 = sext i32 %2427 to i64
  %2429 = getelementptr inbounds i16, i16* %7, i64 %2428
  %2430 = load i16, i16* %2429, align 2
  %2431 = zext i16 %2430 to i64
  %2432 = getelementptr inbounds i8, i8* %2276, i64 %2431
  %2433 = load i8, i8* %2432, align 1
  %2434 = zext i8 %2433 to i32
  %2435 = zext i16 %2430 to i64
  %2436 = getelementptr inbounds i32, i32* %2284, i64 %2435
  %2437 = load i32, i32* %2436, align 4
  call void @bsW(%struct.EState* %0, i32 %2434, i32 %2437)
  %2438 = add nsw i32 %.22455, 14
  %2439 = sext i32 %2438 to i64
  %2440 = getelementptr inbounds i16, i16* %7, i64 %2439
  %2441 = load i16, i16* %2440, align 2
  %2442 = zext i16 %2441 to i64
  %2443 = getelementptr inbounds i8, i8* %2276, i64 %2442
  %2444 = load i8, i8* %2443, align 1
  %2445 = zext i8 %2444 to i32
  %2446 = zext i16 %2441 to i64
  %2447 = getelementptr inbounds i32, i32* %2284, i64 %2446
  %2448 = load i32, i32* %2447, align 4
  call void @bsW(%struct.EState* %0, i32 %2445, i32 %2448)
  %2449 = add nsw i32 %.22455, 15
  %2450 = sext i32 %2449 to i64
  %2451 = getelementptr inbounds i16, i16* %7, i64 %2450
  %2452 = load i16, i16* %2451, align 2
  %2453 = zext i16 %2452 to i64
  %2454 = getelementptr inbounds i8, i8* %2276, i64 %2453
  %2455 = load i8, i8* %2454, align 1
  %2456 = zext i8 %2455 to i32
  %2457 = zext i16 %2452 to i64
  %2458 = getelementptr inbounds i32, i32* %2284, i64 %2457
  %2459 = load i32, i32* %2458, align 4
  call void @bsW(%struct.EState* %0, i32 %2456, i32 %2459)
  %2460 = add nsw i32 %.22455, 16
  %2461 = sext i32 %2460 to i64
  %2462 = getelementptr inbounds i16, i16* %7, i64 %2461
  %2463 = load i16, i16* %2462, align 2
  %2464 = zext i16 %2463 to i64
  %2465 = getelementptr inbounds i8, i8* %2276, i64 %2464
  %2466 = load i8, i8* %2465, align 1
  %2467 = zext i8 %2466 to i32
  %2468 = zext i16 %2463 to i64
  %2469 = getelementptr inbounds i32, i32* %2284, i64 %2468
  %2470 = load i32, i32* %2469, align 4
  call void @bsW(%struct.EState* %0, i32 %2467, i32 %2470)
  %2471 = add nsw i32 %.22455, 17
  %2472 = sext i32 %2471 to i64
  %2473 = getelementptr inbounds i16, i16* %7, i64 %2472
  %2474 = load i16, i16* %2473, align 2
  %2475 = zext i16 %2474 to i64
  %2476 = getelementptr inbounds i8, i8* %2276, i64 %2475
  %2477 = load i8, i8* %2476, align 1
  %2478 = zext i8 %2477 to i32
  %2479 = zext i16 %2474 to i64
  %2480 = getelementptr inbounds i32, i32* %2284, i64 %2479
  %2481 = load i32, i32* %2480, align 4
  call void @bsW(%struct.EState* %0, i32 %2478, i32 %2481)
  %2482 = add nsw i32 %.22455, 18
  %2483 = sext i32 %2482 to i64
  %2484 = getelementptr inbounds i16, i16* %7, i64 %2483
  %2485 = load i16, i16* %2484, align 2
  %2486 = zext i16 %2485 to i64
  %2487 = getelementptr inbounds i8, i8* %2276, i64 %2486
  %2488 = load i8, i8* %2487, align 1
  %2489 = zext i8 %2488 to i32
  %2490 = zext i16 %2485 to i64
  %2491 = getelementptr inbounds i32, i32* %2284, i64 %2490
  %2492 = load i32, i32* %2491, align 4
  call void @bsW(%struct.EState* %0, i32 %2489, i32 %2492)
  %2493 = add nsw i32 %.22455, 19
  %2494 = sext i32 %2493 to i64
  %2495 = getelementptr inbounds i16, i16* %7, i64 %2494
  %2496 = load i16, i16* %2495, align 2
  %2497 = zext i16 %2496 to i64
  %2498 = getelementptr inbounds i8, i8* %2276, i64 %2497
  %2499 = load i8, i8* %2498, align 1
  %2500 = zext i8 %2499 to i32
  %2501 = zext i16 %2496 to i64
  %2502 = getelementptr inbounds i32, i32* %2284, i64 %2501
  %2503 = load i32, i32* %2502, align 4
  call void @bsW(%struct.EState* %0, i32 %2500, i32 %2503)
  %2504 = add nsw i32 %.22455, 20
  %2505 = sext i32 %2504 to i64
  %2506 = getelementptr inbounds i16, i16* %7, i64 %2505
  %2507 = load i16, i16* %2506, align 2
  %2508 = zext i16 %2507 to i64
  %2509 = getelementptr inbounds i8, i8* %2276, i64 %2508
  %2510 = load i8, i8* %2509, align 1
  %2511 = zext i8 %2510 to i32
  %2512 = zext i16 %2507 to i64
  %2513 = getelementptr inbounds i32, i32* %2284, i64 %2512
  %2514 = load i32, i32* %2513, align 4
  call void @bsW(%struct.EState* %0, i32 %2511, i32 %2514)
  %2515 = add nsw i32 %.22455, 21
  %2516 = sext i32 %2515 to i64
  %2517 = getelementptr inbounds i16, i16* %7, i64 %2516
  %2518 = load i16, i16* %2517, align 2
  %2519 = zext i16 %2518 to i64
  %2520 = getelementptr inbounds i8, i8* %2276, i64 %2519
  %2521 = load i8, i8* %2520, align 1
  %2522 = zext i8 %2521 to i32
  %2523 = zext i16 %2518 to i64
  %2524 = getelementptr inbounds i32, i32* %2284, i64 %2523
  %2525 = load i32, i32* %2524, align 4
  call void @bsW(%struct.EState* %0, i32 %2522, i32 %2525)
  %2526 = add nsw i32 %.22455, 22
  %2527 = sext i32 %2526 to i64
  %2528 = getelementptr inbounds i16, i16* %7, i64 %2527
  %2529 = load i16, i16* %2528, align 2
  %2530 = zext i16 %2529 to i64
  %2531 = getelementptr inbounds i8, i8* %2276, i64 %2530
  %2532 = load i8, i8* %2531, align 1
  %2533 = zext i8 %2532 to i32
  %2534 = zext i16 %2529 to i64
  %2535 = getelementptr inbounds i32, i32* %2284, i64 %2534
  %2536 = load i32, i32* %2535, align 4
  call void @bsW(%struct.EState* %0, i32 %2533, i32 %2536)
  %2537 = add nsw i32 %.22455, 23
  %2538 = sext i32 %2537 to i64
  %2539 = getelementptr inbounds i16, i16* %7, i64 %2538
  %2540 = load i16, i16* %2539, align 2
  %2541 = zext i16 %2540 to i64
  %2542 = getelementptr inbounds i8, i8* %2276, i64 %2541
  %2543 = load i8, i8* %2542, align 1
  %2544 = zext i8 %2543 to i32
  %2545 = zext i16 %2540 to i64
  %2546 = getelementptr inbounds i32, i32* %2284, i64 %2545
  %2547 = load i32, i32* %2546, align 4
  call void @bsW(%struct.EState* %0, i32 %2544, i32 %2547)
  %2548 = add nsw i32 %.22455, 24
  %2549 = sext i32 %2548 to i64
  %2550 = getelementptr inbounds i16, i16* %7, i64 %2549
  %2551 = load i16, i16* %2550, align 2
  %2552 = zext i16 %2551 to i64
  %2553 = getelementptr inbounds i8, i8* %2276, i64 %2552
  %2554 = load i8, i8* %2553, align 1
  %2555 = zext i8 %2554 to i32
  %2556 = zext i16 %2551 to i64
  %2557 = getelementptr inbounds i32, i32* %2284, i64 %2556
  %2558 = load i32, i32* %2557, align 4
  call void @bsW(%struct.EState* %0, i32 %2555, i32 %2558)
  %2559 = add nsw i32 %.22455, 25
  %2560 = sext i32 %2559 to i64
  %2561 = getelementptr inbounds i16, i16* %7, i64 %2560
  %2562 = load i16, i16* %2561, align 2
  %2563 = zext i16 %2562 to i64
  %2564 = getelementptr inbounds i8, i8* %2276, i64 %2563
  %2565 = load i8, i8* %2564, align 1
  %2566 = zext i8 %2565 to i32
  %2567 = zext i16 %2562 to i64
  %2568 = getelementptr inbounds i32, i32* %2284, i64 %2567
  %2569 = load i32, i32* %2568, align 4
  call void @bsW(%struct.EState* %0, i32 %2566, i32 %2569)
  %2570 = add nsw i32 %.22455, 26
  %2571 = sext i32 %2570 to i64
  %2572 = getelementptr inbounds i16, i16* %7, i64 %2571
  %2573 = load i16, i16* %2572, align 2
  %2574 = zext i16 %2573 to i64
  %2575 = getelementptr inbounds i8, i8* %2276, i64 %2574
  %2576 = load i8, i8* %2575, align 1
  %2577 = zext i8 %2576 to i32
  %2578 = zext i16 %2573 to i64
  %2579 = getelementptr inbounds i32, i32* %2284, i64 %2578
  %2580 = load i32, i32* %2579, align 4
  call void @bsW(%struct.EState* %0, i32 %2577, i32 %2580)
  %2581 = add nsw i32 %.22455, 27
  %2582 = sext i32 %2581 to i64
  %2583 = getelementptr inbounds i16, i16* %7, i64 %2582
  %2584 = load i16, i16* %2583, align 2
  %2585 = zext i16 %2584 to i64
  %2586 = getelementptr inbounds i8, i8* %2276, i64 %2585
  %2587 = load i8, i8* %2586, align 1
  %2588 = zext i8 %2587 to i32
  %2589 = zext i16 %2584 to i64
  %2590 = getelementptr inbounds i32, i32* %2284, i64 %2589
  %2591 = load i32, i32* %2590, align 4
  call void @bsW(%struct.EState* %0, i32 %2588, i32 %2591)
  %2592 = add nsw i32 %.22455, 28
  %2593 = sext i32 %2592 to i64
  %2594 = getelementptr inbounds i16, i16* %7, i64 %2593
  %2595 = load i16, i16* %2594, align 2
  %2596 = zext i16 %2595 to i64
  %2597 = getelementptr inbounds i8, i8* %2276, i64 %2596
  %2598 = load i8, i8* %2597, align 1
  %2599 = zext i8 %2598 to i32
  %2600 = zext i16 %2595 to i64
  %2601 = getelementptr inbounds i32, i32* %2284, i64 %2600
  %2602 = load i32, i32* %2601, align 4
  call void @bsW(%struct.EState* %0, i32 %2599, i32 %2602)
  %2603 = add nsw i32 %.22455, 29
  %2604 = sext i32 %2603 to i64
  %2605 = getelementptr inbounds i16, i16* %7, i64 %2604
  %2606 = load i16, i16* %2605, align 2
  %2607 = zext i16 %2606 to i64
  %2608 = getelementptr inbounds i8, i8* %2276, i64 %2607
  %2609 = load i8, i8* %2608, align 1
  %2610 = zext i8 %2609 to i32
  %2611 = zext i16 %2606 to i64
  %2612 = getelementptr inbounds i32, i32* %2284, i64 %2611
  %2613 = load i32, i32* %2612, align 4
  call void @bsW(%struct.EState* %0, i32 %2610, i32 %2613)
  %2614 = add nsw i32 %.22455, 30
  %2615 = sext i32 %2614 to i64
  %2616 = getelementptr inbounds i16, i16* %7, i64 %2615
  %2617 = load i16, i16* %2616, align 2
  %2618 = zext i16 %2617 to i64
  %2619 = getelementptr inbounds i8, i8* %2276, i64 %2618
  %2620 = load i8, i8* %2619, align 1
  %2621 = zext i8 %2620 to i32
  %2622 = zext i16 %2617 to i64
  %2623 = getelementptr inbounds i32, i32* %2284, i64 %2622
  %2624 = load i32, i32* %2623, align 4
  call void @bsW(%struct.EState* %0, i32 %2621, i32 %2624)
  %2625 = add nsw i32 %.22455, 31
  %2626 = sext i32 %2625 to i64
  %2627 = getelementptr inbounds i16, i16* %7, i64 %2626
  %2628 = load i16, i16* %2627, align 2
  %2629 = zext i16 %2628 to i64
  %2630 = getelementptr inbounds i8, i8* %2276, i64 %2629
  %2631 = load i8, i8* %2630, align 1
  %2632 = zext i8 %2631 to i32
  %2633 = zext i16 %2628 to i64
  %2634 = getelementptr inbounds i32, i32* %2284, i64 %2633
  %2635 = load i32, i32* %2634, align 4
  call void @bsW(%struct.EState* %0, i32 %2632, i32 %2635)
  %2636 = add nsw i32 %.22455, 32
  %2637 = sext i32 %2636 to i64
  %2638 = getelementptr inbounds i16, i16* %7, i64 %2637
  %2639 = load i16, i16* %2638, align 2
  %2640 = zext i16 %2639 to i64
  %2641 = getelementptr inbounds i8, i8* %2276, i64 %2640
  %2642 = load i8, i8* %2641, align 1
  %2643 = zext i8 %2642 to i32
  %2644 = zext i16 %2639 to i64
  %2645 = getelementptr inbounds i32, i32* %2284, i64 %2644
  %2646 = load i32, i32* %2645, align 4
  call void @bsW(%struct.EState* %0, i32 %2643, i32 %2646)
  %2647 = add nsw i32 %.22455, 33
  %2648 = sext i32 %2647 to i64
  %2649 = getelementptr inbounds i16, i16* %7, i64 %2648
  %2650 = load i16, i16* %2649, align 2
  %2651 = zext i16 %2650 to i64
  %2652 = getelementptr inbounds i8, i8* %2276, i64 %2651
  %2653 = load i8, i8* %2652, align 1
  %2654 = zext i8 %2653 to i32
  %2655 = zext i16 %2650 to i64
  %2656 = getelementptr inbounds i32, i32* %2284, i64 %2655
  %2657 = load i32, i32* %2656, align 4
  call void @bsW(%struct.EState* %0, i32 %2654, i32 %2657)
  %2658 = add nsw i32 %.22455, 34
  %2659 = sext i32 %2658 to i64
  %2660 = getelementptr inbounds i16, i16* %7, i64 %2659
  %2661 = load i16, i16* %2660, align 2
  %2662 = zext i16 %2661 to i64
  %2663 = getelementptr inbounds i8, i8* %2276, i64 %2662
  %2664 = load i8, i8* %2663, align 1
  %2665 = zext i8 %2664 to i32
  %2666 = zext i16 %2661 to i64
  %2667 = getelementptr inbounds i32, i32* %2284, i64 %2666
  %2668 = load i32, i32* %2667, align 4
  call void @bsW(%struct.EState* %0, i32 %2665, i32 %2668)
  %2669 = add nsw i32 %.22455, 35
  %2670 = sext i32 %2669 to i64
  %2671 = getelementptr inbounds i16, i16* %7, i64 %2670
  %2672 = load i16, i16* %2671, align 2
  %2673 = zext i16 %2672 to i64
  %2674 = getelementptr inbounds i8, i8* %2276, i64 %2673
  %2675 = load i8, i8* %2674, align 1
  %2676 = zext i8 %2675 to i32
  %2677 = zext i16 %2672 to i64
  %2678 = getelementptr inbounds i32, i32* %2284, i64 %2677
  %2679 = load i32, i32* %2678, align 4
  call void @bsW(%struct.EState* %0, i32 %2676, i32 %2679)
  %2680 = add nsw i32 %.22455, 36
  %2681 = sext i32 %2680 to i64
  %2682 = getelementptr inbounds i16, i16* %7, i64 %2681
  %2683 = load i16, i16* %2682, align 2
  %2684 = zext i16 %2683 to i64
  %2685 = getelementptr inbounds i8, i8* %2276, i64 %2684
  %2686 = load i8, i8* %2685, align 1
  %2687 = zext i8 %2686 to i32
  %2688 = zext i16 %2683 to i64
  %2689 = getelementptr inbounds i32, i32* %2284, i64 %2688
  %2690 = load i32, i32* %2689, align 4
  call void @bsW(%struct.EState* %0, i32 %2687, i32 %2690)
  %2691 = add nsw i32 %.22455, 37
  %2692 = sext i32 %2691 to i64
  %2693 = getelementptr inbounds i16, i16* %7, i64 %2692
  %2694 = load i16, i16* %2693, align 2
  %2695 = zext i16 %2694 to i64
  %2696 = getelementptr inbounds i8, i8* %2276, i64 %2695
  %2697 = load i8, i8* %2696, align 1
  %2698 = zext i8 %2697 to i32
  %2699 = zext i16 %2694 to i64
  %2700 = getelementptr inbounds i32, i32* %2284, i64 %2699
  %2701 = load i32, i32* %2700, align 4
  call void @bsW(%struct.EState* %0, i32 %2698, i32 %2701)
  %2702 = add nsw i32 %.22455, 38
  %2703 = sext i32 %2702 to i64
  %2704 = getelementptr inbounds i16, i16* %7, i64 %2703
  %2705 = load i16, i16* %2704, align 2
  %2706 = zext i16 %2705 to i64
  %2707 = getelementptr inbounds i8, i8* %2276, i64 %2706
  %2708 = load i8, i8* %2707, align 1
  %2709 = zext i8 %2708 to i32
  %2710 = zext i16 %2705 to i64
  %2711 = getelementptr inbounds i32, i32* %2284, i64 %2710
  %2712 = load i32, i32* %2711, align 4
  call void @bsW(%struct.EState* %0, i32 %2709, i32 %2712)
  %2713 = add nsw i32 %.22455, 39
  %2714 = sext i32 %2713 to i64
  %2715 = getelementptr inbounds i16, i16* %7, i64 %2714
  %2716 = load i16, i16* %2715, align 2
  %2717 = zext i16 %2716 to i64
  %2718 = getelementptr inbounds i8, i8* %2276, i64 %2717
  %2719 = load i8, i8* %2718, align 1
  %2720 = zext i8 %2719 to i32
  %2721 = zext i16 %2716 to i64
  %2722 = getelementptr inbounds i32, i32* %2284, i64 %2721
  %2723 = load i32, i32* %2722, align 4
  call void @bsW(%struct.EState* %0, i32 %2720, i32 %2723)
  %2724 = add nsw i32 %.22455, 40
  %2725 = sext i32 %2724 to i64
  %2726 = getelementptr inbounds i16, i16* %7, i64 %2725
  %2727 = load i16, i16* %2726, align 2
  %2728 = zext i16 %2727 to i64
  %2729 = getelementptr inbounds i8, i8* %2276, i64 %2728
  %2730 = load i8, i8* %2729, align 1
  %2731 = zext i8 %2730 to i32
  %2732 = zext i16 %2727 to i64
  %2733 = getelementptr inbounds i32, i32* %2284, i64 %2732
  %2734 = load i32, i32* %2733, align 4
  call void @bsW(%struct.EState* %0, i32 %2731, i32 %2734)
  %2735 = add nsw i32 %.22455, 41
  %2736 = sext i32 %2735 to i64
  %2737 = getelementptr inbounds i16, i16* %7, i64 %2736
  %2738 = load i16, i16* %2737, align 2
  %2739 = zext i16 %2738 to i64
  %2740 = getelementptr inbounds i8, i8* %2276, i64 %2739
  %2741 = load i8, i8* %2740, align 1
  %2742 = zext i8 %2741 to i32
  %2743 = zext i16 %2738 to i64
  %2744 = getelementptr inbounds i32, i32* %2284, i64 %2743
  %2745 = load i32, i32* %2744, align 4
  call void @bsW(%struct.EState* %0, i32 %2742, i32 %2745)
  %2746 = add nsw i32 %.22455, 42
  %2747 = sext i32 %2746 to i64
  %2748 = getelementptr inbounds i16, i16* %7, i64 %2747
  %2749 = load i16, i16* %2748, align 2
  %2750 = zext i16 %2749 to i64
  %2751 = getelementptr inbounds i8, i8* %2276, i64 %2750
  %2752 = load i8, i8* %2751, align 1
  %2753 = zext i8 %2752 to i32
  %2754 = zext i16 %2749 to i64
  %2755 = getelementptr inbounds i32, i32* %2284, i64 %2754
  %2756 = load i32, i32* %2755, align 4
  call void @bsW(%struct.EState* %0, i32 %2753, i32 %2756)
  %2757 = add nsw i32 %.22455, 43
  %2758 = sext i32 %2757 to i64
  %2759 = getelementptr inbounds i16, i16* %7, i64 %2758
  %2760 = load i16, i16* %2759, align 2
  %2761 = zext i16 %2760 to i64
  %2762 = getelementptr inbounds i8, i8* %2276, i64 %2761
  %2763 = load i8, i8* %2762, align 1
  %2764 = zext i8 %2763 to i32
  %2765 = zext i16 %2760 to i64
  %2766 = getelementptr inbounds i32, i32* %2284, i64 %2765
  %2767 = load i32, i32* %2766, align 4
  call void @bsW(%struct.EState* %0, i32 %2764, i32 %2767)
  %2768 = add nsw i32 %.22455, 44
  %2769 = sext i32 %2768 to i64
  %2770 = getelementptr inbounds i16, i16* %7, i64 %2769
  %2771 = load i16, i16* %2770, align 2
  %2772 = zext i16 %2771 to i64
  %2773 = getelementptr inbounds i8, i8* %2276, i64 %2772
  %2774 = load i8, i8* %2773, align 1
  %2775 = zext i8 %2774 to i32
  %2776 = zext i16 %2771 to i64
  %2777 = getelementptr inbounds i32, i32* %2284, i64 %2776
  %2778 = load i32, i32* %2777, align 4
  call void @bsW(%struct.EState* %0, i32 %2775, i32 %2778)
  %2779 = add nsw i32 %.22455, 45
  %2780 = sext i32 %2779 to i64
  %2781 = getelementptr inbounds i16, i16* %7, i64 %2780
  %2782 = load i16, i16* %2781, align 2
  %2783 = zext i16 %2782 to i64
  %2784 = getelementptr inbounds i8, i8* %2276, i64 %2783
  %2785 = load i8, i8* %2784, align 1
  %2786 = zext i8 %2785 to i32
  %2787 = zext i16 %2782 to i64
  %2788 = getelementptr inbounds i32, i32* %2284, i64 %2787
  %2789 = load i32, i32* %2788, align 4
  call void @bsW(%struct.EState* %0, i32 %2786, i32 %2789)
  %2790 = add nsw i32 %.22455, 46
  %2791 = sext i32 %2790 to i64
  %2792 = getelementptr inbounds i16, i16* %7, i64 %2791
  %2793 = load i16, i16* %2792, align 2
  %2794 = zext i16 %2793 to i64
  %2795 = getelementptr inbounds i8, i8* %2276, i64 %2794
  %2796 = load i8, i8* %2795, align 1
  %2797 = zext i8 %2796 to i32
  %2798 = zext i16 %2793 to i64
  %2799 = getelementptr inbounds i32, i32* %2284, i64 %2798
  %2800 = load i32, i32* %2799, align 4
  call void @bsW(%struct.EState* %0, i32 %2797, i32 %2800)
  %2801 = add nsw i32 %.22455, 47
  %2802 = sext i32 %2801 to i64
  %2803 = getelementptr inbounds i16, i16* %7, i64 %2802
  %2804 = load i16, i16* %2803, align 2
  %2805 = zext i16 %2804 to i64
  %2806 = getelementptr inbounds i8, i8* %2276, i64 %2805
  %2807 = load i8, i8* %2806, align 1
  %2808 = zext i8 %2807 to i32
  %2809 = zext i16 %2804 to i64
  %2810 = getelementptr inbounds i32, i32* %2284, i64 %2809
  %2811 = load i32, i32* %2810, align 4
  call void @bsW(%struct.EState* %0, i32 %2808, i32 %2811)
  %2812 = add nsw i32 %.22455, 48
  %2813 = sext i32 %2812 to i64
  %2814 = getelementptr inbounds i16, i16* %7, i64 %2813
  %2815 = load i16, i16* %2814, align 2
  %2816 = zext i16 %2815 to i64
  %2817 = getelementptr inbounds i8, i8* %2276, i64 %2816
  %2818 = load i8, i8* %2817, align 1
  %2819 = zext i8 %2818 to i32
  %2820 = zext i16 %2815 to i64
  %2821 = getelementptr inbounds i32, i32* %2284, i64 %2820
  %2822 = load i32, i32* %2821, align 4
  call void @bsW(%struct.EState* %0, i32 %2819, i32 %2822)
  %2823 = add nsw i32 %.22455, 49
  %2824 = sext i32 %2823 to i64
  %2825 = getelementptr inbounds i16, i16* %7, i64 %2824
  %2826 = load i16, i16* %2825, align 2
  %2827 = zext i16 %2826 to i64
  %2828 = getelementptr inbounds i8, i8* %2276, i64 %2827
  %2829 = load i8, i8* %2828, align 1
  %2830 = zext i8 %2829 to i32
  %2831 = zext i16 %2826 to i64
  %2832 = getelementptr inbounds i32, i32* %2284, i64 %2831
  %2833 = load i32, i32* %2832, align 4
  call void @bsW(%struct.EState* %0, i32 %2830, i32 %2833)
  br label %2867

; <label>:2834:                                   ; preds = %2264, %2262
  %2835 = icmp sle i32 %.22455, %.328
  br i1 %2835, label %.lr.ph, label %2866

.lr.ph:                                           ; preds = %2834
  %2836 = sext i32 %.22455 to i64
  %2837 = sext i32 %.328 to i64
  br label %2838

; <label>:2838:                                   ; preds = %.lr.ph, %2864
  %indvars.iv = phi i64 [ %2836, %.lr.ph ], [ %indvars.iv.next, %2864 ]
  call void @unroll_loop(i32 84)
  %2839 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2840 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2841 = sext i32 %.04252 to i64
  %2842 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2840, i64 0, i64 %2841
  %2843 = load i8, i8* %2842, align 1
  %2844 = zext i8 %2843 to i64
  %2845 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2839, i64 0, i64 %2844
  %2846 = getelementptr inbounds i16, i16* %7, i64 %indvars.iv
  %2847 = load i16, i16* %2846, align 2
  %2848 = zext i16 %2847 to i64
  %2849 = getelementptr inbounds [258 x i8], [258 x i8]* %2845, i64 0, i64 %2848
  %2850 = load i8, i8* %2849, align 1
  %2851 = zext i8 %2850 to i32
  %2852 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 36
  %2853 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2854 = sext i32 %.04252 to i64
  %2855 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2853, i64 0, i64 %2854
  %2856 = load i8, i8* %2855, align 1
  %2857 = zext i8 %2856 to i64
  %2858 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2852, i64 0, i64 %2857
  %2859 = getelementptr inbounds i16, i16* %7, i64 %indvars.iv
  %2860 = load i16, i16* %2859, align 2
  %2861 = zext i16 %2860 to i64
  %2862 = getelementptr inbounds [258 x i32], [258 x i32]* %2858, i64 0, i64 %2861
  %2863 = load i32, i32* %2862, align 4
  call void @bsW(%struct.EState* %0, i32 %2851, i32 %2863)
  br label %2864

; <label>:2864:                                   ; preds = %2838
  %indvars.iv.next = add i64 %indvars.iv, 1
  %2865 = icmp sle i64 %indvars.iv.next, %2837
  br i1 %2865, label %2838, label %._crit_edge

._crit_edge:                                      ; preds = %2864
  br label %2866

; <label>:2866:                                   ; preds = %._crit_edge, %2834
  %.04254 = phi i32 [ %.04252, %._crit_edge ], [ %.04252, %2834 ]
  br label %2867

; <label>:2867:                                   ; preds = %2866, %2268
  %.04253 = phi i32 [ %.04254, %2866 ], [ %.04252, %2268 ]
  %2868 = add nsw i32 %.328, 1
  %2869 = add nsw i32 %.04253, 1
  %2870 = load i32, i32* %2240, align 4
  %2871 = icmp sge i32 %2868, %2870
  br i1 %2871, label %._crit_edge58, label %2244

; <label>:2872:                                   ; preds = %2243
  %2873 = icmp eq i32 %.042.lcssa, %.035.lcssa
  br i1 %2873, label %2875, label %2874

; <label>:2874:                                   ; preds = %2872
  call void @BZ2_bz__AssertH__fail(i32 3007)
  br label %2875

; <label>:2875:                                   ; preds = %2874, %2872
  %2876 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %2877 = load i32, i32* %2876, align 8
  %2878 = icmp sge i32 %2877, 3
  br i1 %2878, label %2879, label %2886

; <label>:2879:                                   ; preds = %2875
  %2880 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2881 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2882 = load i32, i32* %2881, align 4
  %2883 = sub nsw i32 %2882, %2239
  %2884 = getelementptr [10 x i8], [10 x i8]* @.str.10.157, i32 0, i32 0
  %2885 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2880, i8* %2884, i32 %2883)
  br label %2886

; <label>:2886:                                   ; preds = %2879, %2875
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsFinishWrite(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %.lr.ph, label %27

.lr.ph:                                           ; preds = %1
  br label %5

; <label>:5:                                      ; preds = %.lr.ph, %5
  call void @unroll_loop(i32 52)
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 24
  %9 = trunc i32 %8 to i8
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 11
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %13 = load i32, i32* %12, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %11, i64 %14
  store i8 %9, i8* %15, align 1
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %20 = load i32, i32* %19, align 8
  %21 = shl i32 %20, 8
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %23 = load i32, i32* %22, align 4
  %24 = sub nsw i32 %23, 8
  store i32 %24, i32* %22, align 4
  %25 = load i32, i32* %2, align 4
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %5, label %._crit_edge

._crit_edge:                                      ; preds = %5
  br label %27

; <label>:27:                                     ; preds = %._crit_edge, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeMaps_e(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  store i32 0, i32* %2, align 4
  br label %3

; <label>:3:                                      ; preds = %1, %18
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %18 ]
  call void @unroll_loop(i32 85)
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %indvars.iv
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 0
  br i1 %7, label %8, label %17

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %10 = load i32, i32* %9, align 4
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 23
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* %12, i64 0, i64 %indvars.iv
  store i8 %11, i8* %13, align 1
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 4
  br label %17

; <label>:17:                                     ; preds = %8, %3
  br label %18

; <label>:18:                                     ; preds = %17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %3, label %19

; <label>:19:                                     ; preds = %18
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_decompress(%struct.DState*) #0 {
  %2 = alloca [6 x i8], align 1, !track !62
  %3 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %5 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 10
  br i1 %7, label %8, label %33

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 40
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 41
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 42
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 43
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 44
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 45
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 46
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 47
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 48
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 49
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 50
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 52
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 53
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 54
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 55
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 56
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 57
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 58
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 59
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 60
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 61
  store i32* null, i32** %30, align 8
  %31 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 62
  store i32* null, i32** %31, align 8
  %32 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 63
  store i32* null, i32** %32, align 8
  br label %33

; <label>:33:                                     ; preds = %8, %1
  %34 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 40
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 41
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 42
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 43
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 44
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 45
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 46
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 47
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 48
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 49
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 50
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 52
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 53
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 54
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 55
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 56
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 57
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 58
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 59
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 60
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 61
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 62
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 63
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %4376 [
    i32 10, label %84
    i32 11, label %157
    i32 12, label %230
    i32 13, label %303
    i32 14, label %444
    i32 15, label %521
    i32 16, label %594
    i32 17, label %667
    i32 18, label %740
    i32 19, label %813
    i32 20, label %900
    i32 21, label %975
    i32 22, label %1050
    i32 23, label %1125
    i32 24, label %1200
    i32 25, label %1271
    i32 26, label %1346
    i32 27, label %1421
    i32 28, label %1513
    i32 29, label %1613
    i32 30, label %1706
    i32 31, label %1779
    i32 32, label %1854
    i32 33, label %1982
    i32 34, label %2059
    i32 35, label %2132
    i32 36, label %2334
    i32 37, label %2415
    i32 38, label %2556
    i32 39, label %2637
    i32 40, label %3033
    i32 41, label %3114
    i32 42, label %3709
    i32 43, label %3782
    i32 44, label %3855
    i32 45, label %3928
    i32 46, label %4001
    i32 47, label %4075
    i32 48, label %4150
    i32 49, label %4225
    i32 50, label %4300
  ]

; <label>:84:                                     ; preds = %33
  %85 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 10, i32* %85, align 8
  %86 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %87 = load i32, i32* %86, align 4
  %88 = icmp sge i32 %87, 8
  br i1 %88, label %89, label %.lr.ph627

.lr.ph627:                                        ; preds = %84
  br label %101

._crit_edge628:                                   ; preds = %149
  br label %89

; <label>:89:                                     ; preds = %._crit_edge628, %84
  %90 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %93 = load i32, i32* %92, align 4
  %94 = sub nsw i32 %93, 8
  %95 = lshr i32 %91, %94
  %96 = and i32 %95, 255
  %97 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %98 = load i32, i32* %97, align 4
  %99 = sub nsw i32 %98, 8
  store i32 %99, i32* %97, align 4
  %100 = trunc i32 %96 to i8
  br label %152

; <label>:101:                                    ; preds = %.lr.ph627, %149
  call void @unroll_loop(i32 87)
  %102 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %103 = load %struct.bz_stream*, %struct.bz_stream** %102, align 8
  %104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %103, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

; <label>:107:                                    ; preds = %101
  br label %4378

; <label>:108:                                    ; preds = %101
  %109 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %110 = load i32, i32* %109, align 8
  %111 = shl i32 %110, 8
  %112 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %113 = load %struct.bz_stream*, %struct.bz_stream** %112, align 8
  %114 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %113, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = or i32 %111, %117
  %119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %118, i32* %119, align 8
  %120 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %121 = load i32, i32* %120, align 4
  %122 = add nsw i32 %121, 8
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %124 = load %struct.bz_stream*, %struct.bz_stream** %123, align 8
  %125 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %124, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds i8, i8* %126, i32 1
  store i8* %127, i8** %125, align 8
  %128 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %129 = load %struct.bz_stream*, %struct.bz_stream** %128, align 8
  %130 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %129, i32 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = add i32 %131, -1
  store i32 %132, i32* %130, align 8
  %133 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %134 = load %struct.bz_stream*, %struct.bz_stream** %133, align 8
  %135 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %134, i32 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %135, align 4
  %138 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %139 = load %struct.bz_stream*, %struct.bz_stream** %138, align 8
  %140 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %139, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %149

; <label>:143:                                    ; preds = %108
  %144 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %145 = load %struct.bz_stream*, %struct.bz_stream** %144, align 8
  %146 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %145, i32 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 8
  br label %149

; <label>:149:                                    ; preds = %143, %108
  %150 = load i32, i32* %86, align 4
  %151 = icmp sge i32 %150, 8
  br i1 %151, label %._crit_edge628, label %101

; <label>:152:                                    ; preds = %89
  %153 = zext i8 %100 to i32
  %154 = icmp ne i32 %153, 66
  br i1 %154, label %155, label %156

; <label>:155:                                    ; preds = %152
  br label %4378

; <label>:156:                                    ; preds = %152
  br label %157

; <label>:157:                                    ; preds = %33, %156
  %158 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 11, i32* %158, align 8
  %159 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %160 = load i32, i32* %159, align 4
  %161 = icmp sge i32 %160, 8
  br i1 %161, label %162, label %.lr.ph624

.lr.ph624:                                        ; preds = %157
  br label %174

._crit_edge625:                                   ; preds = %222
  br label %162

; <label>:162:                                    ; preds = %._crit_edge625, %157
  %163 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %164 = load i32, i32* %163, align 8
  %165 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %166 = load i32, i32* %165, align 4
  %167 = sub nsw i32 %166, 8
  %168 = lshr i32 %164, %167
  %169 = and i32 %168, 255
  %170 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %171 = load i32, i32* %170, align 4
  %172 = sub nsw i32 %171, 8
  store i32 %172, i32* %170, align 4
  %173 = trunc i32 %169 to i8
  br label %225

; <label>:174:                                    ; preds = %.lr.ph624, %222
  call void @unroll_loop(i32 88)
  %175 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %176 = load %struct.bz_stream*, %struct.bz_stream** %175, align 8
  %177 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %176, i32 0, i32 1
  %178 = load i32, i32* %177, align 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

; <label>:180:                                    ; preds = %174
  br label %4378

; <label>:181:                                    ; preds = %174
  %182 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %183 = load i32, i32* %182, align 8
  %184 = shl i32 %183, 8
  %185 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %186 = load %struct.bz_stream*, %struct.bz_stream** %185, align 8
  %187 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %186, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = or i32 %184, %190
  %192 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %191, i32* %192, align 8
  %193 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %194 = load i32, i32* %193, align 4
  %195 = add nsw i32 %194, 8
  store i32 %195, i32* %193, align 4
  %196 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %197 = load %struct.bz_stream*, %struct.bz_stream** %196, align 8
  %198 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %197, i32 0, i32 0
  %199 = load i8*, i8** %198, align 8
  %200 = getelementptr inbounds i8, i8* %199, i32 1
  store i8* %200, i8** %198, align 8
  %201 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %202 = load %struct.bz_stream*, %struct.bz_stream** %201, align 8
  %203 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %202, i32 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = add i32 %204, -1
  store i32 %205, i32* %203, align 8
  %206 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %207 = load %struct.bz_stream*, %struct.bz_stream** %206, align 8
  %208 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %207, i32 0, i32 2
  %209 = load i32, i32* %208, align 4
  %210 = add i32 %209, 1
  store i32 %210, i32* %208, align 4
  %211 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %212 = load %struct.bz_stream*, %struct.bz_stream** %211, align 8
  %213 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %212, i32 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %222

; <label>:216:                                    ; preds = %181
  %217 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %218 = load %struct.bz_stream*, %struct.bz_stream** %217, align 8
  %219 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %218, i32 0, i32 3
  %220 = load i32, i32* %219, align 8
  %221 = add i32 %220, 1
  store i32 %221, i32* %219, align 8
  br label %222

; <label>:222:                                    ; preds = %216, %181
  %223 = load i32, i32* %159, align 4
  %224 = icmp sge i32 %223, 8
  br i1 %224, label %._crit_edge625, label %174

; <label>:225:                                    ; preds = %162
  %226 = zext i8 %173 to i32
  %227 = icmp ne i32 %226, 90
  br i1 %227, label %228, label %229

; <label>:228:                                    ; preds = %225
  br label %4378

; <label>:229:                                    ; preds = %225
  br label %230

; <label>:230:                                    ; preds = %33, %229
  %231 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 12, i32* %231, align 8
  %232 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %233 = load i32, i32* %232, align 4
  %234 = icmp sge i32 %233, 8
  br i1 %234, label %235, label %.lr.ph621

.lr.ph621:                                        ; preds = %230
  br label %247

._crit_edge622:                                   ; preds = %295
  br label %235

; <label>:235:                                    ; preds = %._crit_edge622, %230
  %236 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %237 = load i32, i32* %236, align 8
  %238 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %239 = load i32, i32* %238, align 4
  %240 = sub nsw i32 %239, 8
  %241 = lshr i32 %237, %240
  %242 = and i32 %241, 255
  %243 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %244 = load i32, i32* %243, align 4
  %245 = sub nsw i32 %244, 8
  store i32 %245, i32* %243, align 4
  %246 = trunc i32 %242 to i8
  br label %298

; <label>:247:                                    ; preds = %.lr.ph621, %295
  call void @unroll_loop(i32 89)
  %248 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %249 = load %struct.bz_stream*, %struct.bz_stream** %248, align 8
  %250 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %249, i32 0, i32 1
  %251 = load i32, i32* %250, align 8
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

; <label>:253:                                    ; preds = %247
  br label %4378

; <label>:254:                                    ; preds = %247
  %255 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %256 = load i32, i32* %255, align 8
  %257 = shl i32 %256, 8
  %258 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %259 = load %struct.bz_stream*, %struct.bz_stream** %258, align 8
  %260 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %259, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = or i32 %257, %263
  %265 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %264, i32* %265, align 8
  %266 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %267 = load i32, i32* %266, align 4
  %268 = add nsw i32 %267, 8
  store i32 %268, i32* %266, align 4
  %269 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %270 = load %struct.bz_stream*, %struct.bz_stream** %269, align 8
  %271 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %270, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = getelementptr inbounds i8, i8* %272, i32 1
  store i8* %273, i8** %271, align 8
  %274 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %275 = load %struct.bz_stream*, %struct.bz_stream** %274, align 8
  %276 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %275, i32 0, i32 1
  %277 = load i32, i32* %276, align 8
  %278 = add i32 %277, -1
  store i32 %278, i32* %276, align 8
  %279 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %280 = load %struct.bz_stream*, %struct.bz_stream** %279, align 8
  %281 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %280, i32 0, i32 2
  %282 = load i32, i32* %281, align 4
  %283 = add i32 %282, 1
  store i32 %283, i32* %281, align 4
  %284 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %285 = load %struct.bz_stream*, %struct.bz_stream** %284, align 8
  %286 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %285, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %295

; <label>:289:                                    ; preds = %254
  %290 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %291 = load %struct.bz_stream*, %struct.bz_stream** %290, align 8
  %292 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %291, i32 0, i32 3
  %293 = load i32, i32* %292, align 8
  %294 = add i32 %293, 1
  store i32 %294, i32* %292, align 8
  br label %295

; <label>:295:                                    ; preds = %289, %254
  %296 = load i32, i32* %232, align 4
  %297 = icmp sge i32 %296, 8
  br i1 %297, label %._crit_edge622, label %247

; <label>:298:                                    ; preds = %235
  %299 = zext i8 %246 to i32
  %300 = icmp ne i32 %299, 104
  br i1 %300, label %301, label %302

; <label>:301:                                    ; preds = %298
  br label %4378

; <label>:302:                                    ; preds = %298
  br label %303

; <label>:303:                                    ; preds = %33, %302
  %304 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 13, i32* %304, align 8
  %305 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %306 = load i32, i32* %305, align 4
  %307 = icmp sge i32 %306, 8
  br i1 %307, label %308, label %.lr.ph618

.lr.ph618:                                        ; preds = %303
  br label %320

._crit_edge619:                                   ; preds = %368
  br label %308

; <label>:308:                                    ; preds = %._crit_edge619, %303
  %309 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %310 = load i32, i32* %309, align 8
  %311 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %312 = load i32, i32* %311, align 4
  %313 = sub nsw i32 %312, 8
  %314 = lshr i32 %310, %313
  %315 = and i32 %314, 255
  %316 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %317 = load i32, i32* %316, align 4
  %318 = sub nsw i32 %317, 8
  store i32 %318, i32* %316, align 4
  %319 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  store i32 %315, i32* %319, align 8
  br label %371

; <label>:320:                                    ; preds = %.lr.ph618, %368
  call void @unroll_loop(i32 90)
  %321 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %322 = load %struct.bz_stream*, %struct.bz_stream** %321, align 8
  %323 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %322, i32 0, i32 1
  %324 = load i32, i32* %323, align 8
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

; <label>:326:                                    ; preds = %320
  br label %4378

; <label>:327:                                    ; preds = %320
  %328 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %329 = load i32, i32* %328, align 8
  %330 = shl i32 %329, 8
  %331 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %332 = load %struct.bz_stream*, %struct.bz_stream** %331, align 8
  %333 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %332, i32 0, i32 0
  %334 = load i8*, i8** %333, align 8
  %335 = load i8, i8* %334, align 1
  %336 = zext i8 %335 to i32
  %337 = or i32 %330, %336
  %338 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %337, i32* %338, align 8
  %339 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %340 = load i32, i32* %339, align 4
  %341 = add nsw i32 %340, 8
  store i32 %341, i32* %339, align 4
  %342 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %343 = load %struct.bz_stream*, %struct.bz_stream** %342, align 8
  %344 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %343, i32 0, i32 0
  %345 = load i8*, i8** %344, align 8
  %346 = getelementptr inbounds i8, i8* %345, i32 1
  store i8* %346, i8** %344, align 8
  %347 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %348 = load %struct.bz_stream*, %struct.bz_stream** %347, align 8
  %349 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %348, i32 0, i32 1
  %350 = load i32, i32* %349, align 8
  %351 = add i32 %350, -1
  store i32 %351, i32* %349, align 8
  %352 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %353 = load %struct.bz_stream*, %struct.bz_stream** %352, align 8
  %354 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %353, i32 0, i32 2
  %355 = load i32, i32* %354, align 4
  %356 = add i32 %355, 1
  store i32 %356, i32* %354, align 4
  %357 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %358 = load %struct.bz_stream*, %struct.bz_stream** %357, align 8
  %359 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %358, i32 0, i32 2
  %360 = load i32, i32* %359, align 4
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %368

; <label>:362:                                    ; preds = %327
  %363 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %364 = load %struct.bz_stream*, %struct.bz_stream** %363, align 8
  %365 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %364, i32 0, i32 3
  %366 = load i32, i32* %365, align 8
  %367 = add i32 %366, 1
  store i32 %367, i32* %365, align 8
  br label %368

; <label>:368:                                    ; preds = %362, %327
  %369 = load i32, i32* %305, align 4
  %370 = icmp sge i32 %369, 8
  br i1 %370, label %._crit_edge619, label %320

; <label>:371:                                    ; preds = %308
  %372 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %373 = load i32, i32* %372, align 8
  %374 = icmp slt i32 %373, 49
  br i1 %374, label %379, label %375

; <label>:375:                                    ; preds = %371
  %376 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %377 = load i32, i32* %376, align 8
  %378 = icmp sgt i32 %377, 57
  br i1 %378, label %379, label %380

; <label>:379:                                    ; preds = %375, %371
  br label %4378

; <label>:380:                                    ; preds = %375
  %381 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %382 = load i32, i32* %381, align 8
  %383 = sub nsw i32 %382, 48
  store i32 %383, i32* %381, align 8
  %384 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 10
  %385 = load i8, i8* %384, align 4
  %386 = icmp ne i8 %385, 0
  br i1 %386, label %387, label %424

; <label>:387:                                    ; preds = %380
  %388 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 9
  %389 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %388, align 8
  %390 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 11
  %391 = load i8*, i8** %390, align 8
  %392 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %393 = load i32, i32* %392, align 8
  %394 = mul nsw i32 %393, 100000
  %395 = sext i32 %394 to i64
  %396 = mul i64 %395, 2
  %397 = trunc i64 %396 to i32
  %398 = call i8* %389(i8* %391, i32 %397, i32 1)
  %399 = bitcast i8* %398 to i16*
  %400 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  store i16* %399, i16** %400, align 8
  %401 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 9
  %402 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %401, align 8
  %403 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 11
  %404 = load i8*, i8** %403, align 8
  %405 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %406 = load i32, i32* %405, align 8
  %407 = mul nsw i32 %406, 100000
  %408 = add nsw i32 1, %407
  %409 = ashr i32 %408, 1
  %410 = sext i32 %409 to i64
  %411 = mul i64 %410, 1
  %412 = trunc i64 %411 to i32
  %413 = call i8* %402(i8* %404, i32 %412, i32 1)
  %414 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  store i8* %413, i8** %414, align 8
  %415 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %416 = load i16*, i16** %415, align 8
  %417 = icmp eq i16* %416, null
  br i1 %417, label %422, label %418

; <label>:418:                                    ; preds = %387
  %419 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %420 = load i8*, i8** %419, align 8
  %421 = icmp eq i8* %420, null
  br i1 %421, label %422, label %423

; <label>:422:                                    ; preds = %418, %387
  br label %4378

; <label>:423:                                    ; preds = %418
  br label %443

; <label>:424:                                    ; preds = %380
  %425 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 9
  %426 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %425, align 8
  %427 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 11
  %428 = load i8*, i8** %427, align 8
  %429 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %430 = load i32, i32* %429, align 8
  %431 = mul nsw i32 %430, 100000
  %432 = sext i32 %431 to i64
  %433 = mul i64 %432, 4
  %434 = trunc i64 %433 to i32
  %435 = call i8* %426(i8* %428, i32 %434, i32 1)
  %436 = bitcast i8* %435 to i32*
  %437 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  store i32* %436, i32** %437, align 8
  %438 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %439 = load i32*, i32** %438, align 8
  %440 = icmp eq i32* %439, null
  br i1 %440, label %441, label %442

; <label>:441:                                    ; preds = %424
  br label %4378

; <label>:442:                                    ; preds = %424
  br label %443

; <label>:443:                                    ; preds = %442, %423
  br label %444

; <label>:444:                                    ; preds = %33, %443
  %445 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 14, i32* %445, align 8
  %446 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %447 = load i32, i32* %446, align 4
  %448 = icmp sge i32 %447, 8
  br i1 %448, label %449, label %.lr.ph615

.lr.ph615:                                        ; preds = %444
  br label %461

._crit_edge616:                                   ; preds = %509
  br label %449

; <label>:449:                                    ; preds = %._crit_edge616, %444
  %450 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %451 = load i32, i32* %450, align 8
  %452 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %453 = load i32, i32* %452, align 4
  %454 = sub nsw i32 %453, 8
  %455 = lshr i32 %451, %454
  %456 = and i32 %455, 255
  %457 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %458 = load i32, i32* %457, align 4
  %459 = sub nsw i32 %458, 8
  store i32 %459, i32* %457, align 4
  %460 = trunc i32 %456 to i8
  br label %512

; <label>:461:                                    ; preds = %.lr.ph615, %509
  call void @unroll_loop(i32 91)
  %462 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %463 = load %struct.bz_stream*, %struct.bz_stream** %462, align 8
  %464 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %463, i32 0, i32 1
  %465 = load i32, i32* %464, align 8
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %468

; <label>:467:                                    ; preds = %461
  br label %4378

; <label>:468:                                    ; preds = %461
  %469 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %470 = load i32, i32* %469, align 8
  %471 = shl i32 %470, 8
  %472 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %473 = load %struct.bz_stream*, %struct.bz_stream** %472, align 8
  %474 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %473, i32 0, i32 0
  %475 = load i8*, i8** %474, align 8
  %476 = load i8, i8* %475, align 1
  %477 = zext i8 %476 to i32
  %478 = or i32 %471, %477
  %479 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %478, i32* %479, align 8
  %480 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %481 = load i32, i32* %480, align 4
  %482 = add nsw i32 %481, 8
  store i32 %482, i32* %480, align 4
  %483 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %484 = load %struct.bz_stream*, %struct.bz_stream** %483, align 8
  %485 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %484, i32 0, i32 0
  %486 = load i8*, i8** %485, align 8
  %487 = getelementptr inbounds i8, i8* %486, i32 1
  store i8* %487, i8** %485, align 8
  %488 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %489 = load %struct.bz_stream*, %struct.bz_stream** %488, align 8
  %490 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %489, i32 0, i32 1
  %491 = load i32, i32* %490, align 8
  %492 = add i32 %491, -1
  store i32 %492, i32* %490, align 8
  %493 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %494 = load %struct.bz_stream*, %struct.bz_stream** %493, align 8
  %495 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %494, i32 0, i32 2
  %496 = load i32, i32* %495, align 4
  %497 = add i32 %496, 1
  store i32 %497, i32* %495, align 4
  %498 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %499 = load %struct.bz_stream*, %struct.bz_stream** %498, align 8
  %500 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %499, i32 0, i32 2
  %501 = load i32, i32* %500, align 4
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %509

; <label>:503:                                    ; preds = %468
  %504 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %505 = load %struct.bz_stream*, %struct.bz_stream** %504, align 8
  %506 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %505, i32 0, i32 3
  %507 = load i32, i32* %506, align 8
  %508 = add i32 %507, 1
  store i32 %508, i32* %506, align 8
  br label %509

; <label>:509:                                    ; preds = %503, %468
  %510 = load i32, i32* %446, align 4
  %511 = icmp sge i32 %510, 8
  br i1 %511, label %._crit_edge616, label %461

; <label>:512:                                    ; preds = %449
  %513 = zext i8 %460 to i32
  %514 = icmp eq i32 %513, 23
  br i1 %514, label %515, label %516

; <label>:515:                                    ; preds = %512
  br label %3708

; <label>:516:                                    ; preds = %512
  %517 = zext i8 %460 to i32
  %518 = icmp ne i32 %517, 49
  br i1 %518, label %519, label %520

; <label>:519:                                    ; preds = %516
  br label %4378

; <label>:520:                                    ; preds = %516
  br label %521

; <label>:521:                                    ; preds = %33, %520
  %522 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 15, i32* %522, align 8
  %523 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %524 = load i32, i32* %523, align 4
  %525 = icmp sge i32 %524, 8
  br i1 %525, label %526, label %.lr.ph612

.lr.ph612:                                        ; preds = %521
  br label %538

._crit_edge613:                                   ; preds = %586
  br label %526

; <label>:526:                                    ; preds = %._crit_edge613, %521
  %527 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %528 = load i32, i32* %527, align 8
  %529 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %530 = load i32, i32* %529, align 4
  %531 = sub nsw i32 %530, 8
  %532 = lshr i32 %528, %531
  %533 = and i32 %532, 255
  %534 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %535 = load i32, i32* %534, align 4
  %536 = sub nsw i32 %535, 8
  store i32 %536, i32* %534, align 4
  %537 = trunc i32 %533 to i8
  br label %589

; <label>:538:                                    ; preds = %.lr.ph612, %586
  call void @unroll_loop(i32 92)
  %539 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %540 = load %struct.bz_stream*, %struct.bz_stream** %539, align 8
  %541 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %540, i32 0, i32 1
  %542 = load i32, i32* %541, align 8
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %544, label %545

; <label>:544:                                    ; preds = %538
  br label %4378

; <label>:545:                                    ; preds = %538
  %546 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %547 = load i32, i32* %546, align 8
  %548 = shl i32 %547, 8
  %549 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %550 = load %struct.bz_stream*, %struct.bz_stream** %549, align 8
  %551 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %550, i32 0, i32 0
  %552 = load i8*, i8** %551, align 8
  %553 = load i8, i8* %552, align 1
  %554 = zext i8 %553 to i32
  %555 = or i32 %548, %554
  %556 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %555, i32* %556, align 8
  %557 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %558 = load i32, i32* %557, align 4
  %559 = add nsw i32 %558, 8
  store i32 %559, i32* %557, align 4
  %560 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %561 = load %struct.bz_stream*, %struct.bz_stream** %560, align 8
  %562 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %561, i32 0, i32 0
  %563 = load i8*, i8** %562, align 8
  %564 = getelementptr inbounds i8, i8* %563, i32 1
  store i8* %564, i8** %562, align 8
  %565 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %566 = load %struct.bz_stream*, %struct.bz_stream** %565, align 8
  %567 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %566, i32 0, i32 1
  %568 = load i32, i32* %567, align 8
  %569 = add i32 %568, -1
  store i32 %569, i32* %567, align 8
  %570 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %571 = load %struct.bz_stream*, %struct.bz_stream** %570, align 8
  %572 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %571, i32 0, i32 2
  %573 = load i32, i32* %572, align 4
  %574 = add i32 %573, 1
  store i32 %574, i32* %572, align 4
  %575 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %576 = load %struct.bz_stream*, %struct.bz_stream** %575, align 8
  %577 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %576, i32 0, i32 2
  %578 = load i32, i32* %577, align 4
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %580, label %586

; <label>:580:                                    ; preds = %545
  %581 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %582 = load %struct.bz_stream*, %struct.bz_stream** %581, align 8
  %583 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %582, i32 0, i32 3
  %584 = load i32, i32* %583, align 8
  %585 = add i32 %584, 1
  store i32 %585, i32* %583, align 8
  br label %586

; <label>:586:                                    ; preds = %580, %545
  %587 = load i32, i32* %523, align 4
  %588 = icmp sge i32 %587, 8
  br i1 %588, label %._crit_edge613, label %538

; <label>:589:                                    ; preds = %526
  %590 = zext i8 %537 to i32
  %591 = icmp ne i32 %590, 65
  br i1 %591, label %592, label %593

; <label>:592:                                    ; preds = %589
  br label %4378

; <label>:593:                                    ; preds = %589
  br label %594

; <label>:594:                                    ; preds = %33, %593
  %595 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 16, i32* %595, align 8
  %596 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %597 = load i32, i32* %596, align 4
  %598 = icmp sge i32 %597, 8
  br i1 %598, label %599, label %.lr.ph609

.lr.ph609:                                        ; preds = %594
  br label %611

._crit_edge610:                                   ; preds = %659
  br label %599

; <label>:599:                                    ; preds = %._crit_edge610, %594
  %600 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %601 = load i32, i32* %600, align 8
  %602 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %603 = load i32, i32* %602, align 4
  %604 = sub nsw i32 %603, 8
  %605 = lshr i32 %601, %604
  %606 = and i32 %605, 255
  %607 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %608 = load i32, i32* %607, align 4
  %609 = sub nsw i32 %608, 8
  store i32 %609, i32* %607, align 4
  %610 = trunc i32 %606 to i8
  br label %662

; <label>:611:                                    ; preds = %.lr.ph609, %659
  call void @unroll_loop(i32 93)
  %612 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %613 = load %struct.bz_stream*, %struct.bz_stream** %612, align 8
  %614 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %613, i32 0, i32 1
  %615 = load i32, i32* %614, align 8
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %617, label %618

; <label>:617:                                    ; preds = %611
  br label %4378

; <label>:618:                                    ; preds = %611
  %619 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %620 = load i32, i32* %619, align 8
  %621 = shl i32 %620, 8
  %622 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %623 = load %struct.bz_stream*, %struct.bz_stream** %622, align 8
  %624 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %623, i32 0, i32 0
  %625 = load i8*, i8** %624, align 8
  %626 = load i8, i8* %625, align 1
  %627 = zext i8 %626 to i32
  %628 = or i32 %621, %627
  %629 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %628, i32* %629, align 8
  %630 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %631 = load i32, i32* %630, align 4
  %632 = add nsw i32 %631, 8
  store i32 %632, i32* %630, align 4
  %633 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %634 = load %struct.bz_stream*, %struct.bz_stream** %633, align 8
  %635 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %634, i32 0, i32 0
  %636 = load i8*, i8** %635, align 8
  %637 = getelementptr inbounds i8, i8* %636, i32 1
  store i8* %637, i8** %635, align 8
  %638 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %639 = load %struct.bz_stream*, %struct.bz_stream** %638, align 8
  %640 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %639, i32 0, i32 1
  %641 = load i32, i32* %640, align 8
  %642 = add i32 %641, -1
  store i32 %642, i32* %640, align 8
  %643 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %644 = load %struct.bz_stream*, %struct.bz_stream** %643, align 8
  %645 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %644, i32 0, i32 2
  %646 = load i32, i32* %645, align 4
  %647 = add i32 %646, 1
  store i32 %647, i32* %645, align 4
  %648 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %649 = load %struct.bz_stream*, %struct.bz_stream** %648, align 8
  %650 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %649, i32 0, i32 2
  %651 = load i32, i32* %650, align 4
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %659

; <label>:653:                                    ; preds = %618
  %654 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %655 = load %struct.bz_stream*, %struct.bz_stream** %654, align 8
  %656 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %655, i32 0, i32 3
  %657 = load i32, i32* %656, align 8
  %658 = add i32 %657, 1
  store i32 %658, i32* %656, align 8
  br label %659

; <label>:659:                                    ; preds = %653, %618
  %660 = load i32, i32* %596, align 4
  %661 = icmp sge i32 %660, 8
  br i1 %661, label %._crit_edge610, label %611

; <label>:662:                                    ; preds = %599
  %663 = zext i8 %610 to i32
  %664 = icmp ne i32 %663, 89
  br i1 %664, label %665, label %666

; <label>:665:                                    ; preds = %662
  br label %4378

; <label>:666:                                    ; preds = %662
  br label %667

; <label>:667:                                    ; preds = %33, %666
  %668 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 17, i32* %668, align 8
  %669 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %670 = load i32, i32* %669, align 4
  %671 = icmp sge i32 %670, 8
  br i1 %671, label %672, label %.lr.ph606

.lr.ph606:                                        ; preds = %667
  br label %684

._crit_edge607:                                   ; preds = %732
  br label %672

; <label>:672:                                    ; preds = %._crit_edge607, %667
  %673 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %674 = load i32, i32* %673, align 8
  %675 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %676 = load i32, i32* %675, align 4
  %677 = sub nsw i32 %676, 8
  %678 = lshr i32 %674, %677
  %679 = and i32 %678, 255
  %680 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %681 = load i32, i32* %680, align 4
  %682 = sub nsw i32 %681, 8
  store i32 %682, i32* %680, align 4
  %683 = trunc i32 %679 to i8
  br label %735

; <label>:684:                                    ; preds = %.lr.ph606, %732
  call void @unroll_loop(i32 94)
  %685 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %686 = load %struct.bz_stream*, %struct.bz_stream** %685, align 8
  %687 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %686, i32 0, i32 1
  %688 = load i32, i32* %687, align 8
  %689 = icmp eq i32 %688, 0
  br i1 %689, label %690, label %691

; <label>:690:                                    ; preds = %684
  br label %4378

; <label>:691:                                    ; preds = %684
  %692 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %693 = load i32, i32* %692, align 8
  %694 = shl i32 %693, 8
  %695 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %696 = load %struct.bz_stream*, %struct.bz_stream** %695, align 8
  %697 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %696, i32 0, i32 0
  %698 = load i8*, i8** %697, align 8
  %699 = load i8, i8* %698, align 1
  %700 = zext i8 %699 to i32
  %701 = or i32 %694, %700
  %702 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %701, i32* %702, align 8
  %703 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %704 = load i32, i32* %703, align 4
  %705 = add nsw i32 %704, 8
  store i32 %705, i32* %703, align 4
  %706 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %707 = load %struct.bz_stream*, %struct.bz_stream** %706, align 8
  %708 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %707, i32 0, i32 0
  %709 = load i8*, i8** %708, align 8
  %710 = getelementptr inbounds i8, i8* %709, i32 1
  store i8* %710, i8** %708, align 8
  %711 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %712 = load %struct.bz_stream*, %struct.bz_stream** %711, align 8
  %713 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %712, i32 0, i32 1
  %714 = load i32, i32* %713, align 8
  %715 = add i32 %714, -1
  store i32 %715, i32* %713, align 8
  %716 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %717 = load %struct.bz_stream*, %struct.bz_stream** %716, align 8
  %718 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %717, i32 0, i32 2
  %719 = load i32, i32* %718, align 4
  %720 = add i32 %719, 1
  store i32 %720, i32* %718, align 4
  %721 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %722 = load %struct.bz_stream*, %struct.bz_stream** %721, align 8
  %723 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %722, i32 0, i32 2
  %724 = load i32, i32* %723, align 4
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %732

; <label>:726:                                    ; preds = %691
  %727 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %728 = load %struct.bz_stream*, %struct.bz_stream** %727, align 8
  %729 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %728, i32 0, i32 3
  %730 = load i32, i32* %729, align 8
  %731 = add i32 %730, 1
  store i32 %731, i32* %729, align 8
  br label %732

; <label>:732:                                    ; preds = %726, %691
  %733 = load i32, i32* %669, align 4
  %734 = icmp sge i32 %733, 8
  br i1 %734, label %._crit_edge607, label %684

; <label>:735:                                    ; preds = %672
  %736 = zext i8 %683 to i32
  %737 = icmp ne i32 %736, 38
  br i1 %737, label %738, label %739

; <label>:738:                                    ; preds = %735
  br label %4378

; <label>:739:                                    ; preds = %735
  br label %740

; <label>:740:                                    ; preds = %33, %739
  %741 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 18, i32* %741, align 8
  %742 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %743 = load i32, i32* %742, align 4
  %744 = icmp sge i32 %743, 8
  br i1 %744, label %745, label %.lr.ph603

.lr.ph603:                                        ; preds = %740
  br label %757

._crit_edge604:                                   ; preds = %805
  br label %745

; <label>:745:                                    ; preds = %._crit_edge604, %740
  %746 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %747 = load i32, i32* %746, align 8
  %748 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %749 = load i32, i32* %748, align 4
  %750 = sub nsw i32 %749, 8
  %751 = lshr i32 %747, %750
  %752 = and i32 %751, 255
  %753 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %754 = load i32, i32* %753, align 4
  %755 = sub nsw i32 %754, 8
  store i32 %755, i32* %753, align 4
  %756 = trunc i32 %752 to i8
  br label %808

; <label>:757:                                    ; preds = %.lr.ph603, %805
  call void @unroll_loop(i32 95)
  %758 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %759 = load %struct.bz_stream*, %struct.bz_stream** %758, align 8
  %760 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %759, i32 0, i32 1
  %761 = load i32, i32* %760, align 8
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %763, label %764

; <label>:763:                                    ; preds = %757
  br label %4378

; <label>:764:                                    ; preds = %757
  %765 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %766 = load i32, i32* %765, align 8
  %767 = shl i32 %766, 8
  %768 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %769 = load %struct.bz_stream*, %struct.bz_stream** %768, align 8
  %770 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %769, i32 0, i32 0
  %771 = load i8*, i8** %770, align 8
  %772 = load i8, i8* %771, align 1
  %773 = zext i8 %772 to i32
  %774 = or i32 %767, %773
  %775 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %774, i32* %775, align 8
  %776 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %777 = load i32, i32* %776, align 4
  %778 = add nsw i32 %777, 8
  store i32 %778, i32* %776, align 4
  %779 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %780 = load %struct.bz_stream*, %struct.bz_stream** %779, align 8
  %781 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %780, i32 0, i32 0
  %782 = load i8*, i8** %781, align 8
  %783 = getelementptr inbounds i8, i8* %782, i32 1
  store i8* %783, i8** %781, align 8
  %784 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %785 = load %struct.bz_stream*, %struct.bz_stream** %784, align 8
  %786 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %785, i32 0, i32 1
  %787 = load i32, i32* %786, align 8
  %788 = add i32 %787, -1
  store i32 %788, i32* %786, align 8
  %789 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %790 = load %struct.bz_stream*, %struct.bz_stream** %789, align 8
  %791 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %790, i32 0, i32 2
  %792 = load i32, i32* %791, align 4
  %793 = add i32 %792, 1
  store i32 %793, i32* %791, align 4
  %794 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %795 = load %struct.bz_stream*, %struct.bz_stream** %794, align 8
  %796 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %795, i32 0, i32 2
  %797 = load i32, i32* %796, align 4
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %799, label %805

; <label>:799:                                    ; preds = %764
  %800 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %801 = load %struct.bz_stream*, %struct.bz_stream** %800, align 8
  %802 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %801, i32 0, i32 3
  %803 = load i32, i32* %802, align 8
  %804 = add i32 %803, 1
  store i32 %804, i32* %802, align 8
  br label %805

; <label>:805:                                    ; preds = %799, %764
  %806 = load i32, i32* %742, align 4
  %807 = icmp sge i32 %806, 8
  br i1 %807, label %._crit_edge604, label %757

; <label>:808:                                    ; preds = %745
  %809 = zext i8 %756 to i32
  %810 = icmp ne i32 %809, 83
  br i1 %810, label %811, label %812

; <label>:811:                                    ; preds = %808
  br label %4378

; <label>:812:                                    ; preds = %808
  br label %813

; <label>:813:                                    ; preds = %33, %812
  %814 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 19, i32* %814, align 8
  %815 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %816 = load i32, i32* %815, align 4
  %817 = icmp sge i32 %816, 8
  br i1 %817, label %818, label %.lr.ph600

.lr.ph600:                                        ; preds = %813
  br label %830

._crit_edge601:                                   ; preds = %878
  br label %818

; <label>:818:                                    ; preds = %._crit_edge601, %813
  %819 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %820 = load i32, i32* %819, align 8
  %821 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %822 = load i32, i32* %821, align 4
  %823 = sub nsw i32 %822, 8
  %824 = lshr i32 %820, %823
  %825 = and i32 %824, 255
  %826 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %827 = load i32, i32* %826, align 4
  %828 = sub nsw i32 %827, 8
  store i32 %828, i32* %826, align 4
  %829 = trunc i32 %825 to i8
  br label %881

; <label>:830:                                    ; preds = %.lr.ph600, %878
  call void @unroll_loop(i32 96)
  %831 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %832 = load %struct.bz_stream*, %struct.bz_stream** %831, align 8
  %833 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %832, i32 0, i32 1
  %834 = load i32, i32* %833, align 8
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %836, label %837

; <label>:836:                                    ; preds = %830
  br label %4378

; <label>:837:                                    ; preds = %830
  %838 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %839 = load i32, i32* %838, align 8
  %840 = shl i32 %839, 8
  %841 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %842 = load %struct.bz_stream*, %struct.bz_stream** %841, align 8
  %843 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %842, i32 0, i32 0
  %844 = load i8*, i8** %843, align 8
  %845 = load i8, i8* %844, align 1
  %846 = zext i8 %845 to i32
  %847 = or i32 %840, %846
  %848 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %847, i32* %848, align 8
  %849 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %850 = load i32, i32* %849, align 4
  %851 = add nsw i32 %850, 8
  store i32 %851, i32* %849, align 4
  %852 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %853 = load %struct.bz_stream*, %struct.bz_stream** %852, align 8
  %854 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %853, i32 0, i32 0
  %855 = load i8*, i8** %854, align 8
  %856 = getelementptr inbounds i8, i8* %855, i32 1
  store i8* %856, i8** %854, align 8
  %857 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %858 = load %struct.bz_stream*, %struct.bz_stream** %857, align 8
  %859 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %858, i32 0, i32 1
  %860 = load i32, i32* %859, align 8
  %861 = add i32 %860, -1
  store i32 %861, i32* %859, align 8
  %862 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %863 = load %struct.bz_stream*, %struct.bz_stream** %862, align 8
  %864 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %863, i32 0, i32 2
  %865 = load i32, i32* %864, align 4
  %866 = add i32 %865, 1
  store i32 %866, i32* %864, align 4
  %867 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %868 = load %struct.bz_stream*, %struct.bz_stream** %867, align 8
  %869 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %868, i32 0, i32 2
  %870 = load i32, i32* %869, align 4
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %872, label %878

; <label>:872:                                    ; preds = %837
  %873 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %874 = load %struct.bz_stream*, %struct.bz_stream** %873, align 8
  %875 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %874, i32 0, i32 3
  %876 = load i32, i32* %875, align 8
  %877 = add i32 %876, 1
  store i32 %877, i32* %875, align 8
  br label %878

; <label>:878:                                    ; preds = %872, %837
  %879 = load i32, i32* %815, align 4
  %880 = icmp sge i32 %879, 8
  br i1 %880, label %._crit_edge601, label %830

; <label>:881:                                    ; preds = %818
  %882 = zext i8 %829 to i32
  %883 = icmp ne i32 %882, 89
  br i1 %883, label %884, label %885

; <label>:884:                                    ; preds = %881
  br label %4378

; <label>:885:                                    ; preds = %881
  %886 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 11
  %887 = load i32, i32* %886, align 8
  %888 = add nsw i32 %887, 1
  store i32 %888, i32* %886, align 8
  %889 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 12
  %890 = load i32, i32* %889, align 4
  %891 = icmp sge i32 %890, 2
  br i1 %891, label %892, label %898

; <label>:892:                                    ; preds = %885
  %893 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %894 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 11
  %895 = load i32, i32* %894, align 8
  %896 = getelementptr [20 x i8], [20 x i8]* @.str.160, i32 0, i32 0
  %897 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %893, i8* %896, i32 %895)
  br label %898

; <label>:898:                                    ; preds = %892, %885
  %899 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 0, i32* %899, align 8
  br label %900

; <label>:900:                                    ; preds = %33, %898
  %901 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 20, i32* %901, align 8
  %902 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %903 = load i32, i32* %902, align 4
  %904 = icmp sge i32 %903, 8
  br i1 %904, label %905, label %.lr.ph597

.lr.ph597:                                        ; preds = %900
  br label %917

._crit_edge598:                                   ; preds = %965
  br label %905

; <label>:905:                                    ; preds = %._crit_edge598, %900
  %906 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %907 = load i32, i32* %906, align 8
  %908 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %909 = load i32, i32* %908, align 4
  %910 = sub nsw i32 %909, 8
  %911 = lshr i32 %907, %910
  %912 = and i32 %911, 255
  %913 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %914 = load i32, i32* %913, align 4
  %915 = sub nsw i32 %914, 8
  store i32 %915, i32* %913, align 4
  %916 = trunc i32 %912 to i8
  br label %968

; <label>:917:                                    ; preds = %.lr.ph597, %965
  call void @unroll_loop(i32 97)
  %918 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %919 = load %struct.bz_stream*, %struct.bz_stream** %918, align 8
  %920 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %919, i32 0, i32 1
  %921 = load i32, i32* %920, align 8
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %923, label %924

; <label>:923:                                    ; preds = %917
  br label %4378

; <label>:924:                                    ; preds = %917
  %925 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %926 = load i32, i32* %925, align 8
  %927 = shl i32 %926, 8
  %928 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %929 = load %struct.bz_stream*, %struct.bz_stream** %928, align 8
  %930 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %929, i32 0, i32 0
  %931 = load i8*, i8** %930, align 8
  %932 = load i8, i8* %931, align 1
  %933 = zext i8 %932 to i32
  %934 = or i32 %927, %933
  %935 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %934, i32* %935, align 8
  %936 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %937 = load i32, i32* %936, align 4
  %938 = add nsw i32 %937, 8
  store i32 %938, i32* %936, align 4
  %939 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %940 = load %struct.bz_stream*, %struct.bz_stream** %939, align 8
  %941 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %940, i32 0, i32 0
  %942 = load i8*, i8** %941, align 8
  %943 = getelementptr inbounds i8, i8* %942, i32 1
  store i8* %943, i8** %941, align 8
  %944 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %945 = load %struct.bz_stream*, %struct.bz_stream** %944, align 8
  %946 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %945, i32 0, i32 1
  %947 = load i32, i32* %946, align 8
  %948 = add i32 %947, -1
  store i32 %948, i32* %946, align 8
  %949 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %950 = load %struct.bz_stream*, %struct.bz_stream** %949, align 8
  %951 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %950, i32 0, i32 2
  %952 = load i32, i32* %951, align 4
  %953 = add i32 %952, 1
  store i32 %953, i32* %951, align 4
  %954 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %955 = load %struct.bz_stream*, %struct.bz_stream** %954, align 8
  %956 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %955, i32 0, i32 2
  %957 = load i32, i32* %956, align 4
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %959, label %965

; <label>:959:                                    ; preds = %924
  %960 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %961 = load %struct.bz_stream*, %struct.bz_stream** %960, align 8
  %962 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %961, i32 0, i32 3
  %963 = load i32, i32* %962, align 8
  %964 = add i32 %963, 1
  store i32 %964, i32* %962, align 8
  br label %965

; <label>:965:                                    ; preds = %959, %924
  %966 = load i32, i32* %902, align 4
  %967 = icmp sge i32 %966, 8
  br i1 %967, label %._crit_edge598, label %917

; <label>:968:                                    ; preds = %905
  %969 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  %970 = load i32, i32* %969, align 8
  %971 = shl i32 %970, 8
  %972 = zext i8 %916 to i32
  %973 = or i32 %971, %972
  %974 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 %973, i32* %974, align 8
  br label %975

; <label>:975:                                    ; preds = %33, %968
  %976 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 21, i32* %976, align 8
  %977 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %978 = load i32, i32* %977, align 4
  %979 = icmp sge i32 %978, 8
  br i1 %979, label %980, label %.lr.ph594

.lr.ph594:                                        ; preds = %975
  br label %992

._crit_edge595:                                   ; preds = %1040
  br label %980

; <label>:980:                                    ; preds = %._crit_edge595, %975
  %981 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %982 = load i32, i32* %981, align 8
  %983 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %984 = load i32, i32* %983, align 4
  %985 = sub nsw i32 %984, 8
  %986 = lshr i32 %982, %985
  %987 = and i32 %986, 255
  %988 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %989 = load i32, i32* %988, align 4
  %990 = sub nsw i32 %989, 8
  store i32 %990, i32* %988, align 4
  %991 = trunc i32 %987 to i8
  br label %1043

; <label>:992:                                    ; preds = %.lr.ph594, %1040
  call void @unroll_loop(i32 98)
  %993 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %994 = load %struct.bz_stream*, %struct.bz_stream** %993, align 8
  %995 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %994, i32 0, i32 1
  %996 = load i32, i32* %995, align 8
  %997 = icmp eq i32 %996, 0
  br i1 %997, label %998, label %999

; <label>:998:                                    ; preds = %992
  br label %4378

; <label>:999:                                    ; preds = %992
  %1000 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1001 = load i32, i32* %1000, align 8
  %1002 = shl i32 %1001, 8
  %1003 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1004 = load %struct.bz_stream*, %struct.bz_stream** %1003, align 8
  %1005 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1004, i32 0, i32 0
  %1006 = load i8*, i8** %1005, align 8
  %1007 = load i8, i8* %1006, align 1
  %1008 = zext i8 %1007 to i32
  %1009 = or i32 %1002, %1008
  %1010 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1009, i32* %1010, align 8
  %1011 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1012 = load i32, i32* %1011, align 4
  %1013 = add nsw i32 %1012, 8
  store i32 %1013, i32* %1011, align 4
  %1014 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1015 = load %struct.bz_stream*, %struct.bz_stream** %1014, align 8
  %1016 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1015, i32 0, i32 0
  %1017 = load i8*, i8** %1016, align 8
  %1018 = getelementptr inbounds i8, i8* %1017, i32 1
  store i8* %1018, i8** %1016, align 8
  %1019 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1020 = load %struct.bz_stream*, %struct.bz_stream** %1019, align 8
  %1021 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1020, i32 0, i32 1
  %1022 = load i32, i32* %1021, align 8
  %1023 = add i32 %1022, -1
  store i32 %1023, i32* %1021, align 8
  %1024 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1025 = load %struct.bz_stream*, %struct.bz_stream** %1024, align 8
  %1026 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1025, i32 0, i32 2
  %1027 = load i32, i32* %1026, align 4
  %1028 = add i32 %1027, 1
  store i32 %1028, i32* %1026, align 4
  %1029 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1030 = load %struct.bz_stream*, %struct.bz_stream** %1029, align 8
  %1031 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1030, i32 0, i32 2
  %1032 = load i32, i32* %1031, align 4
  %1033 = icmp eq i32 %1032, 0
  br i1 %1033, label %1034, label %1040

; <label>:1034:                                   ; preds = %999
  %1035 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1036 = load %struct.bz_stream*, %struct.bz_stream** %1035, align 8
  %1037 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1036, i32 0, i32 3
  %1038 = load i32, i32* %1037, align 8
  %1039 = add i32 %1038, 1
  store i32 %1039, i32* %1037, align 8
  br label %1040

; <label>:1040:                                   ; preds = %1034, %999
  %1041 = load i32, i32* %977, align 4
  %1042 = icmp sge i32 %1041, 8
  br i1 %1042, label %._crit_edge595, label %992

; <label>:1043:                                   ; preds = %980
  %1044 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  %1045 = load i32, i32* %1044, align 8
  %1046 = shl i32 %1045, 8
  %1047 = zext i8 %991 to i32
  %1048 = or i32 %1046, %1047
  %1049 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 %1048, i32* %1049, align 8
  br label %1050

; <label>:1050:                                   ; preds = %33, %1043
  %1051 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 22, i32* %1051, align 8
  %1052 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1053 = load i32, i32* %1052, align 4
  %1054 = icmp sge i32 %1053, 8
  br i1 %1054, label %1055, label %.lr.ph591

.lr.ph591:                                        ; preds = %1050
  br label %1067

._crit_edge592:                                   ; preds = %1115
  br label %1055

; <label>:1055:                                   ; preds = %._crit_edge592, %1050
  %1056 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1057 = load i32, i32* %1056, align 8
  %1058 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1059 = load i32, i32* %1058, align 4
  %1060 = sub nsw i32 %1059, 8
  %1061 = lshr i32 %1057, %1060
  %1062 = and i32 %1061, 255
  %1063 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1064 = load i32, i32* %1063, align 4
  %1065 = sub nsw i32 %1064, 8
  store i32 %1065, i32* %1063, align 4
  %1066 = trunc i32 %1062 to i8
  br label %1118

; <label>:1067:                                   ; preds = %.lr.ph591, %1115
  call void @unroll_loop(i32 99)
  %1068 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1069 = load %struct.bz_stream*, %struct.bz_stream** %1068, align 8
  %1070 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1069, i32 0, i32 1
  %1071 = load i32, i32* %1070, align 8
  %1072 = icmp eq i32 %1071, 0
  br i1 %1072, label %1073, label %1074

; <label>:1073:                                   ; preds = %1067
  br label %4378

; <label>:1074:                                   ; preds = %1067
  %1075 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1076 = load i32, i32* %1075, align 8
  %1077 = shl i32 %1076, 8
  %1078 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1079 = load %struct.bz_stream*, %struct.bz_stream** %1078, align 8
  %1080 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1079, i32 0, i32 0
  %1081 = load i8*, i8** %1080, align 8
  %1082 = load i8, i8* %1081, align 1
  %1083 = zext i8 %1082 to i32
  %1084 = or i32 %1077, %1083
  %1085 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1084, i32* %1085, align 8
  %1086 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1087 = load i32, i32* %1086, align 4
  %1088 = add nsw i32 %1087, 8
  store i32 %1088, i32* %1086, align 4
  %1089 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1090 = load %struct.bz_stream*, %struct.bz_stream** %1089, align 8
  %1091 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1090, i32 0, i32 0
  %1092 = load i8*, i8** %1091, align 8
  %1093 = getelementptr inbounds i8, i8* %1092, i32 1
  store i8* %1093, i8** %1091, align 8
  %1094 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1095 = load %struct.bz_stream*, %struct.bz_stream** %1094, align 8
  %1096 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1095, i32 0, i32 1
  %1097 = load i32, i32* %1096, align 8
  %1098 = add i32 %1097, -1
  store i32 %1098, i32* %1096, align 8
  %1099 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1100 = load %struct.bz_stream*, %struct.bz_stream** %1099, align 8
  %1101 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1100, i32 0, i32 2
  %1102 = load i32, i32* %1101, align 4
  %1103 = add i32 %1102, 1
  store i32 %1103, i32* %1101, align 4
  %1104 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1105 = load %struct.bz_stream*, %struct.bz_stream** %1104, align 8
  %1106 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1105, i32 0, i32 2
  %1107 = load i32, i32* %1106, align 4
  %1108 = icmp eq i32 %1107, 0
  br i1 %1108, label %1109, label %1115

; <label>:1109:                                   ; preds = %1074
  %1110 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1111 = load %struct.bz_stream*, %struct.bz_stream** %1110, align 8
  %1112 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1111, i32 0, i32 3
  %1113 = load i32, i32* %1112, align 8
  %1114 = add i32 %1113, 1
  store i32 %1114, i32* %1112, align 8
  br label %1115

; <label>:1115:                                   ; preds = %1109, %1074
  %1116 = load i32, i32* %1052, align 4
  %1117 = icmp sge i32 %1116, 8
  br i1 %1117, label %._crit_edge592, label %1067

; <label>:1118:                                   ; preds = %1055
  %1119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  %1120 = load i32, i32* %1119, align 8
  %1121 = shl i32 %1120, 8
  %1122 = zext i8 %1066 to i32
  %1123 = or i32 %1121, %1122
  %1124 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 %1123, i32* %1124, align 8
  br label %1125

; <label>:1125:                                   ; preds = %33, %1118
  %1126 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 23, i32* %1126, align 8
  %1127 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1128 = load i32, i32* %1127, align 4
  %1129 = icmp sge i32 %1128, 8
  br i1 %1129, label %1130, label %.lr.ph588

.lr.ph588:                                        ; preds = %1125
  br label %1142

._crit_edge589:                                   ; preds = %1190
  br label %1130

; <label>:1130:                                   ; preds = %._crit_edge589, %1125
  %1131 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1132 = load i32, i32* %1131, align 8
  %1133 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1134 = load i32, i32* %1133, align 4
  %1135 = sub nsw i32 %1134, 8
  %1136 = lshr i32 %1132, %1135
  %1137 = and i32 %1136, 255
  %1138 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1139 = load i32, i32* %1138, align 4
  %1140 = sub nsw i32 %1139, 8
  store i32 %1140, i32* %1138, align 4
  %1141 = trunc i32 %1137 to i8
  br label %1193

; <label>:1142:                                   ; preds = %.lr.ph588, %1190
  call void @unroll_loop(i32 100)
  %1143 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1144 = load %struct.bz_stream*, %struct.bz_stream** %1143, align 8
  %1145 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1144, i32 0, i32 1
  %1146 = load i32, i32* %1145, align 8
  %1147 = icmp eq i32 %1146, 0
  br i1 %1147, label %1148, label %1149

; <label>:1148:                                   ; preds = %1142
  br label %4378

; <label>:1149:                                   ; preds = %1142
  %1150 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1151 = load i32, i32* %1150, align 8
  %1152 = shl i32 %1151, 8
  %1153 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1154 = load %struct.bz_stream*, %struct.bz_stream** %1153, align 8
  %1155 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1154, i32 0, i32 0
  %1156 = load i8*, i8** %1155, align 8
  %1157 = load i8, i8* %1156, align 1
  %1158 = zext i8 %1157 to i32
  %1159 = or i32 %1152, %1158
  %1160 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1159, i32* %1160, align 8
  %1161 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1162 = load i32, i32* %1161, align 4
  %1163 = add nsw i32 %1162, 8
  store i32 %1163, i32* %1161, align 4
  %1164 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1165 = load %struct.bz_stream*, %struct.bz_stream** %1164, align 8
  %1166 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1165, i32 0, i32 0
  %1167 = load i8*, i8** %1166, align 8
  %1168 = getelementptr inbounds i8, i8* %1167, i32 1
  store i8* %1168, i8** %1166, align 8
  %1169 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1170 = load %struct.bz_stream*, %struct.bz_stream** %1169, align 8
  %1171 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1170, i32 0, i32 1
  %1172 = load i32, i32* %1171, align 8
  %1173 = add i32 %1172, -1
  store i32 %1173, i32* %1171, align 8
  %1174 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1175 = load %struct.bz_stream*, %struct.bz_stream** %1174, align 8
  %1176 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1175, i32 0, i32 2
  %1177 = load i32, i32* %1176, align 4
  %1178 = add i32 %1177, 1
  store i32 %1178, i32* %1176, align 4
  %1179 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1180 = load %struct.bz_stream*, %struct.bz_stream** %1179, align 8
  %1181 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1180, i32 0, i32 2
  %1182 = load i32, i32* %1181, align 4
  %1183 = icmp eq i32 %1182, 0
  br i1 %1183, label %1184, label %1190

; <label>:1184:                                   ; preds = %1149
  %1185 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1186 = load %struct.bz_stream*, %struct.bz_stream** %1185, align 8
  %1187 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1186, i32 0, i32 3
  %1188 = load i32, i32* %1187, align 8
  %1189 = add i32 %1188, 1
  store i32 %1189, i32* %1187, align 8
  br label %1190

; <label>:1190:                                   ; preds = %1184, %1149
  %1191 = load i32, i32* %1127, align 4
  %1192 = icmp sge i32 %1191, 8
  br i1 %1192, label %._crit_edge589, label %1142

; <label>:1193:                                   ; preds = %1130
  %1194 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  %1195 = load i32, i32* %1194, align 8
  %1196 = shl i32 %1195, 8
  %1197 = zext i8 %1141 to i32
  %1198 = or i32 %1196, %1197
  %1199 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 %1198, i32* %1199, align 8
  br label %1200

; <label>:1200:                                   ; preds = %33, %1193
  %1201 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 24, i32* %1201, align 8
  %1202 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1203 = load i32, i32* %1202, align 4
  %1204 = icmp sge i32 %1203, 1
  br i1 %1204, label %1205, label %.lr.ph585

.lr.ph585:                                        ; preds = %1200
  br label %1218

._crit_edge586:                                   ; preds = %1266
  br label %1205

; <label>:1205:                                   ; preds = %._crit_edge586, %1200
  %1206 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1207 = load i32, i32* %1206, align 8
  %1208 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1209 = load i32, i32* %1208, align 4
  %1210 = sub nsw i32 %1209, 1
  %1211 = lshr i32 %1207, %1210
  %1212 = and i32 %1211, 1
  %1213 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1214 = load i32, i32* %1213, align 4
  %1215 = sub nsw i32 %1214, 1
  store i32 %1215, i32* %1213, align 4
  %1216 = trunc i32 %1212 to i8
  %1217 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  store i8 %1216, i8* %1217, align 4
  br label %1269

; <label>:1218:                                   ; preds = %.lr.ph585, %1266
  call void @unroll_loop(i32 101)
  %1219 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1220 = load %struct.bz_stream*, %struct.bz_stream** %1219, align 8
  %1221 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1220, i32 0, i32 1
  %1222 = load i32, i32* %1221, align 8
  %1223 = icmp eq i32 %1222, 0
  br i1 %1223, label %1224, label %1225

; <label>:1224:                                   ; preds = %1218
  br label %4378

; <label>:1225:                                   ; preds = %1218
  %1226 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1227 = load i32, i32* %1226, align 8
  %1228 = shl i32 %1227, 8
  %1229 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1230 = load %struct.bz_stream*, %struct.bz_stream** %1229, align 8
  %1231 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1230, i32 0, i32 0
  %1232 = load i8*, i8** %1231, align 8
  %1233 = load i8, i8* %1232, align 1
  %1234 = zext i8 %1233 to i32
  %1235 = or i32 %1228, %1234
  %1236 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1235, i32* %1236, align 8
  %1237 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1238 = load i32, i32* %1237, align 4
  %1239 = add nsw i32 %1238, 8
  store i32 %1239, i32* %1237, align 4
  %1240 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1241 = load %struct.bz_stream*, %struct.bz_stream** %1240, align 8
  %1242 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1241, i32 0, i32 0
  %1243 = load i8*, i8** %1242, align 8
  %1244 = getelementptr inbounds i8, i8* %1243, i32 1
  store i8* %1244, i8** %1242, align 8
  %1245 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1246 = load %struct.bz_stream*, %struct.bz_stream** %1245, align 8
  %1247 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1246, i32 0, i32 1
  %1248 = load i32, i32* %1247, align 8
  %1249 = add i32 %1248, -1
  store i32 %1249, i32* %1247, align 8
  %1250 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1251 = load %struct.bz_stream*, %struct.bz_stream** %1250, align 8
  %1252 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1251, i32 0, i32 2
  %1253 = load i32, i32* %1252, align 4
  %1254 = add i32 %1253, 1
  store i32 %1254, i32* %1252, align 4
  %1255 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1256 = load %struct.bz_stream*, %struct.bz_stream** %1255, align 8
  %1257 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1256, i32 0, i32 2
  %1258 = load i32, i32* %1257, align 4
  %1259 = icmp eq i32 %1258, 0
  br i1 %1259, label %1260, label %1266

; <label>:1260:                                   ; preds = %1225
  %1261 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1262 = load %struct.bz_stream*, %struct.bz_stream** %1261, align 8
  %1263 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1262, i32 0, i32 3
  %1264 = load i32, i32* %1263, align 8
  %1265 = add i32 %1264, 1
  store i32 %1265, i32* %1263, align 8
  br label %1266

; <label>:1266:                                   ; preds = %1260, %1225
  %1267 = load i32, i32* %1202, align 4
  %1268 = icmp sge i32 %1267, 1
  br i1 %1268, label %._crit_edge586, label %1218

; <label>:1269:                                   ; preds = %1205
  %1270 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  store i32 0, i32* %1270, align 8
  br label %1271

; <label>:1271:                                   ; preds = %33, %1269
  %1272 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 25, i32* %1272, align 8
  %1273 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1274 = load i32, i32* %1273, align 4
  %1275 = icmp sge i32 %1274, 8
  br i1 %1275, label %1276, label %.lr.ph582

.lr.ph582:                                        ; preds = %1271
  br label %1288

._crit_edge583:                                   ; preds = %1336
  br label %1276

; <label>:1276:                                   ; preds = %._crit_edge583, %1271
  %1277 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1278 = load i32, i32* %1277, align 8
  %1279 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1280 = load i32, i32* %1279, align 4
  %1281 = sub nsw i32 %1280, 8
  %1282 = lshr i32 %1278, %1281
  %1283 = and i32 %1282, 255
  %1284 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1285 = load i32, i32* %1284, align 4
  %1286 = sub nsw i32 %1285, 8
  store i32 %1286, i32* %1284, align 4
  %1287 = trunc i32 %1283 to i8
  br label %1339

; <label>:1288:                                   ; preds = %.lr.ph582, %1336
  call void @unroll_loop(i32 102)
  %1289 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1290 = load %struct.bz_stream*, %struct.bz_stream** %1289, align 8
  %1291 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1290, i32 0, i32 1
  %1292 = load i32, i32* %1291, align 8
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1294, label %1295

; <label>:1294:                                   ; preds = %1288
  br label %4378

; <label>:1295:                                   ; preds = %1288
  %1296 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1297 = load i32, i32* %1296, align 8
  %1298 = shl i32 %1297, 8
  %1299 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1300 = load %struct.bz_stream*, %struct.bz_stream** %1299, align 8
  %1301 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1300, i32 0, i32 0
  %1302 = load i8*, i8** %1301, align 8
  %1303 = load i8, i8* %1302, align 1
  %1304 = zext i8 %1303 to i32
  %1305 = or i32 %1298, %1304
  %1306 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1305, i32* %1306, align 8
  %1307 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1308 = load i32, i32* %1307, align 4
  %1309 = add nsw i32 %1308, 8
  store i32 %1309, i32* %1307, align 4
  %1310 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1311 = load %struct.bz_stream*, %struct.bz_stream** %1310, align 8
  %1312 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1311, i32 0, i32 0
  %1313 = load i8*, i8** %1312, align 8
  %1314 = getelementptr inbounds i8, i8* %1313, i32 1
  store i8* %1314, i8** %1312, align 8
  %1315 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1316 = load %struct.bz_stream*, %struct.bz_stream** %1315, align 8
  %1317 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1316, i32 0, i32 1
  %1318 = load i32, i32* %1317, align 8
  %1319 = add i32 %1318, -1
  store i32 %1319, i32* %1317, align 8
  %1320 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1321 = load %struct.bz_stream*, %struct.bz_stream** %1320, align 8
  %1322 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1321, i32 0, i32 2
  %1323 = load i32, i32* %1322, align 4
  %1324 = add i32 %1323, 1
  store i32 %1324, i32* %1322, align 4
  %1325 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1326 = load %struct.bz_stream*, %struct.bz_stream** %1325, align 8
  %1327 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1326, i32 0, i32 2
  %1328 = load i32, i32* %1327, align 4
  %1329 = icmp eq i32 %1328, 0
  br i1 %1329, label %1330, label %1336

; <label>:1330:                                   ; preds = %1295
  %1331 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1332 = load %struct.bz_stream*, %struct.bz_stream** %1331, align 8
  %1333 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1332, i32 0, i32 3
  %1334 = load i32, i32* %1333, align 8
  %1335 = add i32 %1334, 1
  store i32 %1335, i32* %1333, align 8
  br label %1336

; <label>:1336:                                   ; preds = %1330, %1295
  %1337 = load i32, i32* %1273, align 4
  %1338 = icmp sge i32 %1337, 8
  br i1 %1338, label %._crit_edge583, label %1288

; <label>:1339:                                   ; preds = %1276
  %1340 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1341 = load i32, i32* %1340, align 8
  %1342 = shl i32 %1341, 8
  %1343 = zext i8 %1287 to i32
  %1344 = or i32 %1342, %1343
  %1345 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  store i32 %1344, i32* %1345, align 8
  br label %1346

; <label>:1346:                                   ; preds = %33, %1339
  %1347 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 26, i32* %1347, align 8
  %1348 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1349 = load i32, i32* %1348, align 4
  %1350 = icmp sge i32 %1349, 8
  br i1 %1350, label %1351, label %.lr.ph579

.lr.ph579:                                        ; preds = %1346
  br label %1363

._crit_edge580:                                   ; preds = %1411
  br label %1351

; <label>:1351:                                   ; preds = %._crit_edge580, %1346
  %1352 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1353 = load i32, i32* %1352, align 8
  %1354 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1355 = load i32, i32* %1354, align 4
  %1356 = sub nsw i32 %1355, 8
  %1357 = lshr i32 %1353, %1356
  %1358 = and i32 %1357, 255
  %1359 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1360 = load i32, i32* %1359, align 4
  %1361 = sub nsw i32 %1360, 8
  store i32 %1361, i32* %1359, align 4
  %1362 = trunc i32 %1358 to i8
  br label %1414

; <label>:1363:                                   ; preds = %.lr.ph579, %1411
  call void @unroll_loop(i32 103)
  %1364 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1365 = load %struct.bz_stream*, %struct.bz_stream** %1364, align 8
  %1366 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1365, i32 0, i32 1
  %1367 = load i32, i32* %1366, align 8
  %1368 = icmp eq i32 %1367, 0
  br i1 %1368, label %1369, label %1370

; <label>:1369:                                   ; preds = %1363
  br label %4378

; <label>:1370:                                   ; preds = %1363
  %1371 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1372 = load i32, i32* %1371, align 8
  %1373 = shl i32 %1372, 8
  %1374 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1375 = load %struct.bz_stream*, %struct.bz_stream** %1374, align 8
  %1376 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1375, i32 0, i32 0
  %1377 = load i8*, i8** %1376, align 8
  %1378 = load i8, i8* %1377, align 1
  %1379 = zext i8 %1378 to i32
  %1380 = or i32 %1373, %1379
  %1381 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1380, i32* %1381, align 8
  %1382 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1383 = load i32, i32* %1382, align 4
  %1384 = add nsw i32 %1383, 8
  store i32 %1384, i32* %1382, align 4
  %1385 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1386 = load %struct.bz_stream*, %struct.bz_stream** %1385, align 8
  %1387 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1386, i32 0, i32 0
  %1388 = load i8*, i8** %1387, align 8
  %1389 = getelementptr inbounds i8, i8* %1388, i32 1
  store i8* %1389, i8** %1387, align 8
  %1390 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1391 = load %struct.bz_stream*, %struct.bz_stream** %1390, align 8
  %1392 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1391, i32 0, i32 1
  %1393 = load i32, i32* %1392, align 8
  %1394 = add i32 %1393, -1
  store i32 %1394, i32* %1392, align 8
  %1395 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1396 = load %struct.bz_stream*, %struct.bz_stream** %1395, align 8
  %1397 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1396, i32 0, i32 2
  %1398 = load i32, i32* %1397, align 4
  %1399 = add i32 %1398, 1
  store i32 %1399, i32* %1397, align 4
  %1400 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1401 = load %struct.bz_stream*, %struct.bz_stream** %1400, align 8
  %1402 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1401, i32 0, i32 2
  %1403 = load i32, i32* %1402, align 4
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1405, label %1411

; <label>:1405:                                   ; preds = %1370
  %1406 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1407 = load %struct.bz_stream*, %struct.bz_stream** %1406, align 8
  %1408 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1407, i32 0, i32 3
  %1409 = load i32, i32* %1408, align 8
  %1410 = add i32 %1409, 1
  store i32 %1410, i32* %1408, align 8
  br label %1411

; <label>:1411:                                   ; preds = %1405, %1370
  %1412 = load i32, i32* %1348, align 4
  %1413 = icmp sge i32 %1412, 8
  br i1 %1413, label %._crit_edge580, label %1363

; <label>:1414:                                   ; preds = %1351
  %1415 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1416 = load i32, i32* %1415, align 8
  %1417 = shl i32 %1416, 8
  %1418 = zext i8 %1362 to i32
  %1419 = or i32 %1417, %1418
  %1420 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  store i32 %1419, i32* %1420, align 8
  br label %1421

; <label>:1421:                                   ; preds = %33, %1414
  %1422 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 27, i32* %1422, align 8
  %1423 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1424 = load i32, i32* %1423, align 4
  %1425 = icmp sge i32 %1424, 8
  br i1 %1425, label %1426, label %.lr.ph576

.lr.ph576:                                        ; preds = %1421
  br label %1438

._crit_edge577:                                   ; preds = %1486
  br label %1426

; <label>:1426:                                   ; preds = %._crit_edge577, %1421
  %1427 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1428 = load i32, i32* %1427, align 8
  %1429 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1430 = load i32, i32* %1429, align 4
  %1431 = sub nsw i32 %1430, 8
  %1432 = lshr i32 %1428, %1431
  %1433 = and i32 %1432, 255
  %1434 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1435 = load i32, i32* %1434, align 4
  %1436 = sub nsw i32 %1435, 8
  store i32 %1436, i32* %1434, align 4
  %1437 = trunc i32 %1433 to i8
  br label %1489

; <label>:1438:                                   ; preds = %.lr.ph576, %1486
  call void @unroll_loop(i32 104)
  %1439 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1440 = load %struct.bz_stream*, %struct.bz_stream** %1439, align 8
  %1441 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1440, i32 0, i32 1
  %1442 = load i32, i32* %1441, align 8
  %1443 = icmp eq i32 %1442, 0
  br i1 %1443, label %1444, label %1445

; <label>:1444:                                   ; preds = %1438
  br label %4378

; <label>:1445:                                   ; preds = %1438
  %1446 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1447 = load i32, i32* %1446, align 8
  %1448 = shl i32 %1447, 8
  %1449 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1450 = load %struct.bz_stream*, %struct.bz_stream** %1449, align 8
  %1451 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1450, i32 0, i32 0
  %1452 = load i8*, i8** %1451, align 8
  %1453 = load i8, i8* %1452, align 1
  %1454 = zext i8 %1453 to i32
  %1455 = or i32 %1448, %1454
  %1456 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1455, i32* %1456, align 8
  %1457 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1458 = load i32, i32* %1457, align 4
  %1459 = add nsw i32 %1458, 8
  store i32 %1459, i32* %1457, align 4
  %1460 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1461 = load %struct.bz_stream*, %struct.bz_stream** %1460, align 8
  %1462 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1461, i32 0, i32 0
  %1463 = load i8*, i8** %1462, align 8
  %1464 = getelementptr inbounds i8, i8* %1463, i32 1
  store i8* %1464, i8** %1462, align 8
  %1465 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1466 = load %struct.bz_stream*, %struct.bz_stream** %1465, align 8
  %1467 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1466, i32 0, i32 1
  %1468 = load i32, i32* %1467, align 8
  %1469 = add i32 %1468, -1
  store i32 %1469, i32* %1467, align 8
  %1470 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1471 = load %struct.bz_stream*, %struct.bz_stream** %1470, align 8
  %1472 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1471, i32 0, i32 2
  %1473 = load i32, i32* %1472, align 4
  %1474 = add i32 %1473, 1
  store i32 %1474, i32* %1472, align 4
  %1475 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1476 = load %struct.bz_stream*, %struct.bz_stream** %1475, align 8
  %1477 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1476, i32 0, i32 2
  %1478 = load i32, i32* %1477, align 4
  %1479 = icmp eq i32 %1478, 0
  br i1 %1479, label %1480, label %1486

; <label>:1480:                                   ; preds = %1445
  %1481 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1482 = load %struct.bz_stream*, %struct.bz_stream** %1481, align 8
  %1483 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1482, i32 0, i32 3
  %1484 = load i32, i32* %1483, align 8
  %1485 = add i32 %1484, 1
  store i32 %1485, i32* %1483, align 8
  br label %1486

; <label>:1486:                                   ; preds = %1480, %1445
  %1487 = load i32, i32* %1423, align 4
  %1488 = icmp sge i32 %1487, 8
  br i1 %1488, label %._crit_edge577, label %1438

; <label>:1489:                                   ; preds = %1426
  %1490 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1491 = load i32, i32* %1490, align 8
  %1492 = shl i32 %1491, 8
  %1493 = zext i8 %1437 to i32
  %1494 = or i32 %1492, %1493
  %1495 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  store i32 %1494, i32* %1495, align 8
  %1496 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1497 = load i32, i32* %1496, align 8
  %1498 = icmp slt i32 %1497, 0
  br i1 %1498, label %1499, label %1500

; <label>:1499:                                   ; preds = %1489
  br label %4378

; <label>:1500:                                   ; preds = %1489
  %1501 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1502 = load i32, i32* %1501, align 8
  %1503 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %1504 = load i32, i32* %1503, align 8
  %1505 = mul nsw i32 100000, %1504
  %1506 = add nsw i32 10, %1505
  %1507 = icmp sgt i32 %1502, %1506
  br i1 %1507, label %1508, label %1509

; <label>:1508:                                   ; preds = %1500
  br label %4378

; <label>:1509:                                   ; preds = %1500
  br label %1510

; <label>:1510:                                   ; preds = %1593, %1509
  %.09 = phi i32 [ %1594, %1593 ], [ 0, %1509 ]
  %1511 = icmp slt i32 %.09, 16
  br i1 %1511, label %1512, label %1595

; <label>:1512:                                   ; preds = %1510
  br label %1513

; <label>:1513:                                   ; preds = %33, %1512
  %.110 = phi i32 [ %35, %33 ], [ %.09, %1512 ]
  %1514 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 28, i32* %1514, align 8
  %1515 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1516 = load i32, i32* %1515, align 4
  %1517 = icmp sge i32 %1516, 1
  br i1 %1517, label %1518, label %.lr.ph397

.lr.ph397:                                        ; preds = %1513
  br label %1530

._crit_edge398:                                   ; preds = %1578
  br label %1518

; <label>:1518:                                   ; preds = %._crit_edge398, %1513
  %1519 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1520 = load i32, i32* %1519, align 8
  %1521 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1522 = load i32, i32* %1521, align 4
  %1523 = sub nsw i32 %1522, 1
  %1524 = lshr i32 %1520, %1523
  %1525 = and i32 %1524, 1
  %1526 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1527 = load i32, i32* %1526, align 4
  %1528 = sub nsw i32 %1527, 1
  store i32 %1528, i32* %1526, align 4
  %1529 = trunc i32 %1525 to i8
  br label %1581

; <label>:1530:                                   ; preds = %.lr.ph397, %1578
  call void @unroll_loop(i32 105)
  %1531 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1532 = load %struct.bz_stream*, %struct.bz_stream** %1531, align 8
  %1533 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1532, i32 0, i32 1
  %1534 = load i32, i32* %1533, align 8
  %1535 = icmp eq i32 %1534, 0
  br i1 %1535, label %1536, label %1537

; <label>:1536:                                   ; preds = %1530
  br label %4378

; <label>:1537:                                   ; preds = %1530
  %1538 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1539 = load i32, i32* %1538, align 8
  %1540 = shl i32 %1539, 8
  %1541 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1542 = load %struct.bz_stream*, %struct.bz_stream** %1541, align 8
  %1543 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1542, i32 0, i32 0
  %1544 = load i8*, i8** %1543, align 8
  %1545 = load i8, i8* %1544, align 1
  %1546 = zext i8 %1545 to i32
  %1547 = or i32 %1540, %1546
  %1548 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1547, i32* %1548, align 8
  %1549 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1550 = load i32, i32* %1549, align 4
  %1551 = add nsw i32 %1550, 8
  store i32 %1551, i32* %1549, align 4
  %1552 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1553 = load %struct.bz_stream*, %struct.bz_stream** %1552, align 8
  %1554 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1553, i32 0, i32 0
  %1555 = load i8*, i8** %1554, align 8
  %1556 = getelementptr inbounds i8, i8* %1555, i32 1
  store i8* %1556, i8** %1554, align 8
  %1557 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1558 = load %struct.bz_stream*, %struct.bz_stream** %1557, align 8
  %1559 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1558, i32 0, i32 1
  %1560 = load i32, i32* %1559, align 8
  %1561 = add i32 %1560, -1
  store i32 %1561, i32* %1559, align 8
  %1562 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1563 = load %struct.bz_stream*, %struct.bz_stream** %1562, align 8
  %1564 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1563, i32 0, i32 2
  %1565 = load i32, i32* %1564, align 4
  %1566 = add i32 %1565, 1
  store i32 %1566, i32* %1564, align 4
  %1567 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1568 = load %struct.bz_stream*, %struct.bz_stream** %1567, align 8
  %1569 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1568, i32 0, i32 2
  %1570 = load i32, i32* %1569, align 4
  %1571 = icmp eq i32 %1570, 0
  br i1 %1571, label %1572, label %1578

; <label>:1572:                                   ; preds = %1537
  %1573 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1574 = load %struct.bz_stream*, %struct.bz_stream** %1573, align 8
  %1575 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1574, i32 0, i32 3
  %1576 = load i32, i32* %1575, align 8
  %1577 = add i32 %1576, 1
  store i32 %1577, i32* %1575, align 8
  br label %1578

; <label>:1578:                                   ; preds = %1572, %1537
  %1579 = load i32, i32* %1515, align 4
  %1580 = icmp sge i32 %1579, 1
  br i1 %1580, label %._crit_edge398, label %1530

; <label>:1581:                                   ; preds = %1518
  %1582 = zext i8 %1529 to i32
  %1583 = icmp eq i32 %1582, 1
  br i1 %1583, label %1584, label %1588

; <label>:1584:                                   ; preds = %1581
  %1585 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 29
  %1586 = sext i32 %.110 to i64
  %1587 = getelementptr inbounds [16 x i8], [16 x i8]* %1585, i64 0, i64 %1586
  store i8 1, i8* %1587, align 1
  br label %1592

; <label>:1588:                                   ; preds = %1581
  %1589 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 29
  %1590 = sext i32 %.110 to i64
  %1591 = getelementptr inbounds [16 x i8], [16 x i8]* %1589, i64 0, i64 %1590
  store i8 0, i8* %1591, align 1
  br label %1592

; <label>:1592:                                   ; preds = %1588, %1584
  br label %1593

; <label>:1593:                                   ; preds = %1592
  %1594 = add nsw i32 %.110, 1
  br label %1510

; <label>:1595:                                   ; preds = %1510
  br label %1596

; <label>:1596:                                   ; preds = %1595, %1599
  %indvars.iv572 = phi i64 [ 0, %1595 ], [ %indvars.iv.next573, %1599 ]
  call void @unroll_loop(i32 106)
  %1597 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 28
  %1598 = getelementptr inbounds [256 x i8], [256 x i8]* %1597, i64 0, i64 %indvars.iv572
  store i8 0, i8* %1598, align 1
  br label %1599

; <label>:1599:                                   ; preds = %1596
  %indvars.iv.next573 = add nuw nsw i64 %indvars.iv572, 1
  %exitcond574 = icmp ne i64 %indvars.iv.next573, 256
  br i1 %exitcond574, label %1596, label %1600

; <label>:1600:                                   ; preds = %1599
  br label %1601

; <label>:1601:                                   ; preds = %1695, %1600
  %.013 = phi i32 [ %.316, %1695 ], [ %37, %1600 ]
  %.3 = phi i32 [ %1696, %1695 ], [ 0, %1600 ]
  %1602 = icmp slt i32 %.3, 16
  br i1 %1602, label %1603, label %1697

; <label>:1603:                                   ; preds = %1601
  %1604 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 29
  %1605 = sext i32 %.3 to i64
  %1606 = getelementptr inbounds [16 x i8], [16 x i8]* %1604, i64 0, i64 %1605
  %1607 = load i8, i8* %1606, align 1
  %1608 = icmp ne i8 %1607, 0
  br i1 %1608, label %1609, label %1694

; <label>:1609:                                   ; preds = %1603
  br label %1610

; <label>:1610:                                   ; preds = %1691, %1609
  %.114 = phi i32 [ %1692, %1691 ], [ 0, %1609 ]
  %.4 = phi i32 [ %.5, %1691 ], [ %.3, %1609 ]
  %1611 = icmp slt i32 %.114, 16
  br i1 %1611, label %1612, label %1693

; <label>:1612:                                   ; preds = %1610
  br label %1613

; <label>:1613:                                   ; preds = %33, %1612
  %.215 = phi i32 [ %37, %33 ], [ %.114, %1612 ]
  %.5 = phi i32 [ %35, %33 ], [ %.4, %1612 ]
  %1614 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 29, i32* %1614, align 8
  %1615 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1616 = load i32, i32* %1615, align 4
  %1617 = icmp sge i32 %1616, 1
  br i1 %1617, label %1618, label %.lr.ph400

.lr.ph400:                                        ; preds = %1613
  br label %1630

._crit_edge401:                                   ; preds = %1678
  br label %1618

; <label>:1618:                                   ; preds = %._crit_edge401, %1613
  %1619 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1620 = load i32, i32* %1619, align 8
  %1621 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1622 = load i32, i32* %1621, align 4
  %1623 = sub nsw i32 %1622, 1
  %1624 = lshr i32 %1620, %1623
  %1625 = and i32 %1624, 1
  %1626 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1627 = load i32, i32* %1626, align 4
  %1628 = sub nsw i32 %1627, 1
  store i32 %1628, i32* %1626, align 4
  %1629 = trunc i32 %1625 to i8
  br label %1681

; <label>:1630:                                   ; preds = %.lr.ph400, %1678
  call void @unroll_loop(i32 107)
  %1631 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1632 = load %struct.bz_stream*, %struct.bz_stream** %1631, align 8
  %1633 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1632, i32 0, i32 1
  %1634 = load i32, i32* %1633, align 8
  %1635 = icmp eq i32 %1634, 0
  br i1 %1635, label %1636, label %1637

; <label>:1636:                                   ; preds = %1630
  br label %4378

; <label>:1637:                                   ; preds = %1630
  %1638 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1639 = load i32, i32* %1638, align 8
  %1640 = shl i32 %1639, 8
  %1641 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1642 = load %struct.bz_stream*, %struct.bz_stream** %1641, align 8
  %1643 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1642, i32 0, i32 0
  %1644 = load i8*, i8** %1643, align 8
  %1645 = load i8, i8* %1644, align 1
  %1646 = zext i8 %1645 to i32
  %1647 = or i32 %1640, %1646
  %1648 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1647, i32* %1648, align 8
  %1649 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1650 = load i32, i32* %1649, align 4
  %1651 = add nsw i32 %1650, 8
  store i32 %1651, i32* %1649, align 4
  %1652 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1653 = load %struct.bz_stream*, %struct.bz_stream** %1652, align 8
  %1654 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1653, i32 0, i32 0
  %1655 = load i8*, i8** %1654, align 8
  %1656 = getelementptr inbounds i8, i8* %1655, i32 1
  store i8* %1656, i8** %1654, align 8
  %1657 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1658 = load %struct.bz_stream*, %struct.bz_stream** %1657, align 8
  %1659 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1658, i32 0, i32 1
  %1660 = load i32, i32* %1659, align 8
  %1661 = add i32 %1660, -1
  store i32 %1661, i32* %1659, align 8
  %1662 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1663 = load %struct.bz_stream*, %struct.bz_stream** %1662, align 8
  %1664 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1663, i32 0, i32 2
  %1665 = load i32, i32* %1664, align 4
  %1666 = add i32 %1665, 1
  store i32 %1666, i32* %1664, align 4
  %1667 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1668 = load %struct.bz_stream*, %struct.bz_stream** %1667, align 8
  %1669 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1668, i32 0, i32 2
  %1670 = load i32, i32* %1669, align 4
  %1671 = icmp eq i32 %1670, 0
  br i1 %1671, label %1672, label %1678

; <label>:1672:                                   ; preds = %1637
  %1673 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1674 = load %struct.bz_stream*, %struct.bz_stream** %1673, align 8
  %1675 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1674, i32 0, i32 3
  %1676 = load i32, i32* %1675, align 8
  %1677 = add i32 %1676, 1
  store i32 %1677, i32* %1675, align 8
  br label %1678

; <label>:1678:                                   ; preds = %1672, %1637
  %1679 = load i32, i32* %1615, align 4
  %1680 = icmp sge i32 %1679, 1
  br i1 %1680, label %._crit_edge401, label %1630

; <label>:1681:                                   ; preds = %1618
  %1682 = zext i8 %1629 to i32
  %1683 = icmp eq i32 %1682, 1
  br i1 %1683, label %1684, label %1690

; <label>:1684:                                   ; preds = %1681
  %1685 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 28
  %1686 = mul nsw i32 %.5, 16
  %1687 = add nsw i32 %1686, %.215
  %1688 = sext i32 %1687 to i64
  %1689 = getelementptr inbounds [256 x i8], [256 x i8]* %1685, i64 0, i64 %1688
  store i8 1, i8* %1689, align 1
  br label %1690

; <label>:1690:                                   ; preds = %1684, %1681
  br label %1691

; <label>:1691:                                   ; preds = %1690
  %1692 = add nsw i32 %.215, 1
  br label %1610

; <label>:1693:                                   ; preds = %1610
  br label %1694

; <label>:1694:                                   ; preds = %1693, %1603
  %.316 = phi i32 [ %.114, %1693 ], [ %.013, %1603 ]
  %.6 = phi i32 [ %.4, %1693 ], [ %.3, %1603 ]
  br label %1695

; <label>:1695:                                   ; preds = %1694
  %1696 = add nsw i32 %.6, 1
  br label %1601

; <label>:1697:                                   ; preds = %1601
  call void @makeMaps_d(%struct.DState* %0)
  %1698 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %1699 = load i32, i32* %1698, align 8
  %1700 = icmp eq i32 %1699, 0
  br i1 %1700, label %1701, label %1702

; <label>:1701:                                   ; preds = %1697
  br label %4378

; <label>:1702:                                   ; preds = %1697
  %1703 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %1704 = load i32, i32* %1703, align 8
  %1705 = add nsw i32 %1704, 2
  br label %1706

; <label>:1706:                                   ; preds = %33, %1702
  %.061 = phi i32 [ %41, %33 ], [ %1705, %1702 ]
  %.417 = phi i32 [ %37, %33 ], [ %.013, %1702 ]
  %.7 = phi i32 [ %35, %33 ], [ %.3, %1702 ]
  %1707 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 30, i32* %1707, align 8
  %1708 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1709 = load i32, i32* %1708, align 4
  %1710 = icmp sge i32 %1709, 3
  br i1 %1710, label %1711, label %.lr.ph569

.lr.ph569:                                        ; preds = %1706
  br label %1722

._crit_edge570:                                   ; preds = %1770
  br label %1711

; <label>:1711:                                   ; preds = %._crit_edge570, %1706
  %1712 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1713 = load i32, i32* %1712, align 8
  %1714 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1715 = load i32, i32* %1714, align 4
  %1716 = sub nsw i32 %1715, 3
  %1717 = lshr i32 %1713, %1716
  %1718 = and i32 %1717, 7
  %1719 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1720 = load i32, i32* %1719, align 4
  %1721 = sub nsw i32 %1720, 3
  store i32 %1721, i32* %1719, align 4
  br label %1773

; <label>:1722:                                   ; preds = %.lr.ph569, %1770
  call void @unroll_loop(i32 108)
  %1723 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1724 = load %struct.bz_stream*, %struct.bz_stream** %1723, align 8
  %1725 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1724, i32 0, i32 1
  %1726 = load i32, i32* %1725, align 8
  %1727 = icmp eq i32 %1726, 0
  br i1 %1727, label %1728, label %1729

; <label>:1728:                                   ; preds = %1722
  br label %4378

; <label>:1729:                                   ; preds = %1722
  %1730 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1731 = load i32, i32* %1730, align 8
  %1732 = shl i32 %1731, 8
  %1733 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1734 = load %struct.bz_stream*, %struct.bz_stream** %1733, align 8
  %1735 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1734, i32 0, i32 0
  %1736 = load i8*, i8** %1735, align 8
  %1737 = load i8, i8* %1736, align 1
  %1738 = zext i8 %1737 to i32
  %1739 = or i32 %1732, %1738
  %1740 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1739, i32* %1740, align 8
  %1741 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1742 = load i32, i32* %1741, align 4
  %1743 = add nsw i32 %1742, 8
  store i32 %1743, i32* %1741, align 4
  %1744 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1745 = load %struct.bz_stream*, %struct.bz_stream** %1744, align 8
  %1746 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1745, i32 0, i32 0
  %1747 = load i8*, i8** %1746, align 8
  %1748 = getelementptr inbounds i8, i8* %1747, i32 1
  store i8* %1748, i8** %1746, align 8
  %1749 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1750 = load %struct.bz_stream*, %struct.bz_stream** %1749, align 8
  %1751 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1750, i32 0, i32 1
  %1752 = load i32, i32* %1751, align 8
  %1753 = add i32 %1752, -1
  store i32 %1753, i32* %1751, align 8
  %1754 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1755 = load %struct.bz_stream*, %struct.bz_stream** %1754, align 8
  %1756 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1755, i32 0, i32 2
  %1757 = load i32, i32* %1756, align 4
  %1758 = add i32 %1757, 1
  store i32 %1758, i32* %1756, align 4
  %1759 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1760 = load %struct.bz_stream*, %struct.bz_stream** %1759, align 8
  %1761 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1760, i32 0, i32 2
  %1762 = load i32, i32* %1761, align 4
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1764, label %1770

; <label>:1764:                                   ; preds = %1729
  %1765 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1766 = load %struct.bz_stream*, %struct.bz_stream** %1765, align 8
  %1767 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1766, i32 0, i32 3
  %1768 = load i32, i32* %1767, align 8
  %1769 = add i32 %1768, 1
  store i32 %1769, i32* %1767, align 8
  br label %1770

; <label>:1770:                                   ; preds = %1764, %1729
  %1771 = load i32, i32* %1708, align 4
  %1772 = icmp sge i32 %1771, 3
  br i1 %1772, label %._crit_edge570, label %1722

; <label>:1773:                                   ; preds = %1711
  %1774 = icmp slt i32 %1718, 2
  br i1 %1774, label %1777, label %1775

; <label>:1775:                                   ; preds = %1773
  %1776 = icmp sgt i32 %1718, 6
  br i1 %1776, label %1777, label %1778

; <label>:1777:                                   ; preds = %1775, %1773
  br label %4378

; <label>:1778:                                   ; preds = %1775
  br label %1779

; <label>:1779:                                   ; preds = %33, %1778
  %.084 = phi i32 [ %43, %33 ], [ %1718, %1778 ]
  %.162 = phi i32 [ %41, %33 ], [ %.061, %1778 ]
  %.518 = phi i32 [ %37, %33 ], [ %.417, %1778 ]
  %.8 = phi i32 [ %35, %33 ], [ %.7, %1778 ]
  %1780 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 31, i32* %1780, align 8
  %1781 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1782 = load i32, i32* %1781, align 4
  %1783 = icmp sge i32 %1782, 15
  br i1 %1783, label %1784, label %.lr.ph566

.lr.ph566:                                        ; preds = %1779
  br label %1795

._crit_edge567:                                   ; preds = %1843
  br label %1784

; <label>:1784:                                   ; preds = %._crit_edge567, %1779
  %1785 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1786 = load i32, i32* %1785, align 8
  %1787 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1788 = load i32, i32* %1787, align 4
  %1789 = sub nsw i32 %1788, 15
  %1790 = lshr i32 %1786, %1789
  %1791 = and i32 %1790, 32767
  %1792 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1793 = load i32, i32* %1792, align 4
  %1794 = sub nsw i32 %1793, 15
  store i32 %1794, i32* %1792, align 4
  br label %1846

; <label>:1795:                                   ; preds = %.lr.ph566, %1843
  call void @unroll_loop(i32 109)
  %1796 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1797 = load %struct.bz_stream*, %struct.bz_stream** %1796, align 8
  %1798 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1797, i32 0, i32 1
  %1799 = load i32, i32* %1798, align 8
  %1800 = icmp eq i32 %1799, 0
  br i1 %1800, label %1801, label %1802

; <label>:1801:                                   ; preds = %1795
  br label %4378

; <label>:1802:                                   ; preds = %1795
  %1803 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1804 = load i32, i32* %1803, align 8
  %1805 = shl i32 %1804, 8
  %1806 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1807 = load %struct.bz_stream*, %struct.bz_stream** %1806, align 8
  %1808 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1807, i32 0, i32 0
  %1809 = load i8*, i8** %1808, align 8
  %1810 = load i8, i8* %1809, align 1
  %1811 = zext i8 %1810 to i32
  %1812 = or i32 %1805, %1811
  %1813 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1812, i32* %1813, align 8
  %1814 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1815 = load i32, i32* %1814, align 4
  %1816 = add nsw i32 %1815, 8
  store i32 %1816, i32* %1814, align 4
  %1817 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1818 = load %struct.bz_stream*, %struct.bz_stream** %1817, align 8
  %1819 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1818, i32 0, i32 0
  %1820 = load i8*, i8** %1819, align 8
  %1821 = getelementptr inbounds i8, i8* %1820, i32 1
  store i8* %1821, i8** %1819, align 8
  %1822 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1823 = load %struct.bz_stream*, %struct.bz_stream** %1822, align 8
  %1824 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1823, i32 0, i32 1
  %1825 = load i32, i32* %1824, align 8
  %1826 = add i32 %1825, -1
  store i32 %1826, i32* %1824, align 8
  %1827 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1828 = load %struct.bz_stream*, %struct.bz_stream** %1827, align 8
  %1829 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1828, i32 0, i32 2
  %1830 = load i32, i32* %1829, align 4
  %1831 = add i32 %1830, 1
  store i32 %1831, i32* %1829, align 4
  %1832 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1833 = load %struct.bz_stream*, %struct.bz_stream** %1832, align 8
  %1834 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1833, i32 0, i32 2
  %1835 = load i32, i32* %1834, align 4
  %1836 = icmp eq i32 %1835, 0
  br i1 %1836, label %1837, label %1843

; <label>:1837:                                   ; preds = %1802
  %1838 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1839 = load %struct.bz_stream*, %struct.bz_stream** %1838, align 8
  %1840 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1839, i32 0, i32 3
  %1841 = load i32, i32* %1840, align 8
  %1842 = add i32 %1841, 1
  store i32 %1842, i32* %1840, align 8
  br label %1843

; <label>:1843:                                   ; preds = %1837, %1802
  %1844 = load i32, i32* %1781, align 4
  %1845 = icmp sge i32 %1844, 15
  br i1 %1845, label %._crit_edge567, label %1795

; <label>:1846:                                   ; preds = %1784
  %1847 = icmp slt i32 %1791, 1
  br i1 %1847, label %1848, label %1849

; <label>:1848:                                   ; preds = %1846
  br label %4378

; <label>:1849:                                   ; preds = %1846
  br label %1850

; <label>:1850:                                   ; preds = %1936, %1849
  %.0106 = phi i32 [ %.2108, %1936 ], [ %1791, %1849 ]
  %.185 = phi i32 [ %.387, %1936 ], [ %.084, %1849 ]
  %.263 = phi i32 [ %.465, %1936 ], [ %.162, %1849 ]
  %.619 = phi i32 [ %.821, %1936 ], [ %.518, %1849 ]
  %.9 = phi i32 [ %1937, %1936 ], [ 0, %1849 ]
  %1851 = icmp slt i32 %.9, %.0106
  br i1 %1851, label %1852, label %1938

; <label>:1852:                                   ; preds = %1850
  br label %1853

; <label>:1853:                                   ; preds = %1852, %1930
  %.1107 = phi i32 [ %.0106, %1852 ], [ %.2108, %1930 ]
  %.286 = phi i32 [ %.185, %1852 ], [ %.387, %1930 ]
  %.364 = phi i32 [ %.263, %1852 ], [ %.465, %1930 ]
  %.720 = phi i32 [ 0, %1852 ], [ %1927, %1930 ]
  %.10 = phi i32 [ %.9, %1852 ], [ %.11, %1930 ]
  br label %1854

; <label>:1854:                                   ; preds = %33, %1853
  %.2108 = phi i32 [ %45, %33 ], [ %.1107, %1853 ]
  %.387 = phi i32 [ %43, %33 ], [ %.286, %1853 ]
  %.465 = phi i32 [ %41, %33 ], [ %.364, %1853 ]
  %.821 = phi i32 [ %37, %33 ], [ %.720, %1853 ]
  %.11 = phi i32 [ %35, %33 ], [ %.10, %1853 ]
  %1855 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 32, i32* %1855, align 8
  %1856 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1857 = load i32, i32* %1856, align 4
  %1858 = icmp sge i32 %1857, 1
  br i1 %1858, label %1859, label %.lr.ph403

.lr.ph403:                                        ; preds = %1854
  br label %1871

._crit_edge404:                                   ; preds = %1919
  br label %1859

; <label>:1859:                                   ; preds = %._crit_edge404, %1854
  %1860 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1861 = load i32, i32* %1860, align 8
  %1862 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1863 = load i32, i32* %1862, align 4
  %1864 = sub nsw i32 %1863, 1
  %1865 = lshr i32 %1861, %1864
  %1866 = and i32 %1865, 1
  %1867 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1868 = load i32, i32* %1867, align 4
  %1869 = sub nsw i32 %1868, 1
  store i32 %1869, i32* %1867, align 4
  %1870 = trunc i32 %1866 to i8
  br label %1922

; <label>:1871:                                   ; preds = %.lr.ph403, %1919
  call void @unroll_loop(i32 110)
  %1872 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1873 = load %struct.bz_stream*, %struct.bz_stream** %1872, align 8
  %1874 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1873, i32 0, i32 1
  %1875 = load i32, i32* %1874, align 8
  %1876 = icmp eq i32 %1875, 0
  br i1 %1876, label %1877, label %1878

; <label>:1877:                                   ; preds = %1871
  br label %4378

; <label>:1878:                                   ; preds = %1871
  %1879 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1880 = load i32, i32* %1879, align 8
  %1881 = shl i32 %1880, 8
  %1882 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1883 = load %struct.bz_stream*, %struct.bz_stream** %1882, align 8
  %1884 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1883, i32 0, i32 0
  %1885 = load i8*, i8** %1884, align 8
  %1886 = load i8, i8* %1885, align 1
  %1887 = zext i8 %1886 to i32
  %1888 = or i32 %1881, %1887
  %1889 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %1888, i32* %1889, align 8
  %1890 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1891 = load i32, i32* %1890, align 4
  %1892 = add nsw i32 %1891, 8
  store i32 %1892, i32* %1890, align 4
  %1893 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1894 = load %struct.bz_stream*, %struct.bz_stream** %1893, align 8
  %1895 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1894, i32 0, i32 0
  %1896 = load i8*, i8** %1895, align 8
  %1897 = getelementptr inbounds i8, i8* %1896, i32 1
  store i8* %1897, i8** %1895, align 8
  %1898 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1899 = load %struct.bz_stream*, %struct.bz_stream** %1898, align 8
  %1900 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1899, i32 0, i32 1
  %1901 = load i32, i32* %1900, align 8
  %1902 = add i32 %1901, -1
  store i32 %1902, i32* %1900, align 8
  %1903 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1904 = load %struct.bz_stream*, %struct.bz_stream** %1903, align 8
  %1905 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1904, i32 0, i32 2
  %1906 = load i32, i32* %1905, align 4
  %1907 = add i32 %1906, 1
  store i32 %1907, i32* %1905, align 4
  %1908 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1909 = load %struct.bz_stream*, %struct.bz_stream** %1908, align 8
  %1910 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1909, i32 0, i32 2
  %1911 = load i32, i32* %1910, align 4
  %1912 = icmp eq i32 %1911, 0
  br i1 %1912, label %1913, label %1919

; <label>:1913:                                   ; preds = %1878
  %1914 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1915 = load %struct.bz_stream*, %struct.bz_stream** %1914, align 8
  %1916 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1915, i32 0, i32 3
  %1917 = load i32, i32* %1916, align 8
  %1918 = add i32 %1917, 1
  store i32 %1918, i32* %1916, align 8
  br label %1919

; <label>:1919:                                   ; preds = %1913, %1878
  %1920 = load i32, i32* %1856, align 4
  %1921 = icmp sge i32 %1920, 1
  br i1 %1921, label %._crit_edge404, label %1871

; <label>:1922:                                   ; preds = %1859
  %1923 = zext i8 %1870 to i32
  %1924 = icmp eq i32 %1923, 0
  br i1 %1924, label %1925, label %1926

; <label>:1925:                                   ; preds = %1922
  br label %1931

; <label>:1926:                                   ; preds = %1922
  %1927 = add nsw i32 %.821, 1
  %1928 = icmp sge i32 %1927, %.387
  br i1 %1928, label %1929, label %1930

; <label>:1929:                                   ; preds = %1926
  br label %4378

; <label>:1930:                                   ; preds = %1926
  br label %1853

; <label>:1931:                                   ; preds = %1925
  %1932 = trunc i32 %.821 to i8
  %1933 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 34
  %1934 = sext i32 %.11 to i64
  %1935 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1933, i64 0, i64 %1934
  store i8 %1932, i8* %1935, align 1
  br label %1936

; <label>:1936:                                   ; preds = %1931
  %1937 = add nsw i32 %.11, 1
  br label %1850

; <label>:1938:                                   ; preds = %1850
  %1939 = icmp slt i32 0, %.185
  br i1 %1939, label %.lr.ph563, label %1947

.lr.ph563:                                        ; preds = %1938
  br label %1940

; <label>:1940:                                   ; preds = %.lr.ph563, %1943
  %.0365561 = phi i8 [ 0, %.lr.ph563 ], [ %1944, %1943 ]
  call void @unroll_loop(i32 111)
  %1941 = zext i8 %.0365561 to i64
  %1942 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %1941
  store i8 %.0365561, i8* %1942, align 1
  br label %1943

; <label>:1943:                                   ; preds = %1940
  %1944 = add i8 %.0365561, 1
  %1945 = zext i8 %1944 to i32
  %1946 = icmp slt i32 %1945, %.185
  br i1 %1946, label %1940, label %._crit_edge564

._crit_edge564:                                   ; preds = %1943
  br label %1947

; <label>:1947:                                   ; preds = %._crit_edge564, %1938
  %1948 = icmp slt i32 0, %.0106
  br i1 %1948, label %.lr.ph554, label %1978

.lr.ph554:                                        ; preds = %1947
  %1949 = add i32 %.0106, -1
  %1950 = zext i32 %1949 to i64
  br label %1951

; <label>:1951:                                   ; preds = %.lr.ph554, %1975
  %indvars.iv557 = phi i64 [ 0, %.lr.ph554 ], [ %indvars.iv.next558, %1975 ]
  call void @unroll_loop(i32 112)
  %1952 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 34
  %1953 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1952, i64 0, i64 %indvars.iv557
  %1954 = load i8, i8* %1953, align 1
  %1955 = zext i8 %1954 to i64
  %1956 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %1955
  %1957 = load i8, i8* %1956, align 1
  %1958 = zext i8 %1954 to i32
  %1959 = icmp sgt i32 %1958, 0
  br i1 %1959, label %.lr.ph550, label %1971

.lr.ph550:                                        ; preds = %1951
  br label %1960

; <label>:1960:                                   ; preds = %.lr.ph550, %1960
  %.1366548 = phi i8 [ %1954, %.lr.ph550 ], [ %1968, %1960 ]
  call void @unroll_loop(i32 113)
  %1961 = zext i8 %.1366548 to i32
  %1962 = sub nsw i32 %1961, 1
  %1963 = sext i32 %1962 to i64
  %1964 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %1963
  %1965 = load i8, i8* %1964, align 1
  %1966 = zext i8 %.1366548 to i64
  %1967 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %1966
  store i8 %1965, i8* %1967, align 1
  %1968 = add i8 %.1366548, -1
  %1969 = zext i8 %1968 to i32
  %1970 = icmp sgt i32 %1969, 0
  br i1 %1970, label %1960, label %._crit_edge551

._crit_edge551:                                   ; preds = %1960
  br label %1971

; <label>:1971:                                   ; preds = %._crit_edge551, %1951
  %1972 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 0
  store i8 %1957, i8* %1972, align 1
  %1973 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 33
  %1974 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1973, i64 0, i64 %indvars.iv557
  store i8 %1957, i8* %1974, align 1
  br label %1975

; <label>:1975:                                   ; preds = %1971
  %indvars.iv.next558 = add nuw nsw i64 %indvars.iv557, 1
  %wide.trip.count559 = zext i32 %.0106 to i64
  %exitcond560 = icmp ne i64 %indvars.iv.next558, %wide.trip.count559
  br i1 %exitcond560, label %1951, label %._crit_edge555

._crit_edge555:                                   ; preds = %1975
  %1976 = add i64 %1950, 1
  %1977 = trunc i64 %1976 to i32
  br label %1978

; <label>:1978:                                   ; preds = %._crit_edge555, %1947
  %.12.lcssa = phi i32 [ %1977, %._crit_edge555 ], [ 0, %1947 ]
  br label %1979

; <label>:1979:                                   ; preds = %2218, %1978
  %.0228 = phi i32 [ %.2230, %2218 ], [ %63, %1978 ]
  %.3109 = phi i32 [ %.5111, %2218 ], [ %.0106, %1978 ]
  %.488 = phi i32 [ %.690, %2218 ], [ %.185, %1978 ]
  %.566 = phi i32 [ %.768, %2218 ], [ %.263, %1978 ]
  %.042 = phi i32 [ %2219, %2218 ], [ 0, %1978 ]
  %.922 = phi i32 [ %.1124, %2218 ], [ %.619, %1978 ]
  %.13 = phi i32 [ %.1511, %2218 ], [ %.12.lcssa, %1978 ]
  %1980 = icmp slt i32 %.042, %.488
  br i1 %1980, label %1981, label %2220

; <label>:1981:                                   ; preds = %1979
  br label %1982

; <label>:1982:                                   ; preds = %33, %1981
  %.1229 = phi i32 [ %.0228, %1981 ], [ %63, %33 ]
  %.4110 = phi i32 [ %.3109, %1981 ], [ %45, %33 ]
  %.589 = phi i32 [ %.488, %1981 ], [ %43, %33 ]
  %.667 = phi i32 [ %.566, %1981 ], [ %41, %33 ]
  %.143 = phi i32 [ %.042, %1981 ], [ %39, %33 ]
  %.1023 = phi i32 [ %.922, %1981 ], [ %37, %33 ]
  %.14 = phi i32 [ %.13, %1981 ], [ %35, %33 ]
  %1983 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 33, i32* %1983, align 8
  %1984 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1985 = load i32, i32* %1984, align 4
  %1986 = icmp sge i32 %1985, 5
  br i1 %1986, label %1987, label %.lr.ph412

.lr.ph412:                                        ; preds = %1982
  br label %1998

._crit_edge413:                                   ; preds = %2046
  br label %1987

; <label>:1987:                                   ; preds = %._crit_edge413, %1982
  %1988 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1989 = load i32, i32* %1988, align 8
  %1990 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1991 = load i32, i32* %1990, align 4
  %1992 = sub nsw i32 %1991, 5
  %1993 = lshr i32 %1989, %1992
  %1994 = and i32 %1993, 31
  %1995 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1996 = load i32, i32* %1995, align 4
  %1997 = sub nsw i32 %1996, 5
  store i32 %1997, i32* %1995, align 4
  br label %2049

; <label>:1998:                                   ; preds = %.lr.ph412, %2046
  call void @unroll_loop(i32 114)
  %1999 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2000 = load %struct.bz_stream*, %struct.bz_stream** %1999, align 8
  %2001 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2000, i32 0, i32 1
  %2002 = load i32, i32* %2001, align 8
  %2003 = icmp eq i32 %2002, 0
  br i1 %2003, label %2004, label %2005

; <label>:2004:                                   ; preds = %1998
  br label %4378

; <label>:2005:                                   ; preds = %1998
  %2006 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2007 = load i32, i32* %2006, align 8
  %2008 = shl i32 %2007, 8
  %2009 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2010 = load %struct.bz_stream*, %struct.bz_stream** %2009, align 8
  %2011 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2010, i32 0, i32 0
  %2012 = load i8*, i8** %2011, align 8
  %2013 = load i8, i8* %2012, align 1
  %2014 = zext i8 %2013 to i32
  %2015 = or i32 %2008, %2014
  %2016 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %2015, i32* %2016, align 8
  %2017 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2018 = load i32, i32* %2017, align 4
  %2019 = add nsw i32 %2018, 8
  store i32 %2019, i32* %2017, align 4
  %2020 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2021 = load %struct.bz_stream*, %struct.bz_stream** %2020, align 8
  %2022 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2021, i32 0, i32 0
  %2023 = load i8*, i8** %2022, align 8
  %2024 = getelementptr inbounds i8, i8* %2023, i32 1
  store i8* %2024, i8** %2022, align 8
  %2025 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2026 = load %struct.bz_stream*, %struct.bz_stream** %2025, align 8
  %2027 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2026, i32 0, i32 1
  %2028 = load i32, i32* %2027, align 8
  %2029 = add i32 %2028, -1
  store i32 %2029, i32* %2027, align 8
  %2030 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2031 = load %struct.bz_stream*, %struct.bz_stream** %2030, align 8
  %2032 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2031, i32 0, i32 2
  %2033 = load i32, i32* %2032, align 4
  %2034 = add i32 %2033, 1
  store i32 %2034, i32* %2032, align 4
  %2035 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2036 = load %struct.bz_stream*, %struct.bz_stream** %2035, align 8
  %2037 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2036, i32 0, i32 2
  %2038 = load i32, i32* %2037, align 4
  %2039 = icmp eq i32 %2038, 0
  br i1 %2039, label %2040, label %2046

; <label>:2040:                                   ; preds = %2005
  %2041 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2042 = load %struct.bz_stream*, %struct.bz_stream** %2041, align 8
  %2043 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2042, i32 0, i32 3
  %2044 = load i32, i32* %2043, align 8
  %2045 = add i32 %2044, 1
  store i32 %2045, i32* %2043, align 8
  br label %2046

; <label>:2046:                                   ; preds = %2040, %2005
  %2047 = load i32, i32* %1984, align 4
  %2048 = icmp sge i32 %2047, 5
  br i1 %2048, label %._crit_edge413, label %1998

; <label>:2049:                                   ; preds = %1987
  br label %2050

; <label>:2050:                                   ; preds = %2215, %2049
  %.2230 = phi i32 [ %.4232, %2215 ], [ %1994, %2049 ]
  %.5111 = phi i32 [ %.7113, %2215 ], [ %.4110, %2049 ]
  %.690 = phi i32 [ %.892, %2215 ], [ %.589, %2049 ]
  %.768 = phi i32 [ %.970, %2215 ], [ %.667, %2049 ]
  %.244 = phi i32 [ %.446, %2215 ], [ %.143, %2049 ]
  %.1124 = phi i32 [ %.1326, %2215 ], [ %.1023, %2049 ]
  %.1511 = phi i32 [ %2216, %2215 ], [ 0, %2049 ]
  %2051 = icmp slt i32 %.1511, %.768
  br i1 %2051, label %2052, label %2217

; <label>:2052:                                   ; preds = %2050
  br label %2053

; <label>:2053:                                   ; preds = %2052, %2207
  %.3231 = phi i32 [ %.6234, %2207 ], [ %.2230, %2052 ]
  %.6112 = phi i32 [ %.8114, %2207 ], [ %.5111, %2052 ]
  %.791 = phi i32 [ %.993, %2207 ], [ %.690, %2052 ]
  %.869 = phi i32 [ %.1071, %2207 ], [ %.768, %2052 ]
  %.345 = phi i32 [ %.547, %2207 ], [ %.244, %2052 ]
  %.1225 = phi i32 [ %.1427, %2207 ], [ %.1124, %2052 ]
  %.16 = phi i32 [ %.18, %2207 ], [ %.1511, %2052 ]
  %2054 = icmp slt i32 %.3231, 1
  br i1 %2054, label %2057, label %2055

; <label>:2055:                                   ; preds = %2053
  %2056 = icmp sgt i32 %.3231, 20
  br i1 %2056, label %2057, label %2058

; <label>:2057:                                   ; preds = %2055, %2053
  br label %4378

; <label>:2058:                                   ; preds = %2055
  br label %2059

; <label>:2059:                                   ; preds = %33, %2058
  %.4232 = phi i32 [ %.3231, %2058 ], [ %63, %33 ]
  %.7113 = phi i32 [ %.6112, %2058 ], [ %45, %33 ]
  %.892 = phi i32 [ %.791, %2058 ], [ %43, %33 ]
  %.970 = phi i32 [ %.869, %2058 ], [ %41, %33 ]
  %.446 = phi i32 [ %.345, %2058 ], [ %39, %33 ]
  %.1326 = phi i32 [ %.1225, %2058 ], [ %37, %33 ]
  %.1712 = phi i32 [ %.16, %2058 ], [ %35, %33 ]
  %2060 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 34, i32* %2060, align 8
  %2061 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2062 = load i32, i32* %2061, align 4
  %2063 = icmp sge i32 %2062, 1
  br i1 %2063, label %2064, label %.lr.ph409

.lr.ph409:                                        ; preds = %2059
  br label %2076

._crit_edge410:                                   ; preds = %2124
  br label %2064

; <label>:2064:                                   ; preds = %._crit_edge410, %2059
  %2065 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2066 = load i32, i32* %2065, align 8
  %2067 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2068 = load i32, i32* %2067, align 4
  %2069 = sub nsw i32 %2068, 1
  %2070 = lshr i32 %2066, %2069
  %2071 = and i32 %2070, 1
  %2072 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2073 = load i32, i32* %2072, align 4
  %2074 = sub nsw i32 %2073, 1
  store i32 %2074, i32* %2072, align 4
  %2075 = trunc i32 %2071 to i8
  br label %2127

; <label>:2076:                                   ; preds = %.lr.ph409, %2124
  call void @unroll_loop(i32 115)
  %2077 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2078 = load %struct.bz_stream*, %struct.bz_stream** %2077, align 8
  %2079 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2078, i32 0, i32 1
  %2080 = load i32, i32* %2079, align 8
  %2081 = icmp eq i32 %2080, 0
  br i1 %2081, label %2082, label %2083

; <label>:2082:                                   ; preds = %2076
  br label %4378

; <label>:2083:                                   ; preds = %2076
  %2084 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2085 = load i32, i32* %2084, align 8
  %2086 = shl i32 %2085, 8
  %2087 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2088 = load %struct.bz_stream*, %struct.bz_stream** %2087, align 8
  %2089 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2088, i32 0, i32 0
  %2090 = load i8*, i8** %2089, align 8
  %2091 = load i8, i8* %2090, align 1
  %2092 = zext i8 %2091 to i32
  %2093 = or i32 %2086, %2092
  %2094 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %2093, i32* %2094, align 8
  %2095 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2096 = load i32, i32* %2095, align 4
  %2097 = add nsw i32 %2096, 8
  store i32 %2097, i32* %2095, align 4
  %2098 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2099 = load %struct.bz_stream*, %struct.bz_stream** %2098, align 8
  %2100 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2099, i32 0, i32 0
  %2101 = load i8*, i8** %2100, align 8
  %2102 = getelementptr inbounds i8, i8* %2101, i32 1
  store i8* %2102, i8** %2100, align 8
  %2103 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2104 = load %struct.bz_stream*, %struct.bz_stream** %2103, align 8
  %2105 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2104, i32 0, i32 1
  %2106 = load i32, i32* %2105, align 8
  %2107 = add i32 %2106, -1
  store i32 %2107, i32* %2105, align 8
  %2108 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2109 = load %struct.bz_stream*, %struct.bz_stream** %2108, align 8
  %2110 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2109, i32 0, i32 2
  %2111 = load i32, i32* %2110, align 4
  %2112 = add i32 %2111, 1
  store i32 %2112, i32* %2110, align 4
  %2113 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2114 = load %struct.bz_stream*, %struct.bz_stream** %2113, align 8
  %2115 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2114, i32 0, i32 2
  %2116 = load i32, i32* %2115, align 4
  %2117 = icmp eq i32 %2116, 0
  br i1 %2117, label %2118, label %2124

; <label>:2118:                                   ; preds = %2083
  %2119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2120 = load %struct.bz_stream*, %struct.bz_stream** %2119, align 8
  %2121 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2120, i32 0, i32 3
  %2122 = load i32, i32* %2121, align 8
  %2123 = add i32 %2122, 1
  store i32 %2123, i32* %2121, align 8
  br label %2124

; <label>:2124:                                   ; preds = %2118, %2083
  %2125 = load i32, i32* %2061, align 4
  %2126 = icmp sge i32 %2125, 1
  br i1 %2126, label %._crit_edge410, label %2076

; <label>:2127:                                   ; preds = %2064
  %2128 = zext i8 %2075 to i32
  %2129 = icmp eq i32 %2128, 0
  br i1 %2129, label %2130, label %2131

; <label>:2130:                                   ; preds = %2127
  br label %2208

; <label>:2131:                                   ; preds = %2127
  br label %2132

; <label>:2132:                                   ; preds = %33, %2131
  %.5233 = phi i32 [ %63, %33 ], [ %.4232, %2131 ]
  %.8114 = phi i32 [ %45, %33 ], [ %.7113, %2131 ]
  %.993 = phi i32 [ %43, %33 ], [ %.892, %2131 ]
  %.1071 = phi i32 [ %41, %33 ], [ %.970, %2131 ]
  %.547 = phi i32 [ %39, %33 ], [ %.446, %2131 ]
  %.1427 = phi i32 [ %37, %33 ], [ %.1326, %2131 ]
  %.18 = phi i32 [ %35, %33 ], [ %.1712, %2131 ]
  %2133 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 35, i32* %2133, align 8
  %2134 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2135 = load i32, i32* %2134, align 4
  %2136 = icmp sge i32 %2135, 1
  br i1 %2136, label %2137, label %.lr.ph406

.lr.ph406:                                        ; preds = %2132
  br label %2149

._crit_edge407:                                   ; preds = %2197
  br label %2137

; <label>:2137:                                   ; preds = %._crit_edge407, %2132
  %2138 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2139 = load i32, i32* %2138, align 8
  %2140 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2141 = load i32, i32* %2140, align 4
  %2142 = sub nsw i32 %2141, 1
  %2143 = lshr i32 %2139, %2142
  %2144 = and i32 %2143, 1
  %2145 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2146 = load i32, i32* %2145, align 4
  %2147 = sub nsw i32 %2146, 1
  store i32 %2147, i32* %2145, align 4
  %2148 = trunc i32 %2144 to i8
  br label %2200

; <label>:2149:                                   ; preds = %.lr.ph406, %2197
  call void @unroll_loop(i32 116)
  %2150 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2151 = load %struct.bz_stream*, %struct.bz_stream** %2150, align 8
  %2152 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2151, i32 0, i32 1
  %2153 = load i32, i32* %2152, align 8
  %2154 = icmp eq i32 %2153, 0
  br i1 %2154, label %2155, label %2156

; <label>:2155:                                   ; preds = %2149
  br label %4378

; <label>:2156:                                   ; preds = %2149
  %2157 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2158 = load i32, i32* %2157, align 8
  %2159 = shl i32 %2158, 8
  %2160 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2161 = load %struct.bz_stream*, %struct.bz_stream** %2160, align 8
  %2162 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2161, i32 0, i32 0
  %2163 = load i8*, i8** %2162, align 8
  %2164 = load i8, i8* %2163, align 1
  %2165 = zext i8 %2164 to i32
  %2166 = or i32 %2159, %2165
  %2167 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %2166, i32* %2167, align 8
  %2168 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2169 = load i32, i32* %2168, align 4
  %2170 = add nsw i32 %2169, 8
  store i32 %2170, i32* %2168, align 4
  %2171 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2172 = load %struct.bz_stream*, %struct.bz_stream** %2171, align 8
  %2173 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2172, i32 0, i32 0
  %2174 = load i8*, i8** %2173, align 8
  %2175 = getelementptr inbounds i8, i8* %2174, i32 1
  store i8* %2175, i8** %2173, align 8
  %2176 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2177 = load %struct.bz_stream*, %struct.bz_stream** %2176, align 8
  %2178 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2177, i32 0, i32 1
  %2179 = load i32, i32* %2178, align 8
  %2180 = add i32 %2179, -1
  store i32 %2180, i32* %2178, align 8
  %2181 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2182 = load %struct.bz_stream*, %struct.bz_stream** %2181, align 8
  %2183 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2182, i32 0, i32 2
  %2184 = load i32, i32* %2183, align 4
  %2185 = add i32 %2184, 1
  store i32 %2185, i32* %2183, align 4
  %2186 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2187 = load %struct.bz_stream*, %struct.bz_stream** %2186, align 8
  %2188 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2187, i32 0, i32 2
  %2189 = load i32, i32* %2188, align 4
  %2190 = icmp eq i32 %2189, 0
  br i1 %2190, label %2191, label %2197

; <label>:2191:                                   ; preds = %2156
  %2192 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2193 = load %struct.bz_stream*, %struct.bz_stream** %2192, align 8
  %2194 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2193, i32 0, i32 3
  %2195 = load i32, i32* %2194, align 8
  %2196 = add i32 %2195, 1
  store i32 %2196, i32* %2194, align 8
  br label %2197

; <label>:2197:                                   ; preds = %2191, %2156
  %2198 = load i32, i32* %2134, align 4
  %2199 = icmp sge i32 %2198, 1
  br i1 %2199, label %._crit_edge407, label %2149

; <label>:2200:                                   ; preds = %2137
  %2201 = zext i8 %2148 to i32
  %2202 = icmp eq i32 %2201, 0
  br i1 %2202, label %2203, label %2205

; <label>:2203:                                   ; preds = %2200
  %2204 = add nsw i32 %.5233, 1
  br label %2207

; <label>:2205:                                   ; preds = %2200
  %2206 = add nsw i32 %.5233, -1
  br label %2207

; <label>:2207:                                   ; preds = %2205, %2203
  %.6234 = phi i32 [ %2204, %2203 ], [ %2206, %2205 ]
  br label %2053

; <label>:2208:                                   ; preds = %2130
  %2209 = trunc i32 %.4232 to i8
  %2210 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 35
  %2211 = sext i32 %.446 to i64
  %2212 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2210, i64 0, i64 %2211
  %2213 = sext i32 %.1712 to i64
  %2214 = getelementptr inbounds [258 x i8], [258 x i8]* %2212, i64 0, i64 %2213
  store i8 %2209, i8* %2214, align 1
  br label %2215

; <label>:2215:                                   ; preds = %2208
  %2216 = add nsw i32 %.1712, 1
  br label %2050

; <label>:2217:                                   ; preds = %2050
  br label %2218

; <label>:2218:                                   ; preds = %2217
  %2219 = add nsw i32 %.244, 1
  br label %1979

; <label>:2220:                                   ; preds = %1979
  %2221 = icmp slt i32 0, %.488
  br i1 %2221, label %.lr.ph541, label %2272

.lr.ph541:                                        ; preds = %2220
  %2222 = add i32 %.488, -1
  %2223 = zext i32 %2222 to i64
  br label %2224

; <label>:2224:                                   ; preds = %.lr.ph541, %2269
  %indvars.iv544 = phi i64 [ 0, %.lr.ph541 ], [ %indvars.iv.next545, %2269 ]
  call void @unroll_loop(i32 117)
  %2225 = icmp slt i32 0, %.566
  br i1 %2225, label %.lr.ph531, label %2254

.lr.ph531:                                        ; preds = %2224
  br label %2226

; <label>:2226:                                   ; preds = %.lr.ph531, %2253
  %indvars.iv535 = phi i64 [ 0, %.lr.ph531 ], [ %indvars.iv.next536, %2253 ]
  %.04529 = phi i32 [ 32, %.lr.ph531 ], [ %.15, %2253 ]
  %.06528 = phi i32 [ 0, %.lr.ph531 ], [ %.17, %2253 ]
  call void @unroll_loop(i32 118)
  %2227 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 35
  %2228 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2227, i64 0, i64 %indvars.iv544
  %2229 = getelementptr inbounds [258 x i8], [258 x i8]* %2228, i64 0, i64 %indvars.iv535
  %2230 = load i8, i8* %2229, align 1
  %2231 = zext i8 %2230 to i32
  %2232 = icmp sgt i32 %2231, %.06528
  br i1 %2232, label %2233, label %2239

; <label>:2233:                                   ; preds = %2226
  %2234 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 35
  %2235 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2234, i64 0, i64 %indvars.iv544
  %2236 = getelementptr inbounds [258 x i8], [258 x i8]* %2235, i64 0, i64 %indvars.iv535
  %2237 = load i8, i8* %2236, align 1
  %2238 = zext i8 %2237 to i32
  br label %2239

; <label>:2239:                                   ; preds = %2233, %2226
  %.17 = phi i32 [ %2238, %2233 ], [ %.06528, %2226 ]
  %2240 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 35
  %2241 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2240, i64 0, i64 %indvars.iv544
  %2242 = getelementptr inbounds [258 x i8], [258 x i8]* %2241, i64 0, i64 %indvars.iv535
  %2243 = load i8, i8* %2242, align 1
  %2244 = zext i8 %2243 to i32
  %2245 = icmp slt i32 %2244, %.04529
  br i1 %2245, label %2246, label %2252

; <label>:2246:                                   ; preds = %2239
  %2247 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 35
  %2248 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2247, i64 0, i64 %indvars.iv544
  %2249 = getelementptr inbounds [258 x i8], [258 x i8]* %2248, i64 0, i64 %indvars.iv535
  %2250 = load i8, i8* %2249, align 1
  %2251 = zext i8 %2250 to i32
  br label %2252

; <label>:2252:                                   ; preds = %2246, %2239
  %.15 = phi i32 [ %2251, %2246 ], [ %.04529, %2239 ]
  br label %2253

; <label>:2253:                                   ; preds = %2252
  %indvars.iv.next536 = add nuw nsw i64 %indvars.iv535, 1
  %wide.trip.count537 = zext i32 %.566 to i64
  %exitcond538 = icmp ne i64 %indvars.iv.next536, %wide.trip.count537
  br i1 %exitcond538, label %2226, label %._crit_edge532

._crit_edge532:                                   ; preds = %2253
  %split533 = phi i32 [ %.17, %2253 ]
  %split534 = phi i32 [ %.15, %2253 ]
  br label %2254

; <label>:2254:                                   ; preds = %._crit_edge532, %2224
  %.06.lcssa = phi i32 [ %split533, %._crit_edge532 ], [ 0, %2224 ]
  %.04.lcssa = phi i32 [ %split534, %._crit_edge532 ], [ 32, %2224 ]
  %2255 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 36
  %2256 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2255, i64 0, i64 %indvars.iv544
  %2257 = getelementptr inbounds [258 x i32], [258 x i32]* %2256, i64 0, i64 0
  %2258 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 37
  %2259 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2258, i64 0, i64 %indvars.iv544
  %2260 = getelementptr inbounds [258 x i32], [258 x i32]* %2259, i64 0, i64 0
  %2261 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 38
  %2262 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2261, i64 0, i64 %indvars.iv544
  %2263 = getelementptr inbounds [258 x i32], [258 x i32]* %2262, i64 0, i64 0
  %2264 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 35
  %2265 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2264, i64 0, i64 %indvars.iv544
  %2266 = getelementptr inbounds [258 x i8], [258 x i8]* %2265, i64 0, i64 0
  call void @BZ2_hbCreateDecodeTables(i32* %2257, i32* %2260, i32* %2263, i8* %2266, i32 %.04.lcssa, i32 %.06.lcssa, i32 %.566)
  %2267 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 39
  %2268 = getelementptr inbounds [6 x i32], [6 x i32]* %2267, i64 0, i64 %indvars.iv544
  store i32 %.04.lcssa, i32* %2268, align 4
  br label %2269

; <label>:2269:                                   ; preds = %2254
  %indvars.iv.next545 = add nuw nsw i64 %indvars.iv544, 1
  %wide.trip.count546 = zext i32 %.488 to i64
  %exitcond547 = icmp ne i64 %indvars.iv.next545, %wide.trip.count546
  br i1 %exitcond547, label %2224, label %._crit_edge542

._crit_edge542:                                   ; preds = %2269
  %2270 = add i64 %2223, 1
  %2271 = trunc i64 %2270 to i32
  br label %2272

; <label>:2272:                                   ; preds = %._crit_edge542, %2220
  %.648.lcssa = phi i32 [ %2271, %._crit_edge542 ], [ 0, %2220 ]
  %2273 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %2274 = load i32, i32* %2273, align 8
  %2275 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %2276 = load i32, i32* %2275, align 8
  br label %2277

; <label>:2277:                                   ; preds = %2272, %2280
  %indvars.iv524 = phi i64 [ 0, %2272 ], [ %indvars.iv.next525, %2280 ]
  call void @unroll_loop(i32 119)
  %2278 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 16
  %2279 = getelementptr inbounds [256 x i32], [256 x i32]* %2278, i64 0, i64 %indvars.iv524
  store i32 0, i32* %2279, align 4
  br label %2280

; <label>:2280:                                   ; preds = %2277
  %indvars.iv.next525 = add nuw nsw i64 %indvars.iv524, 1
  %exitcond526 = icmp ne i64 %indvars.iv.next525, 256
  br i1 %exitcond526, label %2277, label %2281

; <label>:2281:                                   ; preds = %2280
  %2282 = add nsw i32 %2274, 1
  %2283 = mul nsw i32 100000, %2276
  %2284 = trunc i64 256 to i32
  br label %2285

; <label>:2285:                                   ; preds = %2281, %2302
  %indvars.iv521 = phi i64 [ 15, %2281 ], [ %indvars.iv.next522, %2302 ]
  %indvars.iv519 = phi i64 [ 4095, %2281 ], [ %indvars.iv.next520, %2302 ]
  call void @unroll_loop(i32 120)
  br label %2286

; <label>:2286:                                   ; preds = %2285, %2293
  %indvars.iv515 = phi i64 [ %indvars.iv519, %2285 ], [ %indvars.iv.next516, %2293 ]
  %.0363513 = phi i32 [ 15, %2285 ], [ %2294, %2293 ]
  call void @unroll_loop(i32 121)
  %2287 = mul nuw nsw i64 %indvars.iv521, 16
  %2288 = trunc i64 %2287 to i32
  %2289 = add nuw nsw i32 %2288, %.0363513
  %2290 = trunc i32 %2289 to i8
  %2291 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2292 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2291, i64 0, i64 %indvars.iv515
  store i8 %2290, i8* %2292, align 1
  %indvars.iv.next516 = add nsw i64 %indvars.iv515, -1
  br label %2293

; <label>:2293:                                   ; preds = %2286
  %2294 = add nsw i32 %.0363513, -1
  %2295 = icmp sge i32 %2294, 0
  br i1 %2295, label %2286, label %2296

; <label>:2296:                                   ; preds = %2293
  %2297 = add nsw i64 %indvars.iv519, -16
  %2298 = trunc i64 %2297 to i32
  %2299 = add nsw i32 %2298, 1
  %2300 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2301 = getelementptr inbounds [16 x i32], [16 x i32]* %2300, i64 0, i64 %indvars.iv521
  store i32 %2299, i32* %2301, align 4
  br label %2302

; <label>:2302:                                   ; preds = %2296
  %indvars.iv.next522 = add nsw i64 %indvars.iv521, -1
  %2303 = icmp sge i64 %indvars.iv.next522, 0
  %indvars.iv.next520 = add nsw i64 %indvars.iv519, -16
  br i1 %2303, label %2285, label %2304

; <label>:2304:                                   ; preds = %2302
  %2305 = icmp eq i32 0, 0
  br i1 %2305, label %2306, label %2332

; <label>:2306:                                   ; preds = %2304
  %2307 = add nsw i32 -1, 1
  %2308 = icmp sge i32 %2307, %.3109
  br i1 %2308, label %2309, label %2310

; <label>:2309:                                   ; preds = %2306
  br label %4378

; <label>:2310:                                   ; preds = %2306
  %2311 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 33
  %2312 = sext i32 %2307 to i64
  %2313 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2311, i64 0, i64 %2312
  %2314 = load i8, i8* %2313, align 1
  %2315 = zext i8 %2314 to i32
  %2316 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 39
  %2317 = sext i32 %2315 to i64
  %2318 = getelementptr inbounds [6 x i32], [6 x i32]* %2316, i64 0, i64 %2317
  %2319 = load i32, i32* %2318, align 4
  %2320 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 36
  %2321 = sext i32 %2315 to i64
  %2322 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2320, i64 0, i64 %2321
  %2323 = getelementptr inbounds [258 x i32], [258 x i32]* %2322, i64 0, i64 0
  %2324 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 38
  %2325 = sext i32 %2315 to i64
  %2326 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2324, i64 0, i64 %2325
  %2327 = getelementptr inbounds [258 x i32], [258 x i32]* %2326, i64 0, i64 0
  %2328 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 37
  %2329 = sext i32 %2315 to i64
  %2330 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2328, i64 0, i64 %2329
  %2331 = getelementptr inbounds [258 x i32], [258 x i32]* %2330, i64 0, i64 0
  br label %2332

; <label>:2332:                                   ; preds = %2310, %2304
  %.0342 = phi i32* [ %2327, %2310 ], [ %81, %2304 ]
  %.0327 = phi i32* [ %2331, %2310 ], [ %79, %2304 ]
  %.0312 = phi i32* [ %2323, %2310 ], [ %77, %2304 ]
  %.0297 = phi i32 [ %2319, %2310 ], [ %75, %2304 ]
  %.0282 = phi i32 [ %2315, %2310 ], [ %73, %2304 ]
  %.0154 = phi i32 [ 50, %2310 ], [ 0, %2304 ]
  %.0139 = phi i32 [ %2307, %2310 ], [ -1, %2304 ]
  %2333 = add nsw i32 %.0154, -1
  br label %2334

; <label>:2334:                                   ; preds = %33, %2332
  %.1343 = phi i32* [ %81, %33 ], [ %.0342, %2332 ]
  %.1328 = phi i32* [ %79, %33 ], [ %.0327, %2332 ]
  %.1313 = phi i32* [ %77, %33 ], [ %.0312, %2332 ]
  %.1298 = phi i32 [ %75, %33 ], [ %.0297, %2332 ]
  %.1283 = phi i32 [ %73, %33 ], [ %.0282, %2332 ]
  %.0248 = phi i32 [ %67, %33 ], [ %.0297, %2332 ]
  %.7235 = phi i32 [ %63, %33 ], [ %.0228, %2332 ]
  %.0190 = phi i32 [ %57, %33 ], [ 0, %2332 ]
  %.0178 = phi i32 [ %55, %33 ], [ %2283, %2332 ]
  %.1155 = phi i32 [ %51, %33 ], [ %2333, %2332 ]
  %.1140 = phi i32 [ %49, %33 ], [ %.0139, %2332 ]
  %.0127 = phi i32 [ %47, %33 ], [ %2282, %2332 ]
  %.9115 = phi i32 [ %45, %33 ], [ %.3109, %2332 ]
  %.1094 = phi i32 [ %43, %33 ], [ %.488, %2332 ]
  %.1172 = phi i32 [ %41, %33 ], [ %.566, %2332 ]
  %.749 = phi i32 [ %39, %33 ], [ %.648.lcssa, %2332 ]
  %.1528 = phi i32 [ %37, %33 ], [ %.922, %2332 ]
  %.21 = phi i32 [ %35, %33 ], [ %2284, %2332 ]
  %2335 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 36, i32* %2335, align 8
  %2336 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2337 = load i32, i32* %2336, align 4
  %2338 = icmp sge i32 %2337, %.0248
  br i1 %2338, label %2339, label %.lr.ph511

.lr.ph511:                                        ; preds = %2334
  br label %2352

._crit_edge512:                                   ; preds = %2400
  br label %2339

; <label>:2339:                                   ; preds = %._crit_edge512, %2334
  %2340 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2341 = load i32, i32* %2340, align 8
  %2342 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2343 = load i32, i32* %2342, align 4
  %2344 = sub nsw i32 %2343, %.0248
  %2345 = lshr i32 %2341, %2344
  %2346 = shl i32 1, %.0248
  %2347 = sub nsw i32 %2346, 1
  %2348 = and i32 %2345, %2347
  %2349 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2350 = load i32, i32* %2349, align 4
  %2351 = sub nsw i32 %2350, %.0248
  store i32 %2351, i32* %2349, align 4
  br label %2403

; <label>:2352:                                   ; preds = %.lr.ph511, %2400
  call void @unroll_loop(i32 122)
  %2353 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2354 = load %struct.bz_stream*, %struct.bz_stream** %2353, align 8
  %2355 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2354, i32 0, i32 1
  %2356 = load i32, i32* %2355, align 8
  %2357 = icmp eq i32 %2356, 0
  br i1 %2357, label %2358, label %2359

; <label>:2358:                                   ; preds = %2352
  br label %4378

; <label>:2359:                                   ; preds = %2352
  %2360 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2361 = load i32, i32* %2360, align 8
  %2362 = shl i32 %2361, 8
  %2363 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2364 = load %struct.bz_stream*, %struct.bz_stream** %2363, align 8
  %2365 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2364, i32 0, i32 0
  %2366 = load i8*, i8** %2365, align 8
  %2367 = load i8, i8* %2366, align 1
  %2368 = zext i8 %2367 to i32
  %2369 = or i32 %2362, %2368
  %2370 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %2369, i32* %2370, align 8
  %2371 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2372 = load i32, i32* %2371, align 4
  %2373 = add nsw i32 %2372, 8
  store i32 %2373, i32* %2371, align 4
  %2374 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2375 = load %struct.bz_stream*, %struct.bz_stream** %2374, align 8
  %2376 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2375, i32 0, i32 0
  %2377 = load i8*, i8** %2376, align 8
  %2378 = getelementptr inbounds i8, i8* %2377, i32 1
  store i8* %2378, i8** %2376, align 8
  %2379 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2380 = load %struct.bz_stream*, %struct.bz_stream** %2379, align 8
  %2381 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2380, i32 0, i32 1
  %2382 = load i32, i32* %2381, align 8
  %2383 = add i32 %2382, -1
  store i32 %2383, i32* %2381, align 8
  %2384 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2385 = load %struct.bz_stream*, %struct.bz_stream** %2384, align 8
  %2386 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2385, i32 0, i32 2
  %2387 = load i32, i32* %2386, align 4
  %2388 = add i32 %2387, 1
  store i32 %2388, i32* %2386, align 4
  %2389 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2390 = load %struct.bz_stream*, %struct.bz_stream** %2389, align 8
  %2391 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2390, i32 0, i32 2
  %2392 = load i32, i32* %2391, align 4
  %2393 = icmp eq i32 %2392, 0
  br i1 %2393, label %2394, label %2400

; <label>:2394:                                   ; preds = %2359
  %2395 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2396 = load %struct.bz_stream*, %struct.bz_stream** %2395, align 8
  %2397 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2396, i32 0, i32 3
  %2398 = load i32, i32* %2397, align 8
  %2399 = add i32 %2398, 1
  store i32 %2399, i32* %2397, align 8
  br label %2400

; <label>:2400:                                   ; preds = %2394, %2359
  %2401 = load i32, i32* %2336, align 4
  %2402 = icmp sge i32 %2401, %.0248
  br i1 %2402, label %._crit_edge512, label %2352

; <label>:2403:                                   ; preds = %2339
  br label %2404

; <label>:2404:                                   ; preds = %2403, %2482
  %.2344 = phi i32* [ %.3345, %2482 ], [ %.1343, %2403 ]
  %.2329 = phi i32* [ %.3330, %2482 ], [ %.1328, %2403 ]
  %.2314 = phi i32* [ %.3315, %2482 ], [ %.1313, %2403 ]
  %.2299 = phi i32 [ %.3300, %2482 ], [ %.1298, %2403 ]
  %.2284 = phi i32 [ %.3285, %2482 ], [ %.1283, %2403 ]
  %.0271 = phi i32 [ %2427, %2482 ], [ %71, %2403 ]
  %.0260 = phi i32 [ %2484, %2482 ], [ %2348, %2403 ]
  %.1249 = phi i32 [ %.2250, %2482 ], [ %.0248, %2403 ]
  %.8236 = phi i32 [ %.9237, %2482 ], [ %.7235, %2403 ]
  %.1191 = phi i32 [ %.2192, %2482 ], [ %.0190, %2403 ]
  %.1179 = phi i32 [ %.2180, %2482 ], [ %.0178, %2403 ]
  %.2156 = phi i32 [ %.3157, %2482 ], [ %.1155, %2403 ]
  %.2141 = phi i32 [ %.3142, %2482 ], [ %.1140, %2403 ]
  %.1128 = phi i32 [ %.2129, %2482 ], [ %.0127, %2403 ]
  %.10116 = phi i32 [ %.11117, %2482 ], [ %.9115, %2403 ]
  %.1195 = phi i32 [ %.1296, %2482 ], [ %.1094, %2403 ]
  %.1273 = phi i32 [ %.1374, %2482 ], [ %.1172, %2403 ]
  %.850 = phi i32 [ %.951, %2482 ], [ %.749, %2403 ]
  %.1629 = phi i32 [ %.1730, %2482 ], [ %.1528, %2403 ]
  %.22 = phi i32 [ %.23, %2482 ], [ %.21, %2403 ]
  %2405 = icmp sgt i32 %.1249, 20
  br i1 %2405, label %2406, label %2407

; <label>:2406:                                   ; preds = %2404
  br label %4378

; <label>:2407:                                   ; preds = %2404
  %2408 = sext i32 %.1249 to i64
  %2409 = getelementptr inbounds i32, i32* %.2314, i64 %2408
  %2410 = load i32, i32* %2409, align 4
  %2411 = icmp sle i32 %.0260, %2410
  br i1 %2411, label %2412, label %2413

; <label>:2412:                                   ; preds = %2407
  br label %2485

; <label>:2413:                                   ; preds = %2407
  %2414 = add nsw i32 %.1249, 1
  br label %2415

; <label>:2415:                                   ; preds = %33, %2413
  %.3345 = phi i32* [ %81, %33 ], [ %.2344, %2413 ]
  %.3330 = phi i32* [ %79, %33 ], [ %.2329, %2413 ]
  %.3315 = phi i32* [ %77, %33 ], [ %.2314, %2413 ]
  %.3300 = phi i32 [ %75, %33 ], [ %.2299, %2413 ]
  %.3285 = phi i32 [ %73, %33 ], [ %.2284, %2413 ]
  %.1272 = phi i32 [ %71, %33 ], [ %.0271, %2413 ]
  %.1261 = phi i32 [ %69, %33 ], [ %.0260, %2413 ]
  %.2250 = phi i32 [ %67, %33 ], [ %2414, %2413 ]
  %.9237 = phi i32 [ %63, %33 ], [ %.8236, %2413 ]
  %.2192 = phi i32 [ %57, %33 ], [ %.1191, %2413 ]
  %.2180 = phi i32 [ %55, %33 ], [ %.1179, %2413 ]
  %.3157 = phi i32 [ %51, %33 ], [ %.2156, %2413 ]
  %.3142 = phi i32 [ %49, %33 ], [ %.2141, %2413 ]
  %.2129 = phi i32 [ %47, %33 ], [ %.1128, %2413 ]
  %.11117 = phi i32 [ %45, %33 ], [ %.10116, %2413 ]
  %.1296 = phi i32 [ %43, %33 ], [ %.1195, %2413 ]
  %.1374 = phi i32 [ %41, %33 ], [ %.1273, %2413 ]
  %.951 = phi i32 [ %39, %33 ], [ %.850, %2413 ]
  %.1730 = phi i32 [ %37, %33 ], [ %.1629, %2413 ]
  %.23 = phi i32 [ %35, %33 ], [ %.22, %2413 ]
  %2416 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 37, i32* %2416, align 8
  %2417 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2418 = load i32, i32* %2417, align 4
  %2419 = icmp sge i32 %2418, 1
  br i1 %2419, label %2420, label %.lr.ph508

.lr.ph508:                                        ; preds = %2415
  br label %2431

._crit_edge509:                                   ; preds = %2479
  br label %2420

; <label>:2420:                                   ; preds = %._crit_edge509, %2415
  %2421 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2422 = load i32, i32* %2421, align 8
  %2423 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2424 = load i32, i32* %2423, align 4
  %2425 = sub nsw i32 %2424, 1
  %2426 = lshr i32 %2422, %2425
  %2427 = and i32 %2426, 1
  %2428 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2429 = load i32, i32* %2428, align 4
  %2430 = sub nsw i32 %2429, 1
  store i32 %2430, i32* %2428, align 4
  br label %2482

; <label>:2431:                                   ; preds = %.lr.ph508, %2479
  call void @unroll_loop(i32 123)
  %2432 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2433 = load %struct.bz_stream*, %struct.bz_stream** %2432, align 8
  %2434 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2433, i32 0, i32 1
  %2435 = load i32, i32* %2434, align 8
  %2436 = icmp eq i32 %2435, 0
  br i1 %2436, label %2437, label %2438

; <label>:2437:                                   ; preds = %2431
  br label %4378

; <label>:2438:                                   ; preds = %2431
  %2439 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2440 = load i32, i32* %2439, align 8
  %2441 = shl i32 %2440, 8
  %2442 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2443 = load %struct.bz_stream*, %struct.bz_stream** %2442, align 8
  %2444 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2443, i32 0, i32 0
  %2445 = load i8*, i8** %2444, align 8
  %2446 = load i8, i8* %2445, align 1
  %2447 = zext i8 %2446 to i32
  %2448 = or i32 %2441, %2447
  %2449 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %2448, i32* %2449, align 8
  %2450 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2451 = load i32, i32* %2450, align 4
  %2452 = add nsw i32 %2451, 8
  store i32 %2452, i32* %2450, align 4
  %2453 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2454 = load %struct.bz_stream*, %struct.bz_stream** %2453, align 8
  %2455 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2454, i32 0, i32 0
  %2456 = load i8*, i8** %2455, align 8
  %2457 = getelementptr inbounds i8, i8* %2456, i32 1
  store i8* %2457, i8** %2455, align 8
  %2458 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2459 = load %struct.bz_stream*, %struct.bz_stream** %2458, align 8
  %2460 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2459, i32 0, i32 1
  %2461 = load i32, i32* %2460, align 8
  %2462 = add i32 %2461, -1
  store i32 %2462, i32* %2460, align 8
  %2463 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2464 = load %struct.bz_stream*, %struct.bz_stream** %2463, align 8
  %2465 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2464, i32 0, i32 2
  %2466 = load i32, i32* %2465, align 4
  %2467 = add i32 %2466, 1
  store i32 %2467, i32* %2465, align 4
  %2468 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2469 = load %struct.bz_stream*, %struct.bz_stream** %2468, align 8
  %2470 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2469, i32 0, i32 2
  %2471 = load i32, i32* %2470, align 4
  %2472 = icmp eq i32 %2471, 0
  br i1 %2472, label %2473, label %2479

; <label>:2473:                                   ; preds = %2438
  %2474 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2475 = load %struct.bz_stream*, %struct.bz_stream** %2474, align 8
  %2476 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2475, i32 0, i32 3
  %2477 = load i32, i32* %2476, align 8
  %2478 = add i32 %2477, 1
  store i32 %2478, i32* %2476, align 8
  br label %2479

; <label>:2479:                                   ; preds = %2473, %2438
  %2480 = load i32, i32* %2417, align 4
  %2481 = icmp sge i32 %2480, 1
  br i1 %2481, label %._crit_edge509, label %2431

; <label>:2482:                                   ; preds = %2420
  %2483 = shl i32 %.1261, 1
  %2484 = or i32 %2483, %2427
  br label %2404

; <label>:2485:                                   ; preds = %2412
  %2486 = sext i32 %.1249 to i64
  %2487 = getelementptr inbounds i32, i32* %.2329, i64 %2486
  %2488 = load i32, i32* %2487, align 4
  %2489 = sub nsw i32 %.0260, %2488
  %2490 = icmp slt i32 %2489, 0
  br i1 %2490, label %2497, label %2491

; <label>:2491:                                   ; preds = %2485
  %2492 = sext i32 %.1249 to i64
  %2493 = getelementptr inbounds i32, i32* %.2329, i64 %2492
  %2494 = load i32, i32* %2493, align 4
  %2495 = sub nsw i32 %.0260, %2494
  %2496 = icmp sge i32 %2495, 258
  br i1 %2496, label %2497, label %2498

; <label>:2497:                                   ; preds = %2491, %2485
  br label %4378

; <label>:2498:                                   ; preds = %2491
  %2499 = sext i32 %.1249 to i64
  %2500 = getelementptr inbounds i32, i32* %.2329, i64 %2499
  %2501 = load i32, i32* %2500, align 4
  %2502 = sub nsw i32 %.0260, %2501
  %2503 = sext i32 %2502 to i64
  %2504 = getelementptr inbounds i32, i32* %.2344, i64 %2503
  %2505 = load i32, i32* %2504, align 4
  br label %2506

; <label>:2506:                                   ; preds = %2498, %2789, %3197
  %.4346 = phi i32* [ %.12354, %3197 ], [ %.8350, %2789 ], [ %.2344, %2498 ]
  %.4331 = phi i32* [ %.12339, %3197 ], [ %.8335, %2789 ], [ %.2329, %2498 ]
  %.4316 = phi i32* [ %.12324, %3197 ], [ %.8320, %2789 ], [ %.2314, %2498 ]
  %.4301 = phi i32 [ %.12309, %3197 ], [ %.8305, %2789 ], [ %.2299, %2498 ]
  %.4286 = phi i32 [ %.12294, %3197 ], [ %.8290, %2789 ], [ %.2284, %2498 ]
  %.2273 = phi i32 [ %.8279, %3197 ], [ %.5276, %2789 ], [ %.0271, %2498 ]
  %.2262 = phi i32 [ %.8268, %3197 ], [ %.5265, %2789 ], [ %.0260, %2498 ]
  %.3251 = phi i32 [ %.9257, %3197 ], [ %.6254, %2789 ], [ %.1249, %2498 ]
  %.10238 = phi i32 [ %.16244, %3197 ], [ %.13241, %2789 ], [ %.8236, %2498 ]
  %.0219 = phi i32 [ %.6225, %3197 ], [ %.3222, %2789 ], [ %61, %2498 ]
  %.0205 = phi i32 [ %.11216, %3197 ], [ %.9214, %2789 ], [ %59, %2498 ]
  %.3193 = phi i32 [ %.12202, %3197 ], [ %.10200, %2789 ], [ %.1191, %2498 ]
  %.3181 = phi i32 [ %.9187, %3197 ], [ %.6184, %2789 ], [ %.1179, %2498 ]
  %.0169 = phi i32 [ %3204, %3197 ], [ %2727, %2789 ], [ %2505, %2498 ]
  %.4158 = phi i32 [ %.12166, %3197 ], [ %.8162, %2789 ], [ %.2156, %2498 ]
  %.4143 = phi i32 [ %.12151, %3197 ], [ %.8147, %2789 ], [ %.2141, %2498 ]
  %.3130 = phi i32 [ %.9136, %3197 ], [ %.6133, %2789 ], [ %.1128, %2498 ]
  %.12118 = phi i32 [ %.18124, %3197 ], [ %.15121, %2789 ], [ %.10116, %2498 ]
  %.1397 = phi i32 [ %.19103, %3197 ], [ %.16100, %2789 ], [ %.1195, %2498 ]
  %.1475 = phi i32 [ %.2081, %3197 ], [ %.1778, %2789 ], [ %.1273, %2498 ]
  %.1052 = phi i32 [ %.1658, %3197 ], [ %.1355, %2789 ], [ %.850, %2498 ]
  %.1831 = phi i32 [ %.2437, %3197 ], [ %.2134, %2789 ], [ %.1629, %2498 ]
  %.24 = phi i32 [ %.30, %3197 ], [ %.27, %2789 ], [ %.22, %2498 ]
  %2507 = icmp eq i32 %.0169, %.3130
  br i1 %2507, label %2508, label %2509

; <label>:2508:                                   ; preds = %2506
  br label %3205

; <label>:2509:                                   ; preds = %2506
  %2510 = icmp eq i32 %.0169, 0
  br i1 %2510, label %2513, label %2511

; <label>:2511:                                   ; preds = %2509
  %2512 = icmp eq i32 %.0169, 1
  br i1 %2512, label %2513, label %2790

; <label>:2513:                                   ; preds = %2511, %2509
  br label %2514

; <label>:2514:                                   ; preds = %2732, %2513
  %.5347 = phi i32* [ %.4346, %2513 ], [ %.8350, %2732 ]
  %.5332 = phi i32* [ %.4331, %2513 ], [ %.8335, %2732 ]
  %.5317 = phi i32* [ %.4316, %2513 ], [ %.8320, %2732 ]
  %.5302 = phi i32 [ %.4301, %2513 ], [ %.8305, %2732 ]
  %.5287 = phi i32 [ %.4286, %2513 ], [ %.8290, %2732 ]
  %.3274 = phi i32 [ %.2273, %2513 ], [ %.5276, %2732 ]
  %.3263 = phi i32 [ %.2262, %2513 ], [ %.5265, %2732 ]
  %.4252 = phi i32 [ %.3251, %2513 ], [ %.6254, %2732 ]
  %.11239 = phi i32 [ %.10238, %2513 ], [ %.13241, %2732 ]
  %.1220 = phi i32 [ 1, %2513 ], [ %.3222, %2732 ]
  %.1206 = phi i32 [ -1, %2513 ], [ %.5210, %2732 ]
  %.4194 = phi i32 [ %.3193, %2513 ], [ %.6196, %2732 ]
  %.4182 = phi i32 [ %.3181, %2513 ], [ %.6184, %2732 ]
  %.1170 = phi i32 [ %.0169, %2513 ], [ %2727, %2732 ]
  %.5159 = phi i32 [ %.4158, %2513 ], [ %.8162, %2732 ]
  %.5144 = phi i32 [ %.4143, %2513 ], [ %.8147, %2732 ]
  %.4131 = phi i32 [ %.3130, %2513 ], [ %.6133, %2732 ]
  %.13119 = phi i32 [ %.12118, %2513 ], [ %.15121, %2732 ]
  %.1498 = phi i32 [ %.1397, %2513 ], [ %.16100, %2732 ]
  %.1576 = phi i32 [ %.1475, %2513 ], [ %.1778, %2732 ]
  %.1153 = phi i32 [ %.1052, %2513 ], [ %.1355, %2732 ]
  %.1932 = phi i32 [ %.1831, %2513 ], [ %.2134, %2732 ]
  %.25 = phi i32 [ %.24, %2513 ], [ %.27, %2732 ]
  %2515 = icmp eq i32 %.1170, 0
  br i1 %2515, label %2516, label %2519

; <label>:2516:                                   ; preds = %2514
  %2517 = mul nsw i32 1, %.1220
  %2518 = add nsw i32 %.1206, %2517
  br label %2525

; <label>:2519:                                   ; preds = %2514
  %2520 = icmp eq i32 %.1170, 1
  br i1 %2520, label %2521, label %2524

; <label>:2521:                                   ; preds = %2519
  %2522 = mul nsw i32 2, %.1220
  %2523 = add nsw i32 %.1206, %2522
  br label %2524

; <label>:2524:                                   ; preds = %2521, %2519
  %.2207 = phi i32 [ %2523, %2521 ], [ %.1206, %2519 ]
  br label %2525

; <label>:2525:                                   ; preds = %2524, %2516
  %.3208 = phi i32 [ %2518, %2516 ], [ %.2207, %2524 ]
  %2526 = mul nsw i32 %.1220, 2
  %2527 = icmp eq i32 %.5159, 0
  br i1 %2527, label %2528, label %2554

; <label>:2528:                                   ; preds = %2525
  %2529 = add nsw i32 %.5144, 1
  %2530 = icmp sge i32 %2529, %.13119
  br i1 %2530, label %2531, label %2532

; <label>:2531:                                   ; preds = %2528
  br label %4378

; <label>:2532:                                   ; preds = %2528
  %2533 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 33
  %2534 = sext i32 %2529 to i64
  %2535 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2533, i64 0, i64 %2534
  %2536 = load i8, i8* %2535, align 1
  %2537 = zext i8 %2536 to i32
  %2538 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 39
  %2539 = sext i32 %2537 to i64
  %2540 = getelementptr inbounds [6 x i32], [6 x i32]* %2538, i64 0, i64 %2539
  %2541 = load i32, i32* %2540, align 4
  %2542 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 36
  %2543 = sext i32 %2537 to i64
  %2544 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2542, i64 0, i64 %2543
  %2545 = getelementptr inbounds [258 x i32], [258 x i32]* %2544, i64 0, i64 0
  %2546 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 38
  %2547 = sext i32 %2537 to i64
  %2548 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2546, i64 0, i64 %2547
  %2549 = getelementptr inbounds [258 x i32], [258 x i32]* %2548, i64 0, i64 0
  %2550 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 37
  %2551 = sext i32 %2537 to i64
  %2552 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2550, i64 0, i64 %2551
  %2553 = getelementptr inbounds [258 x i32], [258 x i32]* %2552, i64 0, i64 0
  br label %2554

; <label>:2554:                                   ; preds = %2532, %2525
  %.6348 = phi i32* [ %2549, %2532 ], [ %.5347, %2525 ]
  %.6333 = phi i32* [ %2553, %2532 ], [ %.5332, %2525 ]
  %.6318 = phi i32* [ %2545, %2532 ], [ %.5317, %2525 ]
  %.6303 = phi i32 [ %2541, %2532 ], [ %.5302, %2525 ]
  %.6288 = phi i32 [ %2537, %2532 ], [ %.5287, %2525 ]
  %.6160 = phi i32 [ 50, %2532 ], [ %.5159, %2525 ]
  %.6145 = phi i32 [ %2529, %2532 ], [ %.5144, %2525 ]
  %2555 = add nsw i32 %.6160, -1
  br label %2556

; <label>:2556:                                   ; preds = %33, %2554
  %.7349 = phi i32* [ %.6348, %2554 ], [ %81, %33 ]
  %.7334 = phi i32* [ %.6333, %2554 ], [ %79, %33 ]
  %.7319 = phi i32* [ %.6318, %2554 ], [ %77, %33 ]
  %.7304 = phi i32 [ %.6303, %2554 ], [ %75, %33 ]
  %.7289 = phi i32 [ %.6288, %2554 ], [ %73, %33 ]
  %.4275 = phi i32 [ %.3274, %2554 ], [ %71, %33 ]
  %.4264 = phi i32 [ %.3263, %2554 ], [ %69, %33 ]
  %.5253 = phi i32 [ %.6303, %2554 ], [ %67, %33 ]
  %.12240 = phi i32 [ %.11239, %2554 ], [ %63, %33 ]
  %.2221 = phi i32 [ %2526, %2554 ], [ %61, %33 ]
  %.4209 = phi i32 [ %.3208, %2554 ], [ %59, %33 ]
  %.5195 = phi i32 [ %.4194, %2554 ], [ %57, %33 ]
  %.5183 = phi i32 [ %.4182, %2554 ], [ %55, %33 ]
  %.2171 = phi i32 [ %.1170, %2554 ], [ %53, %33 ]
  %.7161 = phi i32 [ %2555, %2554 ], [ %51, %33 ]
  %.7146 = phi i32 [ %.6145, %2554 ], [ %49, %33 ]
  %.5132 = phi i32 [ %.4131, %2554 ], [ %47, %33 ]
  %.14120 = phi i32 [ %.13119, %2554 ], [ %45, %33 ]
  %.1599 = phi i32 [ %.1498, %2554 ], [ %43, %33 ]
  %.1677 = phi i32 [ %.1576, %2554 ], [ %41, %33 ]
  %.1254 = phi i32 [ %.1153, %2554 ], [ %39, %33 ]
  %.2033 = phi i32 [ %.1932, %2554 ], [ %37, %33 ]
  %.26 = phi i32 [ %.25, %2554 ], [ %35, %33 ]
  %2557 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 38, i32* %2557, align 8
  %2558 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2559 = load i32, i32* %2558, align 4
  %2560 = icmp sge i32 %2559, %.5253
  br i1 %2560, label %2561, label %.lr.ph466

.lr.ph466:                                        ; preds = %2556
  br label %2574

._crit_edge467:                                   ; preds = %2622
  br label %2561

; <label>:2561:                                   ; preds = %._crit_edge467, %2556
  %2562 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2563 = load i32, i32* %2562, align 8
  %2564 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2565 = load i32, i32* %2564, align 4
  %2566 = sub nsw i32 %2565, %.5253
  %2567 = lshr i32 %2563, %2566
  %2568 = shl i32 1, %.5253
  %2569 = sub nsw i32 %2568, 1
  %2570 = and i32 %2567, %2569
  %2571 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2572 = load i32, i32* %2571, align 4
  %2573 = sub nsw i32 %2572, %.5253
  store i32 %2573, i32* %2571, align 4
  br label %2625

; <label>:2574:                                   ; preds = %.lr.ph466, %2622
  call void @unroll_loop(i32 124)
  %2575 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2576 = load %struct.bz_stream*, %struct.bz_stream** %2575, align 8
  %2577 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2576, i32 0, i32 1
  %2578 = load i32, i32* %2577, align 8
  %2579 = icmp eq i32 %2578, 0
  br i1 %2579, label %2580, label %2581

; <label>:2580:                                   ; preds = %2574
  br label %4378

; <label>:2581:                                   ; preds = %2574
  %2582 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2583 = load i32, i32* %2582, align 8
  %2584 = shl i32 %2583, 8
  %2585 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2586 = load %struct.bz_stream*, %struct.bz_stream** %2585, align 8
  %2587 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2586, i32 0, i32 0
  %2588 = load i8*, i8** %2587, align 8
  %2589 = load i8, i8* %2588, align 1
  %2590 = zext i8 %2589 to i32
  %2591 = or i32 %2584, %2590
  %2592 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %2591, i32* %2592, align 8
  %2593 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2594 = load i32, i32* %2593, align 4
  %2595 = add nsw i32 %2594, 8
  store i32 %2595, i32* %2593, align 4
  %2596 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2597 = load %struct.bz_stream*, %struct.bz_stream** %2596, align 8
  %2598 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2597, i32 0, i32 0
  %2599 = load i8*, i8** %2598, align 8
  %2600 = getelementptr inbounds i8, i8* %2599, i32 1
  store i8* %2600, i8** %2598, align 8
  %2601 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2602 = load %struct.bz_stream*, %struct.bz_stream** %2601, align 8
  %2603 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2602, i32 0, i32 1
  %2604 = load i32, i32* %2603, align 8
  %2605 = add i32 %2604, -1
  store i32 %2605, i32* %2603, align 8
  %2606 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2607 = load %struct.bz_stream*, %struct.bz_stream** %2606, align 8
  %2608 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2607, i32 0, i32 2
  %2609 = load i32, i32* %2608, align 4
  %2610 = add i32 %2609, 1
  store i32 %2610, i32* %2608, align 4
  %2611 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2612 = load %struct.bz_stream*, %struct.bz_stream** %2611, align 8
  %2613 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2612, i32 0, i32 2
  %2614 = load i32, i32* %2613, align 4
  %2615 = icmp eq i32 %2614, 0
  br i1 %2615, label %2616, label %2622

; <label>:2616:                                   ; preds = %2581
  %2617 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2618 = load %struct.bz_stream*, %struct.bz_stream** %2617, align 8
  %2619 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2618, i32 0, i32 3
  %2620 = load i32, i32* %2619, align 8
  %2621 = add i32 %2620, 1
  store i32 %2621, i32* %2619, align 8
  br label %2622

; <label>:2622:                                   ; preds = %2616, %2581
  %2623 = load i32, i32* %2558, align 4
  %2624 = icmp sge i32 %2623, %.5253
  br i1 %2624, label %._crit_edge467, label %2574

; <label>:2625:                                   ; preds = %2561
  br label %2626

; <label>:2626:                                   ; preds = %2625, %2704
  %.8350 = phi i32* [ %.7349, %2625 ], [ %.9351, %2704 ]
  %.8335 = phi i32* [ %.7334, %2625 ], [ %.9336, %2704 ]
  %.8320 = phi i32* [ %.7319, %2625 ], [ %.9321, %2704 ]
  %.8305 = phi i32 [ %.7304, %2625 ], [ %.9306, %2704 ]
  %.8290 = phi i32 [ %.7289, %2625 ], [ %.9291, %2704 ]
  %.5276 = phi i32 [ %.4275, %2625 ], [ %2649, %2704 ]
  %.5265 = phi i32 [ %2570, %2625 ], [ %2706, %2704 ]
  %.6254 = phi i32 [ %.5253, %2625 ], [ %.7255, %2704 ]
  %.13241 = phi i32 [ %.12240, %2625 ], [ %.14242, %2704 ]
  %.3222 = phi i32 [ %.2221, %2625 ], [ %.4223, %2704 ]
  %.5210 = phi i32 [ %.4209, %2625 ], [ %.6211, %2704 ]
  %.6196 = phi i32 [ %.5195, %2625 ], [ %.7197, %2704 ]
  %.6184 = phi i32 [ %.5183, %2625 ], [ %.7185, %2704 ]
  %.3172 = phi i32 [ %.2171, %2625 ], [ %.4173, %2704 ]
  %.8162 = phi i32 [ %.7161, %2625 ], [ %.9163, %2704 ]
  %.8147 = phi i32 [ %.7146, %2625 ], [ %.9148, %2704 ]
  %.6133 = phi i32 [ %.5132, %2625 ], [ %.7134, %2704 ]
  %.15121 = phi i32 [ %.14120, %2625 ], [ %.16122, %2704 ]
  %.16100 = phi i32 [ %.1599, %2625 ], [ %.17101, %2704 ]
  %.1778 = phi i32 [ %.1677, %2625 ], [ %.1879, %2704 ]
  %.1355 = phi i32 [ %.1254, %2625 ], [ %.1456, %2704 ]
  %.2134 = phi i32 [ %.2033, %2625 ], [ %.2235, %2704 ]
  %.27 = phi i32 [ %.26, %2625 ], [ %.28, %2704 ]
  %2627 = icmp sgt i32 %.6254, 20
  br i1 %2627, label %2628, label %2629

; <label>:2628:                                   ; preds = %2626
  br label %4378

; <label>:2629:                                   ; preds = %2626
  %2630 = sext i32 %.6254 to i64
  %2631 = getelementptr inbounds i32, i32* %.8320, i64 %2630
  %2632 = load i32, i32* %2631, align 4
  %2633 = icmp sle i32 %.5265, %2632
  br i1 %2633, label %2634, label %2635

; <label>:2634:                                   ; preds = %2629
  br label %2707

; <label>:2635:                                   ; preds = %2629
  %2636 = add nsw i32 %.6254, 1
  br label %2637

; <label>:2637:                                   ; preds = %33, %2635
  %.9351 = phi i32* [ %.8350, %2635 ], [ %81, %33 ]
  %.9336 = phi i32* [ %.8335, %2635 ], [ %79, %33 ]
  %.9321 = phi i32* [ %.8320, %2635 ], [ %77, %33 ]
  %.9306 = phi i32 [ %.8305, %2635 ], [ %75, %33 ]
  %.9291 = phi i32 [ %.8290, %2635 ], [ %73, %33 ]
  %.6277 = phi i32 [ %.5276, %2635 ], [ %71, %33 ]
  %.6266 = phi i32 [ %.5265, %2635 ], [ %69, %33 ]
  %.7255 = phi i32 [ %2636, %2635 ], [ %67, %33 ]
  %.14242 = phi i32 [ %.13241, %2635 ], [ %63, %33 ]
  %.4223 = phi i32 [ %.3222, %2635 ], [ %61, %33 ]
  %.6211 = phi i32 [ %.5210, %2635 ], [ %59, %33 ]
  %.7197 = phi i32 [ %.6196, %2635 ], [ %57, %33 ]
  %.7185 = phi i32 [ %.6184, %2635 ], [ %55, %33 ]
  %.4173 = phi i32 [ %.3172, %2635 ], [ %53, %33 ]
  %.9163 = phi i32 [ %.8162, %2635 ], [ %51, %33 ]
  %.9148 = phi i32 [ %.8147, %2635 ], [ %49, %33 ]
  %.7134 = phi i32 [ %.6133, %2635 ], [ %47, %33 ]
  %.16122 = phi i32 [ %.15121, %2635 ], [ %45, %33 ]
  %.17101 = phi i32 [ %.16100, %2635 ], [ %43, %33 ]
  %.1879 = phi i32 [ %.1778, %2635 ], [ %41, %33 ]
  %.1456 = phi i32 [ %.1355, %2635 ], [ %39, %33 ]
  %.2235 = phi i32 [ %.2134, %2635 ], [ %37, %33 ]
  %.28 = phi i32 [ %.27, %2635 ], [ %35, %33 ]
  %2638 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 39, i32* %2638, align 8
  %2639 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2640 = load i32, i32* %2639, align 4
  %2641 = icmp sge i32 %2640, 1
  br i1 %2641, label %2642, label %.lr.ph463

.lr.ph463:                                        ; preds = %2637
  br label %2653

._crit_edge464:                                   ; preds = %2701
  br label %2642

; <label>:2642:                                   ; preds = %._crit_edge464, %2637
  %2643 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2644 = load i32, i32* %2643, align 8
  %2645 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2646 = load i32, i32* %2645, align 4
  %2647 = sub nsw i32 %2646, 1
  %2648 = lshr i32 %2644, %2647
  %2649 = and i32 %2648, 1
  %2650 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2651 = load i32, i32* %2650, align 4
  %2652 = sub nsw i32 %2651, 1
  store i32 %2652, i32* %2650, align 4
  br label %2704

; <label>:2653:                                   ; preds = %.lr.ph463, %2701
  call void @unroll_loop(i32 125)
  %2654 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2655 = load %struct.bz_stream*, %struct.bz_stream** %2654, align 8
  %2656 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2655, i32 0, i32 1
  %2657 = load i32, i32* %2656, align 8
  %2658 = icmp eq i32 %2657, 0
  br i1 %2658, label %2659, label %2660

; <label>:2659:                                   ; preds = %2653
  br label %4378

; <label>:2660:                                   ; preds = %2653
  %2661 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2662 = load i32, i32* %2661, align 8
  %2663 = shl i32 %2662, 8
  %2664 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2665 = load %struct.bz_stream*, %struct.bz_stream** %2664, align 8
  %2666 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2665, i32 0, i32 0
  %2667 = load i8*, i8** %2666, align 8
  %2668 = load i8, i8* %2667, align 1
  %2669 = zext i8 %2668 to i32
  %2670 = or i32 %2663, %2669
  %2671 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %2670, i32* %2671, align 8
  %2672 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2673 = load i32, i32* %2672, align 4
  %2674 = add nsw i32 %2673, 8
  store i32 %2674, i32* %2672, align 4
  %2675 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2676 = load %struct.bz_stream*, %struct.bz_stream** %2675, align 8
  %2677 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2676, i32 0, i32 0
  %2678 = load i8*, i8** %2677, align 8
  %2679 = getelementptr inbounds i8, i8* %2678, i32 1
  store i8* %2679, i8** %2677, align 8
  %2680 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2681 = load %struct.bz_stream*, %struct.bz_stream** %2680, align 8
  %2682 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2681, i32 0, i32 1
  %2683 = load i32, i32* %2682, align 8
  %2684 = add i32 %2683, -1
  store i32 %2684, i32* %2682, align 8
  %2685 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2686 = load %struct.bz_stream*, %struct.bz_stream** %2685, align 8
  %2687 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2686, i32 0, i32 2
  %2688 = load i32, i32* %2687, align 4
  %2689 = add i32 %2688, 1
  store i32 %2689, i32* %2687, align 4
  %2690 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2691 = load %struct.bz_stream*, %struct.bz_stream** %2690, align 8
  %2692 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2691, i32 0, i32 2
  %2693 = load i32, i32* %2692, align 4
  %2694 = icmp eq i32 %2693, 0
  br i1 %2694, label %2695, label %2701

; <label>:2695:                                   ; preds = %2660
  %2696 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2697 = load %struct.bz_stream*, %struct.bz_stream** %2696, align 8
  %2698 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2697, i32 0, i32 3
  %2699 = load i32, i32* %2698, align 8
  %2700 = add i32 %2699, 1
  store i32 %2700, i32* %2698, align 8
  br label %2701

; <label>:2701:                                   ; preds = %2695, %2660
  %2702 = load i32, i32* %2639, align 4
  %2703 = icmp sge i32 %2702, 1
  br i1 %2703, label %._crit_edge464, label %2653

; <label>:2704:                                   ; preds = %2642
  %2705 = shl i32 %.6266, 1
  %2706 = or i32 %2705, %2649
  br label %2626

; <label>:2707:                                   ; preds = %2634
  %2708 = sext i32 %.6254 to i64
  %2709 = getelementptr inbounds i32, i32* %.8335, i64 %2708
  %2710 = load i32, i32* %2709, align 4
  %2711 = sub nsw i32 %.5265, %2710
  %2712 = icmp slt i32 %2711, 0
  br i1 %2712, label %2719, label %2713

; <label>:2713:                                   ; preds = %2707
  %2714 = sext i32 %.6254 to i64
  %2715 = getelementptr inbounds i32, i32* %.8335, i64 %2714
  %2716 = load i32, i32* %2715, align 4
  %2717 = sub nsw i32 %.5265, %2716
  %2718 = icmp sge i32 %2717, 258
  br i1 %2718, label %2719, label %2720

; <label>:2719:                                   ; preds = %2713, %2707
  br label %4378

; <label>:2720:                                   ; preds = %2713
  %2721 = sext i32 %.6254 to i64
  %2722 = getelementptr inbounds i32, i32* %.8335, i64 %2721
  %2723 = load i32, i32* %2722, align 4
  %2724 = sub nsw i32 %.5265, %2723
  %2725 = sext i32 %2724 to i64
  %2726 = getelementptr inbounds i32, i32* %.8350, i64 %2725
  %2727 = load i32, i32* %2726, align 4
  br label %2728

; <label>:2728:                                   ; preds = %2720
  %2729 = icmp eq i32 %2727, 0
  br i1 %2729, label %2732, label %2730

; <label>:2730:                                   ; preds = %2728
  %2731 = icmp eq i32 %2727, 1
  br label %2732

; <label>:2732:                                   ; preds = %2730, %2728
  %2733 = phi i1 [ true, %2728 ], [ %2731, %2730 ]
  br i1 %2733, label %2514, label %2734

; <label>:2734:                                   ; preds = %2732
  %2735 = add nsw i32 %.5210, 1
  %2736 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %2737 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2738 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2739 = getelementptr inbounds [16 x i32], [16 x i32]* %2738, i64 0, i64 0
  %2740 = load i32, i32* %2739, align 4
  %2741 = sext i32 %2740 to i64
  %2742 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2737, i64 0, i64 %2741
  %2743 = load i8, i8* %2742, align 1
  %2744 = zext i8 %2743 to i64
  %2745 = getelementptr inbounds [256 x i8], [256 x i8]* %2736, i64 0, i64 %2744
  %2746 = load i8, i8* %2745, align 1
  %2747 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 16
  %2748 = zext i8 %2746 to i64
  %2749 = getelementptr inbounds [256 x i32], [256 x i32]* %2747, i64 0, i64 %2748
  %2750 = load i32, i32* %2749, align 4
  %2751 = add nsw i32 %2750, %2735
  store i32 %2751, i32* %2749, align 4
  %2752 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 10
  %2753 = load i8, i8* %2752, align 4
  %2754 = icmp ne i8 %2753, 0
  br i1 %2754, label %2755, label %2772

; <label>:2755:                                   ; preds = %2734
  %2756 = icmp sgt i32 %2735, 0
  br i1 %2756, label %.lr.ph444, label %2771

.lr.ph444:                                        ; preds = %2755
  %2757 = sext i32 %.6196 to i64
  %2758 = sext i32 %.6184 to i64
  br label %2759

; <label>:2759:                                   ; preds = %.lr.ph444, %2763
  %indvars.iv447 = phi i64 [ %2757, %.lr.ph444 ], [ %indvars.iv.next448, %2763 ]
  %.7212441 = phi i32 [ %2735, %.lr.ph444 ], [ %2768, %2763 ]
  call void @unroll_loop(i32 126)
  %2760 = icmp sge i64 %indvars.iv447, %2758
  br i1 %2760, label %2761, label %2763

; <label>:2761:                                   ; preds = %2759
  %.7212.lcssa369 = phi i32 [ %.7212441, %2759 ]
  %.8198.lcssa368.wide = phi i64 [ %indvars.iv447, %2759 ]
  %2762 = trunc i64 %.8198.lcssa368.wide to i32
  br label %4378

; <label>:2763:                                   ; preds = %2759
  %2764 = zext i8 %2746 to i16
  %2765 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %2766 = load i16*, i16** %2765, align 8
  %2767 = getelementptr inbounds i16, i16* %2766, i64 %indvars.iv447
  store i16 %2764, i16* %2767, align 2
  %indvars.iv.next448 = add nsw i64 %indvars.iv447, 1
  %2768 = add nsw i32 %.7212441, -1
  %2769 = icmp sgt i32 %2768, 0
  br i1 %2769, label %2759, label %._crit_edge445

._crit_edge445:                                   ; preds = %2763
  %split = phi i32 [ %2768, %2763 ]
  %split446.wide = phi i64 [ %indvars.iv.next448, %2763 ]
  %2770 = trunc i64 %split446.wide to i32
  br label %2771

; <label>:2771:                                   ; preds = %._crit_edge445, %2755
  %.7212.lcssa = phi i32 [ %split, %._crit_edge445 ], [ %2735, %2755 ]
  %.8198.lcssa = phi i32 [ %2770, %._crit_edge445 ], [ %.6196, %2755 ]
  br label %2789

; <label>:2772:                                   ; preds = %2734
  %2773 = icmp sgt i32 %2735, 0
  br i1 %2773, label %.lr.ph454, label %2788

.lr.ph454:                                        ; preds = %2772
  %2774 = sext i32 %.6196 to i64
  %2775 = sext i32 %.6184 to i64
  br label %2776

; <label>:2776:                                   ; preds = %.lr.ph454, %2780
  %indvars.iv458 = phi i64 [ %2774, %.lr.ph454 ], [ %indvars.iv.next459, %2780 ]
  %.8213451 = phi i32 [ %2735, %.lr.ph454 ], [ %2785, %2780 ]
  call void @unroll_loop(i32 127)
  %2777 = icmp sge i64 %indvars.iv458, %2775
  br i1 %2777, label %2778, label %2780

; <label>:2778:                                   ; preds = %2776
  %.8213.lcssa371 = phi i32 [ %.8213451, %2776 ]
  %.9199.lcssa370.wide = phi i64 [ %indvars.iv458, %2776 ]
  %2779 = trunc i64 %.9199.lcssa370.wide to i32
  br label %4378

; <label>:2780:                                   ; preds = %2776
  %2781 = zext i8 %2746 to i32
  %2782 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %2783 = load i32*, i32** %2782, align 8
  %2784 = getelementptr inbounds i32, i32* %2783, i64 %indvars.iv458
  store i32 %2781, i32* %2784, align 4
  %indvars.iv.next459 = add nsw i64 %indvars.iv458, 1
  %2785 = add nsw i32 %.8213451, -1
  %2786 = icmp sgt i32 %2785, 0
  br i1 %2786, label %2776, label %._crit_edge455

._crit_edge455:                                   ; preds = %2780
  %split456 = phi i32 [ %2785, %2780 ]
  %split457.wide = phi i64 [ %indvars.iv.next459, %2780 ]
  %2787 = trunc i64 %split457.wide to i32
  br label %2788

; <label>:2788:                                   ; preds = %._crit_edge455, %2772
  %.8213.lcssa = phi i32 [ %split456, %._crit_edge455 ], [ %2735, %2772 ]
  %.9199.lcssa = phi i32 [ %2787, %._crit_edge455 ], [ %.6196, %2772 ]
  br label %2789

; <label>:2789:                                   ; preds = %2788, %2771
  %.9214 = phi i32 [ %.7212.lcssa, %2771 ], [ %.8213.lcssa, %2788 ]
  %.10200 = phi i32 [ %.8198.lcssa, %2771 ], [ %.9199.lcssa, %2788 ]
  br label %2506

; <label>:2790:                                   ; preds = %2511
  %2791 = icmp sge i32 %.3193, %.3181
  br i1 %2791, label %2792, label %2793

; <label>:2792:                                   ; preds = %2790
  br label %4378

; <label>:2793:                                   ; preds = %2790
  %2794 = sub nsw i32 %.0169, 1
  %2795 = icmp ult i32 %2794, 16
  br i1 %2795, label %2796, label %2872

; <label>:2796:                                   ; preds = %2793
  %2797 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2798 = getelementptr inbounds [16 x i32], [16 x i32]* %2797, i64 0, i64 0
  %2799 = load i32, i32* %2798, align 4
  %2800 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2801 = add i32 %2799, %2794
  %2802 = zext i32 %2801 to i64
  %2803 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2800, i64 0, i64 %2802
  %2804 = load i8, i8* %2803, align 1
  %2805 = icmp ugt i32 %2794, 3
  br i1 %2805, label %.lr.ph482, label %2849

.lr.ph482:                                        ; preds = %2796
  %2806 = add i32 %.0169, -5
  %2807 = lshr i32 %2806, 2
  %2808 = shl i32 %2807, 2
  br label %2809

; <label>:2809:                                   ; preds = %.lr.ph482, %2809
  %.01480 = phi i32 [ %2794, %.lr.ph482 ], [ %2846, %2809 ]
  call void @unroll_loop(i32 128)
  %2810 = add i32 %2799, %.01480
  %2811 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2812 = sub nsw i32 %2810, 1
  %2813 = sext i32 %2812 to i64
  %2814 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2811, i64 0, i64 %2813
  %2815 = load i8, i8* %2814, align 1
  %2816 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2817 = sext i32 %2810 to i64
  %2818 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2816, i64 0, i64 %2817
  store i8 %2815, i8* %2818, align 1
  %2819 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2820 = sub nsw i32 %2810, 2
  %2821 = sext i32 %2820 to i64
  %2822 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2819, i64 0, i64 %2821
  %2823 = load i8, i8* %2822, align 1
  %2824 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2825 = sub nsw i32 %2810, 1
  %2826 = sext i32 %2825 to i64
  %2827 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2824, i64 0, i64 %2826
  store i8 %2823, i8* %2827, align 1
  %2828 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2829 = sub nsw i32 %2810, 3
  %2830 = sext i32 %2829 to i64
  %2831 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2828, i64 0, i64 %2830
  %2832 = load i8, i8* %2831, align 1
  %2833 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2834 = sub nsw i32 %2810, 2
  %2835 = sext i32 %2834 to i64
  %2836 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2833, i64 0, i64 %2835
  store i8 %2832, i8* %2836, align 1
  %2837 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2838 = sub nsw i32 %2810, 4
  %2839 = sext i32 %2838 to i64
  %2840 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2837, i64 0, i64 %2839
  %2841 = load i8, i8* %2840, align 1
  %2842 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2843 = sub nsw i32 %2810, 3
  %2844 = sext i32 %2843 to i64
  %2845 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2842, i64 0, i64 %2844
  store i8 %2841, i8* %2845, align 1
  %2846 = sub i32 %.01480, 4
  %2847 = icmp ugt i32 %2846, 3
  br i1 %2847, label %2809, label %._crit_edge483

._crit_edge483:                                   ; preds = %2809
  %2848 = sub i32 %2806, %2808
  br label %2849

; <label>:2849:                                   ; preds = %._crit_edge483, %2796
  %.01.lcssa = phi i32 [ %2848, %._crit_edge483 ], [ %2794, %2796 ]
  %2850 = icmp ugt i32 %.01.lcssa, 0
  br i1 %2850, label %.lr.ph476, label %2868

.lr.ph476:                                        ; preds = %2849
  %2851 = zext i32 %.01.lcssa to i64
  br label %2852

; <label>:2852:                                   ; preds = %.lr.ph476, %2852
  %indvars.iv478 = phi i64 [ %2851, %.lr.ph476 ], [ %indvars.iv.next479, %2852 ]
  call void @unroll_loop(i32 129)
  %2853 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2854 = trunc i64 %indvars.iv478 to i32
  %2855 = add i32 %2799, %2854
  %2856 = sub i32 %2855, 1
  %2857 = zext i32 %2856 to i64
  %2858 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2853, i64 0, i64 %2857
  %2859 = load i8, i8* %2858, align 1
  %2860 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2861 = trunc i64 %indvars.iv478 to i32
  %2862 = add i32 %2799, %2861
  %2863 = zext i32 %2862 to i64
  %2864 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2860, i64 0, i64 %2863
  store i8 %2859, i8* %2864, align 1
  %2865 = trunc i64 %indvars.iv478 to i32
  %2866 = add i32 %2865, -1
  %2867 = icmp ugt i32 %2866, 0
  %indvars.iv.next479 = add nsw i64 %indvars.iv478, -1
  br i1 %2867, label %2852, label %._crit_edge477

._crit_edge477:                                   ; preds = %2852
  br label %2868

; <label>:2868:                                   ; preds = %._crit_edge477, %2849
  %2869 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2870 = sext i32 %2799 to i64
  %2871 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2869, i64 0, i64 %2870
  store i8 %2804, i8* %2871, align 1
  br label %2969

; <label>:2872:                                   ; preds = %2793
  %2873 = udiv i32 %2794, 16
  %2874 = urem i32 %2794, 16
  %2875 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2876 = sext i32 %2873 to i64
  %2877 = getelementptr inbounds [16 x i32], [16 x i32]* %2875, i64 0, i64 %2876
  %2878 = load i32, i32* %2877, align 4
  %2879 = add nsw i32 %2878, %2874
  %2880 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2881 = sext i32 %2879 to i64
  %2882 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2880, i64 0, i64 %2881
  %2883 = load i8, i8* %2882, align 1
  %2884 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2885 = sext i32 %2873 to i64
  %2886 = getelementptr inbounds [16 x i32], [16 x i32]* %2884, i64 0, i64 %2885
  %2887 = load i32, i32* %2886, align 4
  %2888 = icmp sgt i32 %2879, %2887
  br i1 %2888, label %.lr.ph503, label %2900

.lr.ph503:                                        ; preds = %2872
  %2889 = add i32 %2878, %2874
  %2890 = sext i32 %2889 to i64
  br label %2891

; <label>:2891:                                   ; preds = %.lr.ph503, %2891
  %indvars.iv505 = phi i64 [ %2890, %.lr.ph503 ], [ %indvars.iv.next506, %2891 ]
  call void @unroll_loop(i32 130)
  %2892 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %indvars.iv.next506 = add nsw i64 %indvars.iv505, -1
  %2893 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2892, i64 0, i64 %indvars.iv.next506
  %2894 = load i8, i8* %2893, align 1
  %2895 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2896 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2895, i64 0, i64 %indvars.iv505
  store i8 %2894, i8* %2896, align 1
  %2897 = load i32, i32* %2886, align 4
  %2898 = sext i32 %2897 to i64
  %2899 = icmp sgt i64 %indvars.iv.next506, %2898
  br i1 %2899, label %2891, label %._crit_edge504

._crit_edge504:                                   ; preds = %2891
  br label %2900

; <label>:2900:                                   ; preds = %._crit_edge504, %2872
  %2901 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2902 = sext i32 %2873 to i64
  %2903 = getelementptr inbounds [16 x i32], [16 x i32]* %2901, i64 0, i64 %2902
  %2904 = load i32, i32* %2903, align 4
  %2905 = add nsw i32 %2904, 1
  store i32 %2905, i32* %2903, align 4
  %2906 = icmp sgt i32 %2873, 0
  br i1 %2906, label %.lr.ph497, label %2928

.lr.ph497:                                        ; preds = %2900
  br label %2907

; <label>:2907:                                   ; preds = %.lr.ph497, %2907
  %indvars.iv499 = phi i64 [ %2876, %.lr.ph497 ], [ %indvars.iv.next500, %2907 ]
  call void @unroll_loop(i32 131)
  %2908 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2909 = getelementptr inbounds [16 x i32], [16 x i32]* %2908, i64 0, i64 %indvars.iv499
  %2910 = load i32, i32* %2909, align 4
  %2911 = add nsw i32 %2910, -1
  store i32 %2911, i32* %2909, align 4
  %2912 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2913 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %indvars.iv.next500 = add nsw i64 %indvars.iv499, -1
  %2914 = getelementptr inbounds [16 x i32], [16 x i32]* %2913, i64 0, i64 %indvars.iv.next500
  %2915 = load i32, i32* %2914, align 4
  %2916 = add nsw i32 %2915, 16
  %2917 = sub nsw i32 %2916, 1
  %2918 = sext i32 %2917 to i64
  %2919 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2912, i64 0, i64 %2918
  %2920 = load i8, i8* %2919, align 1
  %2921 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2922 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2923 = getelementptr inbounds [16 x i32], [16 x i32]* %2922, i64 0, i64 %indvars.iv499
  %2924 = load i32, i32* %2923, align 4
  %2925 = sext i32 %2924 to i64
  %2926 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2921, i64 0, i64 %2925
  store i8 %2920, i8* %2926, align 1
  %2927 = icmp sgt i64 %indvars.iv.next500, 0
  br i1 %2927, label %2907, label %._crit_edge498

._crit_edge498:                                   ; preds = %2907
  br label %2928

; <label>:2928:                                   ; preds = %._crit_edge498, %2900
  %2929 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2930 = getelementptr inbounds [16 x i32], [16 x i32]* %2929, i64 0, i64 0
  %2931 = load i32, i32* %2930, align 4
  %2932 = add nsw i32 %2931, -1
  store i32 %2932, i32* %2930, align 4
  %2933 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2934 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2935 = getelementptr inbounds [16 x i32], [16 x i32]* %2934, i64 0, i64 0
  %2936 = load i32, i32* %2935, align 4
  %2937 = sext i32 %2936 to i64
  %2938 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2933, i64 0, i64 %2937
  store i8 %2883, i8* %2938, align 1
  %2939 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2940 = getelementptr inbounds [16 x i32], [16 x i32]* %2939, i64 0, i64 0
  %2941 = load i32, i32* %2940, align 4
  %2942 = icmp eq i32 %2941, 0
  br i1 %2942, label %2943, label %2968

; <label>:2943:                                   ; preds = %2928
  br label %2944

; <label>:2944:                                   ; preds = %2943, %2965
  %indvars.iv493 = phi i64 [ 15, %2943 ], [ %indvars.iv.next494, %2965 ]
  %indvars.iv491 = phi i64 [ 4095, %2943 ], [ %indvars.iv.next492, %2965 ]
  call void @unroll_loop(i32 132)
  br label %2945

; <label>:2945:                                   ; preds = %2944, %2956
  %indvars.iv487 = phi i64 [ %indvars.iv491, %2944 ], [ %indvars.iv.next488, %2956 ]
  %.0359485 = phi i32 [ 15, %2944 ], [ %2957, %2956 ]
  call void @unroll_loop(i32 133)
  %2946 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2947 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2948 = getelementptr inbounds [16 x i32], [16 x i32]* %2947, i64 0, i64 %indvars.iv493
  %2949 = load i32, i32* %2948, align 4
  %2950 = add nsw i32 %2949, %.0359485
  %2951 = sext i32 %2950 to i64
  %2952 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2946, i64 0, i64 %2951
  %2953 = load i8, i8* %2952, align 1
  %2954 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2955 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2954, i64 0, i64 %indvars.iv487
  store i8 %2953, i8* %2955, align 1
  %indvars.iv.next488 = add nsw i64 %indvars.iv487, -1
  br label %2956

; <label>:2956:                                   ; preds = %2945
  %2957 = add nsw i32 %.0359485, -1
  %2958 = icmp sge i32 %2957, 0
  br i1 %2958, label %2945, label %2959

; <label>:2959:                                   ; preds = %2956
  %2960 = add nsw i64 %indvars.iv491, -16
  %2961 = trunc i64 %2960 to i32
  %2962 = add nsw i32 %2961, 1
  %2963 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2964 = getelementptr inbounds [16 x i32], [16 x i32]* %2963, i64 0, i64 %indvars.iv493
  store i32 %2962, i32* %2964, align 4
  br label %2965

; <label>:2965:                                   ; preds = %2959
  %indvars.iv.next494 = add nsw i64 %indvars.iv493, -1
  %2966 = icmp sge i64 %indvars.iv.next494, 0
  %indvars.iv.next492 = add nsw i64 %indvars.iv491, -16
  br i1 %2966, label %2944, label %2967

; <label>:2967:                                   ; preds = %2965
  br label %2968

; <label>:2968:                                   ; preds = %2967, %2928
  br label %2969

; <label>:2969:                                   ; preds = %2968, %2868
  %.02 = phi i8 [ %2804, %2868 ], [ %2883, %2968 ]
  %2970 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 16
  %2971 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %2972 = zext i8 %.02 to i64
  %2973 = getelementptr inbounds [256 x i8], [256 x i8]* %2971, i64 0, i64 %2972
  %2974 = load i8, i8* %2973, align 1
  %2975 = zext i8 %2974 to i64
  %2976 = getelementptr inbounds [256 x i32], [256 x i32]* %2970, i64 0, i64 %2975
  %2977 = load i32, i32* %2976, align 4
  %2978 = add nsw i32 %2977, 1
  store i32 %2978, i32* %2976, align 4
  %2979 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 10
  %2980 = load i8, i8* %2979, align 4
  %2981 = icmp ne i8 %2980, 0
  br i1 %2981, label %2982, label %2992

; <label>:2982:                                   ; preds = %2969
  %2983 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %2984 = zext i8 %.02 to i64
  %2985 = getelementptr inbounds [256 x i8], [256 x i8]* %2983, i64 0, i64 %2984
  %2986 = load i8, i8* %2985, align 1
  %2987 = zext i8 %2986 to i16
  %2988 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %2989 = load i16*, i16** %2988, align 8
  %2990 = sext i32 %.3193 to i64
  %2991 = getelementptr inbounds i16, i16* %2989, i64 %2990
  store i16 %2987, i16* %2991, align 2
  br label %3002

; <label>:2992:                                   ; preds = %2969
  %2993 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %2994 = zext i8 %.02 to i64
  %2995 = getelementptr inbounds [256 x i8], [256 x i8]* %2993, i64 0, i64 %2994
  %2996 = load i8, i8* %2995, align 1
  %2997 = zext i8 %2996 to i32
  %2998 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %2999 = load i32*, i32** %2998, align 8
  %3000 = sext i32 %.3193 to i64
  %3001 = getelementptr inbounds i32, i32* %2999, i64 %3000
  store i32 %2997, i32* %3001, align 4
  br label %3002

; <label>:3002:                                   ; preds = %2992, %2982
  %3003 = add nsw i32 %.3193, 1
  %3004 = icmp eq i32 %.4158, 0
  br i1 %3004, label %3005, label %3031

; <label>:3005:                                   ; preds = %3002
  %3006 = add nsw i32 %.4143, 1
  %3007 = icmp sge i32 %3006, %.12118
  br i1 %3007, label %3008, label %3009

; <label>:3008:                                   ; preds = %3005
  br label %4378

; <label>:3009:                                   ; preds = %3005
  %3010 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 33
  %3011 = sext i32 %3006 to i64
  %3012 = getelementptr inbounds [18002 x i8], [18002 x i8]* %3010, i64 0, i64 %3011
  %3013 = load i8, i8* %3012, align 1
  %3014 = zext i8 %3013 to i32
  %3015 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 39
  %3016 = sext i32 %3014 to i64
  %3017 = getelementptr inbounds [6 x i32], [6 x i32]* %3015, i64 0, i64 %3016
  %3018 = load i32, i32* %3017, align 4
  %3019 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 36
  %3020 = sext i32 %3014 to i64
  %3021 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3019, i64 0, i64 %3020
  %3022 = getelementptr inbounds [258 x i32], [258 x i32]* %3021, i64 0, i64 0
  %3023 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 38
  %3024 = sext i32 %3014 to i64
  %3025 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3023, i64 0, i64 %3024
  %3026 = getelementptr inbounds [258 x i32], [258 x i32]* %3025, i64 0, i64 0
  %3027 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 37
  %3028 = sext i32 %3014 to i64
  %3029 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %3027, i64 0, i64 %3028
  %3030 = getelementptr inbounds [258 x i32], [258 x i32]* %3029, i64 0, i64 0
  br label %3031

; <label>:3031:                                   ; preds = %3009, %3002
  %.10352 = phi i32* [ %3026, %3009 ], [ %.4346, %3002 ]
  %.10337 = phi i32* [ %3030, %3009 ], [ %.4331, %3002 ]
  %.10322 = phi i32* [ %3022, %3009 ], [ %.4316, %3002 ]
  %.10307 = phi i32 [ %3018, %3009 ], [ %.4301, %3002 ]
  %.10292 = phi i32 [ %3014, %3009 ], [ %.4286, %3002 ]
  %.10164 = phi i32 [ 50, %3009 ], [ %.4158, %3002 ]
  %.10149 = phi i32 [ %3006, %3009 ], [ %.4143, %3002 ]
  %3032 = add nsw i32 %.10164, -1
  br label %3033

; <label>:3033:                                   ; preds = %33, %3031
  %.11353 = phi i32* [ %.10352, %3031 ], [ %81, %33 ]
  %.11338 = phi i32* [ %.10337, %3031 ], [ %79, %33 ]
  %.11323 = phi i32* [ %.10322, %3031 ], [ %77, %33 ]
  %.11308 = phi i32 [ %.10307, %3031 ], [ %75, %33 ]
  %.11293 = phi i32 [ %.10292, %3031 ], [ %73, %33 ]
  %.7278 = phi i32 [ %.2273, %3031 ], [ %71, %33 ]
  %.7267 = phi i32 [ %.2262, %3031 ], [ %69, %33 ]
  %.8256 = phi i32 [ %.10307, %3031 ], [ %67, %33 ]
  %.15243 = phi i32 [ %.10238, %3031 ], [ %63, %33 ]
  %.5224 = phi i32 [ %.0219, %3031 ], [ %61, %33 ]
  %.10215 = phi i32 [ %.0205, %3031 ], [ %59, %33 ]
  %.11201 = phi i32 [ %3003, %3031 ], [ %57, %33 ]
  %.8186 = phi i32 [ %.3181, %3031 ], [ %55, %33 ]
  %.5174 = phi i32 [ %.0169, %3031 ], [ %53, %33 ]
  %.11165 = phi i32 [ %3032, %3031 ], [ %51, %33 ]
  %.11150 = phi i32 [ %.10149, %3031 ], [ %49, %33 ]
  %.8135 = phi i32 [ %.3130, %3031 ], [ %47, %33 ]
  %.17123 = phi i32 [ %.12118, %3031 ], [ %45, %33 ]
  %.18102 = phi i32 [ %.1397, %3031 ], [ %43, %33 ]
  %.1980 = phi i32 [ %.1475, %3031 ], [ %41, %33 ]
  %.1557 = phi i32 [ %.1052, %3031 ], [ %39, %33 ]
  %.2336 = phi i32 [ %.1831, %3031 ], [ %37, %33 ]
  %.29 = phi i32 [ %.24, %3031 ], [ %35, %33 ]
  %3034 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 40, i32* %3034, align 8
  %3035 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3036 = load i32, i32* %3035, align 4
  %3037 = icmp sge i32 %3036, %.8256
  br i1 %3037, label %3038, label %.lr.ph472

.lr.ph472:                                        ; preds = %3033
  br label %3051

._crit_edge473:                                   ; preds = %3099
  br label %3038

; <label>:3038:                                   ; preds = %._crit_edge473, %3033
  %3039 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3040 = load i32, i32* %3039, align 8
  %3041 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3042 = load i32, i32* %3041, align 4
  %3043 = sub nsw i32 %3042, %.8256
  %3044 = lshr i32 %3040, %3043
  %3045 = shl i32 1, %.8256
  %3046 = sub nsw i32 %3045, 1
  %3047 = and i32 %3044, %3046
  %3048 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3049 = load i32, i32* %3048, align 4
  %3050 = sub nsw i32 %3049, %.8256
  store i32 %3050, i32* %3048, align 4
  br label %3102

; <label>:3051:                                   ; preds = %.lr.ph472, %3099
  call void @unroll_loop(i32 134)
  %3052 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3053 = load %struct.bz_stream*, %struct.bz_stream** %3052, align 8
  %3054 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3053, i32 0, i32 1
  %3055 = load i32, i32* %3054, align 8
  %3056 = icmp eq i32 %3055, 0
  br i1 %3056, label %3057, label %3058

; <label>:3057:                                   ; preds = %3051
  br label %4378

; <label>:3058:                                   ; preds = %3051
  %3059 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3060 = load i32, i32* %3059, align 8
  %3061 = shl i32 %3060, 8
  %3062 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3063 = load %struct.bz_stream*, %struct.bz_stream** %3062, align 8
  %3064 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3063, i32 0, i32 0
  %3065 = load i8*, i8** %3064, align 8
  %3066 = load i8, i8* %3065, align 1
  %3067 = zext i8 %3066 to i32
  %3068 = or i32 %3061, %3067
  %3069 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %3068, i32* %3069, align 8
  %3070 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3071 = load i32, i32* %3070, align 4
  %3072 = add nsw i32 %3071, 8
  store i32 %3072, i32* %3070, align 4
  %3073 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3074 = load %struct.bz_stream*, %struct.bz_stream** %3073, align 8
  %3075 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3074, i32 0, i32 0
  %3076 = load i8*, i8** %3075, align 8
  %3077 = getelementptr inbounds i8, i8* %3076, i32 1
  store i8* %3077, i8** %3075, align 8
  %3078 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3079 = load %struct.bz_stream*, %struct.bz_stream** %3078, align 8
  %3080 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3079, i32 0, i32 1
  %3081 = load i32, i32* %3080, align 8
  %3082 = add i32 %3081, -1
  store i32 %3082, i32* %3080, align 8
  %3083 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3084 = load %struct.bz_stream*, %struct.bz_stream** %3083, align 8
  %3085 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3084, i32 0, i32 2
  %3086 = load i32, i32* %3085, align 4
  %3087 = add i32 %3086, 1
  store i32 %3087, i32* %3085, align 4
  %3088 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3089 = load %struct.bz_stream*, %struct.bz_stream** %3088, align 8
  %3090 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3089, i32 0, i32 2
  %3091 = load i32, i32* %3090, align 4
  %3092 = icmp eq i32 %3091, 0
  br i1 %3092, label %3093, label %3099

; <label>:3093:                                   ; preds = %3058
  %3094 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3095 = load %struct.bz_stream*, %struct.bz_stream** %3094, align 8
  %3096 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3095, i32 0, i32 3
  %3097 = load i32, i32* %3096, align 8
  %3098 = add i32 %3097, 1
  store i32 %3098, i32* %3096, align 8
  br label %3099

; <label>:3099:                                   ; preds = %3093, %3058
  %3100 = load i32, i32* %3035, align 4
  %3101 = icmp sge i32 %3100, %.8256
  br i1 %3101, label %._crit_edge473, label %3051

; <label>:3102:                                   ; preds = %3038
  br label %3103

; <label>:3103:                                   ; preds = %3102, %3181
  %.12354 = phi i32* [ %.13355, %3181 ], [ %.11353, %3102 ]
  %.12339 = phi i32* [ %.13340, %3181 ], [ %.11338, %3102 ]
  %.12324 = phi i32* [ %.13325, %3181 ], [ %.11323, %3102 ]
  %.12309 = phi i32 [ %.13310, %3181 ], [ %.11308, %3102 ]
  %.12294 = phi i32 [ %.13295, %3181 ], [ %.11293, %3102 ]
  %.8279 = phi i32 [ %3126, %3181 ], [ %.7278, %3102 ]
  %.8268 = phi i32 [ %3183, %3181 ], [ %3047, %3102 ]
  %.9257 = phi i32 [ %.10258, %3181 ], [ %.8256, %3102 ]
  %.16244 = phi i32 [ %.17245, %3181 ], [ %.15243, %3102 ]
  %.6225 = phi i32 [ %.7226, %3181 ], [ %.5224, %3102 ]
  %.11216 = phi i32 [ %.12217, %3181 ], [ %.10215, %3102 ]
  %.12202 = phi i32 [ %.13203, %3181 ], [ %.11201, %3102 ]
  %.9187 = phi i32 [ %.10188, %3181 ], [ %.8186, %3102 ]
  %.6175 = phi i32 [ %.7176, %3181 ], [ %.5174, %3102 ]
  %.12166 = phi i32 [ %.13167, %3181 ], [ %.11165, %3102 ]
  %.12151 = phi i32 [ %.13152, %3181 ], [ %.11150, %3102 ]
  %.9136 = phi i32 [ %.10137, %3181 ], [ %.8135, %3102 ]
  %.18124 = phi i32 [ %.19125, %3181 ], [ %.17123, %3102 ]
  %.19103 = phi i32 [ %.20104, %3181 ], [ %.18102, %3102 ]
  %.2081 = phi i32 [ %.2182, %3181 ], [ %.1980, %3102 ]
  %.1658 = phi i32 [ %.1759, %3181 ], [ %.1557, %3102 ]
  %.2437 = phi i32 [ %.2538, %3181 ], [ %.2336, %3102 ]
  %.30 = phi i32 [ %.31, %3181 ], [ %.29, %3102 ]
  %3104 = icmp sgt i32 %.9257, 20
  br i1 %3104, label %3105, label %3106

; <label>:3105:                                   ; preds = %3103
  br label %4378

; <label>:3106:                                   ; preds = %3103
  %3107 = sext i32 %.9257 to i64
  %3108 = getelementptr inbounds i32, i32* %.12324, i64 %3107
  %3109 = load i32, i32* %3108, align 4
  %3110 = icmp sle i32 %.8268, %3109
  br i1 %3110, label %3111, label %3112

; <label>:3111:                                   ; preds = %3106
  br label %3184

; <label>:3112:                                   ; preds = %3106
  %3113 = add nsw i32 %.9257, 1
  br label %3114

; <label>:3114:                                   ; preds = %33, %3112
  %.13355 = phi i32* [ %81, %33 ], [ %.12354, %3112 ]
  %.13340 = phi i32* [ %79, %33 ], [ %.12339, %3112 ]
  %.13325 = phi i32* [ %77, %33 ], [ %.12324, %3112 ]
  %.13310 = phi i32 [ %75, %33 ], [ %.12309, %3112 ]
  %.13295 = phi i32 [ %73, %33 ], [ %.12294, %3112 ]
  %.9280 = phi i32 [ %71, %33 ], [ %.8279, %3112 ]
  %.9269 = phi i32 [ %69, %33 ], [ %.8268, %3112 ]
  %.10258 = phi i32 [ %67, %33 ], [ %3113, %3112 ]
  %.17245 = phi i32 [ %63, %33 ], [ %.16244, %3112 ]
  %.7226 = phi i32 [ %61, %33 ], [ %.6225, %3112 ]
  %.12217 = phi i32 [ %59, %33 ], [ %.11216, %3112 ]
  %.13203 = phi i32 [ %57, %33 ], [ %.12202, %3112 ]
  %.10188 = phi i32 [ %55, %33 ], [ %.9187, %3112 ]
  %.7176 = phi i32 [ %53, %33 ], [ %.6175, %3112 ]
  %.13167 = phi i32 [ %51, %33 ], [ %.12166, %3112 ]
  %.13152 = phi i32 [ %49, %33 ], [ %.12151, %3112 ]
  %.10137 = phi i32 [ %47, %33 ], [ %.9136, %3112 ]
  %.19125 = phi i32 [ %45, %33 ], [ %.18124, %3112 ]
  %.20104 = phi i32 [ %43, %33 ], [ %.19103, %3112 ]
  %.2182 = phi i32 [ %41, %33 ], [ %.2081, %3112 ]
  %.1759 = phi i32 [ %39, %33 ], [ %.1658, %3112 ]
  %.2538 = phi i32 [ %37, %33 ], [ %.2437, %3112 ]
  %.31 = phi i32 [ %35, %33 ], [ %.30, %3112 ]
  %3115 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 41, i32* %3115, align 8
  %3116 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3117 = load i32, i32* %3116, align 4
  %3118 = icmp sge i32 %3117, 1
  br i1 %3118, label %3119, label %.lr.ph469

.lr.ph469:                                        ; preds = %3114
  br label %3130

._crit_edge470:                                   ; preds = %3178
  br label %3119

; <label>:3119:                                   ; preds = %._crit_edge470, %3114
  %3120 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3121 = load i32, i32* %3120, align 8
  %3122 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3123 = load i32, i32* %3122, align 4
  %3124 = sub nsw i32 %3123, 1
  %3125 = lshr i32 %3121, %3124
  %3126 = and i32 %3125, 1
  %3127 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3128 = load i32, i32* %3127, align 4
  %3129 = sub nsw i32 %3128, 1
  store i32 %3129, i32* %3127, align 4
  br label %3181

; <label>:3130:                                   ; preds = %.lr.ph469, %3178
  call void @unroll_loop(i32 135)
  %3131 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3132 = load %struct.bz_stream*, %struct.bz_stream** %3131, align 8
  %3133 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3132, i32 0, i32 1
  %3134 = load i32, i32* %3133, align 8
  %3135 = icmp eq i32 %3134, 0
  br i1 %3135, label %3136, label %3137

; <label>:3136:                                   ; preds = %3130
  br label %4378

; <label>:3137:                                   ; preds = %3130
  %3138 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3139 = load i32, i32* %3138, align 8
  %3140 = shl i32 %3139, 8
  %3141 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3142 = load %struct.bz_stream*, %struct.bz_stream** %3141, align 8
  %3143 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3142, i32 0, i32 0
  %3144 = load i8*, i8** %3143, align 8
  %3145 = load i8, i8* %3144, align 1
  %3146 = zext i8 %3145 to i32
  %3147 = or i32 %3140, %3146
  %3148 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %3147, i32* %3148, align 8
  %3149 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3150 = load i32, i32* %3149, align 4
  %3151 = add nsw i32 %3150, 8
  store i32 %3151, i32* %3149, align 4
  %3152 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3153 = load %struct.bz_stream*, %struct.bz_stream** %3152, align 8
  %3154 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3153, i32 0, i32 0
  %3155 = load i8*, i8** %3154, align 8
  %3156 = getelementptr inbounds i8, i8* %3155, i32 1
  store i8* %3156, i8** %3154, align 8
  %3157 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3158 = load %struct.bz_stream*, %struct.bz_stream** %3157, align 8
  %3159 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3158, i32 0, i32 1
  %3160 = load i32, i32* %3159, align 8
  %3161 = add i32 %3160, -1
  store i32 %3161, i32* %3159, align 8
  %3162 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3163 = load %struct.bz_stream*, %struct.bz_stream** %3162, align 8
  %3164 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3163, i32 0, i32 2
  %3165 = load i32, i32* %3164, align 4
  %3166 = add i32 %3165, 1
  store i32 %3166, i32* %3164, align 4
  %3167 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3168 = load %struct.bz_stream*, %struct.bz_stream** %3167, align 8
  %3169 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3168, i32 0, i32 2
  %3170 = load i32, i32* %3169, align 4
  %3171 = icmp eq i32 %3170, 0
  br i1 %3171, label %3172, label %3178

; <label>:3172:                                   ; preds = %3137
  %3173 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3174 = load %struct.bz_stream*, %struct.bz_stream** %3173, align 8
  %3175 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3174, i32 0, i32 3
  %3176 = load i32, i32* %3175, align 8
  %3177 = add i32 %3176, 1
  store i32 %3177, i32* %3175, align 8
  br label %3178

; <label>:3178:                                   ; preds = %3172, %3137
  %3179 = load i32, i32* %3116, align 4
  %3180 = icmp sge i32 %3179, 1
  br i1 %3180, label %._crit_edge470, label %3130

; <label>:3181:                                   ; preds = %3119
  %3182 = shl i32 %.9269, 1
  %3183 = or i32 %3182, %3126
  br label %3103

; <label>:3184:                                   ; preds = %3111
  %3185 = sext i32 %.9257 to i64
  %3186 = getelementptr inbounds i32, i32* %.12339, i64 %3185
  %3187 = load i32, i32* %3186, align 4
  %3188 = sub nsw i32 %.8268, %3187
  %3189 = icmp slt i32 %3188, 0
  br i1 %3189, label %3196, label %3190

; <label>:3190:                                   ; preds = %3184
  %3191 = sext i32 %.9257 to i64
  %3192 = getelementptr inbounds i32, i32* %.12339, i64 %3191
  %3193 = load i32, i32* %3192, align 4
  %3194 = sub nsw i32 %.8268, %3193
  %3195 = icmp sge i32 %3194, 258
  br i1 %3195, label %3196, label %3197

; <label>:3196:                                   ; preds = %3190, %3184
  br label %4378

; <label>:3197:                                   ; preds = %3190
  %3198 = sext i32 %.9257 to i64
  %3199 = getelementptr inbounds i32, i32* %.12339, i64 %3198
  %3200 = load i32, i32* %3199, align 4
  %3201 = sub nsw i32 %.8268, %3200
  %3202 = sext i32 %3201 to i64
  %3203 = getelementptr inbounds i32, i32* %.12354, i64 %3202
  %3204 = load i32, i32* %3203, align 4
  br label %2506

; <label>:3205:                                   ; preds = %2508
  %3206 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3207 = load i32, i32* %3206, align 8
  %3208 = icmp slt i32 %3207, 0
  br i1 %3208, label %3213, label %3209

; <label>:3209:                                   ; preds = %3205
  %3210 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3211 = load i32, i32* %3210, align 8
  %3212 = icmp sge i32 %3211, %.3193
  br i1 %3212, label %3213, label %3214

; <label>:3213:                                   ; preds = %3209, %3205
  br label %4378

; <label>:3214:                                   ; preds = %3209
  %3215 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3216 = getelementptr inbounds [257 x i32], [257 x i32]* %3215, i64 0, i64 0
  store i32 0, i32* %3216, align 8
  br label %3217

; <label>:3217:                                   ; preds = %3214, %3224
  %indvars.iv438 = phi i64 [ 1, %3214 ], [ %indvars.iv.next439, %3224 ]
  call void @unroll_loop(i32 136)
  %3218 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 16
  %3219 = sub nuw nsw i64 %indvars.iv438, 1
  %3220 = getelementptr inbounds [256 x i32], [256 x i32]* %3218, i64 0, i64 %3219
  %3221 = load i32, i32* %3220, align 4
  %3222 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3223 = getelementptr inbounds [257 x i32], [257 x i32]* %3222, i64 0, i64 %indvars.iv438
  store i32 %3221, i32* %3223, align 4
  br label %3224

; <label>:3224:                                   ; preds = %3217
  %indvars.iv.next439 = add nuw nsw i64 %indvars.iv438, 1
  %exitcond440 = icmp ne i64 %indvars.iv.next439, 257
  br i1 %exitcond440, label %3217, label %3225

; <label>:3225:                                   ; preds = %3224
  br label %3226

; <label>:3226:                                   ; preds = %3225, %3235
  %indvars.iv434 = phi i64 [ 1, %3225 ], [ %indvars.iv.next435, %3235 ]
  call void @unroll_loop(i32 137)
  %3227 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3228 = sub nuw nsw i64 %indvars.iv434, 1
  %3229 = getelementptr inbounds [257 x i32], [257 x i32]* %3227, i64 0, i64 %3228
  %3230 = load i32, i32* %3229, align 4
  %3231 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3232 = getelementptr inbounds [257 x i32], [257 x i32]* %3231, i64 0, i64 %indvars.iv434
  %3233 = load i32, i32* %3232, align 4
  %3234 = add nsw i32 %3233, %3230
  store i32 %3234, i32* %3232, align 4
  br label %3235

; <label>:3235:                                   ; preds = %3226
  %indvars.iv.next435 = add nuw nsw i64 %indvars.iv434, 1
  %exitcond436 = icmp ne i64 %indvars.iv.next435, 257
  br i1 %exitcond436, label %3226, label %3236

; <label>:3236:                                   ; preds = %3235
  br label %3237

; <label>:3237:                                   ; preds = %3236, %3250
  %indvars.iv431 = phi i64 [ 0, %3236 ], [ %indvars.iv.next432, %3250 ]
  call void @unroll_loop(i32 138)
  %3238 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3239 = getelementptr inbounds [257 x i32], [257 x i32]* %3238, i64 0, i64 %indvars.iv431
  %3240 = load i32, i32* %3239, align 4
  %3241 = icmp slt i32 %3240, 0
  %3242 = trunc i64 %indvars.iv431 to i32
  br i1 %3241, label %3248, label %3243

; <label>:3243:                                   ; preds = %3237
  %3244 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3245 = getelementptr inbounds [257 x i32], [257 x i32]* %3244, i64 0, i64 %indvars.iv431
  %3246 = load i32, i32* %3245, align 4
  %3247 = icmp sgt i32 %3246, %.3193
  br i1 %3247, label %3248, label %3249

; <label>:3248:                                   ; preds = %3243, %3237
  %.34.lcssa367 = phi i32 [ %3242, %3243 ], [ %3242, %3237 ]
  br label %4378

; <label>:3249:                                   ; preds = %3243
  br label %3250

; <label>:3250:                                   ; preds = %3249
  %indvars.iv.next432 = add nuw nsw i64 %indvars.iv431, 1
  %3251 = icmp ule i64 %indvars.iv.next432, 256
  br i1 %3251, label %3237, label %3252

; <label>:3252:                                   ; preds = %3250
  %3253 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 0, i32* %3253, align 8
  %3254 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  store i8 0, i8* %3254, align 4
  %3255 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  store i32 -1, i32* %3255, align 8
  %3256 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 2, i32* %3256, align 8
  %3257 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 12
  %3258 = load i32, i32* %3257, align 4
  %3259 = icmp sge i32 %3258, 2
  br i1 %3259, label %3260, label %3264

; <label>:3260:                                   ; preds = %3252
  %3261 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3262 = getelementptr [7 x i8], [7 x i8]* @.str.1.161, i32 0, i32 0
  %3263 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3261, i8* %3262)
  br label %3264

; <label>:3264:                                   ; preds = %3260, %3252
  %3265 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 10
  %3266 = load i8, i8* %3265, align 4
  %3267 = icmp ne i8 %3266, 0
  br i1 %3267, label %3268, label %3570

; <label>:3268:                                   ; preds = %3264
  br label %3269

; <label>:3269:                                   ; preds = %3268, %3275
  %indvars.iv419 = phi i64 [ 0, %3268 ], [ %indvars.iv.next420, %3275 ]
  call void @unroll_loop(i32 139)
  %3270 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3271 = getelementptr inbounds [257 x i32], [257 x i32]* %3270, i64 0, i64 %indvars.iv419
  %3272 = load i32, i32* %3271, align 4
  %3273 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %3274 = getelementptr inbounds [257 x i32], [257 x i32]* %3273, i64 0, i64 %indvars.iv419
  store i32 %3272, i32* %3274, align 4
  br label %3275

; <label>:3275:                                   ; preds = %3269
  %indvars.iv.next420 = add nuw nsw i64 %indvars.iv419, 1
  %exitcond421 = icmp ne i64 %indvars.iv.next420, 257
  br i1 %exitcond421, label %3269, label %3276

; <label>:3276:                                   ; preds = %3275
  %3277 = icmp slt i32 0, %.3193
  br i1 %3277, label %.lr.ph416, label %3350

.lr.ph416:                                        ; preds = %3276
  br label %3278

; <label>:3278:                                   ; preds = %.lr.ph416, %3349
  %indvars.iv = phi i64 [ 0, %.lr.ph416 ], [ %indvars.iv.next, %3349 ]
  call void @unroll_loop(i32 140)
  %3279 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3280 = load i16*, i16** %3279, align 8
  %3281 = getelementptr inbounds i16, i16* %3280, i64 %indvars.iv
  %3282 = load i16, i16* %3281, align 2
  %3283 = trunc i16 %3282 to i8
  %3284 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %3285 = zext i8 %3283 to i64
  %3286 = getelementptr inbounds [257 x i32], [257 x i32]* %3284, i64 0, i64 %3285
  %3287 = load i32, i32* %3286, align 4
  %3288 = and i32 %3287, 65535
  %3289 = trunc i32 %3288 to i16
  %3290 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3291 = load i16*, i16** %3290, align 8
  %3292 = getelementptr inbounds i16, i16* %3291, i64 %indvars.iv
  store i16 %3289, i16* %3292, align 2
  %3293 = trunc i64 %indvars.iv to i32
  %3294 = and i32 %3293, 1
  %3295 = icmp eq i32 %3294, 0
  br i1 %3295, label %3296, label %3319

; <label>:3296:                                   ; preds = %3278
  %3297 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3298 = load i8*, i8** %3297, align 8
  %3299 = trunc i64 %indvars.iv to i32
  %3300 = ashr i32 %3299, 1
  %3301 = sext i32 %3300 to i64
  %3302 = getelementptr inbounds i8, i8* %3298, i64 %3301
  %3303 = load i8, i8* %3302, align 1
  %3304 = zext i8 %3303 to i32
  %3305 = and i32 %3304, 240
  %3306 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %3307 = zext i8 %3283 to i64
  %3308 = getelementptr inbounds [257 x i32], [257 x i32]* %3306, i64 0, i64 %3307
  %3309 = load i32, i32* %3308, align 4
  %3310 = ashr i32 %3309, 16
  %3311 = or i32 %3305, %3310
  %3312 = trunc i32 %3311 to i8
  %3313 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3314 = load i8*, i8** %3313, align 8
  %3315 = trunc i64 %indvars.iv to i32
  %3316 = ashr i32 %3315, 1
  %3317 = sext i32 %3316 to i64
  %3318 = getelementptr inbounds i8, i8* %3314, i64 %3317
  store i8 %3312, i8* %3318, align 1
  br label %3343

; <label>:3319:                                   ; preds = %3278
  %3320 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3321 = load i8*, i8** %3320, align 8
  %3322 = trunc i64 %indvars.iv to i32
  %3323 = ashr i32 %3322, 1
  %3324 = sext i32 %3323 to i64
  %3325 = getelementptr inbounds i8, i8* %3321, i64 %3324
  %3326 = load i8, i8* %3325, align 1
  %3327 = zext i8 %3326 to i32
  %3328 = and i32 %3327, 15
  %3329 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %3330 = zext i8 %3283 to i64
  %3331 = getelementptr inbounds [257 x i32], [257 x i32]* %3329, i64 0, i64 %3330
  %3332 = load i32, i32* %3331, align 4
  %3333 = ashr i32 %3332, 16
  %3334 = shl i32 %3333, 4
  %3335 = or i32 %3328, %3334
  %3336 = trunc i32 %3335 to i8
  %3337 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3338 = load i8*, i8** %3337, align 8
  %3339 = trunc i64 %indvars.iv to i32
  %3340 = ashr i32 %3339, 1
  %3341 = sext i32 %3340 to i64
  %3342 = getelementptr inbounds i8, i8* %3338, i64 %3341
  store i8 %3336, i8* %3342, align 1
  br label %3343

; <label>:3343:                                   ; preds = %3319, %3296
  %3344 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %3345 = zext i8 %3283 to i64
  %3346 = getelementptr inbounds [257 x i32], [257 x i32]* %3344, i64 0, i64 %3345
  %3347 = load i32, i32* %3346, align 4
  %3348 = add nsw i32 %3347, 1
  store i32 %3348, i32* %3346, align 4
  br label %3349

; <label>:3349:                                   ; preds = %3343
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %wide.trip.count = zext i32 %.3193 to i64
  %exitcond = icmp ne i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %3278, label %._crit_edge417

._crit_edge417:                                   ; preds = %3349
  br label %3350

; <label>:3350:                                   ; preds = %._crit_edge417, %3276
  %3351 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3352 = load i32, i32* %3351, align 8
  %3353 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3354 = load i16*, i16** %3353, align 8
  %3355 = sext i32 %3352 to i64
  %3356 = getelementptr inbounds i16, i16* %3354, i64 %3355
  %3357 = load i16, i16* %3356, align 2
  %3358 = zext i16 %3357 to i32
  %3359 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3360 = load i8*, i8** %3359, align 8
  %3361 = ashr i32 %3352, 1
  %3362 = sext i32 %3361 to i64
  %3363 = getelementptr inbounds i8, i8* %3360, i64 %3362
  %3364 = load i8, i8* %3363, align 1
  %3365 = zext i8 %3364 to i32
  %3366 = shl i32 %3352, 2
  %3367 = and i32 %3366, 4
  %3368 = lshr i32 %3365, %3367
  %3369 = and i32 %3368, 15
  %3370 = shl i32 %3369, 16
  %3371 = or i32 %3358, %3370
  %3372 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  br label %3373

; <label>:3373:                                   ; preds = %3437, %3350
  %.2639 = phi i32 [ %3371, %3350 ], [ %3392, %3437 ]
  %.37 = phi i32 [ %3352, %3350 ], [ %.2639, %3437 ]
  call void @unroll_loop(i32 141)
  %3374 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3375 = load i16*, i16** %3374, align 8
  %3376 = sext i32 %.2639 to i64
  %3377 = getelementptr inbounds i16, i16* %3375, i64 %3376
  %3378 = load i16, i16* %3377, align 2
  %3379 = zext i16 %3378 to i32
  %3380 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3381 = load i8*, i8** %3380, align 8
  %3382 = ashr i32 %.2639, 1
  %3383 = sext i32 %3382 to i64
  %3384 = getelementptr inbounds i8, i8* %3381, i64 %3383
  %3385 = load i8, i8* %3384, align 1
  %3386 = zext i8 %3385 to i32
  %3387 = shl i32 %.2639, 2
  %3388 = and i32 %3387, 4
  %3389 = lshr i32 %3386, %3388
  %3390 = and i32 %3389, 15
  %3391 = shl i32 %3390, 16
  %3392 = or i32 %3379, %3391
  %3393 = and i32 %.37, 65535
  %3394 = trunc i32 %3393 to i16
  %3395 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3396 = load i16*, i16** %3395, align 8
  %3397 = sext i32 %.2639 to i64
  %3398 = getelementptr inbounds i16, i16* %3396, i64 %3397
  store i16 %3394, i16* %3398, align 2
  %3399 = and i32 %.2639, 1
  %3400 = icmp eq i32 %3399, 0
  br i1 %3400, label %3401, label %3418

; <label>:3401:                                   ; preds = %3373
  %3402 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3403 = load i8*, i8** %3402, align 8
  %3404 = ashr i32 %.2639, 1
  %3405 = sext i32 %3404 to i64
  %3406 = getelementptr inbounds i8, i8* %3403, i64 %3405
  %3407 = load i8, i8* %3406, align 1
  %3408 = zext i8 %3407 to i32
  %3409 = and i32 %3408, 240
  %3410 = ashr i32 %.37, 16
  %3411 = or i32 %3409, %3410
  %3412 = trunc i32 %3411 to i8
  %3413 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3414 = load i8*, i8** %3413, align 8
  %3415 = ashr i32 %.2639, 1
  %3416 = sext i32 %3415 to i64
  %3417 = getelementptr inbounds i8, i8* %3414, i64 %3416
  store i8 %3412, i8* %3417, align 1
  br label %3436

; <label>:3418:                                   ; preds = %3373
  %3419 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3420 = load i8*, i8** %3419, align 8
  %3421 = ashr i32 %.2639, 1
  %3422 = sext i32 %3421 to i64
  %3423 = getelementptr inbounds i8, i8* %3420, i64 %3422
  %3424 = load i8, i8* %3423, align 1
  %3425 = zext i8 %3424 to i32
  %3426 = and i32 %3425, 15
  %3427 = ashr i32 %.37, 16
  %3428 = shl i32 %3427, 4
  %3429 = or i32 %3426, %3428
  %3430 = trunc i32 %3429 to i8
  %3431 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3432 = load i8*, i8** %3431, align 8
  %3433 = ashr i32 %.2639, 1
  %3434 = sext i32 %3433 to i64
  %3435 = getelementptr inbounds i8, i8* %3432, i64 %3434
  store i8 %3430, i8* %3435, align 1
  br label %3436

; <label>:3436:                                   ; preds = %3418, %3401
  br label %3437

; <label>:3437:                                   ; preds = %3436
  %3438 = load i32, i32* %3372, align 8
  %3439 = icmp ne i32 %.2639, %3438
  br i1 %3439, label %3373, label %3440

; <label>:3440:                                   ; preds = %3437
  %.2639.lcssa = phi i32 [ %.2639, %3437 ]
  %.lcssa = phi i32 [ %3392, %3437 ]
  %3441 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3442 = load i32, i32* %3441, align 8
  %3443 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3442, i32* %3443, align 4
  %3444 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  store i32 0, i32* %3444, align 4
  %3445 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %3446 = load i8, i8* %3445, align 4
  %3447 = icmp ne i8 %3446, 0
  br i1 %3447, label %3448, label %3525

; <label>:3448:                                   ; preds = %3440
  %3449 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 0, i32* %3449, align 8
  %3450 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %3450, align 4
  %3451 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3452 = load i32, i32* %3451, align 4
  %3453 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %3454 = load i32, i32* %3453, align 8
  %3455 = mul i32 100000, %3454
  %3456 = icmp uge i32 %3452, %3455
  br i1 %3456, label %3457, label %3458

; <label>:3457:                                   ; preds = %3448
  br label %4403

; <label>:3458:                                   ; preds = %3448
  %3459 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3460 = load i32, i32* %3459, align 4
  %3461 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3462 = getelementptr inbounds [257 x i32], [257 x i32]* %3461, i32 0, i32 0
  %3463 = call i32 @BZ2_indexIntoF(i32 %3460, i32* %3462)
  %3464 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %3463, i32* %3464, align 8
  %3465 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3466 = load i16*, i16** %3465, align 8
  %3467 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3468 = load i32, i32* %3467, align 4
  %3469 = zext i32 %3468 to i64
  %3470 = getelementptr inbounds i16, i16* %3466, i64 %3469
  %3471 = load i16, i16* %3470, align 2
  %3472 = zext i16 %3471 to i32
  %3473 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3474 = load i8*, i8** %3473, align 8
  %3475 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3476 = load i32, i32* %3475, align 4
  %3477 = lshr i32 %3476, 1
  %3478 = zext i32 %3477 to i64
  %3479 = getelementptr inbounds i8, i8* %3474, i64 %3478
  %3480 = load i8, i8* %3479, align 1
  %3481 = zext i8 %3480 to i32
  %3482 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3483 = load i32, i32* %3482, align 4
  %3484 = shl i32 %3483, 2
  %3485 = and i32 %3484, 4
  %3486 = lshr i32 %3481, %3485
  %3487 = and i32 %3486, 15
  %3488 = shl i32 %3487, 16
  %3489 = or i32 %3472, %3488
  %3490 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3489, i32* %3490, align 4
  %3491 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %3492 = load i32, i32* %3491, align 4
  %3493 = add nsw i32 %3492, 1
  store i32 %3493, i32* %3491, align 4
  %3494 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3495 = load i32, i32* %3494, align 8
  %3496 = icmp eq i32 %3495, 0
  br i1 %3496, label %3497, label %3513

; <label>:3497:                                   ; preds = %3458
  %3498 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3499 = load i32, i32* %3498, align 4
  %3500 = sext i32 %3499 to i64
  %3501 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %3500
  %3502 = load i32, i32* %3501, align 4
  %3503 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %3502, i32* %3503, align 8
  %3504 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3505 = load i32, i32* %3504, align 4
  %3506 = add nsw i32 %3505, 1
  store i32 %3506, i32* %3504, align 4
  %3507 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3508 = load i32, i32* %3507, align 4
  %3509 = icmp eq i32 %3508, 512
  br i1 %3509, label %3510, label %3512

; <label>:3510:                                   ; preds = %3497
  %3511 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %3511, align 4
  br label %3512

; <label>:3512:                                   ; preds = %3510, %3497
  br label %3513

; <label>:3513:                                   ; preds = %3512, %3458
  %3514 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3515 = load i32, i32* %3514, align 8
  %3516 = add nsw i32 %3515, -1
  store i32 %3516, i32* %3514, align 8
  %3517 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3518 = load i32, i32* %3517, align 8
  %3519 = icmp eq i32 %3518, 1
  %3520 = zext i1 %3519 to i64
  %3521 = select i1 %3519, i32 1, i32 0
  %3522 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %3523 = load i32, i32* %3522, align 8
  %3524 = xor i32 %3523, %3521
  store i32 %3524, i32* %3522, align 8
  br label %3569

; <label>:3525:                                   ; preds = %3440
  %3526 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3527 = load i32, i32* %3526, align 4
  %3528 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %3529 = load i32, i32* %3528, align 8
  %3530 = mul i32 100000, %3529
  %3531 = icmp uge i32 %3527, %3530
  br i1 %3531, label %3532, label %3533

; <label>:3532:                                   ; preds = %3525
  br label %4403

; <label>:3533:                                   ; preds = %3525
  %3534 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3535 = load i32, i32* %3534, align 4
  %3536 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3537 = getelementptr inbounds [257 x i32], [257 x i32]* %3536, i32 0, i32 0
  %3538 = call i32 @BZ2_indexIntoF(i32 %3535, i32* %3537)
  %3539 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %3538, i32* %3539, align 8
  %3540 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3541 = load i16*, i16** %3540, align 8
  %3542 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3543 = load i32, i32* %3542, align 4
  %3544 = zext i32 %3543 to i64
  %3545 = getelementptr inbounds i16, i16* %3541, i64 %3544
  %3546 = load i16, i16* %3545, align 2
  %3547 = zext i16 %3546 to i32
  %3548 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3549 = load i8*, i8** %3548, align 8
  %3550 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3551 = load i32, i32* %3550, align 4
  %3552 = lshr i32 %3551, 1
  %3553 = zext i32 %3552 to i64
  %3554 = getelementptr inbounds i8, i8* %3549, i64 %3553
  %3555 = load i8, i8* %3554, align 1
  %3556 = zext i8 %3555 to i32
  %3557 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3558 = load i32, i32* %3557, align 4
  %3559 = shl i32 %3558, 2
  %3560 = and i32 %3559, 4
  %3561 = lshr i32 %3556, %3560
  %3562 = and i32 %3561, 15
  %3563 = shl i32 %3562, 16
  %3564 = or i32 %3547, %3563
  %3565 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3564, i32* %3565, align 4
  %3566 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %3567 = load i32, i32* %3566, align 4
  %3568 = add nsw i32 %3567, 1
  store i32 %3568, i32* %3566, align 4
  br label %3569

; <label>:3569:                                   ; preds = %3533, %3513
  br label %3707

; <label>:3570:                                   ; preds = %3264
  %3571 = icmp slt i32 0, %.3193
  br i1 %3571, label %.lr.ph424, label %3601

.lr.ph424:                                        ; preds = %3570
  %3572 = add i32 %.3193, -1
  %3573 = zext i32 %3572 to i64
  br label %3574

; <label>:3574:                                   ; preds = %.lr.ph424, %3598
  %indvars.iv426 = phi i64 [ 0, %.lr.ph424 ], [ %indvars.iv.next427, %3598 ]
  call void @unroll_loop(i32 142)
  %3575 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3576 = load i32*, i32** %3575, align 8
  %3577 = getelementptr inbounds i32, i32* %3576, i64 %indvars.iv426
  %3578 = load i32, i32* %3577, align 4
  %3579 = and i32 %3578, 255
  %3580 = trunc i32 %3579 to i8
  %3581 = trunc i64 %indvars.iv426 to i32
  %3582 = shl i32 %3581, 8
  %3583 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3584 = load i32*, i32** %3583, align 8
  %3585 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3586 = zext i8 %3580 to i64
  %3587 = getelementptr inbounds [257 x i32], [257 x i32]* %3585, i64 0, i64 %3586
  %3588 = load i32, i32* %3587, align 4
  %3589 = sext i32 %3588 to i64
  %3590 = getelementptr inbounds i32, i32* %3584, i64 %3589
  %3591 = load i32, i32* %3590, align 4
  %3592 = or i32 %3591, %3582
  store i32 %3592, i32* %3590, align 4
  %3593 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3594 = zext i8 %3580 to i64
  %3595 = getelementptr inbounds [257 x i32], [257 x i32]* %3593, i64 0, i64 %3594
  %3596 = load i32, i32* %3595, align 4
  %3597 = add nsw i32 %3596, 1
  store i32 %3597, i32* %3595, align 4
  br label %3598

; <label>:3598:                                   ; preds = %3574
  %indvars.iv.next427 = add nuw nsw i64 %indvars.iv426, 1
  %wide.trip.count428 = zext i32 %.3193 to i64
  %exitcond429 = icmp ne i64 %indvars.iv.next427, %wide.trip.count428
  br i1 %exitcond429, label %3574, label %._crit_edge425

._crit_edge425:                                   ; preds = %3598
  %3599 = add i64 %3573, 1
  %3600 = trunc i64 %3599 to i32
  br label %3601

; <label>:3601:                                   ; preds = %._crit_edge425, %3570
  %.38.lcssa = phi i32 [ %3600, %._crit_edge425 ], [ 0, %3570 ]
  %3602 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3603 = load i32*, i32** %3602, align 8
  %3604 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3605 = load i32, i32* %3604, align 8
  %3606 = sext i32 %3605 to i64
  %3607 = getelementptr inbounds i32, i32* %3603, i64 %3606
  %3608 = load i32, i32* %3607, align 4
  %3609 = lshr i32 %3608, 8
  %3610 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3609, i32* %3610, align 4
  %3611 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  store i32 0, i32* %3611, align 4
  %3612 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %3613 = load i8, i8* %3612, align 4
  %3614 = icmp ne i8 %3613, 0
  br i1 %3614, label %3615, label %3677

; <label>:3615:                                   ; preds = %3601
  %3616 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 0, i32* %3616, align 8
  %3617 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %3617, align 4
  %3618 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3619 = load i32, i32* %3618, align 4
  %3620 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %3621 = load i32, i32* %3620, align 8
  %3622 = mul i32 100000, %3621
  %3623 = icmp uge i32 %3619, %3622
  br i1 %3623, label %3624, label %3625

; <label>:3624:                                   ; preds = %3615
  br label %4403

; <label>:3625:                                   ; preds = %3615
  %3626 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3627 = load i32*, i32** %3626, align 8
  %3628 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3629 = load i32, i32* %3628, align 4
  %3630 = zext i32 %3629 to i64
  %3631 = getelementptr inbounds i32, i32* %3627, i64 %3630
  %3632 = load i32, i32* %3631, align 4
  %3633 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3632, i32* %3633, align 4
  %3634 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3635 = load i32, i32* %3634, align 4
  %3636 = and i32 %3635, 255
  %3637 = trunc i32 %3636 to i8
  %3638 = zext i8 %3637 to i32
  %3639 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %3638, i32* %3639, align 8
  %3640 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3641 = load i32, i32* %3640, align 4
  %3642 = lshr i32 %3641, 8
  store i32 %3642, i32* %3640, align 4
  %3643 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %3644 = load i32, i32* %3643, align 4
  %3645 = add nsw i32 %3644, 1
  store i32 %3645, i32* %3643, align 4
  %3646 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3647 = load i32, i32* %3646, align 8
  %3648 = icmp eq i32 %3647, 0
  br i1 %3648, label %3649, label %3665

; <label>:3649:                                   ; preds = %3625
  %3650 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3651 = load i32, i32* %3650, align 4
  %3652 = sext i32 %3651 to i64
  %3653 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %3652
  %3654 = load i32, i32* %3653, align 4
  %3655 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %3654, i32* %3655, align 8
  %3656 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3657 = load i32, i32* %3656, align 4
  %3658 = add nsw i32 %3657, 1
  store i32 %3658, i32* %3656, align 4
  %3659 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3660 = load i32, i32* %3659, align 4
  %3661 = icmp eq i32 %3660, 512
  br i1 %3661, label %3662, label %3664

; <label>:3662:                                   ; preds = %3649
  %3663 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %3663, align 4
  br label %3664

; <label>:3664:                                   ; preds = %3662, %3649
  br label %3665

; <label>:3665:                                   ; preds = %3664, %3625
  %3666 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3667 = load i32, i32* %3666, align 8
  %3668 = add nsw i32 %3667, -1
  store i32 %3668, i32* %3666, align 8
  %3669 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3670 = load i32, i32* %3669, align 8
  %3671 = icmp eq i32 %3670, 1
  %3672 = zext i1 %3671 to i64
  %3673 = select i1 %3671, i32 1, i32 0
  %3674 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %3675 = load i32, i32* %3674, align 8
  %3676 = xor i32 %3675, %3673
  store i32 %3676, i32* %3674, align 8
  br label %3706

; <label>:3677:                                   ; preds = %3601
  %3678 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3679 = load i32, i32* %3678, align 4
  %3680 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %3681 = load i32, i32* %3680, align 8
  %3682 = mul i32 100000, %3681
  %3683 = icmp uge i32 %3679, %3682
  br i1 %3683, label %3684, label %3685

; <label>:3684:                                   ; preds = %3677
  br label %4403

; <label>:3685:                                   ; preds = %3677
  %3686 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3687 = load i32*, i32** %3686, align 8
  %3688 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3689 = load i32, i32* %3688, align 4
  %3690 = zext i32 %3689 to i64
  %3691 = getelementptr inbounds i32, i32* %3687, i64 %3690
  %3692 = load i32, i32* %3691, align 4
  %3693 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3692, i32* %3693, align 4
  %3694 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3695 = load i32, i32* %3694, align 4
  %3696 = and i32 %3695, 255
  %3697 = trunc i32 %3696 to i8
  %3698 = zext i8 %3697 to i32
  %3699 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %3698, i32* %3699, align 8
  %3700 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3701 = load i32, i32* %3700, align 4
  %3702 = lshr i32 %3701, 8
  store i32 %3702, i32* %3700, align 4
  %3703 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %3704 = load i32, i32* %3703, align 4
  %3705 = add nsw i32 %3704, 1
  store i32 %3705, i32* %3703, align 4
  br label %3706

; <label>:3706:                                   ; preds = %3685, %3665
  br label %3707

; <label>:3707:                                   ; preds = %3706, %3569
  %.2740 = phi i32 [ %.lcssa, %3569 ], [ %.1831, %3706 ]
  %.39 = phi i32 [ %.2639.lcssa, %3569 ], [ %.38.lcssa, %3706 ]
  br label %4378

; <label>:3708:                                   ; preds = %515
  br label %3709

; <label>:3709:                                   ; preds = %33, %3708
  %3710 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 42, i32* %3710, align 8
  %3711 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3712 = load i32, i32* %3711, align 4
  %3713 = icmp sge i32 %3712, 8
  br i1 %3713, label %3714, label %.lr.ph394

.lr.ph394:                                        ; preds = %3709
  br label %3726

._crit_edge395:                                   ; preds = %3774
  br label %3714

; <label>:3714:                                   ; preds = %._crit_edge395, %3709
  %3715 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3716 = load i32, i32* %3715, align 8
  %3717 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3718 = load i32, i32* %3717, align 4
  %3719 = sub nsw i32 %3718, 8
  %3720 = lshr i32 %3716, %3719
  %3721 = and i32 %3720, 255
  %3722 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3723 = load i32, i32* %3722, align 4
  %3724 = sub nsw i32 %3723, 8
  store i32 %3724, i32* %3722, align 4
  %3725 = trunc i32 %3721 to i8
  br label %3777

; <label>:3726:                                   ; preds = %.lr.ph394, %3774
  call void @unroll_loop(i32 143)
  %3727 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3728 = load %struct.bz_stream*, %struct.bz_stream** %3727, align 8
  %3729 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3728, i32 0, i32 1
  %3730 = load i32, i32* %3729, align 8
  %3731 = icmp eq i32 %3730, 0
  br i1 %3731, label %3732, label %3733

; <label>:3732:                                   ; preds = %3726
  br label %4378

; <label>:3733:                                   ; preds = %3726
  %3734 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3735 = load i32, i32* %3734, align 8
  %3736 = shl i32 %3735, 8
  %3737 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3738 = load %struct.bz_stream*, %struct.bz_stream** %3737, align 8
  %3739 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3738, i32 0, i32 0
  %3740 = load i8*, i8** %3739, align 8
  %3741 = load i8, i8* %3740, align 1
  %3742 = zext i8 %3741 to i32
  %3743 = or i32 %3736, %3742
  %3744 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %3743, i32* %3744, align 8
  %3745 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3746 = load i32, i32* %3745, align 4
  %3747 = add nsw i32 %3746, 8
  store i32 %3747, i32* %3745, align 4
  %3748 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3749 = load %struct.bz_stream*, %struct.bz_stream** %3748, align 8
  %3750 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3749, i32 0, i32 0
  %3751 = load i8*, i8** %3750, align 8
  %3752 = getelementptr inbounds i8, i8* %3751, i32 1
  store i8* %3752, i8** %3750, align 8
  %3753 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3754 = load %struct.bz_stream*, %struct.bz_stream** %3753, align 8
  %3755 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3754, i32 0, i32 1
  %3756 = load i32, i32* %3755, align 8
  %3757 = add i32 %3756, -1
  store i32 %3757, i32* %3755, align 8
  %3758 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3759 = load %struct.bz_stream*, %struct.bz_stream** %3758, align 8
  %3760 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3759, i32 0, i32 2
  %3761 = load i32, i32* %3760, align 4
  %3762 = add i32 %3761, 1
  store i32 %3762, i32* %3760, align 4
  %3763 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3764 = load %struct.bz_stream*, %struct.bz_stream** %3763, align 8
  %3765 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3764, i32 0, i32 2
  %3766 = load i32, i32* %3765, align 4
  %3767 = icmp eq i32 %3766, 0
  br i1 %3767, label %3768, label %3774

; <label>:3768:                                   ; preds = %3733
  %3769 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3770 = load %struct.bz_stream*, %struct.bz_stream** %3769, align 8
  %3771 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3770, i32 0, i32 3
  %3772 = load i32, i32* %3771, align 8
  %3773 = add i32 %3772, 1
  store i32 %3773, i32* %3771, align 8
  br label %3774

; <label>:3774:                                   ; preds = %3768, %3733
  %3775 = load i32, i32* %3711, align 4
  %3776 = icmp sge i32 %3775, 8
  br i1 %3776, label %._crit_edge395, label %3726

; <label>:3777:                                   ; preds = %3714
  %3778 = zext i8 %3725 to i32
  %3779 = icmp ne i32 %3778, 114
  br i1 %3779, label %3780, label %3781

; <label>:3780:                                   ; preds = %3777
  br label %4378

; <label>:3781:                                   ; preds = %3777
  br label %3782

; <label>:3782:                                   ; preds = %33, %3781
  %3783 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 43, i32* %3783, align 8
  %3784 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3785 = load i32, i32* %3784, align 4
  %3786 = icmp sge i32 %3785, 8
  br i1 %3786, label %3787, label %.lr.ph391

.lr.ph391:                                        ; preds = %3782
  br label %3799

._crit_edge392:                                   ; preds = %3847
  br label %3787

; <label>:3787:                                   ; preds = %._crit_edge392, %3782
  %3788 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3789 = load i32, i32* %3788, align 8
  %3790 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3791 = load i32, i32* %3790, align 4
  %3792 = sub nsw i32 %3791, 8
  %3793 = lshr i32 %3789, %3792
  %3794 = and i32 %3793, 255
  %3795 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3796 = load i32, i32* %3795, align 4
  %3797 = sub nsw i32 %3796, 8
  store i32 %3797, i32* %3795, align 4
  %3798 = trunc i32 %3794 to i8
  br label %3850

; <label>:3799:                                   ; preds = %.lr.ph391, %3847
  call void @unroll_loop(i32 144)
  %3800 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3801 = load %struct.bz_stream*, %struct.bz_stream** %3800, align 8
  %3802 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3801, i32 0, i32 1
  %3803 = load i32, i32* %3802, align 8
  %3804 = icmp eq i32 %3803, 0
  br i1 %3804, label %3805, label %3806

; <label>:3805:                                   ; preds = %3799
  br label %4378

; <label>:3806:                                   ; preds = %3799
  %3807 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3808 = load i32, i32* %3807, align 8
  %3809 = shl i32 %3808, 8
  %3810 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3811 = load %struct.bz_stream*, %struct.bz_stream** %3810, align 8
  %3812 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3811, i32 0, i32 0
  %3813 = load i8*, i8** %3812, align 8
  %3814 = load i8, i8* %3813, align 1
  %3815 = zext i8 %3814 to i32
  %3816 = or i32 %3809, %3815
  %3817 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %3816, i32* %3817, align 8
  %3818 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3819 = load i32, i32* %3818, align 4
  %3820 = add nsw i32 %3819, 8
  store i32 %3820, i32* %3818, align 4
  %3821 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3822 = load %struct.bz_stream*, %struct.bz_stream** %3821, align 8
  %3823 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3822, i32 0, i32 0
  %3824 = load i8*, i8** %3823, align 8
  %3825 = getelementptr inbounds i8, i8* %3824, i32 1
  store i8* %3825, i8** %3823, align 8
  %3826 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3827 = load %struct.bz_stream*, %struct.bz_stream** %3826, align 8
  %3828 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3827, i32 0, i32 1
  %3829 = load i32, i32* %3828, align 8
  %3830 = add i32 %3829, -1
  store i32 %3830, i32* %3828, align 8
  %3831 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3832 = load %struct.bz_stream*, %struct.bz_stream** %3831, align 8
  %3833 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3832, i32 0, i32 2
  %3834 = load i32, i32* %3833, align 4
  %3835 = add i32 %3834, 1
  store i32 %3835, i32* %3833, align 4
  %3836 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3837 = load %struct.bz_stream*, %struct.bz_stream** %3836, align 8
  %3838 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3837, i32 0, i32 2
  %3839 = load i32, i32* %3838, align 4
  %3840 = icmp eq i32 %3839, 0
  br i1 %3840, label %3841, label %3847

; <label>:3841:                                   ; preds = %3806
  %3842 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3843 = load %struct.bz_stream*, %struct.bz_stream** %3842, align 8
  %3844 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3843, i32 0, i32 3
  %3845 = load i32, i32* %3844, align 8
  %3846 = add i32 %3845, 1
  store i32 %3846, i32* %3844, align 8
  br label %3847

; <label>:3847:                                   ; preds = %3841, %3806
  %3848 = load i32, i32* %3784, align 4
  %3849 = icmp sge i32 %3848, 8
  br i1 %3849, label %._crit_edge392, label %3799

; <label>:3850:                                   ; preds = %3787
  %3851 = zext i8 %3798 to i32
  %3852 = icmp ne i32 %3851, 69
  br i1 %3852, label %3853, label %3854

; <label>:3853:                                   ; preds = %3850
  br label %4378

; <label>:3854:                                   ; preds = %3850
  br label %3855

; <label>:3855:                                   ; preds = %33, %3854
  %3856 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 44, i32* %3856, align 8
  %3857 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3858 = load i32, i32* %3857, align 4
  %3859 = icmp sge i32 %3858, 8
  br i1 %3859, label %3860, label %.lr.ph388

.lr.ph388:                                        ; preds = %3855
  br label %3872

._crit_edge389:                                   ; preds = %3920
  br label %3860

; <label>:3860:                                   ; preds = %._crit_edge389, %3855
  %3861 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3862 = load i32, i32* %3861, align 8
  %3863 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3864 = load i32, i32* %3863, align 4
  %3865 = sub nsw i32 %3864, 8
  %3866 = lshr i32 %3862, %3865
  %3867 = and i32 %3866, 255
  %3868 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3869 = load i32, i32* %3868, align 4
  %3870 = sub nsw i32 %3869, 8
  store i32 %3870, i32* %3868, align 4
  %3871 = trunc i32 %3867 to i8
  br label %3923

; <label>:3872:                                   ; preds = %.lr.ph388, %3920
  call void @unroll_loop(i32 145)
  %3873 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3874 = load %struct.bz_stream*, %struct.bz_stream** %3873, align 8
  %3875 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3874, i32 0, i32 1
  %3876 = load i32, i32* %3875, align 8
  %3877 = icmp eq i32 %3876, 0
  br i1 %3877, label %3878, label %3879

; <label>:3878:                                   ; preds = %3872
  br label %4378

; <label>:3879:                                   ; preds = %3872
  %3880 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3881 = load i32, i32* %3880, align 8
  %3882 = shl i32 %3881, 8
  %3883 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3884 = load %struct.bz_stream*, %struct.bz_stream** %3883, align 8
  %3885 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3884, i32 0, i32 0
  %3886 = load i8*, i8** %3885, align 8
  %3887 = load i8, i8* %3886, align 1
  %3888 = zext i8 %3887 to i32
  %3889 = or i32 %3882, %3888
  %3890 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %3889, i32* %3890, align 8
  %3891 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3892 = load i32, i32* %3891, align 4
  %3893 = add nsw i32 %3892, 8
  store i32 %3893, i32* %3891, align 4
  %3894 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3895 = load %struct.bz_stream*, %struct.bz_stream** %3894, align 8
  %3896 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3895, i32 0, i32 0
  %3897 = load i8*, i8** %3896, align 8
  %3898 = getelementptr inbounds i8, i8* %3897, i32 1
  store i8* %3898, i8** %3896, align 8
  %3899 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3900 = load %struct.bz_stream*, %struct.bz_stream** %3899, align 8
  %3901 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3900, i32 0, i32 1
  %3902 = load i32, i32* %3901, align 8
  %3903 = add i32 %3902, -1
  store i32 %3903, i32* %3901, align 8
  %3904 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3905 = load %struct.bz_stream*, %struct.bz_stream** %3904, align 8
  %3906 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3905, i32 0, i32 2
  %3907 = load i32, i32* %3906, align 4
  %3908 = add i32 %3907, 1
  store i32 %3908, i32* %3906, align 4
  %3909 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3910 = load %struct.bz_stream*, %struct.bz_stream** %3909, align 8
  %3911 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3910, i32 0, i32 2
  %3912 = load i32, i32* %3911, align 4
  %3913 = icmp eq i32 %3912, 0
  br i1 %3913, label %3914, label %3920

; <label>:3914:                                   ; preds = %3879
  %3915 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3916 = load %struct.bz_stream*, %struct.bz_stream** %3915, align 8
  %3917 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3916, i32 0, i32 3
  %3918 = load i32, i32* %3917, align 8
  %3919 = add i32 %3918, 1
  store i32 %3919, i32* %3917, align 8
  br label %3920

; <label>:3920:                                   ; preds = %3914, %3879
  %3921 = load i32, i32* %3857, align 4
  %3922 = icmp sge i32 %3921, 8
  br i1 %3922, label %._crit_edge389, label %3872

; <label>:3923:                                   ; preds = %3860
  %3924 = zext i8 %3871 to i32
  %3925 = icmp ne i32 %3924, 56
  br i1 %3925, label %3926, label %3927

; <label>:3926:                                   ; preds = %3923
  br label %4378

; <label>:3927:                                   ; preds = %3923
  br label %3928

; <label>:3928:                                   ; preds = %33, %3927
  %3929 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 45, i32* %3929, align 8
  %3930 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3931 = load i32, i32* %3930, align 4
  %3932 = icmp sge i32 %3931, 8
  br i1 %3932, label %3933, label %.lr.ph385

.lr.ph385:                                        ; preds = %3928
  br label %3945

._crit_edge386:                                   ; preds = %3993
  br label %3933

; <label>:3933:                                   ; preds = %._crit_edge386, %3928
  %3934 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3935 = load i32, i32* %3934, align 8
  %3936 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3937 = load i32, i32* %3936, align 4
  %3938 = sub nsw i32 %3937, 8
  %3939 = lshr i32 %3935, %3938
  %3940 = and i32 %3939, 255
  %3941 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3942 = load i32, i32* %3941, align 4
  %3943 = sub nsw i32 %3942, 8
  store i32 %3943, i32* %3941, align 4
  %3944 = trunc i32 %3940 to i8
  br label %3996

; <label>:3945:                                   ; preds = %.lr.ph385, %3993
  call void @unroll_loop(i32 146)
  %3946 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3947 = load %struct.bz_stream*, %struct.bz_stream** %3946, align 8
  %3948 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3947, i32 0, i32 1
  %3949 = load i32, i32* %3948, align 8
  %3950 = icmp eq i32 %3949, 0
  br i1 %3950, label %3951, label %3952

; <label>:3951:                                   ; preds = %3945
  br label %4378

; <label>:3952:                                   ; preds = %3945
  %3953 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3954 = load i32, i32* %3953, align 8
  %3955 = shl i32 %3954, 8
  %3956 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3957 = load %struct.bz_stream*, %struct.bz_stream** %3956, align 8
  %3958 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3957, i32 0, i32 0
  %3959 = load i8*, i8** %3958, align 8
  %3960 = load i8, i8* %3959, align 1
  %3961 = zext i8 %3960 to i32
  %3962 = or i32 %3955, %3961
  %3963 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %3962, i32* %3963, align 8
  %3964 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3965 = load i32, i32* %3964, align 4
  %3966 = add nsw i32 %3965, 8
  store i32 %3966, i32* %3964, align 4
  %3967 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3968 = load %struct.bz_stream*, %struct.bz_stream** %3967, align 8
  %3969 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3968, i32 0, i32 0
  %3970 = load i8*, i8** %3969, align 8
  %3971 = getelementptr inbounds i8, i8* %3970, i32 1
  store i8* %3971, i8** %3969, align 8
  %3972 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3973 = load %struct.bz_stream*, %struct.bz_stream** %3972, align 8
  %3974 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3973, i32 0, i32 1
  %3975 = load i32, i32* %3974, align 8
  %3976 = add i32 %3975, -1
  store i32 %3976, i32* %3974, align 8
  %3977 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3978 = load %struct.bz_stream*, %struct.bz_stream** %3977, align 8
  %3979 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3978, i32 0, i32 2
  %3980 = load i32, i32* %3979, align 4
  %3981 = add i32 %3980, 1
  store i32 %3981, i32* %3979, align 4
  %3982 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3983 = load %struct.bz_stream*, %struct.bz_stream** %3982, align 8
  %3984 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3983, i32 0, i32 2
  %3985 = load i32, i32* %3984, align 4
  %3986 = icmp eq i32 %3985, 0
  br i1 %3986, label %3987, label %3993

; <label>:3987:                                   ; preds = %3952
  %3988 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3989 = load %struct.bz_stream*, %struct.bz_stream** %3988, align 8
  %3990 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3989, i32 0, i32 3
  %3991 = load i32, i32* %3990, align 8
  %3992 = add i32 %3991, 1
  store i32 %3992, i32* %3990, align 8
  br label %3993

; <label>:3993:                                   ; preds = %3987, %3952
  %3994 = load i32, i32* %3930, align 4
  %3995 = icmp sge i32 %3994, 8
  br i1 %3995, label %._crit_edge386, label %3945

; <label>:3996:                                   ; preds = %3933
  %3997 = zext i8 %3944 to i32
  %3998 = icmp ne i32 %3997, 80
  br i1 %3998, label %3999, label %4000

; <label>:3999:                                   ; preds = %3996
  br label %4378

; <label>:4000:                                   ; preds = %3996
  br label %4001

; <label>:4001:                                   ; preds = %33, %4000
  %4002 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 46, i32* %4002, align 8
  %4003 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4004 = load i32, i32* %4003, align 4
  %4005 = icmp sge i32 %4004, 8
  br i1 %4005, label %4006, label %.lr.ph382

.lr.ph382:                                        ; preds = %4001
  br label %4018

._crit_edge383:                                   ; preds = %4066
  br label %4006

; <label>:4006:                                   ; preds = %._crit_edge383, %4001
  %4007 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4008 = load i32, i32* %4007, align 8
  %4009 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4010 = load i32, i32* %4009, align 4
  %4011 = sub nsw i32 %4010, 8
  %4012 = lshr i32 %4008, %4011
  %4013 = and i32 %4012, 255
  %4014 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4015 = load i32, i32* %4014, align 4
  %4016 = sub nsw i32 %4015, 8
  store i32 %4016, i32* %4014, align 4
  %4017 = trunc i32 %4013 to i8
  br label %4069

; <label>:4018:                                   ; preds = %.lr.ph382, %4066
  call void @unroll_loop(i32 147)
  %4019 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4020 = load %struct.bz_stream*, %struct.bz_stream** %4019, align 8
  %4021 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4020, i32 0, i32 1
  %4022 = load i32, i32* %4021, align 8
  %4023 = icmp eq i32 %4022, 0
  br i1 %4023, label %4024, label %4025

; <label>:4024:                                   ; preds = %4018
  br label %4378

; <label>:4025:                                   ; preds = %4018
  %4026 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4027 = load i32, i32* %4026, align 8
  %4028 = shl i32 %4027, 8
  %4029 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4030 = load %struct.bz_stream*, %struct.bz_stream** %4029, align 8
  %4031 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4030, i32 0, i32 0
  %4032 = load i8*, i8** %4031, align 8
  %4033 = load i8, i8* %4032, align 1
  %4034 = zext i8 %4033 to i32
  %4035 = or i32 %4028, %4034
  %4036 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %4035, i32* %4036, align 8
  %4037 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4038 = load i32, i32* %4037, align 4
  %4039 = add nsw i32 %4038, 8
  store i32 %4039, i32* %4037, align 4
  %4040 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4041 = load %struct.bz_stream*, %struct.bz_stream** %4040, align 8
  %4042 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4041, i32 0, i32 0
  %4043 = load i8*, i8** %4042, align 8
  %4044 = getelementptr inbounds i8, i8* %4043, i32 1
  store i8* %4044, i8** %4042, align 8
  %4045 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4046 = load %struct.bz_stream*, %struct.bz_stream** %4045, align 8
  %4047 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4046, i32 0, i32 1
  %4048 = load i32, i32* %4047, align 8
  %4049 = add i32 %4048, -1
  store i32 %4049, i32* %4047, align 8
  %4050 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4051 = load %struct.bz_stream*, %struct.bz_stream** %4050, align 8
  %4052 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4051, i32 0, i32 2
  %4053 = load i32, i32* %4052, align 4
  %4054 = add i32 %4053, 1
  store i32 %4054, i32* %4052, align 4
  %4055 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4056 = load %struct.bz_stream*, %struct.bz_stream** %4055, align 8
  %4057 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4056, i32 0, i32 2
  %4058 = load i32, i32* %4057, align 4
  %4059 = icmp eq i32 %4058, 0
  br i1 %4059, label %4060, label %4066

; <label>:4060:                                   ; preds = %4025
  %4061 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4062 = load %struct.bz_stream*, %struct.bz_stream** %4061, align 8
  %4063 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4062, i32 0, i32 3
  %4064 = load i32, i32* %4063, align 8
  %4065 = add i32 %4064, 1
  store i32 %4065, i32* %4063, align 8
  br label %4066

; <label>:4066:                                   ; preds = %4060, %4025
  %4067 = load i32, i32* %4003, align 4
  %4068 = icmp sge i32 %4067, 8
  br i1 %4068, label %._crit_edge383, label %4018

; <label>:4069:                                   ; preds = %4006
  %4070 = zext i8 %4017 to i32
  %4071 = icmp ne i32 %4070, 144
  br i1 %4071, label %4072, label %4073

; <label>:4072:                                   ; preds = %4069
  br label %4378

; <label>:4073:                                   ; preds = %4069
  %4074 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 0, i32* %4074, align 4
  br label %4075

; <label>:4075:                                   ; preds = %33, %4073
  %4076 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 47, i32* %4076, align 8
  %4077 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4078 = load i32, i32* %4077, align 4
  %4079 = icmp sge i32 %4078, 8
  br i1 %4079, label %4080, label %.lr.ph379

.lr.ph379:                                        ; preds = %4075
  br label %4092

._crit_edge380:                                   ; preds = %4140
  br label %4080

; <label>:4080:                                   ; preds = %._crit_edge380, %4075
  %4081 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4082 = load i32, i32* %4081, align 8
  %4083 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4084 = load i32, i32* %4083, align 4
  %4085 = sub nsw i32 %4084, 8
  %4086 = lshr i32 %4082, %4085
  %4087 = and i32 %4086, 255
  %4088 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4089 = load i32, i32* %4088, align 4
  %4090 = sub nsw i32 %4089, 8
  store i32 %4090, i32* %4088, align 4
  %4091 = trunc i32 %4087 to i8
  br label %4143

; <label>:4092:                                   ; preds = %.lr.ph379, %4140
  call void @unroll_loop(i32 148)
  %4093 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4094 = load %struct.bz_stream*, %struct.bz_stream** %4093, align 8
  %4095 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4094, i32 0, i32 1
  %4096 = load i32, i32* %4095, align 8
  %4097 = icmp eq i32 %4096, 0
  br i1 %4097, label %4098, label %4099

; <label>:4098:                                   ; preds = %4092
  br label %4378

; <label>:4099:                                   ; preds = %4092
  %4100 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4101 = load i32, i32* %4100, align 8
  %4102 = shl i32 %4101, 8
  %4103 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4104 = load %struct.bz_stream*, %struct.bz_stream** %4103, align 8
  %4105 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4104, i32 0, i32 0
  %4106 = load i8*, i8** %4105, align 8
  %4107 = load i8, i8* %4106, align 1
  %4108 = zext i8 %4107 to i32
  %4109 = or i32 %4102, %4108
  %4110 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %4109, i32* %4110, align 8
  %4111 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4112 = load i32, i32* %4111, align 4
  %4113 = add nsw i32 %4112, 8
  store i32 %4113, i32* %4111, align 4
  %4114 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4115 = load %struct.bz_stream*, %struct.bz_stream** %4114, align 8
  %4116 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4115, i32 0, i32 0
  %4117 = load i8*, i8** %4116, align 8
  %4118 = getelementptr inbounds i8, i8* %4117, i32 1
  store i8* %4118, i8** %4116, align 8
  %4119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4120 = load %struct.bz_stream*, %struct.bz_stream** %4119, align 8
  %4121 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4120, i32 0, i32 1
  %4122 = load i32, i32* %4121, align 8
  %4123 = add i32 %4122, -1
  store i32 %4123, i32* %4121, align 8
  %4124 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4125 = load %struct.bz_stream*, %struct.bz_stream** %4124, align 8
  %4126 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4125, i32 0, i32 2
  %4127 = load i32, i32* %4126, align 4
  %4128 = add i32 %4127, 1
  store i32 %4128, i32* %4126, align 4
  %4129 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4130 = load %struct.bz_stream*, %struct.bz_stream** %4129, align 8
  %4131 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4130, i32 0, i32 2
  %4132 = load i32, i32* %4131, align 4
  %4133 = icmp eq i32 %4132, 0
  br i1 %4133, label %4134, label %4140

; <label>:4134:                                   ; preds = %4099
  %4135 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4136 = load %struct.bz_stream*, %struct.bz_stream** %4135, align 8
  %4137 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4136, i32 0, i32 3
  %4138 = load i32, i32* %4137, align 8
  %4139 = add i32 %4138, 1
  store i32 %4139, i32* %4137, align 8
  br label %4140

; <label>:4140:                                   ; preds = %4134, %4099
  %4141 = load i32, i32* %4077, align 4
  %4142 = icmp sge i32 %4141, 8
  br i1 %4142, label %._crit_edge380, label %4092

; <label>:4143:                                   ; preds = %4080
  %4144 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  %4145 = load i32, i32* %4144, align 4
  %4146 = shl i32 %4145, 8
  %4147 = zext i8 %4091 to i32
  %4148 = or i32 %4146, %4147
  %4149 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 %4148, i32* %4149, align 4
  br label %4150

; <label>:4150:                                   ; preds = %33, %4143
  %4151 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 48, i32* %4151, align 8
  %4152 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4153 = load i32, i32* %4152, align 4
  %4154 = icmp sge i32 %4153, 8
  br i1 %4154, label %4155, label %.lr.ph376

.lr.ph376:                                        ; preds = %4150
  br label %4167

._crit_edge377:                                   ; preds = %4215
  br label %4155

; <label>:4155:                                   ; preds = %._crit_edge377, %4150
  %4156 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4157 = load i32, i32* %4156, align 8
  %4158 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4159 = load i32, i32* %4158, align 4
  %4160 = sub nsw i32 %4159, 8
  %4161 = lshr i32 %4157, %4160
  %4162 = and i32 %4161, 255
  %4163 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4164 = load i32, i32* %4163, align 4
  %4165 = sub nsw i32 %4164, 8
  store i32 %4165, i32* %4163, align 4
  %4166 = trunc i32 %4162 to i8
  br label %4218

; <label>:4167:                                   ; preds = %.lr.ph376, %4215
  call void @unroll_loop(i32 149)
  %4168 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4169 = load %struct.bz_stream*, %struct.bz_stream** %4168, align 8
  %4170 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4169, i32 0, i32 1
  %4171 = load i32, i32* %4170, align 8
  %4172 = icmp eq i32 %4171, 0
  br i1 %4172, label %4173, label %4174

; <label>:4173:                                   ; preds = %4167
  br label %4378

; <label>:4174:                                   ; preds = %4167
  %4175 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4176 = load i32, i32* %4175, align 8
  %4177 = shl i32 %4176, 8
  %4178 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4179 = load %struct.bz_stream*, %struct.bz_stream** %4178, align 8
  %4180 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4179, i32 0, i32 0
  %4181 = load i8*, i8** %4180, align 8
  %4182 = load i8, i8* %4181, align 1
  %4183 = zext i8 %4182 to i32
  %4184 = or i32 %4177, %4183
  %4185 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %4184, i32* %4185, align 8
  %4186 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4187 = load i32, i32* %4186, align 4
  %4188 = add nsw i32 %4187, 8
  store i32 %4188, i32* %4186, align 4
  %4189 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4190 = load %struct.bz_stream*, %struct.bz_stream** %4189, align 8
  %4191 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4190, i32 0, i32 0
  %4192 = load i8*, i8** %4191, align 8
  %4193 = getelementptr inbounds i8, i8* %4192, i32 1
  store i8* %4193, i8** %4191, align 8
  %4194 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4195 = load %struct.bz_stream*, %struct.bz_stream** %4194, align 8
  %4196 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4195, i32 0, i32 1
  %4197 = load i32, i32* %4196, align 8
  %4198 = add i32 %4197, -1
  store i32 %4198, i32* %4196, align 8
  %4199 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4200 = load %struct.bz_stream*, %struct.bz_stream** %4199, align 8
  %4201 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4200, i32 0, i32 2
  %4202 = load i32, i32* %4201, align 4
  %4203 = add i32 %4202, 1
  store i32 %4203, i32* %4201, align 4
  %4204 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4205 = load %struct.bz_stream*, %struct.bz_stream** %4204, align 8
  %4206 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4205, i32 0, i32 2
  %4207 = load i32, i32* %4206, align 4
  %4208 = icmp eq i32 %4207, 0
  br i1 %4208, label %4209, label %4215

; <label>:4209:                                   ; preds = %4174
  %4210 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4211 = load %struct.bz_stream*, %struct.bz_stream** %4210, align 8
  %4212 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4211, i32 0, i32 3
  %4213 = load i32, i32* %4212, align 8
  %4214 = add i32 %4213, 1
  store i32 %4214, i32* %4212, align 8
  br label %4215

; <label>:4215:                                   ; preds = %4209, %4174
  %4216 = load i32, i32* %4152, align 4
  %4217 = icmp sge i32 %4216, 8
  br i1 %4217, label %._crit_edge377, label %4167

; <label>:4218:                                   ; preds = %4155
  %4219 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  %4220 = load i32, i32* %4219, align 4
  %4221 = shl i32 %4220, 8
  %4222 = zext i8 %4166 to i32
  %4223 = or i32 %4221, %4222
  %4224 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 %4223, i32* %4224, align 4
  br label %4225

; <label>:4225:                                   ; preds = %33, %4218
  %4226 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 49, i32* %4226, align 8
  %4227 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4228 = load i32, i32* %4227, align 4
  %4229 = icmp sge i32 %4228, 8
  br i1 %4229, label %4230, label %.lr.ph373

.lr.ph373:                                        ; preds = %4225
  br label %4242

._crit_edge374:                                   ; preds = %4290
  br label %4230

; <label>:4230:                                   ; preds = %._crit_edge374, %4225
  %4231 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4232 = load i32, i32* %4231, align 8
  %4233 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4234 = load i32, i32* %4233, align 4
  %4235 = sub nsw i32 %4234, 8
  %4236 = lshr i32 %4232, %4235
  %4237 = and i32 %4236, 255
  %4238 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4239 = load i32, i32* %4238, align 4
  %4240 = sub nsw i32 %4239, 8
  store i32 %4240, i32* %4238, align 4
  %4241 = trunc i32 %4237 to i8
  br label %4293

; <label>:4242:                                   ; preds = %.lr.ph373, %4290
  call void @unroll_loop(i32 150)
  %4243 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4244 = load %struct.bz_stream*, %struct.bz_stream** %4243, align 8
  %4245 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4244, i32 0, i32 1
  %4246 = load i32, i32* %4245, align 8
  %4247 = icmp eq i32 %4246, 0
  br i1 %4247, label %4248, label %4249

; <label>:4248:                                   ; preds = %4242
  br label %4378

; <label>:4249:                                   ; preds = %4242
  %4250 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4251 = load i32, i32* %4250, align 8
  %4252 = shl i32 %4251, 8
  %4253 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4254 = load %struct.bz_stream*, %struct.bz_stream** %4253, align 8
  %4255 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4254, i32 0, i32 0
  %4256 = load i8*, i8** %4255, align 8
  %4257 = load i8, i8* %4256, align 1
  %4258 = zext i8 %4257 to i32
  %4259 = or i32 %4252, %4258
  %4260 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %4259, i32* %4260, align 8
  %4261 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4262 = load i32, i32* %4261, align 4
  %4263 = add nsw i32 %4262, 8
  store i32 %4263, i32* %4261, align 4
  %4264 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4265 = load %struct.bz_stream*, %struct.bz_stream** %4264, align 8
  %4266 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4265, i32 0, i32 0
  %4267 = load i8*, i8** %4266, align 8
  %4268 = getelementptr inbounds i8, i8* %4267, i32 1
  store i8* %4268, i8** %4266, align 8
  %4269 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4270 = load %struct.bz_stream*, %struct.bz_stream** %4269, align 8
  %4271 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4270, i32 0, i32 1
  %4272 = load i32, i32* %4271, align 8
  %4273 = add i32 %4272, -1
  store i32 %4273, i32* %4271, align 8
  %4274 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4275 = load %struct.bz_stream*, %struct.bz_stream** %4274, align 8
  %4276 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4275, i32 0, i32 2
  %4277 = load i32, i32* %4276, align 4
  %4278 = add i32 %4277, 1
  store i32 %4278, i32* %4276, align 4
  %4279 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4280 = load %struct.bz_stream*, %struct.bz_stream** %4279, align 8
  %4281 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4280, i32 0, i32 2
  %4282 = load i32, i32* %4281, align 4
  %4283 = icmp eq i32 %4282, 0
  br i1 %4283, label %4284, label %4290

; <label>:4284:                                   ; preds = %4249
  %4285 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4286 = load %struct.bz_stream*, %struct.bz_stream** %4285, align 8
  %4287 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4286, i32 0, i32 3
  %4288 = load i32, i32* %4287, align 8
  %4289 = add i32 %4288, 1
  store i32 %4289, i32* %4287, align 8
  br label %4290

; <label>:4290:                                   ; preds = %4284, %4249
  %4291 = load i32, i32* %4227, align 4
  %4292 = icmp sge i32 %4291, 8
  br i1 %4292, label %._crit_edge374, label %4242

; <label>:4293:                                   ; preds = %4230
  %4294 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  %4295 = load i32, i32* %4294, align 4
  %4296 = shl i32 %4295, 8
  %4297 = zext i8 %4241 to i32
  %4298 = or i32 %4296, %4297
  %4299 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 %4298, i32* %4299, align 4
  br label %4300

; <label>:4300:                                   ; preds = %33, %4293
  %4301 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 50, i32* %4301, align 8
  %4302 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4303 = load i32, i32* %4302, align 4
  %4304 = icmp sge i32 %4303, 8
  br i1 %4304, label %4305, label %.lr.ph

.lr.ph:                                           ; preds = %4300
  br label %4317

._crit_edge:                                      ; preds = %4365
  br label %4305

; <label>:4305:                                   ; preds = %._crit_edge, %4300
  %4306 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4307 = load i32, i32* %4306, align 8
  %4308 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4309 = load i32, i32* %4308, align 4
  %4310 = sub nsw i32 %4309, 8
  %4311 = lshr i32 %4307, %4310
  %4312 = and i32 %4311, 255
  %4313 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4314 = load i32, i32* %4313, align 4
  %4315 = sub nsw i32 %4314, 8
  store i32 %4315, i32* %4313, align 4
  %4316 = trunc i32 %4312 to i8
  br label %4368

; <label>:4317:                                   ; preds = %.lr.ph, %4365
  call void @unroll_loop(i32 151)
  %4318 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4319 = load %struct.bz_stream*, %struct.bz_stream** %4318, align 8
  %4320 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4319, i32 0, i32 1
  %4321 = load i32, i32* %4320, align 8
  %4322 = icmp eq i32 %4321, 0
  br i1 %4322, label %4323, label %4324

; <label>:4323:                                   ; preds = %4317
  br label %4378

; <label>:4324:                                   ; preds = %4317
  %4325 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %4326 = load i32, i32* %4325, align 8
  %4327 = shl i32 %4326, 8
  %4328 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4329 = load %struct.bz_stream*, %struct.bz_stream** %4328, align 8
  %4330 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4329, i32 0, i32 0
  %4331 = load i8*, i8** %4330, align 8
  %4332 = load i8, i8* %4331, align 1
  %4333 = zext i8 %4332 to i32
  %4334 = or i32 %4327, %4333
  %4335 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  store i32 %4334, i32* %4335, align 8
  %4336 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %4337 = load i32, i32* %4336, align 4
  %4338 = add nsw i32 %4337, 8
  store i32 %4338, i32* %4336, align 4
  %4339 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4340 = load %struct.bz_stream*, %struct.bz_stream** %4339, align 8
  %4341 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4340, i32 0, i32 0
  %4342 = load i8*, i8** %4341, align 8
  %4343 = getelementptr inbounds i8, i8* %4342, i32 1
  store i8* %4343, i8** %4341, align 8
  %4344 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4345 = load %struct.bz_stream*, %struct.bz_stream** %4344, align 8
  %4346 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4345, i32 0, i32 1
  %4347 = load i32, i32* %4346, align 8
  %4348 = add i32 %4347, -1
  store i32 %4348, i32* %4346, align 8
  %4349 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4350 = load %struct.bz_stream*, %struct.bz_stream** %4349, align 8
  %4351 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4350, i32 0, i32 2
  %4352 = load i32, i32* %4351, align 4
  %4353 = add i32 %4352, 1
  store i32 %4353, i32* %4351, align 4
  %4354 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4355 = load %struct.bz_stream*, %struct.bz_stream** %4354, align 8
  %4356 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4355, i32 0, i32 2
  %4357 = load i32, i32* %4356, align 4
  %4358 = icmp eq i32 %4357, 0
  br i1 %4358, label %4359, label %4365

; <label>:4359:                                   ; preds = %4324
  %4360 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4361 = load %struct.bz_stream*, %struct.bz_stream** %4360, align 8
  %4362 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4361, i32 0, i32 3
  %4363 = load i32, i32* %4362, align 8
  %4364 = add i32 %4363, 1
  store i32 %4364, i32* %4362, align 8
  br label %4365

; <label>:4365:                                   ; preds = %4359, %4324
  %4366 = load i32, i32* %4302, align 4
  %4367 = icmp sge i32 %4366, 8
  br i1 %4367, label %._crit_edge, label %4317

; <label>:4368:                                   ; preds = %4305
  %4369 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  %4370 = load i32, i32* %4369, align 4
  %4371 = shl i32 %4370, 8
  %4372 = zext i8 %4316 to i32
  %4373 = or i32 %4371, %4372
  %4374 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 %4373, i32* %4374, align 4
  %4375 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 1, i32* %4375, align 8
  br label %4378

; <label>:4376:                                   ; preds = %33
  call void @BZ2_bz__AssertH__fail(i32 4001)
  br label %4377

; <label>:4377:                                   ; preds = %4376
  call void @BZ2_bz__AssertH__fail(i32 4002)
  br label %4378

; <label>:4378:                                   ; preds = %4377, %4368, %4323, %4248, %4173, %4098, %4072, %4024, %3999, %3951, %3926, %3878, %3853, %3805, %3780, %3732, %3707, %3248, %3213, %3196, %3136, %3105, %3057, %3008, %2792, %2778, %2761, %2719, %2659, %2628, %2580, %2531, %2497, %2437, %2406, %2358, %2309, %2155, %2082, %2057, %2004, %1929, %1877, %1848, %1801, %1777, %1728, %1701, %1636, %1536, %1508, %1499, %1444, %1369, %1294, %1224, %1148, %1073, %998, %923, %884, %836, %811, %763, %738, %690, %665, %617, %592, %544, %519, %467, %441, %422, %379, %326, %301, %253, %228, %180, %155, %107
  %.14356 = phi i32* [ %81, %4377 ], [ %81, %4368 ], [ %81, %4323 ], [ %81, %4248 ], [ %81, %4173 ], [ %81, %4098 ], [ %81, %4072 ], [ %81, %4024 ], [ %81, %3999 ], [ %81, %3951 ], [ %81, %3926 ], [ %81, %3878 ], [ %81, %3853 ], [ %81, %3805 ], [ %81, %3780 ], [ %81, %3732 ], [ %.12354, %3105 ], [ %.12354, %3196 ], [ %.4346, %3213 ], [ %.4346, %3248 ], [ %.4346, %3707 ], [ %.5347, %2531 ], [ %.8350, %2628 ], [ %.8350, %2719 ], [ %.8350, %2761 ], [ %.8350, %2778 ], [ %.9351, %2659 ], [ %.7349, %2580 ], [ %.4346, %2792 ], [ %.4346, %3008 ], [ %.11353, %3057 ], [ %.13355, %3136 ], [ %.2344, %2406 ], [ %.2344, %2497 ], [ %.3345, %2437 ], [ %.1343, %2358 ], [ %81, %2057 ], [ %81, %2004 ], [ %81, %2309 ], [ %81, %2082 ], [ %81, %2155 ], [ %81, %1929 ], [ %81, %1877 ], [ %81, %1848 ], [ %81, %1801 ], [ %81, %1777 ], [ %81, %1728 ], [ %81, %1701 ], [ %81, %1636 ], [ %81, %1536 ], [ %81, %1499 ], [ %81, %1508 ], [ %81, %1444 ], [ %81, %1369 ], [ %81, %1294 ], [ %81, %1224 ], [ %81, %1148 ], [ %81, %1073 ], [ %81, %998 ], [ %81, %923 ], [ %81, %884 ], [ %81, %836 ], [ %81, %811 ], [ %81, %763 ], [ %81, %738 ], [ %81, %690 ], [ %81, %665 ], [ %81, %617 ], [ %81, %592 ], [ %81, %544 ], [ %81, %519 ], [ %81, %467 ], [ %81, %379 ], [ %81, %422 ], [ %81, %441 ], [ %81, %326 ], [ %81, %301 ], [ %81, %253 ], [ %81, %228 ], [ %81, %180 ], [ %81, %155 ], [ %81, %107 ]
  %.14341 = phi i32* [ %79, %4377 ], [ %79, %4368 ], [ %79, %4323 ], [ %79, %4248 ], [ %79, %4173 ], [ %79, %4098 ], [ %79, %4072 ], [ %79, %4024 ], [ %79, %3999 ], [ %79, %3951 ], [ %79, %3926 ], [ %79, %3878 ], [ %79, %3853 ], [ %79, %3805 ], [ %79, %3780 ], [ %79, %3732 ], [ %.12339, %3105 ], [ %.12339, %3196 ], [ %.4331, %3213 ], [ %.4331, %3248 ], [ %.4331, %3707 ], [ %.5332, %2531 ], [ %.8335, %2628 ], [ %.8335, %2719 ], [ %.8335, %2761 ], [ %.8335, %2778 ], [ %.9336, %2659 ], [ %.7334, %2580 ], [ %.4331, %2792 ], [ %.4331, %3008 ], [ %.11338, %3057 ], [ %.13340, %3136 ], [ %.2329, %2406 ], [ %.2329, %2497 ], [ %.3330, %2437 ], [ %.1328, %2358 ], [ %79, %2057 ], [ %79, %2004 ], [ %79, %2309 ], [ %79, %2082 ], [ %79, %2155 ], [ %79, %1929 ], [ %79, %1877 ], [ %79, %1848 ], [ %79, %1801 ], [ %79, %1777 ], [ %79, %1728 ], [ %79, %1701 ], [ %79, %1636 ], [ %79, %1536 ], [ %79, %1499 ], [ %79, %1508 ], [ %79, %1444 ], [ %79, %1369 ], [ %79, %1294 ], [ %79, %1224 ], [ %79, %1148 ], [ %79, %1073 ], [ %79, %998 ], [ %79, %923 ], [ %79, %884 ], [ %79, %836 ], [ %79, %811 ], [ %79, %763 ], [ %79, %738 ], [ %79, %690 ], [ %79, %665 ], [ %79, %617 ], [ %79, %592 ], [ %79, %544 ], [ %79, %519 ], [ %79, %467 ], [ %79, %379 ], [ %79, %422 ], [ %79, %441 ], [ %79, %326 ], [ %79, %301 ], [ %79, %253 ], [ %79, %228 ], [ %79, %180 ], [ %79, %155 ], [ %79, %107 ]
  %.14326 = phi i32* [ %77, %4377 ], [ %77, %4368 ], [ %77, %4323 ], [ %77, %4248 ], [ %77, %4173 ], [ %77, %4098 ], [ %77, %4072 ], [ %77, %4024 ], [ %77, %3999 ], [ %77, %3951 ], [ %77, %3926 ], [ %77, %3878 ], [ %77, %3853 ], [ %77, %3805 ], [ %77, %3780 ], [ %77, %3732 ], [ %.12324, %3105 ], [ %.12324, %3196 ], [ %.4316, %3213 ], [ %.4316, %3248 ], [ %.4316, %3707 ], [ %.5317, %2531 ], [ %.8320, %2628 ], [ %.8320, %2719 ], [ %.8320, %2761 ], [ %.8320, %2778 ], [ %.9321, %2659 ], [ %.7319, %2580 ], [ %.4316, %2792 ], [ %.4316, %3008 ], [ %.11323, %3057 ], [ %.13325, %3136 ], [ %.2314, %2406 ], [ %.2314, %2497 ], [ %.3315, %2437 ], [ %.1313, %2358 ], [ %77, %2057 ], [ %77, %2004 ], [ %77, %2309 ], [ %77, %2082 ], [ %77, %2155 ], [ %77, %1929 ], [ %77, %1877 ], [ %77, %1848 ], [ %77, %1801 ], [ %77, %1777 ], [ %77, %1728 ], [ %77, %1701 ], [ %77, %1636 ], [ %77, %1536 ], [ %77, %1499 ], [ %77, %1508 ], [ %77, %1444 ], [ %77, %1369 ], [ %77, %1294 ], [ %77, %1224 ], [ %77, %1148 ], [ %77, %1073 ], [ %77, %998 ], [ %77, %923 ], [ %77, %884 ], [ %77, %836 ], [ %77, %811 ], [ %77, %763 ], [ %77, %738 ], [ %77, %690 ], [ %77, %665 ], [ %77, %617 ], [ %77, %592 ], [ %77, %544 ], [ %77, %519 ], [ %77, %467 ], [ %77, %379 ], [ %77, %422 ], [ %77, %441 ], [ %77, %326 ], [ %77, %301 ], [ %77, %253 ], [ %77, %228 ], [ %77, %180 ], [ %77, %155 ], [ %77, %107 ]
  %.14311 = phi i32 [ %75, %4377 ], [ %75, %4368 ], [ %75, %4323 ], [ %75, %4248 ], [ %75, %4173 ], [ %75, %4098 ], [ %75, %4072 ], [ %75, %4024 ], [ %75, %3999 ], [ %75, %3951 ], [ %75, %3926 ], [ %75, %3878 ], [ %75, %3853 ], [ %75, %3805 ], [ %75, %3780 ], [ %75, %3732 ], [ %.12309, %3105 ], [ %.12309, %3196 ], [ %.4301, %3213 ], [ %.4301, %3248 ], [ %.4301, %3707 ], [ %.5302, %2531 ], [ %.8305, %2628 ], [ %.8305, %2719 ], [ %.8305, %2761 ], [ %.8305, %2778 ], [ %.9306, %2659 ], [ %.7304, %2580 ], [ %.4301, %2792 ], [ %.4301, %3008 ], [ %.11308, %3057 ], [ %.13310, %3136 ], [ %.2299, %2406 ], [ %.2299, %2497 ], [ %.3300, %2437 ], [ %.1298, %2358 ], [ %75, %2057 ], [ %75, %2004 ], [ %75, %2309 ], [ %75, %2082 ], [ %75, %2155 ], [ %75, %1929 ], [ %75, %1877 ], [ %75, %1848 ], [ %75, %1801 ], [ %75, %1777 ], [ %75, %1728 ], [ %75, %1701 ], [ %75, %1636 ], [ %75, %1536 ], [ %75, %1499 ], [ %75, %1508 ], [ %75, %1444 ], [ %75, %1369 ], [ %75, %1294 ], [ %75, %1224 ], [ %75, %1148 ], [ %75, %1073 ], [ %75, %998 ], [ %75, %923 ], [ %75, %884 ], [ %75, %836 ], [ %75, %811 ], [ %75, %763 ], [ %75, %738 ], [ %75, %690 ], [ %75, %665 ], [ %75, %617 ], [ %75, %592 ], [ %75, %544 ], [ %75, %519 ], [ %75, %467 ], [ %75, %379 ], [ %75, %422 ], [ %75, %441 ], [ %75, %326 ], [ %75, %301 ], [ %75, %253 ], [ %75, %228 ], [ %75, %180 ], [ %75, %155 ], [ %75, %107 ]
  %.14296 = phi i32 [ %73, %4377 ], [ %73, %4368 ], [ %73, %4323 ], [ %73, %4248 ], [ %73, %4173 ], [ %73, %4098 ], [ %73, %4072 ], [ %73, %4024 ], [ %73, %3999 ], [ %73, %3951 ], [ %73, %3926 ], [ %73, %3878 ], [ %73, %3853 ], [ %73, %3805 ], [ %73, %3780 ], [ %73, %3732 ], [ %.12294, %3105 ], [ %.12294, %3196 ], [ %.4286, %3213 ], [ %.4286, %3248 ], [ %.4286, %3707 ], [ %.5287, %2531 ], [ %.8290, %2628 ], [ %.8290, %2719 ], [ %.8290, %2761 ], [ %.8290, %2778 ], [ %.9291, %2659 ], [ %.7289, %2580 ], [ %.4286, %2792 ], [ %.4286, %3008 ], [ %.11293, %3057 ], [ %.13295, %3136 ], [ %.2284, %2406 ], [ %.2284, %2497 ], [ %.3285, %2437 ], [ %.1283, %2358 ], [ %73, %2057 ], [ %73, %2004 ], [ %73, %2309 ], [ %73, %2082 ], [ %73, %2155 ], [ %73, %1929 ], [ %73, %1877 ], [ %73, %1848 ], [ %73, %1801 ], [ %73, %1777 ], [ %73, %1728 ], [ %73, %1701 ], [ %73, %1636 ], [ %73, %1536 ], [ %73, %1499 ], [ %73, %1508 ], [ %73, %1444 ], [ %73, %1369 ], [ %73, %1294 ], [ %73, %1224 ], [ %73, %1148 ], [ %73, %1073 ], [ %73, %998 ], [ %73, %923 ], [ %73, %884 ], [ %73, %836 ], [ %73, %811 ], [ %73, %763 ], [ %73, %738 ], [ %73, %690 ], [ %73, %665 ], [ %73, %617 ], [ %73, %592 ], [ %73, %544 ], [ %73, %519 ], [ %73, %467 ], [ %73, %379 ], [ %73, %422 ], [ %73, %441 ], [ %73, %326 ], [ %73, %301 ], [ %73, %253 ], [ %73, %228 ], [ %73, %180 ], [ %73, %155 ], [ %73, %107 ]
  %.10281 = phi i32 [ %71, %4377 ], [ %71, %4368 ], [ %71, %4323 ], [ %71, %4248 ], [ %71, %4173 ], [ %71, %4098 ], [ %71, %4072 ], [ %71, %4024 ], [ %71, %3999 ], [ %71, %3951 ], [ %71, %3926 ], [ %71, %3878 ], [ %71, %3853 ], [ %71, %3805 ], [ %71, %3780 ], [ %71, %3732 ], [ %.8279, %3105 ], [ %.8279, %3196 ], [ %.2273, %3213 ], [ %.2273, %3248 ], [ %.2273, %3707 ], [ %.3274, %2531 ], [ %.5276, %2628 ], [ %.5276, %2719 ], [ %.5276, %2761 ], [ %.5276, %2778 ], [ %.6277, %2659 ], [ %.4275, %2580 ], [ %.2273, %2792 ], [ %.2273, %3008 ], [ %.7278, %3057 ], [ %.9280, %3136 ], [ %.0271, %2406 ], [ %.0271, %2497 ], [ %.1272, %2437 ], [ %71, %2358 ], [ %71, %2057 ], [ %71, %2004 ], [ %71, %2309 ], [ %71, %2082 ], [ %71, %2155 ], [ %71, %1929 ], [ %71, %1877 ], [ %71, %1848 ], [ %71, %1801 ], [ %71, %1777 ], [ %71, %1728 ], [ %71, %1701 ], [ %71, %1636 ], [ %71, %1536 ], [ %71, %1499 ], [ %71, %1508 ], [ %71, %1444 ], [ %71, %1369 ], [ %71, %1294 ], [ %71, %1224 ], [ %71, %1148 ], [ %71, %1073 ], [ %71, %998 ], [ %71, %923 ], [ %71, %884 ], [ %71, %836 ], [ %71, %811 ], [ %71, %763 ], [ %71, %738 ], [ %71, %690 ], [ %71, %665 ], [ %71, %617 ], [ %71, %592 ], [ %71, %544 ], [ %71, %519 ], [ %71, %467 ], [ %71, %379 ], [ %71, %422 ], [ %71, %441 ], [ %71, %326 ], [ %71, %301 ], [ %71, %253 ], [ %71, %228 ], [ %71, %180 ], [ %71, %155 ], [ %71, %107 ]
  %.10270 = phi i32 [ %69, %4377 ], [ %69, %4368 ], [ %69, %4323 ], [ %69, %4248 ], [ %69, %4173 ], [ %69, %4098 ], [ %69, %4072 ], [ %69, %4024 ], [ %69, %3999 ], [ %69, %3951 ], [ %69, %3926 ], [ %69, %3878 ], [ %69, %3853 ], [ %69, %3805 ], [ %69, %3780 ], [ %69, %3732 ], [ %.8268, %3105 ], [ %.8268, %3196 ], [ %.2262, %3213 ], [ %.2262, %3248 ], [ %.2262, %3707 ], [ %.3263, %2531 ], [ %.5265, %2628 ], [ %.5265, %2719 ], [ %.5265, %2761 ], [ %.5265, %2778 ], [ %.6266, %2659 ], [ %.4264, %2580 ], [ %.2262, %2792 ], [ %.2262, %3008 ], [ %.7267, %3057 ], [ %.9269, %3136 ], [ %.0260, %2406 ], [ %.0260, %2497 ], [ %.1261, %2437 ], [ %69, %2358 ], [ %69, %2057 ], [ %69, %2004 ], [ %69, %2309 ], [ %69, %2082 ], [ %69, %2155 ], [ %69, %1929 ], [ %69, %1877 ], [ %69, %1848 ], [ %69, %1801 ], [ %69, %1777 ], [ %69, %1728 ], [ %69, %1701 ], [ %69, %1636 ], [ %69, %1536 ], [ %69, %1499 ], [ %69, %1508 ], [ %69, %1444 ], [ %69, %1369 ], [ %69, %1294 ], [ %69, %1224 ], [ %69, %1148 ], [ %69, %1073 ], [ %69, %998 ], [ %69, %923 ], [ %69, %884 ], [ %69, %836 ], [ %69, %811 ], [ %69, %763 ], [ %69, %738 ], [ %69, %690 ], [ %69, %665 ], [ %69, %617 ], [ %69, %592 ], [ %69, %544 ], [ %69, %519 ], [ %69, %467 ], [ %69, %379 ], [ %69, %422 ], [ %69, %441 ], [ %69, %326 ], [ %69, %301 ], [ %69, %253 ], [ %69, %228 ], [ %69, %180 ], [ %69, %155 ], [ %69, %107 ]
  %.11259 = phi i32 [ %67, %4377 ], [ %67, %4368 ], [ %67, %4323 ], [ %67, %4248 ], [ %67, %4173 ], [ %67, %4098 ], [ %67, %4072 ], [ %67, %4024 ], [ %67, %3999 ], [ %67, %3951 ], [ %67, %3926 ], [ %67, %3878 ], [ %67, %3853 ], [ %67, %3805 ], [ %67, %3780 ], [ %67, %3732 ], [ %.9257, %3105 ], [ %.9257, %3196 ], [ %.3251, %3213 ], [ %.3251, %3248 ], [ %.3251, %3707 ], [ %.4252, %2531 ], [ %.6254, %2628 ], [ %.6254, %2719 ], [ %.6254, %2761 ], [ %.6254, %2778 ], [ %.7255, %2659 ], [ %.5253, %2580 ], [ %.3251, %2792 ], [ %.3251, %3008 ], [ %.8256, %3057 ], [ %.10258, %3136 ], [ %.1249, %2406 ], [ %.1249, %2497 ], [ %.2250, %2437 ], [ %.0248, %2358 ], [ %67, %2057 ], [ %67, %2004 ], [ %67, %2309 ], [ %67, %2082 ], [ %67, %2155 ], [ %67, %1929 ], [ %67, %1877 ], [ %67, %1848 ], [ %67, %1801 ], [ %67, %1777 ], [ %67, %1728 ], [ %67, %1701 ], [ %67, %1636 ], [ %67, %1536 ], [ %67, %1499 ], [ %67, %1508 ], [ %67, %1444 ], [ %67, %1369 ], [ %67, %1294 ], [ %67, %1224 ], [ %67, %1148 ], [ %67, %1073 ], [ %67, %998 ], [ %67, %923 ], [ %67, %884 ], [ %67, %836 ], [ %67, %811 ], [ %67, %763 ], [ %67, %738 ], [ %67, %690 ], [ %67, %665 ], [ %67, %617 ], [ %67, %592 ], [ %67, %544 ], [ %67, %519 ], [ %67, %467 ], [ %67, %379 ], [ %67, %422 ], [ %67, %441 ], [ %67, %326 ], [ %67, %301 ], [ %67, %253 ], [ %67, %228 ], [ %67, %180 ], [ %67, %155 ], [ %67, %107 ]
  %.18246 = phi i32 [ %63, %4377 ], [ %63, %4368 ], [ %63, %4323 ], [ %63, %4248 ], [ %63, %4173 ], [ %63, %4098 ], [ %63, %4072 ], [ %63, %4024 ], [ %63, %3999 ], [ %63, %3951 ], [ %63, %3926 ], [ %63, %3878 ], [ %63, %3853 ], [ %63, %3805 ], [ %63, %3780 ], [ %63, %3732 ], [ %.16244, %3105 ], [ %.16244, %3196 ], [ %.10238, %3213 ], [ %.10238, %3248 ], [ %.10238, %3707 ], [ %.11239, %2531 ], [ %.13241, %2628 ], [ %.13241, %2719 ], [ %.13241, %2761 ], [ %.13241, %2778 ], [ %.14242, %2659 ], [ %.12240, %2580 ], [ %.10238, %2792 ], [ %.10238, %3008 ], [ %.15243, %3057 ], [ %.17245, %3136 ], [ %.8236, %2406 ], [ %.8236, %2497 ], [ %.9237, %2437 ], [ %.7235, %2358 ], [ %.3231, %2057 ], [ %.1229, %2004 ], [ %.0228, %2309 ], [ %.4232, %2082 ], [ %.5233, %2155 ], [ %63, %1929 ], [ %63, %1877 ], [ %63, %1848 ], [ %63, %1801 ], [ %63, %1777 ], [ %63, %1728 ], [ %63, %1701 ], [ %63, %1636 ], [ %63, %1536 ], [ %63, %1499 ], [ %63, %1508 ], [ %63, %1444 ], [ %63, %1369 ], [ %63, %1294 ], [ %63, %1224 ], [ %63, %1148 ], [ %63, %1073 ], [ %63, %998 ], [ %63, %923 ], [ %63, %884 ], [ %63, %836 ], [ %63, %811 ], [ %63, %763 ], [ %63, %738 ], [ %63, %690 ], [ %63, %665 ], [ %63, %617 ], [ %63, %592 ], [ %63, %544 ], [ %63, %519 ], [ %63, %467 ], [ %63, %379 ], [ %63, %422 ], [ %63, %441 ], [ %63, %326 ], [ %63, %301 ], [ %63, %253 ], [ %63, %228 ], [ %63, %180 ], [ %63, %155 ], [ %63, %107 ]
  %.8227 = phi i32 [ %61, %4377 ], [ %61, %4368 ], [ %61, %4323 ], [ %61, %4248 ], [ %61, %4173 ], [ %61, %4098 ], [ %61, %4072 ], [ %61, %4024 ], [ %61, %3999 ], [ %61, %3951 ], [ %61, %3926 ], [ %61, %3878 ], [ %61, %3853 ], [ %61, %3805 ], [ %61, %3780 ], [ %61, %3732 ], [ %.6225, %3105 ], [ %.6225, %3196 ], [ %.0219, %3213 ], [ %.0219, %3248 ], [ %.0219, %3707 ], [ %2526, %2531 ], [ %.3222, %2628 ], [ %.3222, %2719 ], [ %.3222, %2761 ], [ %.3222, %2778 ], [ %.4223, %2659 ], [ %.2221, %2580 ], [ %.0219, %2792 ], [ %.0219, %3008 ], [ %.5224, %3057 ], [ %.7226, %3136 ], [ %61, %2406 ], [ %61, %2497 ], [ %61, %2437 ], [ %61, %2358 ], [ %61, %2057 ], [ %61, %2004 ], [ %61, %2309 ], [ %61, %2082 ], [ %61, %2155 ], [ %61, %1929 ], [ %61, %1877 ], [ %61, %1848 ], [ %61, %1801 ], [ %61, %1777 ], [ %61, %1728 ], [ %61, %1701 ], [ %61, %1636 ], [ %61, %1536 ], [ %61, %1499 ], [ %61, %1508 ], [ %61, %1444 ], [ %61, %1369 ], [ %61, %1294 ], [ %61, %1224 ], [ %61, %1148 ], [ %61, %1073 ], [ %61, %998 ], [ %61, %923 ], [ %61, %884 ], [ %61, %836 ], [ %61, %811 ], [ %61, %763 ], [ %61, %738 ], [ %61, %690 ], [ %61, %665 ], [ %61, %617 ], [ %61, %592 ], [ %61, %544 ], [ %61, %519 ], [ %61, %467 ], [ %61, %379 ], [ %61, %422 ], [ %61, %441 ], [ %61, %326 ], [ %61, %301 ], [ %61, %253 ], [ %61, %228 ], [ %61, %180 ], [ %61, %155 ], [ %61, %107 ]
  %.13218 = phi i32 [ %59, %4377 ], [ %59, %4368 ], [ %59, %4323 ], [ %59, %4248 ], [ %59, %4173 ], [ %59, %4098 ], [ %59, %4072 ], [ %59, %4024 ], [ %59, %3999 ], [ %59, %3951 ], [ %59, %3926 ], [ %59, %3878 ], [ %59, %3853 ], [ %59, %3805 ], [ %59, %3780 ], [ %59, %3732 ], [ %.11216, %3105 ], [ %.11216, %3196 ], [ %.0205, %3213 ], [ %.0205, %3248 ], [ %.0205, %3707 ], [ %.3208, %2531 ], [ %.5210, %2628 ], [ %.5210, %2719 ], [ %.7212.lcssa369, %2761 ], [ %.8213.lcssa371, %2778 ], [ %.6211, %2659 ], [ %.4209, %2580 ], [ %.0205, %2792 ], [ %.0205, %3008 ], [ %.10215, %3057 ], [ %.12217, %3136 ], [ %59, %2406 ], [ %59, %2497 ], [ %59, %2437 ], [ %59, %2358 ], [ %59, %2057 ], [ %59, %2004 ], [ %59, %2309 ], [ %59, %2082 ], [ %59, %2155 ], [ %59, %1929 ], [ %59, %1877 ], [ %59, %1848 ], [ %59, %1801 ], [ %59, %1777 ], [ %59, %1728 ], [ %59, %1701 ], [ %59, %1636 ], [ %59, %1536 ], [ %59, %1499 ], [ %59, %1508 ], [ %59, %1444 ], [ %59, %1369 ], [ %59, %1294 ], [ %59, %1224 ], [ %59, %1148 ], [ %59, %1073 ], [ %59, %998 ], [ %59, %923 ], [ %59, %884 ], [ %59, %836 ], [ %59, %811 ], [ %59, %763 ], [ %59, %738 ], [ %59, %690 ], [ %59, %665 ], [ %59, %617 ], [ %59, %592 ], [ %59, %544 ], [ %59, %519 ], [ %59, %467 ], [ %59, %379 ], [ %59, %422 ], [ %59, %441 ], [ %59, %326 ], [ %59, %301 ], [ %59, %253 ], [ %59, %228 ], [ %59, %180 ], [ %59, %155 ], [ %59, %107 ]
  %.14204 = phi i32 [ %57, %4377 ], [ %57, %4368 ], [ %57, %4323 ], [ %57, %4248 ], [ %57, %4173 ], [ %57, %4098 ], [ %57, %4072 ], [ %57, %4024 ], [ %57, %3999 ], [ %57, %3951 ], [ %57, %3926 ], [ %57, %3878 ], [ %57, %3853 ], [ %57, %3805 ], [ %57, %3780 ], [ %57, %3732 ], [ %.12202, %3105 ], [ %.12202, %3196 ], [ %.3193, %3213 ], [ %.3193, %3248 ], [ %.3193, %3707 ], [ %.4194, %2531 ], [ %.6196, %2628 ], [ %.6196, %2719 ], [ %2762, %2761 ], [ %2779, %2778 ], [ %.7197, %2659 ], [ %.5195, %2580 ], [ %.3193, %2792 ], [ %3003, %3008 ], [ %.11201, %3057 ], [ %.13203, %3136 ], [ %.1191, %2406 ], [ %.1191, %2497 ], [ %.2192, %2437 ], [ %.0190, %2358 ], [ %57, %2057 ], [ %57, %2004 ], [ 0, %2309 ], [ %57, %2082 ], [ %57, %2155 ], [ %57, %1929 ], [ %57, %1877 ], [ %57, %1848 ], [ %57, %1801 ], [ %57, %1777 ], [ %57, %1728 ], [ %57, %1701 ], [ %57, %1636 ], [ %57, %1536 ], [ %57, %1499 ], [ %57, %1508 ], [ %57, %1444 ], [ %57, %1369 ], [ %57, %1294 ], [ %57, %1224 ], [ %57, %1148 ], [ %57, %1073 ], [ %57, %998 ], [ %57, %923 ], [ %57, %884 ], [ %57, %836 ], [ %57, %811 ], [ %57, %763 ], [ %57, %738 ], [ %57, %690 ], [ %57, %665 ], [ %57, %617 ], [ %57, %592 ], [ %57, %544 ], [ %57, %519 ], [ %57, %467 ], [ %57, %379 ], [ %57, %422 ], [ %57, %441 ], [ %57, %326 ], [ %57, %301 ], [ %57, %253 ], [ %57, %228 ], [ %57, %180 ], [ %57, %155 ], [ %57, %107 ]
  %.11189 = phi i32 [ %55, %4377 ], [ %55, %4368 ], [ %55, %4323 ], [ %55, %4248 ], [ %55, %4173 ], [ %55, %4098 ], [ %55, %4072 ], [ %55, %4024 ], [ %55, %3999 ], [ %55, %3951 ], [ %55, %3926 ], [ %55, %3878 ], [ %55, %3853 ], [ %55, %3805 ], [ %55, %3780 ], [ %55, %3732 ], [ %.9187, %3105 ], [ %.9187, %3196 ], [ %.3181, %3213 ], [ %.3181, %3248 ], [ %.3181, %3707 ], [ %.4182, %2531 ], [ %.6184, %2628 ], [ %.6184, %2719 ], [ %.6184, %2761 ], [ %.6184, %2778 ], [ %.7185, %2659 ], [ %.5183, %2580 ], [ %.3181, %2792 ], [ %.3181, %3008 ], [ %.8186, %3057 ], [ %.10188, %3136 ], [ %.1179, %2406 ], [ %.1179, %2497 ], [ %.2180, %2437 ], [ %.0178, %2358 ], [ %55, %2057 ], [ %55, %2004 ], [ %2283, %2309 ], [ %55, %2082 ], [ %55, %2155 ], [ %55, %1929 ], [ %55, %1877 ], [ %55, %1848 ], [ %55, %1801 ], [ %55, %1777 ], [ %55, %1728 ], [ %55, %1701 ], [ %55, %1636 ], [ %55, %1536 ], [ %55, %1499 ], [ %55, %1508 ], [ %55, %1444 ], [ %55, %1369 ], [ %55, %1294 ], [ %55, %1224 ], [ %55, %1148 ], [ %55, %1073 ], [ %55, %998 ], [ %55, %923 ], [ %55, %884 ], [ %55, %836 ], [ %55, %811 ], [ %55, %763 ], [ %55, %738 ], [ %55, %690 ], [ %55, %665 ], [ %55, %617 ], [ %55, %592 ], [ %55, %544 ], [ %55, %519 ], [ %55, %467 ], [ %55, %379 ], [ %55, %422 ], [ %55, %441 ], [ %55, %326 ], [ %55, %301 ], [ %55, %253 ], [ %55, %228 ], [ %55, %180 ], [ %55, %155 ], [ %55, %107 ]
  %.8177 = phi i32 [ %53, %4377 ], [ %53, %4368 ], [ %53, %4323 ], [ %53, %4248 ], [ %53, %4173 ], [ %53, %4098 ], [ %53, %4072 ], [ %53, %4024 ], [ %53, %3999 ], [ %53, %3951 ], [ %53, %3926 ], [ %53, %3878 ], [ %53, %3853 ], [ %53, %3805 ], [ %53, %3780 ], [ %53, %3732 ], [ %.6175, %3105 ], [ %.6175, %3196 ], [ %.0169, %3213 ], [ %.0169, %3248 ], [ %.0169, %3707 ], [ %.1170, %2531 ], [ %.3172, %2628 ], [ %.3172, %2719 ], [ %2727, %2761 ], [ %2727, %2778 ], [ %.4173, %2659 ], [ %.2171, %2580 ], [ %.0169, %2792 ], [ %.0169, %3008 ], [ %.5174, %3057 ], [ %.7176, %3136 ], [ %53, %2406 ], [ %53, %2497 ], [ %53, %2437 ], [ %53, %2358 ], [ %53, %2057 ], [ %53, %2004 ], [ %53, %2309 ], [ %53, %2082 ], [ %53, %2155 ], [ %53, %1929 ], [ %53, %1877 ], [ %53, %1848 ], [ %53, %1801 ], [ %53, %1777 ], [ %53, %1728 ], [ %53, %1701 ], [ %53, %1636 ], [ %53, %1536 ], [ %53, %1499 ], [ %53, %1508 ], [ %53, %1444 ], [ %53, %1369 ], [ %53, %1294 ], [ %53, %1224 ], [ %53, %1148 ], [ %53, %1073 ], [ %53, %998 ], [ %53, %923 ], [ %53, %884 ], [ %53, %836 ], [ %53, %811 ], [ %53, %763 ], [ %53, %738 ], [ %53, %690 ], [ %53, %665 ], [ %53, %617 ], [ %53, %592 ], [ %53, %544 ], [ %53, %519 ], [ %53, %467 ], [ %53, %379 ], [ %53, %422 ], [ %53, %441 ], [ %53, %326 ], [ %53, %301 ], [ %53, %253 ], [ %53, %228 ], [ %53, %180 ], [ %53, %155 ], [ %53, %107 ]
  %.14168 = phi i32 [ %51, %4377 ], [ %51, %4368 ], [ %51, %4323 ], [ %51, %4248 ], [ %51, %4173 ], [ %51, %4098 ], [ %51, %4072 ], [ %51, %4024 ], [ %51, %3999 ], [ %51, %3951 ], [ %51, %3926 ], [ %51, %3878 ], [ %51, %3853 ], [ %51, %3805 ], [ %51, %3780 ], [ %51, %3732 ], [ %.12166, %3105 ], [ %.12166, %3196 ], [ %.4158, %3213 ], [ %.4158, %3248 ], [ %.4158, %3707 ], [ %.5159, %2531 ], [ %.8162, %2628 ], [ %.8162, %2719 ], [ %.8162, %2761 ], [ %.8162, %2778 ], [ %.9163, %2659 ], [ %.7161, %2580 ], [ %.4158, %2792 ], [ %.4158, %3008 ], [ %.11165, %3057 ], [ %.13167, %3136 ], [ %.2156, %2406 ], [ %.2156, %2497 ], [ %.3157, %2437 ], [ %.1155, %2358 ], [ %51, %2057 ], [ %51, %2004 ], [ 0, %2309 ], [ %51, %2082 ], [ %51, %2155 ], [ %51, %1929 ], [ %51, %1877 ], [ %51, %1848 ], [ %51, %1801 ], [ %51, %1777 ], [ %51, %1728 ], [ %51, %1701 ], [ %51, %1636 ], [ %51, %1536 ], [ %51, %1499 ], [ %51, %1508 ], [ %51, %1444 ], [ %51, %1369 ], [ %51, %1294 ], [ %51, %1224 ], [ %51, %1148 ], [ %51, %1073 ], [ %51, %998 ], [ %51, %923 ], [ %51, %884 ], [ %51, %836 ], [ %51, %811 ], [ %51, %763 ], [ %51, %738 ], [ %51, %690 ], [ %51, %665 ], [ %51, %617 ], [ %51, %592 ], [ %51, %544 ], [ %51, %519 ], [ %51, %467 ], [ %51, %379 ], [ %51, %422 ], [ %51, %441 ], [ %51, %326 ], [ %51, %301 ], [ %51, %253 ], [ %51, %228 ], [ %51, %180 ], [ %51, %155 ], [ %51, %107 ]
  %.14153 = phi i32 [ %49, %4377 ], [ %49, %4368 ], [ %49, %4323 ], [ %49, %4248 ], [ %49, %4173 ], [ %49, %4098 ], [ %49, %4072 ], [ %49, %4024 ], [ %49, %3999 ], [ %49, %3951 ], [ %49, %3926 ], [ %49, %3878 ], [ %49, %3853 ], [ %49, %3805 ], [ %49, %3780 ], [ %49, %3732 ], [ %.12151, %3105 ], [ %.12151, %3196 ], [ %.4143, %3213 ], [ %.4143, %3248 ], [ %.4143, %3707 ], [ %2529, %2531 ], [ %.8147, %2628 ], [ %.8147, %2719 ], [ %.8147, %2761 ], [ %.8147, %2778 ], [ %.9148, %2659 ], [ %.7146, %2580 ], [ %.4143, %2792 ], [ %3006, %3008 ], [ %.11150, %3057 ], [ %.13152, %3136 ], [ %.2141, %2406 ], [ %.2141, %2497 ], [ %.3142, %2437 ], [ %.1140, %2358 ], [ %49, %2057 ], [ %49, %2004 ], [ %2307, %2309 ], [ %49, %2082 ], [ %49, %2155 ], [ %49, %1929 ], [ %49, %1877 ], [ %49, %1848 ], [ %49, %1801 ], [ %49, %1777 ], [ %49, %1728 ], [ %49, %1701 ], [ %49, %1636 ], [ %49, %1536 ], [ %49, %1499 ], [ %49, %1508 ], [ %49, %1444 ], [ %49, %1369 ], [ %49, %1294 ], [ %49, %1224 ], [ %49, %1148 ], [ %49, %1073 ], [ %49, %998 ], [ %49, %923 ], [ %49, %884 ], [ %49, %836 ], [ %49, %811 ], [ %49, %763 ], [ %49, %738 ], [ %49, %690 ], [ %49, %665 ], [ %49, %617 ], [ %49, %592 ], [ %49, %544 ], [ %49, %519 ], [ %49, %467 ], [ %49, %379 ], [ %49, %422 ], [ %49, %441 ], [ %49, %326 ], [ %49, %301 ], [ %49, %253 ], [ %49, %228 ], [ %49, %180 ], [ %49, %155 ], [ %49, %107 ]
  %.11138 = phi i32 [ %47, %4377 ], [ %47, %4368 ], [ %47, %4323 ], [ %47, %4248 ], [ %47, %4173 ], [ %47, %4098 ], [ %47, %4072 ], [ %47, %4024 ], [ %47, %3999 ], [ %47, %3951 ], [ %47, %3926 ], [ %47, %3878 ], [ %47, %3853 ], [ %47, %3805 ], [ %47, %3780 ], [ %47, %3732 ], [ %.9136, %3105 ], [ %.9136, %3196 ], [ %.3130, %3213 ], [ %.3130, %3248 ], [ %.3130, %3707 ], [ %.4131, %2531 ], [ %.6133, %2628 ], [ %.6133, %2719 ], [ %.6133, %2761 ], [ %.6133, %2778 ], [ %.7134, %2659 ], [ %.5132, %2580 ], [ %.3130, %2792 ], [ %.3130, %3008 ], [ %.8135, %3057 ], [ %.10137, %3136 ], [ %.1128, %2406 ], [ %.1128, %2497 ], [ %.2129, %2437 ], [ %.0127, %2358 ], [ %47, %2057 ], [ %47, %2004 ], [ %2282, %2309 ], [ %47, %2082 ], [ %47, %2155 ], [ %47, %1929 ], [ %47, %1877 ], [ %47, %1848 ], [ %47, %1801 ], [ %47, %1777 ], [ %47, %1728 ], [ %47, %1701 ], [ %47, %1636 ], [ %47, %1536 ], [ %47, %1499 ], [ %47, %1508 ], [ %47, %1444 ], [ %47, %1369 ], [ %47, %1294 ], [ %47, %1224 ], [ %47, %1148 ], [ %47, %1073 ], [ %47, %998 ], [ %47, %923 ], [ %47, %884 ], [ %47, %836 ], [ %47, %811 ], [ %47, %763 ], [ %47, %738 ], [ %47, %690 ], [ %47, %665 ], [ %47, %617 ], [ %47, %592 ], [ %47, %544 ], [ %47, %519 ], [ %47, %467 ], [ %47, %379 ], [ %47, %422 ], [ %47, %441 ], [ %47, %326 ], [ %47, %301 ], [ %47, %253 ], [ %47, %228 ], [ %47, %180 ], [ %47, %155 ], [ %47, %107 ]
  %.20126 = phi i32 [ %45, %4377 ], [ %45, %4368 ], [ %45, %4323 ], [ %45, %4248 ], [ %45, %4173 ], [ %45, %4098 ], [ %45, %4072 ], [ %45, %4024 ], [ %45, %3999 ], [ %45, %3951 ], [ %45, %3926 ], [ %45, %3878 ], [ %45, %3853 ], [ %45, %3805 ], [ %45, %3780 ], [ %45, %3732 ], [ %.18124, %3105 ], [ %.18124, %3196 ], [ %.12118, %3213 ], [ %.12118, %3248 ], [ %.12118, %3707 ], [ %.13119, %2531 ], [ %.15121, %2628 ], [ %.15121, %2719 ], [ %.15121, %2761 ], [ %.15121, %2778 ], [ %.16122, %2659 ], [ %.14120, %2580 ], [ %.12118, %2792 ], [ %.12118, %3008 ], [ %.17123, %3057 ], [ %.19125, %3136 ], [ %.10116, %2406 ], [ %.10116, %2497 ], [ %.11117, %2437 ], [ %.9115, %2358 ], [ %.6112, %2057 ], [ %.4110, %2004 ], [ %.3109, %2309 ], [ %.7113, %2082 ], [ %.8114, %2155 ], [ %.2108, %1929 ], [ %.2108, %1877 ], [ %1791, %1848 ], [ %45, %1801 ], [ %45, %1777 ], [ %45, %1728 ], [ %45, %1701 ], [ %45, %1636 ], [ %45, %1536 ], [ %45, %1499 ], [ %45, %1508 ], [ %45, %1444 ], [ %45, %1369 ], [ %45, %1294 ], [ %45, %1224 ], [ %45, %1148 ], [ %45, %1073 ], [ %45, %998 ], [ %45, %923 ], [ %45, %884 ], [ %45, %836 ], [ %45, %811 ], [ %45, %763 ], [ %45, %738 ], [ %45, %690 ], [ %45, %665 ], [ %45, %617 ], [ %45, %592 ], [ %45, %544 ], [ %45, %519 ], [ %45, %467 ], [ %45, %379 ], [ %45, %422 ], [ %45, %441 ], [ %45, %326 ], [ %45, %301 ], [ %45, %253 ], [ %45, %228 ], [ %45, %180 ], [ %45, %155 ], [ %45, %107 ]
  %.21105 = phi i32 [ %43, %4377 ], [ %43, %4368 ], [ %43, %4323 ], [ %43, %4248 ], [ %43, %4173 ], [ %43, %4098 ], [ %43, %4072 ], [ %43, %4024 ], [ %43, %3999 ], [ %43, %3951 ], [ %43, %3926 ], [ %43, %3878 ], [ %43, %3853 ], [ %43, %3805 ], [ %43, %3780 ], [ %43, %3732 ], [ %.19103, %3105 ], [ %.19103, %3196 ], [ %.1397, %3213 ], [ %.1397, %3248 ], [ %.1397, %3707 ], [ %.1498, %2531 ], [ %.16100, %2628 ], [ %.16100, %2719 ], [ %.16100, %2761 ], [ %.16100, %2778 ], [ %.17101, %2659 ], [ %.1599, %2580 ], [ %.1397, %2792 ], [ %.1397, %3008 ], [ %.18102, %3057 ], [ %.20104, %3136 ], [ %.1195, %2406 ], [ %.1195, %2497 ], [ %.1296, %2437 ], [ %.1094, %2358 ], [ %.791, %2057 ], [ %.589, %2004 ], [ %.488, %2309 ], [ %.892, %2082 ], [ %.993, %2155 ], [ %.387, %1929 ], [ %.387, %1877 ], [ %.084, %1848 ], [ %.084, %1801 ], [ %1718, %1777 ], [ %43, %1728 ], [ %43, %1701 ], [ %43, %1636 ], [ %43, %1536 ], [ %43, %1499 ], [ %43, %1508 ], [ %43, %1444 ], [ %43, %1369 ], [ %43, %1294 ], [ %43, %1224 ], [ %43, %1148 ], [ %43, %1073 ], [ %43, %998 ], [ %43, %923 ], [ %43, %884 ], [ %43, %836 ], [ %43, %811 ], [ %43, %763 ], [ %43, %738 ], [ %43, %690 ], [ %43, %665 ], [ %43, %617 ], [ %43, %592 ], [ %43, %544 ], [ %43, %519 ], [ %43, %467 ], [ %43, %379 ], [ %43, %422 ], [ %43, %441 ], [ %43, %326 ], [ %43, %301 ], [ %43, %253 ], [ %43, %228 ], [ %43, %180 ], [ %43, %155 ], [ %43, %107 ]
  %.2283 = phi i32 [ %41, %4377 ], [ %41, %4368 ], [ %41, %4323 ], [ %41, %4248 ], [ %41, %4173 ], [ %41, %4098 ], [ %41, %4072 ], [ %41, %4024 ], [ %41, %3999 ], [ %41, %3951 ], [ %41, %3926 ], [ %41, %3878 ], [ %41, %3853 ], [ %41, %3805 ], [ %41, %3780 ], [ %41, %3732 ], [ %.2081, %3105 ], [ %.2081, %3196 ], [ %.1475, %3213 ], [ %.1475, %3248 ], [ %.1475, %3707 ], [ %.1576, %2531 ], [ %.1778, %2628 ], [ %.1778, %2719 ], [ %.1778, %2761 ], [ %.1778, %2778 ], [ %.1879, %2659 ], [ %.1677, %2580 ], [ %.1475, %2792 ], [ %.1475, %3008 ], [ %.1980, %3057 ], [ %.2182, %3136 ], [ %.1273, %2406 ], [ %.1273, %2497 ], [ %.1374, %2437 ], [ %.1172, %2358 ], [ %.869, %2057 ], [ %.667, %2004 ], [ %.566, %2309 ], [ %.970, %2082 ], [ %.1071, %2155 ], [ %.465, %1929 ], [ %.465, %1877 ], [ %.162, %1848 ], [ %.162, %1801 ], [ %.061, %1777 ], [ %.061, %1728 ], [ %41, %1701 ], [ %41, %1636 ], [ %41, %1536 ], [ %41, %1499 ], [ %41, %1508 ], [ %41, %1444 ], [ %41, %1369 ], [ %41, %1294 ], [ %41, %1224 ], [ %41, %1148 ], [ %41, %1073 ], [ %41, %998 ], [ %41, %923 ], [ %41, %884 ], [ %41, %836 ], [ %41, %811 ], [ %41, %763 ], [ %41, %738 ], [ %41, %690 ], [ %41, %665 ], [ %41, %617 ], [ %41, %592 ], [ %41, %544 ], [ %41, %519 ], [ %41, %467 ], [ %41, %379 ], [ %41, %422 ], [ %41, %441 ], [ %41, %326 ], [ %41, %301 ], [ %41, %253 ], [ %41, %228 ], [ %41, %180 ], [ %41, %155 ], [ %41, %107 ]
  %.1860 = phi i32 [ %39, %4377 ], [ %39, %4368 ], [ %39, %4323 ], [ %39, %4248 ], [ %39, %4173 ], [ %39, %4098 ], [ %39, %4072 ], [ %39, %4024 ], [ %39, %3999 ], [ %39, %3951 ], [ %39, %3926 ], [ %39, %3878 ], [ %39, %3853 ], [ %39, %3805 ], [ %39, %3780 ], [ %39, %3732 ], [ %.1658, %3105 ], [ %.1658, %3196 ], [ %.1052, %3213 ], [ %.1052, %3248 ], [ %.1052, %3707 ], [ %.1153, %2531 ], [ %.1355, %2628 ], [ %.1355, %2719 ], [ %.1355, %2761 ], [ %.1355, %2778 ], [ %.1456, %2659 ], [ %.1254, %2580 ], [ %.1052, %2792 ], [ %.1052, %3008 ], [ %.1557, %3057 ], [ %.1759, %3136 ], [ %.850, %2406 ], [ %.850, %2497 ], [ %.951, %2437 ], [ %.749, %2358 ], [ %.345, %2057 ], [ %.143, %2004 ], [ %.648.lcssa, %2309 ], [ %.446, %2082 ], [ %.547, %2155 ], [ %39, %1929 ], [ %39, %1877 ], [ %39, %1848 ], [ %39, %1801 ], [ %39, %1777 ], [ %39, %1728 ], [ %39, %1701 ], [ %39, %1636 ], [ %39, %1536 ], [ %39, %1499 ], [ %39, %1508 ], [ %39, %1444 ], [ %39, %1369 ], [ %39, %1294 ], [ %39, %1224 ], [ %39, %1148 ], [ %39, %1073 ], [ %39, %998 ], [ %39, %923 ], [ %39, %884 ], [ %39, %836 ], [ %39, %811 ], [ %39, %763 ], [ %39, %738 ], [ %39, %690 ], [ %39, %665 ], [ %39, %617 ], [ %39, %592 ], [ %39, %544 ], [ %39, %519 ], [ %39, %467 ], [ %39, %379 ], [ %39, %422 ], [ %39, %441 ], [ %39, %326 ], [ %39, %301 ], [ %39, %253 ], [ %39, %228 ], [ %39, %180 ], [ %39, %155 ], [ %39, %107 ]
  %.2841 = phi i32 [ %37, %4377 ], [ %37, %4368 ], [ %37, %4323 ], [ %37, %4248 ], [ %37, %4173 ], [ %37, %4098 ], [ %37, %4072 ], [ %37, %4024 ], [ %37, %3999 ], [ %37, %3951 ], [ %37, %3926 ], [ %37, %3878 ], [ %37, %3853 ], [ %37, %3805 ], [ %37, %3780 ], [ %37, %3732 ], [ %.2437, %3105 ], [ %.2437, %3196 ], [ %.1831, %3213 ], [ %.1831, %3248 ], [ %.2740, %3707 ], [ %.1932, %2531 ], [ %.2134, %2628 ], [ %.2134, %2719 ], [ %.2134, %2761 ], [ %.2134, %2778 ], [ %.2235, %2659 ], [ %.2033, %2580 ], [ %.1831, %2792 ], [ %.1831, %3008 ], [ %.2336, %3057 ], [ %.2538, %3136 ], [ %.1629, %2406 ], [ %.1629, %2497 ], [ %.1730, %2437 ], [ %.1528, %2358 ], [ %.1225, %2057 ], [ %.1023, %2004 ], [ %.922, %2309 ], [ %.1326, %2082 ], [ %.1427, %2155 ], [ %1927, %1929 ], [ %.821, %1877 ], [ %.518, %1848 ], [ %.518, %1801 ], [ %.417, %1777 ], [ %.417, %1728 ], [ %.013, %1701 ], [ %.215, %1636 ], [ %37, %1536 ], [ %37, %1499 ], [ %37, %1508 ], [ %37, %1444 ], [ %37, %1369 ], [ %37, %1294 ], [ %37, %1224 ], [ %37, %1148 ], [ %37, %1073 ], [ %37, %998 ], [ %37, %923 ], [ %37, %884 ], [ %37, %836 ], [ %37, %811 ], [ %37, %763 ], [ %37, %738 ], [ %37, %690 ], [ %37, %665 ], [ %37, %617 ], [ %37, %592 ], [ %37, %544 ], [ %37, %519 ], [ %37, %467 ], [ %37, %379 ], [ %37, %422 ], [ %37, %441 ], [ %37, %326 ], [ %37, %301 ], [ %37, %253 ], [ %37, %228 ], [ %37, %180 ], [ %37, %155 ], [ %37, %107 ]
  %.40 = phi i32 [ %35, %4377 ], [ %35, %4368 ], [ %35, %4323 ], [ %35, %4248 ], [ %35, %4173 ], [ %35, %4098 ], [ %35, %4072 ], [ %35, %4024 ], [ %35, %3999 ], [ %35, %3951 ], [ %35, %3926 ], [ %35, %3878 ], [ %35, %3853 ], [ %35, %3805 ], [ %35, %3780 ], [ %35, %3732 ], [ %.30, %3105 ], [ %.30, %3196 ], [ %.24, %3213 ], [ %.34.lcssa367, %3248 ], [ %.39, %3707 ], [ %.25, %2531 ], [ %.27, %2628 ], [ %.27, %2719 ], [ %.27, %2761 ], [ %.27, %2778 ], [ %.28, %2659 ], [ %.26, %2580 ], [ %.24, %2792 ], [ %.24, %3008 ], [ %.29, %3057 ], [ %.31, %3136 ], [ %.22, %2406 ], [ %.22, %2497 ], [ %.23, %2437 ], [ %.21, %2358 ], [ %.16, %2057 ], [ %.14, %2004 ], [ %2284, %2309 ], [ %.1712, %2082 ], [ %.18, %2155 ], [ %.11, %1929 ], [ %.11, %1877 ], [ %.8, %1848 ], [ %.8, %1801 ], [ %.7, %1777 ], [ %.7, %1728 ], [ %.3, %1701 ], [ %.5, %1636 ], [ %.110, %1536 ], [ %35, %1499 ], [ %35, %1508 ], [ %35, %1444 ], [ %35, %1369 ], [ %35, %1294 ], [ %35, %1224 ], [ %35, %1148 ], [ %35, %1073 ], [ %35, %998 ], [ %35, %923 ], [ %35, %884 ], [ %35, %836 ], [ %35, %811 ], [ %35, %763 ], [ %35, %738 ], [ %35, %690 ], [ %35, %665 ], [ %35, %617 ], [ %35, %592 ], [ %35, %544 ], [ %35, %519 ], [ %35, %467 ], [ %35, %379 ], [ %35, %422 ], [ %35, %441 ], [ %35, %326 ], [ %35, %301 ], [ %35, %253 ], [ %35, %228 ], [ %35, %180 ], [ %35, %155 ], [ %35, %107 ]
  %.03 = phi i32 [ 0, %4377 ], [ 4, %4368 ], [ 0, %4323 ], [ 0, %4248 ], [ 0, %4173 ], [ 0, %4098 ], [ -4, %4072 ], [ 0, %4024 ], [ -4, %3999 ], [ 0, %3951 ], [ -4, %3926 ], [ 0, %3878 ], [ -4, %3853 ], [ 0, %3805 ], [ -4, %3780 ], [ 0, %3732 ], [ -4, %3105 ], [ -4, %3196 ], [ -4, %3213 ], [ -4, %3248 ], [ 0, %3707 ], [ -4, %2531 ], [ -4, %2628 ], [ -4, %2719 ], [ -4, %2761 ], [ -4, %2778 ], [ 0, %2659 ], [ 0, %2580 ], [ -4, %2792 ], [ -4, %3008 ], [ 0, %3057 ], [ 0, %3136 ], [ -4, %2406 ], [ -4, %2497 ], [ 0, %2437 ], [ 0, %2358 ], [ -4, %2057 ], [ 0, %2004 ], [ -4, %2309 ], [ 0, %2082 ], [ 0, %2155 ], [ -4, %1929 ], [ 0, %1877 ], [ -4, %1848 ], [ 0, %1801 ], [ -4, %1777 ], [ 0, %1728 ], [ -4, %1701 ], [ 0, %1636 ], [ 0, %1536 ], [ -4, %1499 ], [ -4, %1508 ], [ 0, %1444 ], [ 0, %1369 ], [ 0, %1294 ], [ 0, %1224 ], [ 0, %1148 ], [ 0, %1073 ], [ 0, %998 ], [ 0, %923 ], [ -4, %884 ], [ 0, %836 ], [ -4, %811 ], [ 0, %763 ], [ -4, %738 ], [ 0, %690 ], [ -4, %665 ], [ 0, %617 ], [ -4, %592 ], [ 0, %544 ], [ -4, %519 ], [ 0, %467 ], [ -5, %379 ], [ -3, %422 ], [ -3, %441 ], [ 0, %326 ], [ -5, %301 ], [ 0, %253 ], [ -5, %228 ], [ 0, %180 ], [ -5, %155 ], [ 0, %107 ]
  %4379 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 40
  store i32 %.40, i32* %4379, align 4
  %4380 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 41
  store i32 %.2841, i32* %4380, align 8
  %4381 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 42
  store i32 %.1860, i32* %4381, align 4
  %4382 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 43
  store i32 %.2283, i32* %4382, align 8
  %4383 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 44
  store i32 %.21105, i32* %4383, align 4
  %4384 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 45
  store i32 %.20126, i32* %4384, align 8
  %4385 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 46
  store i32 %.11138, i32* %4385, align 4
  %4386 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 47
  store i32 %.14153, i32* %4386, align 8
  %4387 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 48
  store i32 %.14168, i32* %4387, align 4
  %4388 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 49
  store i32 %.8177, i32* %4388, align 8
  %4389 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 50
  store i32 %.11189, i32* %4389, align 4
  %4390 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  store i32 %.14204, i32* %4390, align 8
  %4391 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 52
  store i32 %.13218, i32* %4391, align 4
  %4392 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 53
  store i32 %.8227, i32* %4392, align 8
  %4393 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 54
  store i32 %.18246, i32* %4393, align 4
  %4394 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 55
  store i32 %65, i32* %4394, align 8
  %4395 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 56
  store i32 %.11259, i32* %4395, align 4
  %4396 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 57
  store i32 %.10270, i32* %4396, align 8
  %4397 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 58
  store i32 %.10281, i32* %4397, align 4
  %4398 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 59
  store i32 %.14296, i32* %4398, align 8
  %4399 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 60
  store i32 %.14311, i32* %4399, align 4
  %4400 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 61
  store i32* %.14326, i32** %4400, align 8
  %4401 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 62
  store i32* %.14341, i32** %4401, align 8
  %4402 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 63
  store i32* %.14356, i32** %4402, align 8
  br label %4403

; <label>:4403:                                   ; preds = %4378, %3684, %3624, %3532, %3457
  %.0 = phi i32 [ %.03, %4378 ], [ 1, %3457 ], [ 1, %3532 ], [ 1, %3624 ], [ 1, %3684 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeMaps_d(%struct.DState*) #0 {
  %2 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  store i32 0, i32* %2, align 8
  br label %3

; <label>:3:                                      ; preds = %1, %19
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %19 ]
  %.01 = phi i32 [ 0, %1 ], [ %20, %19 ]
  call void @unroll_loop(i32 86)
  %4 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 28
  %5 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %indvars.iv
  %6 = load i8, i8* %5, align 1
  %7 = icmp ne i8 %6, 0
  br i1 %7, label %8, label %18

; <label>:8:                                      ; preds = %3
  %9 = trunc i32 %.01 to i8
  %10 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %11 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 %13
  store i8 %9, i8* %14, align 1
  %15 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  br label %18

; <label>:18:                                     ; preds = %8, %3
  br label %19

; <label>:19:                                     ; preds = %18
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = add nuw nsw i32 %.01, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %3, label %21

; <label>:21:                                     ; preds = %19
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_blockSort(%struct.EState*) #0 {
  %2 = alloca i32, align 4, !track !63
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 8
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 6
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %10, 10000
  br i1 %15, label %16, label %21

; <label>:16:                                     ; preds = %1
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 4
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 5
  %20 = load i32*, i32** %19, align 8
  call void @fallbackSort(i32* %18, i32* %20, i32* %8, i32 %10, i32 %12)
  br label %73

; <label>:21:                                     ; preds = %1
  %22 = add nsw i32 %10, 34
  %23 = and i32 %22, 1
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %25, label %27

; <label>:25:                                     ; preds = %21
  %26 = add nsw i32 %22, 1
  br label %27

; <label>:27:                                     ; preds = %25, %21
  %.0 = phi i32 [ %26, %25 ], [ %22, %21 ]
  %28 = sext i32 %.0 to i64
  %29 = getelementptr inbounds i8, i8* %6, i64 %28
  %30 = bitcast i8* %29 to i16*
  %31 = icmp slt i32 %14, 1
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %27
  br label %33

; <label>:33:                                     ; preds = %32, %27
  %.01 = phi i32 [ 1, %32 ], [ %14, %27 ]
  %34 = icmp sgt i32 %.01, 100
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %33
  br label %36

; <label>:36:                                     ; preds = %35, %33
  %.12 = phi i32 [ 100, %35 ], [ %.01, %33 ]
  %37 = sub nsw i32 %.12, 1
  %38 = sdiv i32 %37, 3
  %39 = mul nsw i32 %10, %38
  store i32 %39, i32* %2, align 4
  call void @mainSort(i32* %4, i8* %6, i16* %30, i32* %8, i32 %10, i32 %12, i32* %2)
  %40 = icmp sge i32 %12, 3
  br i1 %40, label %41, label %58

; <label>:41:                                     ; preds = %36
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = load i32, i32* %2, align 4
  %44 = sub nsw i32 %39, %43
  %45 = load i32, i32* %2, align 4
  %46 = sub nsw i32 %39, %45
  %47 = sitofp i32 %46 to float
  %48 = icmp eq i32 %10, 0
  br i1 %48, label %49, label %50

; <label>:49:                                     ; preds = %41
  br label %51

; <label>:50:                                     ; preds = %41
  br label %51

; <label>:51:                                     ; preds = %50, %49
  %52 = phi i32 [ 1, %49 ], [ %10, %50 ]
  %53 = sitofp i32 %52 to float
  %54 = fdiv float %47, %53
  %55 = fpext float %54 to double
  %56 = getelementptr [38 x i8], [38 x i8]* @.str.164, i32 0, i32 0
  %57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* %56, i32 %44, i32 %10, double %55)
  br label %58

; <label>:58:                                     ; preds = %51, %36
  %59 = load i32, i32* %2, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %72

; <label>:61:                                     ; preds = %58
  %62 = icmp sge i32 %12, 2
  br i1 %62, label %63, label %67

; <label>:63:                                     ; preds = %61
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %65 = getelementptr [54 x i8], [54 x i8]* @.str.1.165, i32 0, i32 0
  %66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* %65)
  br label %67

; <label>:67:                                     ; preds = %63, %61
  %68 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 4
  %69 = load i32*, i32** %68, align 8
  %70 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 5
  %71 = load i32*, i32** %70, align 8
  call void @fallbackSort(i32* %69, i32* %71, i32* %8, i32 %10, i32 %12)
  br label %72

; <label>:72:                                     ; preds = %67, %58
  br label %73

; <label>:73:                                     ; preds = %72, %16
  %74 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 7
  store i32 -1, i32* %74, align 8
  %75 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 0, %76
  br i1 %77, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %73
  br label %78

; <label>:78:                                     ; preds = %.lr.ph, %86
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %86 ]
  call void @unroll_loop(i32 154)
  %79 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %85

; <label>:82:                                     ; preds = %78
  %.1.lcssa3.wide = phi i64 [ %indvars.iv, %78 ]
  %83 = trunc i64 %.1.lcssa3.wide to i32
  %84 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 7
  store i32 %83, i32* %84, align 8
  br label %90

; <label>:85:                                     ; preds = %78
  br label %86

; <label>:86:                                     ; preds = %85
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %87 = load i32, i32* %75, align 4
  %88 = sext i32 %87 to i64
  %89 = icmp slt i64 %indvars.iv.next, %88
  br i1 %89, label %78, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %86
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %73
  br label %90

; <label>:90:                                     ; preds = %.loopexit, %82
  %91 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 7
  %92 = load i32, i32* %91, align 8
  %93 = icmp ne i32 %92, -1
  br i1 %93, label %95, label %94

; <label>:94:                                     ; preds = %90
  call void @BZ2_bz__AssertH__fail(i32 1003)
  br label %95

; <label>:95:                                     ; preds = %94, %90
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackSort(i32*, i32*, i32*, i32, i32) #0 {
  %6 = alloca [257 x i32], align 16, !track !64
  %7 = alloca [256 x i32], align 16, !track !65
  %8 = bitcast i32* %1 to i8*
  %9 = icmp sge i32 %4, 4
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %5
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %12 = getelementptr [28 x i8], [28 x i8]* @.str.2.167, i32 0, i32 0
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %12)
  br label %14

; <label>:14:                                     ; preds = %10, %5
  br label %15

; <label>:15:                                     ; preds = %14, %17
  %indvars.iv81 = phi i64 [ 0, %14 ], [ %indvars.iv.next82, %17 ]
  call void @unroll_loop(i32 156)
  %16 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %indvars.iv81
  store i32 0, i32* %16, align 4
  br label %17

; <label>:17:                                     ; preds = %15
  %indvars.iv.next82 = add nuw nsw i64 %indvars.iv81, 1
  %exitcond83 = icmp ne i64 %indvars.iv.next82, 257
  br i1 %exitcond83, label %15, label %18

; <label>:18:                                     ; preds = %17
  %19 = icmp slt i32 0, %3
  br i1 %19, label %.lr.ph74, label %28

.lr.ph74:                                         ; preds = %18
  br label %20

; <label>:20:                                     ; preds = %.lr.ph74, %27
  %indvars.iv76 = phi i64 [ 0, %.lr.ph74 ], [ %indvars.iv.next77, %27 ]
  call void @unroll_loop(i32 157)
  %21 = getelementptr inbounds i8, i8* %8, i64 %indvars.iv76
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 4
  br label %27

; <label>:27:                                     ; preds = %20
  %indvars.iv.next77 = add nuw nsw i64 %indvars.iv76, 1
  %wide.trip.count78 = zext i32 %3 to i64
  %exitcond79 = icmp ne i64 %indvars.iv.next77, %wide.trip.count78
  br i1 %exitcond79, label %20, label %._crit_edge75

._crit_edge75:                                    ; preds = %27
  br label %28

; <label>:28:                                     ; preds = %._crit_edge75, %18
  br label %29

; <label>:29:                                     ; preds = %28, %33
  %indvars.iv69 = phi i64 [ 0, %28 ], [ %indvars.iv.next70, %33 ]
  call void @unroll_loop(i32 158)
  %30 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %indvars.iv69
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %indvars.iv69
  store i32 %31, i32* %32, align 4
  br label %33

; <label>:33:                                     ; preds = %29
  %indvars.iv.next70 = add nuw nsw i64 %indvars.iv69, 1
  %exitcond71 = icmp ne i64 %indvars.iv.next70, 256
  br i1 %exitcond71, label %29, label %34

; <label>:34:                                     ; preds = %33
  br label %35

; <label>:35:                                     ; preds = %34, %42
  %indvars.iv65 = phi i64 [ 1, %34 ], [ %indvars.iv.next66, %42 ]
  call void @unroll_loop(i32 159)
  %36 = sub nuw nsw i64 %indvars.iv65, 1
  %37 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %indvars.iv65
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, %38
  store i32 %41, i32* %39, align 4
  br label %42

; <label>:42:                                     ; preds = %35
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1
  %exitcond67 = icmp ne i64 %indvars.iv.next66, 257
  br i1 %exitcond67, label %35, label %43

; <label>:43:                                     ; preds = %42
  %44 = icmp slt i32 0, %3
  br i1 %44, label %.lr.ph58, label %59

.lr.ph58:                                         ; preds = %43
  br label %45

; <label>:45:                                     ; preds = %.lr.ph58, %58
  %indvars.iv60 = phi i64 [ 0, %.lr.ph58 ], [ %indvars.iv.next61, %58 ]
  call void @unroll_loop(i32 160)
  %46 = getelementptr inbounds i8, i8* %8, i64 %indvars.iv60
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = sub nsw i32 %51, 1
  %53 = sext i32 %48 to i64
  %54 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %53
  store i32 %52, i32* %54, align 4
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds i32, i32* %0, i64 %55
  %57 = trunc i64 %indvars.iv60 to i32
  store i32 %57, i32* %56, align 4
  br label %58

; <label>:58:                                     ; preds = %45
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %wide.trip.count62 = zext i32 %3 to i64
  %exitcond63 = icmp ne i64 %indvars.iv.next61, %wide.trip.count62
  br i1 %exitcond63, label %45, label %._crit_edge59

._crit_edge59:                                    ; preds = %58
  br label %59

; <label>:59:                                     ; preds = %._crit_edge59, %43
  %60 = sdiv i32 %3, 32
  %61 = add nsw i32 2, %60
  %62 = icmp slt i32 0, %61
  br i1 %62, label %.lr.ph50, label %66

.lr.ph50:                                         ; preds = %59
  br label %63

; <label>:63:                                     ; preds = %.lr.ph50, %65
  %indvars.iv52 = phi i64 [ 0, %.lr.ph50 ], [ %indvars.iv.next53, %65 ]
  call void @unroll_loop(i32 161)
  %64 = getelementptr inbounds i32, i32* %2, i64 %indvars.iv52
  store i32 0, i32* %64, align 4
  br label %65

; <label>:65:                                     ; preds = %63
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1
  %wide.trip.count54 = zext i32 %61 to i64
  %exitcond55 = icmp ne i64 %indvars.iv.next53, %wide.trip.count54
  br i1 %exitcond55, label %63, label %._crit_edge51

._crit_edge51:                                    ; preds = %65
  br label %66

; <label>:66:                                     ; preds = %._crit_edge51, %59
  br label %67

; <label>:67:                                     ; preds = %66, %79
  %indvars.iv45 = phi i64 [ 0, %66 ], [ %indvars.iv.next46, %79 ]
  call void @unroll_loop(i32 162)
  %68 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %indvars.iv45
  %69 = load i32, i32* %68, align 4
  %70 = and i32 %69, 31
  %71 = shl i32 1, %70
  %72 = getelementptr inbounds [257 x i32], [257 x i32]* %6, i64 0, i64 %indvars.iv45
  %73 = load i32, i32* %72, align 4
  %74 = ashr i32 %73, 5
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %2, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = or i32 %77, %71
  store i32 %78, i32* %76, align 4
  br label %79

; <label>:79:                                     ; preds = %67
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1
  %exitcond47 = icmp ne i64 %indvars.iv.next46, 256
  br i1 %exitcond47, label %67, label %80

; <label>:80:                                     ; preds = %79
  br label %81

; <label>:81:                                     ; preds = %80, %107
  %.71842 = phi i32 [ 0, %80 ], [ %108, %107 ]
  call void @unroll_loop(i32 163)
  %82 = mul nuw nsw i32 2, %.71842
  %83 = add nsw i32 %3, %82
  %84 = and i32 %83, 31
  %85 = shl i32 1, %84
  %86 = mul nuw nsw i32 2, %.71842
  %87 = add nsw i32 %3, %86
  %88 = ashr i32 %87, 5
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %2, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = or i32 %91, %85
  store i32 %92, i32* %90, align 4
  %93 = mul nuw nsw i32 2, %.71842
  %94 = add nsw i32 %3, %93
  %95 = add nsw i32 %94, 1
  %96 = and i32 %95, 31
  %97 = shl i32 1, %96
  %98 = xor i32 %97, -1
  %99 = mul nuw nsw i32 2, %.71842
  %100 = add nsw i32 %3, %99
  %101 = add nsw i32 %100, 1
  %102 = ashr i32 %101, 5
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %2, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, %98
  store i32 %106, i32* %104, align 4
  br label %107

; <label>:107:                                    ; preds = %81
  %108 = add nuw nsw i32 %.71842, 1
  %exitcond43 = icmp ne i32 %108, 32
  br i1 %exitcond43, label %81, label %109

; <label>:109:                                    ; preds = %107
  br label %110

; <label>:110:                                    ; preds = %281, %109
  %.010 = phi i32 [ 1, %109 ], [ %282, %281 ]
  call void @unroll_loop(i32 164)
  %111 = icmp sge i32 %4, 4
  br i1 %111, label %112, label %116

; <label>:112:                                    ; preds = %110
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %114 = getelementptr [23 x i8], [23 x i8]* @.str.3.170, i32 0, i32 0
  %115 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %113, i8* %114, i32 %.010)
  br label %116

; <label>:116:                                    ; preds = %112, %110
  %117 = icmp slt i32 0, %3
  br i1 %117, label %.lr.ph29, label %142

.lr.ph29:                                         ; preds = %116
  br label %118

; <label>:118:                                    ; preds = %.lr.ph29, %141
  %indvars.iv31 = phi i64 [ 0, %.lr.ph29 ], [ %indvars.iv.next32, %141 ]
  %.0627 = phi i32 [ 0, %.lr.ph29 ], [ %.17, %141 ]
  call void @unroll_loop(i32 165)
  %119 = trunc i64 %indvars.iv31 to i32
  %120 = ashr i32 %119, 5
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i32, i32* %2, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = trunc i64 %indvars.iv31 to i32
  %125 = and i32 %124, 31
  %126 = shl i32 1, %125
  %127 = and i32 %123, %126
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %131

; <label>:129:                                    ; preds = %118
  %130 = trunc i64 %indvars.iv31 to i32
  br label %131

; <label>:131:                                    ; preds = %129, %118
  %.17 = phi i32 [ %130, %129 ], [ %.0627, %118 ]
  %132 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv31
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %133, %.010
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %136, label %138

; <label>:136:                                    ; preds = %131
  %137 = add nsw i32 %134, %3
  br label %138

; <label>:138:                                    ; preds = %136, %131
  %.04 = phi i32 [ %137, %136 ], [ %134, %131 ]
  %139 = sext i32 %.04 to i64
  %140 = getelementptr inbounds i32, i32* %1, i64 %139
  store i32 %.17, i32* %140, align 4
  br label %141

; <label>:141:                                    ; preds = %138
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %wide.trip.count33 = zext i32 %3 to i64
  %exitcond34 = icmp ne i64 %indvars.iv.next32, %wide.trip.count33
  br i1 %exitcond34, label %118, label %._crit_edge30

._crit_edge30:                                    ; preds = %141
  br label %142

; <label>:142:                                    ; preds = %._crit_edge30, %116
  br label %143

; <label>:143:                                    ; preds = %142, %274
  %.03 = phi i32 [ -1, %142 ], [ %240, %274 ]
  %.0 = phi i32 [ 0, %142 ], [ %.1, %274 ]
  call void @unroll_loop(i32 166)
  %144 = add nsw i32 %.03, 1
  br label %145

; <label>:145:                                    ; preds = %157, %143
  %.15 = phi i32 [ %144, %143 ], [ %159, %157 ]
  call void @unroll_loop(i32 167)
  %146 = ashr i32 %.15, 5
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i32, i32* %2, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %.15, 31
  %151 = shl i32 1, %150
  %152 = and i32 %149, %151
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %157

; <label>:154:                                    ; preds = %145
  %155 = and i32 %.15, 31
  %156 = icmp ne i32 %155, 0
  br label %157

; <label>:157:                                    ; preds = %154, %145
  %158 = phi i1 [ false, %145 ], [ %156, %154 ]
  %159 = add nsw i32 %.15, 1
  br i1 %158, label %145, label %160

; <label>:160:                                    ; preds = %157
  %.15.lcssa = phi i32 [ %.15, %157 ]
  %161 = ashr i32 %.15.lcssa, 5
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, i32* %2, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = and i32 %.15.lcssa, 31
  %166 = shl i32 1, %165
  %167 = and i32 %164, %166
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %169, label %189

; <label>:169:                                    ; preds = %160
  br label %170

; <label>:170:                                    ; preds = %170, %169
  %.2 = phi i32 [ %.15.lcssa, %169 ], [ %176, %170 ]
  call void @unroll_loop(i32 168)
  %171 = ashr i32 %.2, 5
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i32, i32* %2, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1
  %176 = add nsw i32 %.2, 32
  br i1 %175, label %170, label %177

; <label>:177:                                    ; preds = %170
  %.2.lcssa = phi i32 [ %.2, %170 ]
  br label %178

; <label>:178:                                    ; preds = %178, %177
  %.3 = phi i32 [ %.2.lcssa, %177 ], [ %187, %178 ]
  call void @unroll_loop(i32 169)
  %179 = ashr i32 %.3, 5
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %2, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = and i32 %.3, 31
  %184 = shl i32 1, %183
  %185 = and i32 %182, %184
  %186 = icmp ne i32 %185, 0
  %187 = add nsw i32 %.3, 1
  br i1 %186, label %178, label %188

; <label>:188:                                    ; preds = %178
  %.3.lcssa = phi i32 [ %.3, %178 ]
  br label %189

; <label>:189:                                    ; preds = %188, %160
  %.4 = phi i32 [ %.3.lcssa, %188 ], [ %.15.lcssa, %160 ]
  %190 = sub nsw i32 %.4, 1
  %191 = icmp sge i32 %190, %3
  br i1 %191, label %192, label %193

; <label>:192:                                    ; preds = %189
  %.0.lcssa = phi i32 [ %.0, %189 ]
  br label %275

; <label>:193:                                    ; preds = %189
  br label %194

; <label>:194:                                    ; preds = %206, %193
  %.5 = phi i32 [ %.4, %193 ], [ %208, %206 ]
  call void @unroll_loop(i32 170)
  %195 = ashr i32 %.5, 5
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i32, i32* %2, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = and i32 %.5, 31
  %200 = shl i32 1, %199
  %201 = and i32 %198, %200
  %202 = icmp ne i32 %201, 0
  br i1 %202, label %206, label %203

; <label>:203:                                    ; preds = %194
  %204 = and i32 %.5, 31
  %205 = icmp ne i32 %204, 0
  br label %206

; <label>:206:                                    ; preds = %203, %194
  %207 = phi i1 [ false, %194 ], [ %205, %203 ]
  %208 = add nsw i32 %.5, 1
  br i1 %207, label %194, label %209

; <label>:209:                                    ; preds = %206
  %.5.lcssa = phi i32 [ %.5, %206 ]
  %210 = ashr i32 %.5.lcssa, 5
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i32, i32* %2, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = and i32 %.5.lcssa, 31
  %215 = shl i32 1, %214
  %216 = and i32 %213, %215
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %239, label %218

; <label>:218:                                    ; preds = %209
  br label %219

; <label>:219:                                    ; preds = %219, %218
  %.6 = phi i32 [ %.5.lcssa, %218 ], [ %225, %219 ]
  call void @unroll_loop(i32 171)
  %220 = ashr i32 %.6, 5
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i32, i32* %2, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  %225 = add nsw i32 %.6, 32
  br i1 %224, label %219, label %226

; <label>:226:                                    ; preds = %219
  %.6.lcssa = phi i32 [ %.6, %219 ]
  br label %227

; <label>:227:                                    ; preds = %227, %226
  %.7 = phi i32 [ %.6.lcssa, %226 ], [ %237, %227 ]
  call void @unroll_loop(i32 172)
  %228 = ashr i32 %.7, 5
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i32, i32* %2, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = and i32 %.7, 31
  %233 = shl i32 1, %232
  %234 = and i32 %231, %233
  %235 = icmp ne i32 %234, 0
  %236 = xor i1 %235, true
  %237 = add nsw i32 %.7, 1
  br i1 %236, label %227, label %238

; <label>:238:                                    ; preds = %227
  %.7.lcssa = phi i32 [ %.7, %227 ]
  br label %239

; <label>:239:                                    ; preds = %238, %209
  %.8 = phi i32 [ %.5.lcssa, %209 ], [ %.7.lcssa, %238 ]
  %240 = sub nsw i32 %.8, 1
  %241 = icmp sge i32 %240, %3
  br i1 %241, label %242, label %243

; <label>:242:                                    ; preds = %239
  %.0.lcssa20 = phi i32 [ %.0, %239 ]
  br label %275

; <label>:243:                                    ; preds = %239
  %244 = icmp sgt i32 %240, %190
  br i1 %244, label %245, label %274

; <label>:245:                                    ; preds = %243
  %246 = sub nsw i32 %240, %190
  %247 = add nsw i32 %246, 1
  %248 = add nsw i32 %.0, %247
  call void @fallbackQSort3(i32* %0, i32* %1, i32 %190, i32 %240)
  %249 = icmp sle i32 %190, %240
  br i1 %249, label %.lr.ph38, label %273

.lr.ph38:                                         ; preds = %245
  %250 = add i32 %.4, -1
  %251 = sext i32 %250 to i64
  %252 = sext i32 %240 to i64
  br label %253

; <label>:253:                                    ; preds = %.lr.ph38, %271
  %indvars.iv40 = phi i64 [ %251, %.lr.ph38 ], [ %indvars.iv.next41, %271 ]
  %.0136 = phi i32 [ -1, %.lr.ph38 ], [ %.12, %271 ]
  call void @unroll_loop(i32 173)
  %254 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv40
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = getelementptr inbounds i32, i32* %1, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = icmp ne i32 %.0136, %258
  br i1 %259, label %260, label %270

; <label>:260:                                    ; preds = %253
  %261 = trunc i64 %indvars.iv40 to i32
  %262 = and i32 %261, 31
  %263 = shl i32 1, %262
  %264 = trunc i64 %indvars.iv40 to i32
  %265 = ashr i32 %264, 5
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds i32, i32* %2, i64 %266
  %268 = load i32, i32* %267, align 4
  %269 = or i32 %268, %263
  store i32 %269, i32* %267, align 4
  br label %270

; <label>:270:                                    ; preds = %260, %253
  %.12 = phi i32 [ %258, %260 ], [ %.0136, %253 ]
  br label %271

; <label>:271:                                    ; preds = %270
  %indvars.iv.next41 = add i64 %indvars.iv40, 1
  %272 = icmp sle i64 %indvars.iv.next41, %252
  br i1 %272, label %253, label %._crit_edge39

._crit_edge39:                                    ; preds = %271
  br label %273

; <label>:273:                                    ; preds = %._crit_edge39, %245
  br label %274

; <label>:274:                                    ; preds = %273, %243
  %.1 = phi i32 [ %248, %273 ], [ %.0, %243 ]
  br label %143

; <label>:275:                                    ; preds = %242, %192
  %.021 = phi i32 [ %.0.lcssa20, %242 ], [ %.0.lcssa, %192 ]
  %276 = icmp sge i32 %4, 4
  br i1 %276, label %277, label %281

; <label>:277:                                    ; preds = %275
  %278 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %279 = getelementptr [24 x i8], [24 x i8]* @.str.4.171, i32 0, i32 0
  %280 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %278, i8* %279, i32 %.021)
  br label %281

; <label>:281:                                    ; preds = %277, %275
  %282 = mul nuw nsw i32 %.010, 2
  %283 = icmp sgt i32 %282, %3
  %284 = icmp eq i32 %.021, 0
  %or.cond = or i1 %283, %284
  br i1 %or.cond, label %285, label %110

; <label>:285:                                    ; preds = %281
  br label %286

; <label>:286:                                    ; preds = %285
  %287 = icmp sge i32 %4, 4
  br i1 %287, label %288, label %292

; <label>:288:                                    ; preds = %286
  %289 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %290 = getelementptr [34 x i8], [34 x i8]* @.str.5.172, i32 0, i32 0
  %291 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %289, i8* %290)
  br label %292

; <label>:292:                                    ; preds = %288, %286
  %293 = icmp slt i32 0, %3
  br i1 %293, label %.lr.ph, label %312

.lr.ph:                                           ; preds = %292
  br label %294

; <label>:294:                                    ; preds = %.lr.ph, %311
  %indvars.iv24 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next25, %311 ]
  %.2823 = phi i32 [ 0, %.lr.ph ], [ %301, %311 ]
  call void @unroll_loop(i32 174)
  %295 = sext i32 %.2823 to i64
  br label %296

; <label>:296:                                    ; preds = %296, %294
  %indvars.iv = phi i64 [ %indvars.iv.next, %296 ], [ %295, %294 ]
  call void @unroll_loop(i32 175)
  %297 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %indvars.iv
  %298 = load i32, i32* %297, align 4
  %299 = icmp eq i32 %298, 0
  %indvars.iv.next = add i64 %indvars.iv, 1
  br i1 %299, label %296, label %300

; <label>:300:                                    ; preds = %296
  %.39.lcssa.wide = phi i64 [ %indvars.iv, %296 ]
  %301 = trunc i64 %.39.lcssa.wide to i32
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds [256 x i32], [256 x i32]* %7, i64 0, i64 %302
  %304 = load i32, i32* %303, align 4
  %305 = add nsw i32 %304, -1
  store i32 %305, i32* %303, align 4
  %306 = trunc i32 %301 to i8
  %307 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv24
  %308 = load i32, i32* %307, align 4
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds i8, i8* %8, i64 %309
  store i8 %306, i8* %310, align 1
  br label %311

; <label>:311:                                    ; preds = %300
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %wide.trip.count = zext i32 %3 to i64
  %exitcond = icmp ne i64 %indvars.iv.next25, %wide.trip.count
  br i1 %exitcond, label %294, label %._crit_edge

._crit_edge:                                      ; preds = %311
  %split = phi i32 [ %301, %311 ]
  br label %312

; <label>:312:                                    ; preds = %._crit_edge, %292
  %.28.lcssa = phi i32 [ %split, %._crit_edge ], [ 0, %292 ]
  %313 = icmp slt i32 %.28.lcssa, 256
  br i1 %313, label %315, label %314

; <label>:314:                                    ; preds = %312
  call void @BZ2_bz__AssertH__fail(i32 1005)
  br label %315

; <label>:315:                                    ; preds = %314, %312
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainSort(i32*, i8*, i16*, i32*, i32, i32, i32*) #0 {
  %8 = alloca [256 x i32], align 16
  %9 = alloca [256 x i8], align 16
  %10 = alloca [256 x i32], align 16, !track !66
  %11 = alloca [256 x i32], align 16, !track !67
  %12 = icmp sge i32 %5, 4
  br i1 %12, label %13, label %17

; <label>:13:                                     ; preds = %7
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = getelementptr [34 x i8], [34 x i8]* @.str.6.166, i32 0, i32 0
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %15)
  br label %17

; <label>:17:                                     ; preds = %13, %7
  br label %18

; <label>:18:                                     ; preds = %17, %20
  %indvars.iv101 = phi i64 [ 65536, %17 ], [ %indvars.iv.next102, %20 ]
  call void @unroll_loop(i32 177)
  %19 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv101
  store i32 0, i32* %19, align 4
  br label %20

; <label>:20:                                     ; preds = %18
  %indvars.iv.next102 = add nsw i64 %indvars.iv101, -1
  %21 = icmp sge i64 %indvars.iv.next102, 0
  br i1 %21, label %18, label %22

; <label>:22:                                     ; preds = %20
  %23 = getelementptr inbounds i8, i8* %1, i64 0
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = shl i32 %25, 8
  %27 = sub nsw i32 %4, 1
  %28 = icmp sge i32 %27, 3
  br i1 %28, label %.lr.ph97, label %100

.lr.ph97:                                         ; preds = %22
  %29 = add i32 %4, -4
  %30 = lshr i32 %29, 2
  %31 = shl i32 %30, 2
  br label %32

; <label>:32:                                     ; preds = %.lr.ph97, %95
  %.0895 = phi i32 [ %26, %.lr.ph97 ], [ %90, %95 ]
  %.11494 = phi i32 [ %27, %.lr.ph97 ], [ %96, %95 ]
  call void @unroll_loop(i32 178)
  %33 = sext i32 %.11494 to i64
  %34 = getelementptr inbounds i16, i16* %2, i64 %33
  store i16 0, i16* %34, align 2
  %35 = ashr i32 %.0895, 8
  %36 = sext i32 %.11494 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i16
  %40 = zext i16 %39 to i32
  %41 = shl i32 %40, 8
  %42 = or i32 %35, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %3, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %44, align 4
  %47 = sub nsw i32 %.11494, 1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i16, i16* %2, i64 %48
  store i16 0, i16* %49, align 2
  %50 = ashr i32 %42, 8
  %51 = sub nsw i32 %.11494, 1
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %1, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = zext i16 %55 to i32
  %57 = shl i32 %56, 8
  %58 = or i32 %50, %57
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %3, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %60, align 4
  %63 = sub nsw i32 %.11494, 2
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i16, i16* %2, i64 %64
  store i16 0, i16* %65, align 2
  %66 = ashr i32 %58, 8
  %67 = sub nsw i32 %.11494, 2
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %1, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i16
  %72 = zext i16 %71 to i32
  %73 = shl i32 %72, 8
  %74 = or i32 %66, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %3, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, 1
  store i32 %78, i32* %76, align 4
  %79 = sub nsw i32 %.11494, 3
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i16, i16* %2, i64 %80
  store i16 0, i16* %81, align 2
  %82 = ashr i32 %74, 8
  %83 = sub nsw i32 %.11494, 3
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %1, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i16
  %88 = zext i16 %87 to i32
  %89 = shl i32 %88, 8
  %90 = or i32 %82, %89
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %3, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  br label %95

; <label>:95:                                     ; preds = %32
  %96 = sub nsw i32 %.11494, 4
  %97 = icmp sge i32 %96, 3
  br i1 %97, label %32, label %._crit_edge98

._crit_edge98:                                    ; preds = %95
  %split99 = phi i32 [ %90, %95 ]
  %98 = add i32 %4, -5
  %99 = sub i32 %98, %31
  br label %100

; <label>:100:                                    ; preds = %._crit_edge98, %22
  %.114.lcssa = phi i32 [ %99, %._crit_edge98 ], [ %27, %22 ]
  %.08.lcssa = phi i32 [ %split99, %._crit_edge98 ], [ %26, %22 ]
  %101 = icmp sge i32 %.114.lcssa, 0
  br i1 %101, label %.lr.ph90, label %118

.lr.ph90:                                         ; preds = %100
  %102 = sext i32 %.114.lcssa to i64
  br label %103

; <label>:103:                                    ; preds = %.lr.ph90, %116
  %indvars.iv92 = phi i64 [ %102, %.lr.ph90 ], [ %indvars.iv.next93, %116 ]
  %.1988 = phi i32 [ %.08.lcssa, %.lr.ph90 ], [ %111, %116 ]
  call void @unroll_loop(i32 179)
  %104 = getelementptr inbounds i16, i16* %2, i64 %indvars.iv92
  store i16 0, i16* %104, align 2
  %105 = ashr i32 %.1988, 8
  %106 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv92
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i16
  %109 = zext i16 %108 to i32
  %110 = shl i32 %109, 8
  %111 = or i32 %105, %110
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, i32* %3, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = add i32 %114, 1
  store i32 %115, i32* %113, align 4
  br label %116

; <label>:116:                                    ; preds = %103
  %indvars.iv.next93 = add nsw i64 %indvars.iv92, -1
  %117 = icmp sge i64 %indvars.iv.next93, 0
  br i1 %117, label %103, label %._crit_edge91

._crit_edge91:                                    ; preds = %116
  br label %118

; <label>:118:                                    ; preds = %._crit_edge91, %100
  %119 = sext i32 %4 to i64
  %120 = sext i32 %4 to i64
  br label %121

; <label>:121:                                    ; preds = %118, %128
  %indvars.iv84 = phi i64 [ 0, %118 ], [ %indvars.iv.next85, %128 ]
  call void @unroll_loop(i32 180)
  %122 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv84
  %123 = load i8, i8* %122, align 1
  %124 = add nsw i64 %120, %indvars.iv84
  %125 = getelementptr inbounds i8, i8* %1, i64 %124
  store i8 %123, i8* %125, align 1
  %126 = add nsw i64 %119, %indvars.iv84
  %127 = getelementptr inbounds i16, i16* %2, i64 %126
  store i16 0, i16* %127, align 2
  br label %128

; <label>:128:                                    ; preds = %121
  %indvars.iv.next85 = add nuw nsw i64 %indvars.iv84, 1
  %exitcond86 = icmp ne i64 %indvars.iv.next85, 34
  br i1 %exitcond86, label %121, label %129

; <label>:129:                                    ; preds = %128
  %130 = icmp sge i32 %5, 4
  br i1 %130, label %131, label %135

; <label>:131:                                    ; preds = %129
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %133 = getelementptr [28 x i8], [28 x i8]* @.str.2.167, i32 0, i32 0
  %134 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %132, i8* %133)
  br label %135

; <label>:135:                                    ; preds = %131, %129
  br label %136

; <label>:136:                                    ; preds = %135, %143
  %indvars.iv80 = phi i64 [ 1, %135 ], [ %indvars.iv.next81, %143 ]
  call void @unroll_loop(i32 181)
  %137 = sub nuw nsw i64 %indvars.iv80, 1
  %138 = getelementptr inbounds i32, i32* %3, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = getelementptr inbounds i32, i32* %3, i64 %indvars.iv80
  %141 = load i32, i32* %140, align 4
  %142 = add i32 %141, %139
  store i32 %142, i32* %140, align 4
  br label %143

; <label>:143:                                    ; preds = %136
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %exitcond82 = icmp ne i64 %indvars.iv.next81, 65537
  br i1 %exitcond82, label %136, label %144

; <label>:144:                                    ; preds = %143
  %145 = getelementptr inbounds i8, i8* %1, i64 0
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = shl i32 %147, 8
  %149 = trunc i32 %148 to i16
  %150 = sub nsw i32 %4, 1
  %151 = icmp sge i32 %150, 3
  br i1 %151, label %.lr.ph76, label %235

.lr.ph76:                                         ; preds = %144
  %152 = add i32 %4, -4
  %153 = lshr i32 %152, 2
  %154 = shl i32 %153, 2
  br label %155

; <label>:155:                                    ; preds = %.lr.ph76, %230
  %.0274 = phi i16 [ %149, %.lr.ph76 ], [ %220, %230 ]
  %.51873 = phi i32 [ %150, %.lr.ph76 ], [ %231, %230 ]
  call void @unroll_loop(i32 182)
  %156 = zext i16 %.0274 to i32
  %157 = ashr i32 %156, 8
  %158 = sext i32 %.51873 to i64
  %159 = getelementptr inbounds i8, i8* %1, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = shl i32 %161, 8
  %163 = or i32 %157, %162
  %164 = trunc i32 %163 to i16
  %165 = zext i16 %164 to i64
  %166 = getelementptr inbounds i32, i32* %3, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = sub i32 %167, 1
  %169 = zext i16 %164 to i64
  %170 = getelementptr inbounds i32, i32* %3, i64 %169
  store i32 %168, i32* %170, align 4
  %171 = sext i32 %168 to i64
  %172 = getelementptr inbounds i32, i32* %0, i64 %171
  store i32 %.51873, i32* %172, align 4
  %173 = zext i16 %164 to i32
  %174 = ashr i32 %173, 8
  %175 = sub nsw i32 %.51873, 1
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %1, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = shl i32 %179, 8
  %181 = or i32 %174, %180
  %182 = trunc i32 %181 to i16
  %183 = zext i16 %182 to i64
  %184 = getelementptr inbounds i32, i32* %3, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = sub i32 %185, 1
  %187 = zext i16 %182 to i64
  %188 = getelementptr inbounds i32, i32* %3, i64 %187
  store i32 %186, i32* %188, align 4
  %189 = sub nsw i32 %.51873, 1
  %190 = sext i32 %186 to i64
  %191 = getelementptr inbounds i32, i32* %0, i64 %190
  store i32 %189, i32* %191, align 4
  %192 = zext i16 %182 to i32
  %193 = ashr i32 %192, 8
  %194 = sub nsw i32 %.51873, 2
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %1, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i32
  %199 = shl i32 %198, 8
  %200 = or i32 %193, %199
  %201 = trunc i32 %200 to i16
  %202 = zext i16 %201 to i64
  %203 = getelementptr inbounds i32, i32* %3, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = sub i32 %204, 1
  %206 = zext i16 %201 to i64
  %207 = getelementptr inbounds i32, i32* %3, i64 %206
  store i32 %205, i32* %207, align 4
  %208 = sub nsw i32 %.51873, 2
  %209 = sext i32 %205 to i64
  %210 = getelementptr inbounds i32, i32* %0, i64 %209
  store i32 %208, i32* %210, align 4
  %211 = zext i16 %201 to i32
  %212 = ashr i32 %211, 8
  %213 = sub nsw i32 %.51873, 3
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* %1, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i32
  %218 = shl i32 %217, 8
  %219 = or i32 %212, %218
  %220 = trunc i32 %219 to i16
  %221 = zext i16 %220 to i64
  %222 = getelementptr inbounds i32, i32* %3, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = sub i32 %223, 1
  %225 = zext i16 %220 to i64
  %226 = getelementptr inbounds i32, i32* %3, i64 %225
  store i32 %224, i32* %226, align 4
  %227 = sub nsw i32 %.51873, 3
  %228 = sext i32 %224 to i64
  %229 = getelementptr inbounds i32, i32* %0, i64 %228
  store i32 %227, i32* %229, align 4
  br label %230

; <label>:230:                                    ; preds = %155
  %231 = sub nsw i32 %.51873, 4
  %232 = icmp sge i32 %231, 3
  br i1 %232, label %155, label %._crit_edge77

._crit_edge77:                                    ; preds = %230
  %split78 = phi i16 [ %220, %230 ]
  %233 = add i32 %4, -5
  %234 = sub i32 %233, %154
  br label %235

; <label>:235:                                    ; preds = %._crit_edge77, %144
  %.518.lcssa = phi i32 [ %234, %._crit_edge77 ], [ %150, %144 ]
  %.02.lcssa = phi i16 [ %split78, %._crit_edge77 ], [ %149, %144 ]
  %236 = icmp sge i32 %.518.lcssa, 0
  br i1 %236, label %.lr.ph69, label %258

.lr.ph69:                                         ; preds = %235
  %237 = sext i32 %.518.lcssa to i64
  br label %238

; <label>:238:                                    ; preds = %.lr.ph69, %256
  %indvars.iv71 = phi i64 [ %237, %.lr.ph69 ], [ %indvars.iv.next72, %256 ]
  %.1367 = phi i16 [ %.02.lcssa, %.lr.ph69 ], [ %246, %256 ]
  call void @unroll_loop(i32 183)
  %239 = zext i16 %.1367 to i32
  %240 = ashr i32 %239, 8
  %241 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv71
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = shl i32 %243, 8
  %245 = or i32 %240, %244
  %246 = trunc i32 %245 to i16
  %247 = zext i16 %246 to i64
  %248 = getelementptr inbounds i32, i32* %3, i64 %247
  %249 = load i32, i32* %248, align 4
  %250 = sub i32 %249, 1
  %251 = zext i16 %246 to i64
  %252 = getelementptr inbounds i32, i32* %3, i64 %251
  store i32 %250, i32* %252, align 4
  %253 = sext i32 %250 to i64
  %254 = getelementptr inbounds i32, i32* %0, i64 %253
  %255 = trunc i64 %indvars.iv71 to i32
  store i32 %255, i32* %254, align 4
  br label %256

; <label>:256:                                    ; preds = %238
  %indvars.iv.next72 = add nsw i64 %indvars.iv71, -1
  %257 = icmp sge i64 %indvars.iv.next72, 0
  br i1 %257, label %238, label %._crit_edge70

._crit_edge70:                                    ; preds = %256
  br label %258

; <label>:258:                                    ; preds = %._crit_edge70, %235
  br label %259

; <label>:259:                                    ; preds = %258, %263
  %indvars.iv63 = phi i64 [ 0, %258 ], [ %indvars.iv.next64, %263 ]
  %260 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %indvars.iv63
  store i8 0, i8* %260, align 1
  %261 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %indvars.iv63
  %262 = trunc i64 %indvars.iv63 to i32
  store i32 %262, i32* %261, align 4
  br label %263

; <label>:263:                                    ; preds = %259
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1
  %exitcond65 = icmp ne i64 %indvars.iv.next64, 256
  br i1 %exitcond65, label %259, label %264

; <label>:264:                                    ; preds = %263
  br label %265

; <label>:265:                                    ; preds = %268, %264
  %.01 = phi i32 [ 1, %264 ], [ %267, %268 ]
  %266 = mul nsw i32 3, %.01
  %267 = add nsw i32 %266, 1
  br label %268

; <label>:268:                                    ; preds = %265
  %269 = icmp sle i32 %267, 256
  br i1 %269, label %265, label %270

; <label>:270:                                    ; preds = %268
  br label %271

; <label>:271:                                    ; preds = %326, %270
  %.1 = phi i32 [ 364, %270 ], [ %272, %326 ]
  %272 = sdiv i32 %.1, 3
  %273 = icmp sle i32 %272, 255
  br i1 %273, label %.lr.ph57, label %325

.lr.ph57:                                         ; preds = %271
  %274 = sext i32 %272 to i64
  br label %275

; <label>:275:                                    ; preds = %.lr.ph57, %324
  %indvars.iv59 = phi i64 [ %274, %.lr.ph57 ], [ %indvars.iv.next60, %324 ]
  %276 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %indvars.iv59
  %277 = load i32, i32* %276, align 4
  %278 = trunc i64 %indvars.iv59 to i32
  br label %279

; <label>:279:                                    ; preds = %309, %275
  %.210 = phi i32 [ %278, %275 ], [ %316, %309 ]
  call void @unroll_loop(i32 184)
  %280 = sub nsw i32 %.210, %272
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %281
  %283 = load i32, i32* %282, align 4
  %284 = add nsw i32 %283, 1
  %285 = shl i32 %284, 8
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i32, i32* %3, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = sub nsw i32 %.210, %272
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = shl i32 %292, 8
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds i32, i32* %3, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = sub i32 %288, %296
  %298 = add nsw i32 %277, 1
  %299 = shl i32 %298, 8
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds i32, i32* %3, i64 %300
  %302 = load i32, i32* %301, align 4
  %303 = shl i32 %277, 8
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds i32, i32* %3, i64 %304
  %306 = load i32, i32* %305, align 4
  %307 = sub i32 %302, %306
  %308 = icmp ugt i32 %297, %307
  br i1 %308, label %309, label %320

; <label>:309:                                    ; preds = %279
  %310 = sub nsw i32 %.210, %272
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %311
  %313 = load i32, i32* %312, align 4
  %314 = sext i32 %.210 to i64
  %315 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %314
  store i32 %313, i32* %315, align 4
  %316 = sub nsw i32 %.210, %272
  %317 = sub nsw i32 %272, 1
  %318 = icmp sle i32 %316, %317
  br i1 %318, label %319, label %279

; <label>:319:                                    ; preds = %309
  %.lcssa = phi i32 [ %316, %309 ]
  br label %321

; <label>:320:                                    ; preds = %279
  %.210.lcssa = phi i32 [ %.210, %279 ]
  br label %321

; <label>:321:                                    ; preds = %320, %319
  %.311 = phi i32 [ %.lcssa, %319 ], [ %.210.lcssa, %320 ]
  %322 = sext i32 %.311 to i64
  %323 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %322
  store i32 %277, i32* %323, align 4
  br label %324

; <label>:324:                                    ; preds = %321
  %indvars.iv.next60 = add nsw i64 %indvars.iv59, 1
  %exitcond61 = icmp ne i64 %indvars.iv.next60, 256
  br i1 %exitcond61, label %275, label %._crit_edge58

._crit_edge58:                                    ; preds = %324
  br label %325

; <label>:325:                                    ; preds = %._crit_edge58, %271
  br label %326

; <label>:326:                                    ; preds = %325
  %327 = icmp ne i32 %272, 1
  br i1 %327, label %271, label %328

; <label>:328:                                    ; preds = %326
  br label %329

; <label>:329:                                    ; preds = %328, %563
  %indvars.iv53 = phi i64 [ 0, %328 ], [ %indvars.iv.next54, %563 ]
  %.0452 = phi i32 [ 0, %328 ], [ %.15.lcssa, %563 ]
  call void @unroll_loop(i32 185)
  %330 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %indvars.iv53
  %331 = load i32, i32* %330, align 4
  %332 = zext i32 %331 to i64
  br label %333

; <label>:333:                                    ; preds = %329, %376
  %indvars.iv = phi i64 [ 0, %329 ], [ %indvars.iv.next, %376 ]
  %.1528 = phi i32 [ %.0452, %329 ], [ %.4, %376 ]
  call void @unroll_loop(i32 186)
  %334 = icmp ne i64 %indvars.iv, %332
  br i1 %334, label %335, label %375

; <label>:335:                                    ; preds = %333
  %336 = shl i32 %331, 8
  %337 = sext i32 %336 to i64
  %338 = add nuw nsw i64 %337, %indvars.iv
  %339 = getelementptr inbounds i32, i32* %3, i64 %338
  %340 = load i32, i32* %339, align 4
  %341 = and i32 %340, 2097152
  %342 = icmp ne i32 %341, 0
  br i1 %342, label %371, label %343

; <label>:343:                                    ; preds = %335
  %344 = getelementptr inbounds i32, i32* %3, i64 %338
  %345 = load i32, i32* %344, align 4
  %346 = and i32 %345, -2097153
  %347 = add nsw i64 %338, 1
  %348 = getelementptr inbounds i32, i32* %3, i64 %347
  %349 = load i32, i32* %348, align 4
  %350 = and i32 %349, -2097153
  %351 = sub i32 %350, 1
  %352 = icmp sgt i32 %351, %346
  br i1 %352, label %353, label %370

; <label>:353:                                    ; preds = %343
  %354 = icmp sge i32 %5, 4
  br i1 %354, label %355, label %362

; <label>:355:                                    ; preds = %353
  %356 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %357 = sub nsw i32 %351, %346
  %358 = add nsw i32 %357, 1
  %359 = trunc i64 %indvars.iv to i32
  %360 = getelementptr [48 x i8], [48 x i8]* @.str.7.168, i32 0, i32 0
  %361 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %356, i8* %360, i32 %331, i32 %359, i32 %.1528, i32 %358)
  br label %362

; <label>:362:                                    ; preds = %355, %353
  call void @mainQSort3(i32* %0, i8* %1, i16* %2, i32 %4, i32 %346, i32 %351, i32 2, i32* %6)
  %363 = sub nsw i32 %351, %346
  %364 = add nsw i32 %363, 1
  %365 = add nsw i32 %.1528, %364
  %366 = load i32, i32* %6, align 4
  %367 = icmp slt i32 %366, 0
  br i1 %367, label %368, label %369

; <label>:368:                                    ; preds = %362
  br label %572

; <label>:369:                                    ; preds = %362
  br label %370

; <label>:370:                                    ; preds = %369, %343
  %.2 = phi i32 [ %365, %369 ], [ %.1528, %343 ]
  br label %371

; <label>:371:                                    ; preds = %370, %335
  %.3 = phi i32 [ %.1528, %335 ], [ %.2, %370 ]
  %372 = getelementptr inbounds i32, i32* %3, i64 %338
  %373 = load i32, i32* %372, align 4
  %374 = or i32 %373, 2097152
  store i32 %374, i32* %372, align 4
  br label %375

; <label>:375:                                    ; preds = %371, %333
  %.4 = phi i32 [ %.3, %371 ], [ %.1528, %333 ]
  br label %376

; <label>:376:                                    ; preds = %375
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %377 = icmp ule i64 %indvars.iv.next, 255
  br i1 %377, label %333, label %378

; <label>:378:                                    ; preds = %376
  %.15.lcssa = phi i32 [ %.4, %376 ]
  %379 = sext i32 %331 to i64
  %380 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %379
  %381 = load i8, i8* %380, align 1
  %382 = icmp ne i8 %381, 0
  br i1 %382, label %383, label %384

; <label>:383:                                    ; preds = %378
  call void @BZ2_bz__AssertH__fail(i32 1006)
  br label %384

; <label>:384:                                    ; preds = %383, %378
  %385 = sext i32 %331 to i64
  %386 = sext i32 %331 to i64
  br label %387

; <label>:387:                                    ; preds = %384, %402
  %indvars.iv30 = phi i64 [ 0, %384 ], [ %indvars.iv.next31, %402 ]
  call void @unroll_loop(i32 187)
  %388 = shl i64 %indvars.iv30, 8
  %389 = add nsw i64 %388, %386
  %390 = getelementptr inbounds i32, i32* %3, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = and i32 %391, -2097153
  %393 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %indvars.iv30
  store i32 %392, i32* %393, align 4
  %394 = shl i64 %indvars.iv30, 8
  %395 = add nsw i64 %394, %385
  %396 = add nsw i64 %395, 1
  %397 = getelementptr inbounds i32, i32* %3, i64 %396
  %398 = load i32, i32* %397, align 4
  %399 = and i32 %398, -2097153
  %400 = sub i32 %399, 1
  %401 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %indvars.iv30
  store i32 %400, i32* %401, align 4
  br label %402

; <label>:402:                                    ; preds = %387
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1
  %exitcond = icmp ne i64 %indvars.iv.next31, 256
  br i1 %exitcond, label %387, label %403

; <label>:403:                                    ; preds = %402
  %404 = shl i32 %331, 8
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i32, i32* %3, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = and i32 %407, -2097153
  %409 = sext i32 %331 to i64
  %410 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %409
  %411 = load i32, i32* %410, align 4
  %412 = icmp slt i32 %408, %411
  br i1 %412, label %.lr.ph, label %441

.lr.ph:                                           ; preds = %403
  %413 = sext i32 %408 to i64
  br label %414

; <label>:414:                                    ; preds = %.lr.ph, %437
  %indvars.iv33 = phi i64 [ %413, %.lr.ph ], [ %indvars.iv.next34, %437 ]
  call void @unroll_loop(i32 188)
  %415 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv33
  %416 = load i32, i32* %415, align 4
  %417 = sub i32 %416, 1
  %418 = icmp slt i32 %417, 0
  br i1 %418, label %419, label %421

; <label>:419:                                    ; preds = %414
  %420 = add nsw i32 %417, %4
  br label %421

; <label>:421:                                    ; preds = %419, %414
  %.06 = phi i32 [ %420, %419 ], [ %417, %414 ]
  %422 = sext i32 %.06 to i64
  %423 = getelementptr inbounds i8, i8* %1, i64 %422
  %424 = load i8, i8* %423, align 1
  %425 = zext i8 %424 to i64
  %426 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %425
  %427 = load i8, i8* %426, align 1
  %428 = icmp ne i8 %427, 0
  br i1 %428, label %436, label %429

; <label>:429:                                    ; preds = %421
  %430 = zext i8 %424 to i64
  %431 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %430
  %432 = load i32, i32* %431, align 4
  %433 = add nsw i32 %432, 1
  store i32 %433, i32* %431, align 4
  %434 = sext i32 %432 to i64
  %435 = getelementptr inbounds i32, i32* %0, i64 %434
  store i32 %.06, i32* %435, align 4
  br label %436

; <label>:436:                                    ; preds = %429, %421
  br label %437

; <label>:437:                                    ; preds = %436
  %indvars.iv.next34 = add nsw i64 %indvars.iv33, 1
  %438 = load i32, i32* %410, align 4
  %439 = sext i32 %438 to i64
  %440 = icmp slt i64 %indvars.iv.next34, %439
  br i1 %440, label %414, label %._crit_edge

._crit_edge:                                      ; preds = %437
  br label %441

; <label>:441:                                    ; preds = %._crit_edge, %403
  %442 = add nsw i32 %331, 1
  %443 = shl i32 %442, 8
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i32, i32* %3, i64 %444
  %446 = load i32, i32* %445, align 4
  %447 = and i32 %446, -2097153
  %448 = sub i32 %447, 1
  %449 = sext i32 %331 to i64
  %450 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %449
  %451 = load i32, i32* %450, align 4
  %452 = icmp sgt i32 %448, %451
  br i1 %452, label %.lr.ph37, label %481

.lr.ph37:                                         ; preds = %441
  %453 = sext i32 %448 to i64
  br label %454

; <label>:454:                                    ; preds = %.lr.ph37, %477
  %indvars.iv39 = phi i64 [ %453, %.lr.ph37 ], [ %indvars.iv.next40, %477 ]
  call void @unroll_loop(i32 189)
  %455 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv39
  %456 = load i32, i32* %455, align 4
  %457 = sub i32 %456, 1
  %458 = icmp slt i32 %457, 0
  br i1 %458, label %459, label %461

; <label>:459:                                    ; preds = %454
  %460 = add nsw i32 %457, %4
  br label %461

; <label>:461:                                    ; preds = %459, %454
  %.17 = phi i32 [ %460, %459 ], [ %457, %454 ]
  %462 = sext i32 %.17 to i64
  %463 = getelementptr inbounds i8, i8* %1, i64 %462
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i64
  %466 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %465
  %467 = load i8, i8* %466, align 1
  %468 = icmp ne i8 %467, 0
  br i1 %468, label %476, label %469

; <label>:469:                                    ; preds = %461
  %470 = zext i8 %464 to i64
  %471 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %470
  %472 = load i32, i32* %471, align 4
  %473 = add nsw i32 %472, -1
  store i32 %473, i32* %471, align 4
  %474 = sext i32 %472 to i64
  %475 = getelementptr inbounds i32, i32* %0, i64 %474
  store i32 %.17, i32* %475, align 4
  br label %476

; <label>:476:                                    ; preds = %469, %461
  br label %477

; <label>:477:                                    ; preds = %476
  %indvars.iv.next40 = add i64 %indvars.iv39, -1
  %478 = load i32, i32* %450, align 4
  %479 = sext i32 %478 to i64
  %480 = icmp sgt i64 %indvars.iv.next40, %479
  br i1 %480, label %454, label %._crit_edge38

._crit_edge38:                                    ; preds = %477
  br label %481

; <label>:481:                                    ; preds = %._crit_edge38, %441
  %482 = sext i32 %331 to i64
  %483 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %482
  %484 = load i32, i32* %483, align 4
  %485 = sub nsw i32 %484, 1
  %486 = sext i32 %331 to i64
  %487 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %486
  %488 = load i32, i32* %487, align 4
  %489 = icmp eq i32 %485, %488
  br i1 %489, label %502, label %490

; <label>:490:                                    ; preds = %481
  %491 = sext i32 %331 to i64
  %492 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %491
  %493 = load i32, i32* %492, align 4
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %501

; <label>:495:                                    ; preds = %490
  %496 = sext i32 %331 to i64
  %497 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %496
  %498 = load i32, i32* %497, align 4
  %499 = sub nsw i32 %4, 1
  %500 = icmp eq i32 %498, %499
  br i1 %500, label %502, label %501

; <label>:501:                                    ; preds = %495, %490
  call void @BZ2_bz__AssertH__fail(i32 1007)
  br label %502

; <label>:502:                                    ; preds = %501, %495, %481
  %503 = sext i32 %331 to i64
  br label %504

; <label>:504:                                    ; preds = %502, %510
  %indvars.iv42 = phi i64 [ 0, %502 ], [ %indvars.iv.next43, %510 ]
  call void @unroll_loop(i32 190)
  %505 = shl i64 %indvars.iv42, 8
  %506 = add nsw i64 %505, %503
  %507 = getelementptr inbounds i32, i32* %3, i64 %506
  %508 = load i32, i32* %507, align 4
  %509 = or i32 %508, 2097152
  store i32 %509, i32* %507, align 4
  br label %510

; <label>:510:                                    ; preds = %504
  %indvars.iv.next43 = add nuw nsw i64 %indvars.iv42, 1
  %exitcond44 = icmp ne i64 %indvars.iv.next43, 256
  br i1 %exitcond44, label %504, label %511

; <label>:511:                                    ; preds = %510
  %512 = sext i32 %331 to i64
  %513 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %512
  store i8 1, i8* %513, align 1
  %514 = icmp ult i64 %indvars.iv53, 255
  br i1 %514, label %515, label %562

; <label>:515:                                    ; preds = %511
  %516 = shl i32 %331, 8
  %517 = sext i32 %516 to i64
  %518 = getelementptr inbounds i32, i32* %3, i64 %517
  %519 = load i32, i32* %518, align 4
  %520 = and i32 %519, -2097153
  %521 = add nsw i32 %331, 1
  %522 = shl i32 %521, 8
  %523 = sext i32 %522 to i64
  %524 = getelementptr inbounds i32, i32* %3, i64 %523
  %525 = load i32, i32* %524, align 4
  %526 = and i32 %525, -2097153
  %527 = sub i32 %526, %520
  br label %528

; <label>:528:                                    ; preds = %528, %515
  %.0 = phi i32 [ 0, %515 ], [ %531, %528 ]
  call void @unroll_loop(i32 191)
  %529 = ashr i32 %527, %.0
  %530 = icmp sgt i32 %529, 65534
  %531 = add nuw nsw i32 %.0, 1
  br i1 %530, label %528, label %532

; <label>:532:                                    ; preds = %528
  %.0.lcssa = phi i32 [ %.0, %528 ]
  %533 = sub nsw i32 %527, 1
  %534 = icmp sge i32 %533, 0
  br i1 %534, label %.lr.ph47, label %556

.lr.ph47:                                         ; preds = %532
  %535 = add i32 %526, -1
  %536 = sub i32 %535, %520
  %537 = sext i32 %536 to i64
  %538 = sext i32 %520 to i64
  br label %539

; <label>:539:                                    ; preds = %.lr.ph47, %554
  %indvars.iv49 = phi i64 [ %537, %.lr.ph47 ], [ %indvars.iv.next50, %554 ]
  call void @unroll_loop(i32 192)
  %540 = add nsw i64 %538, %indvars.iv49
  %541 = getelementptr inbounds i32, i32* %0, i64 %540
  %542 = load i32, i32* %541, align 4
  %543 = trunc i64 %indvars.iv49 to i32
  %544 = ashr i32 %543, %.0.lcssa
  %545 = trunc i32 %544 to i16
  %546 = sext i32 %542 to i64
  %547 = getelementptr inbounds i16, i16* %2, i64 %546
  store i16 %545, i16* %547, align 2
  %548 = icmp slt i32 %542, 34
  br i1 %548, label %549, label %553

; <label>:549:                                    ; preds = %539
  %550 = add nsw i32 %542, %4
  %551 = sext i32 %550 to i64
  %552 = getelementptr inbounds i16, i16* %2, i64 %551
  store i16 %545, i16* %552, align 2
  br label %553

; <label>:553:                                    ; preds = %549, %539
  br label %554

; <label>:554:                                    ; preds = %553
  %indvars.iv.next50 = add nsw i64 %indvars.iv49, -1
  %555 = icmp sge i64 %indvars.iv.next50, 0
  br i1 %555, label %539, label %._crit_edge48

._crit_edge48:                                    ; preds = %554
  br label %556

; <label>:556:                                    ; preds = %._crit_edge48, %532
  %557 = sub nsw i32 %527, 1
  %558 = ashr i32 %557, %.0.lcssa
  %559 = icmp sle i32 %558, 65535
  br i1 %559, label %561, label %560

; <label>:560:                                    ; preds = %556
  call void @BZ2_bz__AssertH__fail(i32 1002)
  br label %561

; <label>:561:                                    ; preds = %560, %556
  br label %562

; <label>:562:                                    ; preds = %561, %511
  br label %563

; <label>:563:                                    ; preds = %562
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %564 = icmp ule i64 %indvars.iv.next54, 255
  br i1 %564, label %329, label %565

; <label>:565:                                    ; preds = %563
  %.04.lcssa = phi i32 [ %.15.lcssa, %563 ]
  %566 = icmp sge i32 %5, 4
  br i1 %566, label %567, label %572

; <label>:567:                                    ; preds = %565
  %568 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %569 = sub nsw i32 %4, %.04.lcssa
  %570 = getelementptr [44 x i8], [44 x i8]* @.str.8.169, i32 0, i32 0
  %571 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %568, i8* %570, i32 %4, i32 %.04.lcssa, i32 %569)
  br label %572

; <label>:572:                                    ; preds = %368, %567, %565
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainQSort3(i32*, i8*, i16*, i32, i32, i32, i32, i32*) #0 {
  %9 = alloca [100 x i32], align 16
  %10 = alloca [100 x i32], align 16
  %11 = alloca [100 x i32], align 16
  %12 = alloca [3 x i32], align 4
  %13 = alloca [3 x i32], align 4
  %14 = alloca [3 x i32], align 4
  %15 = sext i32 0 to i64
  %16 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %15
  store i32 %4, i32* %16, align 4
  %17 = sext i32 0 to i64
  %18 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %17
  store i32 %5, i32* %18, align 4
  %19 = sext i32 0 to i64
  %20 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %19
  store i32 %6, i32* %20, align 4
  %21 = add nsw i32 0, 1
  br label %22

; <label>:22:                                     ; preds = %8, %.backedge
  %.0681 = phi i32 [ %21, %8 ], [ %.06.be, %.backedge ]
  call void @unroll_loop(i32 194)
  %23 = icmp slt i32 %.0681, 98
  br i1 %23, label %25, label %24

; <label>:24:                                     ; preds = %22
  call void @BZ2_bz__AssertH__fail(i32 1001)
  br label %25

; <label>:25:                                     ; preds = %24, %22
  %26 = add nsw i32 %.0681, -1
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %26 to i64
  %31 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %26 to i64
  %34 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sub nsw i32 %32, %29
  %37 = icmp slt i32 %36, 20
  br i1 %37, label %40, label %38

; <label>:38:                                     ; preds = %25
  %39 = icmp sgt i32 %35, 14
  br i1 %39, label %40, label %46

; <label>:40:                                     ; preds = %38, %25
  call void @mainSimpleSort(i32* %0, i8* %1, i16* %2, i32 %3, i32 %29, i32 %32, i32 %35, i32* %7)
  %41 = load i32, i32* %7, align 4
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %44

; <label>:43:                                     ; preds = %40
  br label %382

; <label>:44:                                     ; preds = %40
  br label %.backedge

.backedge:                                        ; preds = %44, %164, %342
  %.06.be = phi i32 [ %26, %44 ], [ %172, %164 ], [ %381, %342 ]
  %45 = icmp sgt i32 %.06.be, 0
  br i1 %45, label %22, label %.loopexit

; <label>:46:                                     ; preds = %38
  %47 = sext i32 %29 to i64
  %48 = getelementptr inbounds i32, i32* %0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, %35
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = sext i32 %32 to i64
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, %35
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = add nsw i32 %29, %32
  %62 = ashr i32 %61, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = add i32 %65, %35
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %1, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = call zeroext i8 @mmed3(i8 zeroext %53, i8 zeroext %60, i8 zeroext %69)
  %71 = zext i8 %70 to i32
  br label %72

; <label>:72:                                     ; preds = %46, %149
  %.012 = phi i32 [ %32, %46 ], [ %.11321, %149 ]
  %.010 = phi i32 [ %29, %46 ], [ %.11117, %149 ]
  %.08 = phi i32 [ %32, %46 ], [ %161, %149 ]
  %.07 = phi i32 [ %29, %46 ], [ %160, %149 ]
  call void @unroll_loop(i32 195)
  %73 = sext i32 %.08 to i64
  %74 = icmp sgt i32 %.07, %.08
  br i1 %74, label %.outer28._crit_edge, label %.lr.ph.lr.ph

.lr.ph.lr.ph:                                     ; preds = %72
  %75 = sext i32 %.010 to i64
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.outer28
  %indvars.iv43 = phi i64 [ %75, %.lr.ph.lr.ph ], [ %indvars.iv.next44, %.outer28 ]
  %.1.ph40 = phi i32 [ %.07, %.lr.ph.lr.ph ], [ %100, %.outer28 ]
  call void @unroll_loop(i32 176)
  %76 = sext i32 %.1.ph40 to i64
  br label %81

.outer28..outer28._crit_edge_crit_edge:           ; preds = %.outer28
  %split41.wide = phi i64 [ %indvars.iv.next44, %.outer28 ]
  %split42 = phi i32 [ %100, %.outer28 ]
  %77 = trunc i64 %split41.wide to i32
  br label %.outer28._crit_edge

.outer28._crit_edge:                              ; preds = %.outer28..outer28._crit_edge_crit_edge, %72
  %split = phi i32 [ %77, %.outer28..outer28._crit_edge_crit_edge ], [ %.010, %72 ]
  %split36 = phi i32 [ %split42, %.outer28..outer28._crit_edge_crit_edge ], [ %.07, %72 ]
  br label %80

._crit_edge:                                      ; preds = %107
  %split37.wide = phi i64 [ %indvars.iv43, %107 ]
  %split38.wide = phi i64 [ %indvars.iv.next, %107 ]
  %78 = trunc i64 %split37.wide to i32
  %79 = trunc i64 %split38.wide to i32
  br label %80

; <label>:80:                                     ; preds = %._crit_edge, %.outer28._crit_edge
  %.111.lcssa = phi i32 [ %78, %._crit_edge ], [ %split, %.outer28._crit_edge ]
  %.1.lcssa = phi i32 [ %79, %._crit_edge ], [ %split36, %.outer28._crit_edge ]
  br label %109

; <label>:81:                                     ; preds = %.lr.ph, %107
  %indvars.iv = phi i64 [ %76, %.lr.ph ], [ %indvars.iv.next, %107 ]
  call void @unroll_loop(i32 196)
  %82 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %83 = load i32, i32* %82, align 4
  %84 = add i32 %83, %35
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %1, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = sub nsw i32 %88, %71
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %.outer28, label %102

.outer28:                                         ; preds = %81
  %.1.lcssa30.wide = phi i64 [ %indvars.iv, %81 ]
  %91 = trunc i64 %.1.lcssa30.wide to i32
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv43
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %91 to i64
  %98 = getelementptr inbounds i32, i32* %0, i64 %97
  store i32 %96, i32* %98, align 4
  %99 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv43
  store i32 %94, i32* %99, align 4
  %indvars.iv.next44 = add i64 %indvars.iv43, 1
  %100 = add nsw i32 %91, 1
  %101 = icmp sgt i32 %100, %.08
  br i1 %101, label %.outer28..outer28._crit_edge_crit_edge, label %.lr.ph

; <label>:102:                                    ; preds = %81
  %103 = icmp sgt i32 %89, 0
  br i1 %103, label %104, label %107

; <label>:104:                                    ; preds = %102
  %.111.lcssa16.wide = phi i64 [ %indvars.iv43, %102 ]
  %.1.lcssa14.wide = phi i64 [ %indvars.iv, %102 ]
  %105 = trunc i64 %.111.lcssa16.wide to i32
  %106 = trunc i64 %.1.lcssa14.wide to i32
  br label %109

; <label>:107:                                    ; preds = %102
  %indvars.iv.next = add i64 %indvars.iv, 1
  %108 = icmp sgt i64 %indvars.iv.next, %73
  br i1 %108, label %._crit_edge, label %81

; <label>:109:                                    ; preds = %104, %80
  %.11117 = phi i32 [ %105, %104 ], [ %.111.lcssa, %80 ]
  %.115 = phi i32 [ %106, %104 ], [ %.1.lcssa, %80 ]
  %110 = sext i32 %.115 to i64
  %111 = icmp sgt i32 %.115, %.08
  br i1 %111, label %.outer._crit_edge, label %.lr.ph46.lr.ph

.lr.ph46.lr.ph:                                   ; preds = %109
  %112 = sext i32 %.012 to i64
  br label %.lr.ph46

.lr.ph46:                                         ; preds = %.lr.ph46.lr.ph, %.outer
  %indvars.iv58 = phi i64 [ %112, %.lr.ph46.lr.ph ], [ %indvars.iv.next59, %.outer ]
  %.19.ph55 = phi i32 [ %.08, %.lr.ph46.lr.ph ], [ %137, %.outer ]
  call void @unroll_loop(i32 153)
  %113 = sext i32 %.19.ph55 to i64
  br label %118

.outer..outer._crit_edge_crit_edge:               ; preds = %.outer
  %split56.wide = phi i64 [ %indvars.iv.next59, %.outer ]
  %split57 = phi i32 [ %137, %.outer ]
  %114 = trunc i64 %split56.wide to i32
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer..outer._crit_edge_crit_edge, %109
  %split47 = phi i32 [ %114, %.outer..outer._crit_edge_crit_edge ], [ %.012, %109 ]
  %split48 = phi i32 [ %split57, %.outer..outer._crit_edge_crit_edge ], [ %.08, %109 ]
  br label %117

._crit_edge49:                                    ; preds = %144
  %split50.wide = phi i64 [ %indvars.iv58, %144 ]
  %split51.wide = phi i64 [ %indvars.iv.next53, %144 ]
  %115 = trunc i64 %split50.wide to i32
  %116 = trunc i64 %split51.wide to i32
  br label %117

; <label>:117:                                    ; preds = %._crit_edge49, %.outer._crit_edge
  %.113.lcssa = phi i32 [ %115, %._crit_edge49 ], [ %split47, %.outer._crit_edge ]
  %.19.lcssa = phi i32 [ %116, %._crit_edge49 ], [ %split48, %.outer._crit_edge ]
  br label %146

; <label>:118:                                    ; preds = %.lr.ph46, %144
  %indvars.iv52 = phi i64 [ %113, %.lr.ph46 ], [ %indvars.iv.next53, %144 ]
  call void @unroll_loop(i32 197)
  %119 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv52
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, %35
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %1, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i32
  %126 = sub nsw i32 %125, %71
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %.outer, label %139

.outer:                                           ; preds = %118
  %.19.lcssa23.wide = phi i64 [ %indvars.iv52, %118 ]
  %128 = trunc i64 %.19.lcssa23.wide to i32
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %0, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv58
  %133 = load i32, i32* %132, align 4
  %134 = sext i32 %128 to i64
  %135 = getelementptr inbounds i32, i32* %0, i64 %134
  store i32 %133, i32* %135, align 4
  %136 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv58
  store i32 %131, i32* %136, align 4
  %indvars.iv.next59 = add i64 %indvars.iv58, -1
  %137 = add nsw i32 %128, -1
  %138 = icmp sgt i32 %.115, %137
  br i1 %138, label %.outer..outer._crit_edge_crit_edge, label %.lr.ph46

; <label>:139:                                    ; preds = %118
  %140 = icmp slt i32 %126, 0
  br i1 %140, label %141, label %144

; <label>:141:                                    ; preds = %139
  %.113.lcssa20.wide = phi i64 [ %indvars.iv58, %139 ]
  %.19.lcssa18.wide = phi i64 [ %indvars.iv52, %139 ]
  %142 = trunc i64 %.113.lcssa20.wide to i32
  %143 = trunc i64 %.19.lcssa18.wide to i32
  br label %146

; <label>:144:                                    ; preds = %139
  %indvars.iv.next53 = add i64 %indvars.iv52, -1
  %145 = icmp sgt i64 %110, %indvars.iv.next53
  br i1 %145, label %._crit_edge49, label %118

; <label>:146:                                    ; preds = %141, %117
  %.11321 = phi i32 [ %142, %141 ], [ %.113.lcssa, %117 ]
  %.1919 = phi i32 [ %143, %141 ], [ %.19.lcssa, %117 ]
  %147 = icmp sgt i32 %.115, %.1919
  br i1 %147, label %148, label %149

; <label>:148:                                    ; preds = %146
  %.11321.lcssa = phi i32 [ %.11321, %146 ]
  %.1919.lcssa = phi i32 [ %.1919, %146 ]
  %.11117.lcssa = phi i32 [ %.11117, %146 ]
  %.115.lcssa = phi i32 [ %.115, %146 ]
  br label %162

; <label>:149:                                    ; preds = %146
  %150 = sext i32 %.115 to i64
  %151 = getelementptr inbounds i32, i32* %0, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = sext i32 %.1919 to i64
  %154 = getelementptr inbounds i32, i32* %0, i64 %153
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %.115 to i64
  %157 = getelementptr inbounds i32, i32* %0, i64 %156
  store i32 %155, i32* %157, align 4
  %158 = sext i32 %.1919 to i64
  %159 = getelementptr inbounds i32, i32* %0, i64 %158
  store i32 %152, i32* %159, align 4
  %160 = add nsw i32 %.115, 1
  %161 = add nsw i32 %.1919, -1
  br label %72

; <label>:162:                                    ; preds = %148
  %163 = icmp slt i32 %.11321.lcssa, %.11117.lcssa
  br i1 %163, label %164, label %173

; <label>:164:                                    ; preds = %162
  %165 = sext i32 %26 to i64
  %166 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %165
  store i32 %29, i32* %166, align 4
  %167 = sext i32 %26 to i64
  %168 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %167
  store i32 %32, i32* %168, align 4
  %169 = add nsw i32 %35, 1
  %170 = sext i32 %26 to i64
  %171 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %170
  store i32 %169, i32* %171, align 4
  %172 = add nsw i32 %26, 1
  br label %.backedge

; <label>:173:                                    ; preds = %162
  %174 = sub nsw i32 %.11117.lcssa, %29
  %175 = sub nsw i32 %.115.lcssa, %.11117.lcssa
  %176 = icmp slt i32 %174, %175
  br i1 %176, label %177, label %179

; <label>:177:                                    ; preds = %173
  %178 = sub nsw i32 %.11117.lcssa, %29
  br label %181

; <label>:179:                                    ; preds = %173
  %180 = sub nsw i32 %.115.lcssa, %.11117.lcssa
  br label %181

; <label>:181:                                    ; preds = %179, %177
  %182 = phi i32 [ %178, %177 ], [ %180, %179 ]
  %183 = icmp sgt i32 %182, 0
  br i1 %183, label %.lr.ph64, label %202

.lr.ph64:                                         ; preds = %181
  %184 = add i32 %.115.lcssa, 1
  %185 = add i32 %.11117.lcssa, -1
  %186 = sub i32 %185, %.115.lcssa
  %187 = add i32 %29, -1
  %188 = sub i32 %187, %.11117.lcssa
  %189 = icmp sgt i32 %186, %188
  %smax = select i1 %189, i32 %186, i32 %188
  %190 = add i32 %184, %smax
  %191 = sext i32 %190 to i64
  %192 = sext i32 %29 to i64
  br label %193

; <label>:193:                                    ; preds = %.lr.ph64, %193
  %indvars.iv68 = phi i64 [ %192, %.lr.ph64 ], [ %indvars.iv.next69, %193 ]
  %indvars.iv66 = phi i64 [ %191, %.lr.ph64 ], [ %indvars.iv.next67, %193 ]
  %.0362 = phi i32 [ %182, %.lr.ph64 ], [ %200, %193 ]
  call void @unroll_loop(i32 198)
  %194 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv68
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv66
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv68
  store i32 %197, i32* %198, align 4
  %199 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv66
  store i32 %195, i32* %199, align 4
  %indvars.iv.next69 = add nsw i64 %indvars.iv68, 1
  %indvars.iv.next67 = add nsw i64 %indvars.iv66, 1
  %200 = add nsw i32 %.0362, -1
  %201 = icmp sgt i32 %200, 0
  br i1 %201, label %193, label %._crit_edge65

._crit_edge65:                                    ; preds = %193
  br label %202

; <label>:202:                                    ; preds = %._crit_edge65, %181
  %203 = sub nsw i32 %32, %.11321.lcssa
  %204 = sub nsw i32 %.11321.lcssa, %.1919.lcssa
  %205 = icmp slt i32 %203, %204
  br i1 %205, label %206, label %208

; <label>:206:                                    ; preds = %202
  %207 = sub nsw i32 %32, %.11321.lcssa
  br label %210

; <label>:208:                                    ; preds = %202
  %209 = sub nsw i32 %.11321.lcssa, %.1919.lcssa
  br label %210

; <label>:210:                                    ; preds = %208, %206
  %211 = phi i32 [ %207, %206 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %.lr.ph74, label %231

.lr.ph74:                                         ; preds = %210
  %213 = add i32 %32, 2
  %214 = add i32 %.11321.lcssa, -1
  %215 = sub i32 %214, %32
  %216 = add i32 %.1919.lcssa, -1
  %217 = sub i32 %216, %.11321.lcssa
  %218 = icmp sgt i32 %215, %217
  %smax76 = select i1 %218, i32 %215, i32 %217
  %219 = add i32 %213, %smax76
  %220 = sext i32 %219 to i64
  %221 = sext i32 %.115.lcssa to i64
  br label %222

; <label>:222:                                    ; preds = %.lr.ph74, %222
  %indvars.iv79 = phi i64 [ %221, %.lr.ph74 ], [ %indvars.iv.next80, %222 ]
  %indvars.iv77 = phi i64 [ %220, %.lr.ph74 ], [ %indvars.iv.next78, %222 ]
  %.072 = phi i32 [ %211, %.lr.ph74 ], [ %229, %222 ]
  call void @unroll_loop(i32 199)
  %223 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv79
  %224 = load i32, i32* %223, align 4
  %225 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv77
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv79
  store i32 %226, i32* %227, align 4
  %228 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv77
  store i32 %224, i32* %228, align 4
  %indvars.iv.next80 = add nsw i64 %indvars.iv79, 1
  %indvars.iv.next78 = add nsw i64 %indvars.iv77, 1
  %229 = add nsw i32 %.072, -1
  %230 = icmp sgt i32 %229, 0
  br i1 %230, label %222, label %._crit_edge75

._crit_edge75:                                    ; preds = %222
  br label %231

; <label>:231:                                    ; preds = %._crit_edge75, %210
  %232 = add nsw i32 %29, %.115.lcssa
  %233 = sub nsw i32 %232, %.11117.lcssa
  %234 = sub nsw i32 %233, 1
  %235 = sub nsw i32 %.11321.lcssa, %.1919.lcssa
  %236 = sub nsw i32 %32, %235
  %237 = add nsw i32 %236, 1
  %238 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  store i32 %29, i32* %238, align 4
  %239 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  store i32 %234, i32* %239, align 4
  %240 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  store i32 %35, i32* %240, align 4
  %241 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  store i32 %237, i32* %241, align 4
  %242 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  store i32 %32, i32* %242, align 4
  %243 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  store i32 %35, i32* %243, align 4
  %244 = add nsw i32 %234, 1
  %245 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  store i32 %244, i32* %245, align 4
  %246 = sub nsw i32 %237, 1
  %247 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  store i32 %246, i32* %247, align 4
  %248 = add nsw i32 %35, 1
  %249 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  store i32 %248, i32* %249, align 4
  %250 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %253 = load i32, i32* %252, align 4
  %254 = sub nsw i32 %251, %253
  %255 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %256 = load i32, i32* %255, align 4
  %257 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %258 = load i32, i32* %257, align 4
  %259 = sub nsw i32 %256, %258
  %260 = icmp slt i32 %254, %259
  br i1 %260, label %261, label %280

; <label>:261:                                    ; preds = %231
  %262 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %265 = load i32, i32* %264, align 4
  %266 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  store i32 %265, i32* %266, align 4
  %267 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  store i32 %263, i32* %267, align 4
  %268 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %271 = load i32, i32* %270, align 4
  %272 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  store i32 %271, i32* %272, align 4
  %273 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  store i32 %269, i32* %273, align 4
  %274 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  store i32 %277, i32* %278, align 4
  %279 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  store i32 %275, i32* %279, align 4
  br label %280

; <label>:280:                                    ; preds = %261, %231
  %281 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %282 = load i32, i32* %281, align 4
  %283 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %284 = load i32, i32* %283, align 4
  %285 = sub nsw i32 %282, %284
  %286 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  %289 = load i32, i32* %288, align 4
  %290 = sub nsw i32 %287, %289
  %291 = icmp slt i32 %285, %290
  br i1 %291, label %292, label %311

; <label>:292:                                    ; preds = %280
  %293 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %294 = load i32, i32* %293, align 4
  %295 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  %296 = load i32, i32* %295, align 4
  %297 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  store i32 %296, i32* %297, align 4
  %298 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  store i32 %294, i32* %298, align 4
  %299 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  store i32 %302, i32* %303, align 4
  %304 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  store i32 %300, i32* %304, align 4
  %305 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %306 = load i32, i32* %305, align 4
  %307 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  %308 = load i32, i32* %307, align 4
  %309 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  store i32 %308, i32* %309, align 4
  %310 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  store i32 %306, i32* %310, align 4
  br label %311

; <label>:311:                                    ; preds = %292, %280
  %312 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %313 = load i32, i32* %312, align 4
  %314 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %315 = load i32, i32* %314, align 4
  %316 = sub nsw i32 %313, %315
  %317 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %318 = load i32, i32* %317, align 4
  %319 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %320 = load i32, i32* %319, align 4
  %321 = sub nsw i32 %318, %320
  %322 = icmp slt i32 %316, %321
  br i1 %322, label %323, label %342

; <label>:323:                                    ; preds = %311
  %324 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %325 = load i32, i32* %324, align 4
  %326 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  store i32 %327, i32* %328, align 4
  %329 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  store i32 %325, i32* %329, align 4
  %330 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %331 = load i32, i32* %330, align 4
  %332 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %333 = load i32, i32* %332, align 4
  %334 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  store i32 %333, i32* %334, align 4
  %335 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  store i32 %331, i32* %335, align 4
  %336 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %339 = load i32, i32* %338, align 4
  %340 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  store i32 %339, i32* %340, align 4
  %341 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  store i32 %337, i32* %341, align 4
  br label %342

; <label>:342:                                    ; preds = %323, %311
  %343 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %344 = load i32, i32* %343, align 4
  %345 = sext i32 %26 to i64
  %346 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %345
  store i32 %344, i32* %346, align 4
  %347 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %348 = load i32, i32* %347, align 4
  %349 = sext i32 %26 to i64
  %350 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %349
  store i32 %348, i32* %350, align 4
  %351 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %352 = load i32, i32* %351, align 4
  %353 = sext i32 %26 to i64
  %354 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %353
  store i32 %352, i32* %354, align 4
  %355 = add nsw i32 %26, 1
  %356 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %357 = load i32, i32* %356, align 4
  %358 = sext i32 %355 to i64
  %359 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %358
  store i32 %357, i32* %359, align 4
  %360 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %361 = load i32, i32* %360, align 4
  %362 = sext i32 %355 to i64
  %363 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %362
  store i32 %361, i32* %363, align 4
  %364 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %365 = load i32, i32* %364, align 4
  %366 = sext i32 %355 to i64
  %367 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %366
  store i32 %365, i32* %367, align 4
  %368 = add nsw i32 %355, 1
  %369 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  %370 = load i32, i32* %369, align 4
  %371 = sext i32 %368 to i64
  %372 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %371
  store i32 %370, i32* %372, align 4
  %373 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %374 = load i32, i32* %373, align 4
  %375 = sext i32 %368 to i64
  %376 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %375
  store i32 %374, i32* %376, align 4
  %377 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  %378 = load i32, i32* %377, align 4
  %379 = sext i32 %368 to i64
  %380 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %379
  store i32 %378, i32* %380, align 4
  %381 = add nsw i32 %368, 1
  br label %.backedge

.loopexit:                                        ; preds = %.backedge
  br label %382

; <label>:382:                                    ; preds = %.loopexit, %43
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainSimpleSort(i32*, i8*, i16*, i32, i32, i32, i32, i32*) #0 {
  %9 = sub nsw i32 %5, %4
  %10 = add nsw i32 %9, 1
  %11 = icmp slt i32 %10, 2
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %8
  br label %150

; <label>:13:                                     ; preds = %8
  br label %14

; <label>:14:                                     ; preds = %14, %13
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %14 ], [ 0, %13 ]
  %15 = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %indvars.iv21
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, %10
  %indvars.iv.next22 = add nuw i64 %indvars.iv21, 1
  br i1 %17, label %14, label %18

; <label>:18:                                     ; preds = %14
  %.0.lcssa.wide = phi i64 [ %indvars.iv21, %14 ]
  %19 = trunc i64 %.0.lcssa.wide to i32
  %20 = add nsw i32 %19, -1
  %21 = icmp sge i32 %20, 0
  br i1 %21, label %.lr.ph20, label %.loopexit8

.lr.ph20:                                         ; preds = %18
  %22 = zext i32 %19 to i64
  %23 = add i64 %22, -1
  br label %24

; <label>:24:                                     ; preds = %.lr.ph20, %148
  %indvars.iv = phi i64 [ %23, %.lr.ph20 ], [ %indvars.iv.next, %148 ]
  %25 = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %indvars.iv
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %4, %26
  %28 = icmp sgt i32 %27, %5
  br i1 %28, label %31, label %.lr.ph17

.lr.ph17:                                         ; preds = %24
  br label %32

; <label>:29:                                     ; preds = %140
  %30 = icmp sgt i32 %143, %5
  br i1 %30, label %._crit_edge, label %32

._crit_edge:                                      ; preds = %29
  br label %31

; <label>:31:                                     ; preds = %._crit_edge, %24
  br label %147

; <label>:32:                                     ; preds = %.lr.ph17, %29
  %.0316 = phi i32 [ %27, %.lr.ph17 ], [ %143, %29 ]
  call void @unroll_loop(i32 200)
  %33 = sext i32 %.0316 to i64
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = sub nsw i32 %.0316, %26
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, %6
  %41 = add i32 %35, %6
  %42 = call zeroext i8 @mainGtU(i32 %40, i32 %41, i8* %1, i16* %2, i32 %3, i32* %7)
  %43 = icmp ne i8 %42, 0
  br i1 %43, label %.lr.ph, label %.loopexit7

.lr.ph:                                           ; preds = %32
  br label %52

; <label>:44:                                     ; preds = %52
  %45 = sub nsw i32 %59, %26
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i32, i32* %0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, %6
  %50 = call zeroext i8 @mainGtU(i32 %49, i32 %41, i8* %1, i16* %2, i32 %3, i32* %7)
  %51 = icmp ne i8 %50, 0
  br i1 %51, label %52, label %..loopexit7_crit_edge

; <label>:52:                                     ; preds = %.lr.ph, %44
  %.019 = phi i32 [ %.0316, %.lr.ph ], [ %59, %44 ]
  call void @unroll_loop(i32 201)
  %53 = sub nsw i32 %.019, %26
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %0, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %.019 to i64
  %58 = getelementptr inbounds i32, i32* %0, i64 %57
  store i32 %56, i32* %58, align 4
  %59 = sub nsw i32 %.019, %26
  %60 = add nsw i32 %4, %26
  %61 = sub nsw i32 %60, 1
  %62 = icmp sle i32 %59, %61
  br i1 %62, label %63, label %44

; <label>:63:                                     ; preds = %52
  %.lcssa = phi i32 [ %59, %52 ]
  br label %64

..loopexit7_crit_edge:                            ; preds = %44
  %split = phi i32 [ %59, %44 ]
  br label %.loopexit7

.loopexit7:                                       ; preds = %..loopexit7_crit_edge, %32
  %.12.ph = phi i32 [ %split, %..loopexit7_crit_edge ], [ %.0316, %32 ]
  br label %64

; <label>:64:                                     ; preds = %.loopexit7, %63
  %.12 = phi i32 [ %.lcssa, %63 ], [ %.12.ph, %.loopexit7 ]
  %65 = sext i32 %.12 to i64
  %66 = getelementptr inbounds i32, i32* %0, i64 %65
  store i32 %35, i32* %66, align 4
  %67 = add nsw i32 %.0316, 1
  %68 = icmp sgt i32 %67, %5
  br i1 %68, label %69, label %70

; <label>:69:                                     ; preds = %64
  br label %147

; <label>:70:                                     ; preds = %64
  %71 = sext i32 %67 to i64
  %72 = getelementptr inbounds i32, i32* %0, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sub nsw i32 %67, %26
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %77, %6
  %79 = add i32 %73, %6
  %80 = call zeroext i8 @mainGtU(i32 %78, i32 %79, i8* %1, i16* %2, i32 %3, i32* %7)
  %81 = icmp ne i8 %80, 0
  br i1 %81, label %.lr.ph11, label %.loopexit6

.lr.ph11:                                         ; preds = %70
  br label %90

; <label>:82:                                     ; preds = %90
  %83 = sub nsw i32 %97, %26
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i32, i32* %0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, %6
  %88 = call zeroext i8 @mainGtU(i32 %87, i32 %79, i8* %1, i16* %2, i32 %3, i32* %7)
  %89 = icmp ne i8 %88, 0
  br i1 %89, label %90, label %..loopexit6_crit_edge

; <label>:90:                                     ; preds = %.lr.ph11, %82
  %.210 = phi i32 [ %67, %.lr.ph11 ], [ %97, %82 ]
  call void @unroll_loop(i32 202)
  %91 = sub nsw i32 %.210, %26
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = sext i32 %.210 to i64
  %96 = getelementptr inbounds i32, i32* %0, i64 %95
  store i32 %94, i32* %96, align 4
  %97 = sub nsw i32 %.210, %26
  %98 = add nsw i32 %4, %26
  %99 = sub nsw i32 %98, 1
  %100 = icmp sle i32 %97, %99
  br i1 %100, label %101, label %82

; <label>:101:                                    ; preds = %90
  %.lcssa4 = phi i32 [ %97, %90 ]
  br label %102

..loopexit6_crit_edge:                            ; preds = %82
  %split12 = phi i32 [ %97, %82 ]
  br label %.loopexit6

.loopexit6:                                       ; preds = %..loopexit6_crit_edge, %70
  %.3.ph = phi i32 [ %split12, %..loopexit6_crit_edge ], [ %67, %70 ]
  br label %102

; <label>:102:                                    ; preds = %.loopexit6, %101
  %.3 = phi i32 [ %.lcssa4, %101 ], [ %.3.ph, %.loopexit6 ]
  %103 = sext i32 %.3 to i64
  %104 = getelementptr inbounds i32, i32* %0, i64 %103
  store i32 %73, i32* %104, align 4
  %105 = add nsw i32 %67, 1
  %106 = icmp sgt i32 %105, %5
  br i1 %106, label %107, label %108

; <label>:107:                                    ; preds = %102
  br label %147

; <label>:108:                                    ; preds = %102
  %109 = sext i32 %105 to i64
  %110 = getelementptr inbounds i32, i32* %0, i64 %109
  %111 = load i32, i32* %110, align 4
  %112 = sub nsw i32 %105, %26
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %0, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, %6
  %117 = add i32 %111, %6
  %118 = call zeroext i8 @mainGtU(i32 %116, i32 %117, i8* %1, i16* %2, i32 %3, i32* %7)
  %119 = icmp ne i8 %118, 0
  br i1 %119, label %.lr.ph14, label %.loopexit

.lr.ph14:                                         ; preds = %108
  br label %128

; <label>:120:                                    ; preds = %128
  %121 = sub nsw i32 %135, %26
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %0, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = add i32 %124, %6
  %126 = call zeroext i8 @mainGtU(i32 %125, i32 %117, i8* %1, i16* %2, i32 %3, i32* %7)
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %..loopexit_crit_edge

; <label>:128:                                    ; preds = %.lr.ph14, %120
  %.413 = phi i32 [ %105, %.lr.ph14 ], [ %135, %120 ]
  call void @unroll_loop(i32 203)
  %129 = sub nsw i32 %.413, %26
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, i32* %0, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = sext i32 %.413 to i64
  %134 = getelementptr inbounds i32, i32* %0, i64 %133
  store i32 %132, i32* %134, align 4
  %135 = sub nsw i32 %.413, %26
  %136 = add nsw i32 %4, %26
  %137 = sub nsw i32 %136, 1
  %138 = icmp sle i32 %135, %137
  br i1 %138, label %139, label %120

; <label>:139:                                    ; preds = %128
  %.lcssa5 = phi i32 [ %135, %128 ]
  br label %140

..loopexit_crit_edge:                             ; preds = %120
  %split15 = phi i32 [ %135, %120 ]
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %108
  %.5.ph = phi i32 [ %split15, %..loopexit_crit_edge ], [ %105, %108 ]
  br label %140

; <label>:140:                                    ; preds = %.loopexit, %139
  %.5 = phi i32 [ %.lcssa5, %139 ], [ %.5.ph, %.loopexit ]
  %141 = sext i32 %.5 to i64
  %142 = getelementptr inbounds i32, i32* %0, i64 %141
  store i32 %111, i32* %142, align 4
  %143 = add nsw i32 %105, 1
  %144 = load i32, i32* %7, align 4
  %145 = icmp slt i32 %144, 0
  br i1 %145, label %146, label %29

; <label>:146:                                    ; preds = %140
  br label %150

; <label>:147:                                    ; preds = %107, %69, %31
  br label %148

; <label>:148:                                    ; preds = %147
  %indvars.iv.next = add i64 %indvars.iv, -1
  %149 = icmp sge i64 %indvars.iv.next, 0
  br i1 %149, label %24, label %..loopexit8_crit_edge

..loopexit8_crit_edge:                            ; preds = %148
  br label %.loopexit8

.loopexit8:                                       ; preds = %..loopexit8_crit_edge, %18
  br label %150

; <label>:150:                                    ; preds = %.loopexit8, %12, %146
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mmed3(i8 zeroext, i8 zeroext, i8 zeroext) #0 {
  %4 = zext i8 %0 to i32
  %5 = zext i8 %1 to i32
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %3
  br label %8

; <label>:8:                                      ; preds = %7, %3
  %.01 = phi i8 [ %0, %7 ], [ %1, %3 ]
  %.0 = phi i8 [ %1, %7 ], [ %0, %3 ]
  %9 = zext i8 %.01 to i32
  %10 = zext i8 %2 to i32
  %11 = icmp sgt i32 %9, %10
  br i1 %11, label %12, label %18

; <label>:12:                                     ; preds = %8
  %13 = zext i8 %.0 to i32
  %14 = zext i8 %2 to i32
  %15 = icmp sgt i32 %13, %14
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %12
  br label %17

; <label>:17:                                     ; preds = %16, %12
  %.1 = phi i8 [ %.0, %16 ], [ %2, %12 ]
  br label %18

; <label>:18:                                     ; preds = %17, %8
  %.2 = phi i8 [ %.1, %17 ], [ %.01, %8 ]
  ret i8 %.2
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mainGtU(i32, i32, i8*, i16*, i32, i32*) #0 {
  %7 = zext i32 %0 to i64
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %2, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %9 to i32
  %14 = zext i8 %12 to i32
  %15 = icmp ne i32 %13, %14
  br i1 %15, label %16, label %22

; <label>:16:                                     ; preds = %6
  %17 = zext i8 %9 to i32
  %18 = zext i8 %12 to i32
  %19 = icmp sgt i32 %17, %18
  %20 = zext i1 %19 to i32
  %21 = trunc i32 %20 to i8
  br label %511

; <label>:22:                                     ; preds = %6
  %23 = add i32 %0, 1
  %24 = add i32 %1, 1
  %25 = zext i32 %23 to i64
  %26 = getelementptr inbounds i8, i8* %2, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i32 %24 to i64
  %29 = getelementptr inbounds i8, i8* %2, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %27 to i32
  %32 = zext i8 %30 to i32
  %33 = icmp ne i32 %31, %32
  br i1 %33, label %34, label %40

; <label>:34:                                     ; preds = %22
  %35 = zext i8 %27 to i32
  %36 = zext i8 %30 to i32
  %37 = icmp sgt i32 %35, %36
  %38 = zext i1 %37 to i32
  %39 = trunc i32 %38 to i8
  br label %511

; <label>:40:                                     ; preds = %22
  %41 = add i32 %23, 1
  %42 = add i32 %24, 1
  %43 = zext i32 %41 to i64
  %44 = getelementptr inbounds i8, i8* %2, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i32 %42 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %45 to i32
  %50 = zext i8 %48 to i32
  %51 = icmp ne i32 %49, %50
  br i1 %51, label %52, label %58

; <label>:52:                                     ; preds = %40
  %53 = zext i8 %45 to i32
  %54 = zext i8 %48 to i32
  %55 = icmp sgt i32 %53, %54
  %56 = zext i1 %55 to i32
  %57 = trunc i32 %56 to i8
  br label %511

; <label>:58:                                     ; preds = %40
  %59 = add i32 %41, 1
  %60 = add i32 %42, 1
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds i8, i8* %2, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i32 %60 to i64
  %65 = getelementptr inbounds i8, i8* %2, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %63 to i32
  %68 = zext i8 %66 to i32
  %69 = icmp ne i32 %67, %68
  br i1 %69, label %70, label %76

; <label>:70:                                     ; preds = %58
  %71 = zext i8 %63 to i32
  %72 = zext i8 %66 to i32
  %73 = icmp sgt i32 %71, %72
  %74 = zext i1 %73 to i32
  %75 = trunc i32 %74 to i8
  br label %511

; <label>:76:                                     ; preds = %58
  %77 = add i32 %59, 1
  %78 = add i32 %60, 1
  %79 = zext i32 %77 to i64
  %80 = getelementptr inbounds i8, i8* %2, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i32 %78 to i64
  %83 = getelementptr inbounds i8, i8* %2, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %81 to i32
  %86 = zext i8 %84 to i32
  %87 = icmp ne i32 %85, %86
  br i1 %87, label %88, label %94

; <label>:88:                                     ; preds = %76
  %89 = zext i8 %81 to i32
  %90 = zext i8 %84 to i32
  %91 = icmp sgt i32 %89, %90
  %92 = zext i1 %91 to i32
  %93 = trunc i32 %92 to i8
  br label %511

; <label>:94:                                     ; preds = %76
  %95 = add i32 %77, 1
  %96 = add i32 %78, 1
  %97 = zext i32 %95 to i64
  %98 = getelementptr inbounds i8, i8* %2, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i32 %96 to i64
  %101 = getelementptr inbounds i8, i8* %2, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %99 to i32
  %104 = zext i8 %102 to i32
  %105 = icmp ne i32 %103, %104
  br i1 %105, label %106, label %112

; <label>:106:                                    ; preds = %94
  %107 = zext i8 %99 to i32
  %108 = zext i8 %102 to i32
  %109 = icmp sgt i32 %107, %108
  %110 = zext i1 %109 to i32
  %111 = trunc i32 %110 to i8
  br label %511

; <label>:112:                                    ; preds = %94
  %113 = add i32 %95, 1
  %114 = add i32 %96, 1
  %115 = zext i32 %113 to i64
  %116 = getelementptr inbounds i8, i8* %2, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i32 %114 to i64
  %119 = getelementptr inbounds i8, i8* %2, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %117 to i32
  %122 = zext i8 %120 to i32
  %123 = icmp ne i32 %121, %122
  br i1 %123, label %124, label %130

; <label>:124:                                    ; preds = %112
  %125 = zext i8 %117 to i32
  %126 = zext i8 %120 to i32
  %127 = icmp sgt i32 %125, %126
  %128 = zext i1 %127 to i32
  %129 = trunc i32 %128 to i8
  br label %511

; <label>:130:                                    ; preds = %112
  %131 = add i32 %113, 1
  %132 = add i32 %114, 1
  %133 = zext i32 %131 to i64
  %134 = getelementptr inbounds i8, i8* %2, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i32 %132 to i64
  %137 = getelementptr inbounds i8, i8* %2, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %135 to i32
  %140 = zext i8 %138 to i32
  %141 = icmp ne i32 %139, %140
  br i1 %141, label %142, label %148

; <label>:142:                                    ; preds = %130
  %143 = zext i8 %135 to i32
  %144 = zext i8 %138 to i32
  %145 = icmp sgt i32 %143, %144
  %146 = zext i1 %145 to i32
  %147 = trunc i32 %146 to i8
  br label %511

; <label>:148:                                    ; preds = %130
  %149 = add i32 %131, 1
  %150 = add i32 %132, 1
  %151 = zext i32 %149 to i64
  %152 = getelementptr inbounds i8, i8* %2, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i32 %150 to i64
  %155 = getelementptr inbounds i8, i8* %2, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %153 to i32
  %158 = zext i8 %156 to i32
  %159 = icmp ne i32 %157, %158
  br i1 %159, label %160, label %166

; <label>:160:                                    ; preds = %148
  %161 = zext i8 %153 to i32
  %162 = zext i8 %156 to i32
  %163 = icmp sgt i32 %161, %162
  %164 = zext i1 %163 to i32
  %165 = trunc i32 %164 to i8
  br label %511

; <label>:166:                                    ; preds = %148
  %167 = add i32 %149, 1
  %168 = add i32 %150, 1
  %169 = zext i32 %167 to i64
  %170 = getelementptr inbounds i8, i8* %2, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i32 %168 to i64
  %173 = getelementptr inbounds i8, i8* %2, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %171 to i32
  %176 = zext i8 %174 to i32
  %177 = icmp ne i32 %175, %176
  br i1 %177, label %178, label %184

; <label>:178:                                    ; preds = %166
  %179 = zext i8 %171 to i32
  %180 = zext i8 %174 to i32
  %181 = icmp sgt i32 %179, %180
  %182 = zext i1 %181 to i32
  %183 = trunc i32 %182 to i8
  br label %511

; <label>:184:                                    ; preds = %166
  %185 = add i32 %167, 1
  %186 = add i32 %168, 1
  %187 = zext i32 %185 to i64
  %188 = getelementptr inbounds i8, i8* %2, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i32 %186 to i64
  %191 = getelementptr inbounds i8, i8* %2, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %189 to i32
  %194 = zext i8 %192 to i32
  %195 = icmp ne i32 %193, %194
  br i1 %195, label %196, label %202

; <label>:196:                                    ; preds = %184
  %197 = zext i8 %189 to i32
  %198 = zext i8 %192 to i32
  %199 = icmp sgt i32 %197, %198
  %200 = zext i1 %199 to i32
  %201 = trunc i32 %200 to i8
  br label %511

; <label>:202:                                    ; preds = %184
  %203 = add i32 %185, 1
  %204 = add i32 %186, 1
  %205 = zext i32 %203 to i64
  %206 = getelementptr inbounds i8, i8* %2, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = zext i32 %204 to i64
  %209 = getelementptr inbounds i8, i8* %2, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %207 to i32
  %212 = zext i8 %210 to i32
  %213 = icmp ne i32 %211, %212
  br i1 %213, label %214, label %220

; <label>:214:                                    ; preds = %202
  %215 = zext i8 %207 to i32
  %216 = zext i8 %210 to i32
  %217 = icmp sgt i32 %215, %216
  %218 = zext i1 %217 to i32
  %219 = trunc i32 %218 to i8
  br label %511

; <label>:220:                                    ; preds = %202
  %221 = add i32 %203, 1
  %222 = add i32 %204, 1
  %223 = add i32 %4, 8
  br label %224

; <label>:224:                                    ; preds = %508, %220
  %.04 = phi i32 [ %223, %220 ], [ %505, %508 ]
  %.02 = phi i32 [ %222, %220 ], [ %.13, %508 ]
  %.01 = phi i32 [ %221, %220 ], [ %.1, %508 ]
  call void @unroll_loop(i32 204)
  %225 = zext i32 %.01 to i64
  %226 = getelementptr inbounds i8, i8* %2, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i32 %.02 to i64
  %229 = getelementptr inbounds i8, i8* %2, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %227 to i32
  %232 = zext i8 %230 to i32
  %233 = icmp ne i32 %231, %232
  br i1 %233, label %234, label %240

; <label>:234:                                    ; preds = %224
  %.lcssa21 = phi i8 [ %227, %224 ]
  %.lcssa = phi i8 [ %230, %224 ]
  %235 = zext i8 %.lcssa21 to i32
  %236 = zext i8 %.lcssa to i32
  %237 = icmp sgt i32 %235, %236
  %238 = zext i1 %237 to i32
  %239 = trunc i32 %238 to i8
  br label %511

; <label>:240:                                    ; preds = %224
  %241 = zext i32 %.01 to i64
  %242 = getelementptr inbounds i16, i16* %3, i64 %241
  %243 = load i16, i16* %242, align 2
  %244 = zext i32 %.02 to i64
  %245 = getelementptr inbounds i16, i16* %3, i64 %244
  %246 = load i16, i16* %245, align 2
  %247 = zext i16 %243 to i32
  %248 = zext i16 %246 to i32
  %249 = icmp ne i32 %247, %248
  br i1 %249, label %250, label %256

; <label>:250:                                    ; preds = %240
  %.lcssa54 = phi i16 [ %243, %240 ]
  %.lcssa38 = phi i16 [ %246, %240 ]
  %251 = zext i16 %.lcssa54 to i32
  %252 = zext i16 %.lcssa38 to i32
  %253 = icmp sgt i32 %251, %252
  %254 = zext i1 %253 to i32
  %255 = trunc i32 %254 to i8
  br label %511

; <label>:256:                                    ; preds = %240
  %257 = add i32 %.01, 1
  %258 = add i32 %.02, 1
  %259 = zext i32 %257 to i64
  %260 = getelementptr inbounds i8, i8* %2, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = zext i32 %258 to i64
  %263 = getelementptr inbounds i8, i8* %2, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %261 to i32
  %266 = zext i8 %264 to i32
  %267 = icmp ne i32 %265, %266
  br i1 %267, label %268, label %274

; <label>:268:                                    ; preds = %256
  %.lcssa85 = phi i8 [ %261, %256 ]
  %.lcssa70 = phi i8 [ %264, %256 ]
  %269 = zext i8 %.lcssa85 to i32
  %270 = zext i8 %.lcssa70 to i32
  %271 = icmp sgt i32 %269, %270
  %272 = zext i1 %271 to i32
  %273 = trunc i32 %272 to i8
  br label %511

; <label>:274:                                    ; preds = %256
  %275 = zext i32 %257 to i64
  %276 = getelementptr inbounds i16, i16* %3, i64 %275
  %277 = load i16, i16* %276, align 2
  %278 = zext i32 %258 to i64
  %279 = getelementptr inbounds i16, i16* %3, i64 %278
  %280 = load i16, i16* %279, align 2
  %281 = zext i16 %277 to i32
  %282 = zext i16 %280 to i32
  %283 = icmp ne i32 %281, %282
  br i1 %283, label %284, label %290

; <label>:284:                                    ; preds = %274
  %.lcssa114 = phi i16 [ %277, %274 ]
  %.lcssa100 = phi i16 [ %280, %274 ]
  %285 = zext i16 %.lcssa114 to i32
  %286 = zext i16 %.lcssa100 to i32
  %287 = icmp sgt i32 %285, %286
  %288 = zext i1 %287 to i32
  %289 = trunc i32 %288 to i8
  br label %511

; <label>:290:                                    ; preds = %274
  %291 = add i32 %257, 1
  %292 = add i32 %258, 1
  %293 = zext i32 %291 to i64
  %294 = getelementptr inbounds i8, i8* %2, i64 %293
  %295 = load i8, i8* %294, align 1
  %296 = zext i32 %292 to i64
  %297 = getelementptr inbounds i8, i8* %2, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %295 to i32
  %300 = zext i8 %298 to i32
  %301 = icmp ne i32 %299, %300
  br i1 %301, label %302, label %308

; <label>:302:                                    ; preds = %290
  %.lcssa141 = phi i8 [ %295, %290 ]
  %.lcssa128 = phi i8 [ %298, %290 ]
  %303 = zext i8 %.lcssa141 to i32
  %304 = zext i8 %.lcssa128 to i32
  %305 = icmp sgt i32 %303, %304
  %306 = zext i1 %305 to i32
  %307 = trunc i32 %306 to i8
  br label %511

; <label>:308:                                    ; preds = %290
  %309 = zext i32 %291 to i64
  %310 = getelementptr inbounds i16, i16* %3, i64 %309
  %311 = load i16, i16* %310, align 2
  %312 = zext i32 %292 to i64
  %313 = getelementptr inbounds i16, i16* %3, i64 %312
  %314 = load i16, i16* %313, align 2
  %315 = zext i16 %311 to i32
  %316 = zext i16 %314 to i32
  %317 = icmp ne i32 %315, %316
  br i1 %317, label %318, label %324

; <label>:318:                                    ; preds = %308
  %.lcssa166 = phi i16 [ %311, %308 ]
  %.lcssa154 = phi i16 [ %314, %308 ]
  %319 = zext i16 %.lcssa166 to i32
  %320 = zext i16 %.lcssa154 to i32
  %321 = icmp sgt i32 %319, %320
  %322 = zext i1 %321 to i32
  %323 = trunc i32 %322 to i8
  br label %511

; <label>:324:                                    ; preds = %308
  %325 = add i32 %291, 1
  %326 = add i32 %292, 1
  %327 = zext i32 %325 to i64
  %328 = getelementptr inbounds i8, i8* %2, i64 %327
  %329 = load i8, i8* %328, align 1
  %330 = zext i32 %326 to i64
  %331 = getelementptr inbounds i8, i8* %2, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %329 to i32
  %334 = zext i8 %332 to i32
  %335 = icmp ne i32 %333, %334
  br i1 %335, label %336, label %342

; <label>:336:                                    ; preds = %324
  %.lcssa189 = phi i8 [ %329, %324 ]
  %.lcssa178 = phi i8 [ %332, %324 ]
  %337 = zext i8 %.lcssa189 to i32
  %338 = zext i8 %.lcssa178 to i32
  %339 = icmp sgt i32 %337, %338
  %340 = zext i1 %339 to i32
  %341 = trunc i32 %340 to i8
  br label %511

; <label>:342:                                    ; preds = %324
  %343 = zext i32 %325 to i64
  %344 = getelementptr inbounds i16, i16* %3, i64 %343
  %345 = load i16, i16* %344, align 2
  %346 = zext i32 %326 to i64
  %347 = getelementptr inbounds i16, i16* %3, i64 %346
  %348 = load i16, i16* %347, align 2
  %349 = zext i16 %345 to i32
  %350 = zext i16 %348 to i32
  %351 = icmp ne i32 %349, %350
  br i1 %351, label %352, label %358

; <label>:352:                                    ; preds = %342
  %.lcssa210 = phi i16 [ %345, %342 ]
  %.lcssa200 = phi i16 [ %348, %342 ]
  %353 = zext i16 %.lcssa210 to i32
  %354 = zext i16 %.lcssa200 to i32
  %355 = icmp sgt i32 %353, %354
  %356 = zext i1 %355 to i32
  %357 = trunc i32 %356 to i8
  br label %511

; <label>:358:                                    ; preds = %342
  %359 = add i32 %325, 1
  %360 = add i32 %326, 1
  %361 = zext i32 %359 to i64
  %362 = getelementptr inbounds i8, i8* %2, i64 %361
  %363 = load i8, i8* %362, align 1
  %364 = zext i32 %360 to i64
  %365 = getelementptr inbounds i8, i8* %2, i64 %364
  %366 = load i8, i8* %365, align 1
  %367 = zext i8 %363 to i32
  %368 = zext i8 %366 to i32
  %369 = icmp ne i32 %367, %368
  br i1 %369, label %370, label %376

; <label>:370:                                    ; preds = %358
  %.lcssa229 = phi i8 [ %363, %358 ]
  %.lcssa220 = phi i8 [ %366, %358 ]
  %371 = zext i8 %.lcssa229 to i32
  %372 = zext i8 %.lcssa220 to i32
  %373 = icmp sgt i32 %371, %372
  %374 = zext i1 %373 to i32
  %375 = trunc i32 %374 to i8
  br label %511

; <label>:376:                                    ; preds = %358
  %377 = zext i32 %359 to i64
  %378 = getelementptr inbounds i16, i16* %3, i64 %377
  %379 = load i16, i16* %378, align 2
  %380 = zext i32 %360 to i64
  %381 = getelementptr inbounds i16, i16* %3, i64 %380
  %382 = load i16, i16* %381, align 2
  %383 = zext i16 %379 to i32
  %384 = zext i16 %382 to i32
  %385 = icmp ne i32 %383, %384
  br i1 %385, label %386, label %392

; <label>:386:                                    ; preds = %376
  %.lcssa246 = phi i16 [ %379, %376 ]
  %.lcssa238 = phi i16 [ %382, %376 ]
  %387 = zext i16 %.lcssa246 to i32
  %388 = zext i16 %.lcssa238 to i32
  %389 = icmp sgt i32 %387, %388
  %390 = zext i1 %389 to i32
  %391 = trunc i32 %390 to i8
  br label %511

; <label>:392:                                    ; preds = %376
  %393 = add i32 %359, 1
  %394 = add i32 %360, 1
  %395 = zext i32 %393 to i64
  %396 = getelementptr inbounds i8, i8* %2, i64 %395
  %397 = load i8, i8* %396, align 1
  %398 = zext i32 %394 to i64
  %399 = getelementptr inbounds i8, i8* %2, i64 %398
  %400 = load i8, i8* %399, align 1
  %401 = zext i8 %397 to i32
  %402 = zext i8 %400 to i32
  %403 = icmp ne i32 %401, %402
  br i1 %403, label %404, label %410

; <label>:404:                                    ; preds = %392
  %.lcssa261 = phi i8 [ %397, %392 ]
  %.lcssa254 = phi i8 [ %400, %392 ]
  %405 = zext i8 %.lcssa261 to i32
  %406 = zext i8 %.lcssa254 to i32
  %407 = icmp sgt i32 %405, %406
  %408 = zext i1 %407 to i32
  %409 = trunc i32 %408 to i8
  br label %511

; <label>:410:                                    ; preds = %392
  %411 = zext i32 %393 to i64
  %412 = getelementptr inbounds i16, i16* %3, i64 %411
  %413 = load i16, i16* %412, align 2
  %414 = zext i32 %394 to i64
  %415 = getelementptr inbounds i16, i16* %3, i64 %414
  %416 = load i16, i16* %415, align 2
  %417 = zext i16 %413 to i32
  %418 = zext i16 %416 to i32
  %419 = icmp ne i32 %417, %418
  br i1 %419, label %420, label %426

; <label>:420:                                    ; preds = %410
  %.lcssa274 = phi i16 [ %413, %410 ]
  %.lcssa268 = phi i16 [ %416, %410 ]
  %421 = zext i16 %.lcssa274 to i32
  %422 = zext i16 %.lcssa268 to i32
  %423 = icmp sgt i32 %421, %422
  %424 = zext i1 %423 to i32
  %425 = trunc i32 %424 to i8
  br label %511

; <label>:426:                                    ; preds = %410
  %427 = add i32 %393, 1
  %428 = add i32 %394, 1
  %429 = zext i32 %427 to i64
  %430 = getelementptr inbounds i8, i8* %2, i64 %429
  %431 = load i8, i8* %430, align 1
  %432 = zext i32 %428 to i64
  %433 = getelementptr inbounds i8, i8* %2, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %431 to i32
  %436 = zext i8 %434 to i32
  %437 = icmp ne i32 %435, %436
  br i1 %437, label %438, label %444

; <label>:438:                                    ; preds = %426
  %.lcssa285 = phi i8 [ %431, %426 ]
  %.lcssa280 = phi i8 [ %434, %426 ]
  %439 = zext i8 %.lcssa285 to i32
  %440 = zext i8 %.lcssa280 to i32
  %441 = icmp sgt i32 %439, %440
  %442 = zext i1 %441 to i32
  %443 = trunc i32 %442 to i8
  br label %511

; <label>:444:                                    ; preds = %426
  %445 = zext i32 %427 to i64
  %446 = getelementptr inbounds i16, i16* %3, i64 %445
  %447 = load i16, i16* %446, align 2
  %448 = zext i32 %428 to i64
  %449 = getelementptr inbounds i16, i16* %3, i64 %448
  %450 = load i16, i16* %449, align 2
  %451 = zext i16 %447 to i32
  %452 = zext i16 %450 to i32
  %453 = icmp ne i32 %451, %452
  br i1 %453, label %454, label %460

; <label>:454:                                    ; preds = %444
  %.lcssa294 = phi i16 [ %447, %444 ]
  %.lcssa290 = phi i16 [ %450, %444 ]
  %455 = zext i16 %.lcssa294 to i32
  %456 = zext i16 %.lcssa290 to i32
  %457 = icmp sgt i32 %455, %456
  %458 = zext i1 %457 to i32
  %459 = trunc i32 %458 to i8
  br label %511

; <label>:460:                                    ; preds = %444
  %461 = add i32 %427, 1
  %462 = add i32 %428, 1
  %463 = zext i32 %461 to i64
  %464 = getelementptr inbounds i8, i8* %2, i64 %463
  %465 = load i8, i8* %464, align 1
  %466 = zext i32 %462 to i64
  %467 = getelementptr inbounds i8, i8* %2, i64 %466
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %465 to i32
  %470 = zext i8 %468 to i32
  %471 = icmp ne i32 %469, %470
  br i1 %471, label %472, label %478

; <label>:472:                                    ; preds = %460
  %.lcssa301 = phi i8 [ %465, %460 ]
  %.lcssa298 = phi i8 [ %468, %460 ]
  %473 = zext i8 %.lcssa301 to i32
  %474 = zext i8 %.lcssa298 to i32
  %475 = icmp sgt i32 %473, %474
  %476 = zext i1 %475 to i32
  %477 = trunc i32 %476 to i8
  br label %511

; <label>:478:                                    ; preds = %460
  %479 = zext i32 %461 to i64
  %480 = getelementptr inbounds i16, i16* %3, i64 %479
  %481 = load i16, i16* %480, align 2
  %482 = zext i32 %462 to i64
  %483 = getelementptr inbounds i16, i16* %3, i64 %482
  %484 = load i16, i16* %483, align 2
  %485 = zext i16 %481 to i32
  %486 = zext i16 %484 to i32
  %487 = icmp ne i32 %485, %486
  br i1 %487, label %488, label %494

; <label>:488:                                    ; preds = %478
  %.lcssa306 = phi i16 [ %481, %478 ]
  %.lcssa304 = phi i16 [ %484, %478 ]
  %489 = zext i16 %.lcssa306 to i32
  %490 = zext i16 %.lcssa304 to i32
  %491 = icmp sgt i32 %489, %490
  %492 = zext i1 %491 to i32
  %493 = trunc i32 %492 to i8
  br label %511

; <label>:494:                                    ; preds = %478
  %495 = add i32 %461, 1
  %496 = add i32 %462, 1
  %497 = icmp uge i32 %495, %4
  br i1 %497, label %498, label %500

; <label>:498:                                    ; preds = %494
  %499 = sub i32 %495, %4
  br label %500

; <label>:500:                                    ; preds = %498, %494
  %.1 = phi i32 [ %499, %498 ], [ %495, %494 ]
  %501 = icmp uge i32 %496, %4
  br i1 %501, label %502, label %504

; <label>:502:                                    ; preds = %500
  %503 = sub i32 %496, %4
  br label %504

; <label>:504:                                    ; preds = %502, %500
  %.13 = phi i32 [ %503, %502 ], [ %496, %500 ]
  %505 = sub nsw i32 %.04, 8
  %506 = load i32, i32* %5, align 4
  %507 = add nsw i32 %506, -1
  store i32 %507, i32* %5, align 4
  br label %508

; <label>:508:                                    ; preds = %504
  %509 = icmp sge i32 %505, 0
  br i1 %509, label %224, label %510

; <label>:510:                                    ; preds = %508
  br label %511

; <label>:511:                                    ; preds = %510, %488, %472, %454, %438, %420, %404, %386, %370, %352, %336, %318, %302, %284, %268, %250, %234, %214, %196, %178, %160, %142, %124, %106, %88, %70, %52, %34, %16
  %.0 = phi i8 [ %21, %16 ], [ %39, %34 ], [ %57, %52 ], [ %75, %70 ], [ %93, %88 ], [ %111, %106 ], [ %129, %124 ], [ %147, %142 ], [ %165, %160 ], [ %183, %178 ], [ %201, %196 ], [ %219, %214 ], [ %239, %234 ], [ %255, %250 ], [ %273, %268 ], [ %289, %284 ], [ %307, %302 ], [ %323, %318 ], [ %341, %336 ], [ %357, %352 ], [ %375, %370 ], [ %391, %386 ], [ %409, %404 ], [ %425, %420 ], [ %443, %438 ], [ %459, %454 ], [ %477, %472 ], [ %493, %488 ], [ 0, %510 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackQSort3(i32*, i32*, i32, i32) #0 {
  %5 = alloca [100 x i32], align 16
  %6 = alloca [100 x i32], align 16
  %7 = sext i32 0 to i64
  %8 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %7
  store i32 %2, i32* %8, align 4
  %9 = sext i32 0 to i64
  %10 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %9
  store i32 %3, i32* %10, align 4
  %11 = add nsw i32 0, 1
  br label %.lr.ph

.lr.ph:                                           ; preds = %4, %.outer39.backedge
  %.011.ph95 = phi i32 [ %11, %4 ], [ %.011.ph.be, %.outer39.backedge ]
  %.017.ph94 = phi i32 [ 0, %4 ], [ %29, %.outer39.backedge ]
  call void @unroll_loop(i32 152)
  %12 = sext i32 %.011.ph95 to i64
  br label %13

; <label>:13:                                     ; preds = %.lr.ph, %23
  %indvars.iv = phi i64 [ %12, %.lr.ph ], [ %indvars.iv.next, %23 ]
  call void @unroll_loop(i32 205)
  %14 = icmp slt i64 %indvars.iv, 99
  br i1 %14, label %16, label %15

; <label>:15:                                     ; preds = %13
  call void @BZ2_bz__AssertH__fail(i32 1004)
  br label %16

; <label>:16:                                     ; preds = %15, %13
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %17 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %indvars.iv.next
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %indvars.iv.next
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %20, %18
  %22 = icmp slt i32 %21, 10
  br i1 %22, label %23, label %25

; <label>:23:                                     ; preds = %16
  call void @fallbackSimpleSort(i32* %0, i32* %1, i32 %18, i32 %20)
  %24 = icmp sgt i64 %indvars.iv.next, 0
  br i1 %24, label %13, label %._crit_edge

; <label>:25:                                     ; preds = %16
  %.lcssa42.wide = phi i64 [ %indvars.iv.next, %16 ]
  %.lcssa41 = phi i32 [ %18, %16 ]
  %.lcssa = phi i32 [ %20, %16 ]
  %26 = trunc i64 %.lcssa42.wide to i32
  %27 = mul nuw i32 %.017.ph94, 7621
  %28 = add i32 %27, 1
  %29 = urem i32 %28, 32768
  %30 = urem i32 %29, 3
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %39

; <label>:32:                                     ; preds = %25
  %33 = sext i32 %.lcssa41 to i64
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %1, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %58

; <label>:39:                                     ; preds = %25
  %40 = icmp eq i32 %30, 1
  br i1 %40, label %41, label %50

; <label>:41:                                     ; preds = %39
  %42 = add nsw i32 %.lcssa41, %.lcssa
  %43 = ashr i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %1, i64 %47
  %49 = load i32, i32* %48, align 4
  br label %57

; <label>:50:                                     ; preds = %39
  %51 = sext i32 %.lcssa to i64
  %52 = getelementptr inbounds i32, i32* %0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %1, i64 %54
  %56 = load i32, i32* %55, align 4
  br label %57

; <label>:57:                                     ; preds = %50, %41
  %.015 = phi i32 [ %49, %41 ], [ %56, %50 ]
  br label %58

; <label>:58:                                     ; preds = %57, %32
  %.116 = phi i32 [ %38, %32 ], [ %.015, %57 ]
  br label %59

; <label>:59:                                     ; preds = %58, %132
  %.09 = phi i32 [ %.lcssa, %58 ], [ %.11025, %132 ]
  %.07 = phi i32 [ %.lcssa41, %58 ], [ %.1821, %132 ]
  %.05 = phi i32 [ %.lcssa, %58 ], [ %144, %132 ]
  %.04 = phi i32 [ %.lcssa41, %58 ], [ %143, %132 ]
  call void @unroll_loop(i32 206)
  %60 = sext i32 %.05 to i64
  %61 = icmp sgt i32 %.04, %.05
  br i1 %61, label %.outer32._crit_edge, label %.lr.ph45.lr.ph

.lr.ph45.lr.ph:                                   ; preds = %59
  %62 = sext i32 %.07 to i64
  br label %.lr.ph45

.lr.ph45:                                         ; preds = %.lr.ph45.lr.ph, %.outer32
  %indvars.iv56 = phi i64 [ %62, %.lr.ph45.lr.ph ], [ %indvars.iv.next57, %.outer32 ]
  %.1.ph53 = phi i32 [ %.04, %.lr.ph45.lr.ph ], [ %85, %.outer32 ]
  call void @unroll_loop(i32 193)
  %63 = sext i32 %.1.ph53 to i64
  br label %68

.outer32..outer32._crit_edge_crit_edge:           ; preds = %.outer32
  %split54.wide = phi i64 [ %indvars.iv.next57, %.outer32 ]
  %split55 = phi i32 [ %85, %.outer32 ]
  %64 = trunc i64 %split54.wide to i32
  br label %.outer32._crit_edge

.outer32._crit_edge:                              ; preds = %.outer32..outer32._crit_edge_crit_edge, %59
  %split = phi i32 [ %64, %.outer32..outer32._crit_edge_crit_edge ], [ %.07, %59 ]
  %split46 = phi i32 [ %split55, %.outer32..outer32._crit_edge_crit_edge ], [ %.04, %59 ]
  br label %67

._crit_edge47:                                    ; preds = %92
  %split48.wide = phi i64 [ %indvars.iv56, %92 ]
  %split49.wide = phi i64 [ %indvars.iv.next51, %92 ]
  %65 = trunc i64 %split48.wide to i32
  %66 = trunc i64 %split49.wide to i32
  br label %67

; <label>:67:                                     ; preds = %._crit_edge47, %.outer32._crit_edge
  %.18.lcssa = phi i32 [ %65, %._crit_edge47 ], [ %split, %.outer32._crit_edge ]
  %.1.lcssa = phi i32 [ %66, %._crit_edge47 ], [ %split46, %.outer32._crit_edge ]
  br label %94

; <label>:68:                                     ; preds = %.lr.ph45, %92
  %indvars.iv50 = phi i64 [ %63, %.lr.ph45 ], [ %indvars.iv.next51, %92 ]
  call void @unroll_loop(i32 207)
  %69 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv50
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = sub nsw i32 %73, %.116
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %.outer32, label %87

.outer32:                                         ; preds = %68
  %.1.lcssa34.wide = phi i64 [ %indvars.iv50, %68 ]
  %76 = trunc i64 %.1.lcssa34.wide to i32
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %0, i64 %77
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv56
  %81 = load i32, i32* %80, align 4
  %82 = sext i32 %76 to i64
  %83 = getelementptr inbounds i32, i32* %0, i64 %82
  store i32 %81, i32* %83, align 4
  %84 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv56
  store i32 %79, i32* %84, align 4
  %indvars.iv.next57 = add i64 %indvars.iv56, 1
  %85 = add nsw i32 %76, 1
  %86 = icmp sgt i32 %85, %.05
  br i1 %86, label %.outer32..outer32._crit_edge_crit_edge, label %.lr.ph45

; <label>:87:                                     ; preds = %68
  %88 = icmp sgt i32 %74, 0
  br i1 %88, label %89, label %92

; <label>:89:                                     ; preds = %87
  %.18.lcssa20.wide = phi i64 [ %indvars.iv56, %87 ]
  %.1.lcssa18.wide = phi i64 [ %indvars.iv50, %87 ]
  %90 = trunc i64 %.18.lcssa20.wide to i32
  %91 = trunc i64 %.1.lcssa18.wide to i32
  br label %94

; <label>:92:                                     ; preds = %87
  %indvars.iv.next51 = add i64 %indvars.iv50, 1
  %93 = icmp sgt i64 %indvars.iv.next51, %60
  br i1 %93, label %._crit_edge47, label %68

; <label>:94:                                     ; preds = %89, %67
  %.1821 = phi i32 [ %90, %89 ], [ %.18.lcssa, %67 ]
  %.119 = phi i32 [ %91, %89 ], [ %.1.lcssa, %67 ]
  %95 = sext i32 %.119 to i64
  %96 = icmp sgt i32 %.119, %.05
  br i1 %96, label %.outer._crit_edge, label %.lr.ph59.lr.ph

.lr.ph59.lr.ph:                                   ; preds = %94
  %97 = sext i32 %.09 to i64
  br label %.lr.ph59

.lr.ph59:                                         ; preds = %.lr.ph59.lr.ph, %.outer
  %indvars.iv71 = phi i64 [ %97, %.lr.ph59.lr.ph ], [ %indvars.iv.next72, %.outer ]
  %.16.ph68 = phi i32 [ %.05, %.lr.ph59.lr.ph ], [ %120, %.outer ]
  call void @unroll_loop(i32 155)
  %98 = sext i32 %.16.ph68 to i64
  br label %103

.outer..outer._crit_edge_crit_edge:               ; preds = %.outer
  %split69.wide = phi i64 [ %indvars.iv.next72, %.outer ]
  %split70 = phi i32 [ %120, %.outer ]
  %99 = trunc i64 %split69.wide to i32
  br label %.outer._crit_edge

.outer._crit_edge:                                ; preds = %.outer..outer._crit_edge_crit_edge, %94
  %split60 = phi i32 [ %99, %.outer..outer._crit_edge_crit_edge ], [ %.09, %94 ]
  %split61 = phi i32 [ %split70, %.outer..outer._crit_edge_crit_edge ], [ %.05, %94 ]
  br label %102

._crit_edge62:                                    ; preds = %127
  %split63.wide = phi i64 [ %indvars.iv71, %127 ]
  %split64.wide = phi i64 [ %indvars.iv.next66, %127 ]
  %100 = trunc i64 %split63.wide to i32
  %101 = trunc i64 %split64.wide to i32
  br label %102

; <label>:102:                                    ; preds = %._crit_edge62, %.outer._crit_edge
  %.110.lcssa = phi i32 [ %100, %._crit_edge62 ], [ %split60, %.outer._crit_edge ]
  %.16.lcssa = phi i32 [ %101, %._crit_edge62 ], [ %split61, %.outer._crit_edge ]
  br label %129

; <label>:103:                                    ; preds = %.lr.ph59, %127
  %indvars.iv65 = phi i64 [ %98, %.lr.ph59 ], [ %indvars.iv.next66, %127 ]
  call void @unroll_loop(i32 208)
  %104 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv65
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %1, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = sub nsw i32 %108, %.116
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %.outer, label %122

.outer:                                           ; preds = %103
  %.16.lcssa27.wide = phi i64 [ %indvars.iv65, %103 ]
  %111 = trunc i64 %.16.lcssa27.wide to i32
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i32, i32* %0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv71
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %111 to i64
  %118 = getelementptr inbounds i32, i32* %0, i64 %117
  store i32 %116, i32* %118, align 4
  %119 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv71
  store i32 %114, i32* %119, align 4
  %indvars.iv.next72 = add i64 %indvars.iv71, -1
  %120 = add nsw i32 %111, -1
  %121 = icmp sgt i32 %.119, %120
  br i1 %121, label %.outer..outer._crit_edge_crit_edge, label %.lr.ph59

; <label>:122:                                    ; preds = %103
  %123 = icmp slt i32 %109, 0
  br i1 %123, label %124, label %127

; <label>:124:                                    ; preds = %122
  %.110.lcssa24.wide = phi i64 [ %indvars.iv71, %122 ]
  %.16.lcssa22.wide = phi i64 [ %indvars.iv65, %122 ]
  %125 = trunc i64 %.110.lcssa24.wide to i32
  %126 = trunc i64 %.16.lcssa22.wide to i32
  br label %129

; <label>:127:                                    ; preds = %122
  %indvars.iv.next66 = add i64 %indvars.iv65, -1
  %128 = icmp sgt i64 %95, %indvars.iv.next66
  br i1 %128, label %._crit_edge62, label %103

; <label>:129:                                    ; preds = %124, %102
  %.11025 = phi i32 [ %125, %124 ], [ %.110.lcssa, %102 ]
  %.1623 = phi i32 [ %126, %124 ], [ %.16.lcssa, %102 ]
  %130 = icmp sgt i32 %.119, %.1623
  br i1 %130, label %131, label %132

; <label>:131:                                    ; preds = %129
  %.11025.lcssa = phi i32 [ %.11025, %129 ]
  %.1623.lcssa = phi i32 [ %.1623, %129 ]
  %.1821.lcssa = phi i32 [ %.1821, %129 ]
  %.119.lcssa = phi i32 [ %.119, %129 ]
  br label %145

; <label>:132:                                    ; preds = %129
  %133 = sext i32 %.119 to i64
  %134 = getelementptr inbounds i32, i32* %0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %.1623 to i64
  %137 = getelementptr inbounds i32, i32* %0, i64 %136
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %.119 to i64
  %140 = getelementptr inbounds i32, i32* %0, i64 %139
  store i32 %138, i32* %140, align 4
  %141 = sext i32 %.1623 to i64
  %142 = getelementptr inbounds i32, i32* %0, i64 %141
  store i32 %135, i32* %142, align 4
  %143 = add nsw i32 %.119, 1
  %144 = add nsw i32 %.1623, -1
  br label %59

; <label>:145:                                    ; preds = %131
  %146 = icmp slt i32 %.11025.lcssa, %.1821.lcssa
  br i1 %146, label %147, label %149

; <label>:147:                                    ; preds = %145
  br label %.outer39.backedge

.outer39.backedge:                                ; preds = %147, %239
  %.011.ph.be = phi i32 [ %.112, %239 ], [ %26, %147 ]
  %148 = icmp sgt i32 %.011.ph.be, 0
  br i1 %148, label %.lr.ph, label %.outer39._crit_edge

; <label>:149:                                    ; preds = %145
  %150 = sub nsw i32 %.1821.lcssa, %.lcssa41
  %151 = sub nsw i32 %.119.lcssa, %.1821.lcssa
  %152 = icmp slt i32 %150, %151
  br i1 %152, label %153, label %155

; <label>:153:                                    ; preds = %149
  %154 = sub nsw i32 %.1821.lcssa, %.lcssa41
  br label %157

; <label>:155:                                    ; preds = %149
  %156 = sub nsw i32 %.119.lcssa, %.1821.lcssa
  br label %157

; <label>:157:                                    ; preds = %155, %153
  %158 = phi i32 [ %154, %153 ], [ %156, %155 ]
  %159 = icmp sgt i32 %158, 0
  br i1 %159, label %.lr.ph77, label %178

.lr.ph77:                                         ; preds = %157
  %160 = add i32 %.119.lcssa, 1
  %161 = add i32 %.lcssa41, -1
  %162 = sub i32 %161, %.1821.lcssa
  %163 = add i32 %.1821.lcssa, -1
  %164 = sub i32 %163, %.119.lcssa
  %165 = icmp sgt i32 %162, %164
  %smax = select i1 %165, i32 %162, i32 %164
  %166 = add i32 %160, %smax
  %167 = sext i32 %166 to i64
  %168 = sext i32 %.lcssa41 to i64
  br label %169

; <label>:169:                                    ; preds = %.lr.ph77, %169
  %indvars.iv81 = phi i64 [ %168, %.lr.ph77 ], [ %indvars.iv.next82, %169 ]
  %indvars.iv79 = phi i64 [ %167, %.lr.ph77 ], [ %indvars.iv.next80, %169 ]
  %.0375 = phi i32 [ %158, %.lr.ph77 ], [ %176, %169 ]
  call void @unroll_loop(i32 209)
  %170 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv81
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv79
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv81
  store i32 %173, i32* %174, align 4
  %175 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv79
  store i32 %171, i32* %175, align 4
  %indvars.iv.next82 = add nsw i64 %indvars.iv81, 1
  %indvars.iv.next80 = add nsw i64 %indvars.iv79, 1
  %176 = add nsw i32 %.0375, -1
  %177 = icmp sgt i32 %176, 0
  br i1 %177, label %169, label %._crit_edge78

._crit_edge78:                                    ; preds = %169
  br label %178

; <label>:178:                                    ; preds = %._crit_edge78, %157
  %179 = sub nsw i32 %.lcssa, %.11025.lcssa
  %180 = sub nsw i32 %.11025.lcssa, %.1623.lcssa
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %182, label %184

; <label>:182:                                    ; preds = %178
  %183 = sub nsw i32 %.lcssa, %.11025.lcssa
  br label %186

; <label>:184:                                    ; preds = %178
  %185 = sub nsw i32 %.11025.lcssa, %.1623.lcssa
  br label %186

; <label>:186:                                    ; preds = %184, %182
  %187 = phi i32 [ %183, %182 ], [ %185, %184 ]
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %.lr.ph87, label %207

.lr.ph87:                                         ; preds = %186
  %189 = add i32 %.lcssa, 2
  %190 = add i32 %.11025.lcssa, -1
  %191 = sub i32 %190, %.lcssa
  %192 = add i32 %.1623.lcssa, -1
  %193 = sub i32 %192, %.11025.lcssa
  %194 = icmp sgt i32 %191, %193
  %smax89 = select i1 %194, i32 %191, i32 %193
  %195 = add i32 %189, %smax89
  %196 = sext i32 %195 to i64
  %197 = sext i32 %.119.lcssa to i64
  br label %198

; <label>:198:                                    ; preds = %.lr.ph87, %198
  %indvars.iv92 = phi i64 [ %197, %.lr.ph87 ], [ %indvars.iv.next93, %198 ]
  %indvars.iv90 = phi i64 [ %196, %.lr.ph87 ], [ %indvars.iv.next91, %198 ]
  %.085 = phi i32 [ %187, %.lr.ph87 ], [ %205, %198 ]
  call void @unroll_loop(i32 210)
  %199 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv92
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv90
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv92
  store i32 %202, i32* %203, align 4
  %204 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv90
  store i32 %200, i32* %204, align 4
  %indvars.iv.next93 = add nsw i64 %indvars.iv92, 1
  %indvars.iv.next91 = add nsw i64 %indvars.iv90, 1
  %205 = add nsw i32 %.085, -1
  %206 = icmp sgt i32 %205, 0
  br i1 %206, label %198, label %._crit_edge88

._crit_edge88:                                    ; preds = %198
  br label %207

; <label>:207:                                    ; preds = %._crit_edge88, %186
  %208 = add nsw i32 %.lcssa41, %.119.lcssa
  %209 = sub nsw i32 %208, %.1821.lcssa
  %210 = sub nsw i32 %209, 1
  %211 = sub nsw i32 %.11025.lcssa, %.1623.lcssa
  %212 = sub nsw i32 %.lcssa, %211
  %213 = add nsw i32 %212, 1
  %214 = sub nsw i32 %210, %.lcssa41
  %215 = sub nsw i32 %.lcssa, %213
  %216 = icmp sgt i32 %214, %215
  br i1 %216, label %217, label %228

; <label>:217:                                    ; preds = %207
  %218 = sext i32 %26 to i64
  %219 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %218
  store i32 %.lcssa41, i32* %219, align 4
  %220 = sext i32 %26 to i64
  %221 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %220
  store i32 %210, i32* %221, align 4
  %222 = add nsw i32 %26, 1
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %223
  store i32 %213, i32* %224, align 4
  %225 = sext i32 %222 to i64
  %226 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %225
  store i32 %.lcssa, i32* %226, align 4
  %227 = add nsw i32 %222, 1
  br label %239

; <label>:228:                                    ; preds = %207
  %229 = sext i32 %26 to i64
  %230 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %229
  store i32 %213, i32* %230, align 4
  %231 = sext i32 %26 to i64
  %232 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %231
  store i32 %.lcssa, i32* %232, align 4
  %233 = add nsw i32 %26, 1
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %234
  store i32 %.lcssa41, i32* %235, align 4
  %236 = sext i32 %233 to i64
  %237 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %236
  store i32 %210, i32* %237, align 4
  %238 = add nsw i32 %233, 1
  br label %239

; <label>:239:                                    ; preds = %228, %217
  %.112 = phi i32 [ %227, %217 ], [ %238, %228 ]
  br label %.outer39.backedge

.outer39._crit_edge:                              ; preds = %.outer39.backedge
  br label %240

._crit_edge:                                      ; preds = %23
  br label %240

; <label>:240:                                    ; preds = %._crit_edge, %.outer39._crit_edge
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackSimpleSort(i32*, i32*, i32, i32) #0 {
  %5 = icmp eq i32 %2, %3
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %4
  br label %91

; <label>:7:                                      ; preds = %4
  %8 = sub nsw i32 %3, %2
  %9 = icmp sgt i32 %8, 3
  br i1 %9, label %10, label %51

; <label>:10:                                     ; preds = %7
  %11 = sub nsw i32 %3, 4
  %12 = sext i32 %3 to i64
  %13 = sext i32 %3 to i64
  %14 = icmp sge i32 %11, %2
  br i1 %14, label %.lr.ph14, label %50

.lr.ph14:                                         ; preds = %10
  %15 = add i32 %3, -4
  %16 = sext i32 %15 to i64
  %17 = sext i32 %2 to i64
  br label %18

; <label>:18:                                     ; preds = %.lr.ph14, %47
  %indvars.iv15 = phi i64 [ %16, %.lr.ph14 ], [ %indvars.iv.next16, %47 ]
  %19 = phi i64 [ %13, %.lr.ph14 ], [ %48, %47 ]
  %indvars.iv812 = phi i32 [ %3, %.lr.ph14 ], [ %indvars.iv.next9, %47 ]
  call void @unroll_loop(i32 211)
  %20 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv15
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %1, i64 %22
  %24 = load i32, i32* %23, align 4
  br label %25

; <label>:25:                                     ; preds = %41, %18
  %indvars.iv10 = phi i64 [ %indvars.iv.next11, %41 ], [ %19, %18 ]
  call void @unroll_loop(i32 212)
  %26 = icmp sle i64 %indvars.iv10, %12
  br i1 %26, label %27, label %34

; <label>:27:                                     ; preds = %25
  %28 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %1, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = icmp ugt i32 %24, %32
  br label %34

; <label>:34:                                     ; preds = %27, %25
  %35 = phi i1 [ false, %25 ], [ %33, %27 ]
  br i1 %35, label %36, label %42

; <label>:36:                                     ; preds = %34
  %37 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv10
  %38 = load i32, i32* %37, align 4
  %39 = sub nsw i64 %indvars.iv10, 4
  %40 = getelementptr inbounds i32, i32* %0, i64 %39
  store i32 %38, i32* %40, align 4
  br label %41

; <label>:41:                                     ; preds = %36
  %indvars.iv.next11 = add i64 %indvars.iv10, 4
  br label %25

; <label>:42:                                     ; preds = %34
  %.0.lcssa.wide = phi i64 [ %indvars.iv10, %34 ]
  %43 = trunc i64 %.0.lcssa.wide to i32
  %44 = sub nsw i32 %43, 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %0, i64 %45
  store i32 %21, i32* %46, align 4
  br label %47

; <label>:47:                                     ; preds = %42
  %indvars.iv.next16 = add i64 %indvars.iv15, -1
  %indvars.iv.next9 = add i32 %indvars.iv812, -1
  %48 = sext i32 %indvars.iv.next9 to i64
  %49 = icmp sge i64 %indvars.iv.next16, %17
  br i1 %49, label %18, label %._crit_edge

._crit_edge:                                      ; preds = %47
  br label %50

; <label>:50:                                     ; preds = %._crit_edge, %10
  br label %51

; <label>:51:                                     ; preds = %50, %7
  %52 = sub nsw i32 %3, 1
  %53 = sext i32 %3 to i64
  %54 = sext i32 %3 to i64
  %55 = icmp sge i32 %52, %2
  br i1 %55, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %51
  %56 = add i32 %3, -1
  %57 = sext i32 %56 to i64
  %58 = sext i32 %2 to i64
  br label %59

; <label>:59:                                     ; preds = %.lr.ph, %88
  %indvars.iv = phi i64 [ %57, %.lr.ph ], [ %indvars.iv.next7, %88 ]
  %60 = phi i64 [ %54, %.lr.ph ], [ %89, %88 ]
  %indvars.iv5 = phi i32 [ %3, %.lr.ph ], [ %indvars.iv.next, %88 ]
  call void @unroll_loop(i32 213)
  %61 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %1, i64 %63
  %65 = load i32, i32* %64, align 4
  br label %66

; <label>:66:                                     ; preds = %82, %59
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %82 ], [ %60, %59 ]
  call void @unroll_loop(i32 214)
  %67 = icmp sle i64 %indvars.iv3, %53
  br i1 %67, label %68, label %75

; <label>:68:                                     ; preds = %66
  %69 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv3
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %1, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = icmp ugt i32 %65, %73
  br label %75

; <label>:75:                                     ; preds = %68, %66
  %76 = phi i1 [ false, %66 ], [ %74, %68 ]
  br i1 %76, label %77, label %83

; <label>:77:                                     ; preds = %75
  %78 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv3
  %79 = load i32, i32* %78, align 4
  %80 = sub nsw i64 %indvars.iv3, 1
  %81 = getelementptr inbounds i32, i32* %0, i64 %80
  store i32 %79, i32* %81, align 4
  br label %82

; <label>:82:                                     ; preds = %77
  %indvars.iv.next4 = add i64 %indvars.iv3, 1
  br label %66

; <label>:83:                                     ; preds = %75
  %.1.lcssa.wide = phi i64 [ %indvars.iv3, %75 ]
  %84 = trunc i64 %.1.lcssa.wide to i32
  %85 = sub nsw i32 %84, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %0, i64 %86
  store i32 %62, i32* %87, align 4
  br label %88

; <label>:88:                                     ; preds = %83
  %indvars.iv.next7 = add i64 %indvars.iv, -1
  %indvars.iv.next = add i32 %indvars.iv5, -1
  %89 = sext i32 %indvars.iv.next to i64
  %90 = icmp sge i64 %indvars.iv.next7, %58
  br i1 %90, label %59, label %..loopexit_crit_edge

..loopexit_crit_edge:                             ; preds = %88
  br label %.loopexit

.loopexit:                                        ; preds = %..loopexit_crit_edge, %51
  br label %91

; <label>:91:                                     ; preds = %.loopexit, %6
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbMakeCodeLengths(i8*, i32*, i32, i32) #0 {
  %5 = alloca [260 x i32], align 16
  %6 = alloca [516 x i32], align 16, !track !68
  %7 = alloca [516 x i32], align 16
  %8 = icmp slt i32 0, %2
  br i1 %8, label %.lr.ph78, label %22

.lr.ph78:                                         ; preds = %4
  br label %9

; <label>:9:                                      ; preds = %.lr.ph78, %21
  %indvars.iv80 = phi i64 [ 0, %.lr.ph78 ], [ %indvars.iv.next81, %21 ]
  call void @unroll_loop(i32 215)
  %10 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv80
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

; <label>:13:                                     ; preds = %9
  br label %17

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv80
  %16 = load i32, i32* %15, align 4
  br label %17

; <label>:17:                                     ; preds = %14, %13
  %18 = phi i32 [ 1, %13 ], [ %16, %14 ]
  %19 = shl i32 %18, 8
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %20 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %indvars.iv.next81
  store i32 %19, i32* %20, align 4
  br label %21

; <label>:21:                                     ; preds = %17
  %wide.trip.count82 = zext i32 %2 to i64
  %exitcond83 = icmp ne i64 %indvars.iv.next81, %wide.trip.count82
  br i1 %exitcond83, label %9, label %._crit_edge79

._crit_edge79:                                    ; preds = %21
  br label %22

; <label>:22:                                     ; preds = %._crit_edge79, %4
  %23 = add i32 %2, -1
  %24 = zext i32 %23 to i64
  %25 = add i64 %24, 1
  %26 = sext i32 %2 to i64
  %27 = add i64 %26, 1
  %28 = add i32 %2, 1
  br label %29

; <label>:29:                                     ; preds = %22, %318
  call void @unroll_loop(i32 216)
  %30 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 0
  store i32 0, i32* %30, align 16
  %31 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 0
  store i32 0, i32* %31, align 16
  %32 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 0
  store i32 -2, i32* %32, align 16
  %33 = icmp sle i32 1, %2
  br i1 %33, label %.lr.ph22, label %76

.lr.ph22:                                         ; preds = %29
  br label %34

; <label>:34:                                     ; preds = %.lr.ph22, %74
  %indvars.iv25 = phi i64 [ 1, %.lr.ph22 ], [ %indvars.iv.next26, %74 ]
  %indvars.iv = phi i64 [ 0, %.lr.ph22 ], [ %indvars.iv.next, %74 ]
  call void @unroll_loop(i32 217)
  %35 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %indvars.iv25
  store i32 -1, i32* %35, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %36 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next
  %37 = trunc i64 %indvars.iv25 to i32
  store i32 %37, i32* %36, align 4
  %38 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = trunc i64 %indvars.iv.next to i32
  %44 = ashr i32 %43, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %42, %50
  %52 = trunc i64 %indvars.iv.next to i32
  br i1 %51, label %.lr.ph, label %71

.lr.ph:                                           ; preds = %34
  %53 = trunc i64 %indvars.iv.next to i32
  br label %54

; <label>:54:                                     ; preds = %.lr.ph, %54
  %.0718 = phi i32 [ %53, %.lr.ph ], [ %61, %54 ]
  call void @unroll_loop(i32 218)
  %55 = ashr i32 %.0718, 1
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %.0718 to i64
  %60 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %59
  store i32 %58, i32* %60, align 4
  %61 = ashr i32 %.0718, 1
  %62 = load i32, i32* %41, align 4
  %63 = ashr i32 %61, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %62, %69
  br i1 %70, label %54, label %._crit_edge

._crit_edge:                                      ; preds = %54
  %split = phi i32 [ %61, %54 ]
  br label %71

; <label>:71:                                     ; preds = %._crit_edge, %34
  %.07.lcssa = phi i32 [ %split, %._crit_edge ], [ %52, %34 ]
  %72 = sext i32 %.07.lcssa to i64
  %73 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %72
  store i32 %39, i32* %73, align 4
  br label %74

; <label>:74:                                     ; preds = %71
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %wide.trip.count = zext i32 %2 to i64
  %exitcond = icmp ne i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %34, label %._crit_edge23

._crit_edge23:                                    ; preds = %74
  %75 = trunc i64 %25 to i32
  br label %76

; <label>:76:                                     ; preds = %._crit_edge23, %29
  %.05.lcssa = phi i32 [ %75, %._crit_edge23 ], [ 0, %29 ]
  %77 = icmp slt i32 %.05.lcssa, 260
  br i1 %77, label %79, label %78

; <label>:78:                                     ; preds = %76
  call void @BZ2_bz__AssertH__fail(i32 2001)
  br label %79

; <label>:79:                                     ; preds = %78, %76
  %80 = icmp sgt i32 %.05.lcssa, 1
  br i1 %80, label %.lr.ph45, label %277

.lr.ph45:                                         ; preds = %79
  %81 = sext i32 %.05.lcssa to i64
  %82 = add i32 %.05.lcssa, -2
  %83 = zext i32 %82 to i64
  br label %84

; <label>:84:                                     ; preds = %.lr.ph45, %271
  %indvars.iv50 = phi i64 [ %81, %.lr.ph45 ], [ %indvars.iv.next51, %271 ]
  %indvars.iv48 = phi i64 [ %26, %.lr.ph45 ], [ %indvars.iv.next49, %271 ]
  call void @unroll_loop(i32 219)
  %85 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv50
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  store i32 %88, i32* %89, align 4
  %indvars.iv.next51 = add nsw i64 %indvars.iv50, -1
  %90 = sext i32 1 to i64
  %91 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i64 2, %indvars.iv.next51
  br i1 %93, label %94, label %.lr.ph29

.lr.ph29:                                         ; preds = %84
  br label %95

._crit_edge30:                                    ; preds = %128
  %split31 = phi i32 [ %.03, %128 ]
  br label %94

; <label>:94:                                     ; preds = %._crit_edge30, %84
  %.06.lcssa = phi i32 [ %split31, %._crit_edge30 ], [ 1, %84 ]
  br label %137

; <label>:95:                                     ; preds = %.lr.ph29, %128
  %96 = phi i32 [ 2, %.lr.ph29 ], [ %134, %128 ]
  %.0627 = phi i32 [ 1, %.lr.ph29 ], [ %.03, %128 ]
  call void @unroll_loop(i32 220)
  %97 = sext i32 %96 to i64
  %98 = icmp slt i64 %97, %indvars.iv.next51
  br i1 %98, label %99, label %116

; <label>:99:                                     ; preds = %95
  %100 = add nuw nsw i32 %96, 1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = sext i32 %96 to i64
  %108 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = icmp slt i32 %106, %112
  br i1 %113, label %114, label %116

; <label>:114:                                    ; preds = %99
  %115 = add nuw nsw i32 %96, 1
  br label %116

; <label>:116:                                    ; preds = %114, %99, %95
  %.03 = phi i32 [ %115, %114 ], [ %96, %99 ], [ %96, %95 ]
  %117 = sext i32 %92 to i64
  %118 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %.03 to i64
  %121 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = icmp slt i32 %119, %125
  br i1 %126, label %127, label %128

; <label>:127:                                    ; preds = %116
  %.06.lcssa14 = phi i32 [ %.0627, %116 ]
  br label %137

; <label>:128:                                    ; preds = %116
  %129 = sext i32 %.03 to i64
  %130 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = sext i32 %.0627 to i64
  %133 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %132
  store i32 %131, i32* %133, align 4
  %134 = shl i32 %.03, 1
  %135 = sext i32 %134 to i64
  %136 = icmp sgt i64 %135, %indvars.iv.next51
  br i1 %136, label %._crit_edge30, label %95

; <label>:137:                                    ; preds = %127, %94
  %.0615 = phi i32 [ %.06.lcssa14, %127 ], [ %.06.lcssa, %94 ]
  %138 = sext i32 %.0615 to i64
  %139 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %138
  store i32 %92, i32* %139, align 4
  %140 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next51
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  store i32 %143, i32* %144, align 4
  %145 = add nsw i64 %indvars.iv.next51, -1
  %146 = sext i32 1 to i64
  %147 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = icmp sgt i64 2, %145
  br i1 %149, label %150, label %.lr.ph34

.lr.ph34:                                         ; preds = %137
  br label %151

._crit_edge35:                                    ; preds = %184
  %split36 = phi i32 [ %.01, %184 ]
  br label %150

; <label>:150:                                    ; preds = %._crit_edge35, %137
  %.02.lcssa = phi i32 [ %split36, %._crit_edge35 ], [ 1, %137 ]
  br label %193

; <label>:151:                                    ; preds = %.lr.ph34, %184
  %152 = phi i32 [ 2, %.lr.ph34 ], [ %190, %184 ]
  %.0232 = phi i32 [ 1, %.lr.ph34 ], [ %.01, %184 ]
  call void @unroll_loop(i32 221)
  %153 = sext i32 %152 to i64
  %154 = icmp slt i64 %153, %145
  br i1 %154, label %155, label %172

; <label>:155:                                    ; preds = %151
  %156 = add nuw nsw i32 %152, 1
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %160
  %162 = load i32, i32* %161, align 4
  %163 = sext i32 %152 to i64
  %164 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %162, %168
  br i1 %169, label %170, label %172

; <label>:170:                                    ; preds = %155
  %171 = add nuw nsw i32 %152, 1
  br label %172

; <label>:172:                                    ; preds = %170, %155, %151
  %.01 = phi i32 [ %171, %170 ], [ %152, %155 ], [ %152, %151 ]
  %173 = sext i32 %148 to i64
  %174 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %.01 to i64
  %177 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = icmp slt i32 %175, %181
  br i1 %182, label %183, label %184

; <label>:183:                                    ; preds = %172
  %.02.lcssa16 = phi i32 [ %.0232, %172 ]
  br label %193

; <label>:184:                                    ; preds = %172
  %185 = sext i32 %.01 to i64
  %186 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = sext i32 %.0232 to i64
  %189 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %188
  store i32 %187, i32* %189, align 4
  %190 = shl i32 %.01, 1
  %191 = sext i32 %190 to i64
  %192 = icmp sgt i64 %191, %145
  br i1 %192, label %._crit_edge35, label %151

; <label>:193:                                    ; preds = %183, %150
  %.0217 = phi i32 [ %.02.lcssa16, %183 ], [ %.02.lcssa, %150 ]
  %194 = sext i32 %.0217 to i64
  %195 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %194
  store i32 %148, i32* %195, align 4
  %indvars.iv.next49 = add nsw i64 %indvars.iv48, 1
  %196 = sext i32 %141 to i64
  %197 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %196
  %198 = trunc i64 %indvars.iv.next49 to i32
  store i32 %198, i32* %197, align 4
  %199 = sext i32 %86 to i64
  %200 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %199
  %201 = trunc i64 %indvars.iv.next49 to i32
  store i32 %201, i32* %200, align 4
  %202 = sext i32 %86 to i64
  %203 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = and i32 %204, -256
  %206 = sext i32 %141 to i64
  %207 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = and i32 %208, -256
  %210 = add i32 %205, %209
  %211 = sext i32 %86 to i64
  %212 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = and i32 %213, 255
  %215 = sext i32 %141 to i64
  %216 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, 255
  %219 = icmp sgt i32 %214, %218
  br i1 %219, label %220, label %225

; <label>:220:                                    ; preds = %193
  %221 = sext i32 %86 to i64
  %222 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = and i32 %223, 255
  br label %230

; <label>:225:                                    ; preds = %193
  %226 = sext i32 %141 to i64
  %227 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = and i32 %228, 255
  br label %230

; <label>:230:                                    ; preds = %225, %220
  %231 = phi i32 [ %224, %220 ], [ %229, %225 ]
  %232 = add nsw i32 1, %231
  %233 = or i32 %210, %232
  %234 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %indvars.iv.next49
  store i32 %233, i32* %234, align 4
  %235 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %indvars.iv.next49
  store i32 -1, i32* %235, align 4
  %236 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next51
  %237 = trunc i64 %indvars.iv.next49 to i32
  store i32 %237, i32* %236, align 4
  %238 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next51
  %239 = load i32, i32* %238, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %240
  %242 = load i32, i32* %241, align 4
  %243 = trunc i64 %indvars.iv.next51 to i32
  %244 = ashr i32 %243, 1
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = icmp slt i32 %242, %250
  %252 = trunc i64 %indvars.iv.next51 to i32
  br i1 %251, label %.lr.ph39, label %271

.lr.ph39:                                         ; preds = %230
  %253 = trunc i64 %indvars.iv.next51 to i32
  br label %254

; <label>:254:                                    ; preds = %.lr.ph39, %254
  %.037 = phi i32 [ %253, %.lr.ph39 ], [ %261, %254 ]
  call void @unroll_loop(i32 222)
  %255 = ashr i32 %.037, 1
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  %259 = sext i32 %.037 to i64
  %260 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %259
  store i32 %258, i32* %260, align 4
  %261 = ashr i32 %.037, 1
  %262 = load i32, i32* %241, align 4
  %263 = ashr i32 %261, 1
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %264
  %266 = load i32, i32* %265, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = icmp slt i32 %262, %269
  br i1 %270, label %254, label %._crit_edge40

._crit_edge40:                                    ; preds = %254
  %split41 = phi i32 [ %261, %254 ]
  br label %271

; <label>:271:                                    ; preds = %._crit_edge40, %230
  %.0.lcssa = phi i32 [ %split41, %._crit_edge40 ], [ %252, %230 ]
  %272 = sext i32 %.0.lcssa to i64
  %273 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %272
  store i32 %239, i32* %273, align 4
  %274 = icmp sgt i64 %indvars.iv.next51, 1
  br i1 %274, label %84, label %._crit_edge46

._crit_edge46:                                    ; preds = %271
  %275 = add i64 %27, %83
  %276 = trunc i64 %275 to i32
  br label %277

; <label>:277:                                    ; preds = %._crit_edge46, %79
  %.04.lcssa = phi i32 [ %276, %._crit_edge46 ], [ %2, %79 ]
  %278 = icmp slt i32 %.04.lcssa, 516
  br i1 %278, label %280, label %279

; <label>:279:                                    ; preds = %277
  call void @BZ2_bz__AssertH__fail(i32 2002)
  br label %280

; <label>:280:                                    ; preds = %279, %277
  %281 = icmp sle i32 1, %2
  br i1 %281, label %.lr.ph61, label %304

.lr.ph61:                                         ; preds = %280
  br label %282

; <label>:282:                                    ; preds = %.lr.ph61, %303
  %indvars.iv64 = phi i64 [ 1, %.lr.ph61 ], [ %indvars.iv.next65, %303 ]
  %.01258 = phi i8 [ 0, %.lr.ph61 ], [ %.113, %303 ]
  call void @unroll_loop(i32 223)
  %283 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %indvars.iv64
  %284 = load i32, i32* %283, align 4
  %285 = icmp sge i32 %284, 0
  br i1 %285, label %.lr.ph55, label %296

.lr.ph55:                                         ; preds = %282
  %286 = trunc i64 %indvars.iv64 to i32
  br label %287

; <label>:287:                                    ; preds = %.lr.ph55, %287
  %.01053 = phi i32 [ 0, %.lr.ph55 ], [ %291, %287 ]
  %.01152 = phi i32 [ %286, %.lr.ph55 ], [ %290, %287 ]
  %288 = sext i32 %.01152 to i64
  %289 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = add nuw nsw i32 %.01053, 1
  %292 = sext i32 %290 to i64
  %293 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %292
  %294 = load i32, i32* %293, align 4
  %295 = icmp sge i32 %294, 0
  br i1 %295, label %287, label %._crit_edge56

._crit_edge56:                                    ; preds = %287
  %split57 = phi i32 [ %291, %287 ]
  br label %296

; <label>:296:                                    ; preds = %._crit_edge56, %282
  %.010.lcssa = phi i32 [ %split57, %._crit_edge56 ], [ 0, %282 ]
  %297 = trunc i32 %.010.lcssa to i8
  %298 = sub nuw nsw i64 %indvars.iv64, 1
  %299 = getelementptr inbounds i8, i8* %0, i64 %298
  store i8 %297, i8* %299, align 1
  %300 = icmp sgt i32 %.010.lcssa, %3
  br i1 %300, label %301, label %302

; <label>:301:                                    ; preds = %296
  br label %302

; <label>:302:                                    ; preds = %301, %296
  %.113 = phi i8 [ 1, %301 ], [ %.01258, %296 ]
  br label %303

; <label>:303:                                    ; preds = %302
  %indvars.iv.next65 = add nuw nsw i64 %indvars.iv64, 1
  %wide.trip.count66 = zext i32 %28 to i64
  %exitcond67 = icmp ne i64 %indvars.iv.next65, %wide.trip.count66
  br i1 %exitcond67, label %282, label %._crit_edge62

._crit_edge62:                                    ; preds = %303
  %split63 = phi i8 [ %.113, %303 ]
  br label %304

; <label>:304:                                    ; preds = %._crit_edge62, %280
  %.012.lcssa = phi i8 [ %split63, %._crit_edge62 ], [ 0, %280 ]
  %305 = icmp ne i8 %.012.lcssa, 0
  br i1 %305, label %307, label %306

; <label>:306:                                    ; preds = %304
  br label %319

; <label>:307:                                    ; preds = %304
  %308 = icmp sle i32 1, %2
  br i1 %308, label %.lr.ph70, label %318

.lr.ph70:                                         ; preds = %307
  br label %309

; <label>:309:                                    ; preds = %.lr.ph70, %317
  %indvars.iv72 = phi i64 [ 1, %.lr.ph70 ], [ %indvars.iv.next73, %317 ]
  call void @unroll_loop(i32 224)
  %310 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %indvars.iv72
  %311 = load i32, i32* %310, align 4
  %312 = ashr i32 %311, 8
  %313 = sdiv i32 %312, 2
  %314 = add nsw i32 1, %313
  %315 = shl i32 %314, 8
  %316 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %indvars.iv72
  store i32 %315, i32* %316, align 4
  br label %317

; <label>:317:                                    ; preds = %309
  %indvars.iv.next73 = add nuw nsw i64 %indvars.iv72, 1
  %wide.trip.count74 = zext i32 %28 to i64
  %exitcond75 = icmp ne i64 %indvars.iv.next73, %wide.trip.count74
  br i1 %exitcond75, label %309, label %._crit_edge71

._crit_edge71:                                    ; preds = %317
  br label %318

; <label>:318:                                    ; preds = %._crit_edge71, %307
  br label %29

; <label>:319:                                    ; preds = %306
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbAssignCodes(i32*, i8*, i32, i32, i32) #0 {
  %6 = icmp sle i32 %2, %3
  br i1 %6, label %.lr.ph8, label %24

.lr.ph8:                                          ; preds = %5
  br label %7

; <label>:7:                                      ; preds = %.lr.ph8, %21
  %.016 = phi i32 [ 0, %.lr.ph8 ], [ %20, %21 ]
  %.025 = phi i32 [ %2, %.lr.ph8 ], [ %22, %21 ]
  %8 = icmp slt i32 0, %4
  br i1 %8, label %.lr.ph, label %19

.lr.ph:                                           ; preds = %7
  br label %9

; <label>:9:                                      ; preds = %.lr.ph, %18
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %18 ]
  %.13 = phi i32 [ %.016, %.lr.ph ], [ %.2, %18 ]
  call void @unroll_loop(i32 225)
  %10 = getelementptr inbounds i8, i8* %1, i64 %indvars.iv
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, %.025
  br i1 %13, label %14, label %17

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  store i32 %.13, i32* %15, align 4
  %16 = add nsw i32 %.13, 1
  br label %17

; <label>:17:                                     ; preds = %14, %9
  %.2 = phi i32 [ %16, %14 ], [ %.13, %9 ]
  br label %18

; <label>:18:                                     ; preds = %17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %wide.trip.count = zext i32 %4 to i64
  %exitcond = icmp ne i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %9, label %._crit_edge

._crit_edge:                                      ; preds = %18
  %split = phi i32 [ %.2, %18 ]
  br label %19

; <label>:19:                                     ; preds = %._crit_edge, %7
  %.1.lcssa = phi i32 [ %split, %._crit_edge ], [ %.016, %7 ]
  %20 = shl i32 %.1.lcssa, 1
  br label %21

; <label>:21:                                     ; preds = %19
  %22 = add nsw i32 %.025, 1
  %23 = icmp sle i32 %22, %3
  br i1 %23, label %7, label %._crit_edge9

._crit_edge9:                                     ; preds = %21
  br label %24

; <label>:24:                                     ; preds = %._crit_edge9, %5
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbCreateDecodeTables(i32*, i32*, i32*, i8*, i32, i32, i32) #0 {
  %8 = icmp sle i32 %4, %5
  br i1 %8, label %.lr.ph44, label %27

.lr.ph44:                                         ; preds = %7
  br label %9

; <label>:9:                                      ; preds = %.lr.ph44, %24
  %.0242 = phi i32 [ %4, %.lr.ph44 ], [ %25, %24 ]
  %.0341 = phi i32 [ 0, %.lr.ph44 ], [ %.14.lcssa, %24 ]
  %10 = icmp slt i32 0, %6
  br i1 %10, label %.lr.ph35, label %23

.lr.ph35:                                         ; preds = %9
  br label %11

; <label>:11:                                     ; preds = %.lr.ph35, %22
  %indvars.iv37 = phi i64 [ 0, %.lr.ph35 ], [ %indvars.iv.next38, %22 ]
  %.1432 = phi i32 [ %.0341, %.lr.ph35 ], [ %.25, %22 ]
  call void @unroll_loop(i32 226)
  %12 = getelementptr inbounds i8, i8* %3, i64 %indvars.iv37
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = icmp eq i32 %14, %.0242
  br i1 %15, label %16, label %21

; <label>:16:                                     ; preds = %11
  %17 = sext i32 %.1432 to i64
  %18 = getelementptr inbounds i32, i32* %2, i64 %17
  %19 = trunc i64 %indvars.iv37 to i32
  store i32 %19, i32* %18, align 4
  %20 = add nsw i32 %.1432, 1
  br label %21

; <label>:21:                                     ; preds = %16, %11
  %.25 = phi i32 [ %20, %16 ], [ %.1432, %11 ]
  br label %22

; <label>:22:                                     ; preds = %21
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1
  %wide.trip.count39 = zext i32 %6 to i64
  %exitcond40 = icmp ne i64 %indvars.iv.next38, %wide.trip.count39
  br i1 %exitcond40, label %11, label %._crit_edge36

._crit_edge36:                                    ; preds = %22
  %split = phi i32 [ %.25, %22 ]
  br label %23

; <label>:23:                                     ; preds = %._crit_edge36, %9
  %.14.lcssa = phi i32 [ %split, %._crit_edge36 ], [ %.0341, %9 ]
  br label %24

; <label>:24:                                     ; preds = %23
  %25 = add nsw i32 %.0242, 1
  %26 = icmp sle i32 %25, %5
  br i1 %26, label %9, label %._crit_edge45

._crit_edge45:                                    ; preds = %24
  br label %27

; <label>:27:                                     ; preds = %._crit_edge45, %7
  br label %28

; <label>:28:                                     ; preds = %27, %30
  %indvars.iv29 = phi i64 [ 0, %27 ], [ %indvars.iv.next30, %30 ]
  call void @unroll_loop(i32 227)
  %29 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv29
  store i32 0, i32* %29, align 4
  br label %30

; <label>:30:                                     ; preds = %28
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %exitcond31 = icmp ne i64 %indvars.iv.next30, 23
  br i1 %exitcond31, label %28, label %31

; <label>:31:                                     ; preds = %30
  %32 = icmp slt i32 0, %6
  br i1 %32, label %.lr.ph23, label %43

.lr.ph23:                                         ; preds = %31
  br label %33

; <label>:33:                                     ; preds = %.lr.ph23, %42
  %indvars.iv25 = phi i64 [ 0, %.lr.ph23 ], [ %indvars.iv.next26, %42 ]
  call void @unroll_loop(i32 228)
  %34 = getelementptr inbounds i8, i8* %3, i64 %indvars.iv25
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = add nsw i32 %36, 1
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %1, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %39, align 4
  br label %42

; <label>:42:                                     ; preds = %33
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %wide.trip.count = zext i32 %6 to i64
  %exitcond27 = icmp ne i64 %indvars.iv.next26, %wide.trip.count
  br i1 %exitcond27, label %33, label %._crit_edge24

._crit_edge24:                                    ; preds = %42
  br label %43

; <label>:43:                                     ; preds = %._crit_edge24, %31
  br label %44

; <label>:44:                                     ; preds = %43, %51
  %indvars.iv18 = phi i64 [ 1, %43 ], [ %indvars.iv.next19, %51 ]
  call void @unroll_loop(i32 229)
  %45 = sub nuw nsw i64 %indvars.iv18, 1
  %46 = getelementptr inbounds i32, i32* %1, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv18
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, %47
  store i32 %50, i32* %48, align 4
  br label %51

; <label>:51:                                     ; preds = %44
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1
  %exitcond20 = icmp ne i64 %indvars.iv.next19, 23
  br i1 %exitcond20, label %44, label %52

; <label>:52:                                     ; preds = %51
  br label %53

; <label>:53:                                     ; preds = %52, %55
  %indvars.iv15 = phi i64 [ 0, %52 ], [ %indvars.iv.next16, %55 ]
  call void @unroll_loop(i32 230)
  %54 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv15
  store i32 0, i32* %54, align 4
  br label %55

; <label>:55:                                     ; preds = %53
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  %exitcond = icmp ne i64 %indvars.iv.next16, 23
  br i1 %exitcond, label %53, label %56

; <label>:56:                                     ; preds = %55
  %57 = icmp sle i32 %4, %5
  br i1 %57, label %.lr.ph10, label %72

.lr.ph10:                                         ; preds = %56
  %58 = sext i32 %4 to i64
  %59 = sext i32 %5 to i64
  br label %60

; <label>:60:                                     ; preds = %.lr.ph10, %70
  %indvars.iv12 = phi i64 [ %58, %.lr.ph10 ], [ %indvars.iv.next13, %70 ]
  %.08 = phi i32 [ 0, %.lr.ph10 ], [ %69, %70 ]
  call void @unroll_loop(i32 231)
  %indvars.iv.next13 = add i64 %indvars.iv12, 1
  %61 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv.next13
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv12
  %64 = load i32, i32* %63, align 4
  %65 = sub nsw i32 %62, %64
  %66 = add nsw i32 %.08, %65
  %67 = sub nsw i32 %66, 1
  %68 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv12
  store i32 %67, i32* %68, align 4
  %69 = shl i32 %66, 1
  br label %70

; <label>:70:                                     ; preds = %60
  %71 = icmp sle i64 %indvars.iv.next13, %59
  br i1 %71, label %60, label %._crit_edge11

._crit_edge11:                                    ; preds = %70
  br label %72

; <label>:72:                                     ; preds = %._crit_edge11, %56
  %73 = add nsw i32 %4, 1
  %74 = icmp sle i32 %73, %5
  br i1 %74, label %.lr.ph, label %90

.lr.ph:                                           ; preds = %72
  %75 = add i32 %4, 1
  %76 = sext i32 %75 to i64
  %77 = sext i32 %5 to i64
  br label %78

; <label>:78:                                     ; preds = %.lr.ph, %88
  %indvars.iv = phi i64 [ %76, %.lr.ph ], [ %indvars.iv.next, %88 ]
  call void @unroll_loop(i32 232)
  %79 = sub nsw i64 %indvars.iv, 1
  %80 = getelementptr inbounds i32, i32* %0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = add nsw i32 %81, 1
  %83 = shl i32 %82, 1
  %84 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv
  %85 = load i32, i32* %84, align 4
  %86 = sub nsw i32 %83, %85
  %87 = getelementptr inbounds i32, i32* %1, i64 %indvars.iv
  store i32 %86, i32* %87, align 4
  br label %88

; <label>:88:                                     ; preds = %78
  %indvars.iv.next = add i64 %indvars.iv, 1
  %89 = icmp sle i64 %indvars.iv.next, %77
  br i1 %89, label %78, label %._crit_edge

._crit_edge:                                      ; preds = %88
  br label %90

; <label>:90:                                     ; preds = %._crit_edge, %72
  ret void
}

declare void @unroll_loop(i32)

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "track_func"="true" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }
attributes #13 = { nounwind readnone }

!llvm.ident = !{!6, !6, !6, !6, !6, !6, !6, !6}
!llvm.module.flags = !{!7}

!0 = !{i64 13}
!1 = !{i64 17}
!2 = !{i64 44}
!3 = !{i64 43}
!4 = !{i64 14}
!5 = !{i64 3}
!6 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i64 2}
!9 = !{!"1"}
!10 = !{i64 39}
!11 = !{i64 38}
!12 = !{i64 37}
!13 = !{i64 36}
!14 = !{i64 35}
!15 = !{i64 34}
!16 = !{i64 28}
!17 = !{i64 33}
!18 = !{i64 19}
!19 = !{i64 31}
!20 = !{i64 29}
!21 = !{i64 27}
!22 = !{i64 30}
!23 = !{i64 45}
!24 = !{i64 32}
!25 = !{i64 65}
!26 = !{i64 25}
!27 = !{i64 64}
!28 = !{i64 55}
!29 = !{i64 63}
!30 = !{i64 62}
!31 = !{i64 1}
!32 = !{i64 61}
!33 = !{i64 60}
!34 = !{i64 18}
!35 = !{i64 59}
!36 = !{i64 58}
!37 = !{i64 57}
!38 = !{i64 56}
!39 = !{i64 66}
!40 = !{i64 54}
!41 = !{i64 20}
!42 = !{i64 53}
!43 = !{i64 52}
!44 = !{i64 22}
!45 = !{i64 26}
!46 = !{i64 51}
!47 = !{i64 50}
!48 = !{i64 23}
!49 = !{i64 24}
!50 = !{i64 49}
!51 = !{i64 48}
!52 = !{i64 47}
!53 = !{i64 46}
!54 = !{i64 21}
!55 = !{i64 7}
!56 = !{i64 6}
!57 = !{i64 4}
!58 = !{i64 8}
!59 = !{i64 40}
!60 = !{i64 41}
!61 = !{i64 15}
!62 = !{i64 42}
!63 = !{i64 9}
!64 = !{i64 10}
!65 = !{i64 16}
!66 = !{i64 12}
!67 = !{i64 11}
!68 = !{i64 5}
