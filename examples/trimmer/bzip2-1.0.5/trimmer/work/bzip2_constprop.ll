; ModuleID = './work/bzip2_constprop.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.zzzz = type { i8*, %struct.zzzz* }
%struct.UInt64 = type { [8 x i8] }
%struct.bz_stream = type { i8*, i32, i32, i32, i8*, i32, i32, i32, i8*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8* }
%struct.EState = type { %struct.bz_stream*, i32, i32, i32, i32*, i32*, i32*, i32, i32*, i8*, i16*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [258 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [258 x [4 x i32]] }
%struct.DState = type { %struct.bz_stream*, i32, i8, i32, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, [256 x i32], i32, [257 x i32], [257 x i32], i32*, i16*, i8*, i32, i32, i32, i32, i32, [256 x i8], [16 x i8], [256 x i8], [4096 x i8], [16 x i32], [18002 x i8], [18002 x i8], [6 x [258 x i8]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x [258 x i32]], [6 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32* }
%struct.bzFile = type { %struct._IO_FILE*, [5000 x i8], i32, i8, %struct.bz_stream, i32, i8 }

@zSuffix = dso_local global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0)], align 16, !track !0
@.str = private unnamed_addr constant [5 x i8] c".bz2\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c".bz\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c".tbz2\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c".tbz\00", align 1
@unzSuffix = dso_local global [4 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0)], align 16
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [5 x i8] c".tar\00", align 1
@outputHandleJustInCase = common dso_local global %struct._IO_FILE* null, align 8, !track !1
@smallMode = common dso_local global i8 0, align 1
@keepInputFiles = common dso_local global i8 0, align 1
@forceOverwrite = common dso_local global i8 0, align 1
@noisy = common dso_local global i8 0, align 1
@verbosity = common dso_local global i32 0, align 4
@blockSize100k = common dso_local global i32 0, align 4
@testFailsExist = common dso_local global i8 0, align 1
@unzFailsExist = common dso_local global i8 0, align 1
@numFileNames = common dso_local global i32 0, align 4
@numFilesProcessed = common dso_local global i32 0, align 4
@workFactor = common dso_local global i32 0, align 4
@deleteOutputOnInterrupt = common dso_local global i8 0, align 1
@exitValue = common dso_local global i32 0, align 4
@inName = common dso_local global [1034 x i8] zeroinitializer, align 16, !track !2
@outName = common dso_local global [1034 x i8] zeroinitializer, align 16, !track !3
@progNameReally = common dso_local global [1034 x i8] zeroinitializer, align 16, !track !4
@progName = common dso_local global i8* null, align 8, !track !5
@longestFileName = common dso_local global i32 0, align 4
@srcMode = common dso_local global i32 0, align 4
@opMode = common dso_local global i32 0, align 4
@tmpName = common dso_local global [1034 x i8] zeroinitializer, align 16
@.str.6 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"BZIP2\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"BZIP\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"unzip\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"UNZIP\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"z2cat\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"Z2CAT\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"zcat\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"ZCAT\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.16 = private unnamed_addr constant [19 x i8] c"%s: Bad flag `%s'\0A\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"--stdout\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"--decompress\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"--compress\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"--force\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"--test\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"--keep\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"--small\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"--quiet\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"--version\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"--license\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"--exponential\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"--repetitive-best\00", align 1
@.str.29 = private unnamed_addr constant [18 x i8] c"--repetitive-fast\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"--fast\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"--best\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"--verbose\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"--help\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"%s: -c and -t cannot be used together.\0A\00", align 1
@.str.35 = private unnamed_addr constant [113 x i8] c"\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.94 = private unnamed_addr constant [18 x i8] c"testf: bad modes\0A\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"(stdin)\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"%s: There are no files matching `%s'.\0A\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"%s: Can't open input %s: %s.\0A\00", align 1
@.str.59 = private unnamed_addr constant [35 x i8] c"%s: Input file %s is a directory.\0A\00", align 1
@stdin = external dso_local global %struct._IO_FILE*, align 8
@.str.82 = private unnamed_addr constant [51 x i8] c"%s: I won't read compressed data from a terminal.\0A\00", align 1
@.str.65 = private unnamed_addr constant [34 x i8] c"%s: For help, type: `%s --help'.\0A\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.83 = private unnamed_addr constant [34 x i8] c"%s: Can't open input file %s:%s.\0A\00", align 1
@.str.96 = private unnamed_addr constant [19 x i8] c"testf: bad srcMode\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"  %s: \00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"ok\0A\00", align 1
@.str.98 = private unnamed_addr constant [21 x i8] c"test:bzReadGetUnused\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"\0A    \00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"%s: %s: \00", align 1
@.str.100 = private unnamed_addr constant [36 x i8] c"data integrity (CRC) error in data\0A\00", align 1
@.str.101 = private unnamed_addr constant [24 x i8] c"file ends unexpectedly\0A\00", align 1
@.str.102 = private unnamed_addr constant [46 x i8] c"bad magic number (file not created by bzip2)\0A\00", align 1
@.str.103 = private unnamed_addr constant [36 x i8] c"trailing garbage after EOF ignored\0A\00", align 1
@.str.104 = private unnamed_addr constant [22 x i8] c"test:unexpected error\00", align 1
@.str.48 = private unnamed_addr constant [38 x i8] c"\0A%s: couldn't allocate enough memory\0A\00", align 1
@.str.39 = private unnamed_addr constant [44 x i8] c"%s: Deleting output file %s, if it exists.\0A\00", align 1
@.str.40 = private unnamed_addr constant [59 x i8] c"%s: WARNING: deletion of output file (apparently) failed.\0A\00", align 1
@.str.41 = private unnamed_addr constant [49 x i8] c"%s: WARNING: deletion of output file suppressed\0A\00", align 1
@.str.42 = private unnamed_addr constant [56 x i8] c"%s:    since input file no longer exists.  Output file\0A\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"%s:    `%s' may be incomplete.\0A\00", align 1
@.str.44 = private unnamed_addr constant [61 x i8] c"%s:    I suggest doing an integrity test (bzip2 -tv) of it.\0A\00", align 1
@.str.45 = private unnamed_addr constant [110 x i8] c"%s: WARNING: some files have not been processed:\0A%s:    %d specified on command line, %d not processed yet.\0A\0A\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"\09Input file = %s, output file = %s\0A\00", align 1
@.str.78 = private unnamed_addr constant [65 x i8] c"\0A%s: I/O or other error, bailing out.  Possible reason follows.\0A\00", align 1
@.str.77 = private unnamed_addr constant [236 x i8] c"bzip2: I'm not configured correctly for this platform!\0A\09I require Int32, Int16 and Char to have sizes\0A\09of 4, 2 and 1 bytes to run properly, and they don't.\0A\09Probably you can fix this by defining them correctly,\0A\09and recompiling.  Bye!\0A\00", align 1
@.str.72 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.71 = private unnamed_addr constant [109 x i8] c"\0A%s: PANIC -- internal consistency error:\0A\09%s\0A\09This is a BUG.  Please report it to me at:\0A\09jseward@bzip.org\0A\00", align 1
@.str.79 = private unnamed_addr constant [23 x i8] c"uncompress: bad modes\0A\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"(stdout)\00", align 1
@.str.80 = private unnamed_addr constant [5 x i8] c".out\00", align 1
@.str.57 = private unnamed_addr constant [35 x i8] c"%s: Can't open input file %s: %s.\0A\00", align 1
@.str.60 = private unnamed_addr constant [41 x i8] c"%s: Input file %s is not a normal file.\0A\00", align 1
@.str.81 = private unnamed_addr constant [50 x i8] c"%s: Can't guess original name for %s -- using %s\0A\00", align 1
@.str.61 = private unnamed_addr constant [36 x i8] c"%s: Output file %s already exists.\0A\00", align 1
@.str.63 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.62 = private unnamed_addr constant [40 x i8] c"%s: Input file %s has %d other link%s.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8
@.str.67 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.68 = private unnamed_addr constant [38 x i8] c"%s: Can't create output file %s: %s.\0A\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"uncompress: bad srcMode\00", align 1
@.str.85 = private unnamed_addr constant [6 x i8] c"done\0A\00", align 1
@.str.86 = private unnamed_addr constant [19 x i8] c"not a bzip2 file.\0A\00", align 1
@.str.87 = private unnamed_addr constant [29 x i8] c"%s: %s is not a bzip2 file.\0A\00", align 1
@fileMetaInfo = internal global %struct.stat zeroinitializer, align 8
@.str.88 = private unnamed_addr constant [27 x i8] c"decompress:bzReadGetUnused\00", align 1
@.str.90 = private unnamed_addr constant [45 x i8] c"\0A%s: %s: trailing garbage after EOF ignored\0A\00", align 1
@.str.91 = private unnamed_addr constant [28 x i8] c"decompress:unexpected error\00", align 1
@.str.93 = private unnamed_addr constant [95 x i8] c"\0A%s: Compressed file ends unexpectedly;\0A\09perhaps it is corrupted?  *Possible* reason follows.\0A\00", align 1
@.str.46 = private unnamed_addr constant [241 x i8] c"\0AIt is possible that the compressed file(s) have become corrupted.\0AYou can use the -tvv option to test integrity of such files.\0A\0AYou can use the `bzip2recover' program to attempt to recover\0Adata from undamaged sections of corrupted files.\0A\0A\00", align 1
@.str.92 = private unnamed_addr constant [47 x i8] c"\0A%s: Data integrity error when decompressing.\0A\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"compress: bad modes\0A\00", align 1
@.str.58 = private unnamed_addr constant [42 x i8] c"%s: Input file %s already has %s suffix.\0A\00", align 1
@.str.64 = private unnamed_addr constant [50 x i8] c"%s: I won't write compressed data to a terminal.\0A\00", align 1
@.str.69 = private unnamed_addr constant [22 x i8] c"compress: bad srcMode\00", align 1
@.str.73 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c" no data compressed.\0A\00", align 1
@.str.75 = private unnamed_addr constant [57 x i8] c"%6.3f:1, %6.3f bits/byte, %5.2f%% saved, %s in, %s out.\0A\00", align 1
@.str.76 = private unnamed_addr constant [26 x i8] c"compress:unexpected error\00", align 1
@.str.52 = private unnamed_addr constant [45 x i8] c"\0A%s: Control-C or similar caught, quitting.\0A\00", align 1
@.str.51 = private unnamed_addr constant [49 x i8] c"%s: %s is redundant in versions 0.9.5 and above\0A\00", align 1
@.str.50 = private unnamed_addr constant [1230 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A\0A   usage: %s [flags and input files in any order]\0A\0A   -h --help           print this message\0A   -d --decompress     force decompression\0A   -z --compress       force compression\0A   -k --keep           keep (don't delete) input files\0A   -f --force          overwrite existing output files\0A   -t --test           test compressed file integrity\0A   -c --stdout         output to standard out\0A   -q --quiet          suppress noncritical error messages\0A   -v --verbose        be verbose (a 2nd -v gives more)\0A   -L --license        display software version & license\0A   -V --version        display software version & license\0A   -s --small          use less memory (at most 2500k)\0A   -1 .. -9            set block size to 100k .. 900k\0A   --fast              alias for -1\0A   --best              alias for -9\0A\0A   If invoked as `bzip2', default action is to compress.\0A              as `bunzip2',  default action is to decompress.\0A              as `bzcat', default action is to decompress to stdout.\0A\0A   If no file names are given, bzip2 compresses or decompresses\0A   from standard input to standard output.  You can combine\0A   short flags, so `-v -4' means the same as -v4 or -4v, &c.\0A\0A\00", align 1
@.str.49 = private unnamed_addr constant [531 x i8] c"bzip2, a block-sorting file compressor.  Version %s.\0A   \0A   Copyright (C) 1996-2007 by Julian Seward.\0A   \0A   This program is free software; you can redistribute it and/or modify\0A   it under the terms set out in the LICENSE file, which is included\0A   in the bzip2-1.0.5 source distribution.\0A   \0A   This program is distributed in the hope that it will be useful,\0A   but WITHOUT ANY WARRANTY; without even the implied warranty of\0A   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\0A   LICENSE file for more details.\0A   \0A\00", align 1
@.str.47 = private unnamed_addr constant [120 x i8] c"bzip2: file name\0A`%s'\0Ais suspiciously (more than %d chars) long.\0ATry using a reasonable file name instead.  Sorry! :-)\0A\00", align 1
@.str.36 = private unnamed_addr constant [869 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst compressing.\0A\0A   Possible causes are (most likely first):\0A   (1) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (2) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (3) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (1) and (2).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (1)\0A   or (2), feel free to report it to me at: jseward@bzip.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [996 x i8] c"\0A%s: Caught a SIGSEGV or SIGBUS whilst decompressing.\0A\0A   Possible causes are (most likely first):\0A   (1) The compressed data is corrupted, and bzip2's usual checks\0A       failed to detect this.  Try bzip2 -tvv my_file.bz2.\0A   (2) This computer has unreliable memory or cache hardware\0A       (a surprisingly common problem; try a different machine.)\0A   (3) A bug in the compiler used to create this executable\0A       (unlikely, if you didn't compile bzip2 yourself.)\0A   (4) A real bug in bzip2 -- I hope this should never be the case.\0A   The user's manual, Section 4.3, has more info on (2) and (3).\0A   \0A   If you suspect this is a bug in bzip2, or are unsure about (2)\0A   or (3), feel free to report it to me at: jseward@bzip.org.\0A   Section 4.3 of the user's manual describes the info a useful\0A   bug report should have.  If the manual is available on your\0A   system, please try and read it before mailing me.  If you don't\0A   have the manual or can't be bothered to read it, mail me anyway.\0A\0A\00", align 1
@.str.105 = private unnamed_addr constant [443 x i8] c"\0A\0Abzip2/libbzip2: internal error number %d.\0AThis is a bug in bzip2/libbzip2, %s.\0APlease report it to me at: jseward@bzip.org.  If this happened\0Awhen you were using some program which uses libbzip2 as a\0Acomponent, you should also report this bug to the author(s)\0Aof that program.  Please make an effort to report this bug;\0Atimely and accurate bug reports eventually lead to higher\0Aquality software.  Thanks.  Julian Seward, 10 December 2007.\0A\0A\00", align 1
@.str.1.106 = private unnamed_addr constant [1057 x i8] c"\0A*** A special note about internal error number 1007 ***\0A\0AExperience suggests that a common cause of i.e. 1007\0Ais unreliable memory or other hardware.  The 1007 assertion\0Ajust happens to cross-check the results of huge numbers of\0Amemory reads/writes, and so acts (unintendedly) as a stress\0Atest of your memory system.\0A\0AI suggest the following: try compressing the file again,\0Apossibly monitoring progress in detail with the -vv flag.\0A\0A* If the error cannot be reproduced, and/or happens at different\0A  points in compression, you may have a flaky memory system.\0A  Try a memory-test program.  I have used Memtest86\0A  (www.memtest86.com).  At the time of writing it is free (GPLd).\0A  Memtest86 tests memory much more thorougly than your BIOSs\0A  power-on test, and may find failures that the BIOS doesn't.\0A\0A* If the error can be repeatably reproduced, this is a bug in\0A  bzip2, and I would very much like to hear about it.  Please\0A  let me know, and, ideally, save a copy of the file causing the\0A  problem -- without which I will be unable to investigate it.\0A\0A\00", align 1
@.str.5.107 = private unnamed_addr constant [19 x i8] c"1.0.5, 10-Dec-2007\00", align 1
@.str.2.108 = private unnamed_addr constant [18 x i8] c" {0x%08x, 0x%08x}\00", align 1
@.str.3.109 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.4.110 = private unnamed_addr constant [55 x i8] c"\0A    combined CRCs: stored = 0x%08x, computed = 0x%08x\00", align 1
@.str.6.126 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.7.127 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8.128 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.9.129 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@bzerrorstrings = internal global [16 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10.130, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11.131, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13.133, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.134, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.135, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.136, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17.137, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18.138, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19.139, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20.140, i32 0, i32 0)], align 16
@.str.10.130 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@.str.11.131 = private unnamed_addr constant [15 x i8] c"SEQUENCE_ERROR\00", align 1
@.str.12.132 = private unnamed_addr constant [12 x i8] c"PARAM_ERROR\00", align 1
@.str.13.133 = private unnamed_addr constant [10 x i8] c"MEM_ERROR\00", align 1
@.str.14.134 = private unnamed_addr constant [11 x i8] c"DATA_ERROR\00", align 1
@.str.15.135 = private unnamed_addr constant [17 x i8] c"DATA_ERROR_MAGIC\00", align 1
@.str.16.136 = private unnamed_addr constant [9 x i8] c"IO_ERROR\00", align 1
@.str.17.137 = private unnamed_addr constant [15 x i8] c"UNEXPECTED_EOF\00", align 1
@.str.18.138 = private unnamed_addr constant [13 x i8] c"OUTBUFF_FULL\00", align 1
@.str.19.139 = private unnamed_addr constant [13 x i8] c"CONFIG_ERROR\00", align 1
@.str.20.140 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@BZ2_crc32Table = dso_local global [256 x i32] [i32 0, i32 79764919, i32 159529838, i32 222504665, i32 319059676, i32 398814059, i32 445009330, i32 507990021, i32 638119352, i32 583659535, i32 797628118, i32 726387553, i32 890018660, i32 835552979, i32 1015980042, i32 944750013, i32 1276238704, i32 1221641927, i32 1167319070, i32 1095957929, i32 1595256236, i32 1540665371, i32 1452775106, i32 1381403509, i32 1780037320, i32 1859660671, i32 1671105958, i32 1733955601, i32 2031960084, i32 2111593891, i32 1889500026, i32 1952343757, i32 -1742489888, i32 -1662866601, i32 -1851683442, i32 -1788833735, i32 -1960329156, i32 -1880695413, i32 -2103051438, i32 -2040207643, i32 -1104454824, i32 -1159051537, i32 -1213636554, i32 -1284997759, i32 -1389417084, i32 -1444007885, i32 -1532160278, i32 -1603531939, i32 -734892656, i32 -789352409, i32 -575645954, i32 -646886583, i32 -952755380, i32 -1007220997, i32 -827056094, i32 -898286187, i32 -231047128, i32 -151282273, i32 -71779514, i32 -8804623, i32 -515967244, i32 -436212925, i32 -390279782, i32 -327299027, i32 881225847, i32 809987520, i32 1023691545, i32 969234094, i32 662832811, i32 591600412, i32 771767749, i32 717299826, i32 311336399, i32 374308984, i32 453813921, i32 533576470, i32 25881363, i32 88864420, i32 134795389, i32 214552010, i32 2023205639, i32 2086057648, i32 1897238633, i32 1976864222, i32 1804852699, i32 1867694188, i32 1645340341, i32 1724971778, i32 1587496639, i32 1516133128, i32 1461550545, i32 1406951526, i32 1302016099, i32 1230646740, i32 1142491917, i32 1087903418, i32 -1398421865, i32 -1469785312, i32 -1524105735, i32 -1578704818, i32 -1079922613, i32 -1151291908, i32 -1239184603, i32 -1293773166, i32 -1968362705, i32 -1905510760, i32 -2094067647, i32 -2014441994, i32 -1716953613, i32 -1654112188, i32 -1876203875, i32 -1796572374, i32 -525066777, i32 -462094256, i32 -382327159, i32 -302564546, i32 -206542021, i32 -143559028, i32 -97365931, i32 -17609246, i32 -960696225, i32 -1031934488, i32 -817968335, i32 -872425850, i32 -709327229, i32 -780559564, i32 -600130067, i32 -654598054, i32 1762451694, i32 1842216281, i32 1619975040, i32 1682949687, i32 2047383090, i32 2127137669, i32 1938468188, i32 2001449195, i32 1325665622, i32 1271206113, i32 1183200824, i32 1111960463, i32 1543535498, i32 1489069629, i32 1434599652, i32 1363369299, i32 622672798, i32 568075817, i32 748617968, i32 677256519, i32 907627842, i32 853037301, i32 1067152940, i32 995781531, i32 51762726, i32 131386257, i32 177728840, i32 240578815, i32 269590778, i32 349224269, i32 429104020, i32 491947555, i32 -248556018, i32 -168932423, i32 -122852000, i32 -60002089, i32 -500490030, i32 -420856475, i32 -341238852, i32 -278395381, i32 -685261898, i32 -739858943, i32 -559578920, i32 -630940305, i32 -1004286614, i32 -1058877219, i32 -845023740, i32 -916395085, i32 -1119974018, i32 -1174433591, i32 -1262701040, i32 -1333941337, i32 -1371866206, i32 -1426332139, i32 -1481064244, i32 -1552294533, i32 -1690935098, i32 -1611170447, i32 -1833673816, i32 -1770699233, i32 -2009983462, i32 -1930228819, i32 -2119160460, i32 -2056179517, i32 1569362073, i32 1498123566, i32 1409854455, i32 1355396672, i32 1317987909, i32 1246755826, i32 1192025387, i32 1137557660, i32 2072149281, i32 2135122070, i32 1912620623, i32 1992383480, i32 1753615357, i32 1816598090, i32 1627664531, i32 1707420964, i32 295390185, i32 358241886, i32 404320391, i32 483945776, i32 43990325, i32 106832002, i32 186451547, i32 266083308, i32 932423249, i32 861060070, i32 1041341759, i32 986742920, i32 613929101, i32 542559546, i32 756411363, i32 701822548, i32 -978770311, i32 -1050133554, i32 -869589737, i32 -924188512, i32 -693284699, i32 -764654318, i32 -550540341, i32 -605129092, i32 -475935807, i32 -413084042, i32 -366743377, i32 -287118056, i32 -257573603, i32 -194731862, i32 -114850189, i32 -35218492, i32 -1984365303, i32 -1921392450, i32 -2143631769, i32 -2063868976, i32 -1698919467, i32 -1635936670, i32 -1824608069, i32 -1744851700, i32 -1347415887, i32 -1418654458, i32 -1506661409, i32 -1561119128, i32 -1129027987, i32 -1200260134, i32 -1254728445, i32 -1309196108], align 16
@BZ2_rNums = dso_local global [512 x i32] [i32 619, i32 720, i32 127, i32 481, i32 931, i32 816, i32 813, i32 233, i32 566, i32 247, i32 985, i32 724, i32 205, i32 454, i32 863, i32 491, i32 741, i32 242, i32 949, i32 214, i32 733, i32 859, i32 335, i32 708, i32 621, i32 574, i32 73, i32 654, i32 730, i32 472, i32 419, i32 436, i32 278, i32 496, i32 867, i32 210, i32 399, i32 680, i32 480, i32 51, i32 878, i32 465, i32 811, i32 169, i32 869, i32 675, i32 611, i32 697, i32 867, i32 561, i32 862, i32 687, i32 507, i32 283, i32 482, i32 129, i32 807, i32 591, i32 733, i32 623, i32 150, i32 238, i32 59, i32 379, i32 684, i32 877, i32 625, i32 169, i32 643, i32 105, i32 170, i32 607, i32 520, i32 932, i32 727, i32 476, i32 693, i32 425, i32 174, i32 647, i32 73, i32 122, i32 335, i32 530, i32 442, i32 853, i32 695, i32 249, i32 445, i32 515, i32 909, i32 545, i32 703, i32 919, i32 874, i32 474, i32 882, i32 500, i32 594, i32 612, i32 641, i32 801, i32 220, i32 162, i32 819, i32 984, i32 589, i32 513, i32 495, i32 799, i32 161, i32 604, i32 958, i32 533, i32 221, i32 400, i32 386, i32 867, i32 600, i32 782, i32 382, i32 596, i32 414, i32 171, i32 516, i32 375, i32 682, i32 485, i32 911, i32 276, i32 98, i32 553, i32 163, i32 354, i32 666, i32 933, i32 424, i32 341, i32 533, i32 870, i32 227, i32 730, i32 475, i32 186, i32 263, i32 647, i32 537, i32 686, i32 600, i32 224, i32 469, i32 68, i32 770, i32 919, i32 190, i32 373, i32 294, i32 822, i32 808, i32 206, i32 184, i32 943, i32 795, i32 384, i32 383, i32 461, i32 404, i32 758, i32 839, i32 887, i32 715, i32 67, i32 618, i32 276, i32 204, i32 918, i32 873, i32 777, i32 604, i32 560, i32 951, i32 160, i32 578, i32 722, i32 79, i32 804, i32 96, i32 409, i32 713, i32 940, i32 652, i32 934, i32 970, i32 447, i32 318, i32 353, i32 859, i32 672, i32 112, i32 785, i32 645, i32 863, i32 803, i32 350, i32 139, i32 93, i32 354, i32 99, i32 820, i32 908, i32 609, i32 772, i32 154, i32 274, i32 580, i32 184, i32 79, i32 626, i32 630, i32 742, i32 653, i32 282, i32 762, i32 623, i32 680, i32 81, i32 927, i32 626, i32 789, i32 125, i32 411, i32 521, i32 938, i32 300, i32 821, i32 78, i32 343, i32 175, i32 128, i32 250, i32 170, i32 774, i32 972, i32 275, i32 999, i32 639, i32 495, i32 78, i32 352, i32 126, i32 857, i32 956, i32 358, i32 619, i32 580, i32 124, i32 737, i32 594, i32 701, i32 612, i32 669, i32 112, i32 134, i32 694, i32 363, i32 992, i32 809, i32 743, i32 168, i32 974, i32 944, i32 375, i32 748, i32 52, i32 600, i32 747, i32 642, i32 182, i32 862, i32 81, i32 344, i32 805, i32 988, i32 739, i32 511, i32 655, i32 814, i32 334, i32 249, i32 515, i32 897, i32 955, i32 664, i32 981, i32 649, i32 113, i32 974, i32 459, i32 893, i32 228, i32 433, i32 837, i32 553, i32 268, i32 926, i32 240, i32 102, i32 654, i32 459, i32 51, i32 686, i32 754, i32 806, i32 760, i32 493, i32 403, i32 415, i32 394, i32 687, i32 700, i32 946, i32 670, i32 656, i32 610, i32 738, i32 392, i32 760, i32 799, i32 887, i32 653, i32 978, i32 321, i32 576, i32 617, i32 626, i32 502, i32 894, i32 679, i32 243, i32 440, i32 680, i32 879, i32 194, i32 572, i32 640, i32 724, i32 926, i32 56, i32 204, i32 700, i32 707, i32 151, i32 457, i32 449, i32 797, i32 195, i32 791, i32 558, i32 945, i32 679, i32 297, i32 59, i32 87, i32 824, i32 713, i32 663, i32 412, i32 693, i32 342, i32 606, i32 134, i32 108, i32 571, i32 364, i32 631, i32 212, i32 174, i32 643, i32 304, i32 329, i32 343, i32 97, i32 430, i32 751, i32 497, i32 314, i32 983, i32 374, i32 822, i32 928, i32 140, i32 206, i32 73, i32 263, i32 980, i32 736, i32 876, i32 478, i32 430, i32 305, i32 170, i32 514, i32 364, i32 692, i32 829, i32 82, i32 855, i32 953, i32 676, i32 246, i32 369, i32 970, i32 294, i32 750, i32 807, i32 827, i32 150, i32 790, i32 288, i32 923, i32 804, i32 378, i32 215, i32 828, i32 592, i32 281, i32 565, i32 555, i32 710, i32 82, i32 896, i32 831, i32 547, i32 261, i32 524, i32 462, i32 293, i32 465, i32 502, i32 56, i32 661, i32 821, i32 976, i32 991, i32 658, i32 869, i32 905, i32 758, i32 745, i32 193, i32 768, i32 550, i32 608, i32 933, i32 378, i32 286, i32 215, i32 979, i32 792, i32 961, i32 61, i32 688, i32 793, i32 644, i32 986, i32 403, i32 106, i32 366, i32 905, i32 644, i32 372, i32 567, i32 466, i32 434, i32 645, i32 210, i32 389, i32 550, i32 919, i32 135, i32 780, i32 773, i32 635, i32 389, i32 707, i32 100, i32 626, i32 958, i32 165, i32 504, i32 920, i32 176, i32 193, i32 713, i32 857, i32 265, i32 203, i32 50, i32 668, i32 108, i32 645, i32 990, i32 626, i32 197, i32 510, i32 357, i32 358, i32 850, i32 858, i32 364, i32 936, i32 638], align 16
@.str.147 = private unnamed_addr constant [62 x i8] c"    block %d: crc = 0x%08x, combined CRC = 0x%08x, size = %d\0A\00", align 1
@.str.1.148 = private unnamed_addr constant [36 x i8] c"    final combined CRC = 0x%08x\0A   \00", align 1
@.str.2.149 = private unnamed_addr constant [64 x i8] c"      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use\0A\00", align 1
@.str.3.150 = private unnamed_addr constant [59 x i8] c"      initial group %d, [%d .. %d], has %d syms (%4.1f%%)\0A\00", align 1
@.str.4.151 = private unnamed_addr constant [41 x i8] c"      pass %d: size is %d, grp uses are \00", align 1
@.str.5.152 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str.6.153 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7.154 = private unnamed_addr constant [26 x i8] c"      bytes: mapping %d, \00", align 1
@.str.8.155 = private unnamed_addr constant [15 x i8] c"selectors %d, \00", align 1
@.str.9.156 = private unnamed_addr constant [18 x i8] c"code lengths %d, \00", align 1
@.str.10.157 = private unnamed_addr constant [10 x i8] c"codes %d\0A\00", align 1
@.str.160 = private unnamed_addr constant [20 x i8] c"\0A    [%d: huff+mtf \00", align 1
@.str.1.161 = private unnamed_addr constant [7 x i8] c"rt+rld\00", align 1
@.str.164 = private unnamed_addr constant [38 x i8] c"      %d work, %d block, ratio %5.2f\0A\00", align 1
@.str.1.165 = private unnamed_addr constant [54 x i8] c"    too repetitive; using fallback sorting algorithm\0A\00", align 1
@.str.6.166 = private unnamed_addr constant [34 x i8] c"        main sort initialise ...\0A\00", align 1
@.str.2.167 = private unnamed_addr constant [28 x i8] c"        bucket sorting ...\0A\00", align 1
@.str.7.168 = private unnamed_addr constant [48 x i8] c"        qsort [0x%x, 0x%x]   done %d   this %d\0A\00", align 1
@.str.8.169 = private unnamed_addr constant [44 x i8] c"        %d pointers, %d sorted, %d scanned\0A\00", align 1
@incs = internal global [14 x i32] [i32 1, i32 4, i32 13, i32 40, i32 121, i32 364, i32 1093, i32 3280, i32 9841, i32 29524, i32 88573, i32 265720, i32 797161, i32 2391484], align 16
@.str.3.170 = private unnamed_addr constant [23 x i8] c"        depth %6d has \00", align 1
@.str.4.171 = private unnamed_addr constant [24 x i8] c"%6d unresolved strings\0A\00", align 1
@.str.5.172 = private unnamed_addr constant [34 x i8] c"        reconstructing block ...\0A\00", align 1
@0 = private constant [5 x i8] c"bzip2"
@1 = private constant [5 x i8] c"-fkqs"
@2 = private constant [9 x i8] c"huffman.c"
@__argv_new__ = global i8** null, !track !6
@3 = constant [7 x i8] c"(none)\00"
@4 = constant [7 x i8] c"(none)\00"
@5 = constant [6 x i8] c"bzip2\00"
@6 = constant [6 x i8] c"-fkqs\00"
@7 = constant [10 x i8] c"huffman.c\00"
@8 = constant [6 x i8] c"-fkqs\00"
@9 = constant [3 x i8] c"--\00"
@10 = constant [10 x i8] c"huffman.c\00"
@11 = constant [3 x i8] c"--\00"
@12 = constant [10 x i8] c"huffman.c\00"
@13 = constant [10 x i8] c"huffman.c\00"
@14 = constant [6 x i8] c"-fkqs\00"
@15 = constant [3 x i8] c"--\00"
@16 = constant [10 x i8] c"huffman.c\00"
@17 = constant [3 x i8] c"--\00"
@18 = constant [6 x i8] c"-fkqs\00"
@19 = constant [3 x i8] c"--\00"
@20 = constant [6 x i8] c"-fkqs\00"
@21 = constant [9 x i8] c"--stdout\00"
@22 = constant [6 x i8] c"-fkqs\00"
@23 = constant [13 x i8] c"--decompress\00"
@24 = constant [6 x i8] c"-fkqs\00"
@25 = constant [11 x i8] c"--compress\00"
@26 = constant [6 x i8] c"-fkqs\00"
@27 = constant [8 x i8] c"--force\00"
@28 = constant [6 x i8] c"-fkqs\00"
@29 = constant [7 x i8] c"--test\00"
@30 = constant [6 x i8] c"-fkqs\00"
@31 = constant [7 x i8] c"--keep\00"
@32 = constant [6 x i8] c"-fkqs\00"
@33 = constant [8 x i8] c"--small\00"
@34 = constant [6 x i8] c"-fkqs\00"
@35 = constant [8 x i8] c"--quiet\00"
@36 = constant [6 x i8] c"-fkqs\00"
@37 = constant [10 x i8] c"--version\00"
@38 = constant [6 x i8] c"-fkqs\00"
@39 = constant [10 x i8] c"--license\00"
@40 = constant [6 x i8] c"-fkqs\00"
@41 = constant [14 x i8] c"--exponential\00"
@42 = constant [6 x i8] c"-fkqs\00"
@43 = constant [18 x i8] c"--repetitive-best\00"
@44 = constant [6 x i8] c"-fkqs\00"
@45 = constant [18 x i8] c"--repetitive-fast\00"
@46 = constant [6 x i8] c"-fkqs\00"
@47 = constant [7 x i8] c"--fast\00"
@48 = constant [6 x i8] c"-fkqs\00"
@49 = constant [7 x i8] c"--best\00"
@50 = constant [6 x i8] c"-fkqs\00"
@51 = constant [10 x i8] c"--verbose\00"
@52 = constant [6 x i8] c"-fkqs\00"
@53 = constant [7 x i8] c"--help\00"
@54 = constant [6 x i8] c"-fkqs\00"
@55 = constant [3 x i8] c"--\00"
@56 = constant [10 x i8] c"huffman.c\00"
@57 = constant [3 x i8] c"--\00"
@58 = constant [10 x i8] c"huffman.c\00"
@59 = constant [9 x i8] c"--stdout\00"
@60 = constant [10 x i8] c"huffman.c\00"
@61 = constant [13 x i8] c"--decompress\00"
@62 = constant [10 x i8] c"huffman.c\00"
@63 = constant [11 x i8] c"--compress\00"
@64 = constant [10 x i8] c"huffman.c\00"
@65 = constant [8 x i8] c"--force\00"
@66 = constant [10 x i8] c"huffman.c\00"
@67 = constant [7 x i8] c"--test\00"
@68 = constant [10 x i8] c"huffman.c\00"
@69 = constant [7 x i8] c"--keep\00"
@70 = constant [10 x i8] c"huffman.c\00"
@71 = constant [8 x i8] c"--small\00"
@72 = constant [10 x i8] c"huffman.c\00"
@73 = constant [8 x i8] c"--quiet\00"
@74 = constant [10 x i8] c"huffman.c\00"
@75 = constant [10 x i8] c"--version\00"
@76 = constant [10 x i8] c"huffman.c\00"
@77 = constant [10 x i8] c"--license\00"
@78 = constant [10 x i8] c"huffman.c\00"
@79 = constant [14 x i8] c"--exponential\00"
@80 = constant [10 x i8] c"huffman.c\00"
@81 = constant [18 x i8] c"--repetitive-best\00"
@82 = constant [10 x i8] c"huffman.c\00"
@83 = constant [18 x i8] c"--repetitive-fast\00"
@84 = constant [10 x i8] c"huffman.c\00"
@85 = constant [7 x i8] c"--fast\00"
@86 = constant [10 x i8] c"huffman.c\00"
@87 = constant [7 x i8] c"--best\00"
@88 = constant [10 x i8] c"huffman.c\00"
@89 = constant [10 x i8] c"--verbose\00"
@90 = constant [10 x i8] c"huffman.c\00"
@91 = constant [7 x i8] c"--help\00"
@92 = constant [10 x i8] c"huffman.c\00"
@93 = constant [3 x i8] c"--\00"
@94 = constant [6 x i8] c"-fkqs\00"
@95 = constant [3 x i8] c"--\00"
@96 = constant [10 x i8] c"huffman.c\00"
@97 = constant [3 x i8] c"--\00"
@98 = constant [10 x i8] c"huffman.c\00"
@99 = constant [10 x i8] c"huffman.c\00"

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63, %42
  %lsr.iv8 = phi [1034 x i8]* [ bitcast (i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1) to [1034 x i8]*), %.lr.ph63 ], [ %46, %42 ]
  %lsr.iv810 = bitcast [1034 x i8]* %lsr.iv8 to i8*
  %scevgep11 = getelementptr i8, i8* %lsr.iv810, i64 -1
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* %scevgep11, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp eq i32 %39, 47
  br i1 %40, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* %lsr.iv810, i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %37, %41
  %43 = load i8, i8* %lsr.iv810, align 1
  %44 = sext i8 %43 to i32
  %45 = icmp ne i32 %44, 0
  %scevgep9 = getelementptr [1034 x i8], [1034 x i8]* %lsr.iv8, i64 0, i64 1
  %46 = bitcast i8* %scevgep9 to [1034 x i8]*
  br i1 %45, label %37, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %42
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %47 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar(%struct.zzzz** %22, i8* %47)
  %48 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar(%struct.zzzz** %22, i8* %48)
  %49 = sub nsw i32 3, 1, !track_argc !10
  %50 = icmp sle i32 1, %49
  br i1 %50, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader, %.lr.ph57
  %lsr.iv5 = phi i64 [ 0, %.lr.ph57.preheader ], [ %lsr.iv.next6, %.lr.ph57 ]
  call void @unroll_loop(i32 1)
  %51 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %52 = load i8*, i8** %scevgep7, align 8
  %53 = call %struct.zzzz* @snocString(%struct.zzzz* %51, i8* %52)
  store %struct.zzzz* %53, %struct.zzzz** %22, align 8
  %lsr.iv.next6 = add nuw nsw i64 %lsr.iv5, 1
  %exitcond = icmp ne i64 %lsr.iv.next6, 2
  br i1 %exitcond, label %.lr.ph57, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %54 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %55 = icmp ne %struct.zzzz* %54, null
  br i1 %55, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %.lr.ph53.preheader, %83
  %.051 = phi i8 [ %.1, %83 ], [ 1, %.lr.ph53.preheader ]
  %.0149 = phi %struct.zzzz* [ %85, %83 ], [ %54, %.lr.ph53.preheader ]
  call void @unroll_loop(i32 2)
  %56 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %83, label %60

; <label>:60:                                     ; preds = %.lr.ph53
  %61 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp eq i32 %65, 45
  %67 = zext i8 %.051 to i32
  %68 = icmp ne i32 %67, 0
  %or.cond = and i1 %66, %68
  br i1 %or.cond, label %83, label %69

; <label>:69:                                     ; preds = %60
  %70 = load i32, i32* @numFileNames, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* @numFileNames, align 4
  %72 = load i32, i32* @longestFileName, align 4
  %73 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = call i64 @strlen(i8* %74) #10
  %76 = trunc i64 %75 to i32
  %77 = icmp slt i32 %72, %76
  br i1 %77, label %78, label %83

; <label>:78:                                     ; preds = %69
  %79 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = call i64 @strlen(i8* %80) #10
  %82 = trunc i64 %81 to i32
  store i32 %82, i32* @longestFileName, align 4
  br label %83

; <label>:83:                                     ; preds = %69, %78, %60, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ %.051, %60 ], [ %.051, %78 ], [ %.051, %69 ]
  %84 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 1
  %85 = load %struct.zzzz*, %struct.zzzz** %84, align 8
  %86 = icmp ne %struct.zzzz* %85, null
  br i1 %86, label %.lr.ph53, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %83
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %87 = load i32, i32* @numFileNames, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %91

; <label>:90:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %91

; <label>:91:                                     ; preds = %90, %89
  store i32 1, i32* @opMode, align 4
  %92 = load i8*, i8** @progName, align 8
  %93 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %94 = call i8* @strstr(i8* %92, i8* %93) #10, !track !11
  %95 = icmp ne i8* %94, null
  br i1 %95, label %101, label %96

; <label>:96:                                     ; preds = %91
  %97 = load i8*, i8** @progName, align 8
  %98 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %99 = call i8* @strstr(i8* %97, i8* %98) #10, !track !12
  %100 = icmp ne i8* %99, null
  br i1 %100, label %101, label %102

; <label>:101:                                    ; preds = %96, %91
  store i32 2, i32* @opMode, align 4
  br label %102

; <label>:102:                                    ; preds = %101, %96
  %103 = load i8*, i8** @progName, align 8
  %104 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %105 = call i8* @strstr(i8* %103, i8* %104) #10, !track !13
  %106 = icmp ne i8* %105, null
  br i1 %106, label %122, label %107

; <label>:107:                                    ; preds = %102
  %108 = load i8*, i8** @progName, align 8
  %109 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %110 = call i8* @strstr(i8* %108, i8* %109) #10, !track !14
  %111 = icmp ne i8* %110, null
  br i1 %111, label %122, label %112

; <label>:112:                                    ; preds = %107
  %113 = load i8*, i8** @progName, align 8
  %114 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %115 = call i8* @strstr(i8* %113, i8* %114) #10, !track !15
  %116 = icmp ne i8* %115, null
  br i1 %116, label %122, label %117

; <label>:117:                                    ; preds = %112
  %118 = load i8*, i8** @progName, align 8
  %119 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %120 = call i8* @strstr(i8* %118, i8* %119) #10, !track !16
  %121 = icmp ne i8* %120, null
  br i1 %121, label %122, label %127

; <label>:122:                                    ; preds = %117, %112, %107, %102
  store i32 2, i32* @opMode, align 4
  %123 = load i32, i32* @numFileNames, align 4
  %124 = icmp eq i32 %123, 0
  %125 = zext i1 %124 to i64
  %126 = select i1 %124, i32 1, i32 2
  store i32 %126, i32* @srcMode, align 4
  br label %127

; <label>:127:                                    ; preds = %122, %117
  %128 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %129 = icmp ne %struct.zzzz* %128, null
  br i1 %129, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %127
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %.lr.ph48.preheader, %._crit_edge43
  %.1244 = phi %struct.zzzz* [ %196, %._crit_edge43 ], [ %128, %.lr.ph48.preheader ]
  call void @unroll_loop(i32 3)
  %130 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = call i32 @strcmp(i8* %131, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %.loopexit17.loopexit, label %134

; <label>:134:                                    ; preds = %.lr.ph48
  %135 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 0
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %139, 45
  br i1 %140, label %141, label %._crit_edge43

; <label>:141:                                    ; preds = %134
  %142 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 1
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp ne i32 %146, 45
  br i1 %147, label %148, label %._crit_edge43

; <label>:148:                                    ; preds = %141
  %149 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 1
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %148
  %155 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %.lr.ph42.preheader, %190
  %lsr.iv = phi i64 [ 0, %.lr.ph42.preheader ], [ %lsr.iv.next, %190 ]
  call void @unroll_loop(i32 4)
  %156 = load i8*, i8** %155, align 8
  %scevgep = getelementptr i8, i8* %156, i64 1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %157 = load i8, i8* %scevgep1, align 1
  %158 = sext i8 %157 to i32
  switch i32 %158, label %182 [
    i32 99, label %159
    i32 100, label %160
    i32 122, label %161
    i32 102, label %162
    i32 116, label %163
    i32 107, label %164
    i32 115, label %165
    i32 113, label %166
    i32 49, label %167
    i32 50, label %168
    i32 51, label %169
    i32 52, label %170
    i32 53, label %171
    i32 54, label %172
    i32 55, label %173
    i32 56, label %174
    i32 57, label %175
    i32 86, label %176
    i32 76, label %176
    i32 118, label %177
    i32 104, label %180
  ]

; <label>:159:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %190

; <label>:160:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %190

; <label>:161:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %190

; <label>:162:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %190

; <label>:163:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %190

; <label>:164:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %190

; <label>:165:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %190

; <label>:166:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %190

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %190

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %190

; <label>:169:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %190

; <label>:170:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %190

; <label>:171:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %190

; <label>:172:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %190

; <label>:173:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %190

; <label>:174:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %190

; <label>:175:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %190

; <label>:176:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %190

; <label>:177:                                    ; preds = %.lr.ph42
  %178 = load i32, i32* @verbosity, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* @verbosity, align 4
  br label %190

; <label>:180:                                    ; preds = %.lr.ph42
  %181 = load i8*, i8** @progName, align 8
  call void @usage(i8* %181)
  call void @exit(i32 0) #11
  unreachable

; <label>:182:                                    ; preds = %.lr.ph42
  %.12.lcssa15 = phi %struct.zzzz* [ %.1244, %.lr.ph42 ]
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %184 = load i8*, i8** @progName, align 8
  %185 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %183, i8* %187, i8* %184, i8* %186)
  %189 = load i8*, i8** @progName, align 8
  call void @usage(i8* %189)
  call void @exit(i32 1) #11
  unreachable

; <label>:190:                                    ; preds = %159, %160, %161, %162, %163, %164, %165, %166, %167, %168, %169, %170, %171, %172, %173, %174, %175, %176, %177
  %191 = load i8*, i8** %149, align 8
  %scevgep2 = getelementptr i8, i8* %191, i64 2
  %scevgep3 = getelementptr i8, i8* %scevgep2, i64 %lsr.iv
  %192 = load i8, i8* %scevgep3, align 1
  %193 = sext i8 %192 to i32
  %194 = icmp ne i32 %193, 0
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %194, label %.lr.ph42, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %190
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %134, %141, %148
  %.1245 = phi %struct.zzzz* [ %.1244, %141 ], [ %.1244, %134 ], [ %.1244, %148 ], [ %.1244, %._crit_edge43.loopexit ]
  %195 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1245, i32 0, i32 1
  %196 = load %struct.zzzz*, %struct.zzzz** %195, align 8
  %197 = icmp ne %struct.zzzz* %196, null
  br i1 %197, label %.lr.ph48, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %.lr.ph48, %._crit_edge43
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %127
  %198 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %199 = icmp ne %struct.zzzz* %198, null
  br i1 %199, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %.lr.ph39.preheader, %322
  %.2337 = phi %struct.zzzz* [ %324, %322 ], [ %198, %.lr.ph39.preheader ]
  call void @unroll_loop(i32 5)
  %200 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  %202 = call i32 @strcmp(i8* %201, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %.loopexit.loopexit, label %204

; <label>:204:                                    ; preds = %.lr.ph39
  %205 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  %207 = call i32 @strcmp(i8* %206, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

; <label>:209:                                    ; preds = %204
  store i32 2, i32* @srcMode, align 4
  br label %322

; <label>:210:                                    ; preds = %204
  %211 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = call i32 @strcmp(i8* %212, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

; <label>:215:                                    ; preds = %210
  store i32 2, i32* @opMode, align 4
  br label %322

; <label>:216:                                    ; preds = %210
  %217 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = call i32 @strcmp(i8* %218, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

; <label>:221:                                    ; preds = %216
  store i32 1, i32* @opMode, align 4
  br label %322

; <label>:222:                                    ; preds = %216
  %223 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = call i32 @strcmp(i8* %224, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

; <label>:227:                                    ; preds = %222
  store i8 1, i8* @forceOverwrite, align 1
  br label %322

; <label>:228:                                    ; preds = %222
  %229 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8
  %231 = call i32 @strcmp(i8* %230, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

; <label>:233:                                    ; preds = %228
  store i32 3, i32* @opMode, align 4
  br label %322

; <label>:234:                                    ; preds = %228
  %235 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  %237 = call i32 @strcmp(i8* %236, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

; <label>:239:                                    ; preds = %234
  store i8 1, i8* @keepInputFiles, align 1
  br label %322

; <label>:240:                                    ; preds = %234
  %241 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = call i32 @strcmp(i8* %242, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

; <label>:245:                                    ; preds = %240
  store i8 1, i8* @smallMode, align 1
  br label %322

; <label>:246:                                    ; preds = %240
  %247 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = call i32 @strcmp(i8* %248, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

; <label>:251:                                    ; preds = %246
  store i8 0, i8* @noisy, align 1
  br label %322

; <label>:252:                                    ; preds = %246
  %253 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = call i32 @strcmp(i8* %254, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

; <label>:257:                                    ; preds = %252
  call void @license()
  br label %322

; <label>:258:                                    ; preds = %252
  %259 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = call i32 @strcmp(i8* %260, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

; <label>:263:                                    ; preds = %258
  call void @license()
  br label %322

; <label>:264:                                    ; preds = %258
  %265 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8
  %267 = call i32 @strcmp(i8* %266, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

; <label>:269:                                    ; preds = %264
  store i32 1, i32* @workFactor, align 4
  br label %322

; <label>:270:                                    ; preds = %264
  %271 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = call i32 @strcmp(i8* %272, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  br i1 %274, label %277, label %278

; <label>:277:                                    ; preds = %270
  call void @redundant(i8* %276)
  br label %322

; <label>:278:                                    ; preds = %270
  %279 = call i32 @strcmp(i8* %276, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  br i1 %280, label %283, label %284

; <label>:283:                                    ; preds = %278
  call void @redundant(i8* %282)
  br label %322

; <label>:284:                                    ; preds = %278
  %285 = call i32 @strcmp(i8* %282, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

; <label>:287:                                    ; preds = %284
  store i32 1, i32* @blockSize100k, align 4
  br label %322

; <label>:288:                                    ; preds = %284
  %289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = call i32 @strcmp(i8* %290, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

; <label>:293:                                    ; preds = %288
  store i32 9, i32* @blockSize100k, align 4
  br label %322

; <label>:294:                                    ; preds = %288
  %295 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %296 = load i8*, i8** %295, align 8
  %297 = call i32 @strcmp(i8* %296, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %302

; <label>:299:                                    ; preds = %294
  %300 = load i32, i32* @verbosity, align 4
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* @verbosity, align 4
  br label %322

; <label>:302:                                    ; preds = %294
  %303 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %304 = load i8*, i8** %303, align 8
  %305 = call i32 @strcmp(i8* %304, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %309

; <label>:307:                                    ; preds = %302
  %308 = load i8*, i8** @progName, align 8
  call void @usage(i8* %308)
  call void @exit(i32 0) #11
  unreachable

; <label>:309:                                    ; preds = %302
  %310 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = call i32 @strncmp(i8* %311, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %322

; <label>:314:                                    ; preds = %309
  %.23.lcssa13 = phi %struct.zzzz* [ %.2337, %309 ]
  %315 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %316 = load i8*, i8** @progName, align 8
  %317 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %318 = load i8*, i8** %317, align 8
  %319 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %320 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %315, i8* %319, i8* %316, i8* %318)
  %321 = load i8*, i8** @progName, align 8
  call void @usage(i8* %321)
  call void @exit(i32 1) #11
  unreachable

; <label>:322:                                    ; preds = %209, %221, %233, %245, %257, %269, %283, %293, %309, %299, %287, %277, %263, %251, %239, %227, %215
  %323 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 1
  %324 = load %struct.zzzz*, %struct.zzzz** %323, align 8
  %325 = icmp ne %struct.zzzz* %324, null
  br i1 %325, label %.lr.ph39, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph39, %322
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %326 = load i32, i32* @verbosity, align 4
  %327 = icmp sgt i32 %326, 4
  br i1 %327, label %328, label %329

; <label>:328:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %329

; <label>:329:                                    ; preds = %328, %.loopexit
  %330 = load i32, i32* @opMode, align 4
  %331 = icmp eq i32 %330, 1
  br i1 %331, label %332, label %339

; <label>:332:                                    ; preds = %329
  %333 = load i8, i8* @smallMode, align 1
  %334 = zext i8 %333 to i32
  %335 = icmp ne i32 %334, 0
  %336 = load i32, i32* @blockSize100k, align 4
  %337 = icmp sgt i32 %336, 2
  %or.cond3 = and i1 %335, %337
  br i1 %or.cond3, label %338, label %339

; <label>:338:                                    ; preds = %332
  store i32 2, i32* @blockSize100k, align 4
  br label %339

; <label>:339:                                    ; preds = %338, %332, %329
  %340 = load i32, i32* @opMode, align 4
  %341 = icmp eq i32 %340, 3
  %342 = load i32, i32* @srcMode, align 4
  %343 = icmp eq i32 %342, 2
  %or.cond5 = and i1 %341, %343
  br i1 %or.cond5, label %344, label %349

; <label>:344:                                    ; preds = %339
  %345 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %346 = load i8*, i8** @progName, align 8
  %347 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %348 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %345, i8* %347, i8* %346)
  call void @exit(i32 1) #11
  unreachable

; <label>:349:                                    ; preds = %339
  %350 = load i32, i32* @srcMode, align 4
  %351 = icmp eq i32 %350, 2
  %352 = load i32, i32* @numFileNames, align 4
  %353 = icmp eq i32 %352, 0
  %or.cond7 = and i1 %351, %353
  br i1 %or.cond7, label %354, label %355

; <label>:354:                                    ; preds = %349
  store i32 1, i32* @srcMode, align 4
  br label %355

; <label>:355:                                    ; preds = %354, %349
  %356 = load i32, i32* @opMode, align 4
  %357 = icmp ne i32 %356, 1
  br i1 %357, label %358, label %359

; <label>:358:                                    ; preds = %355
  store i32 0, i32* @blockSize100k, align 4
  br label %359

; <label>:359:                                    ; preds = %358, %355
  %360 = load i32, i32* @srcMode, align 4
  %361 = icmp eq i32 %360, 3
  br i1 %361, label %362, label %366

; <label>:362:                                    ; preds = %359
  %363 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %364 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %365 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %366

; <label>:366:                                    ; preds = %362, %359
  %367 = load i32, i32* @opMode, align 4
  %368 = icmp eq i32 %367, 1
  br i1 %368, label %369, label %398

; <label>:369:                                    ; preds = %366
  %370 = load i32, i32* @srcMode, align 4
  %371 = icmp eq i32 %370, 1
  br i1 %371, label %372, label %373

; <label>:372:                                    ; preds = %369
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:373:                                    ; preds = %369
  %374 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %375 = icmp ne %struct.zzzz* %374, null
  br i1 %375, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %373
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %.lr.ph23.preheader, %394
  %.221 = phi i8 [ %.3, %394 ], [ 1, %.lr.ph23.preheader ]
  %.3419 = phi %struct.zzzz* [ %396, %394 ], [ %374, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 6)
  %376 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %377 = load i8*, i8** %376, align 8
  %378 = call i32 @strcmp(i8* %377, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %394, label %380

; <label>:380:                                    ; preds = %.lr.ph23
  %381 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = getelementptr inbounds i8, i8* %382, i64 0
  %384 = load i8, i8* %383, align 1
  %385 = sext i8 %384 to i32
  %386 = icmp eq i32 %385, 45
  %387 = zext i8 %.221 to i32
  %388 = icmp ne i32 %387, 0
  %or.cond9 = and i1 %386, %388
  br i1 %or.cond9, label %394, label %389

; <label>:389:                                    ; preds = %380
  %390 = load i32, i32* @numFilesProcessed, align 4
  %391 = add nsw i32 %390, 1
  store i32 %391, i32* @numFilesProcessed, align 4
  %392 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %393 = load i8*, i8** %392, align 8
  call void @compress(i8* %393)
  br label %394

; <label>:394:                                    ; preds = %380, %.lr.ph23, %389
  %.3 = phi i8 [ %.221, %389 ], [ 0, %.lr.ph23 ], [ %.221, %380 ]
  %395 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 1
  %396 = load %struct.zzzz*, %struct.zzzz** %395, align 8
  %397 = icmp ne %struct.zzzz* %396, null
  br i1 %397, label %.lr.ph23, label %._crit_edge24.loopexit

; <label>:398:                                    ; preds = %366
  %399 = load i32, i32* @opMode, align 4
  %400 = icmp eq i32 %399, 2
  br i1 %400, label %401, label %434

; <label>:401:                                    ; preds = %398
  store i8 0, i8* @unzFailsExist, align 1
  %402 = load i32, i32* @srcMode, align 4
  %403 = icmp eq i32 %402, 1
  br i1 %403, label %404, label %405

; <label>:404:                                    ; preds = %401
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:405:                                    ; preds = %401
  %406 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %407 = icmp ne %struct.zzzz* %406, null
  br i1 %407, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %405
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %.lr.ph29.preheader, %426
  %.427 = phi i8 [ %.5, %426 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %428, %426 ], [ %406, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %408 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %409 = load i8*, i8** %408, align 8
  %410 = call i32 @strcmp(i8* %409, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %426, label %412

; <label>:412:                                    ; preds = %.lr.ph29
  %413 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %414 = load i8*, i8** %413, align 8
  %415 = getelementptr inbounds i8, i8* %414, i64 0
  %416 = load i8, i8* %415, align 1
  %417 = sext i8 %416 to i32
  %418 = icmp eq i32 %417, 45
  %419 = zext i8 %.427 to i32
  %420 = icmp ne i32 %419, 0
  %or.cond11 = and i1 %418, %420
  br i1 %or.cond11, label %426, label %421

; <label>:421:                                    ; preds = %412
  %422 = load i32, i32* @numFilesProcessed, align 4
  %423 = add nsw i32 %422, 1
  store i32 %423, i32* @numFilesProcessed, align 4
  %424 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %425 = load i8*, i8** %424, align 8
  call void @uncompress(i8* %425)
  br label %426

; <label>:426:                                    ; preds = %412, %.lr.ph29, %421
  %.5 = phi i8 [ %.427, %421 ], [ 0, %.lr.ph29 ], [ %.427, %412 ]
  %427 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %428 = load %struct.zzzz*, %struct.zzzz** %427, align 8
  %429 = icmp ne %struct.zzzz* %428, null
  br i1 %429, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %426
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %405, %404
  %430 = load i8, i8* @unzFailsExist, align 1
  %431 = icmp ne i8 %430, 0
  br i1 %431, label %432, label %._crit_edge24

; <label>:432:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %433 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %433) #11
  unreachable

; <label>:434:                                    ; preds = %398
  store i8 0, i8* @testFailsExist, align 1
  %435 = load i32, i32* @srcMode, align 4
  %436 = icmp eq i32 %435, 1
  br i1 %436, label %437, label %438

; <label>:437:                                    ; preds = %434
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:438:                                    ; preds = %434
  %439 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %440 = icmp ne %struct.zzzz* %439, null
  br i1 %440, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %438
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %.lr.ph35.preheader, %459
  %.633 = phi i8 [ %.7, %459 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %461, %459 ], [ %439, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %441 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %442 = load i8*, i8** %441, align 8
  %443 = call i32 @strcmp(i8* %442, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %459, label %445

; <label>:445:                                    ; preds = %.lr.ph35
  %446 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %447 = load i8*, i8** %446, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 0
  %449 = load i8, i8* %448, align 1
  %450 = sext i8 %449 to i32
  %451 = icmp eq i32 %450, 45
  %452 = zext i8 %.633 to i32
  %453 = icmp ne i32 %452, 0
  %or.cond13 = and i1 %451, %453
  br i1 %or.cond13, label %459, label %454

; <label>:454:                                    ; preds = %445
  %455 = load i32, i32* @numFilesProcessed, align 4
  %456 = add nsw i32 %455, 1
  store i32 %456, i32* @numFilesProcessed, align 4
  %457 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %458 = load i8*, i8** %457, align 8
  call void @testf(i8* %458)
  br label %459

; <label>:459:                                    ; preds = %445, %.lr.ph35, %454
  %.7 = phi i8 [ %.633, %454 ], [ 0, %.lr.ph35 ], [ %.633, %445 ]
  %460 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %461 = load %struct.zzzz*, %struct.zzzz** %460, align 8
  %462 = icmp ne %struct.zzzz* %461, null
  br i1 %462, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %459
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %438, %437
  %463 = load i8, i8* @testFailsExist, align 1
  %464 = zext i8 %463 to i32
  %465 = icmp ne i32 %464, 0
  br i1 %465, label %466, label %._crit_edge24

; <label>:466:                                    ; preds = %._crit_edge36
  %467 = load i8, i8* @noisy, align 1
  %468 = zext i8 %467 to i32
  %469 = icmp ne i32 %468, 0
  br i1 %469, label %470, label %._crit_edge24

; <label>:470:                                    ; preds = %466
  %471 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %472 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %473 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %471, i8* %472)
  call void @setExit(i32 2)
  %474 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %474) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %394
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %._crit_edge30, %466, %._crit_edge36, %372, %373
  %475 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %476 = icmp ne %struct.zzzz* %475, null
  br i1 %476, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %485
  %.6718 = phi %struct.zzzz* [ %478, %485 ], [ %475, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %478 = load %struct.zzzz*, %struct.zzzz** %477, align 8
  %479 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %480 = load i8*, i8** %479, align 8
  %481 = icmp ne i8* %480, null
  br i1 %481, label %482, label %485

; <label>:482:                                    ; preds = %.lr.ph
  %483 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %484 = load i8*, i8** %483, align 8
  call void @free(i8* %484) #9
  br label %485

; <label>:485:                                    ; preds = %482, %.lr.ph
  %486 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %486) #9
  %487 = icmp ne %struct.zzzz* %478, null
  br i1 %487, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %485
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %488 = load i32, i32* @exitValue, align 4
  ret i32 %488
}

; Function Attrs: noinline nounwind uwtable
define internal void @mySIGSEGVorSIGBUScatcher(i32) #0 {
  %2 = load i32, i32* @opMode, align 4
  %3 = icmp eq i32 %2, 1
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = load i8*, i8** @progName, align 8
  br i1 %3, label %6, label %9

; <label>:6:                                      ; preds = %1
  %7 = getelementptr [869 x i8], [869 x i8]* @.str.36, i32 0, i32 0
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %7, i8* %5)
  br label %12

; <label>:9:                                      ; preds = %1
  %10 = getelementptr [996 x i8], [996 x i8]* @.str.37, i32 0, i32 0
  %11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %10, i8* %5)
  br label %12

; <label>:12:                                     ; preds = %9, %6
  call void @showFileNames()
  %13 = load i32, i32* @opMode, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %12
  call void @cleanUpAndFail(i32 3) #12
  unreachable

; <label>:16:                                     ; preds = %12
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @copyFileName(i8*, i8*) #0 {
  %3 = call i64 @strlen(i8* %1) #10
  %4 = icmp ugt i64 %3, 1024
  br i1 %4, label %5, label %10

; <label>:5:                                      ; preds = %2
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = getelementptr [120 x i8], [120 x i8]* @.str.47, i32 0, i32 0
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* %7, i8* %1, i32 1024)
  call void @setExit(i32 1)
  %9 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %9) #11
  unreachable

; <label>:10:                                     ; preds = %2
  %11 = call i8* @strncpy(i8* %0, i8* %1, i64 1024) #9, !track !17
  %12 = getelementptr inbounds i8, i8* %0, i64 1024
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @addFlagsFromEnvVar(%struct.zzzz**, i8*) #0 {
  %3 = call i8* @getenv(i8* %1) #9
  %4 = icmp ne i8* %3, null
  br i1 %4, label %5, label %._crit_edge12

; <label>:5:                                      ; preds = %2
  %6 = load i8, i8* %3, align 1
  %7 = sext i8 %6 to i32
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %._crit_edge12, label %.lr.ph11.preheader

.lr.ph11.preheader:                               ; preds = %5
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %.lr.ph11.preheader, %54
  %.09 = phi i8* [ %.1.lcssa, %54 ], [ %3, %.lr.ph11.preheader ]
  %.028 = phi i32 [ %41, %54 ], [ 0, %.lr.ph11.preheader ]
  call void @unroll_loop(i32 11)
  %9 = sext i32 %.028 to i64
  %10 = call i16** @__ctype_b_loc() #13
  %11 = load i16*, i16** %10, align 8
  %scevgep = getelementptr i8, i8* %.09, i64 -1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %9
  br label %12

; <label>:12:                                     ; preds = %12, %.lr.ph11
  %lsr.iv = phi i8* [ %scevgep2, %12 ], [ %scevgep1, %.lr.ph11 ]
  %scevgep3 = getelementptr i8, i8* %lsr.iv, i64 1
  %13 = load i8, i8* %scevgep3, align 1
  %14 = sext i8 %13 to i32
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i16, i16* %11, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = zext i16 %17 to i32
  %19 = and i32 %18, 8192
  %20 = icmp ne i32 %19, 0
  %scevgep2 = getelementptr i8, i8* %lsr.iv, i64 1
  br i1 %20, label %12, label %21

; <label>:21:                                     ; preds = %12
  %.1.lcssa = phi i8* [ %scevgep2, %12 ]
  br label %22

; <label>:22:                                     ; preds = %38, %21
  %lsr.iv4 = phi i64 [ %lsr.iv.next, %38 ], [ -1, %21 ]
  %scevgep7 = getelementptr i8, i8* %.1.lcssa, i64 %lsr.iv4
  %scevgep8 = getelementptr i8, i8* %scevgep7, i64 1
  %23 = load i8, i8* %scevgep8, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %38

; <label>:26:                                     ; preds = %22
  %27 = call i16** @__ctype_b_loc() #13
  %28 = load i16*, i16** %27, align 8
  %scevgep5 = getelementptr i8, i8* %.1.lcssa, i64 %lsr.iv4
  %scevgep6 = getelementptr i8, i8* %scevgep5, i64 1
  %29 = load i8, i8* %scevgep6, align 1
  %30 = sext i8 %29 to i32
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i16, i16* %28, i64 %31
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 8192
  %36 = icmp ne i32 %35, 0
  %37 = xor i1 %36, true
  br label %38

; <label>:38:                                     ; preds = %26, %22
  %39 = phi i1 [ false, %22 ], [ %37, %26 ]
  %lsr.iv.next = add i64 %lsr.iv4, 1
  br i1 %39, label %22, label %40

; <label>:40:                                     ; preds = %38
  %.13.lcssa.wide = phi i64 [ %lsr.iv.next, %38 ]
  %41 = trunc i64 %.13.lcssa.wide to i32
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %54

; <label>:43:                                     ; preds = %40
  %44 = icmp sgt i32 %41, 1024
  %spec.select = select i1 %44, i32 1024, i32 %41
  %45 = icmp slt i32 0, %spec.select
  br i1 %45, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %43
  %46 = sext i32 %spec.select to i64
  br label %47

; <label>:47:                                     ; preds = %.lr.ph, %47
  %indvars.iv6 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next7, %47 ]
  %indvars.iv610 = inttoptr i64 %indvars.iv6 to i8*
  %scevgep9 = getelementptr i8, i8* %.1.lcssa, i64 %indvars.iv6
  %48 = load i8, i8* %scevgep9, align 1
  %scevgep11 = getelementptr [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %indvars.iv6
  store i8 %48, i8* %scevgep11, align 1
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %49 = icmp slt i64 %indvars.iv.next7, %46
  br i1 %49, label %47, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %47
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %43
  %50 = sext i32 %spec.select to i64
  %51 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %50
  store i8 0, i8* %51, align 1
  %52 = load %struct.zzzz*, %struct.zzzz** %0, align 8
  %53 = call %struct.zzzz* @snocString(%struct.zzzz* %52, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 0))
  store %struct.zzzz* %53, %struct.zzzz** %0, align 8
  br label %54

; <label>:54:                                     ; preds = %._crit_edge, %40
  %55 = sext i32 %41 to i64
  %56 = getelementptr inbounds i8, i8* %.1.lcssa, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %._crit_edge12.loopexit, label %.lr.ph11

._crit_edge12.loopexit:                           ; preds = %54
  br label %._crit_edge12

._crit_edge12:                                    ; preds = %._crit_edge12.loopexit, %5, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @snocString(%struct.zzzz*, i8*) #2 {
  %3 = icmp eq %struct.zzzz* %0, null
  br i1 %3, label %4, label %14

; <label>:4:                                      ; preds = %2
  %5 = call %struct.zzzz* @mkCell()
  %6 = call i64 @strlen(i8* %1) #10
  %7 = add i64 5, %6
  %8 = trunc i64 %7 to i32
  %9 = call i8* @myMalloc(i32 %8)
  %10 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = call i8* @strcpy(i8* %12, i8* %1) #9, !track !18
  br label %27

; <label>:14:                                     ; preds = %2
  %15 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %0, i32 0, i32 1
  %16 = load %struct.zzzz*, %struct.zzzz** %15, align 8
  %17 = icmp ne %struct.zzzz* %16, null
  br i1 %17, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %14
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.012 = phi %struct.zzzz* [ %19, %.lr.ph ], [ %0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 12)
  %18 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.012, i32 0, i32 1
  %19 = load %struct.zzzz*, %struct.zzzz** %18, align 8
  %20 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %19, i32 0, i32 1
  %21 = load %struct.zzzz*, %struct.zzzz** %20, align 8
  %22 = icmp ne %struct.zzzz* %21, null
  br i1 %22, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.01.lcssa.ph = phi %struct.zzzz* [ %19, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %14
  %.01.lcssa = phi %struct.zzzz* [ %0, %14 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %23 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  %24 = load %struct.zzzz*, %struct.zzzz** %23, align 8
  %25 = call %struct.zzzz* @snocString(%struct.zzzz* %24, i8* %1)
  %26 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  store %struct.zzzz* %25, %struct.zzzz** %26, align 8
  br label %27

; <label>:27:                                     ; preds = %._crit_edge, %4
  %.0 = phi %struct.zzzz* [ %5, %4 ], [ %0, %._crit_edge ]
  ret %struct.zzzz* %.0
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @license() #0 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = call i8* @BZ2_bzlibVersion()
  %3 = getelementptr [531 x i8], [531 x i8]* @.str.49, i32 0, i32 0
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @usage(i8*) #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = call i8* @BZ2_bzlibVersion()
  %4 = getelementptr [1230 x i8], [1230 x i8]* @.str.50, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i8* %3, i8* %0)
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #4

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #5

; Function Attrs: noinline nounwind uwtable
define internal void @redundant(i8*) #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = load i8*, i8** @progName, align 8
  %4 = getelementptr [49 x i8], [49 x i8]* @.str.51, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i8* %3, i8* %0)
  ret void
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal void @mySignalCatcher(i32) #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = load i8*, i8** @progName, align 8
  %4 = getelementptr [45 x i8], [45 x i8]* @.str.52, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i8* %3)
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @compress(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !19
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %3 = icmp eq i8* %0, null
  %4 = load i32, i32* @srcMode, align 4
  %5 = icmp ne i32 %4, 1
  %or.cond = and i1 %3, %5
  br i1 %or.cond, label %6, label %8

; <label>:6:                                      ; preds = %1
  %7 = getelementptr [21 x i8], [21 x i8]* @.str.53, i32 0, i32 0
  call void @panic(i8* %7) #12
  unreachable

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @srcMode, align 4
  switch i32 %9, label %25 [
    i32 1, label %10
    i32 3, label %15
    i32 2, label %21
  ]

; <label>:10:                                     ; preds = %8
  %11 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %12 = getelementptr [8 x i8], [8 x i8]* @.str.54, i32 0, i32 0
  call void @copyFileName(i8* %11, i8* %12)
  %13 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %14 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %13, i8* %14)
  br label %25

; <label>:15:                                     ; preds = %8
  %16 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %16, i8* %0)
  %17 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @copyFileName(i8* %17, i8* %0)
  %18 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %19 = getelementptr [5 x i8], [5 x i8]* @.str, i32 0, i32 0
  %20 = call i8* @strcat(i8* %18, i8* %19) #9, !track !20
  br label %25

; <label>:21:                                     ; preds = %8
  %22 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %22, i8* %0)
  %23 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %24 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %23, i8* %24)
  br label %25

; <label>:25:                                     ; preds = %8, %21, %15, %10
  %26 = load i32, i32* @srcMode, align 4
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %28, label %43

; <label>:28:                                     ; preds = %25
  %29 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %30 = call zeroext i8 @containsDubiousChars(i8* %29)
  %31 = zext i8 %30 to i32
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %43

; <label>:33:                                     ; preds = %28
  %34 = load i8, i8* @noisy, align 1
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %36, label %42

; <label>:36:                                     ; preds = %33
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %38 = load i8*, i8** @progName, align 8
  %39 = getelementptr [39 x i8], [39 x i8]* @.str.56, i32 0, i32 0
  %40 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %41 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %39, i8* %38, i8* %40)
  br label %42

; <label>:42:                                     ; preds = %36, %33
  call void @setExit(i32 1)
  br label %280

; <label>:43:                                     ; preds = %28, %25
  %44 = load i32, i32* @srcMode, align 4
  %45 = icmp ne i32 %44, 1
  br i1 %45, label %46, label %59

; <label>:46:                                     ; preds = %43
  %47 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %48 = call zeroext i8 @fileExists(i8* %47)
  %49 = icmp ne i8 %48, 0
  br i1 %49, label %59, label %50

; <label>:50:                                     ; preds = %46
  %51 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %52 = load i8*, i8** @progName, align 8
  %53 = call i32* @__errno_location() #13
  %54 = load i32, i32* %53, align 4
  %55 = call i8* @strerror(i32 %54) #9, !track !21
  %56 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %57 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %58 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %51, i8* %56, i8* %52, i8* %57, i8* %55)
  call void @setExit(i32 1)
  br label %280

; <label>:59:                                     ; preds = %46, %43
  br label %60

; <label>:60:                                     ; preds = %59, %80
  %indvars.iv = phi i64 [ 0, %59 ], [ %indvars.iv.next, %80 ]
  call void @unroll_loop(i32 13)
  %61 = shl i64 %indvars.iv, 3
  %62 = inttoptr i64 %61 to i8**
  %uglygep = getelementptr i8, i8* bitcast ([4 x i8*]* @zSuffix to i8*), i64 %61
  %uglygep1 = bitcast i8* %uglygep to i8**
  %63 = load i8*, i8** %uglygep1, align 8
  %64 = call zeroext i8 @hasSuffix(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %63)
  %65 = icmp ne i8 %64, 0
  br i1 %65, label %66, label %80

; <label>:66:                                     ; preds = %60
  %.0.lcssa3.wide = phi i64 [ %indvars.iv, %60 ]
  %67 = trunc i64 %.0.lcssa3.wide to i32
  %68 = load i8, i8* @noisy, align 1
  %69 = icmp ne i8 %68, 0
  br i1 %69, label %70, label %79

; <label>:70:                                     ; preds = %66
  %71 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %72 = load i8*, i8** @progName, align 8
  %73 = sext i32 %67 to i64
  %74 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %73
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr [42 x i8], [42 x i8]* @.str.58, i32 0, i32 0
  %77 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %71, i8* %76, i8* %72, i8* %77, i8* %75)
  br label %79

; <label>:79:                                     ; preds = %70, %66
  call void @setExit(i32 1)
  br label %280

; <label>:80:                                     ; preds = %60
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %81 = icmp ult i64 %indvars.iv.next, 4
  br i1 %81, label %60, label %82

; <label>:82:                                     ; preds = %80
  %83 = load i32, i32* @srcMode, align 4
  %84 = icmp eq i32 %83, 3
  %85 = load i32, i32* @srcMode, align 4
  %86 = icmp eq i32 %85, 2
  %or.cond3 = or i1 %84, %86
  br i1 %or.cond3, label %87, label %100

; <label>:87:                                     ; preds = %82
  %88 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %89 = call i32 @stat64(i8* %88, %struct.stat* %2) #9
  %90 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 61440
  %93 = icmp eq i32 %92, 16384
  br i1 %93, label %94, label %100

; <label>:94:                                     ; preds = %87
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %96 = load i8*, i8** @progName, align 8
  %97 = getelementptr [35 x i8], [35 x i8]* @.str.59, i32 0, i32 0
  %98 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* %97, i8* %96, i8* %98)
  call void @setExit(i32 1)
  br label %280

; <label>:100:                                    ; preds = %87, %82
  %101 = load i32, i32* @srcMode, align 4
  %102 = icmp ne i32 %101, 3
  %103 = load i8, i8* @forceOverwrite, align 1
  %104 = icmp ne i8 %103, 0
  %or.cond5 = or i1 %102, %104
  br i1 %or.cond5, label %120, label %105

; <label>:105:                                    ; preds = %100
  %106 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %107 = call zeroext i8 @notAStandardFile(i8* %106)
  %108 = zext i8 %107 to i32
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %110, label %120

; <label>:110:                                    ; preds = %105
  %111 = load i8, i8* @noisy, align 1
  %112 = icmp ne i8 %111, 0
  br i1 %112, label %113, label %119

; <label>:113:                                    ; preds = %110
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %115 = load i8*, i8** @progName, align 8
  %116 = getelementptr [41 x i8], [41 x i8]* @.str.60, i32 0, i32 0
  %117 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %114, i8* %116, i8* %115, i8* %117)
  br label %119

; <label>:119:                                    ; preds = %113, %110
  call void @setExit(i32 1)
  br label %280

; <label>:120:                                    ; preds = %100, %105
  %121 = load i32, i32* @srcMode, align 4
  %122 = icmp eq i32 %121, 3
  br i1 %122, label %123, label %140

; <label>:123:                                    ; preds = %120
  %124 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %125 = call zeroext i8 @fileExists(i8* %124)
  %126 = zext i8 %125 to i32
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %128, label %140

; <label>:128:                                    ; preds = %123
  %129 = load i8, i8* @forceOverwrite, align 1
  %130 = icmp ne i8 %129, 0
  br i1 %130, label %131, label %134

; <label>:131:                                    ; preds = %128
  %132 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %133 = call i32 @remove(i8* %132) #9
  br label %140

; <label>:134:                                    ; preds = %128
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %136 = load i8*, i8** @progName, align 8
  %137 = getelementptr [36 x i8], [36 x i8]* @.str.61, i32 0, i32 0
  %138 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %139 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %135, i8* %137, i8* %136, i8* %138)
  call void @setExit(i32 1)
  br label %280

; <label>:140:                                    ; preds = %131, %123, %120
  %141 = load i32, i32* @srcMode, align 4
  %142 = icmp ne i32 %141, 3
  %143 = load i8, i8* @forceOverwrite, align 1
  %144 = icmp ne i8 %143, 0
  %or.cond7 = or i1 %142, %144
  br i1 %or.cond7, label %160, label %145

; <label>:145:                                    ; preds = %140
  %146 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %147 = call i32 @countHardLinks(i8* %146)
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %149, label %160

; <label>:149:                                    ; preds = %145
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %151 = load i8*, i8** @progName, align 8
  %152 = icmp sgt i32 %147, 1
  %153 = zext i1 %152 to i64
  %154 = getelementptr [2 x i8], [2 x i8]* @.str.63, i32 0, i32 0
  %155 = getelementptr [1 x i8], [1 x i8]* @.str.4, i32 0, i32 0
  %156 = select i1 %152, i8* %154, i8* %155
  %157 = getelementptr [40 x i8], [40 x i8]* @.str.62, i32 0, i32 0
  %158 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %159 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %150, i8* %157, i8* %151, i8* %158, i32 %147, i8* %156)
  call void @setExit(i32 1)
  br label %280

; <label>:160:                                    ; preds = %140, %145
  %161 = load i32, i32* @srcMode, align 4
  %162 = icmp eq i32 %161, 3
  br i1 %162, label %163, label %165

; <label>:163:                                    ; preds = %160
  %164 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @saveInputFileMetaInfo(i8* %164)
  br label %165

; <label>:165:                                    ; preds = %163, %160
  %166 = load i32, i32* @srcMode, align 4
  switch i32 %166, label %254 [
    i32 1, label %167
    i32 2, label %184
    i32 3, label %218
  ]

; <label>:167:                                    ; preds = %165
  %168 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %171 = call i32 @fileno(%struct._IO_FILE* %170) #9
  %172 = call i32 @isatty(i32 %171) #9
  %173 = icmp ne i32 %172, 0
  br i1 %173, label %174, label %256

; <label>:174:                                    ; preds = %167
  %175 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %176 = load i8*, i8** @progName, align 8
  %177 = getelementptr [50 x i8], [50 x i8]* @.str.64, i32 0, i32 0
  %178 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %175, i8* %177, i8* %176)
  %179 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %180 = load i8*, i8** @progName, align 8
  %181 = load i8*, i8** @progName, align 8
  %182 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %183 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %179, i8* %182, i8* %180, i8* %181)
  call void @setExit(i32 1)
  br label %280

; <label>:184:                                    ; preds = %165
  %185 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %186 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %187 = call %struct._IO_FILE* @fopen64(i8* %185, i8* %186), !track !22
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %190 = call i32 @fileno(%struct._IO_FILE* %189) #9
  %191 = call i32 @isatty(i32 %190) #9
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %193, label %207

; <label>:193:                                    ; preds = %184
  %194 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %195 = load i8*, i8** @progName, align 8
  %196 = getelementptr [50 x i8], [50 x i8]* @.str.64, i32 0, i32 0
  %197 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %194, i8* %196, i8* %195)
  %198 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %199 = load i8*, i8** @progName, align 8
  %200 = load i8*, i8** @progName, align 8
  %201 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %202 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %198, i8* %201, i8* %199, i8* %200)
  %203 = icmp ne %struct._IO_FILE* %187, null
  br i1 %203, label %204, label %206

; <label>:204:                                    ; preds = %193
  %205 = call i32 @fclose(%struct._IO_FILE* %187)
  br label %206

; <label>:206:                                    ; preds = %204, %193
  call void @setExit(i32 1)
  br label %280

; <label>:207:                                    ; preds = %184
  %208 = icmp eq %struct._IO_FILE* %187, null
  br i1 %208, label %209, label %256

; <label>:209:                                    ; preds = %207
  %210 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %211 = load i8*, i8** @progName, align 8
  %212 = call i32* @__errno_location() #13
  %213 = load i32, i32* %212, align 4
  %214 = call i8* @strerror(i32 %213) #9, !track !23
  %215 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %216 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %217 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %210, i8* %215, i8* %211, i8* %216, i8* %214)
  call void @setExit(i32 1)
  br label %280

; <label>:218:                                    ; preds = %165
  %219 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %220 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %221 = call %struct._IO_FILE* @fopen64(i8* %219, i8* %220), !track !24
  %222 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %223 = getelementptr [3 x i8], [3 x i8]* @.str.67, i32 0, i32 0
  %224 = call %struct._IO_FILE* @fopen_output_safely(i8* %222, i8* %223)
  %225 = icmp eq %struct._IO_FILE* %224, null
  br i1 %225, label %226, label %239

; <label>:226:                                    ; preds = %218
  %227 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %228 = load i8*, i8** @progName, align 8
  %229 = call i32* @__errno_location() #13
  %230 = load i32, i32* %229, align 4
  %231 = call i8* @strerror(i32 %230) #9, !track !25
  %232 = getelementptr [38 x i8], [38 x i8]* @.str.68, i32 0, i32 0
  %233 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %234 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %227, i8* %232, i8* %228, i8* %233, i8* %231)
  %235 = icmp ne %struct._IO_FILE* %221, null
  br i1 %235, label %236, label %238

; <label>:236:                                    ; preds = %226
  %237 = call i32 @fclose(%struct._IO_FILE* %221)
  br label %238

; <label>:238:                                    ; preds = %236, %226
  call void @setExit(i32 1)
  br label %280

; <label>:239:                                    ; preds = %218
  %240 = icmp eq %struct._IO_FILE* %221, null
  br i1 %240, label %241, label %256

; <label>:241:                                    ; preds = %239
  %242 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %243 = load i8*, i8** @progName, align 8
  %244 = call i32* @__errno_location() #13
  %245 = load i32, i32* %244, align 4
  %246 = call i8* @strerror(i32 %245) #9, !track !26
  %247 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %248 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %249 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %242, i8* %247, i8* %243, i8* %248, i8* %246)
  %250 = icmp ne %struct._IO_FILE* %224, null
  br i1 %250, label %251, label %253

; <label>:251:                                    ; preds = %241
  %252 = call i32 @fclose(%struct._IO_FILE* %224)
  br label %253

; <label>:253:                                    ; preds = %251, %241
  call void @setExit(i32 1)
  br label %280

; <label>:254:                                    ; preds = %165
  %255 = getelementptr [22 x i8], [22 x i8]* @.str.69, i32 0, i32 0
  call void @panic(i8* %255) #12
  unreachable

; <label>:256:                                    ; preds = %239, %207, %167
  %.02 = phi %struct._IO_FILE* [ %169, %167 ], [ %188, %207 ], [ %224, %239 ]
  %.01 = phi %struct._IO_FILE* [ %168, %167 ], [ %187, %207 ], [ %221, %239 ]
  %257 = load i32, i32* @verbosity, align 4
  %258 = icmp sge i32 %257, 1
  br i1 %258, label %259, label %267

; <label>:259:                                    ; preds = %256
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %261 = getelementptr [7 x i8], [7 x i8]* @.str.70, i32 0, i32 0
  %262 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %263 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %260, i8* %261, i8* %262)
  %264 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @pad(i8* %264)
  %265 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %266 = call i32 @fflush(%struct._IO_FILE* %265)
  br label %267

; <label>:267:                                    ; preds = %259, %256
  store %struct._IO_FILE* %.02, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  call void @compressStream(%struct._IO_FILE* %.01, %struct._IO_FILE* %.02)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %268 = load i32, i32* @srcMode, align 4
  %269 = icmp eq i32 %268, 3
  br i1 %269, label %270, label %279

; <label>:270:                                    ; preds = %267
  %271 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @applySavedTimeInfoToOutputFile(i8* %271)
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %272 = load i8, i8* @keepInputFiles, align 1
  %273 = icmp ne i8 %272, 0
  br i1 %273, label %279, label %274

; <label>:274:                                    ; preds = %270
  %275 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %276 = call i32 @remove(i8* %275) #9
  %277 = icmp ne i32 %276, 0
  br i1 %277, label %278, label %279

; <label>:278:                                    ; preds = %274
  call void @ioError() #12
  unreachable

; <label>:279:                                    ; preds = %270, %274, %267
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  br label %280

; <label>:280:                                    ; preds = %279, %253, %238, %209, %206, %174, %149, %134, %119, %94, %79, %50, %42
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @uncompress(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !27
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %3 = icmp eq i8* %0, null
  %4 = load i32, i32* @srcMode, align 4
  %5 = icmp ne i32 %4, 1
  %or.cond = and i1 %3, %5
  br i1 %or.cond, label %6, label %8

; <label>:6:                                      ; preds = %1
  %7 = getelementptr [23 x i8], [23 x i8]* @.str.79, i32 0, i32 0
  call void @panic(i8* %7) #12
  unreachable

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @srcMode, align 4
  switch i32 %9, label %.loopexit [
    i32 1, label %10
    i32 3, label %15
    i32 2, label %31
  ]

; <label>:10:                                     ; preds = %8
  %11 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %12 = getelementptr [8 x i8], [8 x i8]* @.str.54, i32 0, i32 0
  call void @copyFileName(i8* %11, i8* %12)
  %13 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %14 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %13, i8* %14)
  br label %.loopexit

; <label>:15:                                     ; preds = %8
  %16 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %16, i8* %0)
  %17 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @copyFileName(i8* %17, i8* %0)
  br label %18

; <label>:18:                                     ; preds = %15, %25
  %indvars.iv = phi i64 [ 0, %15 ], [ %indvars.iv.next, %25 ]
  call void @unroll_loop(i32 14)
  %19 = shl i64 %indvars.iv, 3
  %20 = inttoptr i64 %19 to i8**
  %uglygep = getelementptr i8, i8* bitcast ([4 x i8*]* @zSuffix to i8*), i64 %19
  %uglygep1 = bitcast i8* %uglygep to i8**
  %21 = load i8*, i8** %uglygep1, align 8
  %uglygep2 = getelementptr i8, i8* bitcast ([4 x i8*]* @unzSuffix to i8*), i64 %19
  %uglygep23 = bitcast i8* %uglygep2 to i8**
  %22 = load i8*, i8** %uglygep23, align 8
  %23 = call zeroext i8 @mapSuffix(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @outName, i64 0, i64 0), i8* %21, i8* %22)
  %24 = icmp ne i8 %23, 0
  br i1 %24, label %.loopexit.loopexit, label %25

; <label>:25:                                     ; preds = %18
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %26 = icmp ult i64 %indvars.iv.next, 4
  br i1 %26, label %18, label %27

; <label>:27:                                     ; preds = %25
  %28 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %29 = getelementptr [5 x i8], [5 x i8]* @.str.80, i32 0, i32 0
  %30 = call i8* @strcat(i8* %28, i8* %29) #9, !track !28
  br label %.loopexit

; <label>:31:                                     ; preds = %8
  %32 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %32, i8* %0)
  %33 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %34 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %33, i8* %34)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %18
  %.1.ph = phi i8 [ 0, %18 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %10, %27, %31, %8
  %.1 = phi i8 [ 0, %8 ], [ 0, %31 ], [ 1, %27 ], [ 0, %10 ], [ %.1.ph, %.loopexit.loopexit ]
  %35 = load i32, i32* @srcMode, align 4
  %36 = icmp ne i32 %35, 1
  br i1 %36, label %37, label %52

; <label>:37:                                     ; preds = %.loopexit
  %38 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %39 = call zeroext i8 @containsDubiousChars(i8* %38)
  %40 = zext i8 %39 to i32
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %52

; <label>:42:                                     ; preds = %37
  %43 = load i8, i8* @noisy, align 1
  %44 = icmp ne i8 %43, 0
  br i1 %44, label %45, label %51

; <label>:45:                                     ; preds = %42
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %47 = load i8*, i8** @progName, align 8
  %48 = getelementptr [39 x i8], [39 x i8]* @.str.56, i32 0, i32 0
  %49 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %50 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %48, i8* %47, i8* %49)
  br label %51

; <label>:51:                                     ; preds = %45, %42
  call void @setExit(i32 1)
  br label %289

; <label>:52:                                     ; preds = %37, %.loopexit
  %53 = load i32, i32* @srcMode, align 4
  %54 = icmp ne i32 %53, 1
  br i1 %54, label %55, label %68

; <label>:55:                                     ; preds = %52
  %56 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %57 = call zeroext i8 @fileExists(i8* %56)
  %58 = icmp ne i8 %57, 0
  br i1 %58, label %68, label %59

; <label>:59:                                     ; preds = %55
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %61 = load i8*, i8** @progName, align 8
  %62 = call i32* @__errno_location() #13
  %63 = load i32, i32* %62, align 4
  %64 = call i8* @strerror(i32 %63) #9, !track !29
  %65 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %66 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %67 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %60, i8* %65, i8* %61, i8* %66, i8* %64)
  call void @setExit(i32 1)
  br label %289

; <label>:68:                                     ; preds = %55, %52
  %69 = load i32, i32* @srcMode, align 4
  %70 = icmp eq i32 %69, 3
  %71 = load i32, i32* @srcMode, align 4
  %72 = icmp eq i32 %71, 2
  %or.cond3 = or i1 %70, %72
  br i1 %or.cond3, label %73, label %86

; <label>:73:                                     ; preds = %68
  %74 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %75 = call i32 @stat64(i8* %74, %struct.stat* %2) #9
  %76 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 61440
  %79 = icmp eq i32 %78, 16384
  br i1 %79, label %80, label %86

; <label>:80:                                     ; preds = %73
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %82 = load i8*, i8** @progName, align 8
  %83 = getelementptr [35 x i8], [35 x i8]* @.str.59, i32 0, i32 0
  %84 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* %83, i8* %82, i8* %84)
  call void @setExit(i32 1)
  br label %289

; <label>:86:                                     ; preds = %73, %68
  %87 = load i32, i32* @srcMode, align 4
  %88 = icmp ne i32 %87, 3
  %89 = load i8, i8* @forceOverwrite, align 1
  %90 = icmp ne i8 %89, 0
  %or.cond5 = or i1 %88, %90
  br i1 %or.cond5, label %106, label %91

; <label>:91:                                     ; preds = %86
  %92 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %93 = call zeroext i8 @notAStandardFile(i8* %92)
  %94 = zext i8 %93 to i32
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %106

; <label>:96:                                     ; preds = %91
  %97 = load i8, i8* @noisy, align 1
  %98 = icmp ne i8 %97, 0
  br i1 %98, label %99, label %105

; <label>:99:                                     ; preds = %96
  %100 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %101 = load i8*, i8** @progName, align 8
  %102 = getelementptr [41 x i8], [41 x i8]* @.str.60, i32 0, i32 0
  %103 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %104 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %100, i8* %102, i8* %101, i8* %103)
  br label %105

; <label>:105:                                    ; preds = %99, %96
  call void @setExit(i32 1)
  br label %289

; <label>:106:                                    ; preds = %86, %91
  %107 = icmp ne i8 %.1, 0
  %108 = load i8, i8* @noisy, align 1
  %109 = icmp ne i8 %108, 0
  %or.cond9 = and i1 %107, %109
  br i1 %or.cond9, label %110, label %117

; <label>:110:                                    ; preds = %106
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %112 = load i8*, i8** @progName, align 8
  %113 = getelementptr [50 x i8], [50 x i8]* @.str.81, i32 0, i32 0
  %114 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %115 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %116 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* %113, i8* %112, i8* %114, i8* %115)
  br label %117

; <label>:117:                                    ; preds = %110, %106
  %118 = load i32, i32* @srcMode, align 4
  %119 = icmp eq i32 %118, 3
  br i1 %119, label %120, label %137

; <label>:120:                                    ; preds = %117
  %121 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %122 = call zeroext i8 @fileExists(i8* %121)
  %123 = zext i8 %122 to i32
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %125, label %137

; <label>:125:                                    ; preds = %120
  %126 = load i8, i8* @forceOverwrite, align 1
  %127 = icmp ne i8 %126, 0
  br i1 %127, label %128, label %131

; <label>:128:                                    ; preds = %125
  %129 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %130 = call i32 @remove(i8* %129) #9
  br label %137

; <label>:131:                                    ; preds = %125
  %132 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %133 = load i8*, i8** @progName, align 8
  %134 = getelementptr [36 x i8], [36 x i8]* @.str.61, i32 0, i32 0
  %135 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %136 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %132, i8* %134, i8* %133, i8* %135)
  call void @setExit(i32 1)
  br label %289

; <label>:137:                                    ; preds = %128, %120, %117
  %138 = load i32, i32* @srcMode, align 4
  %139 = icmp ne i32 %138, 3
  %140 = load i8, i8* @forceOverwrite, align 1
  %141 = icmp ne i8 %140, 0
  %or.cond7 = or i1 %139, %141
  br i1 %or.cond7, label %157, label %142

; <label>:142:                                    ; preds = %137
  %143 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %144 = call i32 @countHardLinks(i8* %143)
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %146, label %157

; <label>:146:                                    ; preds = %142
  %147 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %148 = load i8*, i8** @progName, align 8
  %149 = icmp sgt i32 %144, 1
  %150 = zext i1 %149 to i64
  %151 = getelementptr [2 x i8], [2 x i8]* @.str.63, i32 0, i32 0
  %152 = getelementptr [1 x i8], [1 x i8]* @.str.4, i32 0, i32 0
  %153 = select i1 %149, i8* %151, i8* %152
  %154 = getelementptr [40 x i8], [40 x i8]* @.str.62, i32 0, i32 0
  %155 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %156 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %147, i8* %154, i8* %148, i8* %155, i32 %144, i8* %153)
  call void @setExit(i32 1)
  br label %289

; <label>:157:                                    ; preds = %137, %142
  %158 = load i32, i32* @srcMode, align 4
  %159 = icmp eq i32 %158, 3
  br i1 %159, label %160, label %162

; <label>:160:                                    ; preds = %157
  %161 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @saveInputFileMetaInfo(i8* %161)
  br label %162

; <label>:162:                                    ; preds = %160, %157
  %163 = load i32, i32* @srcMode, align 4
  switch i32 %163, label %232 [
    i32 1, label %164
    i32 2, label %181
    i32 3, label %196
  ]

; <label>:164:                                    ; preds = %162
  %165 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %166 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %168 = call i32 @fileno(%struct._IO_FILE* %167) #9
  %169 = call i32 @isatty(i32 %168) #9
  %170 = icmp ne i32 %169, 0
  br i1 %170, label %171, label %234

; <label>:171:                                    ; preds = %164
  %172 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %173 = load i8*, i8** @progName, align 8
  %174 = getelementptr [51 x i8], [51 x i8]* @.str.82, i32 0, i32 0
  %175 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %172, i8* %174, i8* %173)
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %177 = load i8*, i8** @progName, align 8
  %178 = load i8*, i8** @progName, align 8
  %179 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %180 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %176, i8* %179, i8* %177, i8* %178)
  call void @setExit(i32 1)
  br label %289

; <label>:181:                                    ; preds = %162
  %182 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %183 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %184 = call %struct._IO_FILE* @fopen64(i8* %182, i8* %183), !track !30
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %186 = icmp eq %struct._IO_FILE* %184, null
  br i1 %186, label %187, label %234

; <label>:187:                                    ; preds = %181
  %188 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %189 = load i8*, i8** @progName, align 8
  %190 = call i32* @__errno_location() #13
  %191 = load i32, i32* %190, align 4
  %192 = call i8* @strerror(i32 %191) #9, !track !31
  %193 = getelementptr [34 x i8], [34 x i8]* @.str.83, i32 0, i32 0
  %194 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %195 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %188, i8* %193, i8* %189, i8* %194, i8* %192)
  call void @setExit(i32 1)
  br label %289

; <label>:196:                                    ; preds = %162
  %197 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %198 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %199 = call %struct._IO_FILE* @fopen64(i8* %197, i8* %198), !track !32
  %200 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %201 = getelementptr [3 x i8], [3 x i8]* @.str.67, i32 0, i32 0
  %202 = call %struct._IO_FILE* @fopen_output_safely(i8* %200, i8* %201)
  %203 = icmp eq %struct._IO_FILE* %202, null
  br i1 %203, label %204, label %217

; <label>:204:                                    ; preds = %196
  %205 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %206 = load i8*, i8** @progName, align 8
  %207 = call i32* @__errno_location() #13
  %208 = load i32, i32* %207, align 4
  %209 = call i8* @strerror(i32 %208) #9, !track !33
  %210 = getelementptr [38 x i8], [38 x i8]* @.str.68, i32 0, i32 0
  %211 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %212 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %205, i8* %210, i8* %206, i8* %211, i8* %209)
  %213 = icmp ne %struct._IO_FILE* %199, null
  br i1 %213, label %214, label %216

; <label>:214:                                    ; preds = %204
  %215 = call i32 @fclose(%struct._IO_FILE* %199)
  br label %216

; <label>:216:                                    ; preds = %214, %204
  call void @setExit(i32 1)
  br label %289

; <label>:217:                                    ; preds = %196
  %218 = icmp eq %struct._IO_FILE* %199, null
  br i1 %218, label %219, label %234

; <label>:219:                                    ; preds = %217
  %220 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %221 = load i8*, i8** @progName, align 8
  %222 = call i32* @__errno_location() #13
  %223 = load i32, i32* %222, align 4
  %224 = call i8* @strerror(i32 %223) #9, !track !34
  %225 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %226 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %227 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %220, i8* %225, i8* %221, i8* %226, i8* %224)
  %228 = icmp ne %struct._IO_FILE* %202, null
  br i1 %228, label %229, label %231

; <label>:229:                                    ; preds = %219
  %230 = call i32 @fclose(%struct._IO_FILE* %202)
  br label %231

; <label>:231:                                    ; preds = %229, %219
  call void @setExit(i32 1)
  br label %289

; <label>:232:                                    ; preds = %162
  %233 = getelementptr [24 x i8], [24 x i8]* @.str.84, i32 0, i32 0
  call void @panic(i8* %233) #12
  unreachable

; <label>:234:                                    ; preds = %217, %181, %164
  %.02 = phi %struct._IO_FILE* [ %166, %164 ], [ %185, %181 ], [ %202, %217 ]
  %.01 = phi %struct._IO_FILE* [ %165, %164 ], [ %184, %181 ], [ %199, %217 ]
  %235 = load i32, i32* @verbosity, align 4
  %236 = icmp sge i32 %235, 1
  br i1 %236, label %237, label %245

; <label>:237:                                    ; preds = %234
  %238 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %239 = getelementptr [7 x i8], [7 x i8]* @.str.70, i32 0, i32 0
  %240 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %241 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %238, i8* %239, i8* %240)
  %242 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @pad(i8* %242)
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %244 = call i32 @fflush(%struct._IO_FILE* %243)
  br label %245

; <label>:245:                                    ; preds = %237, %234
  store %struct._IO_FILE* %.02, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  %246 = call zeroext i8 @uncompressStream(%struct._IO_FILE* %.01, %struct._IO_FILE* %.02)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %247 = icmp ne i8 %246, 0
  br i1 %247, label %248, label %260

; <label>:248:                                    ; preds = %245
  %249 = load i32, i32* @srcMode, align 4
  %250 = icmp eq i32 %249, 3
  br i1 %250, label %251, label %268

; <label>:251:                                    ; preds = %248
  %252 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @applySavedTimeInfoToOutputFile(i8* %252)
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %253 = load i8, i8* @keepInputFiles, align 1
  %254 = icmp ne i8 %253, 0
  br i1 %254, label %268, label %255

; <label>:255:                                    ; preds = %251
  %256 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %257 = call i32 @remove(i8* %256) #9
  %258 = icmp ne i32 %257, 0
  br i1 %258, label %259, label %268

; <label>:259:                                    ; preds = %255
  call void @ioError() #12
  unreachable

; <label>:260:                                    ; preds = %245
  store i8 1, i8* @unzFailsExist, align 1
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %261 = load i32, i32* @srcMode, align 4
  %262 = icmp eq i32 %261, 3
  br i1 %262, label %263, label %268

; <label>:263:                                    ; preds = %260
  %264 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %265 = call i32 @remove(i8* %264) #9
  %266 = icmp ne i32 %265, 0
  br i1 %266, label %267, label %268

; <label>:267:                                    ; preds = %263
  call void @ioError() #12
  unreachable

; <label>:268:                                    ; preds = %260, %263, %248, %255, %251
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %269 = icmp ne i8 %246, 0
  br i1 %269, label %270, label %277

; <label>:270:                                    ; preds = %268
  %271 = load i32, i32* @verbosity, align 4
  %272 = icmp sge i32 %271, 1
  br i1 %272, label %273, label %289

; <label>:273:                                    ; preds = %270
  %274 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %275 = getelementptr [6 x i8], [6 x i8]* @.str.85, i32 0, i32 0
  %276 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %274, i8* %275)
  br label %289

; <label>:277:                                    ; preds = %268
  call void @setExit(i32 2)
  %278 = load i32, i32* @verbosity, align 4
  %279 = icmp sge i32 %278, 1
  %280 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  br i1 %279, label %281, label %284

; <label>:281:                                    ; preds = %277
  %282 = getelementptr [19 x i8], [19 x i8]* @.str.86, i32 0, i32 0
  %283 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %280, i8* %282)
  br label %289

; <label>:284:                                    ; preds = %277
  %285 = load i8*, i8** @progName, align 8
  %286 = getelementptr [29 x i8], [29 x i8]* @.str.87, i32 0, i32 0
  %287 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %288 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %280, i8* %286, i8* %285, i8* %287)
  br label %289

; <label>:289:                                    ; preds = %281, %284, %270, %273, %51, %59, %80, %105, %131, %146, %171, %187, %216, %231
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @setExit(i32) #0 {
  %2 = load i32, i32* @exitValue, align 4
  %3 = icmp sgt i32 %0, %2
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  store i32 %0, i32* @exitValue, align 4
  br label %5

; <label>:5:                                      ; preds = %4, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @testf(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !35
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %3 = icmp eq i8* %0, null
  %4 = load i32, i32* @srcMode, align 4
  %5 = icmp ne i32 %4, 1
  %or.cond = and i1 %3, %5
  br i1 %or.cond, label %6, label %8

; <label>:6:                                      ; preds = %1
  %7 = getelementptr [18 x i8], [18 x i8]* @.str.94, i32 0, i32 0
  call void @panic(i8* %7) #12
  unreachable

; <label>:8:                                      ; preds = %1
  %9 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %10 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName(i8* %9, i8* %10)
  %11 = load i32, i32* @srcMode, align 4
  switch i32 %11, label %19 [
    i32 1, label %12
    i32 3, label %15
    i32 2, label %17
  ]

; <label>:12:                                     ; preds = %8
  %13 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %14 = getelementptr [8 x i8], [8 x i8]* @.str.54, i32 0, i32 0
  call void @copyFileName(i8* %13, i8* %14)
  br label %19

; <label>:15:                                     ; preds = %8
  %16 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %16, i8* %0)
  br label %19

; <label>:17:                                     ; preds = %8
  %18 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %18, i8* %0)
  br label %19

; <label>:19:                                     ; preds = %8, %17, %15, %12
  %20 = load i32, i32* @srcMode, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %22, label %37

; <label>:22:                                     ; preds = %19
  %23 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %24 = call zeroext i8 @containsDubiousChars(i8* %23)
  %25 = zext i8 %24 to i32
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %22
  %28 = load i8, i8* @noisy, align 1
  %29 = icmp ne i8 %28, 0
  br i1 %29, label %30, label %36

; <label>:30:                                     ; preds = %27
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = load i8*, i8** @progName, align 8
  %33 = getelementptr [39 x i8], [39 x i8]* @.str.56, i32 0, i32 0
  %34 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %35 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* %33, i8* %32, i8* %34)
  br label %36

; <label>:36:                                     ; preds = %30, %27
  call void @setExit(i32 1)
  br label %128

; <label>:37:                                     ; preds = %22, %19
  %38 = load i32, i32* @srcMode, align 4
  %39 = icmp ne i32 %38, 1
  br i1 %39, label %40, label %53

; <label>:40:                                     ; preds = %37
  %41 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %42 = call zeroext i8 @fileExists(i8* %41)
  %43 = icmp ne i8 %42, 0
  br i1 %43, label %53, label %44

; <label>:44:                                     ; preds = %40
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %46 = load i8*, i8** @progName, align 8
  %47 = call i32* @__errno_location() #13
  %48 = load i32, i32* %47, align 4
  %49 = call i8* @strerror(i32 %48) #9, !track !36
  %50 = getelementptr [30 x i8], [30 x i8]* @.str.95, i32 0, i32 0
  %51 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* %50, i8* %46, i8* %51, i8* %49)
  call void @setExit(i32 1)
  br label %128

; <label>:53:                                     ; preds = %40, %37
  %54 = load i32, i32* @srcMode, align 4
  %55 = icmp ne i32 %54, 1
  br i1 %55, label %56, label %69

; <label>:56:                                     ; preds = %53
  %57 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %58 = call i32 @stat64(i8* %57, %struct.stat* %2) #9
  %59 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 61440
  %62 = icmp eq i32 %61, 16384
  br i1 %62, label %63, label %69

; <label>:63:                                     ; preds = %56
  %64 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %65 = load i8*, i8** @progName, align 8
  %66 = getelementptr [35 x i8], [35 x i8]* @.str.59, i32 0, i32 0
  %67 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %68 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %64, i8* %66, i8* %65, i8* %67)
  call void @setExit(i32 1)
  br label %128

; <label>:69:                                     ; preds = %56, %53
  %70 = load i32, i32* @srcMode, align 4
  switch i32 %70, label %102 [
    i32 1, label %71
    i32 2, label %88
    i32 3, label %88
  ]

; <label>:71:                                     ; preds = %69
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %73 = call i32 @fileno(%struct._IO_FILE* %72) #9
  %74 = call i32 @isatty(i32 %73) #9
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %86

; <label>:76:                                     ; preds = %71
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %78 = load i8*, i8** @progName, align 8
  %79 = getelementptr [51 x i8], [51 x i8]* @.str.82, i32 0, i32 0
  %80 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* %79, i8* %78)
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %82 = load i8*, i8** @progName, align 8
  %83 = load i8*, i8** @progName, align 8
  %84 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* %84, i8* %82, i8* %83)
  call void @setExit(i32 1)
  br label %128

; <label>:86:                                     ; preds = %71
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  br label %104

; <label>:88:                                     ; preds = %69, %69
  %89 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %90 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %91 = call %struct._IO_FILE* @fopen64(i8* %89, i8* %90), !track !37
  %92 = icmp eq %struct._IO_FILE* %91, null
  br i1 %92, label %93, label %104

; <label>:93:                                     ; preds = %88
  %94 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %95 = load i8*, i8** @progName, align 8
  %96 = call i32* @__errno_location() #13
  %97 = load i32, i32* %96, align 4
  %98 = call i8* @strerror(i32 %97) #9, !track !38
  %99 = getelementptr [34 x i8], [34 x i8]* @.str.83, i32 0, i32 0
  %100 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %101 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %94, i8* %99, i8* %95, i8* %100, i8* %98)
  call void @setExit(i32 1)
  br label %128

; <label>:102:                                    ; preds = %69
  %103 = getelementptr [19 x i8], [19 x i8]* @.str.96, i32 0, i32 0
  call void @panic(i8* %103) #12
  unreachable

; <label>:104:                                    ; preds = %88, %86
  %.0 = phi %struct._IO_FILE* [ %87, %86 ], [ %91, %88 ]
  %105 = load i32, i32* @verbosity, align 4
  %106 = icmp sge i32 %105, 1
  br i1 %106, label %107, label %115

; <label>:107:                                    ; preds = %104
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %109 = getelementptr [7 x i8], [7 x i8]* @.str.70, i32 0, i32 0
  %110 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %111 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %108, i8* %109, i8* %110)
  %112 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @pad(i8* %112)
  %113 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %114 = call i32 @fflush(%struct._IO_FILE* %113)
  br label %115

; <label>:115:                                    ; preds = %107, %104
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %116 = call zeroext i8 @testStream(%struct._IO_FILE* %.0)
  %117 = zext i8 %116 to i32
  %118 = icmp ne i32 %117, 0
  %119 = load i32, i32* @verbosity, align 4
  %120 = icmp sge i32 %119, 1
  %or.cond3 = and i1 %118, %120
  br i1 %or.cond3, label %121, label %125

; <label>:121:                                    ; preds = %115
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %123 = getelementptr [4 x i8], [4 x i8]* @.str.97, i32 0, i32 0
  %124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %122, i8* %123)
  br label %125

; <label>:125:                                    ; preds = %121, %115
  %126 = icmp ne i8 %116, 0
  br i1 %126, label %128, label %127

; <label>:127:                                    ; preds = %125
  store i8 1, i8* @testFailsExist, align 1
  br label %128

; <label>:128:                                    ; preds = %36, %44, %63, %76, %93, %127, %125
  ret void
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #1

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @panic(i8*) #6 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = load i8*, i8** @progName, align 8
  %4 = getelementptr [109 x i8], [109 x i8]* @.str.71, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i8* %3, i8* %0)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 3) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @containsDubiousChars(i8*) #0 {
  ret i8 0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @fileExists(i8*) #0 {
  %2 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %3 = call %struct._IO_FILE* @fopen64(i8* %0, i8* %2), !track !39
  %4 = icmp ne %struct._IO_FILE* %3, null
  %5 = zext i1 %4 to i32
  %6 = trunc i32 %5 to i8
  %7 = icmp ne %struct._IO_FILE* %3, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %1
  %9 = call i32 @fclose(%struct._IO_FILE* %3)
  br label %10

; <label>:10:                                     ; preds = %8, %1
  ret i8 %6
}

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #7

; Function Attrs: nounwind
declare dso_local i8* @strerror(i32) #1

; Function Attrs: nounwind
declare dso_local i32 @stat64(i8*, %struct.stat*) #1

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #1

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #1

declare dso_local %struct._IO_FILE* @fopen64(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @pad(i8*) #0 {
  %2 = call i64 @strlen(i8* %0) #10
  %3 = trunc i64 %2 to i32
  %4 = load i32, i32* @longestFileName, align 4
  %5 = icmp sge i32 %3, %4
  br i1 %5, label %.loopexit, label %6

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @longestFileName, align 4
  %8 = call i64 @strlen(i8* %0) #10
  %9 = trunc i64 %8 to i32
  %10 = sub nsw i32 %7, %9
  %11 = icmp sle i32 1, %10
  br i1 %11, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.01 = phi i32 [ %14, %.lr.ph ], [ 1, %.lr.ph.preheader ]
  call void @unroll_loop(i32 15)
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.72, i64 0, i64 0))
  %14 = add nuw nsw i32 %.01, 1
  %15 = load i32, i32* @longestFileName, align 4
  %16 = call i64 @strlen(i8* %0) #10
  %17 = trunc i64 %16 to i32
  %18 = sub nsw i32 %15, %17
  %19 = icmp sle i32 %14, %18
  br i1 %19, label %.lr.ph, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %6, %1
  ret void
}

declare dso_local i32 @fflush(%struct._IO_FILE*) #5

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @testStream(%struct._IO_FILE*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [5000 x i8], align 16, !track !40
  %5 = alloca [5000 x i8], align 16, !track !41
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8, !track !42
  store i32 0, i32* %6, align 4
  %8 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %91, label %10

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @verbosity, align 4
  %12 = load i8, i8* @smallMode, align 1
  %13 = zext i8 %12 to i32
  %14 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  %15 = load i32, i32* %6, align 4
  %16 = call i8* @BZ2_bzReadOpen(i32* %2, %struct._IO_FILE* %0, i32 %11, i32 %13, i8* %14, i32 %15)
  %17 = icmp eq i8* %16, null
  br i1 %17, label %._crit_edge25, label %.lr.ph24.preheader

.lr.ph24.preheader:                               ; preds = %10
  %18 = getelementptr inbounds [5000 x i8], [5000 x i8]* %4, i32 0, i32 0
  br label %.lr.ph24

.lr.ph24:                                         ; preds = %.lr.ph24.preheader, %59
  %19 = phi i8* [ %64, %59 ], [ %16, %.lr.ph24.preheader ]
  %.0222 = phi i32 [ %23, %59 ], [ 0, %.lr.ph24.preheader ]
  call void @unroll_loop(i32 16)
  %20 = load i32, i32* %2, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %._crit_edge25.loopexit2, label %22

; <label>:22:                                     ; preds = %.lr.ph24
  %23 = add nuw nsw i32 %.0222, 1
  %24 = load i32, i32* %2, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %22
  br label %.lr.ph

; <label>:26:                                     ; preds = %.lr.ph
  %27 = load i32, i32* %2, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %.lr.ph, label %._crit_edge.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %26
  call void @unroll_loop(i32 17)
  %29 = call i32 @BZ2_bzRead(i32* %2, i8* %19, i8* %18, i32 5000)
  %30 = load i32, i32* %2, align 4
  %31 = icmp eq i32 %30, -5
  br i1 %31, label %._crit_edge25.loopexit, label %26

._crit_edge.loopexit:                             ; preds = %26
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %22
  %32 = phi i8* [ %19, %22 ], [ %19, %._crit_edge.loopexit ]
  %33 = load i32, i32* %2, align 4
  %34 = icmp ne i32 %33, 4
  br i1 %34, label %._crit_edge25.loopexit2, label %35

; <label>:35:                                     ; preds = %._crit_edge
  call void @BZ2_bzReadGetUnused(i32* %2, i8* %32, i8** %7, i32* %6)
  %36 = load i32, i32* %2, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %40

; <label>:38:                                     ; preds = %35
  %39 = getelementptr [21 x i8], [21 x i8]* @.str.98, i32 0, i32 0
  call void @panic(i8* %39) #12
  unreachable

; <label>:40:                                     ; preds = %35
  %41 = load i8*, i8** %7, align 8
  %42 = load i32, i32* %6, align 4
  %43 = icmp slt i32 0, %42
  br i1 %43, label %.lr.ph20.preheader, label %._crit_edge21

.lr.ph20.preheader:                               ; preds = %40
  br label %.lr.ph20

.lr.ph20:                                         ; preds = %.lr.ph20.preheader, %.lr.ph20
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph20 ], [ 0, %.lr.ph20.preheader ]
  call void @unroll_loop(i32 18)
  %scevgep = getelementptr i8, i8* %41, i64 %indvars.iv
  %44 = load i8, i8* %scevgep, align 1
  %scevgep5 = getelementptr [5000 x i8], [5000 x i8]* %5, i64 0, i64 %indvars.iv
  store i8 %44, i8* %scevgep5, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %45 = load i32, i32* %6, align 4
  %46 = sext i32 %45 to i64
  %47 = icmp slt i64 %indvars.iv.next, %46
  br i1 %47, label %.lr.ph20, label %._crit_edge21.loopexit

._crit_edge21.loopexit:                           ; preds = %.lr.ph20
  br label %._crit_edge21

._crit_edge21:                                    ; preds = %._crit_edge21.loopexit, %40
  call void @BZ2_bzReadClose(i32* %2, i8* %32)
  %48 = load i32, i32* %2, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %52

; <label>:50:                                     ; preds = %._crit_edge21
  %51 = getelementptr [21 x i8], [21 x i8]* @.str.98, i32 0, i32 0
  call void @panic(i8* %51) #12
  unreachable

; <label>:52:                                     ; preds = %._crit_edge21
  %53 = load i32, i32* %6, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %59

; <label>:55:                                     ; preds = %52
  %56 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %57 = zext i8 %56 to i32
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %66, label %59

; <label>:59:                                     ; preds = %55, %52
  %60 = load i32, i32* @verbosity, align 4
  %61 = load i8, i8* @smallMode, align 1
  %62 = zext i8 %61 to i32
  %63 = load i32, i32* %6, align 4
  %64 = call i8* @BZ2_bzReadOpen(i32* %2, %struct._IO_FILE* %0, i32 %60, i32 %62, i8* %14, i32 %63)
  %65 = icmp eq i8* %64, null
  br i1 %65, label %._crit_edge25.loopexit2, label %.lr.ph24

; <label>:66:                                     ; preds = %55
  %67 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %91, label %69

; <label>:69:                                     ; preds = %66
  %70 = call i32 @fclose(%struct._IO_FILE* %0)
  %71 = icmp eq i32 %70, -1
  br i1 %71, label %91, label %72

; <label>:72:                                     ; preds = %69
  %73 = load i32, i32* @verbosity, align 4
  %74 = icmp sge i32 %73, 2
  br i1 %74, label %75, label %121

; <label>:75:                                     ; preds = %72
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %77 = getelementptr [6 x i8], [6 x i8]* @.str.89, i32 0, i32 0
  %78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %77)
  br label %121

._crit_edge25.loopexit:                           ; preds = %.lr.ph
  %.ph = phi i8* [ %19, %.lr.ph ]
  %.1.ph = phi i32 [ %23, %.lr.ph ]
  br label %._crit_edge25

._crit_edge25.loopexit2:                          ; preds = %59, %.lr.ph24, %._crit_edge
  %.ph3 = phi i8* [ %19, %.lr.ph24 ], [ %64, %59 ], [ %32, %._crit_edge ]
  %.1.ph4 = phi i32 [ %.0222, %.lr.ph24 ], [ %23, %59 ], [ %23, %._crit_edge ]
  br label %._crit_edge25

._crit_edge25:                                    ; preds = %._crit_edge25.loopexit2, %._crit_edge25.loopexit, %10
  %79 = phi i8* [ %16, %10 ], [ %.ph, %._crit_edge25.loopexit ], [ %.ph3, %._crit_edge25.loopexit2 ]
  %.1 = phi i32 [ 0, %10 ], [ %.1.ph, %._crit_edge25.loopexit ], [ %.1.ph4, %._crit_edge25.loopexit2 ]
  call void @BZ2_bzReadClose(i32* %3, i8* %79)
  %80 = load i32, i32* @verbosity, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %88

; <label>:82:                                     ; preds = %._crit_edge25
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = load i8*, i8** @progName, align 8
  %85 = getelementptr [9 x i8], [9 x i8]* @.str.99, i32 0, i32 0
  %86 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* %85, i8* %84, i8* %86)
  br label %88

; <label>:88:                                     ; preds = %82, %._crit_edge25
  %89 = load i32, i32* %2, align 4
  switch i32 %89, label %119 [
    i32 -9, label %90
    i32 -6, label %91
    i32 -4, label %92
    i32 -3, label %96
    i32 -7, label %97
    i32 -5, label %101
  ]

; <label>:90:                                     ; preds = %88
  call void @configError() #12
  unreachable

; <label>:91:                                     ; preds = %88, %69, %66, %1
  call void @ioError() #12
  unreachable

; <label>:92:                                     ; preds = %88
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %94 = getelementptr [36 x i8], [36 x i8]* @.str.100, i32 0, i32 0
  %95 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %94)
  br label %121

; <label>:96:                                     ; preds = %88
  call void @outOfMemory() #12
  unreachable

; <label>:97:                                     ; preds = %88
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %99 = getelementptr [24 x i8], [24 x i8]* @.str.101, i32 0, i32 0
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %98, i8* %99)
  br label %121

; <label>:101:                                    ; preds = %88
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %103 = icmp ne %struct._IO_FILE* %0, %102
  br i1 %103, label %104, label %106

; <label>:104:                                    ; preds = %101
  %105 = call i32 @fclose(%struct._IO_FILE* %0)
  br label %106

; <label>:106:                                    ; preds = %104, %101
  %107 = icmp eq i32 %.1, 1
  br i1 %107, label %108, label %112

; <label>:108:                                    ; preds = %106
  %109 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %110 = getelementptr [46 x i8], [46 x i8]* @.str.102, i32 0, i32 0
  %111 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %109, i8* %110)
  br label %121

; <label>:112:                                    ; preds = %106
  %113 = load i8, i8* @noisy, align 1
  %114 = icmp ne i8 %113, 0
  br i1 %114, label %115, label %121

; <label>:115:                                    ; preds = %112
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %117 = getelementptr [36 x i8], [36 x i8]* @.str.103, i32 0, i32 0
  %118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %116, i8* %117)
  br label %121

; <label>:119:                                    ; preds = %88
  %120 = getelementptr [22 x i8], [22 x i8]* @.str.104, i32 0, i32 0
  call void @panic(i8* %120) #12
  unreachable

; <label>:121:                                    ; preds = %112, %115, %72, %75, %108, %97, %92
  %.0 = phi i8 [ 0, %108 ], [ 0, %97 ], [ 0, %92 ], [ 1, %75 ], [ 1, %72 ], [ 1, %115 ], [ 1, %112 ]
  ret i8 %.0
}

; Function Attrs: nounwind
declare dso_local i32 @ferror(%struct._IO_FILE*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @myfeof(%struct._IO_FILE*) #0 {
  %2 = call i32 @fgetc(%struct._IO_FILE* %0)
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %6, label %4

; <label>:4:                                      ; preds = %1
  %5 = call i32 @ungetc(i32 %2, %struct._IO_FILE* %0)
  br label %6

; <label>:6:                                      ; preds = %1, %4
  %.0 = phi i8 [ 0, %4 ], [ 1, %1 ]
  ret i8 %.0
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #5

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @configError() #6 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = getelementptr [236 x i8], [236 x i8]* @.str.77, i32 0, i32 0
  %3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %2)
  call void @setExit(i32 3)
  %4 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %4) #11
  unreachable
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @ioError() #6 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = getelementptr [65 x i8], [65 x i8]* @.str.78, i32 0, i32 0
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2)
  %5 = load i8*, i8** @progName, align 8
  call void @perror(i8* %5)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @outOfMemory() #6 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = getelementptr [38 x i8], [38 x i8]* @.str.48, i32 0, i32 0
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2)
  call void @showFileNames()
  call void @cleanUpAndFail(i32 1) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @showFileNames() #0 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %9

; <label>:3:                                      ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = getelementptr [36 x i8], [36 x i8]* @.str.38, i32 0, i32 0
  %6 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %7 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7)
  br label %9

; <label>:9:                                      ; preds = %3, %0
  ret void
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @cleanUpAndFail(i32) #6 {
  %2 = alloca %struct.stat, align 8, !track !43
  %3 = load i32, i32* @srcMode, align 4
  %4 = icmp eq i32 %3, 3
  %5 = load i32, i32* @opMode, align 4
  %6 = icmp ne i32 %5, 3
  %or.cond = and i1 %4, %6
  br i1 %or.cond, label %7, label %57

; <label>:7:                                      ; preds = %1
  %8 = load i8, i8* @deleteOutputOnInterrupt, align 1
  %9 = zext i8 %8 to i32
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %57

; <label>:11:                                     ; preds = %7
  %12 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %13 = call i32 @stat64(i8* %12, %struct.stat* %2) #9
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

; <label>:15:                                     ; preds = %11
  %16 = load i8, i8* @noisy, align 1
  %17 = icmp ne i8 %16, 0
  br i1 %17, label %18, label %24

; <label>:18:                                     ; preds = %15
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %20 = load i8*, i8** @progName, align 8
  %21 = getelementptr [44 x i8], [44 x i8]* @.str.39, i32 0, i32 0
  %22 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %21, i8* %20, i8* %22)
  br label %24

; <label>:24:                                     ; preds = %18, %15
  %25 = load %struct._IO_FILE*, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %26 = icmp ne %struct._IO_FILE* %25, null
  br i1 %26, label %27, label %30

; <label>:27:                                     ; preds = %24
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %29 = call i32 @fclose(%struct._IO_FILE* %28)
  br label %30

; <label>:30:                                     ; preds = %27, %24
  %31 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %32 = call i32 @remove(i8* %31) #9
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %57

; <label>:34:                                     ; preds = %30
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %36 = load i8*, i8** @progName, align 8
  %37 = getelementptr [59 x i8], [59 x i8]* @.str.40, i32 0, i32 0
  %38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* %37, i8* %36)
  br label %57

; <label>:39:                                     ; preds = %11
  %40 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %41 = load i8*, i8** @progName, align 8
  %42 = getelementptr [49 x i8], [49 x i8]* @.str.41, i32 0, i32 0
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %40, i8* %42, i8* %41)
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %45 = load i8*, i8** @progName, align 8
  %46 = getelementptr [56 x i8], [56 x i8]* @.str.42, i32 0, i32 0
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* %46, i8* %45)
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %49 = load i8*, i8** @progName, align 8
  %50 = getelementptr [32 x i8], [32 x i8]* @.str.43, i32 0, i32 0
  %51 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %52 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %50, i8* %49, i8* %51)
  %53 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %54 = load i8*, i8** @progName, align 8
  %55 = getelementptr [61 x i8], [61 x i8]* @.str.44, i32 0, i32 0
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %53, i8* %55, i8* %54)
  br label %57

; <label>:57:                                     ; preds = %39, %34, %30, %7, %1
  %58 = load i8, i8* @noisy, align 1
  %59 = zext i8 %58 to i32
  %60 = icmp ne i32 %59, 0
  %61 = load i32, i32* @numFileNames, align 4
  %62 = icmp sgt i32 %61, 0
  %or.cond3 = and i1 %60, %62
  br i1 %or.cond3, label %63, label %77

; <label>:63:                                     ; preds = %57
  %64 = load i32, i32* @numFilesProcessed, align 4
  %65 = load i32, i32* @numFileNames, align 4
  %66 = icmp slt i32 %64, %65
  br i1 %66, label %67, label %77

; <label>:67:                                     ; preds = %63
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %69 = load i8*, i8** @progName, align 8
  %70 = load i8*, i8** @progName, align 8
  %71 = load i32, i32* @numFileNames, align 4
  %72 = load i32, i32* @numFileNames, align 4
  %73 = load i32, i32* @numFilesProcessed, align 4
  %74 = sub nsw i32 %72, %73
  %75 = getelementptr [110 x i8], [110 x i8]* @.str.45, i32 0, i32 0
  %76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* %75, i8* %69, i8* %70, i32 %71, i32 %74)
  br label %77

; <label>:77:                                     ; preds = %67, %63, %57
  call void @setExit(i32 %0)
  %78 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %78) #11
  unreachable
}

; Function Attrs: nounwind
declare dso_local i32 @remove(i8*) #1

declare dso_local void @perror(i8*) #5

declare dso_local i32 @fgetc(%struct._IO_FILE*) #5

declare dso_local i32 @ungetc(i32, %struct._IO_FILE*) #5

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mapSuffix(i8*, i8*, i8*) #0 {
  %4 = call zeroext i8 @hasSuffix(i8* %0, i8* %1)
  %5 = icmp ne i8 %4, 0
  br i1 %5, label %6, label %12

; <label>:6:                                      ; preds = %3
  %7 = call i64 @strlen(i8* %0) #10
  %8 = call i64 @strlen(i8* %1) #10
  %9 = sub i64 %7, %8
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  store i8 0, i8* %10, align 1
  %11 = call i8* @strcat(i8* %0, i8* %2) #9, !track !44
  br label %12

; <label>:12:                                     ; preds = %3, %6
  %.0 = phi i8 [ 1, %6 ], [ 0, %3 ]
  ret i8 %.0
}

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @notAStandardFile(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !45
  %3 = call i32 @lstat64(i8* %0, %struct.stat* %2) #9
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %10, label %5

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 61440
  %9 = icmp eq i32 %8, 32768
  %. = select i1 %9, i8 0, i8 1
  br label %10

; <label>:10:                                     ; preds = %5, %1
  %.0 = phi i8 [ 1, %1 ], [ %., %5 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @countHardLinks(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !46
  %3 = call i32 @lstat64(i8* %0, %struct.stat* %2) #9
  %4 = icmp ne i32 %3, 0
  %5 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %6, 1
  %8 = trunc i64 %7 to i32
  %.0 = select i1 %4, i32 0, i32 %8
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @saveInputFileMetaInfo(i8*) #0 {
  %2 = call i32 @stat64(i8* %0, %struct.stat* @fileMetaInfo) #9
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  call void @ioError() #12
  unreachable

; <label>:5:                                      ; preds = %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._IO_FILE* @fopen_output_safely(i8*, i8*) #2 {
  %3 = call i32 (i8*, i32, ...) @open64(i8* %0, i32 193, i32 384)
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %10, label %5

; <label>:5:                                      ; preds = %2
  %6 = call %struct._IO_FILE* @fdopen(i32 %3, i8* %1) #9, !track !47
  %7 = icmp eq %struct._IO_FILE* %6, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %5
  %9 = call i32 @close(i32 %3)
  br label %10

; <label>:10:                                     ; preds = %5, %8, %2
  %.0 = phi %struct._IO_FILE* [ null, %2 ], [ %6, %8 ], [ %6, %5 ]
  ret %struct._IO_FILE* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uncompressStream(%struct._IO_FILE*, %struct._IO_FILE*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [5000 x i8], align 16, !track !48
  %6 = alloca [5000 x i8], align 16, !track !49
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8, !track !50
  store i32 0, i32* %7, align 4
  %9 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %.loopexit, label %11

; <label>:11:                                     ; preds = %2
  %12 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %.loopexit, label %14

; <label>:14:                                     ; preds = %11
  %15 = load i32, i32* @verbosity, align 4
  %16 = load i8, i8* @smallMode, align 1
  %17 = zext i8 %16 to i32
  %18 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i32 0, i32 0
  %19 = load i32, i32* %7, align 4
  %20 = call i8* @BZ2_bzReadOpen(i32* %3, %struct._IO_FILE* %0, i32 %15, i32 %17, i8* %18, i32 %19)
  %21 = icmp eq i8* %20, null
  br i1 %21, label %._crit_edge31, label %.lr.ph30.preheader

.lr.ph30.preheader:                               ; preds = %14
  %22 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  %23 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  br label %.lr.ph30

.lr.ph30:                                         ; preds = %.lr.ph30.preheader, %76
  %24 = phi i8* [ %81, %76 ], [ %20, %.lr.ph30.preheader ]
  %.0228 = phi i32 [ %28, %76 ], [ 0, %.lr.ph30.preheader ]
  call void @unroll_loop(i32 19)
  %25 = load i32, i32* %3, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %._crit_edge31.loopexit, label %27

; <label>:27:                                     ; preds = %.lr.ph30
  %28 = add nuw nsw i32 %.0228, 1
  %29 = load i32, i32* %3, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %.lr.ph22.preheader, label %._crit_edge23

.lr.ph22.preheader:                               ; preds = %27
  br label %.lr.ph22

; <label>:31:                                     ; preds = %46
  %32 = load i32, i32* %3, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %.lr.ph22, label %._crit_edge23.loopexit

.lr.ph22:                                         ; preds = %.lr.ph22.preheader, %31
  call void @unroll_loop(i32 20)
  %34 = call i32 @BZ2_bzRead(i32* %3, i8* %24, i8* %22, i32 5000)
  %35 = load i32, i32* %3, align 4
  %36 = icmp eq i32 %35, -5
  br i1 %36, label %114, label %37

; <label>:37:                                     ; preds = %.lr.ph22
  %38 = load i32, i32* %3, align 4
  %39 = icmp eq i32 %38, 0
  %40 = load i32, i32* %3, align 4
  %41 = icmp eq i32 %40, 4
  %or.cond = or i1 %39, %41
  %42 = icmp sgt i32 %34, 0
  %or.cond2 = and i1 %or.cond, %42
  br i1 %or.cond2, label %43, label %46

; <label>:43:                                     ; preds = %37
  %44 = sext i32 %34 to i64
  %45 = call i64 @fwrite(i8* %23, i64 1, i64 %44, %struct._IO_FILE* %1)
  br label %46

; <label>:46:                                     ; preds = %37, %43
  %47 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %.loopexit.loopexit1, label %31

._crit_edge23.loopexit:                           ; preds = %31
  br label %._crit_edge23

._crit_edge23:                                    ; preds = %._crit_edge23.loopexit, %27
  %49 = phi i8* [ %24, %27 ], [ %24, %._crit_edge23.loopexit ]
  %50 = load i32, i32* %3, align 4
  %51 = icmp ne i32 %50, 4
  br i1 %51, label %._crit_edge31.loopexit, label %52

; <label>:52:                                     ; preds = %._crit_edge23
  call void @BZ2_bzReadGetUnused(i32* %3, i8* %49, i8** %8, i32* %7)
  %53 = load i32, i32* %3, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %57

; <label>:55:                                     ; preds = %52
  %56 = getelementptr [27 x i8], [27 x i8]* @.str.88, i32 0, i32 0
  call void @panic(i8* %56) #12
  unreachable

; <label>:57:                                     ; preds = %52
  %58 = load i8*, i8** %8, align 8
  %59 = load i32, i32* %7, align 4
  %60 = icmp slt i32 0, %59
  br i1 %60, label %.lr.ph26.preheader, label %._crit_edge27

.lr.ph26.preheader:                               ; preds = %57
  br label %.lr.ph26

.lr.ph26:                                         ; preds = %.lr.ph26.preheader, %.lr.ph26
  %indvars.iv = phi i64 [ %indvars.iv.next, %.lr.ph26 ], [ 0, %.lr.ph26.preheader ]
  call void @unroll_loop(i32 21)
  %scevgep = getelementptr i8, i8* %58, i64 %indvars.iv
  %61 = load i8, i8* %scevgep, align 1
  %scevgep4 = getelementptr [5000 x i8], [5000 x i8]* %6, i64 0, i64 %indvars.iv
  store i8 %61, i8* %scevgep4, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %62 = load i32, i32* %7, align 4
  %63 = sext i32 %62 to i64
  %64 = icmp slt i64 %indvars.iv.next, %63
  br i1 %64, label %.lr.ph26, label %._crit_edge27.loopexit

._crit_edge27.loopexit:                           ; preds = %.lr.ph26
  br label %._crit_edge27

._crit_edge27:                                    ; preds = %._crit_edge27.loopexit, %57
  call void @BZ2_bzReadClose(i32* %3, i8* %49)
  %65 = load i32, i32* %3, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %67, label %69

; <label>:67:                                     ; preds = %._crit_edge27
  %68 = getelementptr [27 x i8], [27 x i8]* @.str.88, i32 0, i32 0
  call void @panic(i8* %68) #12
  unreachable

; <label>:69:                                     ; preds = %._crit_edge27
  %70 = load i32, i32* %7, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %76

; <label>:72:                                     ; preds = %69
  %73 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %74 = zext i8 %73 to i32
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %._crit_edge.loopexit3, label %76

; <label>:76:                                     ; preds = %72, %69
  %77 = load i32, i32* @verbosity, align 4
  %78 = load i8, i8* @smallMode, align 1
  %79 = zext i8 %78 to i32
  %80 = load i32, i32* %7, align 4
  %81 = call i8* @BZ2_bzReadOpen(i32* %3, %struct._IO_FILE* %0, i32 %77, i32 %79, i8* %18, i32 %80)
  %82 = icmp eq i8* %81, null
  br i1 %82, label %._crit_edge31.loopexit, label %.lr.ph30

._crit_edge.loopexit:                             ; preds = %122
  br label %._crit_edge

._crit_edge.loopexit3:                            ; preds = %72
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit3, %._crit_edge.loopexit, %117
  %83 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %.loopexit, label %85

; <label>:85:                                     ; preds = %._crit_edge
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %87 = icmp ne %struct._IO_FILE* %1, %86
  br i1 %87, label %88, label %92

; <label>:88:                                     ; preds = %85
  %89 = call i32 @fileno(%struct._IO_FILE* %1) #9
  %90 = icmp slt i32 %89, 0
  br i1 %90, label %.loopexit, label %91

; <label>:91:                                     ; preds = %88
  call void @applySavedFileAttrToOutputFile(i32 %89)
  br label %92

; <label>:92:                                     ; preds = %91, %85
  %93 = call i32 @fclose(%struct._IO_FILE* %0)
  %94 = icmp eq i32 %93, -1
  br i1 %94, label %.loopexit, label %95

; <label>:95:                                     ; preds = %92
  %96 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %.loopexit, label %98

; <label>:98:                                     ; preds = %95
  %99 = call i32 @fflush(%struct._IO_FILE* %1)
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %.loopexit, label %101

; <label>:101:                                    ; preds = %98
  %102 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %103 = icmp ne %struct._IO_FILE* %1, %102
  br i1 %103, label %104, label %107

; <label>:104:                                    ; preds = %101
  %105 = call i32 @fclose(%struct._IO_FILE* %1)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %.loopexit, label %107

; <label>:107:                                    ; preds = %104, %101
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %108 = load i32, i32* @verbosity, align 4
  %109 = icmp sge i32 %108, 2
  br i1 %109, label %110, label %166

; <label>:110:                                    ; preds = %107
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %112 = getelementptr [6 x i8], [6 x i8]* @.str.89, i32 0, i32 0
  %113 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %111, i8* %112)
  br label %166

; <label>:114:                                    ; preds = %.lr.ph22
  %.lcssa19 = phi i32 [ %28, %.lr.ph22 ]
  %.lcssa7 = phi i8* [ %24, %.lr.ph22 ]
  %115 = load i8, i8* @forceOverwrite, align 1
  %116 = icmp ne i8 %115, 0
  br i1 %116, label %117, label %._crit_edge31

; <label>:117:                                    ; preds = %114
  call void @rewind(%struct._IO_FILE* %0)
  %118 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %119 = icmp ne i8 %118, 0
  br i1 %119, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %117
  %120 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  %121 = getelementptr inbounds [5000 x i8], [5000 x i8]* %5, i32 0, i32 0
  br label %.lr.ph

; <label>:122:                                    ; preds = %134
  %123 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %124 = icmp ne i8 %123, 0
  br i1 %124, label %._crit_edge.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %122
  call void @unroll_loop(i32 22)
  %125 = call i64 @fread(i8* %120, i64 1, i64 5000, %struct._IO_FILE* %0)
  %126 = trunc i64 %125 to i32
  %127 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %.loopexit.loopexit, label %129

; <label>:129:                                    ; preds = %.lr.ph
  %130 = icmp sgt i32 %126, 0
  br i1 %130, label %131, label %134

; <label>:131:                                    ; preds = %129
  %132 = sext i32 %126 to i64
  %133 = call i64 @fwrite(i8* %121, i64 1, i64 %132, %struct._IO_FILE* %1)
  br label %134

; <label>:134:                                    ; preds = %131, %129
  %135 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %.loopexit.loopexit, label %122

._crit_edge31.loopexit:                           ; preds = %76, %.lr.ph30, %._crit_edge23
  %.ph2 = phi i8* [ %24, %.lr.ph30 ], [ %81, %76 ], [ %49, %._crit_edge23 ]
  %.1.ph = phi i32 [ %.0228, %.lr.ph30 ], [ %28, %76 ], [ %28, %._crit_edge23 ]
  br label %._crit_edge31

._crit_edge31:                                    ; preds = %._crit_edge31.loopexit, %114, %14
  %137 = phi i8* [ %20, %14 ], [ %.lcssa7, %114 ], [ %.ph2, %._crit_edge31.loopexit ]
  %.1 = phi i32 [ 0, %14 ], [ %.lcssa19, %114 ], [ %.1.ph, %._crit_edge31.loopexit ]
  call void @BZ2_bzReadClose(i32* %4, i8* %137)
  %138 = load i32, i32* %3, align 4
  switch i32 %138, label %164 [
    i32 -9, label %139
    i32 -6, label %.loopexit
    i32 -4, label %140
    i32 -3, label %141
    i32 -7, label %142
    i32 -5, label %143
  ]

; <label>:139:                                    ; preds = %._crit_edge31
  call void @configError() #12
  unreachable

.loopexit.loopexit:                               ; preds = %.lr.ph, %134
  br label %.loopexit

.loopexit.loopexit1:                              ; preds = %46
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit1, %.loopexit.loopexit, %._crit_edge31, %104, %98, %95, %92, %88, %._crit_edge, %11, %2
  call void @ioError() #12
  unreachable

; <label>:140:                                    ; preds = %._crit_edge31
  call void @crcError() #12
  unreachable

; <label>:141:                                    ; preds = %._crit_edge31
  call void @outOfMemory() #12
  unreachable

; <label>:142:                                    ; preds = %._crit_edge31
  call void @compressedStreamEOF() #12
  unreachable

; <label>:143:                                    ; preds = %._crit_edge31
  %144 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %145 = icmp ne %struct._IO_FILE* %0, %144
  br i1 %145, label %146, label %148

; <label>:146:                                    ; preds = %143
  %147 = call i32 @fclose(%struct._IO_FILE* %0)
  br label %148

; <label>:148:                                    ; preds = %146, %143
  %149 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %150 = icmp ne %struct._IO_FILE* %1, %149
  br i1 %150, label %151, label %153

; <label>:151:                                    ; preds = %148
  %152 = call i32 @fclose(%struct._IO_FILE* %1)
  br label %153

; <label>:153:                                    ; preds = %151, %148
  %154 = icmp eq i32 %.1, 1
  br i1 %154, label %166, label %155

; <label>:155:                                    ; preds = %153
  %156 = load i8, i8* @noisy, align 1
  %157 = icmp ne i8 %156, 0
  br i1 %157, label %158, label %166

; <label>:158:                                    ; preds = %155
  %159 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %160 = load i8*, i8** @progName, align 8
  %161 = getelementptr [45 x i8], [45 x i8]* @.str.90, i32 0, i32 0
  %162 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %163 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %159, i8* %161, i8* %160, i8* %162)
  br label %166

; <label>:164:                                    ; preds = %._crit_edge31
  %165 = getelementptr [28 x i8], [28 x i8]* @.str.91, i32 0, i32 0
  call void @panic(i8* %165) #12
  unreachable

; <label>:166:                                    ; preds = %155, %158, %153, %107, %110
  %.0 = phi i8 [ 1, %110 ], [ 1, %107 ], [ 0, %153 ], [ 1, %158 ], [ 1, %155 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @applySavedTimeInfoToOutputFile(i8*) #0 {
  %2 = alloca %struct.timespec, align 8, !track !51
  %3 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 11, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 12, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = call i32 @utime(i8* %0, %struct.timespec* %2) #9
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %1
  call void @ioError() #12
  unreachable

; <label>:12:                                     ; preds = %1
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @utime(i8*, %struct.timespec*) #1

declare dso_local i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #5

; Function Attrs: noinline nounwind uwtable
define internal void @applySavedFileAttrToOutputFile(i32) #0 {
  %2 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = call i32 @fchmod(i32 %0, i32 %3) #9
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %7

; <label>:6:                                      ; preds = %1
  call void @ioError() #12
  unreachable

; <label>:7:                                      ; preds = %1
  %8 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 4
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = call i32 @fchown(i32 %0, i32 %9, i32 %11) #9
  ret void
}

declare dso_local void @rewind(%struct._IO_FILE*) #5

declare dso_local i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #5

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @crcError() #6 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = load i8*, i8** @progName, align 8
  %3 = getelementptr [47 x i8], [47 x i8]* @.str.92, i32 0, i32 0
  %4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %3, i8* %2)
  call void @showFileNames()
  call void @cadvise()
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: noinline noreturn nounwind uwtable
define internal void @compressedStreamEOF() #6 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %9

; <label>:3:                                      ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = load i8*, i8** @progName, align 8
  %6 = getelementptr [95 x i8], [95 x i8]* @.str.93, i32 0, i32 0
  %7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %6, i8* %5)
  %8 = load i8*, i8** @progName, align 8
  call void @perror(i8* %8)
  call void @showFileNames()
  call void @cadvise()
  br label %9

; <label>:9:                                      ; preds = %3, %0
  call void @cleanUpAndFail(i32 2) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @cadvise() #0 {
  %1 = load i8, i8* @noisy, align 1
  %2 = icmp ne i8 %1, 0
  br i1 %2, label %3, label %7

; <label>:3:                                      ; preds = %0
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = getelementptr [241 x i8], [241 x i8]* @.str.46, i32 0, i32 0
  %6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* %5)
  br label %7

; <label>:7:                                      ; preds = %3, %0
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #1

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #1

declare dso_local i32 @open64(i8*, i32, ...) #5

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #1

declare dso_local i32 @close(i32) #5

; Function Attrs: nounwind
declare dso_local i32 @lstat64(i8*, %struct.stat*) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @hasSuffix(i8*, i8*) #0 {
  %3 = call i64 @strlen(i8* %0) #10
  %4 = trunc i64 %3 to i32
  %5 = call i64 @strlen(i8* %1) #10
  %6 = trunc i64 %5 to i32
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %16, label %8

; <label>:8:                                      ; preds = %2
  %9 = sext i32 %4 to i64
  %10 = getelementptr inbounds i8, i8* %0, i64 %9
  %11 = sext i32 %6 to i64
  %12 = sub i64 0, %11
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  %14 = call i32 @strcmp(i8* %13, i8* %1) #10
  %15 = icmp eq i32 %14, 0
  %. = select i1 %15, i8 1, i8 0
  br label %16

; <label>:16:                                     ; preds = %8, %2
  %.0 = phi i8 [ 0, %2 ], [ %., %8 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @compressStream(%struct._IO_FILE*, %struct._IO_FILE*) #0 {
  %3 = alloca [5000 x i8], align 16, !track !52
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [32 x i8], align 16, !track !53
  %11 = alloca [32 x i8], align 16, !track !54
  %12 = alloca %struct.UInt64, align 1
  %13 = alloca %struct.UInt64, align 1
  %14 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %.loopexit, label %16

; <label>:16:                                     ; preds = %2
  %17 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %.loopexit, label %19

; <label>:19:                                     ; preds = %16
  %20 = load i32, i32* @blockSize100k, align 4
  %21 = load i32, i32* @verbosity, align 4
  %22 = load i32, i32* @workFactor, align 4
  %23 = call i8* @BZ2_bzWriteOpen(i32* %8, %struct._IO_FILE* %1, i32 %20, i32 %21, i32 %22)
  %24 = load i32, i32* %8, align 4
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %.loopexit2, label %26

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @verbosity, align 4
  %28 = icmp sge i32 %27, 2
  br i1 %28, label %29, label %33

; <label>:29:                                     ; preds = %26
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %31 = getelementptr [2 x i8], [2 x i8]* @.str.73, i32 0, i32 0
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* %31)
  br label %33

; <label>:33:                                     ; preds = %29, %26
  %34 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %33
  %36 = getelementptr inbounds [5000 x i8], [5000 x i8]* %3, i32 0, i32 0
  %37 = getelementptr inbounds [5000 x i8], [5000 x i8]* %3, i32 0, i32 0
  br label %.lr.ph

; <label>:38:                                     ; preds = %48
  %39 = call zeroext i8 @myfeof(%struct._IO_FILE* %0)
  %40 = icmp ne i8 %39, 0
  br i1 %40, label %._crit_edge.loopexit, label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %38
  call void @unroll_loop(i32 24)
  %41 = call i64 @fread(i8* %36, i64 1, i64 5000, %struct._IO_FILE* %0)
  %42 = trunc i64 %41 to i32
  %43 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %.loopexit.loopexit, label %45

; <label>:45:                                     ; preds = %.lr.ph
  %46 = icmp sgt i32 %42, 0
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %45
  call void @BZ2_bzWrite(i32* %8, i8* %23, i8* %37, i32 %42)
  br label %48

; <label>:48:                                     ; preds = %47, %45
  %49 = load i32, i32* %8, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %.loopexit2.loopexit, label %38

._crit_edge.loopexit:                             ; preds = %38
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %33
  call void @BZ2_bzWriteClose64(i32* %8, i8* %23, i32 0, i32* %4, i32* %5, i32* %6, i32* %7)
  %51 = load i32, i32* %8, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %.loopexit2, label %53

; <label>:53:                                     ; preds = %._crit_edge
  %54 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %.loopexit, label %56

; <label>:56:                                     ; preds = %53
  %57 = call i32 @fflush(%struct._IO_FILE* %1)
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %.loopexit, label %59

; <label>:59:                                     ; preds = %56
  %60 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %61 = icmp ne %struct._IO_FILE* %1, %60
  br i1 %61, label %62, label %68

; <label>:62:                                     ; preds = %59
  %63 = call i32 @fileno(%struct._IO_FILE* %1) #9
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %.loopexit, label %65

; <label>:65:                                     ; preds = %62
  call void @applySavedFileAttrToOutputFile(i32 %63)
  %66 = call i32 @fclose(%struct._IO_FILE* %1)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %.loopexit, label %68

; <label>:68:                                     ; preds = %65, %59
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %69 = call i32 @ferror(%struct._IO_FILE* %0) #9
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %.loopexit, label %71

; <label>:71:                                     ; preds = %68
  %72 = call i32 @fclose(%struct._IO_FILE* %0)
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %.loopexit, label %74

; <label>:74:                                     ; preds = %71
  %75 = load i32, i32* @verbosity, align 4
  %76 = icmp sge i32 %75, 1
  br i1 %76, label %77, label %106

; <label>:77:                                     ; preds = %74
  %78 = load i32, i32* %4, align 4
  %79 = icmp eq i32 %78, 0
  %80 = load i32, i32* %5, align 4
  %81 = icmp eq i32 %80, 0
  %or.cond = and i1 %79, %81
  br i1 %or.cond, label %82, label %86

; <label>:82:                                     ; preds = %77
  %83 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %84 = getelementptr [22 x i8], [22 x i8]* @.str.74, i32 0, i32 0
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %83, i8* %84)
  br label %106

; <label>:86:                                     ; preds = %77
  %87 = load i32, i32* %4, align 4
  %88 = load i32, i32* %5, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %12, i32 %87, i32 %88)
  %89 = load i32, i32* %6, align 4
  %90 = load i32, i32* %7, align 4
  call void @uInt64_from_UInt32s(%struct.UInt64* %13, i32 %89, i32 %90)
  %91 = call double @uInt64_to_double(%struct.UInt64* %12)
  %92 = call double @uInt64_to_double(%struct.UInt64* %13)
  %93 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i32 0, i32 0
  call void @uInt64_toAscii(i8* %93, %struct.UInt64* %12)
  %94 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0
  call void @uInt64_toAscii(i8* %94, %struct.UInt64* %13)
  %95 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %96 = fdiv double %91, %92
  %97 = fmul double 8.000000e+00, %92
  %98 = fdiv double %97, %91
  %99 = fdiv double %92, %91
  %100 = fsub double 1.000000e+00, %99
  %101 = fmul double 1.000000e+02, %100
  %102 = getelementptr inbounds [32 x i8], [32 x i8]* %10, i32 0, i32 0
  %103 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i32 0, i32 0
  %104 = getelementptr [57 x i8], [57 x i8]* @.str.75, i32 0, i32 0
  %105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %95, i8* %104, double %96, double %98, double %101, i8* %102, i8* %103)
  br label %106

; <label>:106:                                    ; preds = %82, %86, %74
  ret void

.loopexit2.loopexit:                              ; preds = %48
  br label %.loopexit2

.loopexit2:                                       ; preds = %.loopexit2.loopexit, %._crit_edge, %19
  call void @BZ2_bzWriteClose64(i32* %9, i8* %23, i32 1, i32* %4, i32* %5, i32* %6, i32* %7)
  %107 = load i32, i32* %8, align 4
  switch i32 %107, label %110 [
    i32 -9, label %108
    i32 -3, label %109
    i32 -6, label %.loopexit
  ]

; <label>:108:                                    ; preds = %.loopexit2
  call void @configError() #12
  unreachable

; <label>:109:                                    ; preds = %.loopexit2
  call void @outOfMemory() #12
  unreachable

.loopexit.loopexit:                               ; preds = %.lr.ph
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit2, %71, %68, %65, %62, %56, %53, %16, %2
  call void @ioError() #12
  unreachable

; <label>:110:                                    ; preds = %.loopexit2
  %111 = getelementptr [26 x i8], [26 x i8]* @.str.76, i32 0, i32 0
  call void @panic(i8* %111) #12
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal void @uInt64_from_UInt32s(%struct.UInt64*, i32, i32) #0 {
  %4 = lshr i32 %2, 24
  %5 = and i32 %4, 255
  %6 = trunc i32 %5 to i8
  %7 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %8 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 7
  store i8 %6, i8* %8, align 1
  %9 = lshr i32 %2, 16
  %10 = and i32 %9, 255
  %11 = trunc i32 %10 to i8
  %12 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %13 = getelementptr inbounds [8 x i8], [8 x i8]* %12, i64 0, i64 6
  store i8 %11, i8* %13, align 1
  %14 = lshr i32 %2, 8
  %15 = and i32 %14, 255
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %18 = getelementptr inbounds [8 x i8], [8 x i8]* %17, i64 0, i64 5
  store i8 %16, i8* %18, align 1
  %19 = and i32 %2, 255
  %20 = trunc i32 %19 to i8
  %21 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %22 = getelementptr inbounds [8 x i8], [8 x i8]* %21, i64 0, i64 4
  store i8 %20, i8* %22, align 1
  %23 = lshr i32 %1, 24
  %24 = and i32 %23, 255
  %25 = trunc i32 %24 to i8
  %26 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %27 = getelementptr inbounds [8 x i8], [8 x i8]* %26, i64 0, i64 3
  store i8 %25, i8* %27, align 1
  %28 = lshr i32 %1, 16
  %29 = and i32 %28, 255
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %32 = getelementptr inbounds [8 x i8], [8 x i8]* %31, i64 0, i64 2
  store i8 %30, i8* %32, align 1
  %33 = lshr i32 %1, 8
  %34 = and i32 %33, 255
  %35 = trunc i32 %34 to i8
  %36 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %36, i64 0, i64 1
  store i8 %35, i8* %37, align 1
  %38 = and i32 %1, 255
  %39 = trunc i32 %38 to i8
  %40 = getelementptr inbounds %struct.UInt64, %struct.UInt64* %0, i32 0, i32 0
  %41 = getelementptr inbounds [8 x i8], [8 x i8]* %40, i64 0, i64 0
  store i8 %39, i8* %41, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal double @uInt64_to_double(%struct.UInt64*) #0 {
  br label %2

; <label>:2:                                      ; preds = %1, %2
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %2 ]
  %.05 = phi double [ 0.000000e+00, %1 ], [ %6, %2 ]
  %.023 = phi double [ 1.000000e+00, %1 ], [ %7, %2 ]
  %scevgep = getelementptr %struct.UInt64, %struct.UInt64* %0, i64 0, i32 0, i64 %indvars.iv
  %3 = load i8, i8* %scevgep, align 1
  %4 = uitofp i8 %3 to double
  %5 = fmul double %.023, %4
  %6 = fadd double %.05, %5
  %7 = fmul double %.023, 2.560000e+02
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 8
  br i1 %exitcond, label %2, label %8

; <label>:8:                                      ; preds = %2
  %.0.lcssa = phi double [ %6, %2 ]
  ret double %.0.lcssa
}

; Function Attrs: noinline nounwind uwtable
define internal void @uInt64_toAscii(i8*, %struct.UInt64*) #0 {
  %3 = alloca [32 x i8], align 16
  %4 = alloca %struct.UInt64, align 1
  %5 = bitcast %struct.UInt64* %4 to i8*
  %6 = bitcast %struct.UInt64* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 8, i1 false)
  br label %7

; <label>:7:                                      ; preds = %7, %2
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %7 ], [ 0, %2 ]
  %8 = call i32 @uInt64_qrm10(%struct.UInt64* %4)
  %9 = add nsw i32 %8, 48
  %10 = trunc i32 %9 to i8
  %scevgep5 = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %indvars.iv3
  store i8 %10, i8* %scevgep5, align 1
  %indvars.iv.next4 = add nuw i64 %indvars.iv3, 1
  %11 = call zeroext i8 @uInt64_isZero(%struct.UInt64* %4)
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %12, true
  br i1 %13, label %7, label %14

; <label>:14:                                     ; preds = %7
  %.lcssa.wide = phi i64 [ %indvars.iv.next4, %7 ]
  %15 = trunc i64 %.lcssa.wide to i32
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %0, i64 %16
  store i8 0, i8* %17, align 1
  %18 = sext i32 %15 to i64
  %19 = add i64 %18, -1
  %scevgep = getelementptr [32 x i8], [32 x i8]* %3, i64 0, i64 %19
  %scevgep1 = bitcast i8* %scevgep to [32 x i8]*
  br label %20

; <label>:20:                                     ; preds = %14, %20
  %lsr.iv = phi [32 x i8]* [ %scevgep1, %14 ], [ %22, %20 ]
  %indvars.iv = phi i64 [ 0, %14 ], [ %indvars.iv.next, %20 ]
  %lsr.iv3 = bitcast [32 x i8]* %lsr.iv to i8*
  call void @unroll_loop(i32 25)
  %21 = load i8, i8* %lsr.iv3, align 1
  %scevgep4 = getelementptr i8, i8* %0, i64 %indvars.iv
  store i8 %21, i8* %scevgep4, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %scevgep2 = getelementptr [32 x i8], [32 x i8]* %lsr.iv, i64 0, i64 -1
  %22 = bitcast i8* %scevgep2 to [32 x i8]*
  %23 = icmp slt i64 %indvars.iv.next, %18
  br i1 %23, label %20, label %24

; <label>:24:                                     ; preds = %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #8

; Function Attrs: noinline nounwind uwtable
define internal i32 @uInt64_qrm10(%struct.UInt64*) #0 {
  br label %2

; <label>:2:                                      ; preds = %1, %2
  %indvars.iv = phi i64 [ 7, %1 ], [ %indvars.iv.next, %2 ]
  %.012 = phi i32 [ 0, %1 ], [ %9, %2 ]
  %3 = mul nuw i32 %.012, 256
  %scevgep = getelementptr %struct.UInt64, %struct.UInt64* %0, i64 0, i32 0, i64 %indvars.iv
  %4 = load i8, i8* %scevgep, align 1
  %5 = zext i8 %4 to i32
  %6 = add i32 %3, %5
  %7 = udiv i32 %6, 10
  %8 = trunc i32 %7 to i8
  %scevgep1 = getelementptr %struct.UInt64, %struct.UInt64* %0, i64 0, i32 0, i64 %indvars.iv
  store i8 %8, i8* %scevgep1, align 1
  %9 = urem i32 %6, 10
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %10 = icmp sge i64 %indvars.iv.next, 0
  br i1 %10, label %2, label %11

; <label>:11:                                     ; preds = %2
  %.01.lcssa = phi i32 [ %9, %2 ]
  ret i32 %.01.lcssa
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @uInt64_isZero(%struct.UInt64*) #0 {
  br label %2

; <label>:2:                                      ; preds = %1, %6
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %6 ]
  %scevgep = getelementptr %struct.UInt64, %struct.UInt64* %0, i64 0, i32 0, i64 %indvars.iv
  %3 = load i8, i8* %scevgep, align 1
  %4 = zext i8 %3 to i32
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %8, label %6

; <label>:6:                                      ; preds = %2
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = icmp ult i64 %indvars.iv.next, 8
  br i1 %7, label %2, label %8

; <label>:8:                                      ; preds = %6, %2
  %.0 = phi i8 [ 0, %2 ], [ 1, %6 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @mkCell() #2 {
  %1 = call i8* @myMalloc(i32 16)
  %2 = bitcast i8* %1 to %struct.zzzz*
  %3 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 1
  store %struct.zzzz* null, %struct.zzzz** %4, align 8
  ret %struct.zzzz* %2
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @myMalloc(i32) #2 {
  %2 = sext i32 %0 to i64
  %3 = call noalias i8* @malloc(i64 %2) #9, !track !55
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %1
  call void @outOfMemory() #12
  unreachable

; <label>:6:                                      ; preds = %1
  ret i8* %3
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #1

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #1

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #1

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #7

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bz__AssertH__fail(i32) #0 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = call i8* @BZ2_bzlibVersion()
  %4 = getelementptr [443 x i8], [443 x i8]* @.str.105, i32 0, i32 0
  %5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* %4, i32 %0, i8* %3)
  %6 = icmp eq i32 %0, 1007
  br i1 %6, label %7, label %11

; <label>:7:                                      ; preds = %1
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = getelementptr [1057 x i8], [1057 x i8]* @.str.1.106, i32 0, i32 0
  %10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* %9)
  br label %11

; <label>:11:                                     ; preds = %7, %1
  call void @exit(i32 3) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzlibVersion() #0 {
  %1 = getelementptr [19 x i8], [19 x i8]* @.str.5.107, i32 0, i32 0
  ret i8* %1
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompressInit(%struct.bz_stream*, i32, i32, i32) #0 {
  %5 = call i32 @bz_config_ok()
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %7, label %152

; <label>:7:                                      ; preds = %4
  %8 = icmp eq %struct.bz_stream* %0, null
  %9 = icmp slt i32 %1, 1
  %or.cond = or i1 %8, %9
  %10 = icmp sgt i32 %1, 9
  %or.cond1 = or i1 %or.cond, %10
  %11 = icmp slt i32 %3, 0
  %or.cond2 = or i1 %or.cond1, %11
  %12 = icmp sgt i32 %3, 250
  %or.cond3 = or i1 %or.cond2, %12
  br i1 %or.cond3, label %152, label %13

; <label>:13:                                     ; preds = %7
  %14 = icmp eq i32 %3, 0
  %spec.select = select i1 %14, i32 30, i32 %3
  %15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 8
  %17 = icmp eq i8* (i8*, i32, i32)* %16, null
  br i1 %17, label %18, label %20

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %19, align 8
  br label %20

; <label>:20:                                     ; preds = %18, %13
  %21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %22 = load void (i8*, i8*)*, void (i8*, i8*)** %21, align 8
  %23 = icmp eq void (i8*, i8*)* %22, null
  br i1 %23, label %24, label %26

; <label>:24:                                     ; preds = %20
  %25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %25, align 8
  br label %26

; <label>:26:                                     ; preds = %24, %20
  %27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %28 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %27, align 8
  %29 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %30 = load i8*, i8** %29, align 8
  %31 = call i8* %28(i8* %30, i32 55768, i32 1)
  %32 = bitcast i8* %31 to %struct.EState*
  %33 = icmp eq %struct.EState* %32, null
  br i1 %33, label %152, label %34

; <label>:34:                                     ; preds = %26
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 0
  store %struct.bz_stream* %0, %struct.bz_stream** %35, align 8
  %36 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 4
  store i32* null, i32** %36, align 8
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 5
  store i32* null, i32** %37, align 8
  %38 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 6
  store i32* null, i32** %38, align 8
  %39 = mul nsw i32 100000, %1
  %40 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %41 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %40, align 8
  %42 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %43 = load i8*, i8** %42, align 8
  %44 = sext i32 %39 to i64
  %45 = mul i64 %44, 4
  %46 = trunc i64 %45 to i32
  %47 = call i8* %41(i8* %43, i32 %46, i32 1)
  %48 = bitcast i8* %47 to i32*
  %49 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 4
  store i32* %48, i32** %49, align 8
  %50 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %51 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %50, align 8
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %53 = load i8*, i8** %52, align 8
  %54 = add nsw i32 %39, 34
  %55 = sext i32 %54 to i64
  %56 = mul i64 %55, 4
  %57 = trunc i64 %56 to i32
  %58 = call i8* %51(i8* %53, i32 %57, i32 1)
  %59 = bitcast i8* %58 to i32*
  %60 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 5
  store i32* %59, i32** %60, align 8
  %61 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %62 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %61, align 8
  %63 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %64 = load i8*, i8** %63, align 8
  %65 = call i8* %62(i8* %64, i32 262148, i32 1)
  %66 = bitcast i8* %65 to i32*
  %67 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 6
  store i32* %66, i32** %67, align 8
  %68 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 4
  %69 = load i32*, i32** %68, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %79, label %71

; <label>:71:                                     ; preds = %34
  %72 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 5
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %79, label %75

; <label>:75:                                     ; preds = %71
  %76 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 6
  %77 = load i32*, i32** %76, align 8
  %78 = icmp eq i32* %77, null
  br i1 %78, label %79, label %123

; <label>:79:                                     ; preds = %75, %71, %34
  %80 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 4
  %81 = load i32*, i32** %80, align 8
  %82 = icmp ne i32* %81, null
  br i1 %82, label %83, label %91

; <label>:83:                                     ; preds = %79
  %84 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %85 = load void (i8*, i8*)*, void (i8*, i8*)** %84, align 8
  %86 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 4
  %89 = load i32*, i32** %88, align 8
  %90 = bitcast i32* %89 to i8*
  call void %85(i8* %87, i8* %90)
  br label %91

; <label>:91:                                     ; preds = %83, %79
  %92 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 5
  %93 = load i32*, i32** %92, align 8
  %94 = icmp ne i32* %93, null
  br i1 %94, label %95, label %103

; <label>:95:                                     ; preds = %91
  %96 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %97 = load void (i8*, i8*)*, void (i8*, i8*)** %96, align 8
  %98 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 5
  %101 = load i32*, i32** %100, align 8
  %102 = bitcast i32* %101 to i8*
  call void %97(i8* %99, i8* %102)
  br label %103

; <label>:103:                                    ; preds = %95, %91
  %104 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 6
  %105 = load i32*, i32** %104, align 8
  %106 = icmp ne i32* %105, null
  br i1 %106, label %107, label %115

; <label>:107:                                    ; preds = %103
  %108 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %109 = load void (i8*, i8*)*, void (i8*, i8*)** %108, align 8
  %110 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 6
  %113 = load i32*, i32** %112, align 8
  %114 = bitcast i32* %113 to i8*
  call void %109(i8* %111, i8* %114)
  br label %115

; <label>:115:                                    ; preds = %107, %103
  %116 = icmp ne %struct.EState* %32, null
  br i1 %116, label %117, label %152

; <label>:117:                                    ; preds = %115
  %118 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %119 = load void (i8*, i8*)*, void (i8*, i8*)** %118, align 8
  %120 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %121 = load i8*, i8** %120, align 8
  %122 = bitcast %struct.EState* %32 to i8*
  call void %119(i8* %121, i8* %122)
  br label %152

; <label>:123:                                    ; preds = %75
  %124 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 29
  store i32 0, i32* %124, align 4
  %125 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 2
  store i32 2, i32* %125, align 4
  %126 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 1
  store i32 2, i32* %126, align 8
  %127 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 27
  store i32 0, i32* %127, align 4
  %128 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 30
  store i32 %1, i32* %128, align 8
  %129 = mul nsw i32 100000, %1
  %130 = sub nsw i32 %129, 19
  %131 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 18
  store i32 %130, i32* %131, align 8
  %132 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 28
  store i32 %2, i32* %132, align 8
  %133 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 12
  store i32 %spec.select, i32* %133, align 8
  %134 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 5
  %135 = load i32*, i32** %134, align 8
  %136 = bitcast i32* %135 to i8*
  %137 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 9
  store i8* %136, i8** %137, align 8
  %138 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 4
  %139 = load i32*, i32** %138, align 8
  %140 = bitcast i32* %139 to i16*
  %141 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 10
  store i16* %140, i16** %141, align 8
  %142 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 11
  store i8* null, i8** %142, align 8
  %143 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 4
  %144 = load i32*, i32** %143, align 8
  %145 = getelementptr inbounds %struct.EState, %struct.EState* %32, i32 0, i32 8
  store i32* %144, i32** %145, align 8
  %146 = bitcast %struct.EState* %32 to i8*
  %147 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  store i8* %146, i8** %147, align 8
  %148 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 2
  store i32 0, i32* %148, align 4
  %149 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 3
  store i32 0, i32* %149, align 8
  %150 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 6
  store i32 0, i32* %150, align 4
  %151 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 7
  store i32 0, i32* %151, align 8
  call void @init_RL(%struct.EState* %32)
  call void @prepare_new_block(%struct.EState* %32)
  br label %152

; <label>:152:                                    ; preds = %115, %117, %26, %7, %4, %123
  %.0 = phi i32 [ 0, %123 ], [ -9, %4 ], [ -2, %7 ], [ -3, %26 ], [ -3, %117 ], [ -3, %115 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @bz_config_ok() #0 {
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @default_bzalloc(i8*, i32, i32) #0 {
  %4 = mul nsw i32 %1, %2
  %5 = sext i32 %4 to i64
  %6 = call noalias i8* @malloc(i64 %5) #9
  ret i8* %6
}

; Function Attrs: noinline nounwind uwtable
define internal void @default_bzfree(i8*, i8*) #0 {
  %3 = icmp ne i8* %1, null
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %2
  call void @free(i8* %1) #9
  br label %5

; <label>:5:                                      ; preds = %4, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @init_RL(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  store i32 256, i32* %2, align 4
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @prepare_new_block(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 20
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  store i32 -1, i32* %5, align 8
  %scevgep = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 22, i64 0
  br label %6

; <label>:6:                                      ; preds = %1, %6
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %6 ]
  call void @unroll_loop(i32 26)
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  store i8 0, i8* %scevgep1, align 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %6, label %7

; <label>:7:                                      ; preds = %6
  %8 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 29
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, 1
  store i32 %10, i32* %8, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompress(%struct.bz_stream*, i32) #0 {
  %3 = icmp eq %struct.bz_stream* %0, null
  br i1 %3, label %86, label %4

; <label>:4:                                      ; preds = %2
  %5 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.EState*
  %8 = icmp eq %struct.EState* %7, null
  br i1 %8, label %86, label %9

; <label>:9:                                      ; preds = %4
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 0
  %11 = load %struct.bz_stream*, %struct.bz_stream** %10, align 8
  %12 = icmp ne %struct.bz_stream* %11, %0
  br i1 %12, label %86, label %.preheader.preheader

.preheader.preheader:                             ; preds = %9
  %13 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 1
  %14 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 1
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 3
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 1
  %17 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 1
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 3
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 1
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.backedge
  call void @unroll_loop(i32 27)
  %20 = load i32, i32* %13, align 8
  switch i32 %20, label %.loopexit1 [
    i32 1, label %.loopexit
    i32 2, label %21
    i32 3, label %32
    i32 4, label %58
  ]

; <label>:21:                                     ; preds = %.preheader
  switch i32 %1, label %.loopexit [
    i32 0, label %22
    i32 1, label %28
    i32 2, label %30
  ]

; <label>:22:                                     ; preds = %21
  %23 = call zeroext i8 @handle_compress(%struct.bz_stream* %0)
  %24 = zext i8 %23 to i32
  %25 = icmp ne i32 %24, 0
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i32 1, i32 -2
  br label %86

; <label>:28:                                     ; preds = %21
  %29 = load i32, i32* %14, align 8
  store i32 %29, i32* %15, align 8
  store i32 3, i32* %16, align 8
  br label %.backedge

.backedge:                                        ; preds = %28, %30
  br label %.preheader

; <label>:30:                                     ; preds = %21
  %31 = load i32, i32* %17, align 8
  store i32 %31, i32* %18, align 8
  store i32 4, i32* %19, align 8
  br label %.backedge

; <label>:32:                                     ; preds = %.preheader
  %33 = icmp ne i32 %1, 1
  br i1 %33, label %86, label %34

; <label>:34:                                     ; preds = %32
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 0
  %38 = load %struct.bz_stream*, %struct.bz_stream** %37, align 8
  %39 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %38, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp ne i32 %36, %40
  br i1 %41, label %86, label %42

; <label>:42:                                     ; preds = %34
  %43 = call zeroext i8 @handle_compress(%struct.bz_stream* %0)
  %44 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp ugt i32 %45, 0
  br i1 %46, label %86, label %47

; <label>:47:                                     ; preds = %42
  %48 = call zeroext i8 @isempty_RL(%struct.EState* %7)
  %49 = icmp ne i8 %48, 0
  br i1 %49, label %50, label %86

; <label>:50:                                     ; preds = %47
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 20
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 19
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %52, %54
  br i1 %55, label %86, label %56

; <label>:56:                                     ; preds = %50
  %57 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 1
  store i32 2, i32* %57, align 8
  br label %86

; <label>:58:                                     ; preds = %.preheader
  %59 = icmp ne i32 %1, 2
  br i1 %59, label %86, label %60

; <label>:60:                                     ; preds = %58
  %61 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 0
  %64 = load %struct.bz_stream*, %struct.bz_stream** %63, align 8
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp ne i32 %62, %66
  br i1 %67, label %86, label %68

; <label>:68:                                     ; preds = %60
  %69 = call zeroext i8 @handle_compress(%struct.bz_stream* %0)
  %70 = icmp ne i8 %69, 0
  br i1 %70, label %71, label %86

; <label>:71:                                     ; preds = %68
  %72 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = icmp ugt i32 %73, 0
  br i1 %74, label %86, label %75

; <label>:75:                                     ; preds = %71
  %76 = call zeroext i8 @isempty_RL(%struct.EState* %7)
  %77 = icmp ne i8 %76, 0
  br i1 %77, label %78, label %86

; <label>:78:                                     ; preds = %75
  %79 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 20
  %80 = load i32, i32* %79, align 8
  %81 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 19
  %82 = load i32, i32* %81, align 4
  %83 = icmp slt i32 %80, %82
  br i1 %83, label %86, label %84

; <label>:84:                                     ; preds = %78
  %85 = getelementptr inbounds %struct.EState, %struct.EState* %7, i32 0, i32 1
  store i32 1, i32* %85, align 8
  br label %86

.loopexit:                                        ; preds = %.preheader, %21
  %.0.ph = phi i32 [ -2, %21 ], [ -1, %.preheader ]
  br label %86

.loopexit1:                                       ; preds = %.preheader
  %.0.ph2 = phi i32 [ 0, %.preheader ]
  br label %86

; <label>:86:                                     ; preds = %.loopexit1, %.loopexit, %71, %75, %78, %68, %60, %58, %42, %47, %50, %34, %32, %9, %4, %2, %84, %56, %22
  %.0 = phi i32 [ 4, %84 ], [ 1, %56 ], [ %27, %22 ], [ -2, %2 ], [ -2, %4 ], [ -2, %9 ], [ -1, %32 ], [ -1, %34 ], [ 2, %50 ], [ 2, %47 ], [ 2, %42 ], [ -1, %58 ], [ -1, %60 ], [ -1, %68 ], [ 3, %78 ], [ 3, %75 ], [ 3, %71 ], [ %.0.ph, %.loopexit ], [ %.0.ph2, %.loopexit1 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @handle_compress(%struct.bz_stream*) #0 {
  %2 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %3 = load i8*, i8** %2, align 8
  %4 = bitcast i8* %3 to %struct.EState*
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 20
  %8 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 19
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 1
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 1
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 3
  %13 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 1
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 3
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 17
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 18
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 3
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 1
  %20 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %4, i32 0, i32 2
  br label %22

; <label>:22:                                     ; preds = %1, %83
  %.01 = phi i8 [ 0, %1 ], [ %.12, %83 ]
  %.0 = phi i8 [ 0, %1 ], [ %.1, %83 ]
  call void @unroll_loop(i32 28)
  %23 = load i32, i32* %6, align 4
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %54

; <label>:25:                                     ; preds = %22
  %26 = call zeroext i8 @copy_output_until_stop(%struct.EState* %4)
  %27 = zext i8 %26 to i32
  %28 = zext i8 %.0 to i32
  %29 = or i32 %28, %27
  %30 = trunc i32 %29 to i8
  %31 = load i32, i32* %7, align 8
  %32 = load i32, i32* %8, align 4
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %.split.loop.exit7, label %34

; <label>:34:                                     ; preds = %25
  %35 = load i32, i32* %10, align 8
  %36 = icmp eq i32 %35, 4
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %34
  %38 = load i32, i32* %12, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %44

; <label>:40:                                     ; preds = %37
  %41 = call zeroext i8 @isempty_RL(%struct.EState* %4)
  %42 = zext i8 %41 to i32
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %.split.loop.exit4, label %44

; <label>:44:                                     ; preds = %40, %37, %34
  call void @prepare_new_block(%struct.EState* %4)
  store i32 2, i32* %13, align 4
  %45 = load i32, i32* %14, align 8
  %46 = icmp eq i32 %45, 3
  br i1 %46, label %47, label %54

; <label>:47:                                     ; preds = %44
  %48 = load i32, i32* %18, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %54

; <label>:50:                                     ; preds = %47
  %51 = call zeroext i8 @isempty_RL(%struct.EState* %4)
  %52 = zext i8 %51 to i32
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %.split.loop.exit1, label %54

; <label>:54:                                     ; preds = %44, %47, %50, %22
  %.1 = phi i8 [ %.0, %22 ], [ %30, %50 ], [ %30, %47 ], [ %30, %44 ]
  %55 = load i32, i32* %9, align 4
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %57, label %83

; <label>:57:                                     ; preds = %54
  %58 = call zeroext i8 @copy_input_until_stop(%struct.EState* %4)
  %59 = zext i8 %58 to i32
  %60 = zext i8 %.01 to i32
  %61 = or i32 %60, %59
  %62 = trunc i32 %61 to i8
  %63 = load i32, i32* %11, align 8
  %64 = icmp ne i32 %63, 2
  br i1 %64, label %65, label %73

; <label>:65:                                     ; preds = %57
  %66 = load i32, i32* %15, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %73

; <label>:68:                                     ; preds = %65
  call void @flush_RL(%struct.EState* %4)
  %69 = load i32, i32* %19, align 8
  %70 = icmp eq i32 %69, 4
  %71 = zext i1 %70 to i32
  %72 = trunc i32 %71 to i8
  call void @BZ2_compressBlock(%struct.EState* %4, i8 zeroext %72)
  store i32 1, i32* %20, align 4
  br label %83

; <label>:73:                                     ; preds = %65, %57
  %74 = load i32, i32* %16, align 4
  %75 = load i32, i32* %17, align 8
  %76 = icmp sge i32 %74, %75
  br i1 %76, label %77, label %78

; <label>:77:                                     ; preds = %73
  call void @BZ2_compressBlock(%struct.EState* %4, i8 zeroext 0)
  store i32 1, i32* %21, align 4
  br label %83

; <label>:78:                                     ; preds = %73
  %79 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %80 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %79, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %.split.loop.exit, label %83

; <label>:83:                                     ; preds = %68, %78, %77, %54
  %.12 = phi i8 [ %.01, %54 ], [ %62, %77 ], [ %62, %78 ], [ %62, %68 ]
  br label %22

.split.loop.exit:                                 ; preds = %78
  %.lcssa = phi i32 [ %61, %78 ]
  %.2.ph = phi i8 [ %.1, %78 ]
  %84 = trunc i32 %.lcssa to i8
  br label %88

.split.loop.exit1:                                ; preds = %50
  %.lcssa12 = phi i32 [ %29, %50 ]
  %.23.ph2 = phi i8 [ %.01, %50 ]
  %85 = trunc i32 %.lcssa12 to i8
  br label %88

.split.loop.exit4:                                ; preds = %40
  %.lcssa11 = phi i32 [ %29, %40 ]
  %.23.ph5 = phi i8 [ %.01, %40 ]
  %86 = trunc i32 %.lcssa11 to i8
  br label %88

.split.loop.exit7:                                ; preds = %25
  %.lcssa10 = phi i32 [ %29, %25 ]
  %.23.ph8 = phi i8 [ %.01, %25 ]
  %87 = trunc i32 %.lcssa10 to i8
  br label %88

; <label>:88:                                     ; preds = %.split.loop.exit7, %.split.loop.exit4, %.split.loop.exit1, %.split.loop.exit
  %.23 = phi i8 [ %84, %.split.loop.exit ], [ %.23.ph2, %.split.loop.exit1 ], [ %.23.ph5, %.split.loop.exit4 ], [ %.23.ph8, %.split.loop.exit7 ]
  %.2 = phi i8 [ %.2.ph, %.split.loop.exit ], [ %85, %.split.loop.exit1 ], [ %86, %.split.loop.exit4 ], [ %87, %.split.loop.exit7 ]
  %89 = zext i8 %.23 to i32
  %90 = icmp ne i32 %89, 0
  %91 = zext i8 %.2 to i32
  %92 = icmp ne i32 %91, 0
  %93 = select i1 %90, i1 true, i1 %92
  %94 = zext i1 %93 to i32
  %95 = trunc i32 %94 to i8
  ret i8 %95
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @isempty_RL(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = icmp ult i32 %3, 256
  br i1 %4, label %5, label %9

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %10, label %9

; <label>:9:                                      ; preds = %5, %1
  br label %10

; <label>:10:                                     ; preds = %5, %9
  %.0 = phi i8 [ 1, %9 ], [ 0, %5 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @copy_output_until_stop(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %3 = load %struct.bz_stream*, %struct.bz_stream** %2, align 8
  %4 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %1
  call void @unroll_loop(i32 29)
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 20
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %10 = load i32, i32* %9, align 4
  %11 = icmp sge i32 %8, %10
  br i1 %11, label %._crit_edge, label %.lr.ph1.preheader

.lr.ph1.preheader:                                ; preds = %.lr.ph.preheader
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 11
  %13 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 20
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %15 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 20
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %20 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  br label %.lr.ph1

.lr.ph:                                           ; preds = %55
  call void @unroll_loop(i32 29)
  %21 = load i32, i32* %7, align 8
  %22 = load i32, i32* %9, align 4
  %23 = icmp sge i32 %21, %22
  br i1 %23, label %._crit_edge.loopexit, label %.lr.ph1

.lr.ph1:                                          ; preds = %.lr.ph1.preheader, %.lr.ph
  %24 = load i8*, i8** %12, align 8
  %25 = load i32, i32* %13, align 8
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = load %struct.bz_stream*, %struct.bz_stream** %14, align 8
  %30 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %29, i32 0, i32 4
  %31 = load i8*, i8** %30, align 8
  store i8 %28, i8* %31, align 1
  %32 = load i32, i32* %15, align 8
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %15, align 8
  %34 = load %struct.bz_stream*, %struct.bz_stream** %16, align 8
  %35 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %34, i32 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, -1
  store i32 %37, i32* %35, align 8
  %38 = load %struct.bz_stream*, %struct.bz_stream** %17, align 8
  %39 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %38, i32 0, i32 4
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds i8, i8* %40, i32 1
  store i8* %41, i8** %39, align 8
  %42 = load %struct.bz_stream*, %struct.bz_stream** %18, align 8
  %43 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i32 0, i32 6
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %43, align 4
  %46 = load %struct.bz_stream*, %struct.bz_stream** %19, align 8
  %47 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %46, i32 0, i32 6
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %55

; <label>:50:                                     ; preds = %.lr.ph1
  %51 = load %struct.bz_stream*, %struct.bz_stream** %20, align 8
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %51, i32 0, i32 7
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %53, 1
  store i32 %54, i32* %52, align 8
  br label %55

; <label>:55:                                     ; preds = %50, %.lr.ph1
  %56 = load %struct.bz_stream*, %struct.bz_stream** %2, align 8
  %57 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %56, i32 0, i32 5
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %.lr.ph, %55
  %.02.ph = phi i8 [ 1, %.lr.ph ], [ 1, %55 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.lr.ph.preheader, %1
  %.02 = phi i8 [ 0, %1 ], [ 0, %.lr.ph.preheader ], [ %.02.ph, %._crit_edge.loopexit ]
  ret i8 %.02
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @copy_input_until_stop(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 18
  %8 = load i32, i32* %7, align 8
  %9 = icmp sge i32 %6, %8
  br i1 %4, label %10, label %116

; <label>:10:                                     ; preds = %1
  br i1 %9, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %10
  call void @unroll_loop(i32 30)
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %12 = load %struct.bz_stream*, %struct.bz_stream** %11, align 8
  %13 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %._crit_edge, label %.lr.ph3.preheader

.lr.ph3.preheader:                                ; preds = %.lr.ph.preheader
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %20 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %22 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %23 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %25 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %26 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %27 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %29 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %30 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %31 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %32 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %33 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %34 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %36 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %38 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %39 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  br label %.lr.ph3

.lr.ph:                                           ; preds = %112
  call void @unroll_loop(i32 30)
  %40 = load %struct.bz_stream*, %struct.bz_stream** %11, align 8
  %41 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %40, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %._crit_edge.loopexit, label %.lr.ph3

.lr.ph3:                                          ; preds = %.lr.ph3.preheader, %.lr.ph
  %44 = load %struct.bz_stream*, %struct.bz_stream** %16, align 8
  %45 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %44, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = load i32, i32* %17, align 4
  %50 = icmp ne i32 %48, %49
  br i1 %50, label %51, label %76

; <label>:51:                                     ; preds = %.lr.ph3
  %52 = load i32, i32* %18, align 8
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %76

; <label>:54:                                     ; preds = %51
  %55 = load i32, i32* %24, align 4
  %56 = trunc i32 %55 to i8
  %57 = load i32, i32* %25, align 8
  %58 = shl i32 %57, 8
  %59 = load i32, i32* %26, align 8
  %60 = lshr i32 %59, 24
  %61 = zext i8 %56 to i32
  %62 = xor i32 %60, %61
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = xor i32 %58, %65
  store i32 %66, i32* %27, align 8
  %67 = load i32, i32* %29, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* %28, i64 0, i64 %68
  store i8 1, i8* %69, align 1
  %70 = load i8*, i8** %30, align 8
  %71 = load i32, i32* %31, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %70, i64 %72
  store i8 %56, i8* %73, align 1
  %74 = load i32, i32* %32, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %32, align 4
  store i32 %48, i32* %33, align 4
  br label %90

; <label>:76:                                     ; preds = %51, %.lr.ph3
  %77 = load i32, i32* %23, align 4
  %78 = icmp ne i32 %48, %77
  br i1 %78, label %82, label %79

; <label>:79:                                     ; preds = %76
  %80 = load i32, i32* %36, align 8
  %81 = icmp eq i32 %80, 255
  br i1 %81, label %82, label %87

; <label>:82:                                     ; preds = %79, %76
  %83 = load i32, i32* %35, align 4
  %84 = icmp ult i32 %83, 256
  br i1 %84, label %85, label %86

; <label>:85:                                     ; preds = %82
  call void @add_pair_to_block(%struct.EState* %0)
  br label %86

; <label>:86:                                     ; preds = %85, %82
  store i32 %48, i32* %37, align 4
  store i32 1, i32* %38, align 8
  br label %90

; <label>:87:                                     ; preds = %79
  %88 = load i32, i32* %39, align 8
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %39, align 8
  br label %90

; <label>:90:                                     ; preds = %86, %87, %54
  %91 = load %struct.bz_stream*, %struct.bz_stream** %19, align 8
  %92 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %91, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %94, i8** %92, align 8
  %95 = load %struct.bz_stream*, %struct.bz_stream** %20, align 8
  %96 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %95, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, -1
  store i32 %98, i32* %96, align 8
  %99 = load %struct.bz_stream*, %struct.bz_stream** %21, align 8
  %100 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %99, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = load %struct.bz_stream*, %struct.bz_stream** %22, align 8
  %104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %103, i32 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %112

; <label>:107:                                    ; preds = %90
  %108 = load %struct.bz_stream*, %struct.bz_stream** %34, align 8
  %109 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %108, i32 0, i32 3
  %110 = load i32, i32* %109, align 8
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 8
  br label %112

; <label>:112:                                    ; preds = %107, %90
  %113 = load i32, i32* %5, align 4
  %114 = load i32, i32* %7, align 8
  %115 = icmp sge i32 %113, %114
  br i1 %115, label %._crit_edge.loopexit, label %.lr.ph

; <label>:116:                                    ; preds = %1
  br i1 %9, label %._crit_edge, label %.lr.ph9.preheader

.lr.ph9.preheader:                                ; preds = %116
  %117 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 3
  call void @unroll_loop(i32 31)
  %118 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %119 = load %struct.bz_stream*, %struct.bz_stream** %118, align 8
  %120 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %119, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %._crit_edge, label %.lr.ph6.preheader

.lr.ph6.preheader:                                ; preds = %.lr.ph9.preheader
  %123 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %124 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %125 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %126 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %127 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %128 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %129 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %130 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %131 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %132 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %133 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %134 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %135 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %136 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %137 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %138 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %139 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %140 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %141 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 0
  %142 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 3
  %143 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %144 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %145 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %146 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %147 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %148 = load i32, i32* %117, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %._crit_edge.loopexit1, label %.lr.ph4

.lr.ph4:                                          ; preds = %.lr.ph6.preheader
  br label %156

.lr.ph9:                                          ; preds = %225
  call void @unroll_loop(i32 31)
  %150 = load %struct.bz_stream*, %struct.bz_stream** %118, align 8
  %151 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %150, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %.lr.ph9.._crit_edge.loopexit1_crit_edge, label %.lr.ph6

.lr.ph6:                                          ; preds = %.lr.ph9
  %.175 = phi i8 [ 1, %.lr.ph9 ]
  %154 = load i32, i32* %117, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %.lr.ph6.._crit_edge.loopexit1_crit_edge, label %156

; <label>:156:                                    ; preds = %.lr.ph4, %.lr.ph6
  %157 = load %struct.bz_stream*, %struct.bz_stream** %123, align 8
  %158 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %157, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = load i32, i32* %124, align 4
  %163 = icmp ne i32 %161, %162
  br i1 %163, label %164, label %189

; <label>:164:                                    ; preds = %156
  %165 = load i32, i32* %125, align 8
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %189

; <label>:167:                                    ; preds = %164
  %168 = load i32, i32* %131, align 4
  %169 = trunc i32 %168 to i8
  %170 = load i32, i32* %132, align 8
  %171 = shl i32 %170, 8
  %172 = load i32, i32* %133, align 8
  %173 = lshr i32 %172, 24
  %174 = zext i8 %169 to i32
  %175 = xor i32 %173, %174
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %176
  %178 = load i32, i32* %177, align 4
  %179 = xor i32 %171, %178
  store i32 %179, i32* %134, align 8
  %180 = load i32, i32* %136, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds [256 x i8], [256 x i8]* %135, i64 0, i64 %181
  store i8 1, i8* %182, align 1
  %183 = load i8*, i8** %137, align 8
  %184 = load i32, i32* %138, align 4
  %185 = sext i32 %184 to i64
  %186 = getelementptr inbounds i8, i8* %183, i64 %185
  store i8 %169, i8* %186, align 1
  %187 = load i32, i32* %139, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %139, align 4
  store i32 %161, i32* %140, align 4
  br label %203

; <label>:189:                                    ; preds = %164, %156
  %190 = load i32, i32* %130, align 4
  %191 = icmp ne i32 %161, %190
  br i1 %191, label %195, label %192

; <label>:192:                                    ; preds = %189
  %193 = load i32, i32* %144, align 8
  %194 = icmp eq i32 %193, 255
  br i1 %194, label %195, label %200

; <label>:195:                                    ; preds = %192, %189
  %196 = load i32, i32* %143, align 4
  %197 = icmp ult i32 %196, 256
  br i1 %197, label %198, label %199

; <label>:198:                                    ; preds = %195
  call void @add_pair_to_block(%struct.EState* %0)
  br label %199

; <label>:199:                                    ; preds = %198, %195
  store i32 %161, i32* %145, align 4
  store i32 1, i32* %146, align 8
  br label %203

; <label>:200:                                    ; preds = %192
  %201 = load i32, i32* %147, align 8
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %147, align 8
  br label %203

; <label>:203:                                    ; preds = %199, %200, %167
  %204 = load %struct.bz_stream*, %struct.bz_stream** %126, align 8
  %205 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %204, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  %207 = getelementptr inbounds i8, i8* %206, i32 1
  store i8* %207, i8** %205, align 8
  %208 = load %struct.bz_stream*, %struct.bz_stream** %127, align 8
  %209 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %208, i32 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = add i32 %210, -1
  store i32 %211, i32* %209, align 8
  %212 = load %struct.bz_stream*, %struct.bz_stream** %128, align 8
  %213 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %212, i32 0, i32 2
  %214 = load i32, i32* %213, align 4
  %215 = add i32 %214, 1
  store i32 %215, i32* %213, align 4
  %216 = load %struct.bz_stream*, %struct.bz_stream** %129, align 8
  %217 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %216, i32 0, i32 2
  %218 = load i32, i32* %217, align 4
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %225

; <label>:220:                                    ; preds = %203
  %221 = load %struct.bz_stream*, %struct.bz_stream** %141, align 8
  %222 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %221, i32 0, i32 3
  %223 = load i32, i32* %222, align 8
  %224 = add i32 %223, 1
  store i32 %224, i32* %222, align 8
  br label %225

; <label>:225:                                    ; preds = %220, %203
  %226 = load i32, i32* %142, align 8
  %227 = add i32 %226, -1
  store i32 %227, i32* %142, align 8
  %228 = load i32, i32* %5, align 4
  %229 = load i32, i32* %7, align 8
  %230 = icmp sge i32 %228, %229
  br i1 %230, label %.._crit_edge.loopexit1_crit_edge, label %.lr.ph9

._crit_edge.loopexit:                             ; preds = %112, %.lr.ph
  %.2.ph = phi i8 [ 1, %112 ], [ 1, %.lr.ph ]
  br label %._crit_edge

.._crit_edge.loopexit1_crit_edge:                 ; preds = %225
  %split = phi i8 [ 1, %225 ]
  br label %._crit_edge.loopexit1

.lr.ph9.._crit_edge.loopexit1_crit_edge:          ; preds = %.lr.ph9
  %split5 = phi i8 [ 1, %.lr.ph9 ]
  br label %._crit_edge.loopexit1

.lr.ph6.._crit_edge.loopexit1_crit_edge:          ; preds = %.lr.ph6
  %split6 = phi i8 [ %.175, %.lr.ph6 ]
  br label %._crit_edge.loopexit1

._crit_edge.loopexit1:                            ; preds = %.lr.ph6.._crit_edge.loopexit1_crit_edge, %.lr.ph9.._crit_edge.loopexit1_crit_edge, %.._crit_edge.loopexit1_crit_edge, %.lr.ph6.preheader
  %.2.ph2 = phi i8 [ %split, %.._crit_edge.loopexit1_crit_edge ], [ %split5, %.lr.ph9.._crit_edge.loopexit1_crit_edge ], [ %split6, %.lr.ph6.._crit_edge.loopexit1_crit_edge ], [ 0, %.lr.ph6.preheader ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit1, %._crit_edge.loopexit, %.lr.ph9.preheader, %.lr.ph.preheader, %116, %10
  %.2 = phi i8 [ 0, %10 ], [ 0, %116 ], [ 0, %.lr.ph.preheader ], [ 0, %.lr.ph9.preheader ], [ %.2.ph, %._crit_edge.loopexit ], [ %.2.ph2, %._crit_edge.loopexit1 ]
  ret i8 %.2
}

; Function Attrs: noinline nounwind uwtable
define internal void @flush_RL(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = icmp ult i32 %3, 256
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %1
  call void @add_pair_to_block(%struct.EState* %0)
  br label %6

; <label>:6:                                      ; preds = %5, %1
  call void @init_RL(%struct.EState* %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_pair_to_block(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = trunc i32 %3 to i8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 0, %6
  br i1 %7, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %1
  %8 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %10 = zext i8 %4 to i32
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.01 = phi i32 [ %21, %.lr.ph ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 10)
  %12 = load i32, i32* %8, align 8
  %13 = shl i32 %12, 8
  %14 = load i32, i32* %9, align 8
  %15 = lshr i32 %14, 24
  %16 = xor i32 %15, %10
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %17
  %19 = load i32, i32* %18, align 4
  %20 = xor i32 %13, %19
  store i32 %20, i32* %11, align 8
  %21 = add nuw nsw i32 %.01, 1
  %22 = load i32, i32* %5, align 8
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %25 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 13
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [256 x i8], [256 x i8]* %24, i64 0, i64 %27
  store i8 1, i8* %28, align 1
  %29 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %30 = load i32, i32* %29, align 8
  switch i32 %30, label %88 [
    i32 1, label %31
    i32 2, label %41
    i32 3, label %60
  ]

; <label>:31:                                     ; preds = %._crit_edge
  %32 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %33, i64 %36
  store i8 %4, i8* %37, align 1
  %38 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %38, align 4
  br label %144

; <label>:41:                                     ; preds = %._crit_edge
  %42 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %43, i64 %46
  store i8 %4, i8* %47, align 1
  %48 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %48, align 4
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  store i8 %4, i8* %56, align 1
  %57 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %57, align 4
  br label %144

; <label>:60:                                     ; preds = %._crit_edge
  %61 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  store i8 %4, i8* %66, align 1
  %67 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %68 = load i32, i32* %67, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %67, align 4
  %70 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %73 = load i32, i32* %72, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %71, i64 %74
  store i8 %4, i8* %75, align 1
  %76 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 4
  %79 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %80, i64 %83
  store i8 %4, i8* %84, align 1
  %85 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %85, align 4
  br label %144

; <label>:88:                                     ; preds = %._crit_edge
  %89 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 22
  %90 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %91 = load i32, i32* %90, align 8
  %92 = sub nsw i32 %91, 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [256 x i8], [256 x i8]* %89, i64 0, i64 %93
  store i8 1, i8* %94, align 1
  %95 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %96, i64 %99
  store i8 %4, i8* %100, align 1
  %101 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %101, align 4
  %104 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %105 = load i8*, i8** %104, align 8
  %106 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %107 = load i32, i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %105, i64 %108
  store i8 %4, i8* %109, align 1
  %110 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %111 = load i32, i32* %110, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %116 = load i32, i32* %115, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %114, i64 %117
  store i8 %4, i8* %118, align 1
  %119 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %120 = load i32, i32* %119, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %119, align 4
  %122 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %123, i64 %126
  store i8 %4, i8* %127, align 1
  %128 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %129 = load i32, i32* %128, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %128, align 4
  %131 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 14
  %132 = load i32, i32* %131, align 8
  %133 = sub nsw i32 %132, 4
  %134 = trunc i32 %133 to i8
  %135 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %138 = load i32, i32* %137, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %136, i64 %139
  store i8 %134, i8* %140, align 1
  %141 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %142 = load i32, i32* %141, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %141, align 4
  br label %144

; <label>:144:                                    ; preds = %88, %60, %41, %31
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzCompressEnd(%struct.bz_stream*) #0 {
  %2 = icmp eq %struct.bz_stream* %0, null
  br i1 %2, label %56, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.EState*
  %7 = icmp eq %struct.EState* %6, null
  br i1 %7, label %56, label %8

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 0
  %10 = load %struct.bz_stream*, %struct.bz_stream** %9, align 8
  %11 = icmp ne %struct.bz_stream* %10, %0
  br i1 %11, label %56, label %12

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 4
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ne i32* %14, null
  br i1 %15, label %16, label %24

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %18 = load void (i8*, i8*)*, void (i8*, i8*)** %17, align 8
  %19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 4
  %22 = load i32*, i32** %21, align 8
  %23 = bitcast i32* %22 to i8*
  call void %18(i8* %20, i8* %23)
  br label %24

; <label>:24:                                     ; preds = %16, %12
  %25 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 5
  %26 = load i32*, i32** %25, align 8
  %27 = icmp ne i32* %26, null
  br i1 %27, label %28, label %36

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %30 = load void (i8*, i8*)*, void (i8*, i8*)** %29, align 8
  %31 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 5
  %34 = load i32*, i32** %33, align 8
  %35 = bitcast i32* %34 to i8*
  call void %30(i8* %32, i8* %35)
  br label %36

; <label>:36:                                     ; preds = %28, %24
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 6
  %38 = load i32*, i32** %37, align 8
  %39 = icmp ne i32* %38, null
  br i1 %39, label %40, label %48

; <label>:40:                                     ; preds = %36
  %41 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %42 = load void (i8*, i8*)*, void (i8*, i8*)** %41, align 8
  %43 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.EState, %struct.EState* %6, i32 0, i32 6
  %46 = load i32*, i32** %45, align 8
  %47 = bitcast i32* %46 to i8*
  call void %42(i8* %44, i8* %47)
  br label %48

; <label>:48:                                     ; preds = %40, %36
  %49 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %50 = load void (i8*, i8*)*, void (i8*, i8*)** %49, align 8
  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %54 = load i8*, i8** %53, align 8
  call void %50(i8* %52, i8* %54)
  %55 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  store i8* null, i8** %55, align 8
  br label %56

; <label>:56:                                     ; preds = %8, %3, %1, %48
  %.0 = phi i32 [ 0, %48 ], [ -2, %1 ], [ -2, %3 ], [ -2, %8 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompressInit(%struct.bz_stream*, i32, i32) #0 {
  %4 = call i32 @bz_config_ok()
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %6, label %50

; <label>:6:                                      ; preds = %3
  %7 = icmp ne %struct.bz_stream* %0, null
  %switch = icmp ult i32 %2, 2
  %or.cond1 = and i1 %7, %switch
  br i1 %or.cond1, label %8, label %50

; <label>:8:                                      ; preds = %6
  %9 = icmp slt i32 %1, 0
  %10 = icmp sgt i32 %1, 4
  %or.cond = or i1 %9, %10
  br i1 %or.cond, label %50, label %11

; <label>:11:                                     ; preds = %8
  %12 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %13 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %12, align 8
  %14 = icmp eq i8* (i8*, i32, i32)* %13, null
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %16, align 8
  br label %17

; <label>:17:                                     ; preds = %15, %11
  %18 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %19 = load void (i8*, i8*)*, void (i8*, i8*)** %18, align 8
  %20 = icmp eq void (i8*, i8*)* %19, null
  br i1 %20, label %21, label %23

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %22, align 8
  br label %23

; <label>:23:                                     ; preds = %21, %17
  %24 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 9
  %25 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %24, align 8
  %26 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %27 = load i8*, i8** %26, align 8
  %28 = call i8* %25(i8* %27, i32 64144, i32 1)
  %29 = bitcast i8* %28 to %struct.DState*
  %30 = icmp eq %struct.DState* %29, null
  br i1 %30, label %50, label %31

; <label>:31:                                     ; preds = %23
  %32 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 0
  store %struct.bz_stream* %0, %struct.bz_stream** %32, align 8
  %33 = bitcast %struct.DState* %29 to i8*
  %34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 1
  store i32 10, i32* %35, align 8
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 8
  store i32 0, i32* %36, align 4
  %37 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 7
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 26
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 2
  store i32 0, i32* %39, align 4
  %40 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 3
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 6
  store i32 0, i32* %41, align 4
  %42 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 7
  store i32 0, i32* %42, align 8
  %43 = trunc i32 %2 to i8
  %44 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 10
  store i8 %43, i8* %44, align 4
  %45 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 22
  store i8* null, i8** %45, align 8
  %46 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 21
  store i16* null, i16** %46, align 8
  %47 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 20
  store i32* null, i32** %47, align 8
  %48 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 11
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %struct.DState, %struct.DState* %29, i32 0, i32 12
  store i32 %1, i32* %49, align 4
  br label %50

; <label>:50:                                     ; preds = %6, %23, %8, %3, %31
  %.0 = phi i32 [ 0, %31 ], [ -9, %3 ], [ -2, %6 ], [ -2, %8 ], [ -3, %23 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_indexIntoF(i32, i32*) #0 {
  br label %3

; <label>:3:                                      ; preds = %3, %2
  %.01 = phi i32 [ 0, %2 ], [ %..01, %3 ]
  %.0 = phi i32 [ 256, %2 ], [ %.0., %3 ]
  call void @unroll_loop(i32 35)
  %4 = add nsw i32 %.01, %.0
  %5 = ashr i32 %4, 1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i32, i32* %1, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = icmp sge i32 %0, %8
  %..01 = select i1 %9, i32 %5, i32 %.01
  %.0. = select i1 %9, i32 %.0, i32 %5
  %10 = sub nsw i32 %.0., %..01
  %11 = icmp ne i32 %10, 1
  br i1 %11, label %3, label %12

; <label>:12:                                     ; preds = %3
  %.12.lcssa = phi i32 [ %..01, %3 ]
  ret i32 %.12.lcssa
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompress(%struct.bz_stream*) #0 {
  %2 = icmp eq %struct.bz_stream* %0, null
  br i1 %2, label %._crit_edge, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.DState*
  %7 = icmp eq %struct.DState* %6, null
  br i1 %7, label %._crit_edge, label %8

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 0
  %10 = load %struct.bz_stream*, %struct.bz_stream** %9, align 8
  %11 = icmp ne %struct.bz_stream* %10, %0
  br i1 %11, label %._crit_edge, label %12

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %12
  %16 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 1
  %17 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 10
  %18 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 1
  %19 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 17
  %20 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 51
  %21 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 1
  %22 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 3
  %23 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 25
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 25
  %25 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 12
  %26 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 23
  %27 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 25
  %28 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 12
  %29 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 25
  %30 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 23
  %31 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 26
  %32 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 26
  %33 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 26
  %34 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 25
  %35 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 26
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %112
  call void @unroll_loop(i32 36)
  %37 = load i32, i32* %16, align 8
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %85

; <label>:39:                                     ; preds = %.lr.ph
  %40 = load i8, i8* %17, align 4
  %41 = icmp ne i8 %40, 0
  br i1 %41, label %42, label %44

; <label>:42:                                     ; preds = %39
  %43 = call zeroext i8 @unRLE_obuf_to_output_SMALL(%struct.DState* %6)
  br label %46

; <label>:44:                                     ; preds = %39
  %45 = call zeroext i8 @unRLE_obuf_to_output_FAST(%struct.DState* %6)
  br label %46

; <label>:46:                                     ; preds = %44, %42
  %.01 = phi i8 [ %43, %42 ], [ %45, %44 ]
  %47 = icmp ne i8 %.01, 0
  br i1 %47, label %._crit_edge.loopexit, label %48

; <label>:48:                                     ; preds = %46
  %49 = load i32, i32* %19, align 4
  %50 = load i32, i32* %20, align 8
  %51 = add nsw i32 %50, 1
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %53, label %._crit_edge.loopexit

; <label>:53:                                     ; preds = %48
  %54 = load i32, i32* %22, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %._crit_edge.loopexit

; <label>:56:                                     ; preds = %53
  %57 = load i32, i32* %23, align 8
  %58 = xor i32 %57, -1
  store i32 %58, i32* %24, align 8
  %59 = load i32, i32* %25, align 4
  %60 = icmp sge i32 %59, 3
  br i1 %60, label %61, label %66

; <label>:61:                                     ; preds = %56
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %63 = load i32, i32* %26, align 8
  %64 = load i32, i32* %27, align 8
  %65 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2.108, i64 0, i64 0), i32 %63, i32 %64)
  br label %66

; <label>:66:                                     ; preds = %61, %56
  %67 = load i32, i32* %28, align 4
  %68 = icmp sge i32 %67, 2
  br i1 %68, label %69, label %72

; <label>:69:                                     ; preds = %66
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.109, i64 0, i64 0))
  br label %72

; <label>:72:                                     ; preds = %69, %66
  %73 = load i32, i32* %29, align 8
  %74 = load i32, i32* %30, align 8
  %75 = icmp ne i32 %73, %74
  br i1 %75, label %._crit_edge.loopexit, label %76

; <label>:76:                                     ; preds = %72
  %77 = load i32, i32* %31, align 4
  %78 = shl i32 %77, 1
  %79 = load i32, i32* %32, align 4
  %80 = lshr i32 %79, 31
  %81 = or i32 %78, %80
  store i32 %81, i32* %33, align 4
  %82 = load i32, i32* %34, align 8
  %83 = load i32, i32* %35, align 4
  %84 = xor i32 %83, %82
  store i32 %84, i32* %35, align 4
  store i32 14, i32* %36, align 8
  br label %85

; <label>:85:                                     ; preds = %76, %.lr.ph
  %86 = load i32, i32* %18, align 8
  %87 = icmp sge i32 %86, 10
  br i1 %87, label %88, label %112

; <label>:88:                                     ; preds = %85
  %89 = call i32 @BZ2_decompress(%struct.DState* %6)
  %90 = icmp eq i32 %89, 4
  br i1 %90, label %91, label %109

; <label>:91:                                     ; preds = %88
  %.lcssa = phi i32 [ %89, %88 ]
  %92 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 12
  %93 = load i32, i32* %92, align 4
  %94 = icmp sge i32 %93, 3
  br i1 %94, label %95, label %103

; <label>:95:                                     ; preds = %91
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %97 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 24
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 26
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr [55 x i8], [55 x i8]* @.str.4.110, i32 0, i32 0
  %102 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* %101, i32 %98, i32 %100)
  br label %103

; <label>:103:                                    ; preds = %95, %91
  %104 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 26
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 24
  %107 = load i32, i32* %106, align 4
  %108 = icmp ne i32 %105, %107
  %..lcssa = select i1 %108, i32 -4, i32 %.lcssa
  br label %._crit_edge

; <label>:109:                                    ; preds = %88
  %110 = load i32, i32* %21, align 8
  %111 = icmp ne i32 %110, 2
  br i1 %111, label %._crit_edge.loopexit, label %112

; <label>:112:                                    ; preds = %109, %85
  %113 = load i32, i32* %13, align 8
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %112, %46, %72, %53, %48, %109
  %.0.ph = phi i32 [ -1, %112 ], [ -4, %46 ], [ -4, %72 ], [ 0, %53 ], [ 0, %48 ], [ %89, %109 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %103, %12, %8, %3, %1
  %.0 = phi i32 [ -2, %1 ], [ -2, %3 ], [ -2, %8 ], [ -1, %12 ], [ %..lcssa, %103 ], [ %.0.ph, %._crit_edge.loopexit ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @unRLE_obuf_to_output_SMALL(%struct.DState*) #0 {
  %2 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %3 = load i8, i8* %2, align 4
  %4 = icmp ne i8 %3, 0
  %5 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %6 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %7 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %6, i32 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %4, label %10, label %500

; <label>:10:                                     ; preds = %1
  br i1 %9, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %10
  %11 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %12 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %13 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %14 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %15 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %16 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %17 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %18 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %19 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %20 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %22 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %23 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %25 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %26 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %27 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %28 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %29 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %30 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %31 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %32 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %33 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %34 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %35 = getelementptr inbounds [257 x i32], [257 x i32]* %34, i32 0, i32 0
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %37 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %39 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %40 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %41 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %42 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %43 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %44 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %45 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %46 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %47 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %48 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %49 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %50 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %51 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %52 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %53 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %54 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %55 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %56 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %57 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %58 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %59 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %60 = getelementptr inbounds [257 x i32], [257 x i32]* %59, i32 0, i32 0
  %61 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %62 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %63 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %64 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %65 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %66 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %67 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %68 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %69 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %70 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %71 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %72 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %73 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %74 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %75 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %76 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %77 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %78 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %79 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %80 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %81 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %82 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %83 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %84 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %85 = getelementptr inbounds [257 x i32], [257 x i32]* %84, i32 0, i32 0
  %86 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %87 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %88 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %89 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %90 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %91 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %92 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %93 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %94 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %95 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %96 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %97 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %98 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %99 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %100 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %101 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %102 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %103 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %104 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %105 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %106 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %107 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %108 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %109 = getelementptr inbounds [257 x i32], [257 x i32]* %108, i32 0, i32 0
  %110 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %111 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %112 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %113 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %114 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %115 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %116 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %117 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %118 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %121 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %122 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %123 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %124 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %125 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %126 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %127 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %128 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %129 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %130 = getelementptr inbounds [257 x i32], [257 x i32]* %129, i32 0, i32 0
  %131 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %132 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %133 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %134 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %135 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %136 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %137 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %138 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %139 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %140 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %141 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %142 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %143 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %144 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %145 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %146 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %147 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.backedge
  call void @unroll_loop(i32 23)
  br label %148

; <label>:148:                                    ; preds = %.lr.ph, %190
  call void @unroll_loop(i32 38)
  %149 = load i32, i32* %11, align 8
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %195, label %151

; <label>:151:                                    ; preds = %148
  %152 = load i8, i8* %12, align 4
  %153 = load %struct.bz_stream*, %struct.bz_stream** %13, align 8
  %154 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %153, i32 0, i32 4
  %155 = load i8*, i8** %154, align 8
  store i8 %152, i8* %155, align 1
  %156 = load i32, i32* %14, align 8
  %157 = shl i32 %156, 8
  %158 = load i32, i32* %15, align 8
  %159 = lshr i32 %158, 24
  %160 = load i8, i8* %16, align 4
  %161 = zext i8 %160 to i32
  %162 = xor i32 %159, %161
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %163
  %165 = load i32, i32* %164, align 4
  %166 = xor i32 %157, %165
  store i32 %166, i32* %17, align 8
  %167 = load i32, i32* %18, align 8
  %168 = add nsw i32 %167, -1
  store i32 %168, i32* %18, align 8
  %169 = load %struct.bz_stream*, %struct.bz_stream** %19, align 8
  %170 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %169, i32 0, i32 4
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds i8, i8* %171, i32 1
  store i8* %172, i8** %170, align 8
  %173 = load %struct.bz_stream*, %struct.bz_stream** %20, align 8
  %174 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %173, i32 0, i32 5
  %175 = load i32, i32* %174, align 8
  %176 = add i32 %175, -1
  store i32 %176, i32* %174, align 8
  %177 = load %struct.bz_stream*, %struct.bz_stream** %21, align 8
  %178 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %177, i32 0, i32 6
  %179 = load i32, i32* %178, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %178, align 4
  %181 = load %struct.bz_stream*, %struct.bz_stream** %22, align 8
  %182 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %181, i32 0, i32 6
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %190

; <label>:185:                                    ; preds = %151
  %186 = load %struct.bz_stream*, %struct.bz_stream** %23, align 8
  %187 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %186, i32 0, i32 7
  %188 = load i32, i32* %187, align 8
  %189 = add i32 %188, 1
  store i32 %189, i32* %187, align 8
  br label %190

; <label>:190:                                    ; preds = %185, %151
  %191 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %192 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %191, i32 0, i32 5
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %._crit_edge.loopexit, label %148

; <label>:195:                                    ; preds = %148
  %196 = load i32, i32* %24, align 4
  %197 = load i32, i32* %25, align 8
  %198 = add nsw i32 %197, 1
  %199 = icmp eq i32 %196, %198
  br i1 %199, label %._crit_edge.loopexit1, label %200

; <label>:200:                                    ; preds = %195
  %201 = load i32, i32* %26, align 4
  %202 = load i32, i32* %27, align 8
  %203 = add nsw i32 %202, 1
  %204 = icmp sgt i32 %201, %203
  br i1 %204, label %._crit_edge.loopexit1, label %205

; <label>:205:                                    ; preds = %200
  store i32 1, i32* %28, align 8
  %206 = load i32, i32* %29, align 8
  %207 = trunc i32 %206 to i8
  store i8 %207, i8* %30, align 4
  %208 = load i32, i32* %31, align 4
  %209 = load i32, i32* %32, align 8
  %210 = mul i32 100000, %209
  %211 = icmp uge i32 %208, %210
  br i1 %211, label %._crit_edge.loopexit1, label %212

; <label>:212:                                    ; preds = %205
  %213 = load i32, i32* %33, align 4
  %214 = call i32 @BZ2_indexIntoF(i32 %213, i32* %35)
  %215 = trunc i32 %214 to i8
  %216 = load i16*, i16** %36, align 8
  %217 = load i32, i32* %37, align 4
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds i16, i16* %216, i64 %218
  %220 = load i16, i16* %219, align 2
  %221 = zext i16 %220 to i32
  %222 = load i8*, i8** %38, align 8
  %223 = load i32, i32* %39, align 4
  %224 = lshr i32 %223, 1
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* %222, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = load i32, i32* %40, align 4
  %230 = shl i32 %229, 2
  %231 = and i32 %230, 4
  %232 = lshr i32 %228, %231
  %233 = and i32 %232, 15
  %234 = shl i32 %233, 16
  %235 = or i32 %221, %234
  store i32 %235, i32* %41, align 4
  %236 = load i32, i32* %42, align 8
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %248

; <label>:238:                                    ; preds = %212
  %239 = load i32, i32* %43, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %240
  %242 = load i32, i32* %241, align 4
  store i32 %242, i32* %44, align 8
  %243 = load i32, i32* %45, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %45, align 4
  %245 = load i32, i32* %46, align 4
  %246 = icmp eq i32 %245, 512
  br i1 %246, label %247, label %248

; <label>:247:                                    ; preds = %238
  store i32 0, i32* %52, align 4
  br label %248

; <label>:248:                                    ; preds = %238, %247, %212
  %249 = load i32, i32* %47, align 8
  %250 = add nsw i32 %249, -1
  store i32 %250, i32* %47, align 8
  %251 = load i32, i32* %48, align 8
  %252 = icmp eq i32 %251, 1
  %253 = select i1 %252, i32 1, i32 0
  %254 = zext i8 %215 to i32
  %255 = xor i32 %254, %253
  %256 = trunc i32 %255 to i8
  %257 = load i32, i32* %49, align 4
  %258 = add nsw i32 %257, 1
  store i32 %258, i32* %49, align 4
  %259 = load i32, i32* %50, align 4
  %260 = load i32, i32* %51, align 8
  %261 = add nsw i32 %260, 1
  %262 = icmp eq i32 %259, %261
  br i1 %262, label %.backedge, label %263

; <label>:263:                                    ; preds = %248
  %264 = zext i8 %256 to i32
  %265 = load i32, i32* %53, align 8
  %266 = icmp ne i32 %264, %265
  br i1 %266, label %267, label %269

; <label>:267:                                    ; preds = %263
  %268 = zext i8 %256 to i32
  store i32 %268, i32* %54, align 8
  br label %.backedge

; <label>:269:                                    ; preds = %263
  store i32 2, i32* %55, align 8
  %270 = load i32, i32* %56, align 4
  %271 = load i32, i32* %57, align 8
  %272 = mul i32 100000, %271
  %273 = icmp uge i32 %270, %272
  br i1 %273, label %._crit_edge.loopexit1, label %274

; <label>:274:                                    ; preds = %269
  %275 = load i32, i32* %58, align 4
  %276 = call i32 @BZ2_indexIntoF(i32 %275, i32* %60)
  %277 = trunc i32 %276 to i8
  %278 = load i16*, i16** %61, align 8
  %279 = load i32, i32* %62, align 4
  %280 = zext i32 %279 to i64
  %281 = getelementptr inbounds i16, i16* %278, i64 %280
  %282 = load i16, i16* %281, align 2
  %283 = zext i16 %282 to i32
  %284 = load i8*, i8** %63, align 8
  %285 = load i32, i32* %64, align 4
  %286 = lshr i32 %285, 1
  %287 = zext i32 %286 to i64
  %288 = getelementptr inbounds i8, i8* %284, i64 %287
  %289 = load i8, i8* %288, align 1
  %290 = zext i8 %289 to i32
  %291 = load i32, i32* %65, align 4
  %292 = shl i32 %291, 2
  %293 = and i32 %292, 4
  %294 = lshr i32 %290, %293
  %295 = and i32 %294, 15
  %296 = shl i32 %295, 16
  %297 = or i32 %283, %296
  store i32 %297, i32* %66, align 4
  %298 = load i32, i32* %67, align 8
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %310

; <label>:300:                                    ; preds = %274
  %301 = load i32, i32* %68, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %302
  %304 = load i32, i32* %303, align 4
  store i32 %304, i32* %69, align 8
  %305 = load i32, i32* %70, align 4
  %306 = add nsw i32 %305, 1
  store i32 %306, i32* %70, align 4
  %307 = load i32, i32* %71, align 4
  %308 = icmp eq i32 %307, 512
  br i1 %308, label %309, label %310

; <label>:309:                                    ; preds = %300
  store i32 0, i32* %77, align 4
  br label %310

; <label>:310:                                    ; preds = %300, %309, %274
  %311 = load i32, i32* %72, align 8
  %312 = add nsw i32 %311, -1
  store i32 %312, i32* %72, align 8
  %313 = load i32, i32* %73, align 8
  %314 = icmp eq i32 %313, 1
  %315 = select i1 %314, i32 1, i32 0
  %316 = zext i8 %277 to i32
  %317 = xor i32 %316, %315
  %318 = trunc i32 %317 to i8
  %319 = load i32, i32* %74, align 4
  %320 = add nsw i32 %319, 1
  store i32 %320, i32* %74, align 4
  %321 = load i32, i32* %75, align 4
  %322 = load i32, i32* %76, align 8
  %323 = add nsw i32 %322, 1
  %324 = icmp eq i32 %321, %323
  br i1 %324, label %.backedge, label %325

; <label>:325:                                    ; preds = %310
  %326 = zext i8 %318 to i32
  %327 = load i32, i32* %78, align 8
  %328 = icmp ne i32 %326, %327
  br i1 %328, label %329, label %331

; <label>:329:                                    ; preds = %325
  %330 = zext i8 %318 to i32
  store i32 %330, i32* %79, align 8
  br label %.backedge

; <label>:331:                                    ; preds = %325
  store i32 3, i32* %80, align 8
  %332 = load i32, i32* %81, align 4
  %333 = load i32, i32* %82, align 8
  %334 = mul i32 100000, %333
  %335 = icmp uge i32 %332, %334
  br i1 %335, label %._crit_edge.loopexit1, label %336

; <label>:336:                                    ; preds = %331
  %337 = load i32, i32* %83, align 4
  %338 = call i32 @BZ2_indexIntoF(i32 %337, i32* %85)
  %339 = trunc i32 %338 to i8
  %340 = load i16*, i16** %86, align 8
  %341 = load i32, i32* %87, align 4
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds i16, i16* %340, i64 %342
  %344 = load i16, i16* %343, align 2
  %345 = zext i16 %344 to i32
  %346 = load i8*, i8** %88, align 8
  %347 = load i32, i32* %89, align 4
  %348 = lshr i32 %347, 1
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds i8, i8* %346, i64 %349
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = load i32, i32* %90, align 4
  %354 = shl i32 %353, 2
  %355 = and i32 %354, 4
  %356 = lshr i32 %352, %355
  %357 = and i32 %356, 15
  %358 = shl i32 %357, 16
  %359 = or i32 %345, %358
  store i32 %359, i32* %91, align 4
  %360 = load i32, i32* %92, align 8
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %372

; <label>:362:                                    ; preds = %336
  %363 = load i32, i32* %93, align 4
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %364
  %366 = load i32, i32* %365, align 4
  store i32 %366, i32* %94, align 8
  %367 = load i32, i32* %95, align 4
  %368 = add nsw i32 %367, 1
  store i32 %368, i32* %95, align 4
  %369 = load i32, i32* %96, align 4
  %370 = icmp eq i32 %369, 512
  br i1 %370, label %371, label %372

; <label>:371:                                    ; preds = %362
  store i32 0, i32* %102, align 4
  br label %372

; <label>:372:                                    ; preds = %362, %371, %336
  %373 = load i32, i32* %97, align 8
  %374 = add nsw i32 %373, -1
  store i32 %374, i32* %97, align 8
  %375 = load i32, i32* %98, align 8
  %376 = icmp eq i32 %375, 1
  %377 = select i1 %376, i32 1, i32 0
  %378 = zext i8 %339 to i32
  %379 = xor i32 %378, %377
  %380 = trunc i32 %379 to i8
  %381 = load i32, i32* %99, align 4
  %382 = add nsw i32 %381, 1
  store i32 %382, i32* %99, align 4
  %383 = load i32, i32* %100, align 4
  %384 = load i32, i32* %101, align 8
  %385 = add nsw i32 %384, 1
  %386 = icmp eq i32 %383, %385
  br i1 %386, label %.backedge, label %387

; <label>:387:                                    ; preds = %372
  %388 = zext i8 %380 to i32
  %389 = load i32, i32* %103, align 8
  %390 = icmp ne i32 %388, %389
  br i1 %390, label %391, label %393

; <label>:391:                                    ; preds = %387
  %392 = zext i8 %380 to i32
  store i32 %392, i32* %104, align 8
  br label %.backedge

; <label>:393:                                    ; preds = %387
  %394 = load i32, i32* %105, align 4
  %395 = load i32, i32* %106, align 8
  %396 = mul i32 100000, %395
  %397 = icmp uge i32 %394, %396
  br i1 %397, label %._crit_edge.loopexit1, label %398

; <label>:398:                                    ; preds = %393
  %399 = load i32, i32* %107, align 4
  %400 = call i32 @BZ2_indexIntoF(i32 %399, i32* %109)
  %401 = trunc i32 %400 to i8
  %402 = load i16*, i16** %110, align 8
  %403 = load i32, i32* %111, align 4
  %404 = zext i32 %403 to i64
  %405 = getelementptr inbounds i16, i16* %402, i64 %404
  %406 = load i16, i16* %405, align 2
  %407 = zext i16 %406 to i32
  %408 = load i8*, i8** %112, align 8
  %409 = load i32, i32* %113, align 4
  %410 = lshr i32 %409, 1
  %411 = zext i32 %410 to i64
  %412 = getelementptr inbounds i8, i8* %408, i64 %411
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i32
  %415 = load i32, i32* %114, align 4
  %416 = shl i32 %415, 2
  %417 = and i32 %416, 4
  %418 = lshr i32 %414, %417
  %419 = and i32 %418, 15
  %420 = shl i32 %419, 16
  %421 = or i32 %407, %420
  store i32 %421, i32* %115, align 4
  %422 = load i32, i32* %116, align 8
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %434

; <label>:424:                                    ; preds = %398
  %425 = load i32, i32* %117, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %426
  %428 = load i32, i32* %427, align 4
  store i32 %428, i32* %118, align 8
  %429 = load i32, i32* %119, align 4
  %430 = add nsw i32 %429, 1
  store i32 %430, i32* %119, align 4
  %431 = load i32, i32* %120, align 4
  %432 = icmp eq i32 %431, 512
  br i1 %432, label %433, label %434

; <label>:433:                                    ; preds = %424
  store i32 0, i32* %127, align 4
  br label %434

; <label>:434:                                    ; preds = %424, %433, %398
  %435 = load i32, i32* %121, align 8
  %436 = add nsw i32 %435, -1
  store i32 %436, i32* %121, align 8
  %437 = load i32, i32* %122, align 8
  %438 = icmp eq i32 %437, 1
  %439 = select i1 %438, i32 1, i32 0
  %440 = zext i8 %401 to i32
  %441 = xor i32 %440, %439
  %442 = trunc i32 %441 to i8
  %443 = load i32, i32* %123, align 4
  %444 = add nsw i32 %443, 1
  store i32 %444, i32* %123, align 4
  %445 = zext i8 %442 to i32
  %446 = add nsw i32 %445, 4
  store i32 %446, i32* %124, align 8
  %447 = load i32, i32* %125, align 4
  %448 = load i32, i32* %126, align 8
  %449 = mul i32 100000, %448
  %450 = icmp uge i32 %447, %449
  br i1 %450, label %._crit_edge.loopexit1, label %451

; <label>:451:                                    ; preds = %434
  %452 = load i32, i32* %128, align 4
  %453 = call i32 @BZ2_indexIntoF(i32 %452, i32* %130)
  store i32 %453, i32* %131, align 8
  %454 = load i16*, i16** %132, align 8
  %455 = load i32, i32* %133, align 4
  %456 = zext i32 %455 to i64
  %457 = getelementptr inbounds i16, i16* %454, i64 %456
  %458 = load i16, i16* %457, align 2
  %459 = zext i16 %458 to i32
  %460 = load i8*, i8** %134, align 8
  %461 = load i32, i32* %135, align 4
  %462 = lshr i32 %461, 1
  %463 = zext i32 %462 to i64
  %464 = getelementptr inbounds i8, i8* %460, i64 %463
  %465 = load i8, i8* %464, align 1
  %466 = zext i8 %465 to i32
  %467 = load i32, i32* %136, align 4
  %468 = shl i32 %467, 2
  %469 = and i32 %468, 4
  %470 = lshr i32 %466, %469
  %471 = and i32 %470, 15
  %472 = shl i32 %471, 16
  %473 = or i32 %459, %472
  store i32 %473, i32* %137, align 4
  %474 = load i32, i32* %138, align 8
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %486

; <label>:476:                                    ; preds = %451
  %477 = load i32, i32* %139, align 4
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %478
  %480 = load i32, i32* %479, align 4
  store i32 %480, i32* %140, align 8
  %481 = load i32, i32* %141, align 4
  %482 = add nsw i32 %481, 1
  store i32 %482, i32* %141, align 4
  %483 = load i32, i32* %142, align 4
  %484 = icmp eq i32 %483, 512
  br i1 %484, label %485, label %486

; <label>:485:                                    ; preds = %476
  store i32 0, i32* %147, align 4
  br label %486

; <label>:486:                                    ; preds = %476, %485, %451
  %487 = load i32, i32* %143, align 8
  %488 = add nsw i32 %487, -1
  store i32 %488, i32* %143, align 8
  %489 = load i32, i32* %144, align 8
  %490 = icmp eq i32 %489, 1
  %491 = select i1 %490, i32 1, i32 0
  %492 = load i32, i32* %145, align 8
  %493 = xor i32 %492, %491
  store i32 %493, i32* %145, align 8
  %494 = load i32, i32* %146, align 4
  %495 = add nsw i32 %494, 1
  store i32 %495, i32* %146, align 4
  br label %.backedge

.backedge:                                        ; preds = %372, %310, %248, %486, %391, %329, %267
  %496 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %497 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %496, i32 0, i32 5
  %498 = load i32, i32* %497, align 8
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %._crit_edge.loopexit1, label %.lr.ph

; <label>:500:                                    ; preds = %1
  br i1 %9, label %._crit_edge, label %.lr.ph4.preheader

.lr.ph4.preheader:                                ; preds = %500
  %501 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %502 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %503 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %504 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %505 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %506 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %507 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %508 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %509 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %510 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %511 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %512 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %513 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %514 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %515 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %516 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %517 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %518 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %519 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %520 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %521 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %522 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %523 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %524 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %525 = getelementptr inbounds [257 x i32], [257 x i32]* %524, i32 0, i32 0
  %526 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %527 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %528 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %529 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %530 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %531 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %532 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %533 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %534 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %535 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %536 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %537 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %538 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %539 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %540 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %541 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %542 = getelementptr inbounds [257 x i32], [257 x i32]* %541, i32 0, i32 0
  %543 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %544 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %545 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %546 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %547 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %548 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %549 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %550 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %551 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %552 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %553 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %554 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %555 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %556 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %557 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %558 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %559 = getelementptr inbounds [257 x i32], [257 x i32]* %558, i32 0, i32 0
  %560 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %561 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %562 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %563 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %564 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %565 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %566 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %567 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %568 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %569 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %570 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %571 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %572 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %573 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %574 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %575 = getelementptr inbounds [257 x i32], [257 x i32]* %574, i32 0, i32 0
  %576 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %577 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %578 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %579 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %580 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %581 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %582 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %583 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %584 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %585 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %586 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %587 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %588 = getelementptr inbounds [257 x i32], [257 x i32]* %587, i32 0, i32 0
  %589 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %590 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %591 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %592 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %593 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %594 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %595 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %596 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  br label %.lr.ph4

.lr.ph4:                                          ; preds = %.lr.ph4.preheader, %.backedge1
  call void @unroll_loop(i32 37)
  br label %597

; <label>:597:                                    ; preds = %.lr.ph4, %639
  call void @unroll_loop(i32 39)
  %598 = load i32, i32* %501, align 8
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %644, label %600

; <label>:600:                                    ; preds = %597
  %601 = load i8, i8* %502, align 4
  %602 = load %struct.bz_stream*, %struct.bz_stream** %503, align 8
  %603 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %602, i32 0, i32 4
  %604 = load i8*, i8** %603, align 8
  store i8 %601, i8* %604, align 1
  %605 = load i32, i32* %504, align 8
  %606 = shl i32 %605, 8
  %607 = load i32, i32* %505, align 8
  %608 = lshr i32 %607, 24
  %609 = load i8, i8* %506, align 4
  %610 = zext i8 %609 to i32
  %611 = xor i32 %608, %610
  %612 = zext i32 %611 to i64
  %613 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %612
  %614 = load i32, i32* %613, align 4
  %615 = xor i32 %606, %614
  store i32 %615, i32* %507, align 8
  %616 = load i32, i32* %508, align 8
  %617 = add nsw i32 %616, -1
  store i32 %617, i32* %508, align 8
  %618 = load %struct.bz_stream*, %struct.bz_stream** %509, align 8
  %619 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %618, i32 0, i32 4
  %620 = load i8*, i8** %619, align 8
  %621 = getelementptr inbounds i8, i8* %620, i32 1
  store i8* %621, i8** %619, align 8
  %622 = load %struct.bz_stream*, %struct.bz_stream** %510, align 8
  %623 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %622, i32 0, i32 5
  %624 = load i32, i32* %623, align 8
  %625 = add i32 %624, -1
  store i32 %625, i32* %623, align 8
  %626 = load %struct.bz_stream*, %struct.bz_stream** %511, align 8
  %627 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %626, i32 0, i32 6
  %628 = load i32, i32* %627, align 4
  %629 = add i32 %628, 1
  store i32 %629, i32* %627, align 4
  %630 = load %struct.bz_stream*, %struct.bz_stream** %512, align 8
  %631 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %630, i32 0, i32 6
  %632 = load i32, i32* %631, align 4
  %633 = icmp eq i32 %632, 0
  br i1 %633, label %634, label %639

; <label>:634:                                    ; preds = %600
  %635 = load %struct.bz_stream*, %struct.bz_stream** %513, align 8
  %636 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %635, i32 0, i32 7
  %637 = load i32, i32* %636, align 8
  %638 = add i32 %637, 1
  store i32 %638, i32* %636, align 8
  br label %639

; <label>:639:                                    ; preds = %634, %600
  %640 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %641 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %640, i32 0, i32 5
  %642 = load i32, i32* %641, align 8
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %._crit_edge.loopexit3, label %597

; <label>:644:                                    ; preds = %597
  %645 = load i32, i32* %514, align 4
  %646 = load i32, i32* %515, align 8
  %647 = add nsw i32 %646, 1
  %648 = icmp eq i32 %645, %647
  br i1 %648, label %._crit_edge.loopexit5, label %649

; <label>:649:                                    ; preds = %644
  %650 = load i32, i32* %516, align 4
  %651 = load i32, i32* %517, align 8
  %652 = add nsw i32 %651, 1
  %653 = icmp sgt i32 %650, %652
  br i1 %653, label %._crit_edge.loopexit5, label %654

; <label>:654:                                    ; preds = %649
  store i32 1, i32* %518, align 8
  %655 = load i32, i32* %519, align 8
  %656 = trunc i32 %655 to i8
  store i8 %656, i8* %520, align 4
  %657 = load i32, i32* %521, align 4
  %658 = load i32, i32* %522, align 8
  %659 = mul i32 100000, %658
  %660 = icmp uge i32 %657, %659
  br i1 %660, label %._crit_edge.loopexit5, label %661

; <label>:661:                                    ; preds = %654
  %662 = load i32, i32* %523, align 4
  %663 = call i32 @BZ2_indexIntoF(i32 %662, i32* %525)
  %664 = trunc i32 %663 to i8
  %665 = load i16*, i16** %526, align 8
  %666 = load i32, i32* %527, align 4
  %667 = zext i32 %666 to i64
  %668 = getelementptr inbounds i16, i16* %665, i64 %667
  %669 = load i16, i16* %668, align 2
  %670 = zext i16 %669 to i32
  %671 = load i8*, i8** %528, align 8
  %672 = load i32, i32* %529, align 4
  %673 = lshr i32 %672, 1
  %674 = zext i32 %673 to i64
  %675 = getelementptr inbounds i8, i8* %671, i64 %674
  %676 = load i8, i8* %675, align 1
  %677 = zext i8 %676 to i32
  %678 = load i32, i32* %530, align 4
  %679 = shl i32 %678, 2
  %680 = and i32 %679, 4
  %681 = lshr i32 %677, %680
  %682 = and i32 %681, 15
  %683 = shl i32 %682, 16
  %684 = or i32 %670, %683
  store i32 %684, i32* %531, align 4
  %685 = load i32, i32* %532, align 4
  %686 = add nsw i32 %685, 1
  store i32 %686, i32* %532, align 4
  %687 = load i32, i32* %533, align 4
  %688 = load i32, i32* %534, align 8
  %689 = add nsw i32 %688, 1
  %690 = icmp eq i32 %687, %689
  br i1 %690, label %.backedge1, label %691

; <label>:691:                                    ; preds = %661
  %692 = zext i8 %664 to i32
  %693 = load i32, i32* %535, align 8
  %694 = icmp ne i32 %692, %693
  br i1 %694, label %695, label %697

; <label>:695:                                    ; preds = %691
  %696 = zext i8 %664 to i32
  store i32 %696, i32* %536, align 8
  br label %.backedge1

; <label>:697:                                    ; preds = %691
  store i32 2, i32* %537, align 8
  %698 = load i32, i32* %538, align 4
  %699 = load i32, i32* %539, align 8
  %700 = mul i32 100000, %699
  %701 = icmp uge i32 %698, %700
  br i1 %701, label %._crit_edge.loopexit5, label %702

; <label>:702:                                    ; preds = %697
  %703 = load i32, i32* %540, align 4
  %704 = call i32 @BZ2_indexIntoF(i32 %703, i32* %542)
  %705 = trunc i32 %704 to i8
  %706 = load i16*, i16** %543, align 8
  %707 = load i32, i32* %544, align 4
  %708 = zext i32 %707 to i64
  %709 = getelementptr inbounds i16, i16* %706, i64 %708
  %710 = load i16, i16* %709, align 2
  %711 = zext i16 %710 to i32
  %712 = load i8*, i8** %545, align 8
  %713 = load i32, i32* %546, align 4
  %714 = lshr i32 %713, 1
  %715 = zext i32 %714 to i64
  %716 = getelementptr inbounds i8, i8* %712, i64 %715
  %717 = load i8, i8* %716, align 1
  %718 = zext i8 %717 to i32
  %719 = load i32, i32* %547, align 4
  %720 = shl i32 %719, 2
  %721 = and i32 %720, 4
  %722 = lshr i32 %718, %721
  %723 = and i32 %722, 15
  %724 = shl i32 %723, 16
  %725 = or i32 %711, %724
  store i32 %725, i32* %548, align 4
  %726 = load i32, i32* %549, align 4
  %727 = add nsw i32 %726, 1
  store i32 %727, i32* %549, align 4
  %728 = load i32, i32* %550, align 4
  %729 = load i32, i32* %551, align 8
  %730 = add nsw i32 %729, 1
  %731 = icmp eq i32 %728, %730
  br i1 %731, label %.backedge1, label %732

; <label>:732:                                    ; preds = %702
  %733 = zext i8 %705 to i32
  %734 = load i32, i32* %552, align 8
  %735 = icmp ne i32 %733, %734
  br i1 %735, label %736, label %738

; <label>:736:                                    ; preds = %732
  %737 = zext i8 %705 to i32
  store i32 %737, i32* %553, align 8
  br label %.backedge1

; <label>:738:                                    ; preds = %732
  store i32 3, i32* %554, align 8
  %739 = load i32, i32* %555, align 4
  %740 = load i32, i32* %556, align 8
  %741 = mul i32 100000, %740
  %742 = icmp uge i32 %739, %741
  br i1 %742, label %._crit_edge.loopexit5, label %743

; <label>:743:                                    ; preds = %738
  %744 = load i32, i32* %557, align 4
  %745 = call i32 @BZ2_indexIntoF(i32 %744, i32* %559)
  %746 = trunc i32 %745 to i8
  %747 = load i16*, i16** %560, align 8
  %748 = load i32, i32* %561, align 4
  %749 = zext i32 %748 to i64
  %750 = getelementptr inbounds i16, i16* %747, i64 %749
  %751 = load i16, i16* %750, align 2
  %752 = zext i16 %751 to i32
  %753 = load i8*, i8** %562, align 8
  %754 = load i32, i32* %563, align 4
  %755 = lshr i32 %754, 1
  %756 = zext i32 %755 to i64
  %757 = getelementptr inbounds i8, i8* %753, i64 %756
  %758 = load i8, i8* %757, align 1
  %759 = zext i8 %758 to i32
  %760 = load i32, i32* %564, align 4
  %761 = shl i32 %760, 2
  %762 = and i32 %761, 4
  %763 = lshr i32 %759, %762
  %764 = and i32 %763, 15
  %765 = shl i32 %764, 16
  %766 = or i32 %752, %765
  store i32 %766, i32* %565, align 4
  %767 = load i32, i32* %566, align 4
  %768 = add nsw i32 %767, 1
  store i32 %768, i32* %566, align 4
  %769 = load i32, i32* %567, align 4
  %770 = load i32, i32* %568, align 8
  %771 = add nsw i32 %770, 1
  %772 = icmp eq i32 %769, %771
  br i1 %772, label %.backedge1, label %773

; <label>:773:                                    ; preds = %743
  %774 = zext i8 %746 to i32
  %775 = load i32, i32* %569, align 8
  %776 = icmp ne i32 %774, %775
  br i1 %776, label %777, label %779

; <label>:777:                                    ; preds = %773
  %778 = zext i8 %746 to i32
  store i32 %778, i32* %570, align 8
  br label %.backedge1

; <label>:779:                                    ; preds = %773
  %780 = load i32, i32* %571, align 4
  %781 = load i32, i32* %572, align 8
  %782 = mul i32 100000, %781
  %783 = icmp uge i32 %780, %782
  br i1 %783, label %._crit_edge.loopexit5, label %784

; <label>:784:                                    ; preds = %779
  %785 = load i32, i32* %573, align 4
  %786 = call i32 @BZ2_indexIntoF(i32 %785, i32* %575)
  %787 = trunc i32 %786 to i8
  %788 = load i16*, i16** %576, align 8
  %789 = load i32, i32* %577, align 4
  %790 = zext i32 %789 to i64
  %791 = getelementptr inbounds i16, i16* %788, i64 %790
  %792 = load i16, i16* %791, align 2
  %793 = zext i16 %792 to i32
  %794 = load i8*, i8** %578, align 8
  %795 = load i32, i32* %579, align 4
  %796 = lshr i32 %795, 1
  %797 = zext i32 %796 to i64
  %798 = getelementptr inbounds i8, i8* %794, i64 %797
  %799 = load i8, i8* %798, align 1
  %800 = zext i8 %799 to i32
  %801 = load i32, i32* %580, align 4
  %802 = shl i32 %801, 2
  %803 = and i32 %802, 4
  %804 = lshr i32 %800, %803
  %805 = and i32 %804, 15
  %806 = shl i32 %805, 16
  %807 = or i32 %793, %806
  store i32 %807, i32* %581, align 4
  %808 = load i32, i32* %582, align 4
  %809 = add nsw i32 %808, 1
  store i32 %809, i32* %582, align 4
  %810 = zext i8 %787 to i32
  %811 = add nsw i32 %810, 4
  store i32 %811, i32* %583, align 8
  %812 = load i32, i32* %584, align 4
  %813 = load i32, i32* %585, align 8
  %814 = mul i32 100000, %813
  %815 = icmp uge i32 %812, %814
  br i1 %815, label %._crit_edge.loopexit5, label %816

; <label>:816:                                    ; preds = %784
  %817 = load i32, i32* %586, align 4
  %818 = call i32 @BZ2_indexIntoF(i32 %817, i32* %588)
  store i32 %818, i32* %589, align 8
  %819 = load i16*, i16** %590, align 8
  %820 = load i32, i32* %591, align 4
  %821 = zext i32 %820 to i64
  %822 = getelementptr inbounds i16, i16* %819, i64 %821
  %823 = load i16, i16* %822, align 2
  %824 = zext i16 %823 to i32
  %825 = load i8*, i8** %592, align 8
  %826 = load i32, i32* %593, align 4
  %827 = lshr i32 %826, 1
  %828 = zext i32 %827 to i64
  %829 = getelementptr inbounds i8, i8* %825, i64 %828
  %830 = load i8, i8* %829, align 1
  %831 = zext i8 %830 to i32
  %832 = load i32, i32* %594, align 4
  %833 = shl i32 %832, 2
  %834 = and i32 %833, 4
  %835 = lshr i32 %831, %834
  %836 = and i32 %835, 15
  %837 = shl i32 %836, 16
  %838 = or i32 %824, %837
  store i32 %838, i32* %595, align 4
  %839 = load i32, i32* %596, align 4
  %840 = add nsw i32 %839, 1
  store i32 %840, i32* %596, align 4
  br label %.backedge1

.backedge1:                                       ; preds = %743, %702, %661, %816, %777, %736, %695
  %841 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8
  %842 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %841, i32 0, i32 5
  %843 = load i32, i32* %842, align 8
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %._crit_edge.loopexit5, label %.lr.ph4

._crit_edge.loopexit:                             ; preds = %190
  %.0.ph = phi i8 [ 0, %190 ]
  br label %._crit_edge

._crit_edge.loopexit1:                            ; preds = %.backedge, %195, %200, %205, %269, %331, %393, %434
  %.0.ph2 = phi i8 [ 0, %.backedge ], [ 0, %195 ], [ 1, %200 ], [ 1, %205 ], [ 1, %269 ], [ 1, %331 ], [ 1, %393 ], [ 1, %434 ]
  br label %._crit_edge

._crit_edge.loopexit3:                            ; preds = %639
  %.0.ph4 = phi i8 [ 0, %639 ]
  br label %._crit_edge

._crit_edge.loopexit5:                            ; preds = %.backedge1, %644, %649, %654, %697, %738, %779, %784
  %.0.ph6 = phi i8 [ 0, %.backedge1 ], [ 0, %644 ], [ 1, %649 ], [ 1, %654 ], [ 1, %697 ], [ 1, %738 ], [ 1, %779 ], [ 1, %784 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit5, %._crit_edge.loopexit3, %._crit_edge.loopexit1, %._crit_edge.loopexit, %500, %10
  %.0 = phi i8 [ 0, %10 ], [ 0, %500 ], [ %.0.ph, %._crit_edge.loopexit ], [ %.0.ph2, %._crit_edge.loopexit1 ], [ %.0.ph4, %._crit_edge.loopexit3 ], [ %.0.ph6, %._crit_edge.loopexit5 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @unRLE_obuf_to_output_FAST(%struct.DState*) #0 {
  %2 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %3 = load i8, i8* %2, align 4
  %4 = icmp ne i8 %3, 0
  br i1 %4, label %5, label %417

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %7 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %8 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %5
  %11 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %12 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %13 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %14 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %15 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %16 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %17 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %18 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %19 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %20 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %22 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %23 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %25 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %26 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %27 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %28 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %29 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %30 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %31 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %32 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %33 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %34 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %35 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %37 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %39 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %40 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %41 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %42 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %43 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %44 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %45 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %46 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %47 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %48 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %49 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %50 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %51 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %52 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %53 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %54 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %55 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %56 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %57 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %58 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %59 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %60 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %61 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %62 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %63 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %64 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %65 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %66 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %67 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %68 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %69 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %70 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %71 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %72 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %73 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %74 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %75 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %76 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %77 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %78 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %79 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %80 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %81 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %82 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %83 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %84 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %85 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %86 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %87 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %88 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %89 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %90 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %91 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %92 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %93 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %94 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %95 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %96 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %97 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %98 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %99 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %100 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %101 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %102 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %103 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %104 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %105 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %106 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %107 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %108 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %109 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %110 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %111 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %112 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %113 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %114 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %115 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %116 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %117 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %118 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %120 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %121 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %122 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %123 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %124 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %125 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %126 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %127 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.backedge
  call void @unroll_loop(i32 40)
  br label %128

; <label>:128:                                    ; preds = %.lr.ph, %170
  call void @unroll_loop(i32 32)
  %129 = load i32, i32* %11, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %175, label %131

; <label>:131:                                    ; preds = %128
  %132 = load i8, i8* %12, align 4
  %133 = load %struct.bz_stream*, %struct.bz_stream** %13, align 8
  %134 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %133, i32 0, i32 4
  %135 = load i8*, i8** %134, align 8
  store i8 %132, i8* %135, align 1
  %136 = load i32, i32* %14, align 8
  %137 = shl i32 %136, 8
  %138 = load i32, i32* %15, align 8
  %139 = lshr i32 %138, 24
  %140 = load i8, i8* %16, align 4
  %141 = zext i8 %140 to i32
  %142 = xor i32 %139, %141
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = xor i32 %137, %145
  store i32 %146, i32* %17, align 8
  %147 = load i32, i32* %18, align 8
  %148 = add nsw i32 %147, -1
  store i32 %148, i32* %18, align 8
  %149 = load %struct.bz_stream*, %struct.bz_stream** %19, align 8
  %150 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %149, i32 0, i32 4
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %152, i8** %150, align 8
  %153 = load %struct.bz_stream*, %struct.bz_stream** %20, align 8
  %154 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %153, i32 0, i32 5
  %155 = load i32, i32* %154, align 8
  %156 = add i32 %155, -1
  store i32 %156, i32* %154, align 8
  %157 = load %struct.bz_stream*, %struct.bz_stream** %21, align 8
  %158 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %157, i32 0, i32 6
  %159 = load i32, i32* %158, align 4
  %160 = add i32 %159, 1
  store i32 %160, i32* %158, align 4
  %161 = load %struct.bz_stream*, %struct.bz_stream** %22, align 8
  %162 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %161, i32 0, i32 6
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %170

; <label>:165:                                    ; preds = %131
  %166 = load %struct.bz_stream*, %struct.bz_stream** %23, align 8
  %167 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %166, i32 0, i32 7
  %168 = load i32, i32* %167, align 8
  %169 = add i32 %168, 1
  store i32 %169, i32* %167, align 8
  br label %170

; <label>:170:                                    ; preds = %165, %131
  %171 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %172 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %171, i32 0, i32 5
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %._crit_edge.loopexit, label %128

; <label>:175:                                    ; preds = %128
  %176 = load i32, i32* %24, align 4
  %177 = load i32, i32* %25, align 8
  %178 = add nsw i32 %177, 1
  %179 = icmp eq i32 %176, %178
  br i1 %179, label %._crit_edge.loopexit1, label %180

; <label>:180:                                    ; preds = %175
  %181 = load i32, i32* %26, align 4
  %182 = load i32, i32* %27, align 8
  %183 = add nsw i32 %182, 1
  %184 = icmp sgt i32 %181, %183
  br i1 %184, label %._crit_edge.loopexit1, label %185

; <label>:185:                                    ; preds = %180
  store i32 1, i32* %28, align 8
  %186 = load i32, i32* %29, align 8
  %187 = trunc i32 %186 to i8
  store i8 %187, i8* %30, align 4
  %188 = load i32, i32* %31, align 4
  %189 = load i32, i32* %32, align 8
  %190 = mul i32 100000, %189
  %191 = icmp uge i32 %188, %190
  br i1 %191, label %._crit_edge.loopexit1, label %192

; <label>:192:                                    ; preds = %185
  %193 = load i32*, i32** %33, align 8
  %194 = load i32, i32* %34, align 4
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds i32, i32* %193, i64 %195
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %35, align 4
  %198 = load i32, i32* %36, align 4
  %199 = and i32 %198, 255
  %200 = trunc i32 %199 to i8
  %201 = load i32, i32* %37, align 4
  %202 = lshr i32 %201, 8
  store i32 %202, i32* %37, align 4
  %203 = load i32, i32* %38, align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %215

; <label>:205:                                    ; preds = %192
  %206 = load i32, i32* %39, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %207
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %40, align 8
  %210 = load i32, i32* %41, align 4
  %211 = add nsw i32 %210, 1
  store i32 %211, i32* %41, align 4
  %212 = load i32, i32* %42, align 4
  %213 = icmp eq i32 %212, 512
  br i1 %213, label %214, label %215

; <label>:214:                                    ; preds = %205
  store i32 0, i32* %48, align 4
  br label %215

; <label>:215:                                    ; preds = %205, %214, %192
  %216 = load i32, i32* %43, align 8
  %217 = add nsw i32 %216, -1
  store i32 %217, i32* %43, align 8
  %218 = load i32, i32* %44, align 8
  %219 = icmp eq i32 %218, 1
  %220 = select i1 %219, i32 1, i32 0
  %221 = zext i8 %200 to i32
  %222 = xor i32 %221, %220
  %223 = trunc i32 %222 to i8
  %224 = load i32, i32* %45, align 4
  %225 = add nsw i32 %224, 1
  store i32 %225, i32* %45, align 4
  %226 = load i32, i32* %46, align 4
  %227 = load i32, i32* %47, align 8
  %228 = add nsw i32 %227, 1
  %229 = icmp eq i32 %226, %228
  br i1 %229, label %.backedge, label %230

; <label>:230:                                    ; preds = %215
  %231 = zext i8 %223 to i32
  %232 = load i32, i32* %49, align 8
  %233 = icmp ne i32 %231, %232
  br i1 %233, label %234, label %236

; <label>:234:                                    ; preds = %230
  %235 = zext i8 %223 to i32
  store i32 %235, i32* %50, align 8
  br label %.backedge

; <label>:236:                                    ; preds = %230
  store i32 2, i32* %51, align 8
  %237 = load i32, i32* %52, align 4
  %238 = load i32, i32* %53, align 8
  %239 = mul i32 100000, %238
  %240 = icmp uge i32 %237, %239
  br i1 %240, label %._crit_edge.loopexit1, label %241

; <label>:241:                                    ; preds = %236
  %242 = load i32*, i32** %54, align 8
  %243 = load i32, i32* %55, align 4
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds i32, i32* %242, i64 %244
  %246 = load i32, i32* %245, align 4
  store i32 %246, i32* %56, align 4
  %247 = load i32, i32* %57, align 4
  %248 = and i32 %247, 255
  %249 = trunc i32 %248 to i8
  %250 = load i32, i32* %58, align 4
  %251 = lshr i32 %250, 8
  store i32 %251, i32* %58, align 4
  %252 = load i32, i32* %59, align 8
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %264

; <label>:254:                                    ; preds = %241
  %255 = load i32, i32* %60, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %256
  %258 = load i32, i32* %257, align 4
  store i32 %258, i32* %61, align 8
  %259 = load i32, i32* %62, align 4
  %260 = add nsw i32 %259, 1
  store i32 %260, i32* %62, align 4
  %261 = load i32, i32* %63, align 4
  %262 = icmp eq i32 %261, 512
  br i1 %262, label %263, label %264

; <label>:263:                                    ; preds = %254
  store i32 0, i32* %69, align 4
  br label %264

; <label>:264:                                    ; preds = %254, %263, %241
  %265 = load i32, i32* %64, align 8
  %266 = add nsw i32 %265, -1
  store i32 %266, i32* %64, align 8
  %267 = load i32, i32* %65, align 8
  %268 = icmp eq i32 %267, 1
  %269 = select i1 %268, i32 1, i32 0
  %270 = zext i8 %249 to i32
  %271 = xor i32 %270, %269
  %272 = trunc i32 %271 to i8
  %273 = load i32, i32* %66, align 4
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %66, align 4
  %275 = load i32, i32* %67, align 4
  %276 = load i32, i32* %68, align 8
  %277 = add nsw i32 %276, 1
  %278 = icmp eq i32 %275, %277
  br i1 %278, label %.backedge, label %279

; <label>:279:                                    ; preds = %264
  %280 = zext i8 %272 to i32
  %281 = load i32, i32* %70, align 8
  %282 = icmp ne i32 %280, %281
  br i1 %282, label %283, label %285

; <label>:283:                                    ; preds = %279
  %284 = zext i8 %272 to i32
  store i32 %284, i32* %71, align 8
  br label %.backedge

; <label>:285:                                    ; preds = %279
  store i32 3, i32* %72, align 8
  %286 = load i32, i32* %73, align 4
  %287 = load i32, i32* %74, align 8
  %288 = mul i32 100000, %287
  %289 = icmp uge i32 %286, %288
  br i1 %289, label %._crit_edge.loopexit1, label %290

; <label>:290:                                    ; preds = %285
  %291 = load i32*, i32** %75, align 8
  %292 = load i32, i32* %76, align 4
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds i32, i32* %291, i64 %293
  %295 = load i32, i32* %294, align 4
  store i32 %295, i32* %77, align 4
  %296 = load i32, i32* %78, align 4
  %297 = and i32 %296, 255
  %298 = trunc i32 %297 to i8
  %299 = load i32, i32* %79, align 4
  %300 = lshr i32 %299, 8
  store i32 %300, i32* %79, align 4
  %301 = load i32, i32* %80, align 8
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %313

; <label>:303:                                    ; preds = %290
  %304 = load i32, i32* %81, align 4
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %305
  %307 = load i32, i32* %306, align 4
  store i32 %307, i32* %82, align 8
  %308 = load i32, i32* %83, align 4
  %309 = add nsw i32 %308, 1
  store i32 %309, i32* %83, align 4
  %310 = load i32, i32* %84, align 4
  %311 = icmp eq i32 %310, 512
  br i1 %311, label %312, label %313

; <label>:312:                                    ; preds = %303
  store i32 0, i32* %90, align 4
  br label %313

; <label>:313:                                    ; preds = %303, %312, %290
  %314 = load i32, i32* %85, align 8
  %315 = add nsw i32 %314, -1
  store i32 %315, i32* %85, align 8
  %316 = load i32, i32* %86, align 8
  %317 = icmp eq i32 %316, 1
  %318 = select i1 %317, i32 1, i32 0
  %319 = zext i8 %298 to i32
  %320 = xor i32 %319, %318
  %321 = trunc i32 %320 to i8
  %322 = load i32, i32* %87, align 4
  %323 = add nsw i32 %322, 1
  store i32 %323, i32* %87, align 4
  %324 = load i32, i32* %88, align 4
  %325 = load i32, i32* %89, align 8
  %326 = add nsw i32 %325, 1
  %327 = icmp eq i32 %324, %326
  br i1 %327, label %.backedge, label %328

; <label>:328:                                    ; preds = %313
  %329 = zext i8 %321 to i32
  %330 = load i32, i32* %91, align 8
  %331 = icmp ne i32 %329, %330
  br i1 %331, label %332, label %334

; <label>:332:                                    ; preds = %328
  %333 = zext i8 %321 to i32
  store i32 %333, i32* %92, align 8
  br label %.backedge

; <label>:334:                                    ; preds = %328
  %335 = load i32, i32* %93, align 4
  %336 = load i32, i32* %94, align 8
  %337 = mul i32 100000, %336
  %338 = icmp uge i32 %335, %337
  br i1 %338, label %._crit_edge.loopexit1, label %339

; <label>:339:                                    ; preds = %334
  %340 = load i32*, i32** %95, align 8
  %341 = load i32, i32* %96, align 4
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds i32, i32* %340, i64 %342
  %344 = load i32, i32* %343, align 4
  store i32 %344, i32* %97, align 4
  %345 = load i32, i32* %98, align 4
  %346 = and i32 %345, 255
  %347 = trunc i32 %346 to i8
  %348 = load i32, i32* %99, align 4
  %349 = lshr i32 %348, 8
  store i32 %349, i32* %99, align 4
  %350 = load i32, i32* %100, align 8
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %362

; <label>:352:                                    ; preds = %339
  %353 = load i32, i32* %101, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %354
  %356 = load i32, i32* %355, align 4
  store i32 %356, i32* %102, align 8
  %357 = load i32, i32* %103, align 4
  %358 = add nsw i32 %357, 1
  store i32 %358, i32* %103, align 4
  %359 = load i32, i32* %104, align 4
  %360 = icmp eq i32 %359, 512
  br i1 %360, label %361, label %362

; <label>:361:                                    ; preds = %352
  store i32 0, i32* %111, align 4
  br label %362

; <label>:362:                                    ; preds = %352, %361, %339
  %363 = load i32, i32* %105, align 8
  %364 = add nsw i32 %363, -1
  store i32 %364, i32* %105, align 8
  %365 = load i32, i32* %106, align 8
  %366 = icmp eq i32 %365, 1
  %367 = select i1 %366, i32 1, i32 0
  %368 = zext i8 %347 to i32
  %369 = xor i32 %368, %367
  %370 = trunc i32 %369 to i8
  %371 = load i32, i32* %107, align 4
  %372 = add nsw i32 %371, 1
  store i32 %372, i32* %107, align 4
  %373 = zext i8 %370 to i32
  %374 = add nsw i32 %373, 4
  store i32 %374, i32* %108, align 8
  %375 = load i32, i32* %109, align 4
  %376 = load i32, i32* %110, align 8
  %377 = mul i32 100000, %376
  %378 = icmp uge i32 %375, %377
  br i1 %378, label %._crit_edge.loopexit1, label %379

; <label>:379:                                    ; preds = %362
  %380 = load i32*, i32** %112, align 8
  %381 = load i32, i32* %113, align 4
  %382 = zext i32 %381 to i64
  %383 = getelementptr inbounds i32, i32* %380, i64 %382
  %384 = load i32, i32* %383, align 4
  store i32 %384, i32* %114, align 4
  %385 = load i32, i32* %115, align 4
  %386 = and i32 %385, 255
  %387 = trunc i32 %386 to i8
  %388 = zext i8 %387 to i32
  store i32 %388, i32* %116, align 8
  %389 = load i32, i32* %117, align 4
  %390 = lshr i32 %389, 8
  store i32 %390, i32* %117, align 4
  %391 = load i32, i32* %118, align 8
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %403

; <label>:393:                                    ; preds = %379
  %394 = load i32, i32* %119, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %395
  %397 = load i32, i32* %396, align 4
  store i32 %397, i32* %120, align 8
  %398 = load i32, i32* %121, align 4
  %399 = add nsw i32 %398, 1
  store i32 %399, i32* %121, align 4
  %400 = load i32, i32* %122, align 4
  %401 = icmp eq i32 %400, 512
  br i1 %401, label %402, label %403

; <label>:402:                                    ; preds = %393
  store i32 0, i32* %127, align 4
  br label %403

; <label>:403:                                    ; preds = %393, %402, %379
  %404 = load i32, i32* %123, align 8
  %405 = add nsw i32 %404, -1
  store i32 %405, i32* %123, align 8
  %406 = load i32, i32* %124, align 8
  %407 = icmp eq i32 %406, 1
  %408 = select i1 %407, i32 1, i32 0
  %409 = load i32, i32* %125, align 8
  %410 = xor i32 %409, %408
  store i32 %410, i32* %125, align 8
  %411 = load i32, i32* %126, align 4
  %412 = add nsw i32 %411, 1
  store i32 %412, i32* %126, align 4
  br label %.backedge

.backedge:                                        ; preds = %313, %264, %215, %403, %332, %283, %234
  %413 = load %struct.bz_stream*, %struct.bz_stream** %6, align 8
  %414 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %413, i32 0, i32 5
  %415 = load i32, i32* %414, align 8
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %._crit_edge.loopexit1, label %.lr.ph

; <label>:417:                                    ; preds = %1
  %418 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  %419 = load i32, i32* %418, align 8
  %420 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  %421 = load i8, i8* %420, align 4
  %422 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  %423 = load i32, i32* %422, align 8
  %424 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %425 = load i32, i32* %424, align 4
  %426 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %427 = load i32, i32* %426, align 8
  %428 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %429 = load i32*, i32** %428, align 8
  %430 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %431 = load i32, i32* %430, align 4
  %432 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %433 = load %struct.bz_stream*, %struct.bz_stream** %432, align 8
  %434 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %433, i32 0, i32 4
  %435 = load i8*, i8** %434, align 8
  %436 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %437 = load %struct.bz_stream*, %struct.bz_stream** %436, align 8
  %438 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %437, i32 0, i32 5
  %439 = load i32, i32* %438, align 8
  %440 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %441 = load i32, i32* %440, align 8
  %442 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %443 = load i32, i32* %442, align 8
  %444 = add nsw i32 %443, 1
  %445 = mul i32 100000, %441
  %446 = mul i32 100000, %441
  %447 = mul i32 100000, %441
  %448 = mul i32 100000, %441
  %449 = mul i32 100000, %441
  br label %450

; <label>:450:                                    ; preds = %.backedge109, %417
  %.027 = phi i32 [ %431, %417 ], [ %.027.be, %.backedge109 ]
  %.022 = phi i8* [ %435, %417 ], [ %.325, %.backedge109 ]
  %.018 = phi i32 [ %427, %417 ], [ %.018.be, %.backedge109 ]
  %.014 = phi i32 [ %425, %417 ], [ %.014.be, %.backedge109 ]
  %.011 = phi i32 [ %423, %417 ], [ %.011.be, %.backedge109 ]
  %.07 = phi i8 [ %421, %417 ], [ %485, %.backedge109 ]
  %.02 = phi i32 [ %419, %417 ], [ %.35, %.backedge109 ]
  %.01 = phi i32 [ %439, %417 ], [ %.3, %.backedge109 ]
  call void @unroll_loop(i32 33)
  %451 = icmp sgt i32 %.011, 0
  br i1 %451, label %452, label %480

; <label>:452:                                    ; preds = %450
  %453 = icmp eq i32 %.01, 0
  br i1 %453, label %._crit_edge117.loopexit3, label %.lr.ph116.preheader

.lr.ph116.preheader:                              ; preds = %452
  %454 = zext i8 %.07 to i32
  br label %.lr.ph116

.lr.ph116:                                        ; preds = %.lr.ph116.preheader, %456
  %.1114 = phi i32 [ %466, %456 ], [ %.01, %.lr.ph116.preheader ]
  %.13113 = phi i32 [ %463, %456 ], [ %.02, %.lr.ph116.preheader ]
  %.112112 = phi i32 [ %464, %456 ], [ %.011, %.lr.ph116.preheader ]
  %.123111 = phi i8* [ %465, %456 ], [ %.022, %.lr.ph116.preheader ]
  call void @unroll_loop(i32 34)
  %455 = icmp eq i32 %.112112, 1
  br i1 %455, label %.loopexit.loopexit, label %456

; <label>:456:                                    ; preds = %.lr.ph116
  store i8 %.07, i8* %.123111, align 1
  %457 = shl i32 %.13113, 8
  %458 = lshr i32 %.13113, 24
  %459 = xor i32 %458, %454
  %460 = zext i32 %459 to i64
  %461 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %460
  %462 = load i32, i32* %461, align 4
  %463 = xor i32 %457, %462
  %464 = add nsw i32 %.112112, -1
  %465 = getelementptr inbounds i8, i8* %.123111, i32 1
  %466 = add i32 %.1114, -1
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %._crit_edge117.loopexit, label %.lr.ph116

.loopexit.loopexit:                               ; preds = %.lr.ph116
  %.224.ph = phi i8* [ %.123111, %.lr.ph116 ]
  %.24.ph = phi i32 [ %.13113, %.lr.ph116 ]
  %.2.ph = phi i32 [ %.1114, %.lr.ph116 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %499, %497
  %.128 = phi i32 [ %493, %497 ], [ %493, %499 ], [ %.027, %.loopexit.loopexit ]
  %.224 = phi i8* [ %.325, %497 ], [ %.325, %499 ], [ %.224.ph, %.loopexit.loopexit ]
  %.119 = phi i32 [ %498, %497 ], [ %.220, %499 ], [ %.018, %.loopexit.loopexit ]
  %.115 = phi i32 [ %494, %497 ], [ %494, %499 ], [ %.014, %.loopexit.loopexit ]
  %.18 = phi i8 [ %485, %497 ], [ %485, %499 ], [ %.07, %.loopexit.loopexit ]
  %.24 = phi i32 [ %.35, %497 ], [ %.35, %499 ], [ %.24.ph, %.loopexit.loopexit ]
  %.2 = phi i32 [ %.3, %497 ], [ %.3, %499 ], [ %.2.ph, %.loopexit.loopexit ]
  %468 = icmp eq i32 %.2, 0
  br i1 %468, label %._crit_edge117.loopexit3, label %469

; <label>:469:                                    ; preds = %.loopexit
  store i8 %.18, i8* %.224, align 1
  %470 = shl i32 %.24, 8
  %471 = lshr i32 %.24, 24
  %472 = zext i8 %.18 to i32
  %473 = xor i32 %471, %472
  %474 = zext i32 %473 to i64
  %475 = getelementptr inbounds [256 x i32], [256 x i32]* @BZ2_crc32Table, i64 0, i64 %474
  %476 = load i32, i32* %475, align 4
  %477 = xor i32 %470, %476
  %478 = getelementptr inbounds i8, i8* %.224, i32 1
  %479 = add i32 %.2, -1
  br label %480

; <label>:480:                                    ; preds = %469, %450
  %.229 = phi i32 [ %.128, %469 ], [ %.027, %450 ]
  %.325 = phi i8* [ %478, %469 ], [ %.022, %450 ]
  %.220 = phi i32 [ %.119, %469 ], [ %.018, %450 ]
  %.216 = phi i32 [ %.115, %469 ], [ %.014, %450 ]
  %.29 = phi i8 [ %.18, %469 ], [ %.07, %450 ]
  %.35 = phi i32 [ %477, %469 ], [ %.02, %450 ]
  %.3 = phi i32 [ %479, %469 ], [ %.01, %450 ]
  %481 = icmp sgt i32 %.216, %444
  br i1 %481, label %._crit_edge.loopexit12, label %482

; <label>:482:                                    ; preds = %480
  %483 = icmp eq i32 %.216, %444
  br i1 %483, label %._crit_edge117.loopexit3, label %484

; <label>:484:                                    ; preds = %482
  %485 = trunc i32 %.220 to i8
  %486 = icmp uge i32 %.229, %445
  br i1 %486, label %._crit_edge.loopexit12, label %487

; <label>:487:                                    ; preds = %484
  %488 = zext i32 %.229 to i64
  %489 = getelementptr inbounds i32, i32* %429, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = and i32 %490, 255
  %492 = trunc i32 %491 to i8
  %493 = lshr i32 %490, 8
  %494 = add nsw i32 %.216, 1
  %495 = zext i8 %492 to i32
  %496 = icmp ne i32 %495, %.220
  br i1 %496, label %497, label %499

; <label>:497:                                    ; preds = %487
  %498 = zext i8 %492 to i32
  br label %.loopexit

; <label>:499:                                    ; preds = %487
  %500 = icmp eq i32 %494, %444
  br i1 %500, label %.loopexit, label %501

; <label>:501:                                    ; preds = %499
  %502 = icmp uge i32 %493, %446
  br i1 %502, label %._crit_edge.loopexit12, label %503

; <label>:503:                                    ; preds = %501
  %504 = zext i32 %493 to i64
  %505 = getelementptr inbounds i32, i32* %429, i64 %504
  %506 = load i32, i32* %505, align 4
  %507 = and i32 %506, 255
  %508 = trunc i32 %507 to i8
  %509 = lshr i32 %506, 8
  %510 = add nsw i32 %494, 1
  %511 = icmp eq i32 %510, %444
  br i1 %511, label %.backedge109, label %512

; <label>:512:                                    ; preds = %503
  %513 = zext i8 %508 to i32
  %514 = icmp ne i32 %513, %.220
  br i1 %514, label %515, label %517

; <label>:515:                                    ; preds = %512
  %516 = zext i8 %508 to i32
  br label %.backedge109

; <label>:517:                                    ; preds = %512
  %518 = icmp uge i32 %509, %447
  br i1 %518, label %._crit_edge.loopexit12, label %519

; <label>:519:                                    ; preds = %517
  %520 = zext i32 %509 to i64
  %521 = getelementptr inbounds i32, i32* %429, i64 %520
  %522 = load i32, i32* %521, align 4
  %523 = and i32 %522, 255
  %524 = trunc i32 %523 to i8
  %525 = lshr i32 %522, 8
  %526 = add nsw i32 %510, 1
  %527 = icmp eq i32 %526, %444
  br i1 %527, label %.backedge109, label %528

; <label>:528:                                    ; preds = %519
  %529 = zext i8 %524 to i32
  %530 = icmp ne i32 %529, %.220
  br i1 %530, label %531, label %533

; <label>:531:                                    ; preds = %528
  %532 = zext i8 %524 to i32
  br label %.backedge109

; <label>:533:                                    ; preds = %528
  %534 = icmp uge i32 %525, %448
  br i1 %534, label %._crit_edge.loopexit12, label %535

; <label>:535:                                    ; preds = %533
  %536 = zext i32 %525 to i64
  %537 = getelementptr inbounds i32, i32* %429, i64 %536
  %538 = load i32, i32* %537, align 4
  %539 = and i32 %538, 255
  %540 = trunc i32 %539 to i8
  %541 = lshr i32 %538, 8
  %542 = add nsw i32 %526, 1
  %543 = zext i8 %540 to i32
  %544 = add nsw i32 %543, 4
  %545 = icmp uge i32 %541, %449
  br i1 %545, label %._crit_edge.loopexit12, label %546

; <label>:546:                                    ; preds = %535
  %547 = zext i32 %541 to i64
  %548 = getelementptr inbounds i32, i32* %429, i64 %547
  %549 = load i32, i32* %548, align 4
  %550 = and i32 %549, 255
  %551 = trunc i32 %550 to i8
  %552 = zext i8 %551 to i32
  %553 = lshr i32 %549, 8
  %554 = add nsw i32 %542, 1
  br label %.backedge109

.backedge109:                                     ; preds = %519, %503, %546, %531, %515
  %.027.be = phi i32 [ %509, %515 ], [ %525, %531 ], [ %553, %546 ], [ %509, %503 ], [ %525, %519 ]
  %.018.be = phi i32 [ %516, %515 ], [ %532, %531 ], [ %552, %546 ], [ %.220, %503 ], [ %.220, %519 ]
  %.014.be = phi i32 [ %510, %515 ], [ %526, %531 ], [ %554, %546 ], [ %510, %503 ], [ %526, %519 ]
  %.011.be = phi i32 [ 2, %515 ], [ 3, %531 ], [ %544, %546 ], [ 2, %503 ], [ 3, %519 ]
  br label %450

._crit_edge117.loopexit:                          ; preds = %456
  %.330.ph = phi i32 [ %.027, %456 ]
  %.426.ph = phi i8* [ %465, %456 ]
  %.321.ph = phi i32 [ %.018, %456 ]
  %.317.ph = phi i32 [ %.014, %456 ]
  %.213.ph = phi i32 [ %464, %456 ]
  %.310.ph = phi i8 [ %.07, %456 ]
  %.46.ph = phi i32 [ %463, %456 ]
  %.4.ph = phi i32 [ %466, %456 ]
  br label %._crit_edge117

._crit_edge117.loopexit3:                         ; preds = %452, %.loopexit, %482
  %.330.ph4 = phi i32 [ %.027, %452 ], [ %.128, %.loopexit ], [ %.229, %482 ]
  %.426.ph5 = phi i8* [ %.022, %452 ], [ %.224, %.loopexit ], [ %.325, %482 ]
  %.321.ph6 = phi i32 [ %.018, %452 ], [ %.119, %.loopexit ], [ %.220, %482 ]
  %.317.ph7 = phi i32 [ %.014, %452 ], [ %.115, %.loopexit ], [ %.216, %482 ]
  %.213.ph8 = phi i32 [ %.011, %452 ], [ 1, %.loopexit ], [ 0, %482 ]
  %.310.ph9 = phi i8 [ %.07, %452 ], [ %.18, %.loopexit ], [ %.29, %482 ]
  %.46.ph10 = phi i32 [ %.02, %452 ], [ %.24, %.loopexit ], [ %.35, %482 ]
  %.4.ph11 = phi i32 [ %.01, %452 ], [ %.2, %.loopexit ], [ %.3, %482 ]
  br label %._crit_edge117

._crit_edge117:                                   ; preds = %._crit_edge117.loopexit3, %._crit_edge117.loopexit
  %.330 = phi i32 [ %.330.ph, %._crit_edge117.loopexit ], [ %.330.ph4, %._crit_edge117.loopexit3 ]
  %.426 = phi i8* [ %.426.ph, %._crit_edge117.loopexit ], [ %.426.ph5, %._crit_edge117.loopexit3 ]
  %.321 = phi i32 [ %.321.ph, %._crit_edge117.loopexit ], [ %.321.ph6, %._crit_edge117.loopexit3 ]
  %.317 = phi i32 [ %.317.ph, %._crit_edge117.loopexit ], [ %.317.ph7, %._crit_edge117.loopexit3 ]
  %.213 = phi i32 [ %.213.ph, %._crit_edge117.loopexit ], [ %.213.ph8, %._crit_edge117.loopexit3 ]
  %.310 = phi i8 [ %.310.ph, %._crit_edge117.loopexit ], [ %.310.ph9, %._crit_edge117.loopexit3 ]
  %.46 = phi i32 [ %.46.ph, %._crit_edge117.loopexit ], [ %.46.ph10, %._crit_edge117.loopexit3 ]
  %.4 = phi i32 [ %.4.ph, %._crit_edge117.loopexit ], [ %.4.ph11, %._crit_edge117.loopexit3 ]
  %555 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %556 = load %struct.bz_stream*, %struct.bz_stream** %555, align 8
  %557 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %556, i32 0, i32 6
  %558 = load i32, i32* %557, align 4
  %559 = sub i32 %439, %.4
  %560 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %561 = load %struct.bz_stream*, %struct.bz_stream** %560, align 8
  %562 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %561, i32 0, i32 6
  %563 = load i32, i32* %562, align 4
  %564 = add i32 %563, %559
  store i32 %564, i32* %562, align 4
  %565 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %566 = load %struct.bz_stream*, %struct.bz_stream** %565, align 8
  %567 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %566, i32 0, i32 6
  %568 = load i32, i32* %567, align 4
  %569 = icmp ult i32 %568, %558
  br i1 %569, label %570, label %576

; <label>:570:                                    ; preds = %._crit_edge117
  %571 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %572 = load %struct.bz_stream*, %struct.bz_stream** %571, align 8
  %573 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %572, i32 0, i32 7
  %574 = load i32, i32* %573, align 8
  %575 = add i32 %574, 1
  store i32 %575, i32* %573, align 8
  br label %576

; <label>:576:                                    ; preds = %570, %._crit_edge117
  %577 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  store i32 %.46, i32* %577, align 8
  %578 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  store i8 %.310, i8* %578, align 4
  %579 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 %.213, i32* %579, align 8
  %580 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  store i32 %.317, i32* %580, align 4
  %581 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %.321, i32* %581, align 8
  %582 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  store i32* %429, i32** %582, align 8
  %583 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %.330, i32* %583, align 4
  %584 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %585 = load %struct.bz_stream*, %struct.bz_stream** %584, align 8
  %586 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %585, i32 0, i32 4
  store i8* %.426, i8** %586, align 8
  %587 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %588 = load %struct.bz_stream*, %struct.bz_stream** %587, align 8
  %589 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %588, i32 0, i32 5
  store i32 %.4, i32* %589, align 8
  br label %._crit_edge

._crit_edge.loopexit:                             ; preds = %170
  %.0.ph = phi i8 [ 0, %170 ]
  br label %._crit_edge

._crit_edge.loopexit1:                            ; preds = %.backedge, %175, %180, %185, %236, %285, %334, %362
  %.0.ph2 = phi i8 [ 0, %.backedge ], [ 0, %175 ], [ 1, %180 ], [ 1, %185 ], [ 1, %236 ], [ 1, %285 ], [ 1, %334 ], [ 1, %362 ]
  br label %._crit_edge

._crit_edge.loopexit12:                           ; preds = %480, %484, %501, %517, %533, %535
  %.0.ph13 = phi i8 [ 1, %480 ], [ 1, %484 ], [ 1, %501 ], [ 1, %517 ], [ 1, %533 ], [ 1, %535 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit12, %._crit_edge.loopexit1, %._crit_edge.loopexit, %5, %576
  %.0 = phi i8 [ 0, %576 ], [ 0, %5 ], [ %.0.ph, %._crit_edge.loopexit ], [ %.0.ph2, %._crit_edge.loopexit1 ], [ %.0.ph13, %._crit_edge.loopexit12 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzDecompressEnd(%struct.bz_stream*) #0 {
  %2 = icmp eq %struct.bz_stream* %0, null
  br i1 %2, label %55, label %3

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.DState*
  %7 = icmp eq %struct.DState* %6, null
  br i1 %7, label %55, label %8

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 0
  %10 = load %struct.bz_stream*, %struct.bz_stream** %9, align 8
  %11 = icmp ne %struct.bz_stream* %10, %0
  br i1 %11, label %55, label %12

; <label>:12:                                     ; preds = %8
  %13 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 20
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ne i32* %14, null
  br i1 %15, label %16, label %24

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %18 = load void (i8*, i8*)*, void (i8*, i8*)** %17, align 8
  %19 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 20
  %22 = load i32*, i32** %21, align 8
  %23 = bitcast i32* %22 to i8*
  call void %18(i8* %20, i8* %23)
  br label %24

; <label>:24:                                     ; preds = %16, %12
  %25 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 21
  %26 = load i16*, i16** %25, align 8
  %27 = icmp ne i16* %26, null
  br i1 %27, label %28, label %36

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %30 = load void (i8*, i8*)*, void (i8*, i8*)** %29, align 8
  %31 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 21
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast i16* %34 to i8*
  call void %30(i8* %32, i8* %35)
  br label %36

; <label>:36:                                     ; preds = %28, %24
  %37 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 22
  %38 = load i8*, i8** %37, align 8
  %39 = icmp ne i8* %38, null
  br i1 %39, label %40, label %47

; <label>:40:                                     ; preds = %36
  %41 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %42 = load void (i8*, i8*)*, void (i8*, i8*)** %41, align 8
  %43 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.DState, %struct.DState* %6, i32 0, i32 22
  %46 = load i8*, i8** %45, align 8
  call void %42(i8* %44, i8* %46)
  br label %47

; <label>:47:                                     ; preds = %40, %36
  %48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 10
  %49 = load void (i8*, i8*)*, void (i8*, i8*)** %48, align 8
  %50 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 11
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  %53 = load i8*, i8** %52, align 8
  call void %49(i8* %51, i8* %53)
  %54 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %0, i32 0, i32 8
  store i8* null, i8** %54, align 8
  br label %55

; <label>:55:                                     ; preds = %8, %3, %1, %47
  %.0 = phi i32 [ 0, %47 ], [ -2, %1 ], [ -2, %3 ], [ -2, %8 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzWriteOpen(i32*, %struct._IO_FILE*, i32, i32, i32) #2 {
  %6 = icmp ne i32* %0, null
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %5
  store i32 0, i32* %0, align 4
  br label %8

; <label>:8:                                      ; preds = %7, %5
  %9 = icmp ne %struct.bzFile* null, null
  br i1 %9, label %10, label %12

; <label>:10:                                     ; preds = %8
  %11 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 0, i32* %11, align 8
  br label %12

; <label>:12:                                     ; preds = %10, %8
  %13 = icmp eq %struct._IO_FILE* %1, null
  %14 = icmp slt i32 %2, 1
  %or.cond = or i1 %13, %14
  %15 = icmp sgt i32 %2, 9
  %or.cond1 = or i1 %or.cond, %15
  %16 = icmp slt i32 %4, 0
  %or.cond2 = or i1 %or.cond1, %16
  %17 = icmp sgt i32 %4, 250
  %or.cond3 = or i1 %or.cond2, %17
  %18 = icmp slt i32 %3, 0
  %or.cond4 = or i1 %or.cond3, %18
  %19 = icmp sgt i32 %3, 4
  %or.cond5 = or i1 %or.cond4, %19
  br i1 %or.cond5, label %20, label %27

; <label>:20:                                     ; preds = %12
  %21 = icmp ne i32* %0, null
  br i1 %21, label %22, label %23

; <label>:22:                                     ; preds = %20
  store i32 -2, i32* %0, align 4
  br label %23

; <label>:23:                                     ; preds = %22, %20
  %24 = icmp ne %struct.bzFile* null, null
  br i1 %24, label %25, label %83

; <label>:25:                                     ; preds = %23
  %26 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -2, i32* %26, align 8
  br label %83

; <label>:27:                                     ; preds = %12
  %28 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %37

; <label>:30:                                     ; preds = %27
  %31 = icmp ne i32* %0, null
  br i1 %31, label %32, label %33

; <label>:32:                                     ; preds = %30
  store i32 -6, i32* %0, align 4
  br label %33

; <label>:33:                                     ; preds = %32, %30
  %34 = icmp ne %struct.bzFile* null, null
  br i1 %34, label %35, label %83

; <label>:35:                                     ; preds = %33
  %36 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -6, i32* %36, align 8
  br label %83

; <label>:37:                                     ; preds = %27
  %38 = call noalias i8* @malloc(i64 5104) #9, !track !56
  %39 = bitcast i8* %38 to %struct.bzFile*
  %40 = icmp eq %struct.bzFile* %39, null
  %41 = icmp ne i32* %0, null
  br i1 %40, label %42, label %48

; <label>:42:                                     ; preds = %37
  br i1 %41, label %43, label %44

; <label>:43:                                     ; preds = %42
  store i32 -3, i32* %0, align 4
  br label %44

; <label>:44:                                     ; preds = %43, %42
  %45 = icmp ne %struct.bzFile* %39, null
  br i1 %45, label %46, label %83

; <label>:46:                                     ; preds = %44
  %47 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 5
  store i32 -3, i32* %47, align 8
  br label %83

; <label>:48:                                     ; preds = %37
  br i1 %41, label %49, label %50

; <label>:49:                                     ; preds = %48
  store i32 0, i32* %0, align 4
  br label %50

; <label>:50:                                     ; preds = %49, %48
  %51 = icmp ne %struct.bzFile* %39, null
  br i1 %51, label %52, label %54

; <label>:52:                                     ; preds = %50
  %53 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 5
  store i32 0, i32* %53, align 8
  br label %54

; <label>:54:                                     ; preds = %52, %50
  %55 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 6
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 2
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 0
  store %struct._IO_FILE* %1, %struct._IO_FILE** %57, align 8
  %58 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 3
  store i8 1, i8* %58, align 4
  %59 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 4
  %60 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %59, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %60, align 8
  %61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 4
  %62 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %61, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %62, align 8
  %63 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 4
  %64 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %63, i32 0, i32 11
  store i8* null, i8** %64, align 8
  %65 = icmp eq i32 %4, 0
  %spec.select = select i1 %65, i32 30, i32 %4
  %66 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 4
  %67 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %66, i32 %2, i32 %3, i32 %spec.select)
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %69, label %78

; <label>:69:                                     ; preds = %54
  %70 = icmp ne i32* %0, null
  br i1 %70, label %71, label %72

; <label>:71:                                     ; preds = %69
  store i32 %67, i32* %0, align 4
  br label %72

; <label>:72:                                     ; preds = %71, %69
  %73 = icmp ne %struct.bzFile* %39, null
  br i1 %73, label %74, label %76

; <label>:74:                                     ; preds = %72
  %75 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 5
  store i32 %67, i32* %75, align 8
  br label %76

; <label>:76:                                     ; preds = %74, %72
  %77 = bitcast %struct.bzFile* %39 to i8*
  call void @free(i8* %77) #9
  br label %83

; <label>:78:                                     ; preds = %54
  %79 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 4
  %80 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %79, i32 0, i32 1
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %39, i32 0, i32 6
  store i8 1, i8* %81, align 4
  %82 = bitcast %struct.bzFile* %39 to i8*
  br label %83

; <label>:83:                                     ; preds = %44, %46, %33, %35, %23, %25, %78, %76
  %.0 = phi i8* [ null, %76 ], [ %82, %78 ], [ null, %25 ], [ null, %23 ], [ null, %35 ], [ null, %33 ], [ null, %46 ], [ null, %44 ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWrite(i32*, i8*, i8*, i32) #0 {
  %5 = bitcast i8* %1 to %struct.bzFile*
  %6 = icmp ne i32* %0, null
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %4
  store i32 0, i32* %0, align 4
  br label %8

; <label>:8:                                      ; preds = %7, %4
  %magicptr = ptrtoint %struct.bzFile* %5 to i64
  %cond = icmp eq i64 %magicptr, 0
  br i1 %cond, label %14, label %9

; <label>:9:                                      ; preds = %8
  %10 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %10, align 8
  %11 = icmp eq %struct.bzFile* %5, null
  %12 = icmp eq i8* %2, null
  %or.cond = or i1 %11, %12
  %13 = icmp slt i32 %3, 0
  %or.cond1 = or i1 %or.cond, %13
  br i1 %or.cond1, label %14, label %21

; <label>:14:                                     ; preds = %8, %9
  %15 = icmp ne i32* %0, null
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %14
  store i32 -2, i32* %0, align 4
  br label %17

; <label>:17:                                     ; preds = %16, %14
  %18 = icmp ne %struct.bzFile* %5, null
  br i1 %18, label %19, label %117

; <label>:19:                                     ; preds = %17
  %20 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -2, i32* %20, align 8
  br label %117

; <label>:21:                                     ; preds = %9
  %22 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 3
  %23 = load i8, i8* %22, align 4
  %24 = icmp ne i8 %23, 0
  br i1 %24, label %32, label %25

; <label>:25:                                     ; preds = %21
  %26 = icmp ne i32* %0, null
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %25
  store i32 -1, i32* %0, align 4
  br label %28

; <label>:28:                                     ; preds = %27, %25
  %29 = icmp ne %struct.bzFile* %5, null
  br i1 %29, label %30, label %117

; <label>:30:                                     ; preds = %28
  %31 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -1, i32* %31, align 8
  br label %117

; <label>:32:                                     ; preds = %21
  %33 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %33, align 8
  %35 = call i32 @ferror(%struct._IO_FILE* %34) #9
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %44

; <label>:37:                                     ; preds = %32
  %38 = icmp ne i32* %0, null
  br i1 %38, label %39, label %40

; <label>:39:                                     ; preds = %37
  store i32 -6, i32* %0, align 4
  br label %40

; <label>:40:                                     ; preds = %39, %37
  %41 = icmp ne %struct.bzFile* %5, null
  br i1 %41, label %42, label %117

; <label>:42:                                     ; preds = %40
  %43 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -6, i32* %43, align 8
  br label %117

; <label>:44:                                     ; preds = %32
  %45 = icmp eq i32 %3, 0
  br i1 %45, label %46, label %53

; <label>:46:                                     ; preds = %44
  %47 = icmp ne i32* %0, null
  br i1 %47, label %48, label %49

; <label>:48:                                     ; preds = %46
  store i32 0, i32* %0, align 4
  br label %49

; <label>:49:                                     ; preds = %48, %46
  %50 = icmp ne %struct.bzFile* %5, null
  br i1 %50, label %51, label %117

; <label>:51:                                     ; preds = %49
  %52 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %52, align 8
  br label %117

; <label>:53:                                     ; preds = %44
  %54 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %55 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %54, i32 0, i32 1
  store i32 %3, i32* %55, align 8
  %56 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %57 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %56, i32 0, i32 0
  store i8* %2, i8** %57, align 8
  %58 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %59 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %58, i32 0, i32 5
  store i32 5000, i32* %59, align 8
  %60 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 1
  %61 = getelementptr inbounds [5000 x i8], [5000 x i8]* %60, i32 0, i32 0
  %62 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %63 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %62, i32 0, i32 4
  store i8* %61, i8** %63, align 8
  %64 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %65 = call i32 @BZ2_bzCompress(%struct.bz_stream* %64, i32 0)
  %66 = icmp ne i32 %65, 1
  br i1 %66, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %53
  %67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %67, i32 0, i32 5
  %69 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %70 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %69, i32 0, i32 5
  %71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 1
  %72 = getelementptr inbounds [5000 x i8], [5000 x i8]* %71, i32 0, i32 0
  %73 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %74 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %75 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %74, i32 0, i32 1
  %76 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  br label %.lr.ph

; <label>:77:                                     ; preds = %107
  store i32 5000, i32* %59, align 8
  store i8* %61, i8** %63, align 8
  %78 = call i32 @BZ2_bzCompress(%struct.bz_stream* %64, i32 0)
  %79 = icmp ne i32 %78, 1
  br i1 %79, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %77
  %.lcssa.ph = phi i32 [ %78, %77 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %53
  %.lcssa = phi i32 [ %65, %53 ], [ %.lcssa.ph, %._crit_edge.loopexit ]
  %80 = icmp ne i32* %0, null
  br i1 %80, label %81, label %82

; <label>:81:                                     ; preds = %._crit_edge
  store i32 %.lcssa, i32* %0, align 4
  br label %82

; <label>:82:                                     ; preds = %81, %._crit_edge
  %83 = icmp ne %struct.bzFile* %5, null
  br i1 %83, label %84, label %117

; <label>:84:                                     ; preds = %82
  %85 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 %.lcssa, i32* %85, align 8
  br label %117

.lr.ph:                                           ; preds = %.lr.ph.preheader, %77
  call void @unroll_loop(i32 41)
  %86 = load i32, i32* %68, align 8
  %87 = icmp ult i32 %86, 5000
  br i1 %87, label %88, label %107

; <label>:88:                                     ; preds = %.lr.ph
  %89 = load i32, i32* %70, align 8
  %90 = sub i32 5000, %89
  %91 = sext i32 %90 to i64
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %73, align 8
  %93 = call i64 @fwrite(i8* %72, i64 1, i64 %91, %struct._IO_FILE* %92)
  %94 = trunc i64 %93 to i32
  %95 = icmp ne i32 %90, %94
  br i1 %95, label %100, label %96

; <label>:96:                                     ; preds = %88
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %76, align 8
  %98 = call i32 @ferror(%struct._IO_FILE* %97) #9
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %107

; <label>:100:                                    ; preds = %96, %88
  %101 = icmp ne i32* %0, null
  br i1 %101, label %102, label %103

; <label>:102:                                    ; preds = %100
  store i32 -6, i32* %0, align 4
  br label %103

; <label>:103:                                    ; preds = %102, %100
  %104 = icmp ne %struct.bzFile* %5, null
  br i1 %104, label %105, label %117

; <label>:105:                                    ; preds = %103
  %106 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -6, i32* %106, align 8
  br label %117

; <label>:107:                                    ; preds = %96, %.lr.ph
  %108 = load i32, i32* %75, align 8
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %77

; <label>:110:                                    ; preds = %107
  %111 = icmp ne i32* %0, null
  br i1 %111, label %112, label %113

; <label>:112:                                    ; preds = %110
  store i32 0, i32* %0, align 4
  br label %113

; <label>:113:                                    ; preds = %112, %110
  %114 = icmp ne %struct.bzFile* %5, null
  br i1 %114, label %115, label %117

; <label>:115:                                    ; preds = %113
  %116 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %116, align 8
  br label %117

; <label>:117:                                    ; preds = %113, %115, %103, %105, %82, %84, %49, %51, %40, %42, %28, %30, %17, %19
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWriteClose(i32*, i8*, i32, i32*, i32*) #0 {
  call void @BZ2_bzWriteClose64(i32* %0, i8* %1, i32 %2, i32* %3, i32* null, i32* %4, i32* null)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzWriteClose64(i32*, i8*, i32, i32*, i32*, i32*, i32*) #0 {
  %8 = bitcast i8* %1 to %struct.bzFile*
  %9 = icmp eq %struct.bzFile* %8, null
  br i1 %9, label %10, label %17

; <label>:10:                                     ; preds = %7
  %11 = icmp ne i32* %0, null
  br i1 %11, label %12, label %13

; <label>:12:                                     ; preds = %10
  store i32 0, i32* %0, align 4
  br label %13

; <label>:13:                                     ; preds = %12, %10
  %14 = icmp ne %struct.bzFile* %8, null
  br i1 %14, label %15, label %160

; <label>:15:                                     ; preds = %13
  %16 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 0, i32* %16, align 8
  br label %160

; <label>:17:                                     ; preds = %7
  %18 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 3
  %19 = load i8, i8* %18, align 4
  %20 = icmp ne i8 %19, 0
  br i1 %20, label %28, label %21

; <label>:21:                                     ; preds = %17
  %22 = icmp ne i32* %0, null
  br i1 %22, label %23, label %24

; <label>:23:                                     ; preds = %21
  store i32 -1, i32* %0, align 4
  br label %24

; <label>:24:                                     ; preds = %23, %21
  %25 = icmp ne %struct.bzFile* %8, null
  br i1 %25, label %26, label %160

; <label>:26:                                     ; preds = %24
  %27 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 -1, i32* %27, align 8
  br label %160

; <label>:28:                                     ; preds = %17
  %29 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** %29, align 8
  %31 = call i32 @ferror(%struct._IO_FILE* %30) #9
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %40

; <label>:33:                                     ; preds = %28
  %34 = icmp ne i32* %0, null
  br i1 %34, label %35, label %36

; <label>:35:                                     ; preds = %33
  store i32 -6, i32* %0, align 4
  br label %36

; <label>:36:                                     ; preds = %35, %33
  %37 = icmp ne %struct.bzFile* %8, null
  br i1 %37, label %38, label %160

; <label>:38:                                     ; preds = %36
  %39 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 -6, i32* %39, align 8
  br label %160

; <label>:40:                                     ; preds = %28
  %41 = icmp ne i32* %3, null
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %40
  store i32 0, i32* %3, align 4
  br label %43

; <label>:43:                                     ; preds = %42, %40
  %44 = icmp ne i32* %4, null
  br i1 %44, label %45, label %46

; <label>:45:                                     ; preds = %43
  store i32 0, i32* %4, align 4
  br label %46

; <label>:46:                                     ; preds = %45, %43
  %47 = icmp ne i32* %5, null
  br i1 %47, label %48, label %49

; <label>:48:                                     ; preds = %46
  store i32 0, i32* %5, align 4
  br label %49

; <label>:49:                                     ; preds = %48, %46
  %50 = icmp ne i32* %6, null
  br i1 %50, label %51, label %52

; <label>:51:                                     ; preds = %49
  store i32 0, i32* %6, align 4
  br label %52

; <label>:52:                                     ; preds = %51, %49
  %cond = icmp eq i32 %2, 0
  br i1 %cond, label %53, label %125

; <label>:53:                                     ; preds = %52
  %54 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %53
  %57 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %58 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %57, i32 0, i32 5
  %59 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 1
  %60 = getelementptr inbounds [5000 x i8], [5000 x i8]* %59, i32 0, i32 0
  %61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %62 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %61, i32 0, i32 4
  %63 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %64 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %65 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %64, i32 0, i32 5
  %66 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %67 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %66, i32 0, i32 5
  %68 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 1
  %69 = getelementptr inbounds [5000 x i8], [5000 x i8]* %68, i32 0, i32 0
  %70 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %102
  call void @unroll_loop(i32 42)
  store i32 5000, i32* %58, align 8
  store i8* %60, i8** %62, align 8
  %72 = call i32 @BZ2_bzCompress(%struct.bz_stream* %63, i32 2)
  %.off = add i32 %72, -3
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %80, label %73

; <label>:73:                                     ; preds = %.preheader
  %.lcssa = phi i32 [ %72, %.preheader ]
  %74 = icmp ne i32* %0, null
  br i1 %74, label %75, label %76

; <label>:75:                                     ; preds = %73
  store i32 %.lcssa, i32* %0, align 4
  br label %76

; <label>:76:                                     ; preds = %75, %73
  %77 = icmp ne %struct.bzFile* %8, null
  br i1 %77, label %78, label %160

; <label>:78:                                     ; preds = %76
  %79 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 %.lcssa, i32* %79, align 8
  br label %160

; <label>:80:                                     ; preds = %.preheader
  %81 = load i32, i32* %65, align 8
  %82 = icmp ult i32 %81, 5000
  br i1 %82, label %83, label %102

; <label>:83:                                     ; preds = %80
  %84 = load i32, i32* %67, align 8
  %85 = sub i32 5000, %84
  %86 = sext i32 %85 to i64
  %87 = load %struct._IO_FILE*, %struct._IO_FILE** %70, align 8
  %88 = call i64 @fwrite(i8* %69, i64 1, i64 %86, %struct._IO_FILE* %87)
  %89 = trunc i64 %88 to i32
  %90 = icmp ne i32 %85, %89
  br i1 %90, label %95, label %91

; <label>:91:                                     ; preds = %83
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** %71, align 8
  %93 = call i32 @ferror(%struct._IO_FILE* %92) #9
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %102

; <label>:95:                                     ; preds = %91, %83
  %96 = icmp ne i32* %0, null
  br i1 %96, label %97, label %98

; <label>:97:                                     ; preds = %95
  store i32 -6, i32* %0, align 4
  br label %98

; <label>:98:                                     ; preds = %97, %95
  %99 = icmp ne %struct.bzFile* %8, null
  br i1 %99, label %100, label %160

; <label>:100:                                    ; preds = %98
  %101 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 -6, i32* %101, align 8
  br label %160

; <label>:102:                                    ; preds = %91, %80
  %103 = icmp eq i32 %72, 4
  br i1 %103, label %.loopexit.loopexit, label %.preheader

.loopexit.loopexit:                               ; preds = %102
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %53
  %104 = icmp ne i32 %2, 0
  br i1 %104, label %125, label %105

; <label>:105:                                    ; preds = %.loopexit
  %106 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** %106, align 8
  %108 = call i32 @ferror(%struct._IO_FILE* %107) #9
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %125, label %110

; <label>:110:                                    ; preds = %105
  %111 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %111, align 8
  %113 = call i32 @fflush(%struct._IO_FILE* %112)
  %114 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 0
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %114, align 8
  %116 = call i32 @ferror(%struct._IO_FILE* %115) #9
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %125

; <label>:118:                                    ; preds = %110
  %119 = icmp ne i32* %0, null
  br i1 %119, label %120, label %121

; <label>:120:                                    ; preds = %118
  store i32 -6, i32* %0, align 4
  br label %121

; <label>:121:                                    ; preds = %120, %118
  %122 = icmp ne %struct.bzFile* %8, null
  br i1 %122, label %123, label %160

; <label>:123:                                    ; preds = %121
  %124 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 -6, i32* %124, align 8
  br label %160

; <label>:125:                                    ; preds = %52, %110, %105, %.loopexit
  %126 = icmp ne i32* %3, null
  br i1 %126, label %127, label %131

; <label>:127:                                    ; preds = %125
  %128 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %129 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %128, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %3, align 4
  br label %131

; <label>:131:                                    ; preds = %127, %125
  %132 = icmp ne i32* %4, null
  br i1 %132, label %133, label %137

; <label>:133:                                    ; preds = %131
  %134 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %135 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %134, i32 0, i32 3
  %136 = load i32, i32* %135, align 8
  store i32 %136, i32* %4, align 4
  br label %137

; <label>:137:                                    ; preds = %133, %131
  %138 = icmp ne i32* %5, null
  br i1 %138, label %139, label %143

; <label>:139:                                    ; preds = %137
  %140 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %141 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %140, i32 0, i32 6
  %142 = load i32, i32* %141, align 4
  store i32 %142, i32* %5, align 4
  br label %143

; <label>:143:                                    ; preds = %139, %137
  %144 = icmp ne i32* %6, null
  br i1 %144, label %145, label %149

; <label>:145:                                    ; preds = %143
  %146 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %147 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %146, i32 0, i32 7
  %148 = load i32, i32* %147, align 8
  store i32 %148, i32* %6, align 4
  br label %149

; <label>:149:                                    ; preds = %145, %143
  %150 = icmp ne i32* %0, null
  br i1 %150, label %151, label %152

; <label>:151:                                    ; preds = %149
  store i32 0, i32* %0, align 4
  br label %152

; <label>:152:                                    ; preds = %151, %149
  %153 = icmp ne %struct.bzFile* %8, null
  br i1 %153, label %154, label %156

; <label>:154:                                    ; preds = %152
  %155 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 5
  store i32 0, i32* %155, align 8
  br label %156

; <label>:156:                                    ; preds = %154, %152
  %157 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 4
  %158 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %157)
  %159 = bitcast %struct.bzFile* %8 to i8*
  call void @free(i8* %159) #9
  br label %160

; <label>:160:                                    ; preds = %121, %123, %98, %100, %76, %78, %36, %38, %24, %26, %13, %15, %156
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzReadOpen(i32*, %struct._IO_FILE*, i32, i32, i8*, i32) #2 {
  %7 = icmp ne i32* %0, null
  br i1 %7, label %8, label %9

; <label>:8:                                      ; preds = %6
  store i32 0, i32* %0, align 4
  br label %9

; <label>:9:                                      ; preds = %8, %6
  %10 = icmp ne %struct.bzFile* null, null
  br i1 %10, label %11, label %13

; <label>:11:                                     ; preds = %9
  %12 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 0, i32* %12, align 8
  br label %13

; <label>:13:                                     ; preds = %11, %9
  %14 = icmp ne %struct._IO_FILE* %1, null
  %switch = icmp ult i32 %3, 2
  %or.cond3 = and i1 %14, %switch
  br i1 %or.cond3, label %15, label %26

; <label>:15:                                     ; preds = %13
  %16 = icmp slt i32 %2, 0
  %17 = icmp sgt i32 %2, 4
  %or.cond = or i1 %16, %17
  br i1 %or.cond, label %26, label %18

; <label>:18:                                     ; preds = %15
  %19 = icmp eq i8* %4, null
  %20 = icmp ne i32 %5, 0
  %or.cond1 = and i1 %19, %20
  br i1 %or.cond1, label %26, label %21

; <label>:21:                                     ; preds = %18
  %22 = icmp ne i8* %4, null
  br i1 %22, label %23, label %33

; <label>:23:                                     ; preds = %21
  %24 = icmp slt i32 %5, 0
  %25 = icmp sgt i32 %5, 5000
  %or.cond2 = or i1 %24, %25
  br i1 %or.cond2, label %26, label %33

; <label>:26:                                     ; preds = %13, %18, %23, %15
  %27 = icmp ne i32* %0, null
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %26
  store i32 -2, i32* %0, align 4
  br label %29

; <label>:29:                                     ; preds = %28, %26
  %30 = icmp ne %struct.bzFile* null, null
  br i1 %30, label %31, label %107

; <label>:31:                                     ; preds = %29
  %32 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -2, i32* %32, align 8
  br label %107

; <label>:33:                                     ; preds = %23, %21
  %34 = call i32 @ferror(%struct._IO_FILE* %1) #9
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %36, label %43

; <label>:36:                                     ; preds = %33
  %37 = icmp ne i32* %0, null
  br i1 %37, label %38, label %39

; <label>:38:                                     ; preds = %36
  store i32 -6, i32* %0, align 4
  br label %39

; <label>:39:                                     ; preds = %38, %36
  %40 = icmp ne %struct.bzFile* null, null
  br i1 %40, label %41, label %107

; <label>:41:                                     ; preds = %39
  %42 = getelementptr inbounds %struct.bzFile, %struct.bzFile* null, i32 0, i32 5
  store i32 -6, i32* %42, align 8
  br label %107

; <label>:43:                                     ; preds = %33
  %44 = call noalias i8* @malloc(i64 5104) #9, !track !57
  %45 = bitcast i8* %44 to %struct.bzFile*
  %46 = icmp eq %struct.bzFile* %45, null
  %47 = icmp ne i32* %0, null
  br i1 %46, label %48, label %54

; <label>:48:                                     ; preds = %43
  br i1 %47, label %49, label %50

; <label>:49:                                     ; preds = %48
  store i32 -3, i32* %0, align 4
  br label %50

; <label>:50:                                     ; preds = %49, %48
  %51 = icmp ne %struct.bzFile* %45, null
  br i1 %51, label %52, label %107

; <label>:52:                                     ; preds = %50
  %53 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 5
  store i32 -3, i32* %53, align 8
  br label %107

; <label>:54:                                     ; preds = %43
  br i1 %47, label %55, label %56

; <label>:55:                                     ; preds = %54
  store i32 0, i32* %0, align 4
  br label %56

; <label>:56:                                     ; preds = %55, %54
  %57 = icmp ne %struct.bzFile* %45, null
  br i1 %57, label %58, label %60

; <label>:58:                                     ; preds = %56
  %59 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 5
  store i32 0, i32* %59, align 8
  br label %60

; <label>:60:                                     ; preds = %58, %56
  %61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 6
  store i8 0, i8* %61, align 4
  %62 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 0
  store %struct._IO_FILE* %1, %struct._IO_FILE** %62, align 8
  %63 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 2
  store i32 0, i32* %63, align 8
  %64 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 3
  store i8 0, i8* %64, align 4
  %65 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 4
  %66 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %65, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %66, align 8
  %67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 4
  %68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %67, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %68, align 8
  %69 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 4
  %70 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %69, i32 0, i32 11
  store i8* null, i8** %70, align 8
  %71 = icmp sgt i32 %5, 0
  br i1 %71, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %60
  %72 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 1
  %73 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 2
  %74 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 2
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.014 = phi i32 [ %82, %.lr.ph ], [ %5, %.lr.ph.preheader ]
  %.023 = phi i8* [ %81, %.lr.ph ], [ %4, %.lr.ph.preheader ]
  call void @unroll_loop(i32 43)
  %75 = load i8, i8* %.023, align 1
  %76 = load i32, i32* %73, align 8
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds [5000 x i8], [5000 x i8]* %72, i64 0, i64 %77
  store i8 %75, i8* %78, align 1
  %79 = load i32, i32* %74, align 8
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %74, align 8
  %81 = getelementptr inbounds i8, i8* %.023, i64 1
  %82 = add nsw i32 %.014, -1
  %83 = icmp sgt i32 %82, 0
  br i1 %83, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %60
  %84 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 4
  %85 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %84, i32 %2, i32 %3)
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %87, label %96

; <label>:87:                                     ; preds = %._crit_edge
  %88 = icmp ne i32* %0, null
  br i1 %88, label %89, label %90

; <label>:89:                                     ; preds = %87
  store i32 %85, i32* %0, align 4
  br label %90

; <label>:90:                                     ; preds = %89, %87
  %91 = icmp ne %struct.bzFile* %45, null
  br i1 %91, label %92, label %94

; <label>:92:                                     ; preds = %90
  %93 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 5
  store i32 %85, i32* %93, align 8
  br label %94

; <label>:94:                                     ; preds = %92, %90
  %95 = bitcast %struct.bzFile* %45 to i8*
  call void @free(i8* %95) #9
  br label %107

; <label>:96:                                     ; preds = %._crit_edge
  %97 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 2
  %98 = load i32, i32* %97, align 8
  %99 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 4
  %100 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %99, i32 0, i32 1
  store i32 %98, i32* %100, align 8
  %101 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 1
  %102 = getelementptr inbounds [5000 x i8], [5000 x i8]* %101, i32 0, i32 0
  %103 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 4
  %104 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %103, i32 0, i32 0
  store i8* %102, i8** %104, align 8
  %105 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %45, i32 0, i32 6
  store i8 1, i8* %105, align 4
  %106 = bitcast %struct.bzFile* %45 to i8*
  br label %107

; <label>:107:                                    ; preds = %50, %52, %39, %41, %29, %31, %96, %94
  %.0 = phi i8* [ null, %94 ], [ %106, %96 ], [ null, %31 ], [ null, %29 ], [ null, %41 ], [ null, %39 ], [ null, %52 ], [ null, %50 ]
  ret i8* %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzReadClose(i32*, i8*) #0 {
  %3 = bitcast i8* %1 to %struct.bzFile*
  %4 = icmp ne i32* %0, null
  br i1 %4, label %5, label %6

; <label>:5:                                      ; preds = %2
  store i32 0, i32* %0, align 4
  br label %6

; <label>:6:                                      ; preds = %5, %2
  %magicptr = ptrtoint %struct.bzFile* %3 to i64
  %cond = icmp eq i64 %magicptr, 0
  br i1 %cond, label %12, label %7

; <label>:7:                                      ; preds = %6
  %8 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 3
  %10 = load i8, i8* %9, align 4
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %19, label %26

; <label>:12:                                     ; preds = %6
  %13 = icmp ne i32* %0, null
  br i1 %13, label %14, label %15

; <label>:14:                                     ; preds = %12
  store i32 0, i32* %0, align 4
  br label %15

; <label>:15:                                     ; preds = %14, %12
  %16 = icmp ne %struct.bzFile* %3, null
  br i1 %16, label %17, label %35

; <label>:17:                                     ; preds = %15
  %18 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  store i32 0, i32* %18, align 8
  br label %35

; <label>:19:                                     ; preds = %7
  %20 = icmp ne i32* %0, null
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %19
  store i32 -1, i32* %0, align 4
  br label %22

; <label>:22:                                     ; preds = %21, %19
  %23 = icmp ne %struct.bzFile* %3, null
  br i1 %23, label %24, label %35

; <label>:24:                                     ; preds = %22
  %25 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  store i32 -1, i32* %25, align 8
  br label %35

; <label>:26:                                     ; preds = %7
  %27 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 6
  %28 = load i8, i8* %27, align 4
  %29 = icmp ne i8 %28, 0
  br i1 %29, label %30, label %33

; <label>:30:                                     ; preds = %26
  %31 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 4
  %32 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %31)
  br label %33

; <label>:33:                                     ; preds = %30, %26
  %34 = bitcast %struct.bzFile* %3 to i8*
  call void @free(i8* %34) #9
  br label %35

; <label>:35:                                     ; preds = %22, %24, %15, %17, %33
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzRead(i32*, i8*, i8*, i32) #0 {
  %5 = bitcast i8* %1 to %struct.bzFile*
  %6 = icmp ne i32* %0, null
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %4
  store i32 0, i32* %0, align 4
  br label %8

; <label>:8:                                      ; preds = %7, %4
  %magicptr = ptrtoint %struct.bzFile* %5 to i64
  %cond = icmp eq i64 %magicptr, 0
  br i1 %cond, label %14, label %9

; <label>:9:                                      ; preds = %8
  %10 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %10, align 8
  %11 = icmp eq %struct.bzFile* %5, null
  %12 = icmp eq i8* %2, null
  %or.cond = or i1 %11, %12
  %13 = icmp slt i32 %3, 0
  %or.cond1 = or i1 %or.cond, %13
  br i1 %or.cond1, label %14, label %21

; <label>:14:                                     ; preds = %8, %9
  %15 = icmp ne i32* %0, null
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %14
  store i32 -2, i32* %0, align 4
  br label %17

; <label>:17:                                     ; preds = %16, %14
  %18 = icmp ne %struct.bzFile* %5, null
  br i1 %18, label %19, label %156

; <label>:19:                                     ; preds = %17
  %20 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -2, i32* %20, align 8
  br label %156

; <label>:21:                                     ; preds = %9
  %22 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 3
  %23 = load i8, i8* %22, align 4
  %24 = icmp ne i8 %23, 0
  br i1 %24, label %25, label %32

; <label>:25:                                     ; preds = %21
  %26 = icmp ne i32* %0, null
  br i1 %26, label %27, label %28

; <label>:27:                                     ; preds = %25
  store i32 -1, i32* %0, align 4
  br label %28

; <label>:28:                                     ; preds = %27, %25
  %29 = icmp ne %struct.bzFile* %5, null
  br i1 %29, label %30, label %156

; <label>:30:                                     ; preds = %28
  %31 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -1, i32* %31, align 8
  br label %156

; <label>:32:                                     ; preds = %21
  %33 = icmp eq i32 %3, 0
  br i1 %33, label %34, label %41

; <label>:34:                                     ; preds = %32
  %35 = icmp ne i32* %0, null
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %34
  store i32 0, i32* %0, align 4
  br label %37

; <label>:37:                                     ; preds = %36, %34
  %38 = icmp ne %struct.bzFile* %5, null
  br i1 %38, label %39, label %156

; <label>:39:                                     ; preds = %37
  %40 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %40, align 8
  br label %156

; <label>:41:                                     ; preds = %32
  %42 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %43 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i32 0, i32 5
  store i32 %3, i32* %43, align 8
  %44 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %45 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %44, i32 0, i32 4
  store i8* %2, i8** %45, align 8
  %46 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %46, align 8
  %48 = call i32 @ferror(%struct._IO_FILE* %47) #9
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %41
  %50 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %50, i32 0, i32 1
  %52 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %53 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %54 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 1
  %55 = getelementptr inbounds [5000 x i8], [5000 x i8]* %54, i32 0, i32 0
  %56 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %57 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %58 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %59 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 2
  %60 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 2
  %61 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %62 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %61, i32 0, i32 1
  %63 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 1
  %64 = getelementptr inbounds [5000 x i8], [5000 x i8]* %63, i32 0, i32 0
  %65 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %66 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %65, i32 0, i32 0
  %67 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %68 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %67, i32 0, i32 1
  %69 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %70 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %69, i32 0, i32 5
  %71 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %72 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %71, i32 0, i32 5
  br label %.lr.ph

; <label>:73:                                     ; preds = %146
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %46, align 8
  %75 = call i32 @ferror(%struct._IO_FILE* %74) #9
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %._crit_edge.loopexit, label %.lr.ph

._crit_edge.loopexit:                             ; preds = %73
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %41
  %77 = icmp ne i32* %0, null
  br i1 %77, label %78, label %79

; <label>:78:                                     ; preds = %._crit_edge
  store i32 -6, i32* %0, align 4
  br label %79

; <label>:79:                                     ; preds = %78, %._crit_edge
  %80 = icmp ne %struct.bzFile* %5, null
  br i1 %80, label %81, label %156

; <label>:81:                                     ; preds = %79
  %82 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -6, i32* %82, align 8
  br label %156

.lr.ph:                                           ; preds = %.lr.ph.preheader, %73
  call void @unroll_loop(i32 44)
  %83 = load i32, i32* %51, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %105

; <label>:85:                                     ; preds = %.lr.ph
  %86 = load %struct._IO_FILE*, %struct._IO_FILE** %52, align 8
  %87 = call zeroext i8 @myfeof.123(%struct._IO_FILE* %86)
  %88 = icmp ne i8 %87, 0
  br i1 %88, label %105, label %89

; <label>:89:                                     ; preds = %85
  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %56, align 8
  %91 = call i64 @fread(i8* %55, i64 1, i64 5000, %struct._IO_FILE* %90)
  %92 = trunc i64 %91 to i32
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %57, align 8
  %94 = call i32 @ferror(%struct._IO_FILE* %93) #9
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %96, label %103

; <label>:96:                                     ; preds = %89
  %97 = icmp ne i32* %0, null
  br i1 %97, label %98, label %99

; <label>:98:                                     ; preds = %96
  store i32 -6, i32* %0, align 4
  br label %99

; <label>:99:                                     ; preds = %98, %96
  %100 = icmp ne %struct.bzFile* %5, null
  br i1 %100, label %101, label %156

; <label>:101:                                    ; preds = %99
  %102 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -6, i32* %102, align 8
  br label %156

; <label>:103:                                    ; preds = %89
  store i32 %92, i32* %59, align 8
  %104 = load i32, i32* %60, align 8
  store i32 %104, i32* %62, align 8
  store i8* %64, i8** %66, align 8
  br label %105

; <label>:105:                                    ; preds = %103, %85, %.lr.ph
  %106 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %53)
  switch i32 %106, label %107 [
    i32 0, label %114
    i32 4, label %134
  ]

; <label>:107:                                    ; preds = %105
  %.lcssa = phi i32 [ %106, %105 ]
  %108 = icmp ne i32* %0, null
  br i1 %108, label %109, label %110

; <label>:109:                                    ; preds = %107
  store i32 %.lcssa, i32* %0, align 4
  br label %110

; <label>:110:                                    ; preds = %109, %107
  %111 = icmp ne %struct.bzFile* %5, null
  br i1 %111, label %112, label %156

; <label>:112:                                    ; preds = %110
  %113 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 %.lcssa, i32* %113, align 8
  br label %156

; <label>:114:                                    ; preds = %105
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** %58, align 8
  %116 = call zeroext i8 @myfeof.123(%struct._IO_FILE* %115)
  %117 = zext i8 %116 to i32
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %132

; <label>:119:                                    ; preds = %114
  %120 = load i32, i32* %68, align 8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %132

; <label>:122:                                    ; preds = %119
  %123 = load i32, i32* %70, align 8
  %124 = icmp ugt i32 %123, 0
  br i1 %124, label %125, label %132

; <label>:125:                                    ; preds = %122
  %126 = icmp ne i32* %0, null
  br i1 %126, label %127, label %128

; <label>:127:                                    ; preds = %125
  store i32 -7, i32* %0, align 4
  br label %128

; <label>:128:                                    ; preds = %127, %125
  %129 = icmp ne %struct.bzFile* %5, null
  br i1 %129, label %130, label %156

; <label>:130:                                    ; preds = %128
  %131 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -7, i32* %131, align 8
  br label %156

; <label>:132:                                    ; preds = %122, %119, %114
  %133 = icmp eq i32 %106, 4
  br i1 %133, label %134, label %146

; <label>:134:                                    ; preds = %105, %132
  %135 = icmp ne i32* %0, null
  br i1 %135, label %136, label %137

; <label>:136:                                    ; preds = %134
  store i32 4, i32* %0, align 4
  br label %137

; <label>:137:                                    ; preds = %136, %134
  %138 = icmp ne %struct.bzFile* %5, null
  br i1 %138, label %139, label %141

; <label>:139:                                    ; preds = %137
  %140 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 4, i32* %140, align 8
  br label %141

; <label>:141:                                    ; preds = %139, %137
  %142 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %143 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %142, i32 0, i32 5
  %144 = load i32, i32* %143, align 8
  %145 = sub i32 %3, %144
  br label %156

; <label>:146:                                    ; preds = %132
  %147 = load i32, i32* %72, align 8
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %73

; <label>:149:                                    ; preds = %146
  %150 = icmp ne i32* %0, null
  br i1 %150, label %151, label %152

; <label>:151:                                    ; preds = %149
  store i32 0, i32* %0, align 4
  br label %152

; <label>:152:                                    ; preds = %151, %149
  %153 = icmp ne %struct.bzFile* %5, null
  br i1 %153, label %154, label %156

; <label>:154:                                    ; preds = %152
  %155 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %155, align 8
  br label %156

; <label>:156:                                    ; preds = %152, %154, %128, %130, %110, %112, %99, %101, %79, %81, %37, %39, %28, %30, %17, %19, %141
  %.0 = phi i32 [ %145, %141 ], [ 0, %19 ], [ 0, %17 ], [ 0, %30 ], [ 0, %28 ], [ 0, %39 ], [ 0, %37 ], [ 0, %81 ], [ 0, %79 ], [ 0, %101 ], [ 0, %99 ], [ 0, %112 ], [ 0, %110 ], [ 0, %130 ], [ 0, %128 ], [ %3, %154 ], [ %3, %152 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @myfeof.123(%struct._IO_FILE*) #0 {
  %2 = call i32 @fgetc(%struct._IO_FILE* %0)
  %3 = icmp eq i32 %2, -1
  br i1 %3, label %6, label %4

; <label>:4:                                      ; preds = %1
  %5 = call i32 @ungetc(i32 %2, %struct._IO_FILE* %0)
  br label %6

; <label>:6:                                      ; preds = %1, %4
  %.0 = phi i8 [ 0, %4 ], [ 1, %1 ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzReadGetUnused(i32*, i8*, i8**, i32*) #0 {
  %5 = bitcast i8* %1 to %struct.bzFile*
  %6 = icmp eq %struct.bzFile* %5, null
  br i1 %6, label %7, label %14

; <label>:7:                                      ; preds = %4
  %8 = icmp ne i32* %0, null
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %7
  store i32 -2, i32* %0, align 4
  br label %10

; <label>:10:                                     ; preds = %9, %7
  %11 = icmp ne %struct.bzFile* %5, null
  br i1 %11, label %12, label %48

; <label>:12:                                     ; preds = %10
  %13 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -2, i32* %13, align 8
  br label %48

; <label>:14:                                     ; preds = %4
  %15 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = icmp ne i32 %16, 4
  br i1 %17, label %18, label %25

; <label>:18:                                     ; preds = %14
  %19 = icmp ne i32* %0, null
  br i1 %19, label %20, label %21

; <label>:20:                                     ; preds = %18
  store i32 -1, i32* %0, align 4
  br label %21

; <label>:21:                                     ; preds = %20, %18
  %22 = icmp ne %struct.bzFile* %5, null
  br i1 %22, label %23, label %48

; <label>:23:                                     ; preds = %21
  %24 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -1, i32* %24, align 8
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = icmp eq i8** %2, null
  %27 = icmp eq i32* %3, null
  %or.cond = or i1 %26, %27
  %28 = icmp ne i32* %0, null
  br i1 %or.cond, label %29, label %35

; <label>:29:                                     ; preds = %25
  br i1 %28, label %30, label %31

; <label>:30:                                     ; preds = %29
  store i32 -2, i32* %0, align 4
  br label %31

; <label>:31:                                     ; preds = %30, %29
  %32 = icmp ne %struct.bzFile* %5, null
  br i1 %32, label %33, label %48

; <label>:33:                                     ; preds = %31
  %34 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 -2, i32* %34, align 8
  br label %48

; <label>:35:                                     ; preds = %25
  br i1 %28, label %36, label %37

; <label>:36:                                     ; preds = %35
  store i32 0, i32* %0, align 4
  br label %37

; <label>:37:                                     ; preds = %36, %35
  %38 = icmp ne %struct.bzFile* %5, null
  br i1 %38, label %39, label %41

; <label>:39:                                     ; preds = %37
  %40 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  store i32 0, i32* %40, align 8
  br label %41

; <label>:41:                                     ; preds = %39, %37
  %42 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %43 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %3, align 4
  %45 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 4
  %46 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %45, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  store i8* %47, i8** %2, align 8
  br label %48

; <label>:48:                                     ; preds = %31, %33, %21, %23, %10, %12, %41
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzBuffToBuffCompress(i8*, i32*, i8*, i32, i32, i32, i32) #0 {
  %8 = alloca %struct.bz_stream, align 8, !track !58
  %9 = icmp eq i8* %0, null
  %10 = icmp eq i32* %1, null
  %or.cond = or i1 %9, %10
  %11 = icmp eq i8* %2, null
  %or.cond1 = or i1 %or.cond, %11
  %12 = icmp slt i32 %4, 1
  %or.cond2 = or i1 %or.cond1, %12
  %13 = icmp sgt i32 %4, 9
  %or.cond3 = or i1 %or.cond2, %13
  %14 = icmp slt i32 %5, 0
  %or.cond4 = or i1 %or.cond3, %14
  %15 = icmp sgt i32 %5, 4
  %or.cond5 = or i1 %or.cond4, %15
  %16 = icmp slt i32 %6, 0
  %or.cond6 = or i1 %or.cond5, %16
  %17 = icmp sgt i32 %6, 250
  %or.cond7 = or i1 %or.cond6, %17
  br i1 %or.cond7, label %42, label %18

; <label>:18:                                     ; preds = %7
  %19 = icmp eq i32 %6, 0
  %spec.select = select i1 %19, i32 30, i32 %6
  %20 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %20, align 8
  %21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %21, align 8
  %22 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 11
  store i8* null, i8** %22, align 8
  %23 = call i32 @BZ2_bzCompressInit(%struct.bz_stream* %8, i32 %4, i32 %5, i32 %spec.select)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %42, label %25

; <label>:25:                                     ; preds = %18
  %26 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 0
  store i8* %2, i8** %26, align 8
  %27 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 4
  store i8* %0, i8** %27, align 8
  %28 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 1
  store i32 %3, i32* %28, align 8
  %29 = load i32, i32* %1, align 4
  %30 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 5
  store i32 %29, i32* %30, align 8
  %31 = call i32 @BZ2_bzCompress(%struct.bz_stream* %8, i32 2)
  switch i32 %31, label %40 [
    i32 3, label %38
    i32 4, label %32
  ]

; <label>:32:                                     ; preds = %25
  %33 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %8, i32 0, i32 5
  %34 = load i32, i32* %33, align 8
  %35 = load i32, i32* %1, align 4
  %36 = sub i32 %35, %34
  store i32 %36, i32* %1, align 4
  %37 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %8)
  br label %42

; <label>:38:                                     ; preds = %25
  %39 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %8)
  br label %42

; <label>:40:                                     ; preds = %25
  %41 = call i32 @BZ2_bzCompressEnd(%struct.bz_stream* %8)
  br label %42

; <label>:42:                                     ; preds = %18, %7, %40, %38, %32
  %.0 = phi i32 [ -8, %38 ], [ %31, %40 ], [ 0, %32 ], [ -2, %7 ], [ %23, %18 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzBuffToBuffDecompress(i8*, i32*, i8*, i32, i32, i32) #0 {
  %7 = alloca %struct.bz_stream, align 8, !track !59
  %8 = icmp eq i8* %0, null
  %9 = icmp eq i32* %1, null
  %or.cond = or i1 %8, %9
  %10 = icmp eq i8* %2, null
  %or.cond1 = or i1 %or.cond, %10
  %or.cond1.not = xor i1 %or.cond1, true
  %switch = icmp ult i32 %4, 2
  %or.cond3 = and i1 %or.cond1.not, %switch
  br i1 %or.cond3, label %11, label %40

; <label>:11:                                     ; preds = %6
  %12 = icmp slt i32 %5, 0
  %13 = icmp sgt i32 %5, 4
  %or.cond2 = or i1 %12, %13
  br i1 %or.cond2, label %40, label %14

; <label>:14:                                     ; preds = %11
  %15 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 9
  store i8* (i8*, i32, i32)* null, i8* (i8*, i32, i32)** %15, align 8
  %16 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 10
  store void (i8*, i8*)* null, void (i8*, i8*)** %16, align 8
  %17 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 11
  store i8* null, i8** %17, align 8
  %18 = call i32 @BZ2_bzDecompressInit(%struct.bz_stream* %7, i32 %5, i32 %4)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %40, label %20

; <label>:20:                                     ; preds = %14
  %21 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 0
  store i8* %2, i8** %21, align 8
  %22 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 4
  store i8* %0, i8** %22, align 8
  %23 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 1
  store i32 %3, i32* %23, align 8
  %24 = load i32, i32* %1, align 4
  %25 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  store i32 %24, i32* %25, align 8
  %26 = call i32 @BZ2_bzDecompress(%struct.bz_stream* %7)
  switch i32 %26, label %38 [
    i32 0, label %33
    i32 4, label %27
  ]

; <label>:27:                                     ; preds = %20
  %28 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = load i32, i32* %1, align 4
  %31 = sub i32 %30, %29
  store i32 %31, i32* %1, align 4
  %32 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %7)
  br label %40

; <label>:33:                                     ; preds = %20
  %34 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %7, i32 0, i32 5
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %35, 0
  %37 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %7)
  %. = select i1 %36, i32 -7, i32 -8
  br label %40

; <label>:38:                                     ; preds = %20
  %39 = call i32 @BZ2_bzDecompressEnd(%struct.bz_stream* %7)
  br label %40

; <label>:40:                                     ; preds = %6, %33, %14, %11, %38, %27
  %.0 = phi i32 [ %26, %38 ], [ 0, %27 ], [ -2, %11 ], [ -2, %6 ], [ %18, %14 ], [ %., %33 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzopen(i8*, i8*) #0 {
  %3 = call i8* @bzopen_or_bzdopen(i8* %0, i32 -1, i8* %1, i32 0)
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @bzopen_or_bzdopen(i8*, i32, i8*, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca [5000 x i8], align 16
  %7 = alloca [10 x i8], align 1
  %8 = bitcast [10 x i8]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %8, i8 0, i64 10, i1 false)
  %9 = icmp eq i8* %2, null
  br i1 %9, label %84, label %10

; <label>:10:                                     ; preds = %4
  %11 = load i8, i8* %2, align 1
  %12 = icmp ne i8 %11, 0
  br i1 %12, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %10
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %32
  %.0113 = phi i32 [ %.1, %32 ], [ 0, %.lr.ph.preheader ]
  %.0312 = phi i8* [ %33, %32 ], [ %2, %.lr.ph.preheader ]
  %.0611 = phi i32 [ %.2, %32 ], [ 9, %.lr.ph.preheader ]
  %.0810 = phi i32 [ %.19, %32 ], [ 0, %.lr.ph.preheader ]
  %13 = load i8, i8* %.0312, align 1
  %14 = sext i8 %13 to i32
  switch i32 %14, label %17 [
    i32 114, label %32
    i32 119, label %15
    i32 115, label %16
  ]

; <label>:15:                                     ; preds = %.lr.ph
  br label %32

; <label>:16:                                     ; preds = %.lr.ph
  br label %32

; <label>:17:                                     ; preds = %.lr.ph
  %18 = call i16** @__ctype_b_loc() #13
  %19 = load i16*, i16** %18, align 8
  %20 = load i8, i8* %.0312, align 1
  %21 = sext i8 %20 to i32
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %19, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = and i32 %25, 2048
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %32

; <label>:28:                                     ; preds = %17
  %29 = load i8, i8* %.0312, align 1
  %30 = sext i8 %29 to i32
  %31 = sub nsw i32 %30, 48
  br label %32

; <label>:32:                                     ; preds = %17, %28, %.lr.ph, %16, %15
  %.19 = phi i32 [ %.0810, %16 ], [ 1, %15 ], [ 0, %.lr.ph ], [ %.0810, %28 ], [ %.0810, %17 ]
  %.2 = phi i32 [ %.0611, %16 ], [ %.0611, %15 ], [ %.0611, %.lr.ph ], [ %31, %28 ], [ %.0611, %17 ]
  %.1 = phi i32 [ 1, %16 ], [ %.0113, %15 ], [ %.0113, %.lr.ph ], [ %.0113, %28 ], [ %.0113, %17 ]
  %33 = getelementptr inbounds i8, i8* %.0312, i32 1
  %scevgep = getelementptr i8, i8* %.0312, i64 1
  %34 = load i8, i8* %scevgep, align 1
  %35 = icmp ne i8 %34, 0
  br i1 %35, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %32
  %.08.lcssa.ph = phi i32 [ %.19, %32 ]
  %.06.lcssa.ph = phi i32 [ %.2, %32 ]
  %.01.lcssa.ph = phi i32 [ %.1, %32 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %10
  %.08.lcssa = phi i32 [ 0, %10 ], [ %.08.lcssa.ph, %._crit_edge.loopexit ]
  %.06.lcssa = phi i32 [ 9, %10 ], [ %.06.lcssa.ph, %._crit_edge.loopexit ]
  %.01.lcssa = phi i32 [ 0, %10 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %36 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i32 0, i32 0
  %37 = icmp ne i32 %.08.lcssa, 0
  %38 = zext i1 %37 to i64
  %39 = getelementptr [2 x i8], [2 x i8]* @.str.6.126, i32 0, i32 0
  %40 = getelementptr [2 x i8], [2 x i8]* @.str.7.127, i32 0, i32 0
  %41 = select i1 %37, i8* %39, i8* %40
  %42 = call i8* @strcat(i8* %36, i8* %41) #9
  %43 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i32 0, i32 0
  %44 = getelementptr [2 x i8], [2 x i8]* @.str.8.128, i32 0, i32 0
  %45 = call i8* @strcat(i8* %43, i8* %44) #9
  %46 = icmp eq i32 %3, 0
  br i1 %46, label %47, label %61

; <label>:47:                                     ; preds = %._crit_edge
  %48 = icmp eq i8* %0, null
  br i1 %48, label %53, label %49

; <label>:49:                                     ; preds = %47
  %50 = getelementptr [1 x i8], [1 x i8]* @.str.9.129, i32 0, i32 0
  %51 = call i32 @strcmp(i8* %0, i8* %50) #10
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

; <label>:53:                                     ; preds = %49, %47
  %54 = icmp ne i32 %.08.lcssa, 0
  %55 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %57 = select i1 %54, %struct._IO_FILE* %55, %struct._IO_FILE* %56
  br label %64

; <label>:58:                                     ; preds = %49
  %59 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i32 0, i32 0
  %60 = call %struct._IO_FILE* @fopen64(i8* %0, i8* %59), !track !60
  br label %64

; <label>:61:                                     ; preds = %._crit_edge
  %62 = getelementptr inbounds [10 x i8], [10 x i8]* %7, i32 0, i32 0
  %63 = call %struct._IO_FILE* @fdopen(i32 %1, i8* %62) #9, !track !61
  br label %64

; <label>:64:                                     ; preds = %58, %53, %61
  %.15 = phi %struct._IO_FILE* [ %63, %61 ], [ %60, %58 ], [ %57, %53 ]
  %65 = icmp eq %struct._IO_FILE* %.15, null
  br i1 %65, label %84, label %66

; <label>:66:                                     ; preds = %64
  %67 = icmp ne i32 %.08.lcssa, 0
  br i1 %67, label %68, label %72

; <label>:68:                                     ; preds = %66
  %69 = icmp slt i32 %.06.lcssa, 1
  %spec.select = select i1 %69, i32 1, i32 %.06.lcssa
  %70 = icmp sgt i32 %spec.select, 9
  %.4 = select i1 %70, i32 9, i32 %spec.select
  %71 = call i8* @BZ2_bzWriteOpen(i32* %5, %struct._IO_FILE* %.15, i32 %.4, i32 0, i32 30)
  br label %75

; <label>:72:                                     ; preds = %66
  %73 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i32 0, i32 0
  %74 = call i8* @BZ2_bzReadOpen(i32* %5, %struct._IO_FILE* %.15, i32 0, i32 %.01.lcssa, i8* %73, i32 0)
  br label %75

; <label>:75:                                     ; preds = %72, %68
  %.02 = phi i8* [ %71, %68 ], [ %74, %72 ]
  %76 = icmp eq i8* %.02, null
  br i1 %76, label %77, label %84

; <label>:77:                                     ; preds = %75
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %79 = icmp ne %struct._IO_FILE* %.15, %78
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %81 = icmp ne %struct._IO_FILE* %.15, %80
  %or.cond = and i1 %79, %81
  br i1 %or.cond, label %82, label %84

; <label>:82:                                     ; preds = %77
  %83 = call i32 @fclose(%struct._IO_FILE* %.15)
  br label %84

; <label>:84:                                     ; preds = %75, %77, %82, %64, %4
  %.0 = phi i8* [ null, %4 ], [ null, %64 ], [ null, %82 ], [ null, %77 ], [ %.02, %75 ]
  ret i8* %.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #8

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzdopen(i32, i8*) #0 {
  %3 = call i8* @bzopen_or_bzdopen(i8* null, i32 %0, i8* %1, i32 1)
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzread(i8*, i8*, i32) #0 {
  %4 = alloca i32, align 4
  %5 = bitcast i8* %0 to %struct.bzFile*
  %6 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 5
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %UnifiedReturnBlock, label %9

; <label>:9:                                      ; preds = %3
  %10 = call i32 @BZ2_bzRead(i32* %4, i8* %0, i8* %1, i32 %2)
  %11 = load i32, i32* %4, align 4
  %12 = icmp eq i32 %11, 0
  %13 = load i32, i32* %4, align 4
  %14 = icmp eq i32 %13, 4
  %or.cond = or i1 %12, %14
  %spec.select = select i1 %or.cond, i32 %10, i32 -1
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %3, %9
  %UnifiedRetVal = phi i32 [ %spec.select, %9 ], [ 0, %3 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzwrite(i8*, i8*, i32) #0 {
  %4 = alloca i32, align 4
  call void @BZ2_bzWrite(i32* %4, i8* %0, i8* %1, i32 %2)
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %. = select i1 %6, i32 %2, i32 -1
  ret i32 %.
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_bzflush(i8*) #0 {
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bzclose(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = icmp eq i8* %0, null
  br i1 %3, label %24, label %4

; <label>:4:                                      ; preds = %1
  %5 = bitcast i8* %0 to %struct.bzFile*
  %6 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %5, i32 0, i32 0
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %6, align 8
  %8 = bitcast i8* %0 to %struct.bzFile*
  %9 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %8, i32 0, i32 3
  %10 = load i8, i8* %9, align 4
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %16

; <label>:12:                                     ; preds = %4
  call void @BZ2_bzWriteClose(i32* %2, i8* %0, i32 0, i32* null, i32* null)
  %13 = load i32, i32* %2, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %17

; <label>:15:                                     ; preds = %12
  call void @BZ2_bzWriteClose(i32* null, i8* %0, i32 1, i32* null, i32* null)
  br label %17

; <label>:16:                                     ; preds = %4
  call void @BZ2_bzReadClose(i32* %2, i8* %0)
  br label %17

; <label>:17:                                     ; preds = %12, %15, %16
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %19 = icmp ne %struct._IO_FILE* %7, %18
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %21 = icmp ne %struct._IO_FILE* %7, %20
  %or.cond = and i1 %19, %21
  br i1 %or.cond, label %22, label %24

; <label>:22:                                     ; preds = %17
  %23 = call i32 @fclose(%struct._IO_FILE* %7)
  br label %24

; <label>:24:                                     ; preds = %1, %22, %17
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @BZ2_bzerror(i8*, i32*) #0 {
  %3 = bitcast i8* %0 to %struct.bzFile*
  %4 = getelementptr inbounds %struct.bzFile, %struct.bzFile* %3, i32 0, i32 5
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, 0
  %spec.select = select i1 %6, i32 0, i32 %5
  store i32 %spec.select, i32* %1, align 4
  %7 = mul nsw i32 %spec.select, -1
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [16 x i8*], [16 x i8*]* @bzerrorstrings, i64 0, i64 %8
  %10 = load i8*, i8** %9, align 8
  ret i8* %10
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_bsInitWrite(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  store i32 0, i32* %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_compressBlock(%struct.EState*, i8 zeroext) #0 {
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %46

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %8 = load i32, i32* %7, align 8
  %9 = xor i32 %8, -1
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %12 = load i32, i32* %11, align 4
  %13 = shl i32 %12, 1
  %14 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %15 = load i32, i32* %14, align 4
  %16 = lshr i32 %15, 31
  %17 = or i32 %13, %16
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %22 = load i32, i32* %21, align 4
  %23 = xor i32 %22, %20
  store i32 %23, i32* %21, align 4
  %24 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 29
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 1
  br i1 %26, label %27, label %29

; <label>:27:                                     ; preds = %6
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  store i32 0, i32* %28, align 4
  br label %29

; <label>:29:                                     ; preds = %27, %6
  %30 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %31 = load i32, i32* %30, align 8
  %32 = icmp sge i32 %31, 2
  br i1 %32, label %33, label %45

; <label>:33:                                     ; preds = %29
  %34 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %35 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 29
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr [62 x i8], [62 x i8]* @.str.147, i32 0, i32 0
  %44 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %34, i8* %43, i32 %36, i32 %38, i32 %40, i32 %42)
  br label %45

; <label>:45:                                     ; preds = %33, %29
  call void @BZ2_blockSort(%struct.EState* %0)
  br label %46

; <label>:46:                                     ; preds = %45, %2
  %47 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 5
  %48 = load i32*, i32** %47, align 8
  %49 = bitcast i32* %48 to i8*
  %50 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  %54 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 11
  store i8* %53, i8** %54, align 8
  %55 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 29
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %58, label %63

; <label>:58:                                     ; preds = %46
  call void @BZ2_bsInitWrite(%struct.EState* %0)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 66)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 90)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 104)
  %59 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 30
  %60 = load i32, i32* %59, align 8
  %61 = add nsw i32 48, %60
  %62 = trunc i32 %61 to i8
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext %62)
  br label %63

; <label>:63:                                     ; preds = %58, %46
  %64 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %72

; <label>:67:                                     ; preds = %63
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 49)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 65)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 89)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 38)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 83)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 89)
  %68 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 26
  %69 = load i32, i32* %68, align 8
  call void @bsPutUInt32(%struct.EState* %0, i32 %69)
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  %70 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 7
  %71 = load i32, i32* %70, align 8
  call void @bsW(%struct.EState* %0, i32 24, i32 %71)
  call void @generateMTFValues(%struct.EState* %0)
  call void @sendMTFValues(%struct.EState* %0)
  br label %72

; <label>:72:                                     ; preds = %67, %63
  %73 = icmp ne i8 %1, 0
  br i1 %73, label %74, label %87

; <label>:74:                                     ; preds = %72
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 23)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 114)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 69)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 56)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext 80)
  call void @bsPutUChar(%struct.EState* %0, i8 zeroext -112)
  %75 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %76 = load i32, i32* %75, align 4
  call void @bsPutUInt32(%struct.EState* %0, i32 %76)
  %77 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %78 = load i32, i32* %77, align 8
  %79 = icmp sge i32 %78, 2
  br i1 %79, label %80, label %86

; <label>:80:                                     ; preds = %74
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %82 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 27
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr [36 x i8], [36 x i8]* @.str.1.148, i32 0, i32 0
  %85 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* %84, i32 %83)
  br label %86

; <label>:86:                                     ; preds = %80, %74
  call void @bsFinishWrite(%struct.EState* %0)
  br label %87

; <label>:87:                                     ; preds = %86, %72
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsPutUChar(%struct.EState*, i8 zeroext) #0 {
  %3 = zext i8 %1 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsPutUInt32(%struct.EState*, i32) #0 {
  %3 = lshr i32 %1, 24
  %4 = zext i32 %3 to i64
  %5 = and i64 %4, 255
  %6 = trunc i64 %5 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %6)
  %7 = lshr i32 %1, 16
  %8 = zext i32 %7 to i64
  %9 = and i64 %8, 255
  %10 = trunc i64 %9 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %10)
  %11 = lshr i32 %1, 8
  %12 = zext i32 %11 to i64
  %13 = and i64 %12, 255
  %14 = trunc i64 %13 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %14)
  %15 = zext i32 %1 to i64
  %16 = and i64 %15, 255
  %17 = trunc i64 %16 to i32
  call void @bsW(%struct.EState* %0, i32 8, i32 %17)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsW(%struct.EState*, i32, i32) #0 {
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %5 = load i32, i32* %4, align 4
  %6 = icmp sge i32 %5, 8
  br i1 %6, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %3
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %8 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 11
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %12 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  call void @unroll_loop(i32 45)
  %13 = load i32, i32* %7, align 8
  %14 = lshr i32 %13, 24
  %15 = trunc i32 %14 to i8
  %16 = load i8*, i8** %8, align 8
  %17 = load i32, i32* %9, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  store i8 %15, i8* %19, align 1
  %20 = load i32, i32* %10, align 4
  %21 = add nsw i32 %20, 1
  store i32 %21, i32* %10, align 4
  %22 = load i32, i32* %11, align 8
  %23 = shl i32 %22, 8
  store i32 %23, i32* %11, align 8
  %24 = load i32, i32* %12, align 4
  %25 = sub nsw i32 %24, 8
  store i32 %25, i32* %12, align 4
  %26 = load i32, i32* %4, align 4
  %27 = icmp sge i32 %26, 8
  br i1 %27, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %29 = load i32, i32* %28, align 4
  %30 = sub nsw i32 32, %29
  %31 = sub nsw i32 %30, %1
  %32 = shl i32 %2, %31
  %33 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %34 = load i32, i32* %33, align 8
  %35 = or i32 %34, %32
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, %1
  store i32 %38, i32* %36, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @generateMTFValues(%struct.EState*) #0 {
  %2 = alloca [256 x i8], align 16
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 8
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 10
  %8 = load i16*, i16** %7, align 8
  call void @makeMaps_e(%struct.EState* %0)
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  %12 = icmp sle i32 0, %11
  br i1 %12, label %.lr.ph31, label %._crit_edge32

.lr.ph31:                                         ; preds = %1
  %13 = add i32 %10, 2
  %14 = zext i32 %13 to i64
  %scevgep2 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 32, i64 0
  br label %15

; <label>:15:                                     ; preds = %.lr.ph31, %15
  %indvars.iv33 = phi i64 [ 0, %.lr.ph31 ], [ %indvars.iv.next34, %15 ]
  call void @unroll_loop(i32 46)
  %scevgep3 = getelementptr i32, i32* %scevgep2, i64 %indvars.iv33
  store i32 0, i32* %scevgep3, align 4
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1
  %exitcond2 = icmp ne i64 %14, %indvars.iv.next34
  br i1 %exitcond2, label %15, label %._crit_edge32.loopexit

._crit_edge32.loopexit:                           ; preds = %15
  br label %._crit_edge32

._crit_edge32:                                    ; preds = %._crit_edge32.loopexit, %1
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 0, %17
  br i1 %18, label %.lr.ph25.preheader, label %._crit_edge26

.lr.ph25.preheader:                               ; preds = %._crit_edge32
  br label %.lr.ph25

.lr.ph25:                                         ; preds = %.lr.ph25.preheader, %.lr.ph25
  %indvars.iv27 = phi i64 [ %indvars.iv.next28, %.lr.ph25 ], [ 0, %.lr.ph25.preheader ]
  call void @unroll_loop(i32 47)
  %scevgep1 = getelementptr [256 x i8], [256 x i8]* %2, i64 0, i64 %indvars.iv27
  %tmp = trunc i64 %indvars.iv27 to i8
  store i8 %tmp, i8* %scevgep1, align 1
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  %19 = load i32, i32* %16, align 4
  %20 = sext i32 %19 to i64
  %21 = icmp slt i64 %indvars.iv.next28, %20
  br i1 %21, label %.lr.ph25, label %._crit_edge26.loopexit

._crit_edge26.loopexit:                           ; preds = %.lr.ph25
  br label %._crit_edge26

._crit_edge26:                                    ; preds = %._crit_edge26.loopexit, %._crit_edge32
  %22 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 0, %23
  br i1 %24, label %.lr.ph19.preheader, label %._crit_edge20

.lr.ph19.preheader:                               ; preds = %._crit_edge26
  %25 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %26 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 23
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %28 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %29 = getelementptr inbounds [258 x i32], [258 x i32]* %28, i64 0, i64 1
  %30 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %31 = getelementptr inbounds [258 x i32], [258 x i32]* %30, i64 0, i64 0
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 1
  %33 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 1
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 1
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %2, i64 0, i64 0
  %38 = ptrtoint i8* %37 to i64
  %39 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  br label %.lr.ph19

.lr.ph19:                                         ; preds = %.lr.ph19.preheader, %104
  %indvars.iv = phi i64 [ %indvars.iv.next, %104 ], [ 0, %.lr.ph19.preheader ]
  %.0316 = phi i32 [ %.3, %104 ], [ 0, %.lr.ph19.preheader ]
  %.0615 = phi i32 [ %.410, %104 ], [ 0, %.lr.ph19.preheader ]
  call void @unroll_loop(i32 48)
  %40 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 %41, 1
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %47

; <label>:44:                                     ; preds = %.lr.ph19
  %45 = load i32, i32* %25, align 4
  %46 = add nsw i32 %42, %45
  br label %47

; <label>:47:                                     ; preds = %44, %.lr.ph19
  %.02 = phi i32 [ %46, %44 ], [ %42, %.lr.ph19 ]
  %48 = sext i32 %.02 to i64
  %49 = getelementptr inbounds i8, i8* %6, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i64
  %52 = getelementptr inbounds [256 x i8], [256 x i8]* %26, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = load i8, i8* %27, align 16
  %55 = zext i8 %54 to i32
  %56 = zext i8 %53 to i32
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %60

; <label>:58:                                     ; preds = %47
  %59 = add nsw i32 %.0316, 1
  br label %104

; <label>:60:                                     ; preds = %47
  %61 = icmp sgt i32 %.0316, 0
  br i1 %61, label %62, label %.loopexit1

; <label>:62:                                     ; preds = %60
  %63 = add nsw i32 %.0316, -1
  br label %64

; <label>:64:                                     ; preds = %62, %79
  %.17 = phi i32 [ %.0615, %62 ], [ %.28, %79 ]
  %.14 = phi i32 [ %63, %62 ], [ %81, %79 ]
  call void @unroll_loop(i32 49)
  %65 = and i32 %.14, 1
  %66 = icmp ne i32 %65, 0
  %67 = sext i32 %.17 to i64
  %68 = getelementptr inbounds i16, i16* %8, i64 %67
  br i1 %66, label %69, label %73

; <label>:69:                                     ; preds = %64
  store i16 1, i16* %68, align 2
  %70 = add nsw i32 %.17, 1
  %71 = load i32, i32* %29, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %29, align 4
  br label %77

; <label>:73:                                     ; preds = %64
  store i16 0, i16* %68, align 2
  %74 = add nsw i32 %.17, 1
  %75 = load i32, i32* %31, align 8
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %31, align 8
  br label %77

; <label>:77:                                     ; preds = %73, %69
  %.28 = phi i32 [ %70, %69 ], [ %74, %73 ]
  %78 = icmp slt i32 %.14, 2
  br i1 %78, label %.loopexit1.loopexit, label %79

; <label>:79:                                     ; preds = %77
  %80 = sub nsw i32 %.14, 2
  %81 = sdiv i32 %80, 2
  br label %64

.loopexit1.loopexit:                              ; preds = %77
  %.39.ph = phi i32 [ %.28, %77 ]
  br label %.loopexit1

.loopexit1:                                       ; preds = %.loopexit1.loopexit, %60
  %.39 = phi i32 [ %.0615, %60 ], [ %.39.ph, %.loopexit1.loopexit ]
  %.25 = phi i32 [ %.0316, %60 ], [ 0, %.loopexit1.loopexit ]
  %82 = load i8, i8* %32, align 1
  %83 = load i8, i8* %33, align 16
  store i8 %83, i8* %34, align 1
  %84 = zext i8 %53 to i32
  %85 = zext i8 %82 to i32
  %86 = icmp ne i32 %84, %85
  br i1 %86, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.loopexit1
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  %.013 = phi i8* [ %87, %.lr.ph ], [ %35, %.lr.ph.preheader ]
  %.01112 = phi i8 [ %88, %.lr.ph ], [ %82, %.lr.ph.preheader ]
  call void @unroll_loop(i32 50)
  %87 = getelementptr inbounds i8, i8* %.013, i32 1
  %scevgep = getelementptr i8, i8* %.013, i64 1
  %88 = load i8, i8* %scevgep, align 1
  store i8 %.01112, i8* %scevgep, align 1
  %89 = zext i8 %88 to i32
  %90 = icmp ne i32 %84, %89
  br i1 %90, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.011.lcssa.ph = phi i8 [ %88, %.lr.ph ]
  %.0.lcssa.ph = phi i8* [ %87, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.loopexit1
  %.011.lcssa = phi i8 [ %82, %.loopexit1 ], [ %.011.lcssa.ph, %._crit_edge.loopexit ]
  %.0.lcssa = phi i8* [ %35, %.loopexit1 ], [ %.0.lcssa.ph, %._crit_edge.loopexit ]
  store i8 %.011.lcssa, i8* %36, align 16
  %91 = ptrtoint i8* %.0.lcssa to i64
  %92 = sub i64 %91, %38
  %93 = trunc i64 %92 to i32
  %94 = add nsw i32 %93, 1
  %95 = trunc i32 %94 to i16
  %96 = sext i32 %.39 to i64
  %97 = getelementptr inbounds i16, i16* %8, i64 %96
  store i16 %95, i16* %97, align 2
  %98 = add nsw i32 %.39, 1
  %99 = add nsw i32 %93, 1
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [258 x i32], [258 x i32]* %39, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %101, align 4
  br label %104

; <label>:104:                                    ; preds = %58, %._crit_edge
  %.410 = phi i32 [ %.0615, %58 ], [ %98, %._crit_edge ]
  %.3 = phi i32 [ %59, %58 ], [ %.25, %._crit_edge ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %105 = load i32, i32* %22, align 4
  %106 = sext i32 %105 to i64
  %107 = icmp slt i64 %indvars.iv.next, %106
  br i1 %107, label %.lr.ph19, label %._crit_edge20.loopexit

._crit_edge20.loopexit:                           ; preds = %104
  %.06.lcssa.ph = phi i32 [ %.410, %104 ]
  %.03.lcssa.ph = phi i32 [ %.3, %104 ]
  br label %._crit_edge20

._crit_edge20:                                    ; preds = %._crit_edge20.loopexit, %._crit_edge26
  %.06.lcssa = phi i32 [ 0, %._crit_edge26 ], [ %.06.lcssa.ph, %._crit_edge20.loopexit ]
  %.03.lcssa = phi i32 [ 0, %._crit_edge26 ], [ %.03.lcssa.ph, %._crit_edge20.loopexit ]
  %108 = icmp sgt i32 %.03.lcssa, 0
  br i1 %108, label %109, label %.loopexit

; <label>:109:                                    ; preds = %._crit_edge20
  %110 = add nsw i32 %.03.lcssa, -1
  %111 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %112 = getelementptr inbounds [258 x i32], [258 x i32]* %111, i64 0, i64 1
  %113 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %114 = getelementptr inbounds [258 x i32], [258 x i32]* %113, i64 0, i64 0
  br label %115

; <label>:115:                                    ; preds = %109, %130
  %.5 = phi i32 [ %.06.lcssa, %109 ], [ %.6, %130 ]
  %.4 = phi i32 [ %110, %109 ], [ %132, %130 ]
  call void @unroll_loop(i32 51)
  %116 = and i32 %.4, 1
  %117 = icmp ne i32 %116, 0
  %118 = sext i32 %.5 to i64
  %119 = getelementptr inbounds i16, i16* %8, i64 %118
  br i1 %117, label %120, label %124

; <label>:120:                                    ; preds = %115
  store i16 1, i16* %119, align 2
  %121 = add nsw i32 %.5, 1
  %122 = load i32, i32* %112, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %112, align 4
  br label %128

; <label>:124:                                    ; preds = %115
  store i16 0, i16* %119, align 2
  %125 = add nsw i32 %.5, 1
  %126 = load i32, i32* %114, align 8
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %114, align 8
  br label %128

; <label>:128:                                    ; preds = %124, %120
  %.6 = phi i32 [ %121, %120 ], [ %125, %124 ]
  %129 = icmp slt i32 %.4, 2
  br i1 %129, label %.loopexit.loopexit, label %130

; <label>:130:                                    ; preds = %128
  %131 = sub nsw i32 %.4, 2
  %132 = sdiv i32 %131, 2
  br label %115

.loopexit.loopexit:                               ; preds = %128
  %.7.ph = phi i32 [ %.6, %128 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge20
  %.7 = phi i32 [ %.06.lcssa, %._crit_edge20 ], [ %.7.ph, %.loopexit.loopexit ]
  %133 = trunc i32 %11 to i16
  %134 = sext i32 %.7 to i64
  %135 = getelementptr inbounds i16, i16* %8, i64 %134
  store i16 %133, i16* %135, align 2
  %136 = add nsw i32 %.7, 1
  %137 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %138 = sext i32 %11 to i64
  %139 = getelementptr inbounds [258 x i32], [258 x i32]* %137, i64 0, i64 %138
  %140 = load i32, i32* %139, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %139, align 4
  %142 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  store i32 %136, i32* %142, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @sendMTFValues(%struct.EState*) #0 {
  %2 = bitcast %struct.EState* %0 to i8*
  %3 = alloca [6 x i16], align 2, !track !62
  %4 = bitcast [6 x i16]* %3 to i8*
  %5 = alloca [6 x i32], align 16
  %6 = bitcast [6 x i32]* %5 to i8*
  %7 = alloca [6 x i8], align 1
  %8 = alloca [16 x i8], align 16
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 10
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %12 = load i32, i32* %11, align 8
  %13 = icmp sge i32 %12, 3
  br i1 %13, label %14, label %24

; <label>:14:                                     ; preds = %1
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr [64 x i8], [64 x i8]* @.str.2.149, i32 0, i32 0
  %23 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* %22, i32 %17, i32 %19, i32 %21)
  br label %24

; <label>:24:                                     ; preds = %14, %1
  %25 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, 2
  %28 = add i32 %26, 2
  %29 = zext i32 %28 to i64
  %30 = icmp slt i32 0, %27
  %scevgep102 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 35, i64 0, i64 0
  %scevgep102103 = bitcast i8* %scevgep102 to %struct.EState*
  br label %31

; <label>:31:                                     ; preds = %24, %._crit_edge248
  %lsr.iv104 = phi %struct.EState* [ %scevgep102103, %24 ], [ %32, %._crit_edge248 ]
  %indvars.iv256 = phi i64 [ 0, %24 ], [ %indvars.iv.next257, %._crit_edge248 ]
  %lsr.iv104106 = bitcast %struct.EState* %lsr.iv104 to i8*
  call void @unroll_loop(i32 53)
  br i1 %30, label %.lr.ph247.preheader, label %._crit_edge248

.lr.ph247.preheader:                              ; preds = %31
  br label %.lr.ph247

.lr.ph247:                                        ; preds = %.lr.ph247.preheader, %.lr.ph247
  %indvars.iv249 = phi i64 [ %indvars.iv.next250, %.lr.ph247 ], [ 0, %.lr.ph247.preheader ]
  call void @unroll_loop(i32 54)
  %uglygep107 = getelementptr i8, i8* %lsr.iv104106, i64 %indvars.iv249
  store i8 15, i8* %uglygep107, align 1
  %indvars.iv.next250 = add nuw nsw i64 %indvars.iv249, 1
  %exitcond34 = icmp ne i64 %29, %indvars.iv.next250
  br i1 %exitcond34, label %.lr.ph247, label %._crit_edge248.loopexit

._crit_edge248.loopexit:                          ; preds = %.lr.ph247
  br label %._crit_edge248

._crit_edge248:                                   ; preds = %._crit_edge248.loopexit, %31
  %indvars.iv.next257 = add nuw nsw i64 %indvars.iv256, 1
  %scevgep105 = getelementptr %struct.EState, %struct.EState* %lsr.iv104, i64 0, i32 22, i64 130
  %32 = bitcast i8* %scevgep105 to %struct.EState*
  %exitcond258 = icmp ne i64 %indvars.iv.next257, 6
  br i1 %exitcond258, label %31, label %33

; <label>:33:                                     ; preds = %._crit_edge248
  %34 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %38, label %37

; <label>:37:                                     ; preds = %33
  call void @BZ2_bz__AssertH__fail(i32 3001)
  br label %38

; <label>:38:                                     ; preds = %37, %33
  %39 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, 200
  br i1 %41, label %54, label %42

; <label>:42:                                     ; preds = %38
  %43 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 600
  br i1 %45, label %54, label %46

; <label>:46:                                     ; preds = %42
  %47 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 1200
  br i1 %49, label %54, label %50

; <label>:50:                                     ; preds = %46
  %51 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 2400
  %. = select i1 %53, i32 5, i32 6
  br label %54

; <label>:54:                                     ; preds = %42, %46, %50, %38
  %.346 = phi i32 [ 2, %38 ], [ 3, %42 ], [ %., %50 ], [ 4, %46 ]
  %55 = zext i32 %.346 to i64
  %56 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %57 = load i32, i32* %56, align 4
  %58 = add i32 %26, 2
  %59 = zext i32 %.346 to i64
  %60 = sext i32 %.346 to i64
  %61 = zext i32 %.346 to i64
  %62 = zext i32 %58 to i64
  %63 = sub nsw i32 %27, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %66 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 32
  %67 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %68 = icmp slt i32 0, %27
  %scevgep94 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 32, i64 1
  %69 = mul i64 %59, 258
  %70 = add i64 %69, 37450
  %uglygep96 = getelementptr i8, i8* %2, i64 %70
  %uglygep9697 = bitcast i8* %uglygep96 to %struct.EState*
  br label %71

; <label>:71:                                     ; preds = %54, %._crit_edge235
  %lsr.iv98 = phi %struct.EState* [ %uglygep9697, %54 ], [ %122, %._crit_edge235 ]
  %indvars.iv243 = phi i64 [ %59, %54 ], [ %indvars.iv.next244, %._crit_edge235 ]
  %.022242 = phi i32 [ 0, %54 ], [ %120, %._crit_edge235 ]
  %.050240 = phi i32 [ %57, %54 ], [ %121, %._crit_edge235 ]
  %lsr.iv9899 = bitcast %struct.EState* %lsr.iv98 to i8*
  call void @unroll_loop(i32 55)
  %72 = trunc i64 %indvars.iv243 to i32
  %73 = sdiv i32 %.050240, %72
  %74 = add i32 %.022242, -1
  %75 = sext i32 %74 to i64
  call void @unroll_loop(i32 56)
  %76 = icmp slt i32 0, %73
  %77 = icmp slt i64 %75, %64
  %or.cond827 = and i1 %76, %77
  br i1 %or.cond827, label %.lr.ph31.preheader, label %.critedge

.lr.ph31.preheader:                               ; preds = %71
  br label %.lr.ph31

.lr.ph31:                                         ; preds = %.lr.ph31.preheader, %.lr.ph31
  %.04729 = phi i32 [ %80, %.lr.ph31 ], [ 0, %.lr.ph31.preheader ]
  %indvars.iv22928 = phi i64 [ %indvars.iv.next230, %.lr.ph31 ], [ %75, %.lr.ph31.preheader ]
  %indvars.iv.next230 = add nsw i64 %indvars.iv22928, 1
  %78 = add i64 %indvars.iv22928, 1
  %scevgep95 = getelementptr i32, i32* %scevgep94, i64 %indvars.iv22928
  %79 = load i32, i32* %scevgep95, align 4
  %80 = add nsw i32 %.04729, %79
  call void @unroll_loop(i32 56)
  %81 = icmp slt i32 %80, %73
  %82 = icmp slt i64 %78, %64
  %or.cond8 = and i1 %81, %82
  br i1 %or.cond8, label %.lr.ph31, label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %.lr.ph31
  %.047.lcssa.ph = phi i32 [ %80, %.lr.ph31 ]
  %.025.lcssa.wide.ph = phi i64 [ %indvars.iv.next230, %.lr.ph31 ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %71
  %.047.lcssa = phi i32 [ 0, %71 ], [ %.047.lcssa.ph, %.critedge.loopexit ]
  %.025.lcssa.wide = phi i64 [ %75, %71 ], [ %.025.lcssa.wide.ph, %.critedge.loopexit ]
  %83 = trunc i64 %.025.lcssa.wide to i32
  %84 = icmp sgt i32 %83, %.022242
  %85 = icmp ne i64 %indvars.iv243, %61
  %or.cond = and i1 %84, %85
  %86 = icmp ne i64 %indvars.iv243, 1
  %or.cond1 = and i1 %or.cond, %86
  br i1 %or.cond1, label %87, label %97

; <label>:87:                                     ; preds = %.critedge
  %88 = sub nuw nsw i64 %60, %indvars.iv243
  %89 = trunc i64 %88 to i32
  %.urem = urem i32 %89, 2
  %90 = icmp eq i32 %.urem, 1
  br i1 %90, label %91, label %97

; <label>:91:                                     ; preds = %87
  %92 = sext i32 %83 to i64
  %93 = getelementptr inbounds [258 x i32], [258 x i32]* %66, i64 0, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = sub nsw i32 %.047.lcssa, %94
  %96 = add nsw i32 %83, -1
  br label %97

; <label>:97:                                     ; preds = %91, %87, %.critedge
  %.148 = phi i32 [ %95, %91 ], [ %.047.lcssa, %87 ], [ %.047.lcssa, %.critedge ]
  %.126 = phi i32 [ %96, %91 ], [ %83, %87 ], [ %83, %.critedge ]
  %98 = load i32, i32* %65, align 8
  %99 = icmp sge i32 %98, 3
  br i1 %99, label %100, label %111

; <label>:100:                                    ; preds = %97
  %101 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %102 = sitofp i32 %.148 to float
  %103 = fpext float %102 to double
  %104 = fmul double 1.000000e+02, %103
  %105 = load i32, i32* %67, align 4
  %106 = sitofp i32 %105 to float
  %107 = fpext float %106 to double
  %108 = fdiv double %104, %107
  %109 = trunc i64 %indvars.iv243 to i32
  %110 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %101, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3.150, i64 0, i64 0), i32 %109, i32 %.022242, i32 %.126, i32 %.148, double %108)
  br label %111

; <label>:111:                                    ; preds = %100, %97
  br i1 %68, label %.lr.ph234, label %._crit_edge235

.lr.ph234:                                        ; preds = %111
  %112 = sext i32 %.126 to i64
  %113 = sext i32 %.022242 to i64
  br label %114

; <label>:114:                                    ; preds = %.lr.ph234, %119
  %indvars.iv236 = phi i64 [ 0, %.lr.ph234 ], [ %indvars.iv.next237, %119 ]
  call void @unroll_loop(i32 57)
  %115 = icmp sge i64 %indvars.iv236, %113
  %116 = icmp sle i64 %indvars.iv236, %112
  %or.cond2 = and i1 %115, %116
  %uglygep101 = getelementptr i8, i8* %lsr.iv9899, i64 %indvars.iv236
  br i1 %or.cond2, label %117, label %118

; <label>:117:                                    ; preds = %114
  store i8 0, i8* %uglygep101, align 1
  br label %119

; <label>:118:                                    ; preds = %114
  store i8 15, i8* %uglygep101, align 1
  br label %119

; <label>:119:                                    ; preds = %117, %118
  %indvars.iv.next237 = add nuw nsw i64 %indvars.iv236, 1
  %exitcond33 = icmp ne i64 %62, %indvars.iv.next237
  br i1 %exitcond33, label %114, label %._crit_edge235.loopexit

._crit_edge235.loopexit:                          ; preds = %119
  br label %._crit_edge235

._crit_edge235:                                   ; preds = %._crit_edge235.loopexit, %111
  %indvars.iv.next244 = add nsw i64 %indvars.iv243, -1
  %120 = add nsw i32 %.126, 1
  %121 = sub nsw i32 %.050240, %.148
  %uglygep100 = getelementptr i8, i8* %lsr.iv9899, i64 -258
  %122 = bitcast i8* %uglygep100 to %struct.EState*
  %123 = icmp sgt i64 %indvars.iv.next244, 0
  br i1 %123, label %71, label %124

; <label>:124:                                    ; preds = %._crit_edge235
  %125 = add i32 %26, 2
  %126 = zext i32 %125 to i64
  %127 = icmp slt i32 0, %27
  %128 = icmp eq i32 %.346, 6
  %129 = icmp slt i32 0, %27
  %or.cond4 = and i1 %128, %129
  %130 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %131 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %132 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %133 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %134 = icmp eq i32 %.346, 6
  %135 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %136 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %137 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %138 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %139 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %140 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %141 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %142 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %143 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %144 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %145 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %146 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %147 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %148 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %149 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %150 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %151 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %152 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %153 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %154 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %155 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %156 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %157 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %158 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %159 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %160 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %161 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %162 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %163 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %164 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %165 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %166 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %167 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %168 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %169 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %170 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %171 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %172 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %173 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %174 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %175 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %176 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %177 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %178 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %179 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %180 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %181 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %182 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %183 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %184 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %185 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %186 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %187 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %188 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %189 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %190 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %191 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %192 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %193 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %194 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %195 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %196 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %197 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %198 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %199 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %200 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %201 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %202 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %203 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %204 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %205 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %206 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %207 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %208 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %209 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %210 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %211 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %212 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %213 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %214 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %215 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %216 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %217 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %218 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %219 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %220 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %221 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %222 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %223 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %224 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %225 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %226 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %227 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %228 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %229 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %230 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %231 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %232 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %233 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %234 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %235 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %236 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %237 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %238 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %239 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %240 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %241 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %242 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %243 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %244 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %245 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %246 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %247 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %248 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %249 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %250 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %251 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %252 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %253 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %254 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %255 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %256 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %257 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %258 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %259 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %260 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %261 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %262 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %263 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %264 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %265 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %266 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %267 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %268 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %269 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %270 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %271 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %272 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %273 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %274 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %275 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %276 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %277 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %278 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %279 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %280 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %281 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %282 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %283 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %284 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 38
  %285 = getelementptr inbounds [6 x i16], [6 x i16]* %3, i64 0, i64 0
  %286 = getelementptr inbounds [6 x i16], [6 x i16]* %3, i64 0, i64 1
  %287 = getelementptr inbounds [6 x i16], [6 x i16]* %3, i64 0, i64 2
  %288 = getelementptr inbounds [6 x i16], [6 x i16]* %3, i64 0, i64 3
  %289 = getelementptr inbounds [6 x i16], [6 x i16]* %3, i64 0, i64 4
  %290 = getelementptr inbounds [6 x i16], [6 x i16]* %3, i64 0, i64 5
  %291 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %292 = icmp eq i32 %.346, 6
  %293 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %294 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %295 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %296 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %297 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %298 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %299 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %300 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %301 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %302 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %303 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %304 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %305 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %306 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %307 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %308 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %309 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %310 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %311 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %312 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %313 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %314 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %315 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %316 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %317 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %318 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %319 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %320 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %321 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %322 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %323 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %324 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %325 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %326 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %327 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %328 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %329 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %330 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %331 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %332 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %333 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %334 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %335 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %336 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %337 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %338 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %339 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %340 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %341 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %342 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %343 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 37
  %344 = shl i64 %59, 2
  %scevgep33 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 37, i64 0, i64 0
  %scevgep3334 = bitcast i32* %scevgep33 to %struct.EState*
  %scevgep40 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 35, i64 5, i64 0
  %scevgep52 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 38, i64 0, i64 2
  %scevgep5253 = bitcast i32* %scevgep52 to %struct.EState*
  %345 = shl i64 %59, 1
  %scevgep63 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 35, i64 0, i64 0
  %346 = shl i64 %59, 2
  %scevgep84 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 35, i64 0, i64 0
  %scevgep8485 = bitcast i8* %scevgep84 to %struct.EState*
  br label %347

; <label>:347:                                    ; preds = %124, %1924
  %.034227 = phi i32 [ 0, %124 ], [ %1925, %1924 ]
  call void @unroll_loop(i32 58)
  br label %348

; <label>:348:                                    ; preds = %347, %348
  %lsr.iv29 = phi i64 [ 0, %347 ], [ %lsr.iv.next30, %348 ]
  %uglygep31 = getelementptr i8, i8* %6, i64 %lsr.iv29
  %uglygep3132 = bitcast i8* %uglygep31 to i32*
  store i32 0, i32* %uglygep3132, align 4
  %lsr.iv.next30 = add nuw nsw i64 %lsr.iv29, 4
  %exitcond16 = icmp ne i64 %344, %lsr.iv.next30
  br i1 %exitcond16, label %348, label %.preheader7.preheader

.preheader7.preheader:                            ; preds = %348
  br label %.preheader7

.preheader7:                                      ; preds = %.preheader7.preheader, %._crit_edge160
  %lsr.iv35 = phi %struct.EState* [ %scevgep3334, %.preheader7.preheader ], [ %350, %._crit_edge160 ]
  %indvars.iv166 = phi i64 [ %indvars.iv.next167, %._crit_edge160 ], [ 0, %.preheader7.preheader ]
  %lsr.iv3537 = bitcast %struct.EState* %lsr.iv35 to i8*
  call void @unroll_loop(i32 59)
  br i1 %127, label %.lr.ph159.preheader, label %._crit_edge160

.lr.ph159.preheader:                              ; preds = %.preheader7
  br label %.lr.ph159

.lr.ph159:                                        ; preds = %.lr.ph159.preheader, %.lr.ph159
  %indvars.iv161 = phi i64 [ %indvars.iv.next162, %.lr.ph159 ], [ 0, %.lr.ph159.preheader ]
  call void @unroll_loop(i32 60)
  %349 = shl i64 %indvars.iv161, 2
  %uglygep38 = getelementptr i8, i8* %lsr.iv3537, i64 %349
  %uglygep3839 = bitcast i8* %uglygep38 to i32*
  store i32 0, i32* %uglygep3839, align 4
  %indvars.iv.next162 = add nuw nsw i64 %indvars.iv161, 1
  %exitcond17 = icmp ne i64 %126, %indvars.iv.next162
  br i1 %exitcond17, label %.lr.ph159, label %._crit_edge160.loopexit

._crit_edge160.loopexit:                          ; preds = %.lr.ph159
  br label %._crit_edge160

._crit_edge160:                                   ; preds = %._crit_edge160.loopexit, %.preheader7
  %indvars.iv.next167 = add nuw nsw i64 %indvars.iv166, 1
  %scevgep36 = getelementptr %struct.EState, %struct.EState* %lsr.iv35, i64 0, i32 32, i64 90
  %350 = bitcast i32* %scevgep36 to %struct.EState*
  %exitcond18 = icmp ne i64 %indvars.iv.next167, %59
  br i1 %exitcond18, label %.preheader7, label %351

; <label>:351:                                    ; preds = %._crit_edge160
  br i1 %or.cond4, label %.lr.ph172.preheader, label %._crit_edge173

.lr.ph172.preheader:                              ; preds = %351
  br label %.lr.ph172

.lr.ph172:                                        ; preds = %.lr.ph172.preheader, %.lr.ph172
  %lsr.iv54 = phi %struct.EState* [ %scevgep5253, %.lr.ph172.preheader ], [ %370, %.lr.ph172 ]
  %indvars.iv174 = phi i64 [ %indvars.iv.next175, %.lr.ph172 ], [ 0, %.lr.ph172.preheader ]
  %lsr.iv5456 = bitcast %struct.EState* %lsr.iv54 to i32*
  call void @unroll_loop(i32 61)
  %scevgep41 = getelementptr i8, i8* %scevgep40, i64 %indvars.iv174
  %scevgep42 = getelementptr i8, i8* %scevgep41, i64 -1032
  %352 = load i8, i8* %scevgep42, align 1
  %353 = zext i8 %352 to i32
  %354 = shl i32 %353, 16
  %scevgep43 = getelementptr i8, i8* %scevgep40, i64 %indvars.iv174
  %scevgep44 = getelementptr i8, i8* %scevgep43, i64 -1290
  %355 = load i8, i8* %scevgep44, align 1
  %356 = zext i8 %355 to i32
  %357 = or i32 %354, %356
  %scevgep57 = getelementptr i32, i32* %lsr.iv5456, i64 -2
  store i32 %357, i32* %scevgep57, align 8
  %scevgep45 = getelementptr i8, i8* %scevgep40, i64 %indvars.iv174
  %scevgep46 = getelementptr i8, i8* %scevgep45, i64 -516
  %358 = load i8, i8* %scevgep46, align 1
  %359 = zext i8 %358 to i32
  %360 = shl i32 %359, 16
  %scevgep47 = getelementptr i8, i8* %scevgep40, i64 %indvars.iv174
  %scevgep48 = getelementptr i8, i8* %scevgep47, i64 -774
  %361 = load i8, i8* %scevgep48, align 1
  %362 = zext i8 %361 to i32
  %363 = or i32 %360, %362
  %scevgep58 = getelementptr i32, i32* %lsr.iv5456, i64 -1
  store i32 %363, i32* %scevgep58, align 4
  %scevgep49 = getelementptr i8, i8* %scevgep40, i64 %indvars.iv174
  %364 = load i8, i8* %scevgep49, align 1
  %365 = zext i8 %364 to i32
  %366 = shl i32 %365, 16
  %scevgep50 = getelementptr i8, i8* %scevgep40, i64 %indvars.iv174
  %scevgep51 = getelementptr i8, i8* %scevgep50, i64 -258
  %367 = load i8, i8* %scevgep51, align 1
  %368 = zext i8 %367 to i32
  %369 = or i32 %366, %368
  store i32 %369, i32* %lsr.iv5456, align 8
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %scevgep55 = getelementptr %struct.EState, %struct.EState* %lsr.iv54, i64 0, i32 3
  %370 = bitcast i32* %scevgep55 to %struct.EState*
  %exitcond19 = icmp ne i64 %126, %indvars.iv.next175
  br i1 %exitcond19, label %.lr.ph172, label %._crit_edge173.loopexit

._crit_edge173.loopexit:                          ; preds = %.lr.ph172
  br label %._crit_edge173

._crit_edge173:                                   ; preds = %._crit_edge173.loopexit, %351
  %371 = load i32, i32* %130, align 4
  %372 = icmp sge i32 0, %371
  br i1 %372, label %1905, label %.lr.ph211.preheader

.lr.ph211.preheader:                              ; preds = %._crit_edge173
  br label %.lr.ph211

._crit_edge212:                                   ; preds = %._crit_edge204
  %split213.wide = phi i64 [ %indvars.iv.next216, %._crit_edge204 ]
  %split214 = phi i32 [ %1377, %._crit_edge204 ]
  %373 = trunc i64 %split213.wide to i32
  br label %1905

.lr.ph211:                                        ; preds = %.lr.ph211.preheader, %._crit_edge204
  %indvars.iv215 = phi i64 [ %indvars.iv.next216, %._crit_edge204 ], [ 0, %.lr.ph211.preheader ]
  %.123209 = phi i32 [ %1902, %._crit_edge204 ], [ 0, %.lr.ph211.preheader ]
  %.029208 = phi i32 [ %1377, %._crit_edge204 ], [ 0, %.lr.ph211.preheader ]
  call void @unroll_loop(i32 62)
  %374 = add nsw i32 %.123209, 50
  %375 = sub nsw i32 %374, 1
  %376 = load i32, i32* %132, align 4
  %377 = icmp sge i32 %375, %376
  br i1 %377, label %378, label %381

; <label>:378:                                    ; preds = %.lr.ph211
  %379 = load i32, i32* %133, align 4
  %380 = sub nsw i32 %379, 1
  br label %381

; <label>:381:                                    ; preds = %378, %.lr.ph211
  %.227 = phi i32 [ %380, %378 ], [ %375, %.lr.ph211 ]
  br label %382

; <label>:382:                                    ; preds = %381, %382
  %lsr.iv59 = phi i64 [ 0, %381 ], [ %lsr.iv.next60, %382 ]
  call void @unroll_loop(i32 63)
  %uglygep61 = getelementptr i8, i8* %4, i64 %lsr.iv59
  %uglygep6162 = bitcast i8* %uglygep61 to i16*
  store i16 0, i16* %uglygep6162, align 2
  %lsr.iv.next60 = add nuw nsw i64 %lsr.iv59, 2
  %exitcond20 = icmp ne i64 %345, %lsr.iv.next60
  br i1 %exitcond20, label %382, label %383

; <label>:383:                                    ; preds = %382
  br i1 %134, label %384, label %1350

; <label>:384:                                    ; preds = %383
  %385 = sub nsw i32 %.227, %.123209
  %386 = add nsw i32 %385, 1
  %387 = icmp eq i32 50, %386
  br i1 %387, label %388, label %1350

; <label>:388:                                    ; preds = %384
  %389 = sext i32 %.123209 to i64
  %390 = getelementptr inbounds i16, i16* %10, i64 %389
  %391 = load i16, i16* %390, align 2
  %392 = zext i16 %391 to i64
  %393 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %135, i64 0, i64 %392
  %394 = getelementptr inbounds [4 x i32], [4 x i32]* %393, i64 0, i64 0
  %395 = load i32, i32* %394, align 8
  %396 = add i32 0, %395
  %397 = zext i16 %391 to i64
  %398 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %136, i64 0, i64 %397
  %399 = getelementptr inbounds [4 x i32], [4 x i32]* %398, i64 0, i64 1
  %400 = load i32, i32* %399, align 4
  %401 = add i32 0, %400
  %402 = zext i16 %391 to i64
  %403 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %137, i64 0, i64 %402
  %404 = getelementptr inbounds [4 x i32], [4 x i32]* %403, i64 0, i64 2
  %405 = load i32, i32* %404, align 8
  %406 = add i32 0, %405
  %407 = add nsw i32 %.123209, 1
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds i16, i16* %10, i64 %408
  %410 = load i16, i16* %409, align 2
  %411 = zext i16 %410 to i64
  %412 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %138, i64 0, i64 %411
  %413 = getelementptr inbounds [4 x i32], [4 x i32]* %412, i64 0, i64 0
  %414 = load i32, i32* %413, align 8
  %415 = add i32 %396, %414
  %416 = zext i16 %410 to i64
  %417 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %139, i64 0, i64 %416
  %418 = getelementptr inbounds [4 x i32], [4 x i32]* %417, i64 0, i64 1
  %419 = load i32, i32* %418, align 4
  %420 = add i32 %401, %419
  %421 = zext i16 %410 to i64
  %422 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %140, i64 0, i64 %421
  %423 = getelementptr inbounds [4 x i32], [4 x i32]* %422, i64 0, i64 2
  %424 = load i32, i32* %423, align 8
  %425 = add i32 %406, %424
  %426 = add nsw i32 %.123209, 2
  %427 = sext i32 %426 to i64
  %428 = getelementptr inbounds i16, i16* %10, i64 %427
  %429 = load i16, i16* %428, align 2
  %430 = zext i16 %429 to i64
  %431 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %141, i64 0, i64 %430
  %432 = getelementptr inbounds [4 x i32], [4 x i32]* %431, i64 0, i64 0
  %433 = load i32, i32* %432, align 8
  %434 = add i32 %415, %433
  %435 = zext i16 %429 to i64
  %436 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %142, i64 0, i64 %435
  %437 = getelementptr inbounds [4 x i32], [4 x i32]* %436, i64 0, i64 1
  %438 = load i32, i32* %437, align 4
  %439 = add i32 %420, %438
  %440 = zext i16 %429 to i64
  %441 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %143, i64 0, i64 %440
  %442 = getelementptr inbounds [4 x i32], [4 x i32]* %441, i64 0, i64 2
  %443 = load i32, i32* %442, align 8
  %444 = add i32 %425, %443
  %445 = add nsw i32 %.123209, 3
  %446 = sext i32 %445 to i64
  %447 = getelementptr inbounds i16, i16* %10, i64 %446
  %448 = load i16, i16* %447, align 2
  %449 = zext i16 %448 to i64
  %450 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %144, i64 0, i64 %449
  %451 = getelementptr inbounds [4 x i32], [4 x i32]* %450, i64 0, i64 0
  %452 = load i32, i32* %451, align 8
  %453 = add i32 %434, %452
  %454 = zext i16 %448 to i64
  %455 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %145, i64 0, i64 %454
  %456 = getelementptr inbounds [4 x i32], [4 x i32]* %455, i64 0, i64 1
  %457 = load i32, i32* %456, align 4
  %458 = add i32 %439, %457
  %459 = zext i16 %448 to i64
  %460 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %146, i64 0, i64 %459
  %461 = getelementptr inbounds [4 x i32], [4 x i32]* %460, i64 0, i64 2
  %462 = load i32, i32* %461, align 8
  %463 = add i32 %444, %462
  %464 = add nsw i32 %.123209, 4
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds i16, i16* %10, i64 %465
  %467 = load i16, i16* %466, align 2
  %468 = zext i16 %467 to i64
  %469 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %147, i64 0, i64 %468
  %470 = getelementptr inbounds [4 x i32], [4 x i32]* %469, i64 0, i64 0
  %471 = load i32, i32* %470, align 8
  %472 = add i32 %453, %471
  %473 = zext i16 %467 to i64
  %474 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %148, i64 0, i64 %473
  %475 = getelementptr inbounds [4 x i32], [4 x i32]* %474, i64 0, i64 1
  %476 = load i32, i32* %475, align 4
  %477 = add i32 %458, %476
  %478 = zext i16 %467 to i64
  %479 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %149, i64 0, i64 %478
  %480 = getelementptr inbounds [4 x i32], [4 x i32]* %479, i64 0, i64 2
  %481 = load i32, i32* %480, align 8
  %482 = add i32 %463, %481
  %483 = add nsw i32 %.123209, 5
  %484 = sext i32 %483 to i64
  %485 = getelementptr inbounds i16, i16* %10, i64 %484
  %486 = load i16, i16* %485, align 2
  %487 = zext i16 %486 to i64
  %488 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %150, i64 0, i64 %487
  %489 = getelementptr inbounds [4 x i32], [4 x i32]* %488, i64 0, i64 0
  %490 = load i32, i32* %489, align 8
  %491 = add i32 %472, %490
  %492 = zext i16 %486 to i64
  %493 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %151, i64 0, i64 %492
  %494 = getelementptr inbounds [4 x i32], [4 x i32]* %493, i64 0, i64 1
  %495 = load i32, i32* %494, align 4
  %496 = add i32 %477, %495
  %497 = zext i16 %486 to i64
  %498 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %152, i64 0, i64 %497
  %499 = getelementptr inbounds [4 x i32], [4 x i32]* %498, i64 0, i64 2
  %500 = load i32, i32* %499, align 8
  %501 = add i32 %482, %500
  %502 = add nsw i32 %.123209, 6
  %503 = sext i32 %502 to i64
  %504 = getelementptr inbounds i16, i16* %10, i64 %503
  %505 = load i16, i16* %504, align 2
  %506 = zext i16 %505 to i64
  %507 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %153, i64 0, i64 %506
  %508 = getelementptr inbounds [4 x i32], [4 x i32]* %507, i64 0, i64 0
  %509 = load i32, i32* %508, align 8
  %510 = add i32 %491, %509
  %511 = zext i16 %505 to i64
  %512 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %154, i64 0, i64 %511
  %513 = getelementptr inbounds [4 x i32], [4 x i32]* %512, i64 0, i64 1
  %514 = load i32, i32* %513, align 4
  %515 = add i32 %496, %514
  %516 = zext i16 %505 to i64
  %517 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %155, i64 0, i64 %516
  %518 = getelementptr inbounds [4 x i32], [4 x i32]* %517, i64 0, i64 2
  %519 = load i32, i32* %518, align 8
  %520 = add i32 %501, %519
  %521 = add nsw i32 %.123209, 7
  %522 = sext i32 %521 to i64
  %523 = getelementptr inbounds i16, i16* %10, i64 %522
  %524 = load i16, i16* %523, align 2
  %525 = zext i16 %524 to i64
  %526 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %156, i64 0, i64 %525
  %527 = getelementptr inbounds [4 x i32], [4 x i32]* %526, i64 0, i64 0
  %528 = load i32, i32* %527, align 8
  %529 = add i32 %510, %528
  %530 = zext i16 %524 to i64
  %531 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %157, i64 0, i64 %530
  %532 = getelementptr inbounds [4 x i32], [4 x i32]* %531, i64 0, i64 1
  %533 = load i32, i32* %532, align 4
  %534 = add i32 %515, %533
  %535 = zext i16 %524 to i64
  %536 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %158, i64 0, i64 %535
  %537 = getelementptr inbounds [4 x i32], [4 x i32]* %536, i64 0, i64 2
  %538 = load i32, i32* %537, align 8
  %539 = add i32 %520, %538
  %540 = add nsw i32 %.123209, 8
  %541 = sext i32 %540 to i64
  %542 = getelementptr inbounds i16, i16* %10, i64 %541
  %543 = load i16, i16* %542, align 2
  %544 = zext i16 %543 to i64
  %545 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %159, i64 0, i64 %544
  %546 = getelementptr inbounds [4 x i32], [4 x i32]* %545, i64 0, i64 0
  %547 = load i32, i32* %546, align 8
  %548 = add i32 %529, %547
  %549 = zext i16 %543 to i64
  %550 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %160, i64 0, i64 %549
  %551 = getelementptr inbounds [4 x i32], [4 x i32]* %550, i64 0, i64 1
  %552 = load i32, i32* %551, align 4
  %553 = add i32 %534, %552
  %554 = zext i16 %543 to i64
  %555 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %161, i64 0, i64 %554
  %556 = getelementptr inbounds [4 x i32], [4 x i32]* %555, i64 0, i64 2
  %557 = load i32, i32* %556, align 8
  %558 = add i32 %539, %557
  %559 = add nsw i32 %.123209, 9
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds i16, i16* %10, i64 %560
  %562 = load i16, i16* %561, align 2
  %563 = zext i16 %562 to i64
  %564 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %162, i64 0, i64 %563
  %565 = getelementptr inbounds [4 x i32], [4 x i32]* %564, i64 0, i64 0
  %566 = load i32, i32* %565, align 8
  %567 = add i32 %548, %566
  %568 = zext i16 %562 to i64
  %569 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %163, i64 0, i64 %568
  %570 = getelementptr inbounds [4 x i32], [4 x i32]* %569, i64 0, i64 1
  %571 = load i32, i32* %570, align 4
  %572 = add i32 %553, %571
  %573 = zext i16 %562 to i64
  %574 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %164, i64 0, i64 %573
  %575 = getelementptr inbounds [4 x i32], [4 x i32]* %574, i64 0, i64 2
  %576 = load i32, i32* %575, align 8
  %577 = add i32 %558, %576
  %578 = add nsw i32 %.123209, 10
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds i16, i16* %10, i64 %579
  %581 = load i16, i16* %580, align 2
  %582 = zext i16 %581 to i64
  %583 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %165, i64 0, i64 %582
  %584 = getelementptr inbounds [4 x i32], [4 x i32]* %583, i64 0, i64 0
  %585 = load i32, i32* %584, align 8
  %586 = add i32 %567, %585
  %587 = zext i16 %581 to i64
  %588 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %166, i64 0, i64 %587
  %589 = getelementptr inbounds [4 x i32], [4 x i32]* %588, i64 0, i64 1
  %590 = load i32, i32* %589, align 4
  %591 = add i32 %572, %590
  %592 = zext i16 %581 to i64
  %593 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %167, i64 0, i64 %592
  %594 = getelementptr inbounds [4 x i32], [4 x i32]* %593, i64 0, i64 2
  %595 = load i32, i32* %594, align 8
  %596 = add i32 %577, %595
  %597 = add nsw i32 %.123209, 11
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds i16, i16* %10, i64 %598
  %600 = load i16, i16* %599, align 2
  %601 = zext i16 %600 to i64
  %602 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %168, i64 0, i64 %601
  %603 = getelementptr inbounds [4 x i32], [4 x i32]* %602, i64 0, i64 0
  %604 = load i32, i32* %603, align 8
  %605 = add i32 %586, %604
  %606 = zext i16 %600 to i64
  %607 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %169, i64 0, i64 %606
  %608 = getelementptr inbounds [4 x i32], [4 x i32]* %607, i64 0, i64 1
  %609 = load i32, i32* %608, align 4
  %610 = add i32 %591, %609
  %611 = zext i16 %600 to i64
  %612 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %170, i64 0, i64 %611
  %613 = getelementptr inbounds [4 x i32], [4 x i32]* %612, i64 0, i64 2
  %614 = load i32, i32* %613, align 8
  %615 = add i32 %596, %614
  %616 = add nsw i32 %.123209, 12
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds i16, i16* %10, i64 %617
  %619 = load i16, i16* %618, align 2
  %620 = zext i16 %619 to i64
  %621 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %171, i64 0, i64 %620
  %622 = getelementptr inbounds [4 x i32], [4 x i32]* %621, i64 0, i64 0
  %623 = load i32, i32* %622, align 8
  %624 = add i32 %605, %623
  %625 = zext i16 %619 to i64
  %626 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %172, i64 0, i64 %625
  %627 = getelementptr inbounds [4 x i32], [4 x i32]* %626, i64 0, i64 1
  %628 = load i32, i32* %627, align 4
  %629 = add i32 %610, %628
  %630 = zext i16 %619 to i64
  %631 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %173, i64 0, i64 %630
  %632 = getelementptr inbounds [4 x i32], [4 x i32]* %631, i64 0, i64 2
  %633 = load i32, i32* %632, align 8
  %634 = add i32 %615, %633
  %635 = add nsw i32 %.123209, 13
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds i16, i16* %10, i64 %636
  %638 = load i16, i16* %637, align 2
  %639 = zext i16 %638 to i64
  %640 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %174, i64 0, i64 %639
  %641 = getelementptr inbounds [4 x i32], [4 x i32]* %640, i64 0, i64 0
  %642 = load i32, i32* %641, align 8
  %643 = add i32 %624, %642
  %644 = zext i16 %638 to i64
  %645 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %175, i64 0, i64 %644
  %646 = getelementptr inbounds [4 x i32], [4 x i32]* %645, i64 0, i64 1
  %647 = load i32, i32* %646, align 4
  %648 = add i32 %629, %647
  %649 = zext i16 %638 to i64
  %650 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %176, i64 0, i64 %649
  %651 = getelementptr inbounds [4 x i32], [4 x i32]* %650, i64 0, i64 2
  %652 = load i32, i32* %651, align 8
  %653 = add i32 %634, %652
  %654 = add nsw i32 %.123209, 14
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds i16, i16* %10, i64 %655
  %657 = load i16, i16* %656, align 2
  %658 = zext i16 %657 to i64
  %659 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %177, i64 0, i64 %658
  %660 = getelementptr inbounds [4 x i32], [4 x i32]* %659, i64 0, i64 0
  %661 = load i32, i32* %660, align 8
  %662 = add i32 %643, %661
  %663 = zext i16 %657 to i64
  %664 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %178, i64 0, i64 %663
  %665 = getelementptr inbounds [4 x i32], [4 x i32]* %664, i64 0, i64 1
  %666 = load i32, i32* %665, align 4
  %667 = add i32 %648, %666
  %668 = zext i16 %657 to i64
  %669 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %179, i64 0, i64 %668
  %670 = getelementptr inbounds [4 x i32], [4 x i32]* %669, i64 0, i64 2
  %671 = load i32, i32* %670, align 8
  %672 = add i32 %653, %671
  %673 = add nsw i32 %.123209, 15
  %674 = sext i32 %673 to i64
  %675 = getelementptr inbounds i16, i16* %10, i64 %674
  %676 = load i16, i16* %675, align 2
  %677 = zext i16 %676 to i64
  %678 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %180, i64 0, i64 %677
  %679 = getelementptr inbounds [4 x i32], [4 x i32]* %678, i64 0, i64 0
  %680 = load i32, i32* %679, align 8
  %681 = add i32 %662, %680
  %682 = zext i16 %676 to i64
  %683 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %181, i64 0, i64 %682
  %684 = getelementptr inbounds [4 x i32], [4 x i32]* %683, i64 0, i64 1
  %685 = load i32, i32* %684, align 4
  %686 = add i32 %667, %685
  %687 = zext i16 %676 to i64
  %688 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %182, i64 0, i64 %687
  %689 = getelementptr inbounds [4 x i32], [4 x i32]* %688, i64 0, i64 2
  %690 = load i32, i32* %689, align 8
  %691 = add i32 %672, %690
  %692 = add nsw i32 %.123209, 16
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i16, i16* %10, i64 %693
  %695 = load i16, i16* %694, align 2
  %696 = zext i16 %695 to i64
  %697 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %183, i64 0, i64 %696
  %698 = getelementptr inbounds [4 x i32], [4 x i32]* %697, i64 0, i64 0
  %699 = load i32, i32* %698, align 8
  %700 = add i32 %681, %699
  %701 = zext i16 %695 to i64
  %702 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %184, i64 0, i64 %701
  %703 = getelementptr inbounds [4 x i32], [4 x i32]* %702, i64 0, i64 1
  %704 = load i32, i32* %703, align 4
  %705 = add i32 %686, %704
  %706 = zext i16 %695 to i64
  %707 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %185, i64 0, i64 %706
  %708 = getelementptr inbounds [4 x i32], [4 x i32]* %707, i64 0, i64 2
  %709 = load i32, i32* %708, align 8
  %710 = add i32 %691, %709
  %711 = add nsw i32 %.123209, 17
  %712 = sext i32 %711 to i64
  %713 = getelementptr inbounds i16, i16* %10, i64 %712
  %714 = load i16, i16* %713, align 2
  %715 = zext i16 %714 to i64
  %716 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %186, i64 0, i64 %715
  %717 = getelementptr inbounds [4 x i32], [4 x i32]* %716, i64 0, i64 0
  %718 = load i32, i32* %717, align 8
  %719 = add i32 %700, %718
  %720 = zext i16 %714 to i64
  %721 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %187, i64 0, i64 %720
  %722 = getelementptr inbounds [4 x i32], [4 x i32]* %721, i64 0, i64 1
  %723 = load i32, i32* %722, align 4
  %724 = add i32 %705, %723
  %725 = zext i16 %714 to i64
  %726 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %188, i64 0, i64 %725
  %727 = getelementptr inbounds [4 x i32], [4 x i32]* %726, i64 0, i64 2
  %728 = load i32, i32* %727, align 8
  %729 = add i32 %710, %728
  %730 = add nsw i32 %.123209, 18
  %731 = sext i32 %730 to i64
  %732 = getelementptr inbounds i16, i16* %10, i64 %731
  %733 = load i16, i16* %732, align 2
  %734 = zext i16 %733 to i64
  %735 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %189, i64 0, i64 %734
  %736 = getelementptr inbounds [4 x i32], [4 x i32]* %735, i64 0, i64 0
  %737 = load i32, i32* %736, align 8
  %738 = add i32 %719, %737
  %739 = zext i16 %733 to i64
  %740 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %190, i64 0, i64 %739
  %741 = getelementptr inbounds [4 x i32], [4 x i32]* %740, i64 0, i64 1
  %742 = load i32, i32* %741, align 4
  %743 = add i32 %724, %742
  %744 = zext i16 %733 to i64
  %745 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %191, i64 0, i64 %744
  %746 = getelementptr inbounds [4 x i32], [4 x i32]* %745, i64 0, i64 2
  %747 = load i32, i32* %746, align 8
  %748 = add i32 %729, %747
  %749 = add nsw i32 %.123209, 19
  %750 = sext i32 %749 to i64
  %751 = getelementptr inbounds i16, i16* %10, i64 %750
  %752 = load i16, i16* %751, align 2
  %753 = zext i16 %752 to i64
  %754 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %192, i64 0, i64 %753
  %755 = getelementptr inbounds [4 x i32], [4 x i32]* %754, i64 0, i64 0
  %756 = load i32, i32* %755, align 8
  %757 = add i32 %738, %756
  %758 = zext i16 %752 to i64
  %759 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %193, i64 0, i64 %758
  %760 = getelementptr inbounds [4 x i32], [4 x i32]* %759, i64 0, i64 1
  %761 = load i32, i32* %760, align 4
  %762 = add i32 %743, %761
  %763 = zext i16 %752 to i64
  %764 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %194, i64 0, i64 %763
  %765 = getelementptr inbounds [4 x i32], [4 x i32]* %764, i64 0, i64 2
  %766 = load i32, i32* %765, align 8
  %767 = add i32 %748, %766
  %768 = add nsw i32 %.123209, 20
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds i16, i16* %10, i64 %769
  %771 = load i16, i16* %770, align 2
  %772 = zext i16 %771 to i64
  %773 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %195, i64 0, i64 %772
  %774 = getelementptr inbounds [4 x i32], [4 x i32]* %773, i64 0, i64 0
  %775 = load i32, i32* %774, align 8
  %776 = add i32 %757, %775
  %777 = zext i16 %771 to i64
  %778 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %196, i64 0, i64 %777
  %779 = getelementptr inbounds [4 x i32], [4 x i32]* %778, i64 0, i64 1
  %780 = load i32, i32* %779, align 4
  %781 = add i32 %762, %780
  %782 = zext i16 %771 to i64
  %783 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %197, i64 0, i64 %782
  %784 = getelementptr inbounds [4 x i32], [4 x i32]* %783, i64 0, i64 2
  %785 = load i32, i32* %784, align 8
  %786 = add i32 %767, %785
  %787 = add nsw i32 %.123209, 21
  %788 = sext i32 %787 to i64
  %789 = getelementptr inbounds i16, i16* %10, i64 %788
  %790 = load i16, i16* %789, align 2
  %791 = zext i16 %790 to i64
  %792 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %198, i64 0, i64 %791
  %793 = getelementptr inbounds [4 x i32], [4 x i32]* %792, i64 0, i64 0
  %794 = load i32, i32* %793, align 8
  %795 = add i32 %776, %794
  %796 = zext i16 %790 to i64
  %797 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %199, i64 0, i64 %796
  %798 = getelementptr inbounds [4 x i32], [4 x i32]* %797, i64 0, i64 1
  %799 = load i32, i32* %798, align 4
  %800 = add i32 %781, %799
  %801 = zext i16 %790 to i64
  %802 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %200, i64 0, i64 %801
  %803 = getelementptr inbounds [4 x i32], [4 x i32]* %802, i64 0, i64 2
  %804 = load i32, i32* %803, align 8
  %805 = add i32 %786, %804
  %806 = add nsw i32 %.123209, 22
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds i16, i16* %10, i64 %807
  %809 = load i16, i16* %808, align 2
  %810 = zext i16 %809 to i64
  %811 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %201, i64 0, i64 %810
  %812 = getelementptr inbounds [4 x i32], [4 x i32]* %811, i64 0, i64 0
  %813 = load i32, i32* %812, align 8
  %814 = add i32 %795, %813
  %815 = zext i16 %809 to i64
  %816 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %202, i64 0, i64 %815
  %817 = getelementptr inbounds [4 x i32], [4 x i32]* %816, i64 0, i64 1
  %818 = load i32, i32* %817, align 4
  %819 = add i32 %800, %818
  %820 = zext i16 %809 to i64
  %821 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %203, i64 0, i64 %820
  %822 = getelementptr inbounds [4 x i32], [4 x i32]* %821, i64 0, i64 2
  %823 = load i32, i32* %822, align 8
  %824 = add i32 %805, %823
  %825 = add nsw i32 %.123209, 23
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds i16, i16* %10, i64 %826
  %828 = load i16, i16* %827, align 2
  %829 = zext i16 %828 to i64
  %830 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %204, i64 0, i64 %829
  %831 = getelementptr inbounds [4 x i32], [4 x i32]* %830, i64 0, i64 0
  %832 = load i32, i32* %831, align 8
  %833 = add i32 %814, %832
  %834 = zext i16 %828 to i64
  %835 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %205, i64 0, i64 %834
  %836 = getelementptr inbounds [4 x i32], [4 x i32]* %835, i64 0, i64 1
  %837 = load i32, i32* %836, align 4
  %838 = add i32 %819, %837
  %839 = zext i16 %828 to i64
  %840 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %206, i64 0, i64 %839
  %841 = getelementptr inbounds [4 x i32], [4 x i32]* %840, i64 0, i64 2
  %842 = load i32, i32* %841, align 8
  %843 = add i32 %824, %842
  %844 = add nsw i32 %.123209, 24
  %845 = sext i32 %844 to i64
  %846 = getelementptr inbounds i16, i16* %10, i64 %845
  %847 = load i16, i16* %846, align 2
  %848 = zext i16 %847 to i64
  %849 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %207, i64 0, i64 %848
  %850 = getelementptr inbounds [4 x i32], [4 x i32]* %849, i64 0, i64 0
  %851 = load i32, i32* %850, align 8
  %852 = add i32 %833, %851
  %853 = zext i16 %847 to i64
  %854 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %208, i64 0, i64 %853
  %855 = getelementptr inbounds [4 x i32], [4 x i32]* %854, i64 0, i64 1
  %856 = load i32, i32* %855, align 4
  %857 = add i32 %838, %856
  %858 = zext i16 %847 to i64
  %859 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %209, i64 0, i64 %858
  %860 = getelementptr inbounds [4 x i32], [4 x i32]* %859, i64 0, i64 2
  %861 = load i32, i32* %860, align 8
  %862 = add i32 %843, %861
  %863 = add nsw i32 %.123209, 25
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds i16, i16* %10, i64 %864
  %866 = load i16, i16* %865, align 2
  %867 = zext i16 %866 to i64
  %868 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %210, i64 0, i64 %867
  %869 = getelementptr inbounds [4 x i32], [4 x i32]* %868, i64 0, i64 0
  %870 = load i32, i32* %869, align 8
  %871 = add i32 %852, %870
  %872 = zext i16 %866 to i64
  %873 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %211, i64 0, i64 %872
  %874 = getelementptr inbounds [4 x i32], [4 x i32]* %873, i64 0, i64 1
  %875 = load i32, i32* %874, align 4
  %876 = add i32 %857, %875
  %877 = zext i16 %866 to i64
  %878 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %212, i64 0, i64 %877
  %879 = getelementptr inbounds [4 x i32], [4 x i32]* %878, i64 0, i64 2
  %880 = load i32, i32* %879, align 8
  %881 = add i32 %862, %880
  %882 = add nsw i32 %.123209, 26
  %883 = sext i32 %882 to i64
  %884 = getelementptr inbounds i16, i16* %10, i64 %883
  %885 = load i16, i16* %884, align 2
  %886 = zext i16 %885 to i64
  %887 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %213, i64 0, i64 %886
  %888 = getelementptr inbounds [4 x i32], [4 x i32]* %887, i64 0, i64 0
  %889 = load i32, i32* %888, align 8
  %890 = add i32 %871, %889
  %891 = zext i16 %885 to i64
  %892 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %214, i64 0, i64 %891
  %893 = getelementptr inbounds [4 x i32], [4 x i32]* %892, i64 0, i64 1
  %894 = load i32, i32* %893, align 4
  %895 = add i32 %876, %894
  %896 = zext i16 %885 to i64
  %897 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %215, i64 0, i64 %896
  %898 = getelementptr inbounds [4 x i32], [4 x i32]* %897, i64 0, i64 2
  %899 = load i32, i32* %898, align 8
  %900 = add i32 %881, %899
  %901 = add nsw i32 %.123209, 27
  %902 = sext i32 %901 to i64
  %903 = getelementptr inbounds i16, i16* %10, i64 %902
  %904 = load i16, i16* %903, align 2
  %905 = zext i16 %904 to i64
  %906 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %216, i64 0, i64 %905
  %907 = getelementptr inbounds [4 x i32], [4 x i32]* %906, i64 0, i64 0
  %908 = load i32, i32* %907, align 8
  %909 = add i32 %890, %908
  %910 = zext i16 %904 to i64
  %911 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %217, i64 0, i64 %910
  %912 = getelementptr inbounds [4 x i32], [4 x i32]* %911, i64 0, i64 1
  %913 = load i32, i32* %912, align 4
  %914 = add i32 %895, %913
  %915 = zext i16 %904 to i64
  %916 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %218, i64 0, i64 %915
  %917 = getelementptr inbounds [4 x i32], [4 x i32]* %916, i64 0, i64 2
  %918 = load i32, i32* %917, align 8
  %919 = add i32 %900, %918
  %920 = add nsw i32 %.123209, 28
  %921 = sext i32 %920 to i64
  %922 = getelementptr inbounds i16, i16* %10, i64 %921
  %923 = load i16, i16* %922, align 2
  %924 = zext i16 %923 to i64
  %925 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %219, i64 0, i64 %924
  %926 = getelementptr inbounds [4 x i32], [4 x i32]* %925, i64 0, i64 0
  %927 = load i32, i32* %926, align 8
  %928 = add i32 %909, %927
  %929 = zext i16 %923 to i64
  %930 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %220, i64 0, i64 %929
  %931 = getelementptr inbounds [4 x i32], [4 x i32]* %930, i64 0, i64 1
  %932 = load i32, i32* %931, align 4
  %933 = add i32 %914, %932
  %934 = zext i16 %923 to i64
  %935 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %221, i64 0, i64 %934
  %936 = getelementptr inbounds [4 x i32], [4 x i32]* %935, i64 0, i64 2
  %937 = load i32, i32* %936, align 8
  %938 = add i32 %919, %937
  %939 = add nsw i32 %.123209, 29
  %940 = sext i32 %939 to i64
  %941 = getelementptr inbounds i16, i16* %10, i64 %940
  %942 = load i16, i16* %941, align 2
  %943 = zext i16 %942 to i64
  %944 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %222, i64 0, i64 %943
  %945 = getelementptr inbounds [4 x i32], [4 x i32]* %944, i64 0, i64 0
  %946 = load i32, i32* %945, align 8
  %947 = add i32 %928, %946
  %948 = zext i16 %942 to i64
  %949 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %223, i64 0, i64 %948
  %950 = getelementptr inbounds [4 x i32], [4 x i32]* %949, i64 0, i64 1
  %951 = load i32, i32* %950, align 4
  %952 = add i32 %933, %951
  %953 = zext i16 %942 to i64
  %954 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %224, i64 0, i64 %953
  %955 = getelementptr inbounds [4 x i32], [4 x i32]* %954, i64 0, i64 2
  %956 = load i32, i32* %955, align 8
  %957 = add i32 %938, %956
  %958 = add nsw i32 %.123209, 30
  %959 = sext i32 %958 to i64
  %960 = getelementptr inbounds i16, i16* %10, i64 %959
  %961 = load i16, i16* %960, align 2
  %962 = zext i16 %961 to i64
  %963 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %225, i64 0, i64 %962
  %964 = getelementptr inbounds [4 x i32], [4 x i32]* %963, i64 0, i64 0
  %965 = load i32, i32* %964, align 8
  %966 = add i32 %947, %965
  %967 = zext i16 %961 to i64
  %968 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %226, i64 0, i64 %967
  %969 = getelementptr inbounds [4 x i32], [4 x i32]* %968, i64 0, i64 1
  %970 = load i32, i32* %969, align 4
  %971 = add i32 %952, %970
  %972 = zext i16 %961 to i64
  %973 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %227, i64 0, i64 %972
  %974 = getelementptr inbounds [4 x i32], [4 x i32]* %973, i64 0, i64 2
  %975 = load i32, i32* %974, align 8
  %976 = add i32 %957, %975
  %977 = add nsw i32 %.123209, 31
  %978 = sext i32 %977 to i64
  %979 = getelementptr inbounds i16, i16* %10, i64 %978
  %980 = load i16, i16* %979, align 2
  %981 = zext i16 %980 to i64
  %982 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %228, i64 0, i64 %981
  %983 = getelementptr inbounds [4 x i32], [4 x i32]* %982, i64 0, i64 0
  %984 = load i32, i32* %983, align 8
  %985 = add i32 %966, %984
  %986 = zext i16 %980 to i64
  %987 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %229, i64 0, i64 %986
  %988 = getelementptr inbounds [4 x i32], [4 x i32]* %987, i64 0, i64 1
  %989 = load i32, i32* %988, align 4
  %990 = add i32 %971, %989
  %991 = zext i16 %980 to i64
  %992 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %230, i64 0, i64 %991
  %993 = getelementptr inbounds [4 x i32], [4 x i32]* %992, i64 0, i64 2
  %994 = load i32, i32* %993, align 8
  %995 = add i32 %976, %994
  %996 = add nsw i32 %.123209, 32
  %997 = sext i32 %996 to i64
  %998 = getelementptr inbounds i16, i16* %10, i64 %997
  %999 = load i16, i16* %998, align 2
  %1000 = zext i16 %999 to i64
  %1001 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %231, i64 0, i64 %1000
  %1002 = getelementptr inbounds [4 x i32], [4 x i32]* %1001, i64 0, i64 0
  %1003 = load i32, i32* %1002, align 8
  %1004 = add i32 %985, %1003
  %1005 = zext i16 %999 to i64
  %1006 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %232, i64 0, i64 %1005
  %1007 = getelementptr inbounds [4 x i32], [4 x i32]* %1006, i64 0, i64 1
  %1008 = load i32, i32* %1007, align 4
  %1009 = add i32 %990, %1008
  %1010 = zext i16 %999 to i64
  %1011 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %233, i64 0, i64 %1010
  %1012 = getelementptr inbounds [4 x i32], [4 x i32]* %1011, i64 0, i64 2
  %1013 = load i32, i32* %1012, align 8
  %1014 = add i32 %995, %1013
  %1015 = add nsw i32 %.123209, 33
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds i16, i16* %10, i64 %1016
  %1018 = load i16, i16* %1017, align 2
  %1019 = zext i16 %1018 to i64
  %1020 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %234, i64 0, i64 %1019
  %1021 = getelementptr inbounds [4 x i32], [4 x i32]* %1020, i64 0, i64 0
  %1022 = load i32, i32* %1021, align 8
  %1023 = add i32 %1004, %1022
  %1024 = zext i16 %1018 to i64
  %1025 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %235, i64 0, i64 %1024
  %1026 = getelementptr inbounds [4 x i32], [4 x i32]* %1025, i64 0, i64 1
  %1027 = load i32, i32* %1026, align 4
  %1028 = add i32 %1009, %1027
  %1029 = zext i16 %1018 to i64
  %1030 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %236, i64 0, i64 %1029
  %1031 = getelementptr inbounds [4 x i32], [4 x i32]* %1030, i64 0, i64 2
  %1032 = load i32, i32* %1031, align 8
  %1033 = add i32 %1014, %1032
  %1034 = add nsw i32 %.123209, 34
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds i16, i16* %10, i64 %1035
  %1037 = load i16, i16* %1036, align 2
  %1038 = zext i16 %1037 to i64
  %1039 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %237, i64 0, i64 %1038
  %1040 = getelementptr inbounds [4 x i32], [4 x i32]* %1039, i64 0, i64 0
  %1041 = load i32, i32* %1040, align 8
  %1042 = add i32 %1023, %1041
  %1043 = zext i16 %1037 to i64
  %1044 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %238, i64 0, i64 %1043
  %1045 = getelementptr inbounds [4 x i32], [4 x i32]* %1044, i64 0, i64 1
  %1046 = load i32, i32* %1045, align 4
  %1047 = add i32 %1028, %1046
  %1048 = zext i16 %1037 to i64
  %1049 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %239, i64 0, i64 %1048
  %1050 = getelementptr inbounds [4 x i32], [4 x i32]* %1049, i64 0, i64 2
  %1051 = load i32, i32* %1050, align 8
  %1052 = add i32 %1033, %1051
  %1053 = add nsw i32 %.123209, 35
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds i16, i16* %10, i64 %1054
  %1056 = load i16, i16* %1055, align 2
  %1057 = zext i16 %1056 to i64
  %1058 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %240, i64 0, i64 %1057
  %1059 = getelementptr inbounds [4 x i32], [4 x i32]* %1058, i64 0, i64 0
  %1060 = load i32, i32* %1059, align 8
  %1061 = add i32 %1042, %1060
  %1062 = zext i16 %1056 to i64
  %1063 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %241, i64 0, i64 %1062
  %1064 = getelementptr inbounds [4 x i32], [4 x i32]* %1063, i64 0, i64 1
  %1065 = load i32, i32* %1064, align 4
  %1066 = add i32 %1047, %1065
  %1067 = zext i16 %1056 to i64
  %1068 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %242, i64 0, i64 %1067
  %1069 = getelementptr inbounds [4 x i32], [4 x i32]* %1068, i64 0, i64 2
  %1070 = load i32, i32* %1069, align 8
  %1071 = add i32 %1052, %1070
  %1072 = add nsw i32 %.123209, 36
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds i16, i16* %10, i64 %1073
  %1075 = load i16, i16* %1074, align 2
  %1076 = zext i16 %1075 to i64
  %1077 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %243, i64 0, i64 %1076
  %1078 = getelementptr inbounds [4 x i32], [4 x i32]* %1077, i64 0, i64 0
  %1079 = load i32, i32* %1078, align 8
  %1080 = add i32 %1061, %1079
  %1081 = zext i16 %1075 to i64
  %1082 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %244, i64 0, i64 %1081
  %1083 = getelementptr inbounds [4 x i32], [4 x i32]* %1082, i64 0, i64 1
  %1084 = load i32, i32* %1083, align 4
  %1085 = add i32 %1066, %1084
  %1086 = zext i16 %1075 to i64
  %1087 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %245, i64 0, i64 %1086
  %1088 = getelementptr inbounds [4 x i32], [4 x i32]* %1087, i64 0, i64 2
  %1089 = load i32, i32* %1088, align 8
  %1090 = add i32 %1071, %1089
  %1091 = add nsw i32 %.123209, 37
  %1092 = sext i32 %1091 to i64
  %1093 = getelementptr inbounds i16, i16* %10, i64 %1092
  %1094 = load i16, i16* %1093, align 2
  %1095 = zext i16 %1094 to i64
  %1096 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %246, i64 0, i64 %1095
  %1097 = getelementptr inbounds [4 x i32], [4 x i32]* %1096, i64 0, i64 0
  %1098 = load i32, i32* %1097, align 8
  %1099 = add i32 %1080, %1098
  %1100 = zext i16 %1094 to i64
  %1101 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %247, i64 0, i64 %1100
  %1102 = getelementptr inbounds [4 x i32], [4 x i32]* %1101, i64 0, i64 1
  %1103 = load i32, i32* %1102, align 4
  %1104 = add i32 %1085, %1103
  %1105 = zext i16 %1094 to i64
  %1106 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %248, i64 0, i64 %1105
  %1107 = getelementptr inbounds [4 x i32], [4 x i32]* %1106, i64 0, i64 2
  %1108 = load i32, i32* %1107, align 8
  %1109 = add i32 %1090, %1108
  %1110 = add nsw i32 %.123209, 38
  %1111 = sext i32 %1110 to i64
  %1112 = getelementptr inbounds i16, i16* %10, i64 %1111
  %1113 = load i16, i16* %1112, align 2
  %1114 = zext i16 %1113 to i64
  %1115 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %249, i64 0, i64 %1114
  %1116 = getelementptr inbounds [4 x i32], [4 x i32]* %1115, i64 0, i64 0
  %1117 = load i32, i32* %1116, align 8
  %1118 = add i32 %1099, %1117
  %1119 = zext i16 %1113 to i64
  %1120 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %250, i64 0, i64 %1119
  %1121 = getelementptr inbounds [4 x i32], [4 x i32]* %1120, i64 0, i64 1
  %1122 = load i32, i32* %1121, align 4
  %1123 = add i32 %1104, %1122
  %1124 = zext i16 %1113 to i64
  %1125 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %251, i64 0, i64 %1124
  %1126 = getelementptr inbounds [4 x i32], [4 x i32]* %1125, i64 0, i64 2
  %1127 = load i32, i32* %1126, align 8
  %1128 = add i32 %1109, %1127
  %1129 = add nsw i32 %.123209, 39
  %1130 = sext i32 %1129 to i64
  %1131 = getelementptr inbounds i16, i16* %10, i64 %1130
  %1132 = load i16, i16* %1131, align 2
  %1133 = zext i16 %1132 to i64
  %1134 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %252, i64 0, i64 %1133
  %1135 = getelementptr inbounds [4 x i32], [4 x i32]* %1134, i64 0, i64 0
  %1136 = load i32, i32* %1135, align 8
  %1137 = add i32 %1118, %1136
  %1138 = zext i16 %1132 to i64
  %1139 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %253, i64 0, i64 %1138
  %1140 = getelementptr inbounds [4 x i32], [4 x i32]* %1139, i64 0, i64 1
  %1141 = load i32, i32* %1140, align 4
  %1142 = add i32 %1123, %1141
  %1143 = zext i16 %1132 to i64
  %1144 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %254, i64 0, i64 %1143
  %1145 = getelementptr inbounds [4 x i32], [4 x i32]* %1144, i64 0, i64 2
  %1146 = load i32, i32* %1145, align 8
  %1147 = add i32 %1128, %1146
  %1148 = add nsw i32 %.123209, 40
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds i16, i16* %10, i64 %1149
  %1151 = load i16, i16* %1150, align 2
  %1152 = zext i16 %1151 to i64
  %1153 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %255, i64 0, i64 %1152
  %1154 = getelementptr inbounds [4 x i32], [4 x i32]* %1153, i64 0, i64 0
  %1155 = load i32, i32* %1154, align 8
  %1156 = add i32 %1137, %1155
  %1157 = zext i16 %1151 to i64
  %1158 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %256, i64 0, i64 %1157
  %1159 = getelementptr inbounds [4 x i32], [4 x i32]* %1158, i64 0, i64 1
  %1160 = load i32, i32* %1159, align 4
  %1161 = add i32 %1142, %1160
  %1162 = zext i16 %1151 to i64
  %1163 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %257, i64 0, i64 %1162
  %1164 = getelementptr inbounds [4 x i32], [4 x i32]* %1163, i64 0, i64 2
  %1165 = load i32, i32* %1164, align 8
  %1166 = add i32 %1147, %1165
  %1167 = add nsw i32 %.123209, 41
  %1168 = sext i32 %1167 to i64
  %1169 = getelementptr inbounds i16, i16* %10, i64 %1168
  %1170 = load i16, i16* %1169, align 2
  %1171 = zext i16 %1170 to i64
  %1172 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %258, i64 0, i64 %1171
  %1173 = getelementptr inbounds [4 x i32], [4 x i32]* %1172, i64 0, i64 0
  %1174 = load i32, i32* %1173, align 8
  %1175 = add i32 %1156, %1174
  %1176 = zext i16 %1170 to i64
  %1177 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %259, i64 0, i64 %1176
  %1178 = getelementptr inbounds [4 x i32], [4 x i32]* %1177, i64 0, i64 1
  %1179 = load i32, i32* %1178, align 4
  %1180 = add i32 %1161, %1179
  %1181 = zext i16 %1170 to i64
  %1182 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %260, i64 0, i64 %1181
  %1183 = getelementptr inbounds [4 x i32], [4 x i32]* %1182, i64 0, i64 2
  %1184 = load i32, i32* %1183, align 8
  %1185 = add i32 %1166, %1184
  %1186 = add nsw i32 %.123209, 42
  %1187 = sext i32 %1186 to i64
  %1188 = getelementptr inbounds i16, i16* %10, i64 %1187
  %1189 = load i16, i16* %1188, align 2
  %1190 = zext i16 %1189 to i64
  %1191 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %261, i64 0, i64 %1190
  %1192 = getelementptr inbounds [4 x i32], [4 x i32]* %1191, i64 0, i64 0
  %1193 = load i32, i32* %1192, align 8
  %1194 = add i32 %1175, %1193
  %1195 = zext i16 %1189 to i64
  %1196 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %262, i64 0, i64 %1195
  %1197 = getelementptr inbounds [4 x i32], [4 x i32]* %1196, i64 0, i64 1
  %1198 = load i32, i32* %1197, align 4
  %1199 = add i32 %1180, %1198
  %1200 = zext i16 %1189 to i64
  %1201 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %263, i64 0, i64 %1200
  %1202 = getelementptr inbounds [4 x i32], [4 x i32]* %1201, i64 0, i64 2
  %1203 = load i32, i32* %1202, align 8
  %1204 = add i32 %1185, %1203
  %1205 = add nsw i32 %.123209, 43
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds i16, i16* %10, i64 %1206
  %1208 = load i16, i16* %1207, align 2
  %1209 = zext i16 %1208 to i64
  %1210 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %264, i64 0, i64 %1209
  %1211 = getelementptr inbounds [4 x i32], [4 x i32]* %1210, i64 0, i64 0
  %1212 = load i32, i32* %1211, align 8
  %1213 = add i32 %1194, %1212
  %1214 = zext i16 %1208 to i64
  %1215 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %265, i64 0, i64 %1214
  %1216 = getelementptr inbounds [4 x i32], [4 x i32]* %1215, i64 0, i64 1
  %1217 = load i32, i32* %1216, align 4
  %1218 = add i32 %1199, %1217
  %1219 = zext i16 %1208 to i64
  %1220 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %266, i64 0, i64 %1219
  %1221 = getelementptr inbounds [4 x i32], [4 x i32]* %1220, i64 0, i64 2
  %1222 = load i32, i32* %1221, align 8
  %1223 = add i32 %1204, %1222
  %1224 = add nsw i32 %.123209, 44
  %1225 = sext i32 %1224 to i64
  %1226 = getelementptr inbounds i16, i16* %10, i64 %1225
  %1227 = load i16, i16* %1226, align 2
  %1228 = zext i16 %1227 to i64
  %1229 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %267, i64 0, i64 %1228
  %1230 = getelementptr inbounds [4 x i32], [4 x i32]* %1229, i64 0, i64 0
  %1231 = load i32, i32* %1230, align 8
  %1232 = add i32 %1213, %1231
  %1233 = zext i16 %1227 to i64
  %1234 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %268, i64 0, i64 %1233
  %1235 = getelementptr inbounds [4 x i32], [4 x i32]* %1234, i64 0, i64 1
  %1236 = load i32, i32* %1235, align 4
  %1237 = add i32 %1218, %1236
  %1238 = zext i16 %1227 to i64
  %1239 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %269, i64 0, i64 %1238
  %1240 = getelementptr inbounds [4 x i32], [4 x i32]* %1239, i64 0, i64 2
  %1241 = load i32, i32* %1240, align 8
  %1242 = add i32 %1223, %1241
  %1243 = add nsw i32 %.123209, 45
  %1244 = sext i32 %1243 to i64
  %1245 = getelementptr inbounds i16, i16* %10, i64 %1244
  %1246 = load i16, i16* %1245, align 2
  %1247 = zext i16 %1246 to i64
  %1248 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %270, i64 0, i64 %1247
  %1249 = getelementptr inbounds [4 x i32], [4 x i32]* %1248, i64 0, i64 0
  %1250 = load i32, i32* %1249, align 8
  %1251 = add i32 %1232, %1250
  %1252 = zext i16 %1246 to i64
  %1253 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %271, i64 0, i64 %1252
  %1254 = getelementptr inbounds [4 x i32], [4 x i32]* %1253, i64 0, i64 1
  %1255 = load i32, i32* %1254, align 4
  %1256 = add i32 %1237, %1255
  %1257 = zext i16 %1246 to i64
  %1258 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %272, i64 0, i64 %1257
  %1259 = getelementptr inbounds [4 x i32], [4 x i32]* %1258, i64 0, i64 2
  %1260 = load i32, i32* %1259, align 8
  %1261 = add i32 %1242, %1260
  %1262 = add nsw i32 %.123209, 46
  %1263 = sext i32 %1262 to i64
  %1264 = getelementptr inbounds i16, i16* %10, i64 %1263
  %1265 = load i16, i16* %1264, align 2
  %1266 = zext i16 %1265 to i64
  %1267 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %273, i64 0, i64 %1266
  %1268 = getelementptr inbounds [4 x i32], [4 x i32]* %1267, i64 0, i64 0
  %1269 = load i32, i32* %1268, align 8
  %1270 = add i32 %1251, %1269
  %1271 = zext i16 %1265 to i64
  %1272 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %274, i64 0, i64 %1271
  %1273 = getelementptr inbounds [4 x i32], [4 x i32]* %1272, i64 0, i64 1
  %1274 = load i32, i32* %1273, align 4
  %1275 = add i32 %1256, %1274
  %1276 = zext i16 %1265 to i64
  %1277 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %275, i64 0, i64 %1276
  %1278 = getelementptr inbounds [4 x i32], [4 x i32]* %1277, i64 0, i64 2
  %1279 = load i32, i32* %1278, align 8
  %1280 = add i32 %1261, %1279
  %1281 = add nsw i32 %.123209, 47
  %1282 = sext i32 %1281 to i64
  %1283 = getelementptr inbounds i16, i16* %10, i64 %1282
  %1284 = load i16, i16* %1283, align 2
  %1285 = zext i16 %1284 to i64
  %1286 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %276, i64 0, i64 %1285
  %1287 = getelementptr inbounds [4 x i32], [4 x i32]* %1286, i64 0, i64 0
  %1288 = load i32, i32* %1287, align 8
  %1289 = add i32 %1270, %1288
  %1290 = zext i16 %1284 to i64
  %1291 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %277, i64 0, i64 %1290
  %1292 = getelementptr inbounds [4 x i32], [4 x i32]* %1291, i64 0, i64 1
  %1293 = load i32, i32* %1292, align 4
  %1294 = add i32 %1275, %1293
  %1295 = zext i16 %1284 to i64
  %1296 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %278, i64 0, i64 %1295
  %1297 = getelementptr inbounds [4 x i32], [4 x i32]* %1296, i64 0, i64 2
  %1298 = load i32, i32* %1297, align 8
  %1299 = add i32 %1280, %1298
  %1300 = add nsw i32 %.123209, 48
  %1301 = sext i32 %1300 to i64
  %1302 = getelementptr inbounds i16, i16* %10, i64 %1301
  %1303 = load i16, i16* %1302, align 2
  %1304 = zext i16 %1303 to i64
  %1305 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %279, i64 0, i64 %1304
  %1306 = getelementptr inbounds [4 x i32], [4 x i32]* %1305, i64 0, i64 0
  %1307 = load i32, i32* %1306, align 8
  %1308 = add i32 %1289, %1307
  %1309 = zext i16 %1303 to i64
  %1310 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %280, i64 0, i64 %1309
  %1311 = getelementptr inbounds [4 x i32], [4 x i32]* %1310, i64 0, i64 1
  %1312 = load i32, i32* %1311, align 4
  %1313 = add i32 %1294, %1312
  %1314 = zext i16 %1303 to i64
  %1315 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %281, i64 0, i64 %1314
  %1316 = getelementptr inbounds [4 x i32], [4 x i32]* %1315, i64 0, i64 2
  %1317 = load i32, i32* %1316, align 8
  %1318 = add i32 %1299, %1317
  %1319 = add nsw i32 %.123209, 49
  %1320 = sext i32 %1319 to i64
  %1321 = getelementptr inbounds i16, i16* %10, i64 %1320
  %1322 = load i16, i16* %1321, align 2
  %1323 = zext i16 %1322 to i64
  %1324 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %282, i64 0, i64 %1323
  %1325 = getelementptr inbounds [4 x i32], [4 x i32]* %1324, i64 0, i64 0
  %1326 = load i32, i32* %1325, align 8
  %1327 = add i32 %1308, %1326
  %1328 = zext i16 %1322 to i64
  %1329 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %283, i64 0, i64 %1328
  %1330 = getelementptr inbounds [4 x i32], [4 x i32]* %1329, i64 0, i64 1
  %1331 = load i32, i32* %1330, align 4
  %1332 = add i32 %1313, %1331
  %1333 = zext i16 %1322 to i64
  %1334 = getelementptr inbounds [258 x [4 x i32]], [258 x [4 x i32]]* %284, i64 0, i64 %1333
  %1335 = getelementptr inbounds [4 x i32], [4 x i32]* %1334, i64 0, i64 2
  %1336 = load i32, i32* %1335, align 8
  %1337 = add i32 %1318, %1336
  %1338 = and i32 %1327, 65535
  %1339 = trunc i32 %1338 to i16
  store i16 %1339, i16* %285, align 2
  %1340 = lshr i32 %1327, 16
  %1341 = trunc i32 %1340 to i16
  store i16 %1341, i16* %286, align 2
  %1342 = and i32 %1332, 65535
  %1343 = trunc i32 %1342 to i16
  store i16 %1343, i16* %287, align 2
  %1344 = lshr i32 %1332, 16
  %1345 = trunc i32 %1344 to i16
  store i16 %1345, i16* %288, align 2
  %1346 = and i32 %1337, 65535
  %1347 = trunc i32 %1346 to i16
  store i16 %1347, i16* %289, align 2
  %1348 = lshr i32 %1337, 16
  %1349 = trunc i32 %1348 to i16
  store i16 %1349, i16* %290, align 2
  br label %._crit_edge191

; <label>:1350:                                   ; preds = %384, %383
  %1351 = icmp sle i32 %.123209, %.227
  br i1 %1351, label %.lr.ph190, label %._crit_edge191

.lr.ph190:                                        ; preds = %1350
  %1352 = sext i32 %.123209 to i64
  %1353 = sext i32 %.227 to i64
  %1354 = add i64 %1353, 1
  br label %1355

; <label>:1355:                                   ; preds = %.lr.ph190, %1367
  %indvars.iv192 = phi i64 [ %1352, %.lr.ph190 ], [ %indvars.iv.next193, %1367 ]
  call void @unroll_loop(i32 64)
  %1356 = getelementptr inbounds i16, i16* %10, i64 %indvars.iv192
  %1357 = load i16, i16* %1356, align 2
  %1358 = zext i16 %1357 to i64
  %scevgep64 = getelementptr i8, i8* %scevgep63, i64 %1358
  %scevgep6465 = bitcast i8* %scevgep64 to %struct.EState*
  br label %1359

; <label>:1359:                                   ; preds = %1355, %1359
  %lsr.iv69 = phi i64 [ 0, %1355 ], [ %lsr.iv.next70, %1359 ]
  %lsr.iv66 = phi %struct.EState* [ %scevgep6465, %1355 ], [ %1366, %1359 ]
  %lsr.iv6668 = bitcast %struct.EState* %lsr.iv66 to i8*
  call void @unroll_loop(i32 65)
  %1360 = load i8, i8* %lsr.iv6668, align 1
  %1361 = zext i8 %1360 to i32
  %uglygep71 = getelementptr i8, i8* %4, i64 %lsr.iv69
  %uglygep7172 = bitcast i8* %uglygep71 to i16*
  %1362 = load i16, i16* %uglygep7172, align 2
  %1363 = zext i16 %1362 to i32
  %1364 = add nsw i32 %1363, %1361
  %1365 = trunc i32 %1364 to i16
  store i16 %1365, i16* %uglygep7172, align 2
  %scevgep67 = getelementptr %struct.EState, %struct.EState* %lsr.iv66, i64 0, i32 22, i64 130
  %1366 = bitcast i8* %scevgep67 to %struct.EState*
  %lsr.iv.next70 = add nuw nsw i64 %lsr.iv69, 2
  %exitcond21 = icmp ne i64 %345, %lsr.iv.next70
  br i1 %exitcond21, label %1359, label %1367

; <label>:1367:                                   ; preds = %1359
  %indvars.iv.next193 = add nsw i64 %indvars.iv192, 1
  %exitcond22 = icmp ne i64 %indvars.iv.next193, %1354
  br i1 %exitcond22, label %1355, label %._crit_edge191.loopexit

._crit_edge191.loopexit:                          ; preds = %1367
  br label %._crit_edge191

._crit_edge191:                                   ; preds = %._crit_edge191.loopexit, %1350, %388
  br label %1368

; <label>:1368:                                   ; preds = %._crit_edge191, %1375
  %indvars.iv197 = phi i64 [ 0, %._crit_edge191 ], [ %indvars.iv.next198, %1375 ]
  %.030195 = phi i32 [ -1, %._crit_edge191 ], [ %.131, %1375 ]
  %.032194 = phi i32 [ 999999999, %._crit_edge191 ], [ %.133, %1375 ]
  call void @unroll_loop(i32 66)
  %scevgep73 = getelementptr [6 x i16], [6 x i16]* %3, i64 0, i64 %indvars.iv197
  %1369 = load i16, i16* %scevgep73, align 2
  %1370 = zext i16 %1369 to i32
  %1371 = icmp slt i32 %1370, %.032194
  br i1 %1371, label %1372, label %1375

; <label>:1372:                                   ; preds = %1368
  %scevgep74 = getelementptr [6 x i16], [6 x i16]* %3, i64 0, i64 %indvars.iv197
  %1373 = load i16, i16* %scevgep74, align 2
  %1374 = zext i16 %1373 to i32
  %tmp75 = trunc i64 %indvars.iv197 to i32
  br label %1375

; <label>:1375:                                   ; preds = %1368, %1372
  %.133 = phi i32 [ %1374, %1372 ], [ %.032194, %1368 ]
  %.131 = phi i32 [ %tmp75, %1372 ], [ %.030195, %1368 ]
  %indvars.iv.next198 = add nuw nsw i64 %indvars.iv197, 1
  %exitcond23 = icmp ne i64 %59, %indvars.iv.next198
  br i1 %exitcond23, label %1368, label %1376

; <label>:1376:                                   ; preds = %1375
  %.032.lcssa = phi i32 [ %.133, %1375 ]
  %.030.lcssa = phi i32 [ %.131, %1375 ]
  %1377 = add nsw i32 %.029208, %.032.lcssa
  %1378 = sext i32 %.030.lcssa to i64
  %1379 = getelementptr inbounds [6 x i32], [6 x i32]* %5, i64 0, i64 %1378
  %1380 = load i32, i32* %1379, align 4
  %1381 = add nsw i32 %1380, 1
  store i32 %1381, i32* %1379, align 4
  %1382 = trunc i32 %.030.lcssa to i8
  %1383 = getelementptr inbounds [18002 x i8], [18002 x i8]* %291, i64 0, i64 %indvars.iv215
  store i8 %1382, i8* %1383, align 1
  %indvars.iv.next216 = add nuw i64 %indvars.iv215, 1
  br i1 %292, label %1384, label %1888

; <label>:1384:                                   ; preds = %1376
  %1385 = sub nsw i32 %.227, %.123209
  %1386 = add nsw i32 %1385, 1
  %1387 = icmp eq i32 50, %1386
  br i1 %1387, label %1388, label %1888

; <label>:1388:                                   ; preds = %1384
  %1389 = sext i32 %.030.lcssa to i64
  %1390 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %293, i64 0, i64 %1389
  %1391 = sext i32 %.123209 to i64
  %1392 = getelementptr inbounds i16, i16* %10, i64 %1391
  %1393 = load i16, i16* %1392, align 2
  %1394 = zext i16 %1393 to i64
  %1395 = getelementptr inbounds [258 x i32], [258 x i32]* %1390, i64 0, i64 %1394
  %1396 = load i32, i32* %1395, align 4
  %1397 = add nsw i32 %1396, 1
  store i32 %1397, i32* %1395, align 4
  %1398 = sext i32 %.030.lcssa to i64
  %1399 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %294, i64 0, i64 %1398
  %1400 = add nsw i32 %.123209, 1
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds i16, i16* %10, i64 %1401
  %1403 = load i16, i16* %1402, align 2
  %1404 = zext i16 %1403 to i64
  %1405 = getelementptr inbounds [258 x i32], [258 x i32]* %1399, i64 0, i64 %1404
  %1406 = load i32, i32* %1405, align 4
  %1407 = add nsw i32 %1406, 1
  store i32 %1407, i32* %1405, align 4
  %1408 = sext i32 %.030.lcssa to i64
  %1409 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %295, i64 0, i64 %1408
  %1410 = add nsw i32 %.123209, 2
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds i16, i16* %10, i64 %1411
  %1413 = load i16, i16* %1412, align 2
  %1414 = zext i16 %1413 to i64
  %1415 = getelementptr inbounds [258 x i32], [258 x i32]* %1409, i64 0, i64 %1414
  %1416 = load i32, i32* %1415, align 4
  %1417 = add nsw i32 %1416, 1
  store i32 %1417, i32* %1415, align 4
  %1418 = sext i32 %.030.lcssa to i64
  %1419 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %296, i64 0, i64 %1418
  %1420 = add nsw i32 %.123209, 3
  %1421 = sext i32 %1420 to i64
  %1422 = getelementptr inbounds i16, i16* %10, i64 %1421
  %1423 = load i16, i16* %1422, align 2
  %1424 = zext i16 %1423 to i64
  %1425 = getelementptr inbounds [258 x i32], [258 x i32]* %1419, i64 0, i64 %1424
  %1426 = load i32, i32* %1425, align 4
  %1427 = add nsw i32 %1426, 1
  store i32 %1427, i32* %1425, align 4
  %1428 = sext i32 %.030.lcssa to i64
  %1429 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %297, i64 0, i64 %1428
  %1430 = add nsw i32 %.123209, 4
  %1431 = sext i32 %1430 to i64
  %1432 = getelementptr inbounds i16, i16* %10, i64 %1431
  %1433 = load i16, i16* %1432, align 2
  %1434 = zext i16 %1433 to i64
  %1435 = getelementptr inbounds [258 x i32], [258 x i32]* %1429, i64 0, i64 %1434
  %1436 = load i32, i32* %1435, align 4
  %1437 = add nsw i32 %1436, 1
  store i32 %1437, i32* %1435, align 4
  %1438 = sext i32 %.030.lcssa to i64
  %1439 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %298, i64 0, i64 %1438
  %1440 = add nsw i32 %.123209, 5
  %1441 = sext i32 %1440 to i64
  %1442 = getelementptr inbounds i16, i16* %10, i64 %1441
  %1443 = load i16, i16* %1442, align 2
  %1444 = zext i16 %1443 to i64
  %1445 = getelementptr inbounds [258 x i32], [258 x i32]* %1439, i64 0, i64 %1444
  %1446 = load i32, i32* %1445, align 4
  %1447 = add nsw i32 %1446, 1
  store i32 %1447, i32* %1445, align 4
  %1448 = sext i32 %.030.lcssa to i64
  %1449 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %299, i64 0, i64 %1448
  %1450 = add nsw i32 %.123209, 6
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds i16, i16* %10, i64 %1451
  %1453 = load i16, i16* %1452, align 2
  %1454 = zext i16 %1453 to i64
  %1455 = getelementptr inbounds [258 x i32], [258 x i32]* %1449, i64 0, i64 %1454
  %1456 = load i32, i32* %1455, align 4
  %1457 = add nsw i32 %1456, 1
  store i32 %1457, i32* %1455, align 4
  %1458 = sext i32 %.030.lcssa to i64
  %1459 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %300, i64 0, i64 %1458
  %1460 = add nsw i32 %.123209, 7
  %1461 = sext i32 %1460 to i64
  %1462 = getelementptr inbounds i16, i16* %10, i64 %1461
  %1463 = load i16, i16* %1462, align 2
  %1464 = zext i16 %1463 to i64
  %1465 = getelementptr inbounds [258 x i32], [258 x i32]* %1459, i64 0, i64 %1464
  %1466 = load i32, i32* %1465, align 4
  %1467 = add nsw i32 %1466, 1
  store i32 %1467, i32* %1465, align 4
  %1468 = sext i32 %.030.lcssa to i64
  %1469 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %301, i64 0, i64 %1468
  %1470 = add nsw i32 %.123209, 8
  %1471 = sext i32 %1470 to i64
  %1472 = getelementptr inbounds i16, i16* %10, i64 %1471
  %1473 = load i16, i16* %1472, align 2
  %1474 = zext i16 %1473 to i64
  %1475 = getelementptr inbounds [258 x i32], [258 x i32]* %1469, i64 0, i64 %1474
  %1476 = load i32, i32* %1475, align 4
  %1477 = add nsw i32 %1476, 1
  store i32 %1477, i32* %1475, align 4
  %1478 = sext i32 %.030.lcssa to i64
  %1479 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %302, i64 0, i64 %1478
  %1480 = add nsw i32 %.123209, 9
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds i16, i16* %10, i64 %1481
  %1483 = load i16, i16* %1482, align 2
  %1484 = zext i16 %1483 to i64
  %1485 = getelementptr inbounds [258 x i32], [258 x i32]* %1479, i64 0, i64 %1484
  %1486 = load i32, i32* %1485, align 4
  %1487 = add nsw i32 %1486, 1
  store i32 %1487, i32* %1485, align 4
  %1488 = sext i32 %.030.lcssa to i64
  %1489 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %303, i64 0, i64 %1488
  %1490 = add nsw i32 %.123209, 10
  %1491 = sext i32 %1490 to i64
  %1492 = getelementptr inbounds i16, i16* %10, i64 %1491
  %1493 = load i16, i16* %1492, align 2
  %1494 = zext i16 %1493 to i64
  %1495 = getelementptr inbounds [258 x i32], [258 x i32]* %1489, i64 0, i64 %1494
  %1496 = load i32, i32* %1495, align 4
  %1497 = add nsw i32 %1496, 1
  store i32 %1497, i32* %1495, align 4
  %1498 = sext i32 %.030.lcssa to i64
  %1499 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %304, i64 0, i64 %1498
  %1500 = add nsw i32 %.123209, 11
  %1501 = sext i32 %1500 to i64
  %1502 = getelementptr inbounds i16, i16* %10, i64 %1501
  %1503 = load i16, i16* %1502, align 2
  %1504 = zext i16 %1503 to i64
  %1505 = getelementptr inbounds [258 x i32], [258 x i32]* %1499, i64 0, i64 %1504
  %1506 = load i32, i32* %1505, align 4
  %1507 = add nsw i32 %1506, 1
  store i32 %1507, i32* %1505, align 4
  %1508 = sext i32 %.030.lcssa to i64
  %1509 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %305, i64 0, i64 %1508
  %1510 = add nsw i32 %.123209, 12
  %1511 = sext i32 %1510 to i64
  %1512 = getelementptr inbounds i16, i16* %10, i64 %1511
  %1513 = load i16, i16* %1512, align 2
  %1514 = zext i16 %1513 to i64
  %1515 = getelementptr inbounds [258 x i32], [258 x i32]* %1509, i64 0, i64 %1514
  %1516 = load i32, i32* %1515, align 4
  %1517 = add nsw i32 %1516, 1
  store i32 %1517, i32* %1515, align 4
  %1518 = sext i32 %.030.lcssa to i64
  %1519 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %306, i64 0, i64 %1518
  %1520 = add nsw i32 %.123209, 13
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds i16, i16* %10, i64 %1521
  %1523 = load i16, i16* %1522, align 2
  %1524 = zext i16 %1523 to i64
  %1525 = getelementptr inbounds [258 x i32], [258 x i32]* %1519, i64 0, i64 %1524
  %1526 = load i32, i32* %1525, align 4
  %1527 = add nsw i32 %1526, 1
  store i32 %1527, i32* %1525, align 4
  %1528 = sext i32 %.030.lcssa to i64
  %1529 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %307, i64 0, i64 %1528
  %1530 = add nsw i32 %.123209, 14
  %1531 = sext i32 %1530 to i64
  %1532 = getelementptr inbounds i16, i16* %10, i64 %1531
  %1533 = load i16, i16* %1532, align 2
  %1534 = zext i16 %1533 to i64
  %1535 = getelementptr inbounds [258 x i32], [258 x i32]* %1529, i64 0, i64 %1534
  %1536 = load i32, i32* %1535, align 4
  %1537 = add nsw i32 %1536, 1
  store i32 %1537, i32* %1535, align 4
  %1538 = sext i32 %.030.lcssa to i64
  %1539 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %308, i64 0, i64 %1538
  %1540 = add nsw i32 %.123209, 15
  %1541 = sext i32 %1540 to i64
  %1542 = getelementptr inbounds i16, i16* %10, i64 %1541
  %1543 = load i16, i16* %1542, align 2
  %1544 = zext i16 %1543 to i64
  %1545 = getelementptr inbounds [258 x i32], [258 x i32]* %1539, i64 0, i64 %1544
  %1546 = load i32, i32* %1545, align 4
  %1547 = add nsw i32 %1546, 1
  store i32 %1547, i32* %1545, align 4
  %1548 = sext i32 %.030.lcssa to i64
  %1549 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %309, i64 0, i64 %1548
  %1550 = add nsw i32 %.123209, 16
  %1551 = sext i32 %1550 to i64
  %1552 = getelementptr inbounds i16, i16* %10, i64 %1551
  %1553 = load i16, i16* %1552, align 2
  %1554 = zext i16 %1553 to i64
  %1555 = getelementptr inbounds [258 x i32], [258 x i32]* %1549, i64 0, i64 %1554
  %1556 = load i32, i32* %1555, align 4
  %1557 = add nsw i32 %1556, 1
  store i32 %1557, i32* %1555, align 4
  %1558 = sext i32 %.030.lcssa to i64
  %1559 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %310, i64 0, i64 %1558
  %1560 = add nsw i32 %.123209, 17
  %1561 = sext i32 %1560 to i64
  %1562 = getelementptr inbounds i16, i16* %10, i64 %1561
  %1563 = load i16, i16* %1562, align 2
  %1564 = zext i16 %1563 to i64
  %1565 = getelementptr inbounds [258 x i32], [258 x i32]* %1559, i64 0, i64 %1564
  %1566 = load i32, i32* %1565, align 4
  %1567 = add nsw i32 %1566, 1
  store i32 %1567, i32* %1565, align 4
  %1568 = sext i32 %.030.lcssa to i64
  %1569 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %311, i64 0, i64 %1568
  %1570 = add nsw i32 %.123209, 18
  %1571 = sext i32 %1570 to i64
  %1572 = getelementptr inbounds i16, i16* %10, i64 %1571
  %1573 = load i16, i16* %1572, align 2
  %1574 = zext i16 %1573 to i64
  %1575 = getelementptr inbounds [258 x i32], [258 x i32]* %1569, i64 0, i64 %1574
  %1576 = load i32, i32* %1575, align 4
  %1577 = add nsw i32 %1576, 1
  store i32 %1577, i32* %1575, align 4
  %1578 = sext i32 %.030.lcssa to i64
  %1579 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %312, i64 0, i64 %1578
  %1580 = add nsw i32 %.123209, 19
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds i16, i16* %10, i64 %1581
  %1583 = load i16, i16* %1582, align 2
  %1584 = zext i16 %1583 to i64
  %1585 = getelementptr inbounds [258 x i32], [258 x i32]* %1579, i64 0, i64 %1584
  %1586 = load i32, i32* %1585, align 4
  %1587 = add nsw i32 %1586, 1
  store i32 %1587, i32* %1585, align 4
  %1588 = sext i32 %.030.lcssa to i64
  %1589 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %313, i64 0, i64 %1588
  %1590 = add nsw i32 %.123209, 20
  %1591 = sext i32 %1590 to i64
  %1592 = getelementptr inbounds i16, i16* %10, i64 %1591
  %1593 = load i16, i16* %1592, align 2
  %1594 = zext i16 %1593 to i64
  %1595 = getelementptr inbounds [258 x i32], [258 x i32]* %1589, i64 0, i64 %1594
  %1596 = load i32, i32* %1595, align 4
  %1597 = add nsw i32 %1596, 1
  store i32 %1597, i32* %1595, align 4
  %1598 = sext i32 %.030.lcssa to i64
  %1599 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %314, i64 0, i64 %1598
  %1600 = add nsw i32 %.123209, 21
  %1601 = sext i32 %1600 to i64
  %1602 = getelementptr inbounds i16, i16* %10, i64 %1601
  %1603 = load i16, i16* %1602, align 2
  %1604 = zext i16 %1603 to i64
  %1605 = getelementptr inbounds [258 x i32], [258 x i32]* %1599, i64 0, i64 %1604
  %1606 = load i32, i32* %1605, align 4
  %1607 = add nsw i32 %1606, 1
  store i32 %1607, i32* %1605, align 4
  %1608 = sext i32 %.030.lcssa to i64
  %1609 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %315, i64 0, i64 %1608
  %1610 = add nsw i32 %.123209, 22
  %1611 = sext i32 %1610 to i64
  %1612 = getelementptr inbounds i16, i16* %10, i64 %1611
  %1613 = load i16, i16* %1612, align 2
  %1614 = zext i16 %1613 to i64
  %1615 = getelementptr inbounds [258 x i32], [258 x i32]* %1609, i64 0, i64 %1614
  %1616 = load i32, i32* %1615, align 4
  %1617 = add nsw i32 %1616, 1
  store i32 %1617, i32* %1615, align 4
  %1618 = sext i32 %.030.lcssa to i64
  %1619 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %316, i64 0, i64 %1618
  %1620 = add nsw i32 %.123209, 23
  %1621 = sext i32 %1620 to i64
  %1622 = getelementptr inbounds i16, i16* %10, i64 %1621
  %1623 = load i16, i16* %1622, align 2
  %1624 = zext i16 %1623 to i64
  %1625 = getelementptr inbounds [258 x i32], [258 x i32]* %1619, i64 0, i64 %1624
  %1626 = load i32, i32* %1625, align 4
  %1627 = add nsw i32 %1626, 1
  store i32 %1627, i32* %1625, align 4
  %1628 = sext i32 %.030.lcssa to i64
  %1629 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %317, i64 0, i64 %1628
  %1630 = add nsw i32 %.123209, 24
  %1631 = sext i32 %1630 to i64
  %1632 = getelementptr inbounds i16, i16* %10, i64 %1631
  %1633 = load i16, i16* %1632, align 2
  %1634 = zext i16 %1633 to i64
  %1635 = getelementptr inbounds [258 x i32], [258 x i32]* %1629, i64 0, i64 %1634
  %1636 = load i32, i32* %1635, align 4
  %1637 = add nsw i32 %1636, 1
  store i32 %1637, i32* %1635, align 4
  %1638 = sext i32 %.030.lcssa to i64
  %1639 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %318, i64 0, i64 %1638
  %1640 = add nsw i32 %.123209, 25
  %1641 = sext i32 %1640 to i64
  %1642 = getelementptr inbounds i16, i16* %10, i64 %1641
  %1643 = load i16, i16* %1642, align 2
  %1644 = zext i16 %1643 to i64
  %1645 = getelementptr inbounds [258 x i32], [258 x i32]* %1639, i64 0, i64 %1644
  %1646 = load i32, i32* %1645, align 4
  %1647 = add nsw i32 %1646, 1
  store i32 %1647, i32* %1645, align 4
  %1648 = sext i32 %.030.lcssa to i64
  %1649 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %319, i64 0, i64 %1648
  %1650 = add nsw i32 %.123209, 26
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds i16, i16* %10, i64 %1651
  %1653 = load i16, i16* %1652, align 2
  %1654 = zext i16 %1653 to i64
  %1655 = getelementptr inbounds [258 x i32], [258 x i32]* %1649, i64 0, i64 %1654
  %1656 = load i32, i32* %1655, align 4
  %1657 = add nsw i32 %1656, 1
  store i32 %1657, i32* %1655, align 4
  %1658 = sext i32 %.030.lcssa to i64
  %1659 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %320, i64 0, i64 %1658
  %1660 = add nsw i32 %.123209, 27
  %1661 = sext i32 %1660 to i64
  %1662 = getelementptr inbounds i16, i16* %10, i64 %1661
  %1663 = load i16, i16* %1662, align 2
  %1664 = zext i16 %1663 to i64
  %1665 = getelementptr inbounds [258 x i32], [258 x i32]* %1659, i64 0, i64 %1664
  %1666 = load i32, i32* %1665, align 4
  %1667 = add nsw i32 %1666, 1
  store i32 %1667, i32* %1665, align 4
  %1668 = sext i32 %.030.lcssa to i64
  %1669 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %321, i64 0, i64 %1668
  %1670 = add nsw i32 %.123209, 28
  %1671 = sext i32 %1670 to i64
  %1672 = getelementptr inbounds i16, i16* %10, i64 %1671
  %1673 = load i16, i16* %1672, align 2
  %1674 = zext i16 %1673 to i64
  %1675 = getelementptr inbounds [258 x i32], [258 x i32]* %1669, i64 0, i64 %1674
  %1676 = load i32, i32* %1675, align 4
  %1677 = add nsw i32 %1676, 1
  store i32 %1677, i32* %1675, align 4
  %1678 = sext i32 %.030.lcssa to i64
  %1679 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %322, i64 0, i64 %1678
  %1680 = add nsw i32 %.123209, 29
  %1681 = sext i32 %1680 to i64
  %1682 = getelementptr inbounds i16, i16* %10, i64 %1681
  %1683 = load i16, i16* %1682, align 2
  %1684 = zext i16 %1683 to i64
  %1685 = getelementptr inbounds [258 x i32], [258 x i32]* %1679, i64 0, i64 %1684
  %1686 = load i32, i32* %1685, align 4
  %1687 = add nsw i32 %1686, 1
  store i32 %1687, i32* %1685, align 4
  %1688 = sext i32 %.030.lcssa to i64
  %1689 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %323, i64 0, i64 %1688
  %1690 = add nsw i32 %.123209, 30
  %1691 = sext i32 %1690 to i64
  %1692 = getelementptr inbounds i16, i16* %10, i64 %1691
  %1693 = load i16, i16* %1692, align 2
  %1694 = zext i16 %1693 to i64
  %1695 = getelementptr inbounds [258 x i32], [258 x i32]* %1689, i64 0, i64 %1694
  %1696 = load i32, i32* %1695, align 4
  %1697 = add nsw i32 %1696, 1
  store i32 %1697, i32* %1695, align 4
  %1698 = sext i32 %.030.lcssa to i64
  %1699 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %324, i64 0, i64 %1698
  %1700 = add nsw i32 %.123209, 31
  %1701 = sext i32 %1700 to i64
  %1702 = getelementptr inbounds i16, i16* %10, i64 %1701
  %1703 = load i16, i16* %1702, align 2
  %1704 = zext i16 %1703 to i64
  %1705 = getelementptr inbounds [258 x i32], [258 x i32]* %1699, i64 0, i64 %1704
  %1706 = load i32, i32* %1705, align 4
  %1707 = add nsw i32 %1706, 1
  store i32 %1707, i32* %1705, align 4
  %1708 = sext i32 %.030.lcssa to i64
  %1709 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %325, i64 0, i64 %1708
  %1710 = add nsw i32 %.123209, 32
  %1711 = sext i32 %1710 to i64
  %1712 = getelementptr inbounds i16, i16* %10, i64 %1711
  %1713 = load i16, i16* %1712, align 2
  %1714 = zext i16 %1713 to i64
  %1715 = getelementptr inbounds [258 x i32], [258 x i32]* %1709, i64 0, i64 %1714
  %1716 = load i32, i32* %1715, align 4
  %1717 = add nsw i32 %1716, 1
  store i32 %1717, i32* %1715, align 4
  %1718 = sext i32 %.030.lcssa to i64
  %1719 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %326, i64 0, i64 %1718
  %1720 = add nsw i32 %.123209, 33
  %1721 = sext i32 %1720 to i64
  %1722 = getelementptr inbounds i16, i16* %10, i64 %1721
  %1723 = load i16, i16* %1722, align 2
  %1724 = zext i16 %1723 to i64
  %1725 = getelementptr inbounds [258 x i32], [258 x i32]* %1719, i64 0, i64 %1724
  %1726 = load i32, i32* %1725, align 4
  %1727 = add nsw i32 %1726, 1
  store i32 %1727, i32* %1725, align 4
  %1728 = sext i32 %.030.lcssa to i64
  %1729 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %327, i64 0, i64 %1728
  %1730 = add nsw i32 %.123209, 34
  %1731 = sext i32 %1730 to i64
  %1732 = getelementptr inbounds i16, i16* %10, i64 %1731
  %1733 = load i16, i16* %1732, align 2
  %1734 = zext i16 %1733 to i64
  %1735 = getelementptr inbounds [258 x i32], [258 x i32]* %1729, i64 0, i64 %1734
  %1736 = load i32, i32* %1735, align 4
  %1737 = add nsw i32 %1736, 1
  store i32 %1737, i32* %1735, align 4
  %1738 = sext i32 %.030.lcssa to i64
  %1739 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %328, i64 0, i64 %1738
  %1740 = add nsw i32 %.123209, 35
  %1741 = sext i32 %1740 to i64
  %1742 = getelementptr inbounds i16, i16* %10, i64 %1741
  %1743 = load i16, i16* %1742, align 2
  %1744 = zext i16 %1743 to i64
  %1745 = getelementptr inbounds [258 x i32], [258 x i32]* %1739, i64 0, i64 %1744
  %1746 = load i32, i32* %1745, align 4
  %1747 = add nsw i32 %1746, 1
  store i32 %1747, i32* %1745, align 4
  %1748 = sext i32 %.030.lcssa to i64
  %1749 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %329, i64 0, i64 %1748
  %1750 = add nsw i32 %.123209, 36
  %1751 = sext i32 %1750 to i64
  %1752 = getelementptr inbounds i16, i16* %10, i64 %1751
  %1753 = load i16, i16* %1752, align 2
  %1754 = zext i16 %1753 to i64
  %1755 = getelementptr inbounds [258 x i32], [258 x i32]* %1749, i64 0, i64 %1754
  %1756 = load i32, i32* %1755, align 4
  %1757 = add nsw i32 %1756, 1
  store i32 %1757, i32* %1755, align 4
  %1758 = sext i32 %.030.lcssa to i64
  %1759 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %330, i64 0, i64 %1758
  %1760 = add nsw i32 %.123209, 37
  %1761 = sext i32 %1760 to i64
  %1762 = getelementptr inbounds i16, i16* %10, i64 %1761
  %1763 = load i16, i16* %1762, align 2
  %1764 = zext i16 %1763 to i64
  %1765 = getelementptr inbounds [258 x i32], [258 x i32]* %1759, i64 0, i64 %1764
  %1766 = load i32, i32* %1765, align 4
  %1767 = add nsw i32 %1766, 1
  store i32 %1767, i32* %1765, align 4
  %1768 = sext i32 %.030.lcssa to i64
  %1769 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %331, i64 0, i64 %1768
  %1770 = add nsw i32 %.123209, 38
  %1771 = sext i32 %1770 to i64
  %1772 = getelementptr inbounds i16, i16* %10, i64 %1771
  %1773 = load i16, i16* %1772, align 2
  %1774 = zext i16 %1773 to i64
  %1775 = getelementptr inbounds [258 x i32], [258 x i32]* %1769, i64 0, i64 %1774
  %1776 = load i32, i32* %1775, align 4
  %1777 = add nsw i32 %1776, 1
  store i32 %1777, i32* %1775, align 4
  %1778 = sext i32 %.030.lcssa to i64
  %1779 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %332, i64 0, i64 %1778
  %1780 = add nsw i32 %.123209, 39
  %1781 = sext i32 %1780 to i64
  %1782 = getelementptr inbounds i16, i16* %10, i64 %1781
  %1783 = load i16, i16* %1782, align 2
  %1784 = zext i16 %1783 to i64
  %1785 = getelementptr inbounds [258 x i32], [258 x i32]* %1779, i64 0, i64 %1784
  %1786 = load i32, i32* %1785, align 4
  %1787 = add nsw i32 %1786, 1
  store i32 %1787, i32* %1785, align 4
  %1788 = sext i32 %.030.lcssa to i64
  %1789 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %333, i64 0, i64 %1788
  %1790 = add nsw i32 %.123209, 40
  %1791 = sext i32 %1790 to i64
  %1792 = getelementptr inbounds i16, i16* %10, i64 %1791
  %1793 = load i16, i16* %1792, align 2
  %1794 = zext i16 %1793 to i64
  %1795 = getelementptr inbounds [258 x i32], [258 x i32]* %1789, i64 0, i64 %1794
  %1796 = load i32, i32* %1795, align 4
  %1797 = add nsw i32 %1796, 1
  store i32 %1797, i32* %1795, align 4
  %1798 = sext i32 %.030.lcssa to i64
  %1799 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %334, i64 0, i64 %1798
  %1800 = add nsw i32 %.123209, 41
  %1801 = sext i32 %1800 to i64
  %1802 = getelementptr inbounds i16, i16* %10, i64 %1801
  %1803 = load i16, i16* %1802, align 2
  %1804 = zext i16 %1803 to i64
  %1805 = getelementptr inbounds [258 x i32], [258 x i32]* %1799, i64 0, i64 %1804
  %1806 = load i32, i32* %1805, align 4
  %1807 = add nsw i32 %1806, 1
  store i32 %1807, i32* %1805, align 4
  %1808 = sext i32 %.030.lcssa to i64
  %1809 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %335, i64 0, i64 %1808
  %1810 = add nsw i32 %.123209, 42
  %1811 = sext i32 %1810 to i64
  %1812 = getelementptr inbounds i16, i16* %10, i64 %1811
  %1813 = load i16, i16* %1812, align 2
  %1814 = zext i16 %1813 to i64
  %1815 = getelementptr inbounds [258 x i32], [258 x i32]* %1809, i64 0, i64 %1814
  %1816 = load i32, i32* %1815, align 4
  %1817 = add nsw i32 %1816, 1
  store i32 %1817, i32* %1815, align 4
  %1818 = sext i32 %.030.lcssa to i64
  %1819 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %336, i64 0, i64 %1818
  %1820 = add nsw i32 %.123209, 43
  %1821 = sext i32 %1820 to i64
  %1822 = getelementptr inbounds i16, i16* %10, i64 %1821
  %1823 = load i16, i16* %1822, align 2
  %1824 = zext i16 %1823 to i64
  %1825 = getelementptr inbounds [258 x i32], [258 x i32]* %1819, i64 0, i64 %1824
  %1826 = load i32, i32* %1825, align 4
  %1827 = add nsw i32 %1826, 1
  store i32 %1827, i32* %1825, align 4
  %1828 = sext i32 %.030.lcssa to i64
  %1829 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %337, i64 0, i64 %1828
  %1830 = add nsw i32 %.123209, 44
  %1831 = sext i32 %1830 to i64
  %1832 = getelementptr inbounds i16, i16* %10, i64 %1831
  %1833 = load i16, i16* %1832, align 2
  %1834 = zext i16 %1833 to i64
  %1835 = getelementptr inbounds [258 x i32], [258 x i32]* %1829, i64 0, i64 %1834
  %1836 = load i32, i32* %1835, align 4
  %1837 = add nsw i32 %1836, 1
  store i32 %1837, i32* %1835, align 4
  %1838 = sext i32 %.030.lcssa to i64
  %1839 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %338, i64 0, i64 %1838
  %1840 = add nsw i32 %.123209, 45
  %1841 = sext i32 %1840 to i64
  %1842 = getelementptr inbounds i16, i16* %10, i64 %1841
  %1843 = load i16, i16* %1842, align 2
  %1844 = zext i16 %1843 to i64
  %1845 = getelementptr inbounds [258 x i32], [258 x i32]* %1839, i64 0, i64 %1844
  %1846 = load i32, i32* %1845, align 4
  %1847 = add nsw i32 %1846, 1
  store i32 %1847, i32* %1845, align 4
  %1848 = sext i32 %.030.lcssa to i64
  %1849 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %339, i64 0, i64 %1848
  %1850 = add nsw i32 %.123209, 46
  %1851 = sext i32 %1850 to i64
  %1852 = getelementptr inbounds i16, i16* %10, i64 %1851
  %1853 = load i16, i16* %1852, align 2
  %1854 = zext i16 %1853 to i64
  %1855 = getelementptr inbounds [258 x i32], [258 x i32]* %1849, i64 0, i64 %1854
  %1856 = load i32, i32* %1855, align 4
  %1857 = add nsw i32 %1856, 1
  store i32 %1857, i32* %1855, align 4
  %1858 = sext i32 %.030.lcssa to i64
  %1859 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %340, i64 0, i64 %1858
  %1860 = add nsw i32 %.123209, 47
  %1861 = sext i32 %1860 to i64
  %1862 = getelementptr inbounds i16, i16* %10, i64 %1861
  %1863 = load i16, i16* %1862, align 2
  %1864 = zext i16 %1863 to i64
  %1865 = getelementptr inbounds [258 x i32], [258 x i32]* %1859, i64 0, i64 %1864
  %1866 = load i32, i32* %1865, align 4
  %1867 = add nsw i32 %1866, 1
  store i32 %1867, i32* %1865, align 4
  %1868 = sext i32 %.030.lcssa to i64
  %1869 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %341, i64 0, i64 %1868
  %1870 = add nsw i32 %.123209, 48
  %1871 = sext i32 %1870 to i64
  %1872 = getelementptr inbounds i16, i16* %10, i64 %1871
  %1873 = load i16, i16* %1872, align 2
  %1874 = zext i16 %1873 to i64
  %1875 = getelementptr inbounds [258 x i32], [258 x i32]* %1869, i64 0, i64 %1874
  %1876 = load i32, i32* %1875, align 4
  %1877 = add nsw i32 %1876, 1
  store i32 %1877, i32* %1875, align 4
  %1878 = sext i32 %.030.lcssa to i64
  %1879 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %342, i64 0, i64 %1878
  %1880 = add nsw i32 %.123209, 49
  %1881 = sext i32 %1880 to i64
  %1882 = getelementptr inbounds i16, i16* %10, i64 %1881
  %1883 = load i16, i16* %1882, align 2
  %1884 = zext i16 %1883 to i64
  %1885 = getelementptr inbounds [258 x i32], [258 x i32]* %1879, i64 0, i64 %1884
  %1886 = load i32, i32* %1885, align 4
  %1887 = add nsw i32 %1886, 1
  store i32 %1887, i32* %1885, align 4
  br label %._crit_edge204

; <label>:1888:                                   ; preds = %1384, %1376
  %1889 = icmp sle i32 %.123209, %.227
  br i1 %1889, label %.lr.ph203, label %._crit_edge204

.lr.ph203:                                        ; preds = %1888
  %1890 = sext i32 %.123209 to i64
  %1891 = sext i32 %.227 to i64
  %1892 = add i64 %1891, 1
  %1893 = sext i32 %.030.lcssa to i64
  %1894 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %343, i64 0, i64 %1893
  %scevgep76 = getelementptr i16, i16* %10, i64 %1890
  %1895 = sub i64 %1892, %1890
  br label %1896

; <label>:1896:                                   ; preds = %.lr.ph203, %1896
  %lsr.iv77 = phi i64 [ 0, %.lr.ph203 ], [ %lsr.iv.next78, %1896 ]
  call void @unroll_loop(i32 67)
  %scevgep79 = getelementptr i16, i16* %scevgep76, i64 %lsr.iv77
  %1897 = load i16, i16* %scevgep79, align 2
  %1898 = zext i16 %1897 to i64
  %1899 = getelementptr inbounds [258 x i32], [258 x i32]* %1894, i64 0, i64 %1898
  %1900 = load i32, i32* %1899, align 4
  %1901 = add nsw i32 %1900, 1
  store i32 %1901, i32* %1899, align 4
  %lsr.iv.next78 = add i64 %lsr.iv77, 1
  %exitcond24 = icmp ne i64 %1895, %lsr.iv.next78
  br i1 %exitcond24, label %1896, label %._crit_edge204.loopexit

._crit_edge204.loopexit:                          ; preds = %1896
  br label %._crit_edge204

._crit_edge204:                                   ; preds = %._crit_edge204.loopexit, %1888, %1388
  %1902 = add nsw i32 %.227, 1
  %1903 = load i32, i32* %130, align 4
  %1904 = icmp sge i32 %1902, %1903
  br i1 %1904, label %._crit_edge212, label %.lr.ph211

; <label>:1905:                                   ; preds = %._crit_edge173, %._crit_edge212
  %.136.lcssa = phi i32 [ %373, %._crit_edge212 ], [ 0, %._crit_edge173 ]
  %.029.lcssa = phi i32 [ %split214, %._crit_edge212 ], [ 0, %._crit_edge173 ]
  %1906 = load i32, i32* %131, align 8
  %1907 = icmp sge i32 %1906, 3
  br i1 %1907, label %1908, label %1920

; <label>:1908:                                   ; preds = %1905
  %1909 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1910 = add nuw nsw i32 %.034227, 1
  %1911 = sdiv i32 %.029.lcssa, 8
  %1912 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1909, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4.151, i64 0, i64 0), i32 %1910, i32 %1911)
  br label %1913

; <label>:1913:                                   ; preds = %1908, %1913
  %lsr.iv80 = phi i64 [ 0, %1908 ], [ %lsr.iv.next81, %1913 ]
  call void @unroll_loop(i32 68)
  %1914 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %uglygep82 = getelementptr i8, i8* %6, i64 %lsr.iv80
  %uglygep8283 = bitcast i8* %uglygep82 to i32*
  %1915 = load i32, i32* %uglygep8283, align 4
  %1916 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1914, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5.152, i64 0, i64 0), i32 %1915)
  %lsr.iv.next81 = add nuw nsw i64 %lsr.iv80, 4
  %exitcond25 = icmp ne i64 %346, %lsr.iv.next81
  br i1 %exitcond25, label %1913, label %1917

; <label>:1917:                                   ; preds = %1913
  %1918 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %1919 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1918, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.153, i64 0, i64 0))
  br label %1920

; <label>:1920:                                   ; preds = %1917, %1905
  br label %1921

; <label>:1921:                                   ; preds = %1920, %1921
  %lsr.iv92 = phi i64 [ %59, %1920 ], [ %lsr.iv.next93, %1921 ]
  %lsr.iv89 = phi %struct.EState* [ %scevgep3334, %1920 ], [ %1923, %1921 ]
  %lsr.iv86 = phi %struct.EState* [ %scevgep8485, %1920 ], [ %1922, %1921 ]
  %lsr.iv8991 = bitcast %struct.EState* %lsr.iv89 to i32*
  %lsr.iv8688 = bitcast %struct.EState* %lsr.iv86 to i8*
  call void @unroll_loop(i32 69)
  call void @BZ2_hbMakeCodeLengths(i8* %lsr.iv8688, i32* %lsr.iv8991, i32 %27, i32 17)
  %scevgep87 = getelementptr %struct.EState, %struct.EState* %lsr.iv86, i64 0, i32 22, i64 130
  %1922 = bitcast i8* %scevgep87 to %struct.EState*
  %scevgep90 = getelementptr %struct.EState, %struct.EState* %lsr.iv89, i64 0, i32 32, i64 90
  %1923 = bitcast i32* %scevgep90 to %struct.EState*
  %lsr.iv.next93 = add nsw i64 %lsr.iv92, -1
  %exitcond26 = icmp ne i64 %lsr.iv.next93, 0
  br i1 %exitcond26, label %1921, label %1924

; <label>:1924:                                   ; preds = %1921
  %1925 = add nuw nsw i32 %.034227, 1
  %exitcond228 = icmp ne i32 %1925, 4
  br i1 %exitcond228, label %347, label %1926

; <label>:1926:                                   ; preds = %1924
  %.035.lcssa = phi i32 [ %.136.lcssa, %1924 ]
  %1927 = icmp slt i32 %.346, 8
  br i1 %1927, label %1929, label %1928

; <label>:1928:                                   ; preds = %1926
  call void @BZ2_bz__AssertH__fail(i32 3002)
  br label %1929

; <label>:1929:                                   ; preds = %1928, %1926
  %1930 = icmp slt i32 %.035.lcssa, 32768
  %1931 = icmp sle i32 %.035.lcssa, 18002
  %or.cond3 = and i1 %1930, %1931
  br i1 %or.cond3, label %1933, label %1932

; <label>:1932:                                   ; preds = %1929
  call void @BZ2_bz__AssertH__fail(i32 3003)
  br label %1933

; <label>:1933:                                   ; preds = %1929, %1932
  %1934 = zext i32 %.346 to i64
  br label %1935

; <label>:1935:                                   ; preds = %1933, %1935
  %indvars.iv148 = phi i64 [ 0, %1933 ], [ %indvars.iv.next149, %1935 ]
  %scevgep27 = getelementptr [6 x i8], [6 x i8]* %7, i64 0, i64 %indvars.iv148
  %tmp = trunc i64 %indvars.iv148 to i8
  store i8 %tmp, i8* %scevgep27, align 1
  %indvars.iv.next149 = add nuw nsw i64 %indvars.iv148, 1
  %exitcond15 = icmp ne i64 %1934, %indvars.iv.next149
  br i1 %exitcond15, label %1935, label %1936

; <label>:1936:                                   ; preds = %1935
  %1937 = icmp slt i32 0, %.035.lcssa
  br i1 %1937, label %.lr.ph141.preheader, label %._crit_edge142

.lr.ph141.preheader:                              ; preds = %1936
  %1938 = zext i32 %.035.lcssa to i64
  %1939 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %1940 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  %1941 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 34
  %.promoted = load i8, i8* %1940, align 1
  %scevgep24 = getelementptr [6 x i8], [6 x i8]* %7, i64 0, i64 1
  br label %.lr.ph141

.lr.ph141:                                        ; preds = %.lr.ph141.preheader, %1952
  %1942 = phi i8 [ %.037.lcssa, %1952 ], [ %.promoted, %.lr.ph141.preheader ]
  %indvars.iv143 = phi i64 [ %indvars.iv.next144, %1952 ], [ 0, %.lr.ph141.preheader ]
  call void @unroll_loop(i32 70)
  %1943 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1939, i64 0, i64 %indvars.iv143
  %1944 = load i8, i8* %1943, align 1
  %1945 = zext i8 %1944 to i32
  %1946 = zext i8 %1942 to i32
  %1947 = icmp ne i32 %1945, %1946
  br i1 %1947, label %.lr.ph133.preheader, label %1952

.lr.ph133.preheader:                              ; preds = %.lr.ph141
  br label %.lr.ph133

.lr.ph133:                                        ; preds = %.lr.ph133.preheader, %.lr.ph133
  %indvars.iv137 = phi i64 [ %indvars.iv.next138, %.lr.ph133 ], [ 0, %.lr.ph133.preheader ]
  %.037130 = phi i8 [ %1948, %.lr.ph133 ], [ %1942, %.lr.ph133.preheader ]
  call void @unroll_loop(i32 71)
  %indvars.iv.next138 = add nuw nsw i64 %indvars.iv137, 1
  %scevgep26 = getelementptr i8, i8* %scevgep24, i64 %indvars.iv137
  %1948 = load i8, i8* %scevgep26, align 1
  %scevgep25 = getelementptr i8, i8* %scevgep24, i64 %indvars.iv137
  store i8 %.037130, i8* %scevgep25, align 1
  %1949 = zext i8 %1948 to i32
  %1950 = icmp ne i32 %1945, %1949
  br i1 %1950, label %.lr.ph133, label %._crit_edge134

._crit_edge134:                                   ; preds = %.lr.ph133
  %split135 = phi i8 [ %1948, %.lr.ph133 ]
  %split136.wide = phi i64 [ %indvars.iv.next138, %.lr.ph133 ]
  %1951 = trunc i64 %split136.wide to i32
  br label %1952

; <label>:1952:                                   ; preds = %._crit_edge134, %.lr.ph141
  %.037.lcssa = phi i8 [ %split135, %._crit_edge134 ], [ %1942, %.lr.ph141 ]
  %.018.lcssa = phi i32 [ %1951, %._crit_edge134 ], [ 0, %.lr.ph141 ]
  %1953 = trunc i32 %.018.lcssa to i8
  %1954 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1941, i64 0, i64 %indvars.iv143
  store i8 %1953, i8* %1954, align 1
  %indvars.iv.next144 = add nuw nsw i64 %indvars.iv143, 1
  %exitcond14 = icmp ne i64 %indvars.iv.next144, %1938
  br i1 %exitcond14, label %.lr.ph141, label %._crit_edge142.loopexit

._crit_edge142.loopexit:                          ; preds = %1952
  %.037.lcssa.lcssa = phi i8 [ %.037.lcssa, %1952 ]
  %1955 = getelementptr inbounds [6 x i8], [6 x i8]* %7, i64 0, i64 0
  store i8 %.037.lcssa.lcssa, i8* %1940, align 1
  br label %._crit_edge142

._crit_edge142:                                   ; preds = %._crit_edge142.loopexit, %1936
  %1956 = add i32 %26, 2
  %1957 = zext i32 %1956 to i64
  %1958 = zext i32 %.346 to i64
  %1959 = icmp slt i32 0, %27
  %1960 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 36
  %1961 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %scevgep15 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 35, i64 0, i64 0
  %scevgep1516 = bitcast i8* %scevgep15 to %struct.EState*
  br label %1962

; <label>:1962:                                   ; preds = %._crit_edge142, %1982
  %lsr.iv17 = phi %struct.EState* [ %scevgep1516, %._crit_edge142 ], [ %1987, %1982 ]
  %indvars.iv126 = phi i64 [ 0, %._crit_edge142 ], [ %indvars.iv.next127, %1982 ]
  %lsr.iv1719 = bitcast %struct.EState* %lsr.iv17 to i8*
  call void @unroll_loop(i32 72)
  br i1 %1959, label %.lr.ph117.preheader, label %._crit_edge118

.lr.ph117.preheader:                              ; preds = %1962
  br label %.lr.ph117

.lr.ph117:                                        ; preds = %.lr.ph117.preheader, %1976
  %indvars.iv121 = phi i64 [ %indvars.iv.next122, %1976 ], [ 0, %.lr.ph117.preheader ]
  %.038114 = phi i32 [ %.139, %1976 ], [ 32, %.lr.ph117.preheader ]
  %.040113 = phi i32 [ %.141, %1976 ], [ 0, %.lr.ph117.preheader ]
  call void @unroll_loop(i32 73)
  %uglygep20 = getelementptr i8, i8* %lsr.iv1719, i64 %indvars.iv121
  %1963 = load i8, i8* %uglygep20, align 1
  %1964 = zext i8 %1963 to i32
  %1965 = icmp sgt i32 %1964, %.040113
  br i1 %1965, label %1966, label %1969

; <label>:1966:                                   ; preds = %.lr.ph117
  %uglygep21 = getelementptr i8, i8* %lsr.iv1719, i64 %indvars.iv121
  %1967 = load i8, i8* %uglygep21, align 1
  %1968 = zext i8 %1967 to i32
  br label %1969

; <label>:1969:                                   ; preds = %1966, %.lr.ph117
  %.141 = phi i32 [ %1968, %1966 ], [ %.040113, %.lr.ph117 ]
  %uglygep22 = getelementptr i8, i8* %lsr.iv1719, i64 %indvars.iv121
  %1970 = load i8, i8* %uglygep22, align 1
  %1971 = zext i8 %1970 to i32
  %1972 = icmp slt i32 %1971, %.038114
  br i1 %1972, label %1973, label %1976

; <label>:1973:                                   ; preds = %1969
  %uglygep23 = getelementptr i8, i8* %lsr.iv1719, i64 %indvars.iv121
  %1974 = load i8, i8* %uglygep23, align 1
  %1975 = zext i8 %1974 to i32
  br label %1976

; <label>:1976:                                   ; preds = %1969, %1973
  %.139 = phi i32 [ %1975, %1973 ], [ %.038114, %1969 ]
  %indvars.iv.next122 = add nuw nsw i64 %indvars.iv121, 1
  %exitcond12 = icmp ne i64 %1957, %indvars.iv.next122
  br i1 %exitcond12, label %.lr.ph117, label %._crit_edge118.loopexit

._crit_edge118.loopexit:                          ; preds = %1976
  %.040.lcssa.ph = phi i32 [ %.141, %1976 ]
  %.038.lcssa.ph = phi i32 [ %.139, %1976 ]
  br label %._crit_edge118

._crit_edge118:                                   ; preds = %._crit_edge118.loopexit, %1962
  %.040.lcssa = phi i32 [ 0, %1962 ], [ %.040.lcssa.ph, %._crit_edge118.loopexit ]
  %.038.lcssa = phi i32 [ 32, %1962 ], [ %.038.lcssa.ph, %._crit_edge118.loopexit ]
  %1977 = icmp sgt i32 %.040.lcssa, 17
  br i1 %1977, label %1978, label %1979

; <label>:1978:                                   ; preds = %._crit_edge118
  call void @BZ2_bz__AssertH__fail(i32 3004)
  br label %1979

; <label>:1979:                                   ; preds = %1978, %._crit_edge118
  %1980 = icmp slt i32 %.038.lcssa, 1
  br i1 %1980, label %1981, label %1982

; <label>:1981:                                   ; preds = %1979
  call void @BZ2_bz__AssertH__fail(i32 3005)
  br label %1982

; <label>:1982:                                   ; preds = %1981, %1979
  %1983 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %1960, i64 0, i64 %indvars.iv126
  %1984 = getelementptr inbounds [258 x i32], [258 x i32]* %1983, i64 0, i64 0
  %1985 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %1961, i64 0, i64 %indvars.iv126
  %1986 = getelementptr inbounds [258 x i8], [258 x i8]* %1985, i64 0, i64 0
  call void @BZ2_hbAssignCodes(i32* %1984, i8* %1986, i32 %.038.lcssa, i32 %.040.lcssa, i32 %27)
  %indvars.iv.next127 = add nuw nsw i64 %indvars.iv126, 1
  %scevgep18 = getelementptr %struct.EState, %struct.EState* %lsr.iv17, i64 0, i32 22, i64 130
  %1987 = bitcast i8* %scevgep18 to %struct.EState*
  %exitcond13 = icmp ne i64 %indvars.iv.next127, %1958
  br i1 %exitcond13, label %1962, label %.preheader6.preheader

.preheader6.preheader:                            ; preds = %1982
  %indvars.iv110.ph = phi i64 [ 0, %1982 ]
  %scevgep9 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 22, i64 0
  %scevgep910 = bitcast i8* %scevgep9 to %struct.EState*
  br label %.preheader6

.preheader6:                                      ; preds = %.preheader6.preheader, %1995
  %lsr.iv11 = phi %struct.EState* [ %scevgep910, %.preheader6.preheader ], [ %1996, %1995 ]
  %indvars.iv110 = phi i64 [ %indvars.iv.next111, %1995 ], [ %indvars.iv110.ph, %.preheader6.preheader ]
  %lsr.iv1113 = bitcast %struct.EState* %lsr.iv11 to i8*
  %1988 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i64 0, i64 %indvars.iv110
  store i8 0, i8* %1988, align 1
  %1989 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i64 0, i64 %indvars.iv110
  br label %1990

; <label>:1990:                                   ; preds = %.preheader6, %1994
  %indvars.iv106 = phi i64 [ 0, %.preheader6 ], [ %indvars.iv.next107, %1994 ]
  call void @unroll_loop(i32 74)
  %uglygep14 = getelementptr i8, i8* %lsr.iv1113, i64 %indvars.iv106
  %1991 = load i8, i8* %uglygep14, align 1
  %1992 = icmp ne i8 %1991, 0
  br i1 %1992, label %1993, label %1994

; <label>:1993:                                   ; preds = %1990
  store i8 1, i8* %1989, align 1
  br label %1994

; <label>:1994:                                   ; preds = %1990, %1993
  %indvars.iv.next107 = add nuw nsw i64 %indvars.iv106, 1
  %exitcond108 = icmp ne i64 %indvars.iv.next107, 16
  br i1 %exitcond108, label %1990, label %1995

; <label>:1995:                                   ; preds = %1994
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %scevgep12 = getelementptr %struct.EState, %struct.EState* %lsr.iv11, i64 0, i32 3
  %1996 = bitcast i32* %scevgep12 to %struct.EState*
  %exitcond112 = icmp ne i64 %indvars.iv.next111, 16
  br i1 %exitcond112, label %.preheader6, label %1997

; <label>:1997:                                   ; preds = %1995
  %1998 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %1999 = load i32, i32* %1998, align 4
  br label %2000

; <label>:2000:                                   ; preds = %1997, %2005
  %indvars.iv102 = phi i64 [ 0, %1997 ], [ %indvars.iv.next103, %2005 ]
  call void @unroll_loop(i32 75)
  %scevgep8 = getelementptr [16 x i8], [16 x i8]* %8, i64 0, i64 %indvars.iv102
  %2001 = load i8, i8* %scevgep8, align 1
  %2002 = icmp ne i8 %2001, 0
  br i1 %2002, label %2003, label %2004

; <label>:2003:                                   ; preds = %2000
  call void @bsW(%struct.EState* %0, i32 1, i32 1)
  br label %2005

; <label>:2004:                                   ; preds = %2000
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  br label %2005

; <label>:2005:                                   ; preds = %2003, %2004
  %indvars.iv.next103 = add nuw nsw i64 %indvars.iv102, 1
  %exitcond104 = icmp ne i64 %indvars.iv.next103, 16
  br i1 %exitcond104, label %2000, label %.preheader5.preheader

.preheader5.preheader:                            ; preds = %2005
  %indvars.iv98.ph = phi i64 [ 0, %2005 ]
  %scevgep3 = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 22, i64 0
  %scevgep34 = bitcast i8* %scevgep3 to %struct.EState*
  br label %.preheader5

.preheader5:                                      ; preds = %.preheader5.preheader, %.loopexit
  %lsr.iv5 = phi %struct.EState* [ %scevgep34, %.preheader5.preheader ], [ %2014, %.loopexit ]
  %indvars.iv98 = phi i64 [ %indvars.iv.next99, %.loopexit ], [ %indvars.iv98.ph, %.preheader5.preheader ]
  %lsr.iv57 = bitcast %struct.EState* %lsr.iv5 to i8*
  %2006 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i64 0, i64 %indvars.iv98
  %2007 = load i8, i8* %2006, align 1
  %2008 = icmp ne i8 %2007, 0
  br i1 %2008, label %.preheader.preheader, label %.loopexit

.preheader.preheader:                             ; preds = %.preheader5
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %2013
  %indvars.iv94 = phi i64 [ %indvars.iv.next95, %2013 ], [ 0, %.preheader.preheader ]
  call void @unroll_loop(i32 76)
  %uglygep = getelementptr i8, i8* %lsr.iv57, i64 %indvars.iv94
  %2009 = load i8, i8* %uglygep, align 1
  %2010 = icmp ne i8 %2009, 0
  br i1 %2010, label %2011, label %2012

; <label>:2011:                                   ; preds = %.preheader
  call void @bsW(%struct.EState* %0, i32 1, i32 1)
  br label %2013

; <label>:2012:                                   ; preds = %.preheader
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  br label %2013

; <label>:2013:                                   ; preds = %2011, %2012
  %indvars.iv.next95 = add nuw nsw i64 %indvars.iv94, 1
  %exitcond96 = icmp ne i64 %indvars.iv.next95, 16
  br i1 %exitcond96, label %.preheader, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %2013
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.preheader5
  %indvars.iv.next99 = add nuw nsw i64 %indvars.iv98, 1
  %scevgep6 = getelementptr %struct.EState, %struct.EState* %lsr.iv5, i64 0, i32 3
  %2014 = bitcast i32* %scevgep6 to %struct.EState*
  %exitcond100 = icmp ne i64 %indvars.iv.next99, 16
  br i1 %exitcond100, label %.preheader5, label %2015

; <label>:2015:                                   ; preds = %.loopexit
  %2016 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %2017 = load i32, i32* %2016, align 8
  %2018 = icmp sge i32 %2017, 3
  br i1 %2018, label %2019, label %2026

; <label>:2019:                                   ; preds = %2015
  %2020 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2021 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2022 = load i32, i32* %2021, align 4
  %2023 = sub nsw i32 %2022, %1999
  %2024 = getelementptr [26 x i8], [26 x i8]* @.str.7.154, i32 0, i32 0
  %2025 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2020, i8* %2024, i32 %2023)
  br label %2026

; <label>:2026:                                   ; preds = %2019, %2015
  %2027 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2028 = load i32, i32* %2027, align 4
  call void @bsW(%struct.EState* %0, i32 3, i32 %.346)
  call void @bsW(%struct.EState* %0, i32 15, i32 %.035.lcssa)
  %2029 = icmp slt i32 0, %.035.lcssa
  br i1 %2029, label %.lr.ph87.preheader, label %._crit_edge88

.lr.ph87.preheader:                               ; preds = %2026
  %2030 = zext i32 %.035.lcssa to i64
  %2031 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 34
  br label %.lr.ph87

.lr.ph87:                                         ; preds = %.lr.ph87.preheader, %._crit_edge84
  %indvars.iv89 = phi i64 [ %indvars.iv.next90, %._crit_edge84 ], [ 0, %.lr.ph87.preheader ]
  call void @unroll_loop(i32 77)
  %2032 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2031, i64 0, i64 %indvars.iv89
  %2033 = load i8, i8* %2032, align 1
  %2034 = zext i8 %2033 to i32
  %2035 = icmp slt i32 0, %2034
  br i1 %2035, label %.lr.ph83.preheader, label %._crit_edge84

.lr.ph83.preheader:                               ; preds = %.lr.ph87
  br label %.lr.ph83

.lr.ph83:                                         ; preds = %.lr.ph83.preheader, %.lr.ph83
  %.32181 = phi i32 [ %2036, %.lr.ph83 ], [ 0, %.lr.ph83.preheader ]
  call void @unroll_loop(i32 78)
  call void @bsW(%struct.EState* %0, i32 1, i32 1)
  %2036 = add nuw nsw i32 %.32181, 1
  %2037 = load i8, i8* %2032, align 1
  %2038 = zext i8 %2037 to i32
  %2039 = icmp ult i32 %2036, %2038
  br i1 %2039, label %.lr.ph83, label %._crit_edge84.loopexit

._crit_edge84.loopexit:                           ; preds = %.lr.ph83
  br label %._crit_edge84

._crit_edge84:                                    ; preds = %._crit_edge84.loopexit, %.lr.ph87
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1
  %exitcond11 = icmp ne i64 %indvars.iv.next90, %2030
  br i1 %exitcond11, label %.lr.ph87, label %._crit_edge88.loopexit

._crit_edge88.loopexit:                           ; preds = %._crit_edge84
  br label %._crit_edge88

._crit_edge88:                                    ; preds = %._crit_edge88.loopexit, %2026
  %2040 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %2041 = load i32, i32* %2040, align 8
  %2042 = icmp sge i32 %2041, 3
  br i1 %2042, label %2043, label %2050

; <label>:2043:                                   ; preds = %._crit_edge88
  %2044 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2045 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2046 = load i32, i32* %2045, align 4
  %2047 = sub nsw i32 %2046, %2028
  %2048 = getelementptr [15 x i8], [15 x i8]* @.str.8.155, i32 0, i32 0
  %2049 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2044, i8* %2048, i32 %2047)
  br label %2050

; <label>:2050:                                   ; preds = %2043, %._crit_edge88
  %2051 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2052 = load i32, i32* %2051, align 4
  %2053 = add i32 %26, 2
  %2054 = zext i32 %2053 to i64
  %2055 = zext i32 %.346 to i64
  %2056 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2057 = icmp slt i32 0, %27
  %2058 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2059 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  br label %2060

; <label>:2060:                                   ; preds = %2050, %._crit_edge73
  %indvars.iv77 = phi i64 [ 0, %2050 ], [ %indvars.iv.next78, %._crit_edge73 ]
  call void @unroll_loop(i32 79)
  %2061 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2056, i64 0, i64 %indvars.iv77
  %2062 = getelementptr inbounds [258 x i8], [258 x i8]* %2061, i64 0, i64 0
  %2063 = load i8, i8* %2062, align 2
  %2064 = zext i8 %2063 to i32
  call void @bsW(%struct.EState* %0, i32 5, i32 %2064)
  br i1 %2057, label %.lr.ph72.preheader, label %._crit_edge73

.lr.ph72.preheader:                               ; preds = %2060
  %2065 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2058, i64 0, i64 %indvars.iv77
  %2066 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2059, i64 0, i64 %indvars.iv77
  br label %.lr.ph72

.lr.ph72:                                         ; preds = %.lr.ph72.preheader, %._crit_edge67
  %indvars.iv74 = phi i64 [ %indvars.iv.next75, %._crit_edge67 ], [ 0, %.lr.ph72.preheader ]
  %.070 = phi i32 [ %.2.lcssa, %._crit_edge67 ], [ %2064, %.lr.ph72.preheader ]
  call void @unroll_loop(i32 80)
  %2067 = getelementptr inbounds [258 x i8], [258 x i8]* %2065, i64 0, i64 %indvars.iv74
  %2068 = load i8, i8* %2067, align 1
  %2069 = zext i8 %2068 to i32
  %2070 = icmp slt i32 %.070, %2069
  br i1 %2070, label %.lr.ph61.preheader, label %._crit_edge62

.lr.ph61.preheader:                               ; preds = %.lr.ph72
  br label %.lr.ph61

.lr.ph61:                                         ; preds = %.lr.ph61.preheader, %.lr.ph61
  %.159 = phi i32 [ %2071, %.lr.ph61 ], [ %.070, %.lr.ph61.preheader ]
  call void @unroll_loop(i32 81)
  call void @bsW(%struct.EState* %0, i32 2, i32 2)
  %2071 = add nsw i32 %.159, 1
  %2072 = load i8, i8* %2067, align 1
  %2073 = zext i8 %2072 to i32
  %2074 = icmp slt i32 %2071, %2073
  br i1 %2074, label %.lr.ph61, label %._crit_edge62.loopexit

._crit_edge62.loopexit:                           ; preds = %.lr.ph61
  %.1.lcssa.ph = phi i32 [ %2071, %.lr.ph61 ]
  br label %._crit_edge62

._crit_edge62:                                    ; preds = %._crit_edge62.loopexit, %.lr.ph72
  %.1.lcssa = phi i32 [ %.070, %.lr.ph72 ], [ %.1.lcssa.ph, %._crit_edge62.loopexit ]
  %2075 = getelementptr inbounds [258 x i8], [258 x i8]* %2066, i64 0, i64 %indvars.iv74
  %2076 = load i8, i8* %2075, align 1
  %2077 = zext i8 %2076 to i32
  %2078 = icmp sgt i32 %.1.lcssa, %2077
  br i1 %2078, label %.lr.ph66.preheader, label %._crit_edge67

.lr.ph66.preheader:                               ; preds = %._crit_edge62
  br label %.lr.ph66

.lr.ph66:                                         ; preds = %.lr.ph66.preheader, %.lr.ph66
  %.264 = phi i32 [ %2079, %.lr.ph66 ], [ %.1.lcssa, %.lr.ph66.preheader ]
  call void @unroll_loop(i32 82)
  call void @bsW(%struct.EState* %0, i32 2, i32 3)
  %2079 = add nsw i32 %.264, -1
  %2080 = load i8, i8* %2075, align 1
  %2081 = zext i8 %2080 to i32
  %2082 = icmp sgt i32 %2079, %2081
  br i1 %2082, label %.lr.ph66, label %._crit_edge67.loopexit

._crit_edge67.loopexit:                           ; preds = %.lr.ph66
  %.2.lcssa.ph = phi i32 [ %2079, %.lr.ph66 ]
  br label %._crit_edge67

._crit_edge67:                                    ; preds = %._crit_edge67.loopexit, %._crit_edge62
  %.2.lcssa = phi i32 [ %.1.lcssa, %._crit_edge62 ], [ %.2.lcssa.ph, %._crit_edge67.loopexit ]
  call void @bsW(%struct.EState* %0, i32 1, i32 0)
  %indvars.iv.next75 = add nuw nsw i64 %indvars.iv74, 1
  %exitcond10 = icmp ne i64 %indvars.iv.next75, %2054
  br i1 %exitcond10, label %.lr.ph72, label %._crit_edge73.loopexit

._crit_edge73.loopexit:                           ; preds = %._crit_edge67
  br label %._crit_edge73

._crit_edge73:                                    ; preds = %._crit_edge73.loopexit, %2060
  %indvars.iv.next78 = add nuw nsw i64 %indvars.iv77, 1
  %exitcond = icmp ne i64 %indvars.iv.next78, %2055
  br i1 %exitcond, label %2060, label %2083

; <label>:2083:                                   ; preds = %._crit_edge73
  %2084 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %2085 = load i32, i32* %2084, align 8
  %2086 = icmp sge i32 %2085, 3
  br i1 %2086, label %2087, label %2094

; <label>:2087:                                   ; preds = %2083
  %2088 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2089 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2090 = load i32, i32* %2089, align 4
  %2091 = sub nsw i32 %2090, %2052
  %2092 = getelementptr [18 x i8], [18 x i8]* @.str.9.156, i32 0, i32 0
  %2093 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2088, i8* %2092, i32 %2091)
  br label %2094

; <label>:2094:                                   ; preds = %2087, %2083
  %2095 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2096 = load i32, i32* %2095, align 4
  %2097 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %2098 = load i32, i32* %2097, align 4
  %2099 = icmp sge i32 0, %2098
  br i1 %2099, label %._crit_edge58, label %.lr.ph57.preheader

.lr.ph57.preheader:                               ; preds = %2094
  %2100 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %2101 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 31
  %2102 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %tmp28 = trunc i64 %55 to i32
  %2103 = icmp eq i32 %tmp28, 6
  %2104 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2105 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2106 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 36
  %2107 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2108 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 35
  %2109 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  %2110 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 36
  %2111 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 33
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader, %._crit_edge
  %.22455 = phi i32 [ %2719, %._crit_edge ], [ 0, %.lr.ph57.preheader ]
  %.04252 = phi i32 [ %2720, %._crit_edge ], [ 0, %.lr.ph57.preheader ]
  call void @unroll_loop(i32 83)
  %2112 = add nsw i32 %.22455, 50
  %2113 = sub nsw i32 %2112, 1
  %2114 = load i32, i32* %2100, align 4
  %2115 = icmp sge i32 %2113, %2114
  br i1 %2115, label %2116, label %2119

; <label>:2116:                                   ; preds = %.lr.ph57
  %2117 = load i32, i32* %2101, align 4
  %2118 = sub nsw i32 %2117, 1
  br label %2119

; <label>:2119:                                   ; preds = %2116, %.lr.ph57
  %.328 = phi i32 [ %2118, %2116 ], [ %2113, %.lr.ph57 ]
  %2120 = sext i32 %.04252 to i64
  %2121 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2102, i64 0, i64 %2120
  %2122 = load i8, i8* %2121, align 1
  %2123 = zext i8 %2122 to i32
  %2124 = icmp slt i32 %2123, %.346
  br i1 %2124, label %2126, label %2125

; <label>:2125:                                   ; preds = %2119
  call void @BZ2_bz__AssertH__fail(i32 3006)
  br label %2126

; <label>:2126:                                   ; preds = %2125, %2119
  br i1 %2103, label %2127, label %2693

; <label>:2127:                                   ; preds = %2126
  %2128 = sub nsw i32 %.328, %.22455
  %2129 = add nsw i32 %2128, 1
  %2130 = icmp eq i32 50, %2129
  br i1 %2130, label %2131, label %2693

; <label>:2131:                                   ; preds = %2127
  %2132 = sext i32 %.04252 to i64
  %2133 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2105, i64 0, i64 %2132
  %2134 = load i8, i8* %2133, align 1
  %2135 = zext i8 %2134 to i64
  %2136 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2104, i64 0, i64 %2135
  %2137 = getelementptr inbounds [258 x i8], [258 x i8]* %2136, i64 0, i64 0
  %2138 = sext i32 %.04252 to i64
  %2139 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2107, i64 0, i64 %2138
  %2140 = load i8, i8* %2139, align 1
  %2141 = zext i8 %2140 to i64
  %2142 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2106, i64 0, i64 %2141
  %2143 = getelementptr inbounds [258 x i32], [258 x i32]* %2142, i64 0, i64 0
  %2144 = sext i32 %.22455 to i64
  %2145 = getelementptr inbounds i16, i16* %10, i64 %2144
  %2146 = load i16, i16* %2145, align 2
  %2147 = zext i16 %2146 to i64
  %2148 = getelementptr inbounds i8, i8* %2137, i64 %2147
  %2149 = load i8, i8* %2148, align 1
  %2150 = zext i8 %2149 to i32
  %2151 = zext i16 %2146 to i64
  %2152 = getelementptr inbounds i32, i32* %2143, i64 %2151
  %2153 = load i32, i32* %2152, align 4
  call void @bsW(%struct.EState* %0, i32 %2150, i32 %2153)
  %2154 = add nsw i32 %.22455, 1
  %2155 = sext i32 %2154 to i64
  %2156 = getelementptr inbounds i16, i16* %10, i64 %2155
  %2157 = load i16, i16* %2156, align 2
  %2158 = zext i16 %2157 to i64
  %2159 = getelementptr inbounds i8, i8* %2137, i64 %2158
  %2160 = load i8, i8* %2159, align 1
  %2161 = zext i8 %2160 to i32
  %2162 = zext i16 %2157 to i64
  %2163 = getelementptr inbounds i32, i32* %2143, i64 %2162
  %2164 = load i32, i32* %2163, align 4
  call void @bsW(%struct.EState* %0, i32 %2161, i32 %2164)
  %2165 = add nsw i32 %.22455, 2
  %2166 = sext i32 %2165 to i64
  %2167 = getelementptr inbounds i16, i16* %10, i64 %2166
  %2168 = load i16, i16* %2167, align 2
  %2169 = zext i16 %2168 to i64
  %2170 = getelementptr inbounds i8, i8* %2137, i64 %2169
  %2171 = load i8, i8* %2170, align 1
  %2172 = zext i8 %2171 to i32
  %2173 = zext i16 %2168 to i64
  %2174 = getelementptr inbounds i32, i32* %2143, i64 %2173
  %2175 = load i32, i32* %2174, align 4
  call void @bsW(%struct.EState* %0, i32 %2172, i32 %2175)
  %2176 = add nsw i32 %.22455, 3
  %2177 = sext i32 %2176 to i64
  %2178 = getelementptr inbounds i16, i16* %10, i64 %2177
  %2179 = load i16, i16* %2178, align 2
  %2180 = zext i16 %2179 to i64
  %2181 = getelementptr inbounds i8, i8* %2137, i64 %2180
  %2182 = load i8, i8* %2181, align 1
  %2183 = zext i8 %2182 to i32
  %2184 = zext i16 %2179 to i64
  %2185 = getelementptr inbounds i32, i32* %2143, i64 %2184
  %2186 = load i32, i32* %2185, align 4
  call void @bsW(%struct.EState* %0, i32 %2183, i32 %2186)
  %2187 = add nsw i32 %.22455, 4
  %2188 = sext i32 %2187 to i64
  %2189 = getelementptr inbounds i16, i16* %10, i64 %2188
  %2190 = load i16, i16* %2189, align 2
  %2191 = zext i16 %2190 to i64
  %2192 = getelementptr inbounds i8, i8* %2137, i64 %2191
  %2193 = load i8, i8* %2192, align 1
  %2194 = zext i8 %2193 to i32
  %2195 = zext i16 %2190 to i64
  %2196 = getelementptr inbounds i32, i32* %2143, i64 %2195
  %2197 = load i32, i32* %2196, align 4
  call void @bsW(%struct.EState* %0, i32 %2194, i32 %2197)
  %2198 = add nsw i32 %.22455, 5
  %2199 = sext i32 %2198 to i64
  %2200 = getelementptr inbounds i16, i16* %10, i64 %2199
  %2201 = load i16, i16* %2200, align 2
  %2202 = zext i16 %2201 to i64
  %2203 = getelementptr inbounds i8, i8* %2137, i64 %2202
  %2204 = load i8, i8* %2203, align 1
  %2205 = zext i8 %2204 to i32
  %2206 = zext i16 %2201 to i64
  %2207 = getelementptr inbounds i32, i32* %2143, i64 %2206
  %2208 = load i32, i32* %2207, align 4
  call void @bsW(%struct.EState* %0, i32 %2205, i32 %2208)
  %2209 = add nsw i32 %.22455, 6
  %2210 = sext i32 %2209 to i64
  %2211 = getelementptr inbounds i16, i16* %10, i64 %2210
  %2212 = load i16, i16* %2211, align 2
  %2213 = zext i16 %2212 to i64
  %2214 = getelementptr inbounds i8, i8* %2137, i64 %2213
  %2215 = load i8, i8* %2214, align 1
  %2216 = zext i8 %2215 to i32
  %2217 = zext i16 %2212 to i64
  %2218 = getelementptr inbounds i32, i32* %2143, i64 %2217
  %2219 = load i32, i32* %2218, align 4
  call void @bsW(%struct.EState* %0, i32 %2216, i32 %2219)
  %2220 = add nsw i32 %.22455, 7
  %2221 = sext i32 %2220 to i64
  %2222 = getelementptr inbounds i16, i16* %10, i64 %2221
  %2223 = load i16, i16* %2222, align 2
  %2224 = zext i16 %2223 to i64
  %2225 = getelementptr inbounds i8, i8* %2137, i64 %2224
  %2226 = load i8, i8* %2225, align 1
  %2227 = zext i8 %2226 to i32
  %2228 = zext i16 %2223 to i64
  %2229 = getelementptr inbounds i32, i32* %2143, i64 %2228
  %2230 = load i32, i32* %2229, align 4
  call void @bsW(%struct.EState* %0, i32 %2227, i32 %2230)
  %2231 = add nsw i32 %.22455, 8
  %2232 = sext i32 %2231 to i64
  %2233 = getelementptr inbounds i16, i16* %10, i64 %2232
  %2234 = load i16, i16* %2233, align 2
  %2235 = zext i16 %2234 to i64
  %2236 = getelementptr inbounds i8, i8* %2137, i64 %2235
  %2237 = load i8, i8* %2236, align 1
  %2238 = zext i8 %2237 to i32
  %2239 = zext i16 %2234 to i64
  %2240 = getelementptr inbounds i32, i32* %2143, i64 %2239
  %2241 = load i32, i32* %2240, align 4
  call void @bsW(%struct.EState* %0, i32 %2238, i32 %2241)
  %2242 = add nsw i32 %.22455, 9
  %2243 = sext i32 %2242 to i64
  %2244 = getelementptr inbounds i16, i16* %10, i64 %2243
  %2245 = load i16, i16* %2244, align 2
  %2246 = zext i16 %2245 to i64
  %2247 = getelementptr inbounds i8, i8* %2137, i64 %2246
  %2248 = load i8, i8* %2247, align 1
  %2249 = zext i8 %2248 to i32
  %2250 = zext i16 %2245 to i64
  %2251 = getelementptr inbounds i32, i32* %2143, i64 %2250
  %2252 = load i32, i32* %2251, align 4
  call void @bsW(%struct.EState* %0, i32 %2249, i32 %2252)
  %2253 = add nsw i32 %.22455, 10
  %2254 = sext i32 %2253 to i64
  %2255 = getelementptr inbounds i16, i16* %10, i64 %2254
  %2256 = load i16, i16* %2255, align 2
  %2257 = zext i16 %2256 to i64
  %2258 = getelementptr inbounds i8, i8* %2137, i64 %2257
  %2259 = load i8, i8* %2258, align 1
  %2260 = zext i8 %2259 to i32
  %2261 = zext i16 %2256 to i64
  %2262 = getelementptr inbounds i32, i32* %2143, i64 %2261
  %2263 = load i32, i32* %2262, align 4
  call void @bsW(%struct.EState* %0, i32 %2260, i32 %2263)
  %2264 = add nsw i32 %.22455, 11
  %2265 = sext i32 %2264 to i64
  %2266 = getelementptr inbounds i16, i16* %10, i64 %2265
  %2267 = load i16, i16* %2266, align 2
  %2268 = zext i16 %2267 to i64
  %2269 = getelementptr inbounds i8, i8* %2137, i64 %2268
  %2270 = load i8, i8* %2269, align 1
  %2271 = zext i8 %2270 to i32
  %2272 = zext i16 %2267 to i64
  %2273 = getelementptr inbounds i32, i32* %2143, i64 %2272
  %2274 = load i32, i32* %2273, align 4
  call void @bsW(%struct.EState* %0, i32 %2271, i32 %2274)
  %2275 = add nsw i32 %.22455, 12
  %2276 = sext i32 %2275 to i64
  %2277 = getelementptr inbounds i16, i16* %10, i64 %2276
  %2278 = load i16, i16* %2277, align 2
  %2279 = zext i16 %2278 to i64
  %2280 = getelementptr inbounds i8, i8* %2137, i64 %2279
  %2281 = load i8, i8* %2280, align 1
  %2282 = zext i8 %2281 to i32
  %2283 = zext i16 %2278 to i64
  %2284 = getelementptr inbounds i32, i32* %2143, i64 %2283
  %2285 = load i32, i32* %2284, align 4
  call void @bsW(%struct.EState* %0, i32 %2282, i32 %2285)
  %2286 = add nsw i32 %.22455, 13
  %2287 = sext i32 %2286 to i64
  %2288 = getelementptr inbounds i16, i16* %10, i64 %2287
  %2289 = load i16, i16* %2288, align 2
  %2290 = zext i16 %2289 to i64
  %2291 = getelementptr inbounds i8, i8* %2137, i64 %2290
  %2292 = load i8, i8* %2291, align 1
  %2293 = zext i8 %2292 to i32
  %2294 = zext i16 %2289 to i64
  %2295 = getelementptr inbounds i32, i32* %2143, i64 %2294
  %2296 = load i32, i32* %2295, align 4
  call void @bsW(%struct.EState* %0, i32 %2293, i32 %2296)
  %2297 = add nsw i32 %.22455, 14
  %2298 = sext i32 %2297 to i64
  %2299 = getelementptr inbounds i16, i16* %10, i64 %2298
  %2300 = load i16, i16* %2299, align 2
  %2301 = zext i16 %2300 to i64
  %2302 = getelementptr inbounds i8, i8* %2137, i64 %2301
  %2303 = load i8, i8* %2302, align 1
  %2304 = zext i8 %2303 to i32
  %2305 = zext i16 %2300 to i64
  %2306 = getelementptr inbounds i32, i32* %2143, i64 %2305
  %2307 = load i32, i32* %2306, align 4
  call void @bsW(%struct.EState* %0, i32 %2304, i32 %2307)
  %2308 = add nsw i32 %.22455, 15
  %2309 = sext i32 %2308 to i64
  %2310 = getelementptr inbounds i16, i16* %10, i64 %2309
  %2311 = load i16, i16* %2310, align 2
  %2312 = zext i16 %2311 to i64
  %2313 = getelementptr inbounds i8, i8* %2137, i64 %2312
  %2314 = load i8, i8* %2313, align 1
  %2315 = zext i8 %2314 to i32
  %2316 = zext i16 %2311 to i64
  %2317 = getelementptr inbounds i32, i32* %2143, i64 %2316
  %2318 = load i32, i32* %2317, align 4
  call void @bsW(%struct.EState* %0, i32 %2315, i32 %2318)
  %2319 = add nsw i32 %.22455, 16
  %2320 = sext i32 %2319 to i64
  %2321 = getelementptr inbounds i16, i16* %10, i64 %2320
  %2322 = load i16, i16* %2321, align 2
  %2323 = zext i16 %2322 to i64
  %2324 = getelementptr inbounds i8, i8* %2137, i64 %2323
  %2325 = load i8, i8* %2324, align 1
  %2326 = zext i8 %2325 to i32
  %2327 = zext i16 %2322 to i64
  %2328 = getelementptr inbounds i32, i32* %2143, i64 %2327
  %2329 = load i32, i32* %2328, align 4
  call void @bsW(%struct.EState* %0, i32 %2326, i32 %2329)
  %2330 = add nsw i32 %.22455, 17
  %2331 = sext i32 %2330 to i64
  %2332 = getelementptr inbounds i16, i16* %10, i64 %2331
  %2333 = load i16, i16* %2332, align 2
  %2334 = zext i16 %2333 to i64
  %2335 = getelementptr inbounds i8, i8* %2137, i64 %2334
  %2336 = load i8, i8* %2335, align 1
  %2337 = zext i8 %2336 to i32
  %2338 = zext i16 %2333 to i64
  %2339 = getelementptr inbounds i32, i32* %2143, i64 %2338
  %2340 = load i32, i32* %2339, align 4
  call void @bsW(%struct.EState* %0, i32 %2337, i32 %2340)
  %2341 = add nsw i32 %.22455, 18
  %2342 = sext i32 %2341 to i64
  %2343 = getelementptr inbounds i16, i16* %10, i64 %2342
  %2344 = load i16, i16* %2343, align 2
  %2345 = zext i16 %2344 to i64
  %2346 = getelementptr inbounds i8, i8* %2137, i64 %2345
  %2347 = load i8, i8* %2346, align 1
  %2348 = zext i8 %2347 to i32
  %2349 = zext i16 %2344 to i64
  %2350 = getelementptr inbounds i32, i32* %2143, i64 %2349
  %2351 = load i32, i32* %2350, align 4
  call void @bsW(%struct.EState* %0, i32 %2348, i32 %2351)
  %2352 = add nsw i32 %.22455, 19
  %2353 = sext i32 %2352 to i64
  %2354 = getelementptr inbounds i16, i16* %10, i64 %2353
  %2355 = load i16, i16* %2354, align 2
  %2356 = zext i16 %2355 to i64
  %2357 = getelementptr inbounds i8, i8* %2137, i64 %2356
  %2358 = load i8, i8* %2357, align 1
  %2359 = zext i8 %2358 to i32
  %2360 = zext i16 %2355 to i64
  %2361 = getelementptr inbounds i32, i32* %2143, i64 %2360
  %2362 = load i32, i32* %2361, align 4
  call void @bsW(%struct.EState* %0, i32 %2359, i32 %2362)
  %2363 = add nsw i32 %.22455, 20
  %2364 = sext i32 %2363 to i64
  %2365 = getelementptr inbounds i16, i16* %10, i64 %2364
  %2366 = load i16, i16* %2365, align 2
  %2367 = zext i16 %2366 to i64
  %2368 = getelementptr inbounds i8, i8* %2137, i64 %2367
  %2369 = load i8, i8* %2368, align 1
  %2370 = zext i8 %2369 to i32
  %2371 = zext i16 %2366 to i64
  %2372 = getelementptr inbounds i32, i32* %2143, i64 %2371
  %2373 = load i32, i32* %2372, align 4
  call void @bsW(%struct.EState* %0, i32 %2370, i32 %2373)
  %2374 = add nsw i32 %.22455, 21
  %2375 = sext i32 %2374 to i64
  %2376 = getelementptr inbounds i16, i16* %10, i64 %2375
  %2377 = load i16, i16* %2376, align 2
  %2378 = zext i16 %2377 to i64
  %2379 = getelementptr inbounds i8, i8* %2137, i64 %2378
  %2380 = load i8, i8* %2379, align 1
  %2381 = zext i8 %2380 to i32
  %2382 = zext i16 %2377 to i64
  %2383 = getelementptr inbounds i32, i32* %2143, i64 %2382
  %2384 = load i32, i32* %2383, align 4
  call void @bsW(%struct.EState* %0, i32 %2381, i32 %2384)
  %2385 = add nsw i32 %.22455, 22
  %2386 = sext i32 %2385 to i64
  %2387 = getelementptr inbounds i16, i16* %10, i64 %2386
  %2388 = load i16, i16* %2387, align 2
  %2389 = zext i16 %2388 to i64
  %2390 = getelementptr inbounds i8, i8* %2137, i64 %2389
  %2391 = load i8, i8* %2390, align 1
  %2392 = zext i8 %2391 to i32
  %2393 = zext i16 %2388 to i64
  %2394 = getelementptr inbounds i32, i32* %2143, i64 %2393
  %2395 = load i32, i32* %2394, align 4
  call void @bsW(%struct.EState* %0, i32 %2392, i32 %2395)
  %2396 = add nsw i32 %.22455, 23
  %2397 = sext i32 %2396 to i64
  %2398 = getelementptr inbounds i16, i16* %10, i64 %2397
  %2399 = load i16, i16* %2398, align 2
  %2400 = zext i16 %2399 to i64
  %2401 = getelementptr inbounds i8, i8* %2137, i64 %2400
  %2402 = load i8, i8* %2401, align 1
  %2403 = zext i8 %2402 to i32
  %2404 = zext i16 %2399 to i64
  %2405 = getelementptr inbounds i32, i32* %2143, i64 %2404
  %2406 = load i32, i32* %2405, align 4
  call void @bsW(%struct.EState* %0, i32 %2403, i32 %2406)
  %2407 = add nsw i32 %.22455, 24
  %2408 = sext i32 %2407 to i64
  %2409 = getelementptr inbounds i16, i16* %10, i64 %2408
  %2410 = load i16, i16* %2409, align 2
  %2411 = zext i16 %2410 to i64
  %2412 = getelementptr inbounds i8, i8* %2137, i64 %2411
  %2413 = load i8, i8* %2412, align 1
  %2414 = zext i8 %2413 to i32
  %2415 = zext i16 %2410 to i64
  %2416 = getelementptr inbounds i32, i32* %2143, i64 %2415
  %2417 = load i32, i32* %2416, align 4
  call void @bsW(%struct.EState* %0, i32 %2414, i32 %2417)
  %2418 = add nsw i32 %.22455, 25
  %2419 = sext i32 %2418 to i64
  %2420 = getelementptr inbounds i16, i16* %10, i64 %2419
  %2421 = load i16, i16* %2420, align 2
  %2422 = zext i16 %2421 to i64
  %2423 = getelementptr inbounds i8, i8* %2137, i64 %2422
  %2424 = load i8, i8* %2423, align 1
  %2425 = zext i8 %2424 to i32
  %2426 = zext i16 %2421 to i64
  %2427 = getelementptr inbounds i32, i32* %2143, i64 %2426
  %2428 = load i32, i32* %2427, align 4
  call void @bsW(%struct.EState* %0, i32 %2425, i32 %2428)
  %2429 = add nsw i32 %.22455, 26
  %2430 = sext i32 %2429 to i64
  %2431 = getelementptr inbounds i16, i16* %10, i64 %2430
  %2432 = load i16, i16* %2431, align 2
  %2433 = zext i16 %2432 to i64
  %2434 = getelementptr inbounds i8, i8* %2137, i64 %2433
  %2435 = load i8, i8* %2434, align 1
  %2436 = zext i8 %2435 to i32
  %2437 = zext i16 %2432 to i64
  %2438 = getelementptr inbounds i32, i32* %2143, i64 %2437
  %2439 = load i32, i32* %2438, align 4
  call void @bsW(%struct.EState* %0, i32 %2436, i32 %2439)
  %2440 = add nsw i32 %.22455, 27
  %2441 = sext i32 %2440 to i64
  %2442 = getelementptr inbounds i16, i16* %10, i64 %2441
  %2443 = load i16, i16* %2442, align 2
  %2444 = zext i16 %2443 to i64
  %2445 = getelementptr inbounds i8, i8* %2137, i64 %2444
  %2446 = load i8, i8* %2445, align 1
  %2447 = zext i8 %2446 to i32
  %2448 = zext i16 %2443 to i64
  %2449 = getelementptr inbounds i32, i32* %2143, i64 %2448
  %2450 = load i32, i32* %2449, align 4
  call void @bsW(%struct.EState* %0, i32 %2447, i32 %2450)
  %2451 = add nsw i32 %.22455, 28
  %2452 = sext i32 %2451 to i64
  %2453 = getelementptr inbounds i16, i16* %10, i64 %2452
  %2454 = load i16, i16* %2453, align 2
  %2455 = zext i16 %2454 to i64
  %2456 = getelementptr inbounds i8, i8* %2137, i64 %2455
  %2457 = load i8, i8* %2456, align 1
  %2458 = zext i8 %2457 to i32
  %2459 = zext i16 %2454 to i64
  %2460 = getelementptr inbounds i32, i32* %2143, i64 %2459
  %2461 = load i32, i32* %2460, align 4
  call void @bsW(%struct.EState* %0, i32 %2458, i32 %2461)
  %2462 = add nsw i32 %.22455, 29
  %2463 = sext i32 %2462 to i64
  %2464 = getelementptr inbounds i16, i16* %10, i64 %2463
  %2465 = load i16, i16* %2464, align 2
  %2466 = zext i16 %2465 to i64
  %2467 = getelementptr inbounds i8, i8* %2137, i64 %2466
  %2468 = load i8, i8* %2467, align 1
  %2469 = zext i8 %2468 to i32
  %2470 = zext i16 %2465 to i64
  %2471 = getelementptr inbounds i32, i32* %2143, i64 %2470
  %2472 = load i32, i32* %2471, align 4
  call void @bsW(%struct.EState* %0, i32 %2469, i32 %2472)
  %2473 = add nsw i32 %.22455, 30
  %2474 = sext i32 %2473 to i64
  %2475 = getelementptr inbounds i16, i16* %10, i64 %2474
  %2476 = load i16, i16* %2475, align 2
  %2477 = zext i16 %2476 to i64
  %2478 = getelementptr inbounds i8, i8* %2137, i64 %2477
  %2479 = load i8, i8* %2478, align 1
  %2480 = zext i8 %2479 to i32
  %2481 = zext i16 %2476 to i64
  %2482 = getelementptr inbounds i32, i32* %2143, i64 %2481
  %2483 = load i32, i32* %2482, align 4
  call void @bsW(%struct.EState* %0, i32 %2480, i32 %2483)
  %2484 = add nsw i32 %.22455, 31
  %2485 = sext i32 %2484 to i64
  %2486 = getelementptr inbounds i16, i16* %10, i64 %2485
  %2487 = load i16, i16* %2486, align 2
  %2488 = zext i16 %2487 to i64
  %2489 = getelementptr inbounds i8, i8* %2137, i64 %2488
  %2490 = load i8, i8* %2489, align 1
  %2491 = zext i8 %2490 to i32
  %2492 = zext i16 %2487 to i64
  %2493 = getelementptr inbounds i32, i32* %2143, i64 %2492
  %2494 = load i32, i32* %2493, align 4
  call void @bsW(%struct.EState* %0, i32 %2491, i32 %2494)
  %2495 = add nsw i32 %.22455, 32
  %2496 = sext i32 %2495 to i64
  %2497 = getelementptr inbounds i16, i16* %10, i64 %2496
  %2498 = load i16, i16* %2497, align 2
  %2499 = zext i16 %2498 to i64
  %2500 = getelementptr inbounds i8, i8* %2137, i64 %2499
  %2501 = load i8, i8* %2500, align 1
  %2502 = zext i8 %2501 to i32
  %2503 = zext i16 %2498 to i64
  %2504 = getelementptr inbounds i32, i32* %2143, i64 %2503
  %2505 = load i32, i32* %2504, align 4
  call void @bsW(%struct.EState* %0, i32 %2502, i32 %2505)
  %2506 = add nsw i32 %.22455, 33
  %2507 = sext i32 %2506 to i64
  %2508 = getelementptr inbounds i16, i16* %10, i64 %2507
  %2509 = load i16, i16* %2508, align 2
  %2510 = zext i16 %2509 to i64
  %2511 = getelementptr inbounds i8, i8* %2137, i64 %2510
  %2512 = load i8, i8* %2511, align 1
  %2513 = zext i8 %2512 to i32
  %2514 = zext i16 %2509 to i64
  %2515 = getelementptr inbounds i32, i32* %2143, i64 %2514
  %2516 = load i32, i32* %2515, align 4
  call void @bsW(%struct.EState* %0, i32 %2513, i32 %2516)
  %2517 = add nsw i32 %.22455, 34
  %2518 = sext i32 %2517 to i64
  %2519 = getelementptr inbounds i16, i16* %10, i64 %2518
  %2520 = load i16, i16* %2519, align 2
  %2521 = zext i16 %2520 to i64
  %2522 = getelementptr inbounds i8, i8* %2137, i64 %2521
  %2523 = load i8, i8* %2522, align 1
  %2524 = zext i8 %2523 to i32
  %2525 = zext i16 %2520 to i64
  %2526 = getelementptr inbounds i32, i32* %2143, i64 %2525
  %2527 = load i32, i32* %2526, align 4
  call void @bsW(%struct.EState* %0, i32 %2524, i32 %2527)
  %2528 = add nsw i32 %.22455, 35
  %2529 = sext i32 %2528 to i64
  %2530 = getelementptr inbounds i16, i16* %10, i64 %2529
  %2531 = load i16, i16* %2530, align 2
  %2532 = zext i16 %2531 to i64
  %2533 = getelementptr inbounds i8, i8* %2137, i64 %2532
  %2534 = load i8, i8* %2533, align 1
  %2535 = zext i8 %2534 to i32
  %2536 = zext i16 %2531 to i64
  %2537 = getelementptr inbounds i32, i32* %2143, i64 %2536
  %2538 = load i32, i32* %2537, align 4
  call void @bsW(%struct.EState* %0, i32 %2535, i32 %2538)
  %2539 = add nsw i32 %.22455, 36
  %2540 = sext i32 %2539 to i64
  %2541 = getelementptr inbounds i16, i16* %10, i64 %2540
  %2542 = load i16, i16* %2541, align 2
  %2543 = zext i16 %2542 to i64
  %2544 = getelementptr inbounds i8, i8* %2137, i64 %2543
  %2545 = load i8, i8* %2544, align 1
  %2546 = zext i8 %2545 to i32
  %2547 = zext i16 %2542 to i64
  %2548 = getelementptr inbounds i32, i32* %2143, i64 %2547
  %2549 = load i32, i32* %2548, align 4
  call void @bsW(%struct.EState* %0, i32 %2546, i32 %2549)
  %2550 = add nsw i32 %.22455, 37
  %2551 = sext i32 %2550 to i64
  %2552 = getelementptr inbounds i16, i16* %10, i64 %2551
  %2553 = load i16, i16* %2552, align 2
  %2554 = zext i16 %2553 to i64
  %2555 = getelementptr inbounds i8, i8* %2137, i64 %2554
  %2556 = load i8, i8* %2555, align 1
  %2557 = zext i8 %2556 to i32
  %2558 = zext i16 %2553 to i64
  %2559 = getelementptr inbounds i32, i32* %2143, i64 %2558
  %2560 = load i32, i32* %2559, align 4
  call void @bsW(%struct.EState* %0, i32 %2557, i32 %2560)
  %2561 = add nsw i32 %.22455, 38
  %2562 = sext i32 %2561 to i64
  %2563 = getelementptr inbounds i16, i16* %10, i64 %2562
  %2564 = load i16, i16* %2563, align 2
  %2565 = zext i16 %2564 to i64
  %2566 = getelementptr inbounds i8, i8* %2137, i64 %2565
  %2567 = load i8, i8* %2566, align 1
  %2568 = zext i8 %2567 to i32
  %2569 = zext i16 %2564 to i64
  %2570 = getelementptr inbounds i32, i32* %2143, i64 %2569
  %2571 = load i32, i32* %2570, align 4
  call void @bsW(%struct.EState* %0, i32 %2568, i32 %2571)
  %2572 = add nsw i32 %.22455, 39
  %2573 = sext i32 %2572 to i64
  %2574 = getelementptr inbounds i16, i16* %10, i64 %2573
  %2575 = load i16, i16* %2574, align 2
  %2576 = zext i16 %2575 to i64
  %2577 = getelementptr inbounds i8, i8* %2137, i64 %2576
  %2578 = load i8, i8* %2577, align 1
  %2579 = zext i8 %2578 to i32
  %2580 = zext i16 %2575 to i64
  %2581 = getelementptr inbounds i32, i32* %2143, i64 %2580
  %2582 = load i32, i32* %2581, align 4
  call void @bsW(%struct.EState* %0, i32 %2579, i32 %2582)
  %2583 = add nsw i32 %.22455, 40
  %2584 = sext i32 %2583 to i64
  %2585 = getelementptr inbounds i16, i16* %10, i64 %2584
  %2586 = load i16, i16* %2585, align 2
  %2587 = zext i16 %2586 to i64
  %2588 = getelementptr inbounds i8, i8* %2137, i64 %2587
  %2589 = load i8, i8* %2588, align 1
  %2590 = zext i8 %2589 to i32
  %2591 = zext i16 %2586 to i64
  %2592 = getelementptr inbounds i32, i32* %2143, i64 %2591
  %2593 = load i32, i32* %2592, align 4
  call void @bsW(%struct.EState* %0, i32 %2590, i32 %2593)
  %2594 = add nsw i32 %.22455, 41
  %2595 = sext i32 %2594 to i64
  %2596 = getelementptr inbounds i16, i16* %10, i64 %2595
  %2597 = load i16, i16* %2596, align 2
  %2598 = zext i16 %2597 to i64
  %2599 = getelementptr inbounds i8, i8* %2137, i64 %2598
  %2600 = load i8, i8* %2599, align 1
  %2601 = zext i8 %2600 to i32
  %2602 = zext i16 %2597 to i64
  %2603 = getelementptr inbounds i32, i32* %2143, i64 %2602
  %2604 = load i32, i32* %2603, align 4
  call void @bsW(%struct.EState* %0, i32 %2601, i32 %2604)
  %2605 = add nsw i32 %.22455, 42
  %2606 = sext i32 %2605 to i64
  %2607 = getelementptr inbounds i16, i16* %10, i64 %2606
  %2608 = load i16, i16* %2607, align 2
  %2609 = zext i16 %2608 to i64
  %2610 = getelementptr inbounds i8, i8* %2137, i64 %2609
  %2611 = load i8, i8* %2610, align 1
  %2612 = zext i8 %2611 to i32
  %2613 = zext i16 %2608 to i64
  %2614 = getelementptr inbounds i32, i32* %2143, i64 %2613
  %2615 = load i32, i32* %2614, align 4
  call void @bsW(%struct.EState* %0, i32 %2612, i32 %2615)
  %2616 = add nsw i32 %.22455, 43
  %2617 = sext i32 %2616 to i64
  %2618 = getelementptr inbounds i16, i16* %10, i64 %2617
  %2619 = load i16, i16* %2618, align 2
  %2620 = zext i16 %2619 to i64
  %2621 = getelementptr inbounds i8, i8* %2137, i64 %2620
  %2622 = load i8, i8* %2621, align 1
  %2623 = zext i8 %2622 to i32
  %2624 = zext i16 %2619 to i64
  %2625 = getelementptr inbounds i32, i32* %2143, i64 %2624
  %2626 = load i32, i32* %2625, align 4
  call void @bsW(%struct.EState* %0, i32 %2623, i32 %2626)
  %2627 = add nsw i32 %.22455, 44
  %2628 = sext i32 %2627 to i64
  %2629 = getelementptr inbounds i16, i16* %10, i64 %2628
  %2630 = load i16, i16* %2629, align 2
  %2631 = zext i16 %2630 to i64
  %2632 = getelementptr inbounds i8, i8* %2137, i64 %2631
  %2633 = load i8, i8* %2632, align 1
  %2634 = zext i8 %2633 to i32
  %2635 = zext i16 %2630 to i64
  %2636 = getelementptr inbounds i32, i32* %2143, i64 %2635
  %2637 = load i32, i32* %2636, align 4
  call void @bsW(%struct.EState* %0, i32 %2634, i32 %2637)
  %2638 = add nsw i32 %.22455, 45
  %2639 = sext i32 %2638 to i64
  %2640 = getelementptr inbounds i16, i16* %10, i64 %2639
  %2641 = load i16, i16* %2640, align 2
  %2642 = zext i16 %2641 to i64
  %2643 = getelementptr inbounds i8, i8* %2137, i64 %2642
  %2644 = load i8, i8* %2643, align 1
  %2645 = zext i8 %2644 to i32
  %2646 = zext i16 %2641 to i64
  %2647 = getelementptr inbounds i32, i32* %2143, i64 %2646
  %2648 = load i32, i32* %2647, align 4
  call void @bsW(%struct.EState* %0, i32 %2645, i32 %2648)
  %2649 = add nsw i32 %.22455, 46
  %2650 = sext i32 %2649 to i64
  %2651 = getelementptr inbounds i16, i16* %10, i64 %2650
  %2652 = load i16, i16* %2651, align 2
  %2653 = zext i16 %2652 to i64
  %2654 = getelementptr inbounds i8, i8* %2137, i64 %2653
  %2655 = load i8, i8* %2654, align 1
  %2656 = zext i8 %2655 to i32
  %2657 = zext i16 %2652 to i64
  %2658 = getelementptr inbounds i32, i32* %2143, i64 %2657
  %2659 = load i32, i32* %2658, align 4
  call void @bsW(%struct.EState* %0, i32 %2656, i32 %2659)
  %2660 = add nsw i32 %.22455, 47
  %2661 = sext i32 %2660 to i64
  %2662 = getelementptr inbounds i16, i16* %10, i64 %2661
  %2663 = load i16, i16* %2662, align 2
  %2664 = zext i16 %2663 to i64
  %2665 = getelementptr inbounds i8, i8* %2137, i64 %2664
  %2666 = load i8, i8* %2665, align 1
  %2667 = zext i8 %2666 to i32
  %2668 = zext i16 %2663 to i64
  %2669 = getelementptr inbounds i32, i32* %2143, i64 %2668
  %2670 = load i32, i32* %2669, align 4
  call void @bsW(%struct.EState* %0, i32 %2667, i32 %2670)
  %2671 = add nsw i32 %.22455, 48
  %2672 = sext i32 %2671 to i64
  %2673 = getelementptr inbounds i16, i16* %10, i64 %2672
  %2674 = load i16, i16* %2673, align 2
  %2675 = zext i16 %2674 to i64
  %2676 = getelementptr inbounds i8, i8* %2137, i64 %2675
  %2677 = load i8, i8* %2676, align 1
  %2678 = zext i8 %2677 to i32
  %2679 = zext i16 %2674 to i64
  %2680 = getelementptr inbounds i32, i32* %2143, i64 %2679
  %2681 = load i32, i32* %2680, align 4
  call void @bsW(%struct.EState* %0, i32 %2678, i32 %2681)
  %2682 = add nsw i32 %.22455, 49
  %2683 = sext i32 %2682 to i64
  %2684 = getelementptr inbounds i16, i16* %10, i64 %2683
  %2685 = load i16, i16* %2684, align 2
  %2686 = zext i16 %2685 to i64
  %2687 = getelementptr inbounds i8, i8* %2137, i64 %2686
  %2688 = load i8, i8* %2687, align 1
  %2689 = zext i8 %2688 to i32
  %2690 = zext i16 %2685 to i64
  %2691 = getelementptr inbounds i32, i32* %2143, i64 %2690
  %2692 = load i32, i32* %2691, align 4
  call void @bsW(%struct.EState* %0, i32 %2689, i32 %2692)
  br label %._crit_edge

; <label>:2693:                                   ; preds = %2127, %2126
  %2694 = icmp sle i32 %.22455, %.328
  br i1 %2694, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %2693
  %2695 = sext i32 %.22455 to i64
  %2696 = sext i32 %.328 to i64
  %2697 = add i64 %2696, 1
  %2698 = sext i32 %.04252 to i64
  %2699 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2109, i64 0, i64 %2698
  %2700 = sext i32 %.04252 to i64
  %2701 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2111, i64 0, i64 %2700
  %scevgep = getelementptr i16, i16* %10, i64 %2695
  %2702 = sub i64 %2697, %2695
  br label %2703

; <label>:2703:                                   ; preds = %.lr.ph, %2703
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %2703 ]
  call void @unroll_loop(i32 84)
  %2704 = load i8, i8* %2699, align 1
  %2705 = zext i8 %2704 to i64
  %2706 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2108, i64 0, i64 %2705
  %scevgep1 = getelementptr i16, i16* %scevgep, i64 %lsr.iv
  %2707 = load i16, i16* %scevgep1, align 2
  %2708 = zext i16 %2707 to i64
  %2709 = getelementptr inbounds [258 x i8], [258 x i8]* %2706, i64 0, i64 %2708
  %2710 = load i8, i8* %2709, align 1
  %2711 = zext i8 %2710 to i32
  %2712 = load i8, i8* %2701, align 1
  %2713 = zext i8 %2712 to i64
  %2714 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2110, i64 0, i64 %2713
  %scevgep2 = getelementptr i16, i16* %scevgep, i64 %lsr.iv
  %2715 = load i16, i16* %scevgep2, align 2
  %2716 = zext i16 %2715 to i64
  %2717 = getelementptr inbounds [258 x i32], [258 x i32]* %2714, i64 0, i64 %2716
  %2718 = load i32, i32* %2717, align 4
  call void @bsW(%struct.EState* %0, i32 %2711, i32 %2718)
  %lsr.iv.next = add i64 %lsr.iv, 1
  %exitcond9 = icmp ne i64 %2702, %lsr.iv.next
  br i1 %exitcond9, label %2703, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %2703
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %2693, %2131
  %.04253 = phi i32 [ %.04252, %2131 ], [ %.04252, %2693 ], [ %.04252, %._crit_edge.loopexit ]
  %2719 = add nsw i32 %.328, 1
  %2720 = add nsw i32 %.04253, 1
  %2721 = load i32, i32* %2097, align 4
  %2722 = icmp sge i32 %2719, %2721
  br i1 %2722, label %._crit_edge58.loopexit, label %.lr.ph57

._crit_edge58.loopexit:                           ; preds = %._crit_edge
  %.042.lcssa.ph = phi i32 [ %2720, %._crit_edge ]
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %2094
  %.042.lcssa = phi i32 [ 0, %2094 ], [ %.042.lcssa.ph, %._crit_edge58.loopexit ]
  %2723 = icmp eq i32 %.042.lcssa, %.035.lcssa
  br i1 %2723, label %2725, label %2724

; <label>:2724:                                   ; preds = %._crit_edge58
  call void @BZ2_bz__AssertH__fail(i32 3007)
  br label %2725

; <label>:2725:                                   ; preds = %2724, %._crit_edge58
  %2726 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %2727 = load i32, i32* %2726, align 8
  %2728 = icmp sge i32 %2727, 3
  br i1 %2728, label %2729, label %2736

; <label>:2729:                                   ; preds = %2725
  %2730 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2731 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %2732 = load i32, i32* %2731, align 4
  %2733 = sub nsw i32 %2732, %2096
  %2734 = getelementptr [10 x i8], [10 x i8]* @.str.10.157, i32 0, i32 0
  %2735 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2730, i8* %2734, i32 %2733)
  br label %2736

; <label>:2736:                                   ; preds = %2729, %2725
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @bsFinishWrite(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %1
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %6 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 11
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %8 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 19
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 24
  %10 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 25
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %.lr.ph
  call void @unroll_loop(i32 52)
  %11 = load i32, i32* %5, align 8
  %12 = lshr i32 %11, 24
  %13 = trunc i32 %12 to i8
  %14 = load i8*, i8** %6, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  store i8 %13, i8* %17, align 1
  %18 = load i32, i32* %8, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %8, align 4
  %20 = load i32, i32* %9, align 8
  %21 = shl i32 %20, 8
  store i32 %21, i32* %9, align 8
  %22 = load i32, i32* %10, align 4
  %23 = sub nsw i32 %22, 8
  store i32 %23, i32* %10, align 4
  %24 = load i32, i32* %2, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeMaps_e(%struct.EState*) #0 {
  %2 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %4 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 21
  %scevgep = getelementptr %struct.EState, %struct.EState* %0, i64 0, i32 23, i64 0
  br label %5

; <label>:5:                                      ; preds = %1, %13
  %lsr.iv = phi i64 [ -256, %1 ], [ %lsr.iv.next, %13 ]
  call void @unroll_loop(i32 85)
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %6 = load i8, i8* %scevgep1, align 1
  %7 = icmp ne i8 %6, 0
  br i1 %7, label %8, label %13

; <label>:8:                                      ; preds = %5
  %9 = load i32, i32* %3, align 4
  %10 = trunc i32 %9 to i8
  %scevgep2 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %scevgep3 = getelementptr i8, i8* %scevgep2, i64 256
  store i8 %10, i8* %scevgep3, align 1
  %11 = load i32, i32* %4, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %4, align 4
  br label %13

; <label>:13:                                     ; preds = %5, %8
  %lsr.iv.next = add nsw i64 %lsr.iv, 1
  %exitcond = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond, label %5, label %14

; <label>:14:                                     ; preds = %13
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @BZ2_decompress(%struct.DState*) #0 {
  %2 = alloca [6 x i8], align 1, !track !63
  %3 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %4 = load %struct.bz_stream*, %struct.bz_stream** %3, align 8
  %5 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 10
  br i1 %7, label %8, label %33

; <label>:8:                                      ; preds = %1
  %9 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 40
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 41
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 42
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 43
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 44
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 45
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 46
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 47
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 48
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 49
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 50
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 52
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 53
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 54
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 55
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 56
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 57
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 58
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 59
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 60
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 61
  store i32* null, i32** %30, align 8
  %31 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 62
  store i32* null, i32** %31, align 8
  %32 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 63
  store i32* null, i32** %32, align 8
  br label %33

; <label>:33:                                     ; preds = %8, %1
  %34 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 40
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 41
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 42
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 43
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 44
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 45
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 46
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 47
  %49 = load i32, i32* %48, align 8
  %50 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 48
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 49
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 50
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 52
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 53
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 54
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 55
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 56
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 57
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 58
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 59
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 60
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 61
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 62
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 63
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  switch i32 %83, label %3988 [
    i32 10, label %84
    i32 11, label %151
    i32 12, label %218
    i32 13, label %285
    i32 14, label %408
    i32 15, label %478
    i32 16, label %545
    i32 17, label %612
    i32 18, label %679
    i32 19, label %746
    i32 20, label %828
    i32 21, label %899
    i32 22, label %970
    i32 23, label %1041
    i32 24, label %1112
    i32 25, label %1179
    i32 26, label %1250
    i32 27, label %1321
    i32 28, label %1405
    i32 29, label %1488
    i32 30, label %1573
    i32 31, label %1639
    i32 32, label %1707
    i32 33, label %1821
    i32 34, label %1890
    i32 35, label %1957
    i32 36, label %2127
    i32 37, label %2202
    i32 38, label %2328
    i32 39, label %2403
    i32 40, label %2769
    i32 41, label %2844
    i32 42, label %3366
    i32 43, label %3433
    i32 44, label %3500
    i32 45, label %3567
    i32 46, label %3634
    i32 47, label %3703
    i32 48, label %3774
    i32 49, label %3845
    i32 50, label %3916
  ]

; <label>:84:                                     ; preds = %33
  %85 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 10, i32* %85, align 8
  %86 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %87 = load i32, i32* %86, align 4
  %88 = icmp sge i32 %87, 8
  br i1 %88, label %._crit_edge628, label %.lr.ph627.preheader

.lr.ph627.preheader:                              ; preds = %84
  %89 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %90 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %91 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %92 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %93 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %94 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %95 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %96 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %97 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %98 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph627

._crit_edge628.loopexit:                          ; preds = %148
  br label %._crit_edge628

._crit_edge628:                                   ; preds = %._crit_edge628.loopexit, %84
  %99 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %102 = load i32, i32* %101, align 4
  %103 = sub nsw i32 %102, 8
  %104 = lshr i32 %100, %103
  %105 = and i32 %104, 255
  %106 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %107 = load i32, i32* %106, align 4
  %108 = sub nsw i32 %107, 8
  store i32 %108, i32* %106, align 4
  %109 = trunc i32 %105 to i8
  %110 = zext i8 %109 to i32
  %111 = icmp ne i32 %110, 66
  br i1 %111, label %.loopexit, label %151

.lr.ph627:                                        ; preds = %.lr.ph627.preheader, %148
  call void @unroll_loop(i32 87)
  %112 = load %struct.bz_stream*, %struct.bz_stream** %89, align 8
  %113 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %112, i32 0, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %.loopexit.loopexit1001, label %116

; <label>:116:                                    ; preds = %.lr.ph627
  %117 = load i32, i32* %90, align 8
  %118 = shl i32 %117, 8
  %119 = load %struct.bz_stream*, %struct.bz_stream** %91, align 8
  %120 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %119, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = or i32 %118, %123
  store i32 %124, i32* %92, align 8
  %125 = load i32, i32* %93, align 4
  %126 = add nsw i32 %125, 8
  store i32 %126, i32* %93, align 4
  %127 = load %struct.bz_stream*, %struct.bz_stream** %94, align 8
  %128 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %127, i32 0, i32 0
  %129 = load i8*, i8** %128, align 8
  %130 = getelementptr inbounds i8, i8* %129, i32 1
  store i8* %130, i8** %128, align 8
  %131 = load %struct.bz_stream*, %struct.bz_stream** %95, align 8
  %132 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = add i32 %133, -1
  store i32 %134, i32* %132, align 8
  %135 = load %struct.bz_stream*, %struct.bz_stream** %96, align 8
  %136 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %135, i32 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = load %struct.bz_stream*, %struct.bz_stream** %97, align 8
  %140 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %139, i32 0, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %148

; <label>:143:                                    ; preds = %116
  %144 = load %struct.bz_stream*, %struct.bz_stream** %98, align 8
  %145 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %144, i32 0, i32 3
  %146 = load i32, i32* %145, align 8
  %147 = add i32 %146, 1
  store i32 %147, i32* %145, align 8
  br label %148

; <label>:148:                                    ; preds = %143, %116
  %149 = load i32, i32* %86, align 4
  %150 = icmp sge i32 %149, 8
  br i1 %150, label %._crit_edge628.loopexit, label %.lr.ph627

; <label>:151:                                    ; preds = %._crit_edge628, %33
  %152 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 11, i32* %152, align 8
  %153 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %154 = load i32, i32* %153, align 4
  %155 = icmp sge i32 %154, 8
  br i1 %155, label %._crit_edge625, label %.lr.ph624.preheader

.lr.ph624.preheader:                              ; preds = %151
  %156 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %157 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %158 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %159 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %160 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %161 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %162 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %163 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %164 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %165 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph624

._crit_edge625.loopexit:                          ; preds = %215
  br label %._crit_edge625

._crit_edge625:                                   ; preds = %._crit_edge625.loopexit, %151
  %166 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %167 = load i32, i32* %166, align 8
  %168 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %169 = load i32, i32* %168, align 4
  %170 = sub nsw i32 %169, 8
  %171 = lshr i32 %167, %170
  %172 = and i32 %171, 255
  %173 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %174 = load i32, i32* %173, align 4
  %175 = sub nsw i32 %174, 8
  store i32 %175, i32* %173, align 4
  %176 = trunc i32 %172 to i8
  %177 = zext i8 %176 to i32
  %178 = icmp ne i32 %177, 90
  br i1 %178, label %.loopexit, label %218

.lr.ph624:                                        ; preds = %.lr.ph624.preheader, %215
  call void @unroll_loop(i32 88)
  %179 = load %struct.bz_stream*, %struct.bz_stream** %156, align 8
  %180 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %179, i32 0, i32 1
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %.loopexit.loopexit976, label %183

; <label>:183:                                    ; preds = %.lr.ph624
  %184 = load i32, i32* %157, align 8
  %185 = shl i32 %184, 8
  %186 = load %struct.bz_stream*, %struct.bz_stream** %158, align 8
  %187 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %186, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = or i32 %185, %190
  store i32 %191, i32* %159, align 8
  %192 = load i32, i32* %160, align 4
  %193 = add nsw i32 %192, 8
  store i32 %193, i32* %160, align 4
  %194 = load %struct.bz_stream*, %struct.bz_stream** %161, align 8
  %195 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %194, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = getelementptr inbounds i8, i8* %196, i32 1
  store i8* %197, i8** %195, align 8
  %198 = load %struct.bz_stream*, %struct.bz_stream** %162, align 8
  %199 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %198, i32 0, i32 1
  %200 = load i32, i32* %199, align 8
  %201 = add i32 %200, -1
  store i32 %201, i32* %199, align 8
  %202 = load %struct.bz_stream*, %struct.bz_stream** %163, align 8
  %203 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %202, i32 0, i32 2
  %204 = load i32, i32* %203, align 4
  %205 = add i32 %204, 1
  store i32 %205, i32* %203, align 4
  %206 = load %struct.bz_stream*, %struct.bz_stream** %164, align 8
  %207 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %206, i32 0, i32 2
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %215

; <label>:210:                                    ; preds = %183
  %211 = load %struct.bz_stream*, %struct.bz_stream** %165, align 8
  %212 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %211, i32 0, i32 3
  %213 = load i32, i32* %212, align 8
  %214 = add i32 %213, 1
  store i32 %214, i32* %212, align 8
  br label %215

; <label>:215:                                    ; preds = %210, %183
  %216 = load i32, i32* %153, align 4
  %217 = icmp sge i32 %216, 8
  br i1 %217, label %._crit_edge625.loopexit, label %.lr.ph624

; <label>:218:                                    ; preds = %._crit_edge625, %33
  %219 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 12, i32* %219, align 8
  %220 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %221 = load i32, i32* %220, align 4
  %222 = icmp sge i32 %221, 8
  br i1 %222, label %._crit_edge622, label %.lr.ph621.preheader

.lr.ph621.preheader:                              ; preds = %218
  %223 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %224 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %225 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %226 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %227 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %228 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %229 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %230 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %231 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %232 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph621

._crit_edge622.loopexit:                          ; preds = %282
  br label %._crit_edge622

._crit_edge622:                                   ; preds = %._crit_edge622.loopexit, %218
  %233 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %234 = load i32, i32* %233, align 8
  %235 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %236 = load i32, i32* %235, align 4
  %237 = sub nsw i32 %236, 8
  %238 = lshr i32 %234, %237
  %239 = and i32 %238, 255
  %240 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %241 = load i32, i32* %240, align 4
  %242 = sub nsw i32 %241, 8
  store i32 %242, i32* %240, align 4
  %243 = trunc i32 %239 to i8
  %244 = zext i8 %243 to i32
  %245 = icmp ne i32 %244, 104
  br i1 %245, label %.loopexit, label %285

.lr.ph621:                                        ; preds = %.lr.ph621.preheader, %282
  call void @unroll_loop(i32 89)
  %246 = load %struct.bz_stream*, %struct.bz_stream** %223, align 8
  %247 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %246, i32 0, i32 1
  %248 = load i32, i32* %247, align 8
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %.loopexit.loopexit951, label %250

; <label>:250:                                    ; preds = %.lr.ph621
  %251 = load i32, i32* %224, align 8
  %252 = shl i32 %251, 8
  %253 = load %struct.bz_stream*, %struct.bz_stream** %225, align 8
  %254 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %253, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  %256 = load i8, i8* %255, align 1
  %257 = zext i8 %256 to i32
  %258 = or i32 %252, %257
  store i32 %258, i32* %226, align 8
  %259 = load i32, i32* %227, align 4
  %260 = add nsw i32 %259, 8
  store i32 %260, i32* %227, align 4
  %261 = load %struct.bz_stream*, %struct.bz_stream** %228, align 8
  %262 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %261, i32 0, i32 0
  %263 = load i8*, i8** %262, align 8
  %264 = getelementptr inbounds i8, i8* %263, i32 1
  store i8* %264, i8** %262, align 8
  %265 = load %struct.bz_stream*, %struct.bz_stream** %229, align 8
  %266 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %265, i32 0, i32 1
  %267 = load i32, i32* %266, align 8
  %268 = add i32 %267, -1
  store i32 %268, i32* %266, align 8
  %269 = load %struct.bz_stream*, %struct.bz_stream** %230, align 8
  %270 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %269, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = add i32 %271, 1
  store i32 %272, i32* %270, align 4
  %273 = load %struct.bz_stream*, %struct.bz_stream** %231, align 8
  %274 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %273, i32 0, i32 2
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %282

; <label>:277:                                    ; preds = %250
  %278 = load %struct.bz_stream*, %struct.bz_stream** %232, align 8
  %279 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %278, i32 0, i32 3
  %280 = load i32, i32* %279, align 8
  %281 = add i32 %280, 1
  store i32 %281, i32* %279, align 8
  br label %282

; <label>:282:                                    ; preds = %277, %250
  %283 = load i32, i32* %220, align 4
  %284 = icmp sge i32 %283, 8
  br i1 %284, label %._crit_edge622.loopexit, label %.lr.ph621

; <label>:285:                                    ; preds = %._crit_edge622, %33
  %286 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 13, i32* %286, align 8
  %287 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %288 = load i32, i32* %287, align 4
  %289 = icmp sge i32 %288, 8
  br i1 %289, label %._crit_edge619, label %.lr.ph618.preheader

.lr.ph618.preheader:                              ; preds = %285
  %290 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %291 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %292 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %293 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %294 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %295 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %296 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %297 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %298 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %299 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph618

._crit_edge619.loopexit:                          ; preds = %350
  br label %._crit_edge619

._crit_edge619:                                   ; preds = %._crit_edge619.loopexit, %285
  %300 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %301 = load i32, i32* %300, align 8
  %302 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %303 = load i32, i32* %302, align 4
  %304 = sub nsw i32 %303, 8
  %305 = lshr i32 %301, %304
  %306 = and i32 %305, 255
  %307 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %308 = load i32, i32* %307, align 4
  %309 = sub nsw i32 %308, 8
  store i32 %309, i32* %307, align 4
  %310 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  store i32 %306, i32* %310, align 8
  %311 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %312 = load i32, i32* %311, align 8
  %313 = icmp slt i32 %312, 49
  br i1 %313, label %.loopexit, label %353

.lr.ph618:                                        ; preds = %.lr.ph618.preheader, %350
  call void @unroll_loop(i32 90)
  %314 = load %struct.bz_stream*, %struct.bz_stream** %290, align 8
  %315 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %314, i32 0, i32 1
  %316 = load i32, i32* %315, align 8
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %.loopexit.loopexit926, label %318

; <label>:318:                                    ; preds = %.lr.ph618
  %319 = load i32, i32* %291, align 8
  %320 = shl i32 %319, 8
  %321 = load %struct.bz_stream*, %struct.bz_stream** %292, align 8
  %322 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %321, i32 0, i32 0
  %323 = load i8*, i8** %322, align 8
  %324 = load i8, i8* %323, align 1
  %325 = zext i8 %324 to i32
  %326 = or i32 %320, %325
  store i32 %326, i32* %293, align 8
  %327 = load i32, i32* %294, align 4
  %328 = add nsw i32 %327, 8
  store i32 %328, i32* %294, align 4
  %329 = load %struct.bz_stream*, %struct.bz_stream** %295, align 8
  %330 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %329, i32 0, i32 0
  %331 = load i8*, i8** %330, align 8
  %332 = getelementptr inbounds i8, i8* %331, i32 1
  store i8* %332, i8** %330, align 8
  %333 = load %struct.bz_stream*, %struct.bz_stream** %296, align 8
  %334 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %333, i32 0, i32 1
  %335 = load i32, i32* %334, align 8
  %336 = add i32 %335, -1
  store i32 %336, i32* %334, align 8
  %337 = load %struct.bz_stream*, %struct.bz_stream** %297, align 8
  %338 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %337, i32 0, i32 2
  %339 = load i32, i32* %338, align 4
  %340 = add i32 %339, 1
  store i32 %340, i32* %338, align 4
  %341 = load %struct.bz_stream*, %struct.bz_stream** %298, align 8
  %342 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %341, i32 0, i32 2
  %343 = load i32, i32* %342, align 4
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %350

; <label>:345:                                    ; preds = %318
  %346 = load %struct.bz_stream*, %struct.bz_stream** %299, align 8
  %347 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %346, i32 0, i32 3
  %348 = load i32, i32* %347, align 8
  %349 = add i32 %348, 1
  store i32 %349, i32* %347, align 8
  br label %350

; <label>:350:                                    ; preds = %345, %318
  %351 = load i32, i32* %287, align 4
  %352 = icmp sge i32 %351, 8
  br i1 %352, label %._crit_edge619.loopexit, label %.lr.ph618

; <label>:353:                                    ; preds = %._crit_edge619
  %354 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %355 = load i32, i32* %354, align 8
  %356 = icmp sgt i32 %355, 57
  br i1 %356, label %.loopexit, label %357

; <label>:357:                                    ; preds = %353
  %358 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %359 = load i32, i32* %358, align 8
  %360 = sub nsw i32 %359, 48
  store i32 %360, i32* %358, align 8
  %361 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 10
  %362 = load i8, i8* %361, align 4
  %363 = icmp ne i8 %362, 0
  %364 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 9
  %365 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %364, align 8
  %366 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 11
  %367 = load i8*, i8** %366, align 8
  %368 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %369 = load i32, i32* %368, align 8
  %370 = mul nsw i32 %369, 100000
  %371 = sext i32 %370 to i64
  br i1 %363, label %372, label %399

; <label>:372:                                    ; preds = %357
  %373 = mul i64 %371, 2
  %374 = trunc i64 %373 to i32
  %375 = call i8* %365(i8* %367, i32 %374, i32 1)
  %376 = bitcast i8* %375 to i16*
  %377 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  store i16* %376, i16** %377, align 8
  %378 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 9
  %379 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %378, align 8
  %380 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %4, i32 0, i32 11
  %381 = load i8*, i8** %380, align 8
  %382 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %383 = load i32, i32* %382, align 8
  %384 = mul nsw i32 %383, 100000
  %385 = add nsw i32 1, %384
  %386 = ashr i32 %385, 1
  %387 = sext i32 %386 to i64
  %388 = mul i64 %387, 1
  %389 = trunc i64 %388 to i32
  %390 = call i8* %379(i8* %381, i32 %389, i32 1)
  %391 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  store i8* %390, i8** %391, align 8
  %392 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %393 = load i16*, i16** %392, align 8
  %394 = icmp eq i16* %393, null
  br i1 %394, label %.loopexit, label %395

; <label>:395:                                    ; preds = %372
  %396 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %397 = load i8*, i8** %396, align 8
  %398 = icmp eq i8* %397, null
  br i1 %398, label %.loopexit, label %408

; <label>:399:                                    ; preds = %357
  %400 = mul i64 %371, 4
  %401 = trunc i64 %400 to i32
  %402 = call i8* %365(i8* %367, i32 %401, i32 1)
  %403 = bitcast i8* %402 to i32*
  %404 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  store i32* %403, i32** %404, align 8
  %405 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %406 = load i32*, i32** %405, align 8
  %407 = icmp eq i32* %406, null
  br i1 %407, label %.loopexit, label %408

; <label>:408:                                    ; preds = %395, %399, %33
  %409 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 14, i32* %409, align 8
  %410 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %411 = load i32, i32* %410, align 4
  %412 = icmp sge i32 %411, 8
  br i1 %412, label %._crit_edge616, label %.lr.ph615.preheader

.lr.ph615.preheader:                              ; preds = %408
  %413 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %414 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %415 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %416 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %417 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %418 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %419 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %420 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %421 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %422 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph615

._crit_edge616.loopexit:                          ; preds = %472
  br label %._crit_edge616

._crit_edge616:                                   ; preds = %._crit_edge616.loopexit, %408
  %423 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %424 = load i32, i32* %423, align 8
  %425 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %426 = load i32, i32* %425, align 4
  %427 = sub nsw i32 %426, 8
  %428 = lshr i32 %424, %427
  %429 = and i32 %428, 255
  %430 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %431 = load i32, i32* %430, align 4
  %432 = sub nsw i32 %431, 8
  store i32 %432, i32* %430, align 4
  %433 = trunc i32 %429 to i8
  %434 = zext i8 %433 to i32
  %435 = icmp eq i32 %434, 23
  br i1 %435, label %3366, label %475

.lr.ph615:                                        ; preds = %.lr.ph615.preheader, %472
  call void @unroll_loop(i32 91)
  %436 = load %struct.bz_stream*, %struct.bz_stream** %413, align 8
  %437 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %436, i32 0, i32 1
  %438 = load i32, i32* %437, align 8
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %.loopexit.loopexit901, label %440

; <label>:440:                                    ; preds = %.lr.ph615
  %441 = load i32, i32* %414, align 8
  %442 = shl i32 %441, 8
  %443 = load %struct.bz_stream*, %struct.bz_stream** %415, align 8
  %444 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %443, i32 0, i32 0
  %445 = load i8*, i8** %444, align 8
  %446 = load i8, i8* %445, align 1
  %447 = zext i8 %446 to i32
  %448 = or i32 %442, %447
  store i32 %448, i32* %416, align 8
  %449 = load i32, i32* %417, align 4
  %450 = add nsw i32 %449, 8
  store i32 %450, i32* %417, align 4
  %451 = load %struct.bz_stream*, %struct.bz_stream** %418, align 8
  %452 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %451, i32 0, i32 0
  %453 = load i8*, i8** %452, align 8
  %454 = getelementptr inbounds i8, i8* %453, i32 1
  store i8* %454, i8** %452, align 8
  %455 = load %struct.bz_stream*, %struct.bz_stream** %419, align 8
  %456 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %455, i32 0, i32 1
  %457 = load i32, i32* %456, align 8
  %458 = add i32 %457, -1
  store i32 %458, i32* %456, align 8
  %459 = load %struct.bz_stream*, %struct.bz_stream** %420, align 8
  %460 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %459, i32 0, i32 2
  %461 = load i32, i32* %460, align 4
  %462 = add i32 %461, 1
  store i32 %462, i32* %460, align 4
  %463 = load %struct.bz_stream*, %struct.bz_stream** %421, align 8
  %464 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %463, i32 0, i32 2
  %465 = load i32, i32* %464, align 4
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %472

; <label>:467:                                    ; preds = %440
  %468 = load %struct.bz_stream*, %struct.bz_stream** %422, align 8
  %469 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %468, i32 0, i32 3
  %470 = load i32, i32* %469, align 8
  %471 = add i32 %470, 1
  store i32 %471, i32* %469, align 8
  br label %472

; <label>:472:                                    ; preds = %467, %440
  %473 = load i32, i32* %410, align 4
  %474 = icmp sge i32 %473, 8
  br i1 %474, label %._crit_edge616.loopexit, label %.lr.ph615

; <label>:475:                                    ; preds = %._crit_edge616
  %476 = zext i8 %433 to i32
  %477 = icmp ne i32 %476, 49
  br i1 %477, label %.loopexit, label %478

; <label>:478:                                    ; preds = %475, %33
  %479 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 15, i32* %479, align 8
  %480 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %481 = load i32, i32* %480, align 4
  %482 = icmp sge i32 %481, 8
  br i1 %482, label %._crit_edge613, label %.lr.ph612.preheader

.lr.ph612.preheader:                              ; preds = %478
  %483 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %484 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %485 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %486 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %487 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %488 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %489 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %490 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %491 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %492 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph612

._crit_edge613.loopexit:                          ; preds = %542
  br label %._crit_edge613

._crit_edge613:                                   ; preds = %._crit_edge613.loopexit, %478
  %493 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %494 = load i32, i32* %493, align 8
  %495 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %496 = load i32, i32* %495, align 4
  %497 = sub nsw i32 %496, 8
  %498 = lshr i32 %494, %497
  %499 = and i32 %498, 255
  %500 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %501 = load i32, i32* %500, align 4
  %502 = sub nsw i32 %501, 8
  store i32 %502, i32* %500, align 4
  %503 = trunc i32 %499 to i8
  %504 = zext i8 %503 to i32
  %505 = icmp ne i32 %504, 65
  br i1 %505, label %.loopexit, label %545

.lr.ph612:                                        ; preds = %.lr.ph612.preheader, %542
  call void @unroll_loop(i32 92)
  %506 = load %struct.bz_stream*, %struct.bz_stream** %483, align 8
  %507 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %506, i32 0, i32 1
  %508 = load i32, i32* %507, align 8
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %.loopexit.loopexit876, label %510

; <label>:510:                                    ; preds = %.lr.ph612
  %511 = load i32, i32* %484, align 8
  %512 = shl i32 %511, 8
  %513 = load %struct.bz_stream*, %struct.bz_stream** %485, align 8
  %514 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %513, i32 0, i32 0
  %515 = load i8*, i8** %514, align 8
  %516 = load i8, i8* %515, align 1
  %517 = zext i8 %516 to i32
  %518 = or i32 %512, %517
  store i32 %518, i32* %486, align 8
  %519 = load i32, i32* %487, align 4
  %520 = add nsw i32 %519, 8
  store i32 %520, i32* %487, align 4
  %521 = load %struct.bz_stream*, %struct.bz_stream** %488, align 8
  %522 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %521, i32 0, i32 0
  %523 = load i8*, i8** %522, align 8
  %524 = getelementptr inbounds i8, i8* %523, i32 1
  store i8* %524, i8** %522, align 8
  %525 = load %struct.bz_stream*, %struct.bz_stream** %489, align 8
  %526 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %525, i32 0, i32 1
  %527 = load i32, i32* %526, align 8
  %528 = add i32 %527, -1
  store i32 %528, i32* %526, align 8
  %529 = load %struct.bz_stream*, %struct.bz_stream** %490, align 8
  %530 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %529, i32 0, i32 2
  %531 = load i32, i32* %530, align 4
  %532 = add i32 %531, 1
  store i32 %532, i32* %530, align 4
  %533 = load %struct.bz_stream*, %struct.bz_stream** %491, align 8
  %534 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %533, i32 0, i32 2
  %535 = load i32, i32* %534, align 4
  %536 = icmp eq i32 %535, 0
  br i1 %536, label %537, label %542

; <label>:537:                                    ; preds = %510
  %538 = load %struct.bz_stream*, %struct.bz_stream** %492, align 8
  %539 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %538, i32 0, i32 3
  %540 = load i32, i32* %539, align 8
  %541 = add i32 %540, 1
  store i32 %541, i32* %539, align 8
  br label %542

; <label>:542:                                    ; preds = %537, %510
  %543 = load i32, i32* %480, align 4
  %544 = icmp sge i32 %543, 8
  br i1 %544, label %._crit_edge613.loopexit, label %.lr.ph612

; <label>:545:                                    ; preds = %._crit_edge613, %33
  %546 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 16, i32* %546, align 8
  %547 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %548 = load i32, i32* %547, align 4
  %549 = icmp sge i32 %548, 8
  br i1 %549, label %._crit_edge610, label %.lr.ph609.preheader

.lr.ph609.preheader:                              ; preds = %545
  %550 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %551 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %552 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %553 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %554 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %555 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %556 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %557 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %558 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %559 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph609

._crit_edge610.loopexit:                          ; preds = %609
  br label %._crit_edge610

._crit_edge610:                                   ; preds = %._crit_edge610.loopexit, %545
  %560 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %561 = load i32, i32* %560, align 8
  %562 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %563 = load i32, i32* %562, align 4
  %564 = sub nsw i32 %563, 8
  %565 = lshr i32 %561, %564
  %566 = and i32 %565, 255
  %567 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %568 = load i32, i32* %567, align 4
  %569 = sub nsw i32 %568, 8
  store i32 %569, i32* %567, align 4
  %570 = trunc i32 %566 to i8
  %571 = zext i8 %570 to i32
  %572 = icmp ne i32 %571, 89
  br i1 %572, label %.loopexit, label %612

.lr.ph609:                                        ; preds = %.lr.ph609.preheader, %609
  call void @unroll_loop(i32 93)
  %573 = load %struct.bz_stream*, %struct.bz_stream** %550, align 8
  %574 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %573, i32 0, i32 1
  %575 = load i32, i32* %574, align 8
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %.loopexit.loopexit851, label %577

; <label>:577:                                    ; preds = %.lr.ph609
  %578 = load i32, i32* %551, align 8
  %579 = shl i32 %578, 8
  %580 = load %struct.bz_stream*, %struct.bz_stream** %552, align 8
  %581 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %580, i32 0, i32 0
  %582 = load i8*, i8** %581, align 8
  %583 = load i8, i8* %582, align 1
  %584 = zext i8 %583 to i32
  %585 = or i32 %579, %584
  store i32 %585, i32* %553, align 8
  %586 = load i32, i32* %554, align 4
  %587 = add nsw i32 %586, 8
  store i32 %587, i32* %554, align 4
  %588 = load %struct.bz_stream*, %struct.bz_stream** %555, align 8
  %589 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %588, i32 0, i32 0
  %590 = load i8*, i8** %589, align 8
  %591 = getelementptr inbounds i8, i8* %590, i32 1
  store i8* %591, i8** %589, align 8
  %592 = load %struct.bz_stream*, %struct.bz_stream** %556, align 8
  %593 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %592, i32 0, i32 1
  %594 = load i32, i32* %593, align 8
  %595 = add i32 %594, -1
  store i32 %595, i32* %593, align 8
  %596 = load %struct.bz_stream*, %struct.bz_stream** %557, align 8
  %597 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %596, i32 0, i32 2
  %598 = load i32, i32* %597, align 4
  %599 = add i32 %598, 1
  store i32 %599, i32* %597, align 4
  %600 = load %struct.bz_stream*, %struct.bz_stream** %558, align 8
  %601 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %600, i32 0, i32 2
  %602 = load i32, i32* %601, align 4
  %603 = icmp eq i32 %602, 0
  br i1 %603, label %604, label %609

; <label>:604:                                    ; preds = %577
  %605 = load %struct.bz_stream*, %struct.bz_stream** %559, align 8
  %606 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %605, i32 0, i32 3
  %607 = load i32, i32* %606, align 8
  %608 = add i32 %607, 1
  store i32 %608, i32* %606, align 8
  br label %609

; <label>:609:                                    ; preds = %604, %577
  %610 = load i32, i32* %547, align 4
  %611 = icmp sge i32 %610, 8
  br i1 %611, label %._crit_edge610.loopexit, label %.lr.ph609

; <label>:612:                                    ; preds = %._crit_edge610, %33
  %613 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 17, i32* %613, align 8
  %614 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %615 = load i32, i32* %614, align 4
  %616 = icmp sge i32 %615, 8
  br i1 %616, label %._crit_edge607, label %.lr.ph606.preheader

.lr.ph606.preheader:                              ; preds = %612
  %617 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %618 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %619 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %620 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %621 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %622 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %623 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %624 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %625 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %626 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph606

._crit_edge607.loopexit:                          ; preds = %676
  br label %._crit_edge607

._crit_edge607:                                   ; preds = %._crit_edge607.loopexit, %612
  %627 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %628 = load i32, i32* %627, align 8
  %629 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %630 = load i32, i32* %629, align 4
  %631 = sub nsw i32 %630, 8
  %632 = lshr i32 %628, %631
  %633 = and i32 %632, 255
  %634 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %635 = load i32, i32* %634, align 4
  %636 = sub nsw i32 %635, 8
  store i32 %636, i32* %634, align 4
  %637 = trunc i32 %633 to i8
  %638 = zext i8 %637 to i32
  %639 = icmp ne i32 %638, 38
  br i1 %639, label %.loopexit, label %679

.lr.ph606:                                        ; preds = %.lr.ph606.preheader, %676
  call void @unroll_loop(i32 94)
  %640 = load %struct.bz_stream*, %struct.bz_stream** %617, align 8
  %641 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %640, i32 0, i32 1
  %642 = load i32, i32* %641, align 8
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %.loopexit.loopexit826, label %644

; <label>:644:                                    ; preds = %.lr.ph606
  %645 = load i32, i32* %618, align 8
  %646 = shl i32 %645, 8
  %647 = load %struct.bz_stream*, %struct.bz_stream** %619, align 8
  %648 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %647, i32 0, i32 0
  %649 = load i8*, i8** %648, align 8
  %650 = load i8, i8* %649, align 1
  %651 = zext i8 %650 to i32
  %652 = or i32 %646, %651
  store i32 %652, i32* %620, align 8
  %653 = load i32, i32* %621, align 4
  %654 = add nsw i32 %653, 8
  store i32 %654, i32* %621, align 4
  %655 = load %struct.bz_stream*, %struct.bz_stream** %622, align 8
  %656 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %655, i32 0, i32 0
  %657 = load i8*, i8** %656, align 8
  %658 = getelementptr inbounds i8, i8* %657, i32 1
  store i8* %658, i8** %656, align 8
  %659 = load %struct.bz_stream*, %struct.bz_stream** %623, align 8
  %660 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %659, i32 0, i32 1
  %661 = load i32, i32* %660, align 8
  %662 = add i32 %661, -1
  store i32 %662, i32* %660, align 8
  %663 = load %struct.bz_stream*, %struct.bz_stream** %624, align 8
  %664 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %663, i32 0, i32 2
  %665 = load i32, i32* %664, align 4
  %666 = add i32 %665, 1
  store i32 %666, i32* %664, align 4
  %667 = load %struct.bz_stream*, %struct.bz_stream** %625, align 8
  %668 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %667, i32 0, i32 2
  %669 = load i32, i32* %668, align 4
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %676

; <label>:671:                                    ; preds = %644
  %672 = load %struct.bz_stream*, %struct.bz_stream** %626, align 8
  %673 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %672, i32 0, i32 3
  %674 = load i32, i32* %673, align 8
  %675 = add i32 %674, 1
  store i32 %675, i32* %673, align 8
  br label %676

; <label>:676:                                    ; preds = %671, %644
  %677 = load i32, i32* %614, align 4
  %678 = icmp sge i32 %677, 8
  br i1 %678, label %._crit_edge607.loopexit, label %.lr.ph606

; <label>:679:                                    ; preds = %._crit_edge607, %33
  %680 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 18, i32* %680, align 8
  %681 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %682 = load i32, i32* %681, align 4
  %683 = icmp sge i32 %682, 8
  br i1 %683, label %._crit_edge604, label %.lr.ph603.preheader

.lr.ph603.preheader:                              ; preds = %679
  %684 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %685 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %686 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %687 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %688 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %689 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %690 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %691 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %692 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %693 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph603

._crit_edge604.loopexit:                          ; preds = %743
  br label %._crit_edge604

._crit_edge604:                                   ; preds = %._crit_edge604.loopexit, %679
  %694 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %695 = load i32, i32* %694, align 8
  %696 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %697 = load i32, i32* %696, align 4
  %698 = sub nsw i32 %697, 8
  %699 = lshr i32 %695, %698
  %700 = and i32 %699, 255
  %701 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %702 = load i32, i32* %701, align 4
  %703 = sub nsw i32 %702, 8
  store i32 %703, i32* %701, align 4
  %704 = trunc i32 %700 to i8
  %705 = zext i8 %704 to i32
  %706 = icmp ne i32 %705, 83
  br i1 %706, label %.loopexit, label %746

.lr.ph603:                                        ; preds = %.lr.ph603.preheader, %743
  call void @unroll_loop(i32 95)
  %707 = load %struct.bz_stream*, %struct.bz_stream** %684, align 8
  %708 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %707, i32 0, i32 1
  %709 = load i32, i32* %708, align 8
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %.loopexit.loopexit801, label %711

; <label>:711:                                    ; preds = %.lr.ph603
  %712 = load i32, i32* %685, align 8
  %713 = shl i32 %712, 8
  %714 = load %struct.bz_stream*, %struct.bz_stream** %686, align 8
  %715 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %714, i32 0, i32 0
  %716 = load i8*, i8** %715, align 8
  %717 = load i8, i8* %716, align 1
  %718 = zext i8 %717 to i32
  %719 = or i32 %713, %718
  store i32 %719, i32* %687, align 8
  %720 = load i32, i32* %688, align 4
  %721 = add nsw i32 %720, 8
  store i32 %721, i32* %688, align 4
  %722 = load %struct.bz_stream*, %struct.bz_stream** %689, align 8
  %723 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %722, i32 0, i32 0
  %724 = load i8*, i8** %723, align 8
  %725 = getelementptr inbounds i8, i8* %724, i32 1
  store i8* %725, i8** %723, align 8
  %726 = load %struct.bz_stream*, %struct.bz_stream** %690, align 8
  %727 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %726, i32 0, i32 1
  %728 = load i32, i32* %727, align 8
  %729 = add i32 %728, -1
  store i32 %729, i32* %727, align 8
  %730 = load %struct.bz_stream*, %struct.bz_stream** %691, align 8
  %731 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %730, i32 0, i32 2
  %732 = load i32, i32* %731, align 4
  %733 = add i32 %732, 1
  store i32 %733, i32* %731, align 4
  %734 = load %struct.bz_stream*, %struct.bz_stream** %692, align 8
  %735 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %734, i32 0, i32 2
  %736 = load i32, i32* %735, align 4
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %743

; <label>:738:                                    ; preds = %711
  %739 = load %struct.bz_stream*, %struct.bz_stream** %693, align 8
  %740 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %739, i32 0, i32 3
  %741 = load i32, i32* %740, align 8
  %742 = add i32 %741, 1
  store i32 %742, i32* %740, align 8
  br label %743

; <label>:743:                                    ; preds = %738, %711
  %744 = load i32, i32* %681, align 4
  %745 = icmp sge i32 %744, 8
  br i1 %745, label %._crit_edge604.loopexit, label %.lr.ph603

; <label>:746:                                    ; preds = %._crit_edge604, %33
  %747 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 19, i32* %747, align 8
  %748 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %749 = load i32, i32* %748, align 4
  %750 = icmp sge i32 %749, 8
  br i1 %750, label %._crit_edge601, label %.lr.ph600.preheader

.lr.ph600.preheader:                              ; preds = %746
  %751 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %752 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %753 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %754 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %755 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %756 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %757 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %758 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %759 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %760 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph600

._crit_edge601.loopexit:                          ; preds = %810
  br label %._crit_edge601

._crit_edge601:                                   ; preds = %._crit_edge601.loopexit, %746
  %761 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %762 = load i32, i32* %761, align 8
  %763 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %764 = load i32, i32* %763, align 4
  %765 = sub nsw i32 %764, 8
  %766 = lshr i32 %762, %765
  %767 = and i32 %766, 255
  %768 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %769 = load i32, i32* %768, align 4
  %770 = sub nsw i32 %769, 8
  store i32 %770, i32* %768, align 4
  %771 = trunc i32 %767 to i8
  %772 = zext i8 %771 to i32
  %773 = icmp ne i32 %772, 89
  br i1 %773, label %.loopexit, label %813

.lr.ph600:                                        ; preds = %.lr.ph600.preheader, %810
  call void @unroll_loop(i32 96)
  %774 = load %struct.bz_stream*, %struct.bz_stream** %751, align 8
  %775 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %774, i32 0, i32 1
  %776 = load i32, i32* %775, align 8
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %.loopexit.loopexit776, label %778

; <label>:778:                                    ; preds = %.lr.ph600
  %779 = load i32, i32* %752, align 8
  %780 = shl i32 %779, 8
  %781 = load %struct.bz_stream*, %struct.bz_stream** %753, align 8
  %782 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %781, i32 0, i32 0
  %783 = load i8*, i8** %782, align 8
  %784 = load i8, i8* %783, align 1
  %785 = zext i8 %784 to i32
  %786 = or i32 %780, %785
  store i32 %786, i32* %754, align 8
  %787 = load i32, i32* %755, align 4
  %788 = add nsw i32 %787, 8
  store i32 %788, i32* %755, align 4
  %789 = load %struct.bz_stream*, %struct.bz_stream** %756, align 8
  %790 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %789, i32 0, i32 0
  %791 = load i8*, i8** %790, align 8
  %792 = getelementptr inbounds i8, i8* %791, i32 1
  store i8* %792, i8** %790, align 8
  %793 = load %struct.bz_stream*, %struct.bz_stream** %757, align 8
  %794 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %793, i32 0, i32 1
  %795 = load i32, i32* %794, align 8
  %796 = add i32 %795, -1
  store i32 %796, i32* %794, align 8
  %797 = load %struct.bz_stream*, %struct.bz_stream** %758, align 8
  %798 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %797, i32 0, i32 2
  %799 = load i32, i32* %798, align 4
  %800 = add i32 %799, 1
  store i32 %800, i32* %798, align 4
  %801 = load %struct.bz_stream*, %struct.bz_stream** %759, align 8
  %802 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %801, i32 0, i32 2
  %803 = load i32, i32* %802, align 4
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %805, label %810

; <label>:805:                                    ; preds = %778
  %806 = load %struct.bz_stream*, %struct.bz_stream** %760, align 8
  %807 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %806, i32 0, i32 3
  %808 = load i32, i32* %807, align 8
  %809 = add i32 %808, 1
  store i32 %809, i32* %807, align 8
  br label %810

; <label>:810:                                    ; preds = %805, %778
  %811 = load i32, i32* %748, align 4
  %812 = icmp sge i32 %811, 8
  br i1 %812, label %._crit_edge601.loopexit, label %.lr.ph600

; <label>:813:                                    ; preds = %._crit_edge601
  %814 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 11
  %815 = load i32, i32* %814, align 8
  %816 = add nsw i32 %815, 1
  store i32 %816, i32* %814, align 8
  %817 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 12
  %818 = load i32, i32* %817, align 4
  %819 = icmp sge i32 %818, 2
  br i1 %819, label %820, label %826

; <label>:820:                                    ; preds = %813
  %821 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %822 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 11
  %823 = load i32, i32* %822, align 8
  %824 = getelementptr [20 x i8], [20 x i8]* @.str.160, i32 0, i32 0
  %825 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %821, i8* %824, i32 %823)
  br label %826

; <label>:826:                                    ; preds = %820, %813
  %827 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 0, i32* %827, align 8
  br label %828

; <label>:828:                                    ; preds = %33, %826
  %829 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 20, i32* %829, align 8
  %830 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %831 = load i32, i32* %830, align 4
  %832 = icmp sge i32 %831, 8
  br i1 %832, label %._crit_edge598, label %.lr.ph597.preheader

.lr.ph597.preheader:                              ; preds = %828
  %833 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %834 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %835 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %836 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %837 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %838 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %839 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %840 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %841 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %842 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph597

._crit_edge598.loopexit:                          ; preds = %896
  br label %._crit_edge598

._crit_edge598:                                   ; preds = %._crit_edge598.loopexit, %828
  %843 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %844 = load i32, i32* %843, align 8
  %845 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %846 = load i32, i32* %845, align 4
  %847 = sub nsw i32 %846, 8
  %848 = lshr i32 %844, %847
  %849 = and i32 %848, 255
  %850 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %851 = load i32, i32* %850, align 4
  %852 = sub nsw i32 %851, 8
  store i32 %852, i32* %850, align 4
  %853 = trunc i32 %849 to i8
  %854 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  %855 = load i32, i32* %854, align 8
  %856 = shl i32 %855, 8
  %857 = zext i8 %853 to i32
  %858 = or i32 %856, %857
  %859 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 %858, i32* %859, align 8
  br label %899

.lr.ph597:                                        ; preds = %.lr.ph597.preheader, %896
  call void @unroll_loop(i32 97)
  %860 = load %struct.bz_stream*, %struct.bz_stream** %833, align 8
  %861 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %860, i32 0, i32 1
  %862 = load i32, i32* %861, align 8
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %.loopexit.loopexit751, label %864

; <label>:864:                                    ; preds = %.lr.ph597
  %865 = load i32, i32* %834, align 8
  %866 = shl i32 %865, 8
  %867 = load %struct.bz_stream*, %struct.bz_stream** %835, align 8
  %868 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %867, i32 0, i32 0
  %869 = load i8*, i8** %868, align 8
  %870 = load i8, i8* %869, align 1
  %871 = zext i8 %870 to i32
  %872 = or i32 %866, %871
  store i32 %872, i32* %836, align 8
  %873 = load i32, i32* %837, align 4
  %874 = add nsw i32 %873, 8
  store i32 %874, i32* %837, align 4
  %875 = load %struct.bz_stream*, %struct.bz_stream** %838, align 8
  %876 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %875, i32 0, i32 0
  %877 = load i8*, i8** %876, align 8
  %878 = getelementptr inbounds i8, i8* %877, i32 1
  store i8* %878, i8** %876, align 8
  %879 = load %struct.bz_stream*, %struct.bz_stream** %839, align 8
  %880 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %879, i32 0, i32 1
  %881 = load i32, i32* %880, align 8
  %882 = add i32 %881, -1
  store i32 %882, i32* %880, align 8
  %883 = load %struct.bz_stream*, %struct.bz_stream** %840, align 8
  %884 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %883, i32 0, i32 2
  %885 = load i32, i32* %884, align 4
  %886 = add i32 %885, 1
  store i32 %886, i32* %884, align 4
  %887 = load %struct.bz_stream*, %struct.bz_stream** %841, align 8
  %888 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %887, i32 0, i32 2
  %889 = load i32, i32* %888, align 4
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %891, label %896

; <label>:891:                                    ; preds = %864
  %892 = load %struct.bz_stream*, %struct.bz_stream** %842, align 8
  %893 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %892, i32 0, i32 3
  %894 = load i32, i32* %893, align 8
  %895 = add i32 %894, 1
  store i32 %895, i32* %893, align 8
  br label %896

; <label>:896:                                    ; preds = %891, %864
  %897 = load i32, i32* %830, align 4
  %898 = icmp sge i32 %897, 8
  br i1 %898, label %._crit_edge598.loopexit, label %.lr.ph597

; <label>:899:                                    ; preds = %33, %._crit_edge598
  %900 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 21, i32* %900, align 8
  %901 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %902 = load i32, i32* %901, align 4
  %903 = icmp sge i32 %902, 8
  br i1 %903, label %._crit_edge595, label %.lr.ph594.preheader

.lr.ph594.preheader:                              ; preds = %899
  %904 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %905 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %906 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %907 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %908 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %909 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %910 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %911 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %912 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %913 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph594

._crit_edge595.loopexit:                          ; preds = %967
  br label %._crit_edge595

._crit_edge595:                                   ; preds = %._crit_edge595.loopexit, %899
  %914 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %915 = load i32, i32* %914, align 8
  %916 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %917 = load i32, i32* %916, align 4
  %918 = sub nsw i32 %917, 8
  %919 = lshr i32 %915, %918
  %920 = and i32 %919, 255
  %921 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %922 = load i32, i32* %921, align 4
  %923 = sub nsw i32 %922, 8
  store i32 %923, i32* %921, align 4
  %924 = trunc i32 %920 to i8
  %925 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  %926 = load i32, i32* %925, align 8
  %927 = shl i32 %926, 8
  %928 = zext i8 %924 to i32
  %929 = or i32 %927, %928
  %930 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 %929, i32* %930, align 8
  br label %970

.lr.ph594:                                        ; preds = %.lr.ph594.preheader, %967
  call void @unroll_loop(i32 98)
  %931 = load %struct.bz_stream*, %struct.bz_stream** %904, align 8
  %932 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %931, i32 0, i32 1
  %933 = load i32, i32* %932, align 8
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %.loopexit.loopexit726, label %935

; <label>:935:                                    ; preds = %.lr.ph594
  %936 = load i32, i32* %905, align 8
  %937 = shl i32 %936, 8
  %938 = load %struct.bz_stream*, %struct.bz_stream** %906, align 8
  %939 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %938, i32 0, i32 0
  %940 = load i8*, i8** %939, align 8
  %941 = load i8, i8* %940, align 1
  %942 = zext i8 %941 to i32
  %943 = or i32 %937, %942
  store i32 %943, i32* %907, align 8
  %944 = load i32, i32* %908, align 4
  %945 = add nsw i32 %944, 8
  store i32 %945, i32* %908, align 4
  %946 = load %struct.bz_stream*, %struct.bz_stream** %909, align 8
  %947 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %946, i32 0, i32 0
  %948 = load i8*, i8** %947, align 8
  %949 = getelementptr inbounds i8, i8* %948, i32 1
  store i8* %949, i8** %947, align 8
  %950 = load %struct.bz_stream*, %struct.bz_stream** %910, align 8
  %951 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %950, i32 0, i32 1
  %952 = load i32, i32* %951, align 8
  %953 = add i32 %952, -1
  store i32 %953, i32* %951, align 8
  %954 = load %struct.bz_stream*, %struct.bz_stream** %911, align 8
  %955 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %954, i32 0, i32 2
  %956 = load i32, i32* %955, align 4
  %957 = add i32 %956, 1
  store i32 %957, i32* %955, align 4
  %958 = load %struct.bz_stream*, %struct.bz_stream** %912, align 8
  %959 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %958, i32 0, i32 2
  %960 = load i32, i32* %959, align 4
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %967

; <label>:962:                                    ; preds = %935
  %963 = load %struct.bz_stream*, %struct.bz_stream** %913, align 8
  %964 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %963, i32 0, i32 3
  %965 = load i32, i32* %964, align 8
  %966 = add i32 %965, 1
  store i32 %966, i32* %964, align 8
  br label %967

; <label>:967:                                    ; preds = %962, %935
  %968 = load i32, i32* %901, align 4
  %969 = icmp sge i32 %968, 8
  br i1 %969, label %._crit_edge595.loopexit, label %.lr.ph594

; <label>:970:                                    ; preds = %33, %._crit_edge595
  %971 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 22, i32* %971, align 8
  %972 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %973 = load i32, i32* %972, align 4
  %974 = icmp sge i32 %973, 8
  br i1 %974, label %._crit_edge592, label %.lr.ph591.preheader

.lr.ph591.preheader:                              ; preds = %970
  %975 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %976 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %977 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %978 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %979 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %980 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %981 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %982 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %983 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %984 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph591

._crit_edge592.loopexit:                          ; preds = %1038
  br label %._crit_edge592

._crit_edge592:                                   ; preds = %._crit_edge592.loopexit, %970
  %985 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %986 = load i32, i32* %985, align 8
  %987 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %988 = load i32, i32* %987, align 4
  %989 = sub nsw i32 %988, 8
  %990 = lshr i32 %986, %989
  %991 = and i32 %990, 255
  %992 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %993 = load i32, i32* %992, align 4
  %994 = sub nsw i32 %993, 8
  store i32 %994, i32* %992, align 4
  %995 = trunc i32 %991 to i8
  %996 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  %997 = load i32, i32* %996, align 8
  %998 = shl i32 %997, 8
  %999 = zext i8 %995 to i32
  %1000 = or i32 %998, %999
  %1001 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 %1000, i32* %1001, align 8
  br label %1041

.lr.ph591:                                        ; preds = %.lr.ph591.preheader, %1038
  call void @unroll_loop(i32 99)
  %1002 = load %struct.bz_stream*, %struct.bz_stream** %975, align 8
  %1003 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1002, i32 0, i32 1
  %1004 = load i32, i32* %1003, align 8
  %1005 = icmp eq i32 %1004, 0
  br i1 %1005, label %.loopexit.loopexit701, label %1006

; <label>:1006:                                   ; preds = %.lr.ph591
  %1007 = load i32, i32* %976, align 8
  %1008 = shl i32 %1007, 8
  %1009 = load %struct.bz_stream*, %struct.bz_stream** %977, align 8
  %1010 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1009, i32 0, i32 0
  %1011 = load i8*, i8** %1010, align 8
  %1012 = load i8, i8* %1011, align 1
  %1013 = zext i8 %1012 to i32
  %1014 = or i32 %1008, %1013
  store i32 %1014, i32* %978, align 8
  %1015 = load i32, i32* %979, align 4
  %1016 = add nsw i32 %1015, 8
  store i32 %1016, i32* %979, align 4
  %1017 = load %struct.bz_stream*, %struct.bz_stream** %980, align 8
  %1018 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1017, i32 0, i32 0
  %1019 = load i8*, i8** %1018, align 8
  %1020 = getelementptr inbounds i8, i8* %1019, i32 1
  store i8* %1020, i8** %1018, align 8
  %1021 = load %struct.bz_stream*, %struct.bz_stream** %981, align 8
  %1022 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1021, i32 0, i32 1
  %1023 = load i32, i32* %1022, align 8
  %1024 = add i32 %1023, -1
  store i32 %1024, i32* %1022, align 8
  %1025 = load %struct.bz_stream*, %struct.bz_stream** %982, align 8
  %1026 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1025, i32 0, i32 2
  %1027 = load i32, i32* %1026, align 4
  %1028 = add i32 %1027, 1
  store i32 %1028, i32* %1026, align 4
  %1029 = load %struct.bz_stream*, %struct.bz_stream** %983, align 8
  %1030 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1029, i32 0, i32 2
  %1031 = load i32, i32* %1030, align 4
  %1032 = icmp eq i32 %1031, 0
  br i1 %1032, label %1033, label %1038

; <label>:1033:                                   ; preds = %1006
  %1034 = load %struct.bz_stream*, %struct.bz_stream** %984, align 8
  %1035 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1034, i32 0, i32 3
  %1036 = load i32, i32* %1035, align 8
  %1037 = add i32 %1036, 1
  store i32 %1037, i32* %1035, align 8
  br label %1038

; <label>:1038:                                   ; preds = %1033, %1006
  %1039 = load i32, i32* %972, align 4
  %1040 = icmp sge i32 %1039, 8
  br i1 %1040, label %._crit_edge592.loopexit, label %.lr.ph591

; <label>:1041:                                   ; preds = %33, %._crit_edge592
  %1042 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 23, i32* %1042, align 8
  %1043 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1044 = load i32, i32* %1043, align 4
  %1045 = icmp sge i32 %1044, 8
  br i1 %1045, label %._crit_edge589, label %.lr.ph588.preheader

.lr.ph588.preheader:                              ; preds = %1041
  %1046 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1047 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1048 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1049 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1050 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1051 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1052 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1053 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1054 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1055 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph588

._crit_edge589.loopexit:                          ; preds = %1109
  br label %._crit_edge589

._crit_edge589:                                   ; preds = %._crit_edge589.loopexit, %1041
  %1056 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1057 = load i32, i32* %1056, align 8
  %1058 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1059 = load i32, i32* %1058, align 4
  %1060 = sub nsw i32 %1059, 8
  %1061 = lshr i32 %1057, %1060
  %1062 = and i32 %1061, 255
  %1063 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1064 = load i32, i32* %1063, align 4
  %1065 = sub nsw i32 %1064, 8
  store i32 %1065, i32* %1063, align 4
  %1066 = trunc i32 %1062 to i8
  %1067 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  %1068 = load i32, i32* %1067, align 8
  %1069 = shl i32 %1068, 8
  %1070 = zext i8 %1066 to i32
  %1071 = or i32 %1069, %1070
  %1072 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 23
  store i32 %1071, i32* %1072, align 8
  br label %1112

.lr.ph588:                                        ; preds = %.lr.ph588.preheader, %1109
  call void @unroll_loop(i32 100)
  %1073 = load %struct.bz_stream*, %struct.bz_stream** %1046, align 8
  %1074 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1073, i32 0, i32 1
  %1075 = load i32, i32* %1074, align 8
  %1076 = icmp eq i32 %1075, 0
  br i1 %1076, label %.loopexit.loopexit676, label %1077

; <label>:1077:                                   ; preds = %.lr.ph588
  %1078 = load i32, i32* %1047, align 8
  %1079 = shl i32 %1078, 8
  %1080 = load %struct.bz_stream*, %struct.bz_stream** %1048, align 8
  %1081 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1080, i32 0, i32 0
  %1082 = load i8*, i8** %1081, align 8
  %1083 = load i8, i8* %1082, align 1
  %1084 = zext i8 %1083 to i32
  %1085 = or i32 %1079, %1084
  store i32 %1085, i32* %1049, align 8
  %1086 = load i32, i32* %1050, align 4
  %1087 = add nsw i32 %1086, 8
  store i32 %1087, i32* %1050, align 4
  %1088 = load %struct.bz_stream*, %struct.bz_stream** %1051, align 8
  %1089 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1088, i32 0, i32 0
  %1090 = load i8*, i8** %1089, align 8
  %1091 = getelementptr inbounds i8, i8* %1090, i32 1
  store i8* %1091, i8** %1089, align 8
  %1092 = load %struct.bz_stream*, %struct.bz_stream** %1052, align 8
  %1093 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1092, i32 0, i32 1
  %1094 = load i32, i32* %1093, align 8
  %1095 = add i32 %1094, -1
  store i32 %1095, i32* %1093, align 8
  %1096 = load %struct.bz_stream*, %struct.bz_stream** %1053, align 8
  %1097 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1096, i32 0, i32 2
  %1098 = load i32, i32* %1097, align 4
  %1099 = add i32 %1098, 1
  store i32 %1099, i32* %1097, align 4
  %1100 = load %struct.bz_stream*, %struct.bz_stream** %1054, align 8
  %1101 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1100, i32 0, i32 2
  %1102 = load i32, i32* %1101, align 4
  %1103 = icmp eq i32 %1102, 0
  br i1 %1103, label %1104, label %1109

; <label>:1104:                                   ; preds = %1077
  %1105 = load %struct.bz_stream*, %struct.bz_stream** %1055, align 8
  %1106 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1105, i32 0, i32 3
  %1107 = load i32, i32* %1106, align 8
  %1108 = add i32 %1107, 1
  store i32 %1108, i32* %1106, align 8
  br label %1109

; <label>:1109:                                   ; preds = %1104, %1077
  %1110 = load i32, i32* %1043, align 4
  %1111 = icmp sge i32 %1110, 8
  br i1 %1111, label %._crit_edge589.loopexit, label %.lr.ph588

; <label>:1112:                                   ; preds = %33, %._crit_edge589
  %1113 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 24, i32* %1113, align 8
  %1114 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1115 = load i32, i32* %1114, align 4
  %1116 = icmp sge i32 %1115, 1
  br i1 %1116, label %._crit_edge586, label %.lr.ph585.preheader

.lr.ph585.preheader:                              ; preds = %1112
  %1117 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1118 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1120 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1121 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1122 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1123 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1124 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1125 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1126 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph585

._crit_edge586.loopexit:                          ; preds = %1176
  br label %._crit_edge586

._crit_edge586:                                   ; preds = %._crit_edge586.loopexit, %1112
  %1127 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1128 = load i32, i32* %1127, align 8
  %1129 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1130 = load i32, i32* %1129, align 4
  %1131 = sub nsw i32 %1130, 1
  %1132 = lshr i32 %1128, %1131
  %1133 = and i32 %1132, 1
  %1134 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1135 = load i32, i32* %1134, align 4
  %1136 = sub nsw i32 %1135, 1
  store i32 %1136, i32* %1134, align 4
  %1137 = trunc i32 %1133 to i8
  %1138 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  store i8 %1137, i8* %1138, align 4
  %1139 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  store i32 0, i32* %1139, align 8
  br label %1179

.lr.ph585:                                        ; preds = %.lr.ph585.preheader, %1176
  call void @unroll_loop(i32 101)
  %1140 = load %struct.bz_stream*, %struct.bz_stream** %1117, align 8
  %1141 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1140, i32 0, i32 1
  %1142 = load i32, i32* %1141, align 8
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %.loopexit.loopexit651, label %1144

; <label>:1144:                                   ; preds = %.lr.ph585
  %1145 = load i32, i32* %1118, align 8
  %1146 = shl i32 %1145, 8
  %1147 = load %struct.bz_stream*, %struct.bz_stream** %1119, align 8
  %1148 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1147, i32 0, i32 0
  %1149 = load i8*, i8** %1148, align 8
  %1150 = load i8, i8* %1149, align 1
  %1151 = zext i8 %1150 to i32
  %1152 = or i32 %1146, %1151
  store i32 %1152, i32* %1120, align 8
  %1153 = load i32, i32* %1121, align 4
  %1154 = add nsw i32 %1153, 8
  store i32 %1154, i32* %1121, align 4
  %1155 = load %struct.bz_stream*, %struct.bz_stream** %1122, align 8
  %1156 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1155, i32 0, i32 0
  %1157 = load i8*, i8** %1156, align 8
  %1158 = getelementptr inbounds i8, i8* %1157, i32 1
  store i8* %1158, i8** %1156, align 8
  %1159 = load %struct.bz_stream*, %struct.bz_stream** %1123, align 8
  %1160 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1159, i32 0, i32 1
  %1161 = load i32, i32* %1160, align 8
  %1162 = add i32 %1161, -1
  store i32 %1162, i32* %1160, align 8
  %1163 = load %struct.bz_stream*, %struct.bz_stream** %1124, align 8
  %1164 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1163, i32 0, i32 2
  %1165 = load i32, i32* %1164, align 4
  %1166 = add i32 %1165, 1
  store i32 %1166, i32* %1164, align 4
  %1167 = load %struct.bz_stream*, %struct.bz_stream** %1125, align 8
  %1168 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1167, i32 0, i32 2
  %1169 = load i32, i32* %1168, align 4
  %1170 = icmp eq i32 %1169, 0
  br i1 %1170, label %1171, label %1176

; <label>:1171:                                   ; preds = %1144
  %1172 = load %struct.bz_stream*, %struct.bz_stream** %1126, align 8
  %1173 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1172, i32 0, i32 3
  %1174 = load i32, i32* %1173, align 8
  %1175 = add i32 %1174, 1
  store i32 %1175, i32* %1173, align 8
  br label %1176

; <label>:1176:                                   ; preds = %1171, %1144
  %1177 = load i32, i32* %1114, align 4
  %1178 = icmp sge i32 %1177, 1
  br i1 %1178, label %._crit_edge586.loopexit, label %.lr.ph585

; <label>:1179:                                   ; preds = %33, %._crit_edge586
  %1180 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 25, i32* %1180, align 8
  %1181 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1182 = load i32, i32* %1181, align 4
  %1183 = icmp sge i32 %1182, 8
  br i1 %1183, label %._crit_edge583, label %.lr.ph582.preheader

.lr.ph582.preheader:                              ; preds = %1179
  %1184 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1185 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1186 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1187 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1188 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1189 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1190 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1191 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1192 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1193 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph582

._crit_edge583.loopexit:                          ; preds = %1247
  br label %._crit_edge583

._crit_edge583:                                   ; preds = %._crit_edge583.loopexit, %1179
  %1194 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1195 = load i32, i32* %1194, align 8
  %1196 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1197 = load i32, i32* %1196, align 4
  %1198 = sub nsw i32 %1197, 8
  %1199 = lshr i32 %1195, %1198
  %1200 = and i32 %1199, 255
  %1201 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1202 = load i32, i32* %1201, align 4
  %1203 = sub nsw i32 %1202, 8
  store i32 %1203, i32* %1201, align 4
  %1204 = trunc i32 %1200 to i8
  %1205 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1206 = load i32, i32* %1205, align 8
  %1207 = shl i32 %1206, 8
  %1208 = zext i8 %1204 to i32
  %1209 = or i32 %1207, %1208
  %1210 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  store i32 %1209, i32* %1210, align 8
  br label %1250

.lr.ph582:                                        ; preds = %.lr.ph582.preheader, %1247
  call void @unroll_loop(i32 102)
  %1211 = load %struct.bz_stream*, %struct.bz_stream** %1184, align 8
  %1212 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1211, i32 0, i32 1
  %1213 = load i32, i32* %1212, align 8
  %1214 = icmp eq i32 %1213, 0
  br i1 %1214, label %.loopexit.loopexit626, label %1215

; <label>:1215:                                   ; preds = %.lr.ph582
  %1216 = load i32, i32* %1185, align 8
  %1217 = shl i32 %1216, 8
  %1218 = load %struct.bz_stream*, %struct.bz_stream** %1186, align 8
  %1219 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1218, i32 0, i32 0
  %1220 = load i8*, i8** %1219, align 8
  %1221 = load i8, i8* %1220, align 1
  %1222 = zext i8 %1221 to i32
  %1223 = or i32 %1217, %1222
  store i32 %1223, i32* %1187, align 8
  %1224 = load i32, i32* %1188, align 4
  %1225 = add nsw i32 %1224, 8
  store i32 %1225, i32* %1188, align 4
  %1226 = load %struct.bz_stream*, %struct.bz_stream** %1189, align 8
  %1227 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1226, i32 0, i32 0
  %1228 = load i8*, i8** %1227, align 8
  %1229 = getelementptr inbounds i8, i8* %1228, i32 1
  store i8* %1229, i8** %1227, align 8
  %1230 = load %struct.bz_stream*, %struct.bz_stream** %1190, align 8
  %1231 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1230, i32 0, i32 1
  %1232 = load i32, i32* %1231, align 8
  %1233 = add i32 %1232, -1
  store i32 %1233, i32* %1231, align 8
  %1234 = load %struct.bz_stream*, %struct.bz_stream** %1191, align 8
  %1235 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1234, i32 0, i32 2
  %1236 = load i32, i32* %1235, align 4
  %1237 = add i32 %1236, 1
  store i32 %1237, i32* %1235, align 4
  %1238 = load %struct.bz_stream*, %struct.bz_stream** %1192, align 8
  %1239 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1238, i32 0, i32 2
  %1240 = load i32, i32* %1239, align 4
  %1241 = icmp eq i32 %1240, 0
  br i1 %1241, label %1242, label %1247

; <label>:1242:                                   ; preds = %1215
  %1243 = load %struct.bz_stream*, %struct.bz_stream** %1193, align 8
  %1244 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1243, i32 0, i32 3
  %1245 = load i32, i32* %1244, align 8
  %1246 = add i32 %1245, 1
  store i32 %1246, i32* %1244, align 8
  br label %1247

; <label>:1247:                                   ; preds = %1242, %1215
  %1248 = load i32, i32* %1181, align 4
  %1249 = icmp sge i32 %1248, 8
  br i1 %1249, label %._crit_edge583.loopexit, label %.lr.ph582

; <label>:1250:                                   ; preds = %33, %._crit_edge583
  %1251 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 26, i32* %1251, align 8
  %1252 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1253 = load i32, i32* %1252, align 4
  %1254 = icmp sge i32 %1253, 8
  br i1 %1254, label %._crit_edge580, label %.lr.ph579.preheader

.lr.ph579.preheader:                              ; preds = %1250
  %1255 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1256 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1257 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1258 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1259 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1260 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1261 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1262 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1263 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1264 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph579

._crit_edge580.loopexit:                          ; preds = %1318
  br label %._crit_edge580

._crit_edge580:                                   ; preds = %._crit_edge580.loopexit, %1250
  %1265 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1266 = load i32, i32* %1265, align 8
  %1267 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1268 = load i32, i32* %1267, align 4
  %1269 = sub nsw i32 %1268, 8
  %1270 = lshr i32 %1266, %1269
  %1271 = and i32 %1270, 255
  %1272 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1273 = load i32, i32* %1272, align 4
  %1274 = sub nsw i32 %1273, 8
  store i32 %1274, i32* %1272, align 4
  %1275 = trunc i32 %1271 to i8
  %1276 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1277 = load i32, i32* %1276, align 8
  %1278 = shl i32 %1277, 8
  %1279 = zext i8 %1275 to i32
  %1280 = or i32 %1278, %1279
  %1281 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  store i32 %1280, i32* %1281, align 8
  br label %1321

.lr.ph579:                                        ; preds = %.lr.ph579.preheader, %1318
  call void @unroll_loop(i32 103)
  %1282 = load %struct.bz_stream*, %struct.bz_stream** %1255, align 8
  %1283 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1282, i32 0, i32 1
  %1284 = load i32, i32* %1283, align 8
  %1285 = icmp eq i32 %1284, 0
  br i1 %1285, label %.loopexit.loopexit601, label %1286

; <label>:1286:                                   ; preds = %.lr.ph579
  %1287 = load i32, i32* %1256, align 8
  %1288 = shl i32 %1287, 8
  %1289 = load %struct.bz_stream*, %struct.bz_stream** %1257, align 8
  %1290 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1289, i32 0, i32 0
  %1291 = load i8*, i8** %1290, align 8
  %1292 = load i8, i8* %1291, align 1
  %1293 = zext i8 %1292 to i32
  %1294 = or i32 %1288, %1293
  store i32 %1294, i32* %1258, align 8
  %1295 = load i32, i32* %1259, align 4
  %1296 = add nsw i32 %1295, 8
  store i32 %1296, i32* %1259, align 4
  %1297 = load %struct.bz_stream*, %struct.bz_stream** %1260, align 8
  %1298 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1297, i32 0, i32 0
  %1299 = load i8*, i8** %1298, align 8
  %1300 = getelementptr inbounds i8, i8* %1299, i32 1
  store i8* %1300, i8** %1298, align 8
  %1301 = load %struct.bz_stream*, %struct.bz_stream** %1261, align 8
  %1302 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1301, i32 0, i32 1
  %1303 = load i32, i32* %1302, align 8
  %1304 = add i32 %1303, -1
  store i32 %1304, i32* %1302, align 8
  %1305 = load %struct.bz_stream*, %struct.bz_stream** %1262, align 8
  %1306 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1305, i32 0, i32 2
  %1307 = load i32, i32* %1306, align 4
  %1308 = add i32 %1307, 1
  store i32 %1308, i32* %1306, align 4
  %1309 = load %struct.bz_stream*, %struct.bz_stream** %1263, align 8
  %1310 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1309, i32 0, i32 2
  %1311 = load i32, i32* %1310, align 4
  %1312 = icmp eq i32 %1311, 0
  br i1 %1312, label %1313, label %1318

; <label>:1313:                                   ; preds = %1286
  %1314 = load %struct.bz_stream*, %struct.bz_stream** %1264, align 8
  %1315 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1314, i32 0, i32 3
  %1316 = load i32, i32* %1315, align 8
  %1317 = add i32 %1316, 1
  store i32 %1317, i32* %1315, align 8
  br label %1318

; <label>:1318:                                   ; preds = %1313, %1286
  %1319 = load i32, i32* %1252, align 4
  %1320 = icmp sge i32 %1319, 8
  br i1 %1320, label %._crit_edge580.loopexit, label %.lr.ph579

; <label>:1321:                                   ; preds = %33, %._crit_edge580
  %1322 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 27, i32* %1322, align 8
  %1323 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1324 = load i32, i32* %1323, align 4
  %1325 = icmp sge i32 %1324, 8
  br i1 %1325, label %._crit_edge577, label %.lr.ph576.preheader

.lr.ph576.preheader:                              ; preds = %1321
  %1326 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1327 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1328 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1329 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1330 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1331 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1332 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1333 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1334 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1335 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph576

._crit_edge577.loopexit:                          ; preds = %1392
  br label %._crit_edge577

._crit_edge577:                                   ; preds = %._crit_edge577.loopexit, %1321
  %1336 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1337 = load i32, i32* %1336, align 8
  %1338 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1339 = load i32, i32* %1338, align 4
  %1340 = sub nsw i32 %1339, 8
  %1341 = lshr i32 %1337, %1340
  %1342 = and i32 %1341, 255
  %1343 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1344 = load i32, i32* %1343, align 4
  %1345 = sub nsw i32 %1344, 8
  store i32 %1345, i32* %1343, align 4
  %1346 = trunc i32 %1342 to i8
  %1347 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1348 = load i32, i32* %1347, align 8
  %1349 = shl i32 %1348, 8
  %1350 = zext i8 %1346 to i32
  %1351 = or i32 %1349, %1350
  %1352 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  store i32 %1351, i32* %1352, align 8
  %1353 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1354 = load i32, i32* %1353, align 8
  %1355 = icmp slt i32 %1354, 0
  br i1 %1355, label %.loopexit, label %1395

.lr.ph576:                                        ; preds = %.lr.ph576.preheader, %1392
  call void @unroll_loop(i32 104)
  %1356 = load %struct.bz_stream*, %struct.bz_stream** %1326, align 8
  %1357 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1356, i32 0, i32 1
  %1358 = load i32, i32* %1357, align 8
  %1359 = icmp eq i32 %1358, 0
  br i1 %1359, label %.loopexit.loopexit576, label %1360

; <label>:1360:                                   ; preds = %.lr.ph576
  %1361 = load i32, i32* %1327, align 8
  %1362 = shl i32 %1361, 8
  %1363 = load %struct.bz_stream*, %struct.bz_stream** %1328, align 8
  %1364 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1363, i32 0, i32 0
  %1365 = load i8*, i8** %1364, align 8
  %1366 = load i8, i8* %1365, align 1
  %1367 = zext i8 %1366 to i32
  %1368 = or i32 %1362, %1367
  store i32 %1368, i32* %1329, align 8
  %1369 = load i32, i32* %1330, align 4
  %1370 = add nsw i32 %1369, 8
  store i32 %1370, i32* %1330, align 4
  %1371 = load %struct.bz_stream*, %struct.bz_stream** %1331, align 8
  %1372 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1371, i32 0, i32 0
  %1373 = load i8*, i8** %1372, align 8
  %1374 = getelementptr inbounds i8, i8* %1373, i32 1
  store i8* %1374, i8** %1372, align 8
  %1375 = load %struct.bz_stream*, %struct.bz_stream** %1332, align 8
  %1376 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1375, i32 0, i32 1
  %1377 = load i32, i32* %1376, align 8
  %1378 = add i32 %1377, -1
  store i32 %1378, i32* %1376, align 8
  %1379 = load %struct.bz_stream*, %struct.bz_stream** %1333, align 8
  %1380 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1379, i32 0, i32 2
  %1381 = load i32, i32* %1380, align 4
  %1382 = add i32 %1381, 1
  store i32 %1382, i32* %1380, align 4
  %1383 = load %struct.bz_stream*, %struct.bz_stream** %1334, align 8
  %1384 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1383, i32 0, i32 2
  %1385 = load i32, i32* %1384, align 4
  %1386 = icmp eq i32 %1385, 0
  br i1 %1386, label %1387, label %1392

; <label>:1387:                                   ; preds = %1360
  %1388 = load %struct.bz_stream*, %struct.bz_stream** %1335, align 8
  %1389 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1388, i32 0, i32 3
  %1390 = load i32, i32* %1389, align 8
  %1391 = add i32 %1390, 1
  store i32 %1391, i32* %1389, align 8
  br label %1392

; <label>:1392:                                   ; preds = %1387, %1360
  %1393 = load i32, i32* %1323, align 4
  %1394 = icmp sge i32 %1393, 8
  br i1 %1394, label %._crit_edge577.loopexit, label %.lr.ph576

; <label>:1395:                                   ; preds = %._crit_edge577
  %1396 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %1397 = load i32, i32* %1396, align 8
  %1398 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %1399 = load i32, i32* %1398, align 8
  %1400 = mul nsw i32 100000, %1399
  %1401 = add nsw i32 10, %1400
  %1402 = icmp sgt i32 %1397, %1401
  br i1 %1402, label %.loopexit, label %1403

; <label>:1403:                                   ; preds = %1395, %1477
  %.09 = phi i32 [ %1478, %1477 ], [ 0, %1395 ]
  %1404 = icmp slt i32 %.09, 16
  br i1 %1404, label %1405, label %.preheader581.preheader

.preheader581.preheader:                          ; preds = %1403
  %scevgep1102 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 28, i64 0
  br label %.preheader581

; <label>:1405:                                   ; preds = %1403, %33
  %.110 = phi i32 [ %35, %33 ], [ %.09, %1403 ]
  %1406 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 28, i32* %1406, align 8
  %1407 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1408 = load i32, i32* %1407, align 4
  %1409 = icmp sge i32 %1408, 1
  br i1 %1409, label %._crit_edge398, label %.lr.ph397.preheader

.lr.ph397.preheader:                              ; preds = %1405
  %1410 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1411 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1412 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1413 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1414 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1415 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1416 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1417 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1418 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1419 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph397

._crit_edge398.loopexit:                          ; preds = %1472
  br label %._crit_edge398

._crit_edge398:                                   ; preds = %._crit_edge398.loopexit, %1405
  %1420 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1421 = load i32, i32* %1420, align 8
  %1422 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1423 = load i32, i32* %1422, align 4
  %1424 = sub nsw i32 %1423, 1
  %1425 = lshr i32 %1421, %1424
  %1426 = and i32 %1425, 1
  %1427 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1428 = load i32, i32* %1427, align 4
  %1429 = sub nsw i32 %1428, 1
  store i32 %1429, i32* %1427, align 4
  %1430 = trunc i32 %1426 to i8
  %1431 = zext i8 %1430 to i32
  %1432 = icmp eq i32 %1431, 1
  %1433 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 29
  %1434 = sext i32 %.110 to i64
  %1435 = getelementptr inbounds [16 x i8], [16 x i8]* %1433, i64 0, i64 %1434
  br i1 %1432, label %1475, label %1476

.lr.ph397:                                        ; preds = %.lr.ph397.preheader, %1472
  call void @unroll_loop(i32 105)
  %1436 = load %struct.bz_stream*, %struct.bz_stream** %1410, align 8
  %1437 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1436, i32 0, i32 1
  %1438 = load i32, i32* %1437, align 8
  %1439 = icmp eq i32 %1438, 0
  br i1 %1439, label %.loopexit.loopexit201, label %1440

; <label>:1440:                                   ; preds = %.lr.ph397
  %1441 = load i32, i32* %1411, align 8
  %1442 = shl i32 %1441, 8
  %1443 = load %struct.bz_stream*, %struct.bz_stream** %1412, align 8
  %1444 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1443, i32 0, i32 0
  %1445 = load i8*, i8** %1444, align 8
  %1446 = load i8, i8* %1445, align 1
  %1447 = zext i8 %1446 to i32
  %1448 = or i32 %1442, %1447
  store i32 %1448, i32* %1413, align 8
  %1449 = load i32, i32* %1414, align 4
  %1450 = add nsw i32 %1449, 8
  store i32 %1450, i32* %1414, align 4
  %1451 = load %struct.bz_stream*, %struct.bz_stream** %1415, align 8
  %1452 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1451, i32 0, i32 0
  %1453 = load i8*, i8** %1452, align 8
  %1454 = getelementptr inbounds i8, i8* %1453, i32 1
  store i8* %1454, i8** %1452, align 8
  %1455 = load %struct.bz_stream*, %struct.bz_stream** %1416, align 8
  %1456 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1455, i32 0, i32 1
  %1457 = load i32, i32* %1456, align 8
  %1458 = add i32 %1457, -1
  store i32 %1458, i32* %1456, align 8
  %1459 = load %struct.bz_stream*, %struct.bz_stream** %1417, align 8
  %1460 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1459, i32 0, i32 2
  %1461 = load i32, i32* %1460, align 4
  %1462 = add i32 %1461, 1
  store i32 %1462, i32* %1460, align 4
  %1463 = load %struct.bz_stream*, %struct.bz_stream** %1418, align 8
  %1464 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1463, i32 0, i32 2
  %1465 = load i32, i32* %1464, align 4
  %1466 = icmp eq i32 %1465, 0
  br i1 %1466, label %1467, label %1472

; <label>:1467:                                   ; preds = %1440
  %1468 = load %struct.bz_stream*, %struct.bz_stream** %1419, align 8
  %1469 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1468, i32 0, i32 3
  %1470 = load i32, i32* %1469, align 8
  %1471 = add i32 %1470, 1
  store i32 %1471, i32* %1469, align 8
  br label %1472

; <label>:1472:                                   ; preds = %1467, %1440
  %1473 = load i32, i32* %1407, align 4
  %1474 = icmp sge i32 %1473, 1
  br i1 %1474, label %._crit_edge398.loopexit, label %.lr.ph397

; <label>:1475:                                   ; preds = %._crit_edge398
  store i8 1, i8* %1435, align 1
  br label %1477

; <label>:1476:                                   ; preds = %._crit_edge398
  store i8 0, i8* %1435, align 1
  br label %1477

; <label>:1477:                                   ; preds = %1475, %1476
  %1478 = add nsw i32 %.110, 1
  br label %1403

.preheader581:                                    ; preds = %.preheader581.preheader, %.preheader581
  %indvars.iv572 = phi i64 [ %indvars.iv.next573, %.preheader581 ], [ 0, %.preheader581.preheader ]
  call void @unroll_loop(i32 106)
  %scevgep1103 = getelementptr i8, i8* %scevgep1102, i64 %indvars.iv572
  store i8 0, i8* %scevgep1103, align 1
  %indvars.iv.next573 = add nuw nsw i64 %indvars.iv572, 1
  %exitcond574 = icmp ne i64 %indvars.iv.next573, 256
  br i1 %exitcond574, label %.preheader581, label %.loopexit582.loopexit

.loopexit582.loopexit:                            ; preds = %.preheader581
  %.013.ph = phi i32 [ %37, %.preheader581 ]
  %.3.ph = phi i32 [ 0, %.preheader581 ]
  br label %.loopexit582

.loopexit582:                                     ; preds = %.loopexit582.loopexit, %1563
  %.013 = phi i32 [ %.316, %1563 ], [ %.013.ph, %.loopexit582.loopexit ]
  %.3 = phi i32 [ %1564, %1563 ], [ %.3.ph, %.loopexit582.loopexit ]
  %1479 = icmp slt i32 %.3, 16
  br i1 %1479, label %1480, label %1565

; <label>:1480:                                   ; preds = %.loopexit582
  %1481 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 29
  %1482 = sext i32 %.3 to i64
  %1483 = getelementptr inbounds [16 x i8], [16 x i8]* %1481, i64 0, i64 %1482
  %1484 = load i8, i8* %1483, align 1
  %1485 = icmp ne i8 %1484, 0
  br i1 %1485, label %1486, label %1563

; <label>:1486:                                   ; preds = %1480, %1561
  %.114 = phi i32 [ %1562, %1561 ], [ 0, %1480 ]
  %.4 = phi i32 [ %.5, %1561 ], [ %.3, %1480 ]
  %1487 = icmp slt i32 %.114, 16
  br i1 %1487, label %1488, label %1563

; <label>:1488:                                   ; preds = %1486, %33
  %.215 = phi i32 [ %37, %33 ], [ %.114, %1486 ]
  %.5 = phi i32 [ %35, %33 ], [ %.4, %1486 ]
  %1489 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 29, i32* %1489, align 8
  %1490 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1491 = load i32, i32* %1490, align 4
  %1492 = icmp sge i32 %1491, 1
  br i1 %1492, label %._crit_edge401, label %.lr.ph400.preheader

.lr.ph400.preheader:                              ; preds = %1488
  %1493 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1494 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1495 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1496 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1497 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1498 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1499 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1500 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1501 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1502 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph400

._crit_edge401.loopexit:                          ; preds = %1552
  br label %._crit_edge401

._crit_edge401:                                   ; preds = %._crit_edge401.loopexit, %1488
  %1503 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1504 = load i32, i32* %1503, align 8
  %1505 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1506 = load i32, i32* %1505, align 4
  %1507 = sub nsw i32 %1506, 1
  %1508 = lshr i32 %1504, %1507
  %1509 = and i32 %1508, 1
  %1510 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1511 = load i32, i32* %1510, align 4
  %1512 = sub nsw i32 %1511, 1
  store i32 %1512, i32* %1510, align 4
  %1513 = trunc i32 %1509 to i8
  %1514 = zext i8 %1513 to i32
  %1515 = icmp eq i32 %1514, 1
  br i1 %1515, label %1555, label %1561

.lr.ph400:                                        ; preds = %.lr.ph400.preheader, %1552
  call void @unroll_loop(i32 107)
  %1516 = load %struct.bz_stream*, %struct.bz_stream** %1493, align 8
  %1517 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1516, i32 0, i32 1
  %1518 = load i32, i32* %1517, align 8
  %1519 = icmp eq i32 %1518, 0
  br i1 %1519, label %.loopexit.loopexit226, label %1520

; <label>:1520:                                   ; preds = %.lr.ph400
  %1521 = load i32, i32* %1494, align 8
  %1522 = shl i32 %1521, 8
  %1523 = load %struct.bz_stream*, %struct.bz_stream** %1495, align 8
  %1524 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1523, i32 0, i32 0
  %1525 = load i8*, i8** %1524, align 8
  %1526 = load i8, i8* %1525, align 1
  %1527 = zext i8 %1526 to i32
  %1528 = or i32 %1522, %1527
  store i32 %1528, i32* %1496, align 8
  %1529 = load i32, i32* %1497, align 4
  %1530 = add nsw i32 %1529, 8
  store i32 %1530, i32* %1497, align 4
  %1531 = load %struct.bz_stream*, %struct.bz_stream** %1498, align 8
  %1532 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1531, i32 0, i32 0
  %1533 = load i8*, i8** %1532, align 8
  %1534 = getelementptr inbounds i8, i8* %1533, i32 1
  store i8* %1534, i8** %1532, align 8
  %1535 = load %struct.bz_stream*, %struct.bz_stream** %1499, align 8
  %1536 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1535, i32 0, i32 1
  %1537 = load i32, i32* %1536, align 8
  %1538 = add i32 %1537, -1
  store i32 %1538, i32* %1536, align 8
  %1539 = load %struct.bz_stream*, %struct.bz_stream** %1500, align 8
  %1540 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1539, i32 0, i32 2
  %1541 = load i32, i32* %1540, align 4
  %1542 = add i32 %1541, 1
  store i32 %1542, i32* %1540, align 4
  %1543 = load %struct.bz_stream*, %struct.bz_stream** %1501, align 8
  %1544 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1543, i32 0, i32 2
  %1545 = load i32, i32* %1544, align 4
  %1546 = icmp eq i32 %1545, 0
  br i1 %1546, label %1547, label %1552

; <label>:1547:                                   ; preds = %1520
  %1548 = load %struct.bz_stream*, %struct.bz_stream** %1502, align 8
  %1549 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1548, i32 0, i32 3
  %1550 = load i32, i32* %1549, align 8
  %1551 = add i32 %1550, 1
  store i32 %1551, i32* %1549, align 8
  br label %1552

; <label>:1552:                                   ; preds = %1547, %1520
  %1553 = load i32, i32* %1490, align 4
  %1554 = icmp sge i32 %1553, 1
  br i1 %1554, label %._crit_edge401.loopexit, label %.lr.ph400

; <label>:1555:                                   ; preds = %._crit_edge401
  %1556 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 28
  %1557 = mul nsw i32 %.5, 16
  %1558 = add nsw i32 %1557, %.215
  %1559 = sext i32 %1558 to i64
  %1560 = getelementptr inbounds [256 x i8], [256 x i8]* %1556, i64 0, i64 %1559
  store i8 1, i8* %1560, align 1
  br label %1561

; <label>:1561:                                   ; preds = %._crit_edge401, %1555
  %1562 = add nsw i32 %.215, 1
  br label %1486

; <label>:1563:                                   ; preds = %1480, %1486
  %.316 = phi i32 [ %.013, %1480 ], [ %.114, %1486 ]
  %.6 = phi i32 [ %.3, %1480 ], [ %.4, %1486 ]
  %1564 = add nsw i32 %.6, 1
  br label %.loopexit582

; <label>:1565:                                   ; preds = %.loopexit582
  call void @makeMaps_d(%struct.DState* %0)
  %1566 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %1567 = load i32, i32* %1566, align 8
  %1568 = icmp eq i32 %1567, 0
  br i1 %1568, label %.loopexit, label %1569

; <label>:1569:                                   ; preds = %1565
  %1570 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %1571 = load i32, i32* %1570, align 8
  %1572 = add nsw i32 %1571, 2
  br label %1573

; <label>:1573:                                   ; preds = %33, %1569
  %.061 = phi i32 [ %41, %33 ], [ %1572, %1569 ]
  %.417 = phi i32 [ %37, %33 ], [ %.013, %1569 ]
  %.7 = phi i32 [ %35, %33 ], [ %.3, %1569 ]
  %1574 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 30, i32* %1574, align 8
  %1575 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1576 = load i32, i32* %1575, align 4
  %1577 = icmp sge i32 %1576, 3
  br i1 %1577, label %._crit_edge570, label %.lr.ph569.preheader

.lr.ph569.preheader:                              ; preds = %1573
  %1578 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1579 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1580 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1581 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1582 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1583 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1584 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1585 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1586 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1587 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph569

._crit_edge570.loopexit:                          ; preds = %1636
  br label %._crit_edge570

._crit_edge570:                                   ; preds = %._crit_edge570.loopexit, %1573
  %1588 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1589 = load i32, i32* %1588, align 8
  %1590 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1591 = load i32, i32* %1590, align 4
  %1592 = sub nsw i32 %1591, 3
  %1593 = lshr i32 %1589, %1592
  %1594 = and i32 %1593, 7
  %1595 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1596 = load i32, i32* %1595, align 4
  %1597 = sub nsw i32 %1596, 3
  store i32 %1597, i32* %1595, align 4
  %1598 = icmp slt i32 %1594, 2
  %1599 = icmp sgt i32 %1594, 6
  %or.cond = or i1 %1598, %1599
  br i1 %or.cond, label %.loopexit, label %1639

.lr.ph569:                                        ; preds = %.lr.ph569.preheader, %1636
  call void @unroll_loop(i32 108)
  %1600 = load %struct.bz_stream*, %struct.bz_stream** %1578, align 8
  %1601 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1600, i32 0, i32 1
  %1602 = load i32, i32* %1601, align 8
  %1603 = icmp eq i32 %1602, 0
  br i1 %1603, label %.loopexit.loopexit551, label %1604

; <label>:1604:                                   ; preds = %.lr.ph569
  %1605 = load i32, i32* %1579, align 8
  %1606 = shl i32 %1605, 8
  %1607 = load %struct.bz_stream*, %struct.bz_stream** %1580, align 8
  %1608 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1607, i32 0, i32 0
  %1609 = load i8*, i8** %1608, align 8
  %1610 = load i8, i8* %1609, align 1
  %1611 = zext i8 %1610 to i32
  %1612 = or i32 %1606, %1611
  store i32 %1612, i32* %1581, align 8
  %1613 = load i32, i32* %1582, align 4
  %1614 = add nsw i32 %1613, 8
  store i32 %1614, i32* %1582, align 4
  %1615 = load %struct.bz_stream*, %struct.bz_stream** %1583, align 8
  %1616 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1615, i32 0, i32 0
  %1617 = load i8*, i8** %1616, align 8
  %1618 = getelementptr inbounds i8, i8* %1617, i32 1
  store i8* %1618, i8** %1616, align 8
  %1619 = load %struct.bz_stream*, %struct.bz_stream** %1584, align 8
  %1620 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1619, i32 0, i32 1
  %1621 = load i32, i32* %1620, align 8
  %1622 = add i32 %1621, -1
  store i32 %1622, i32* %1620, align 8
  %1623 = load %struct.bz_stream*, %struct.bz_stream** %1585, align 8
  %1624 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1623, i32 0, i32 2
  %1625 = load i32, i32* %1624, align 4
  %1626 = add i32 %1625, 1
  store i32 %1626, i32* %1624, align 4
  %1627 = load %struct.bz_stream*, %struct.bz_stream** %1586, align 8
  %1628 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1627, i32 0, i32 2
  %1629 = load i32, i32* %1628, align 4
  %1630 = icmp eq i32 %1629, 0
  br i1 %1630, label %1631, label %1636

; <label>:1631:                                   ; preds = %1604
  %1632 = load %struct.bz_stream*, %struct.bz_stream** %1587, align 8
  %1633 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1632, i32 0, i32 3
  %1634 = load i32, i32* %1633, align 8
  %1635 = add i32 %1634, 1
  store i32 %1635, i32* %1633, align 8
  br label %1636

; <label>:1636:                                   ; preds = %1631, %1604
  %1637 = load i32, i32* %1575, align 4
  %1638 = icmp sge i32 %1637, 3
  br i1 %1638, label %._crit_edge570.loopexit, label %.lr.ph569

; <label>:1639:                                   ; preds = %._crit_edge570, %33
  %.084 = phi i32 [ %43, %33 ], [ %1594, %._crit_edge570 ]
  %.162 = phi i32 [ %41, %33 ], [ %.061, %._crit_edge570 ]
  %.518 = phi i32 [ %37, %33 ], [ %.417, %._crit_edge570 ]
  %.8 = phi i32 [ %35, %33 ], [ %.7, %._crit_edge570 ]
  %1640 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 31, i32* %1640, align 8
  %1641 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1642 = load i32, i32* %1641, align 4
  %1643 = icmp sge i32 %1642, 15
  br i1 %1643, label %._crit_edge567, label %.lr.ph566.preheader

.lr.ph566.preheader:                              ; preds = %1639
  %1644 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1645 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1646 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1647 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1648 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1649 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1650 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1651 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1652 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1653 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph566

._crit_edge567.loopexit:                          ; preds = %1701
  br label %._crit_edge567

._crit_edge567:                                   ; preds = %._crit_edge567.loopexit, %1639
  %1654 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1655 = load i32, i32* %1654, align 8
  %1656 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1657 = load i32, i32* %1656, align 4
  %1658 = sub nsw i32 %1657, 15
  %1659 = lshr i32 %1655, %1658
  %1660 = and i32 %1659, 32767
  %1661 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1662 = load i32, i32* %1661, align 4
  %1663 = sub nsw i32 %1662, 15
  store i32 %1663, i32* %1661, align 4
  %1664 = icmp slt i32 %1660, 1
  br i1 %1664, label %.loopexit, label %1704

.lr.ph566:                                        ; preds = %.lr.ph566.preheader, %1701
  call void @unroll_loop(i32 109)
  %1665 = load %struct.bz_stream*, %struct.bz_stream** %1644, align 8
  %1666 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1665, i32 0, i32 1
  %1667 = load i32, i32* %1666, align 8
  %1668 = icmp eq i32 %1667, 0
  br i1 %1668, label %.loopexit.loopexit526, label %1669

; <label>:1669:                                   ; preds = %.lr.ph566
  %1670 = load i32, i32* %1645, align 8
  %1671 = shl i32 %1670, 8
  %1672 = load %struct.bz_stream*, %struct.bz_stream** %1646, align 8
  %1673 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1672, i32 0, i32 0
  %1674 = load i8*, i8** %1673, align 8
  %1675 = load i8, i8* %1674, align 1
  %1676 = zext i8 %1675 to i32
  %1677 = or i32 %1671, %1676
  store i32 %1677, i32* %1647, align 8
  %1678 = load i32, i32* %1648, align 4
  %1679 = add nsw i32 %1678, 8
  store i32 %1679, i32* %1648, align 4
  %1680 = load %struct.bz_stream*, %struct.bz_stream** %1649, align 8
  %1681 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1680, i32 0, i32 0
  %1682 = load i8*, i8** %1681, align 8
  %1683 = getelementptr inbounds i8, i8* %1682, i32 1
  store i8* %1683, i8** %1681, align 8
  %1684 = load %struct.bz_stream*, %struct.bz_stream** %1650, align 8
  %1685 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1684, i32 0, i32 1
  %1686 = load i32, i32* %1685, align 8
  %1687 = add i32 %1686, -1
  store i32 %1687, i32* %1685, align 8
  %1688 = load %struct.bz_stream*, %struct.bz_stream** %1651, align 8
  %1689 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1688, i32 0, i32 2
  %1690 = load i32, i32* %1689, align 4
  %1691 = add i32 %1690, 1
  store i32 %1691, i32* %1689, align 4
  %1692 = load %struct.bz_stream*, %struct.bz_stream** %1652, align 8
  %1693 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1692, i32 0, i32 2
  %1694 = load i32, i32* %1693, align 4
  %1695 = icmp eq i32 %1694, 0
  br i1 %1695, label %1696, label %1701

; <label>:1696:                                   ; preds = %1669
  %1697 = load %struct.bz_stream*, %struct.bz_stream** %1653, align 8
  %1698 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1697, i32 0, i32 3
  %1699 = load i32, i32* %1698, align 8
  %1700 = add i32 %1699, 1
  store i32 %1700, i32* %1698, align 8
  br label %1701

; <label>:1701:                                   ; preds = %1696, %1669
  %1702 = load i32, i32* %1641, align 4
  %1703 = icmp sge i32 %1702, 15
  br i1 %1703, label %._crit_edge567.loopexit, label %.lr.ph566

; <label>:1704:                                   ; preds = %._crit_edge567, %1777
  %.0106 = phi i32 [ %.2108, %1777 ], [ %1660, %._crit_edge567 ]
  %.185 = phi i32 [ %.387, %1777 ], [ %.084, %._crit_edge567 ]
  %.263 = phi i32 [ %.465, %1777 ], [ %.162, %._crit_edge567 ]
  %.619 = phi i32 [ %.821, %1777 ], [ %.518, %._crit_edge567 ]
  %.9 = phi i32 [ %1782, %1777 ], [ 0, %._crit_edge567 ]
  %1705 = icmp slt i32 %.9, %.0106
  br i1 %1705, label %1706, label %1783

; <label>:1706:                                   ; preds = %1774, %1704
  %.1107 = phi i32 [ %.0106, %1704 ], [ %.2108, %1774 ]
  %.286 = phi i32 [ %.185, %1704 ], [ %.387, %1774 ]
  %.364 = phi i32 [ %.263, %1704 ], [ %.465, %1774 ]
  %.720 = phi i32 [ 0, %1704 ], [ %1775, %1774 ]
  %.10 = phi i32 [ %.9, %1704 ], [ %.11, %1774 ]
  br label %1707

; <label>:1707:                                   ; preds = %33, %1706
  %.2108 = phi i32 [ %45, %33 ], [ %.1107, %1706 ]
  %.387 = phi i32 [ %43, %33 ], [ %.286, %1706 ]
  %.465 = phi i32 [ %41, %33 ], [ %.364, %1706 ]
  %.821 = phi i32 [ %37, %33 ], [ %.720, %1706 ]
  %.11 = phi i32 [ %35, %33 ], [ %.10, %1706 ]
  %1708 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 32, i32* %1708, align 8
  %1709 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1710 = load i32, i32* %1709, align 4
  %1711 = icmp sge i32 %1710, 1
  br i1 %1711, label %._crit_edge404, label %.lr.ph403.preheader

.lr.ph403.preheader:                              ; preds = %1707
  %1712 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1713 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1714 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1715 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1716 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1717 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1718 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1719 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1720 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1721 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph403

._crit_edge404.loopexit:                          ; preds = %1771
  br label %._crit_edge404

._crit_edge404:                                   ; preds = %._crit_edge404.loopexit, %1707
  %1722 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1723 = load i32, i32* %1722, align 8
  %1724 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1725 = load i32, i32* %1724, align 4
  %1726 = sub nsw i32 %1725, 1
  %1727 = lshr i32 %1723, %1726
  %1728 = and i32 %1727, 1
  %1729 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1730 = load i32, i32* %1729, align 4
  %1731 = sub nsw i32 %1730, 1
  store i32 %1731, i32* %1729, align 4
  %1732 = trunc i32 %1728 to i8
  %1733 = zext i8 %1732 to i32
  %1734 = icmp eq i32 %1733, 0
  br i1 %1734, label %1777, label %1774

.lr.ph403:                                        ; preds = %.lr.ph403.preheader, %1771
  call void @unroll_loop(i32 110)
  %1735 = load %struct.bz_stream*, %struct.bz_stream** %1712, align 8
  %1736 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1735, i32 0, i32 1
  %1737 = load i32, i32* %1736, align 8
  %1738 = icmp eq i32 %1737, 0
  br i1 %1738, label %.loopexit.loopexit251, label %1739

; <label>:1739:                                   ; preds = %.lr.ph403
  %1740 = load i32, i32* %1713, align 8
  %1741 = shl i32 %1740, 8
  %1742 = load %struct.bz_stream*, %struct.bz_stream** %1714, align 8
  %1743 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1742, i32 0, i32 0
  %1744 = load i8*, i8** %1743, align 8
  %1745 = load i8, i8* %1744, align 1
  %1746 = zext i8 %1745 to i32
  %1747 = or i32 %1741, %1746
  store i32 %1747, i32* %1715, align 8
  %1748 = load i32, i32* %1716, align 4
  %1749 = add nsw i32 %1748, 8
  store i32 %1749, i32* %1716, align 4
  %1750 = load %struct.bz_stream*, %struct.bz_stream** %1717, align 8
  %1751 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1750, i32 0, i32 0
  %1752 = load i8*, i8** %1751, align 8
  %1753 = getelementptr inbounds i8, i8* %1752, i32 1
  store i8* %1753, i8** %1751, align 8
  %1754 = load %struct.bz_stream*, %struct.bz_stream** %1718, align 8
  %1755 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1754, i32 0, i32 1
  %1756 = load i32, i32* %1755, align 8
  %1757 = add i32 %1756, -1
  store i32 %1757, i32* %1755, align 8
  %1758 = load %struct.bz_stream*, %struct.bz_stream** %1719, align 8
  %1759 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1758, i32 0, i32 2
  %1760 = load i32, i32* %1759, align 4
  %1761 = add i32 %1760, 1
  store i32 %1761, i32* %1759, align 4
  %1762 = load %struct.bz_stream*, %struct.bz_stream** %1720, align 8
  %1763 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1762, i32 0, i32 2
  %1764 = load i32, i32* %1763, align 4
  %1765 = icmp eq i32 %1764, 0
  br i1 %1765, label %1766, label %1771

; <label>:1766:                                   ; preds = %1739
  %1767 = load %struct.bz_stream*, %struct.bz_stream** %1721, align 8
  %1768 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1767, i32 0, i32 3
  %1769 = load i32, i32* %1768, align 8
  %1770 = add i32 %1769, 1
  store i32 %1770, i32* %1768, align 8
  br label %1771

; <label>:1771:                                   ; preds = %1766, %1739
  %1772 = load i32, i32* %1709, align 4
  %1773 = icmp sge i32 %1772, 1
  br i1 %1773, label %._crit_edge404.loopexit, label %.lr.ph403

; <label>:1774:                                   ; preds = %._crit_edge404
  %1775 = add nsw i32 %.821, 1
  %1776 = icmp sge i32 %1775, %.387
  br i1 %1776, label %.loopexit, label %1706

; <label>:1777:                                   ; preds = %._crit_edge404
  %1778 = trunc i32 %.821 to i8
  %1779 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 34
  %1780 = sext i32 %.11 to i64
  %1781 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1779, i64 0, i64 %1780
  store i8 %1778, i8* %1781, align 1
  %1782 = add nsw i32 %.11, 1
  br label %1704

; <label>:1783:                                   ; preds = %1704
  %1784 = icmp slt i32 0, %.185
  br i1 %1784, label %.lr.ph563.preheader, label %._crit_edge564

.lr.ph563.preheader:                              ; preds = %1783
  br label %.lr.ph563

.lr.ph563:                                        ; preds = %.lr.ph563.preheader, %.lr.ph563
  %.0365561 = phi i8 [ %1787, %.lr.ph563 ], [ 0, %.lr.ph563.preheader ]
  call void @unroll_loop(i32 111)
  %1785 = zext i8 %.0365561 to i64
  %1786 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %1785
  store i8 %.0365561, i8* %1786, align 1
  %1787 = add i8 %.0365561, 1
  %1788 = zext i8 %1787 to i32
  %1789 = icmp slt i32 %1788, %.185
  br i1 %1789, label %.lr.ph563, label %._crit_edge564.loopexit

._crit_edge564.loopexit:                          ; preds = %.lr.ph563
  br label %._crit_edge564

._crit_edge564:                                   ; preds = %._crit_edge564.loopexit, %1783
  %1790 = icmp slt i32 0, %.0106
  br i1 %1790, label %.lr.ph554, label %1818

.lr.ph554:                                        ; preds = %._crit_edge564
  %1791 = zext i32 %.0106 to i64
  %1792 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 34
  %1793 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 0
  %1794 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 33
  br label %1795

; <label>:1795:                                   ; preds = %.lr.ph554, %._crit_edge551
  %indvars.iv557 = phi i64 [ 0, %.lr.ph554 ], [ %indvars.iv.next558, %._crit_edge551 ]
  call void @unroll_loop(i32 112)
  %1796 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1792, i64 0, i64 %indvars.iv557
  %1797 = load i8, i8* %1796, align 1
  %1798 = zext i8 %1797 to i64
  %1799 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %1798
  %1800 = load i8, i8* %1799, align 1
  %1801 = zext i8 %1797 to i32
  %1802 = icmp sgt i32 %1801, 0
  br i1 %1802, label %.lr.ph550.preheader, label %._crit_edge551

.lr.ph550.preheader:                              ; preds = %1795
  br label %.lr.ph550

.lr.ph550:                                        ; preds = %.lr.ph550.preheader, %.lr.ph550
  %.1366548 = phi i8 [ %1810, %.lr.ph550 ], [ %1797, %.lr.ph550.preheader ]
  call void @unroll_loop(i32 113)
  %1803 = zext i8 %.1366548 to i32
  %1804 = sub nsw i32 %1803, 1
  %1805 = sext i32 %1804 to i64
  %1806 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %1805
  %1807 = load i8, i8* %1806, align 1
  %1808 = zext i8 %.1366548 to i64
  %1809 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 %1808
  store i8 %1807, i8* %1809, align 1
  %1810 = add i8 %.1366548, -1
  %1811 = zext i8 %1810 to i32
  %1812 = icmp sgt i32 %1811, 0
  br i1 %1812, label %.lr.ph550, label %._crit_edge551.loopexit

._crit_edge551.loopexit:                          ; preds = %.lr.ph550
  br label %._crit_edge551

._crit_edge551:                                   ; preds = %._crit_edge551.loopexit, %1795
  store i8 %1800, i8* %1793, align 1
  %1813 = getelementptr inbounds [18002 x i8], [18002 x i8]* %1794, i64 0, i64 %indvars.iv557
  store i8 %1800, i8* %1813, align 1
  %indvars.iv.next558 = add nuw nsw i64 %indvars.iv557, 1
  %exitcond1036 = icmp ne i64 %indvars.iv.next558, %1791
  br i1 %exitcond1036, label %1795, label %._crit_edge555

._crit_edge555:                                   ; preds = %._crit_edge551
  %1814 = add i32 %.0106, -1
  %1815 = zext i32 %1814 to i64
  %1816 = add i64 %1815, 1
  %1817 = trunc i64 %1816 to i32
  br label %1818

; <label>:1818:                                   ; preds = %._crit_edge555, %._crit_edge564
  %.12.lcssa = phi i32 [ %1817, %._crit_edge555 ], [ 0, %._crit_edge564 ]
  br label %1819

; <label>:1819:                                   ; preds = %2034, %1818
  %.0228 = phi i32 [ %.2230, %2034 ], [ %63, %1818 ]
  %.3109 = phi i32 [ %.5111, %2034 ], [ %.0106, %1818 ]
  %.488 = phi i32 [ %.690, %2034 ], [ %.185, %1818 ]
  %.566 = phi i32 [ %.768, %2034 ], [ %.263, %1818 ]
  %.042 = phi i32 [ %2035, %2034 ], [ 0, %1818 ]
  %.922 = phi i32 [ %.1124, %2034 ], [ %.619, %1818 ]
  %.13 = phi i32 [ %.1511, %2034 ], [ %.12.lcssa, %1818 ]
  %1820 = icmp slt i32 %.042, %.488
  br i1 %1820, label %1821, label %2036

; <label>:1821:                                   ; preds = %1819, %33
  %.1229 = phi i32 [ %63, %33 ], [ %.0228, %1819 ]
  %.4110 = phi i32 [ %45, %33 ], [ %.3109, %1819 ]
  %.589 = phi i32 [ %43, %33 ], [ %.488, %1819 ]
  %.667 = phi i32 [ %41, %33 ], [ %.566, %1819 ]
  %.143 = phi i32 [ %39, %33 ], [ %.042, %1819 ]
  %.1023 = phi i32 [ %37, %33 ], [ %.922, %1819 ]
  %.14 = phi i32 [ %35, %33 ], [ %.13, %1819 ]
  %1822 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 33, i32* %1822, align 8
  %1823 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1824 = load i32, i32* %1823, align 4
  %1825 = icmp sge i32 %1824, 5
  br i1 %1825, label %._crit_edge413, label %.lr.ph412.preheader

.lr.ph412.preheader:                              ; preds = %1821
  %1826 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1827 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1828 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1829 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1830 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1831 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1832 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1833 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1834 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1835 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph412

._crit_edge413.loopexit:                          ; preds = %1882
  br label %._crit_edge413

._crit_edge413:                                   ; preds = %._crit_edge413.loopexit, %1821
  %1836 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1837 = load i32, i32* %1836, align 8
  %1838 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1839 = load i32, i32* %1838, align 4
  %1840 = sub nsw i32 %1839, 5
  %1841 = lshr i32 %1837, %1840
  %1842 = and i32 %1841, 31
  %1843 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1844 = load i32, i32* %1843, align 4
  %1845 = sub nsw i32 %1844, 5
  store i32 %1845, i32* %1843, align 4
  br label %1885

.lr.ph412:                                        ; preds = %.lr.ph412.preheader, %1882
  call void @unroll_loop(i32 114)
  %1846 = load %struct.bz_stream*, %struct.bz_stream** %1826, align 8
  %1847 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1846, i32 0, i32 1
  %1848 = load i32, i32* %1847, align 8
  %1849 = icmp eq i32 %1848, 0
  br i1 %1849, label %.loopexit.loopexit326, label %1850

; <label>:1850:                                   ; preds = %.lr.ph412
  %1851 = load i32, i32* %1827, align 8
  %1852 = shl i32 %1851, 8
  %1853 = load %struct.bz_stream*, %struct.bz_stream** %1828, align 8
  %1854 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1853, i32 0, i32 0
  %1855 = load i8*, i8** %1854, align 8
  %1856 = load i8, i8* %1855, align 1
  %1857 = zext i8 %1856 to i32
  %1858 = or i32 %1852, %1857
  store i32 %1858, i32* %1829, align 8
  %1859 = load i32, i32* %1830, align 4
  %1860 = add nsw i32 %1859, 8
  store i32 %1860, i32* %1830, align 4
  %1861 = load %struct.bz_stream*, %struct.bz_stream** %1831, align 8
  %1862 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1861, i32 0, i32 0
  %1863 = load i8*, i8** %1862, align 8
  %1864 = getelementptr inbounds i8, i8* %1863, i32 1
  store i8* %1864, i8** %1862, align 8
  %1865 = load %struct.bz_stream*, %struct.bz_stream** %1832, align 8
  %1866 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1865, i32 0, i32 1
  %1867 = load i32, i32* %1866, align 8
  %1868 = add i32 %1867, -1
  store i32 %1868, i32* %1866, align 8
  %1869 = load %struct.bz_stream*, %struct.bz_stream** %1833, align 8
  %1870 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1869, i32 0, i32 2
  %1871 = load i32, i32* %1870, align 4
  %1872 = add i32 %1871, 1
  store i32 %1872, i32* %1870, align 4
  %1873 = load %struct.bz_stream*, %struct.bz_stream** %1834, align 8
  %1874 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1873, i32 0, i32 2
  %1875 = load i32, i32* %1874, align 4
  %1876 = icmp eq i32 %1875, 0
  br i1 %1876, label %1877, label %1882

; <label>:1877:                                   ; preds = %1850
  %1878 = load %struct.bz_stream*, %struct.bz_stream** %1835, align 8
  %1879 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1878, i32 0, i32 3
  %1880 = load i32, i32* %1879, align 8
  %1881 = add i32 %1880, 1
  store i32 %1881, i32* %1879, align 8
  br label %1882

; <label>:1882:                                   ; preds = %1877, %1850
  %1883 = load i32, i32* %1823, align 4
  %1884 = icmp sge i32 %1883, 5
  br i1 %1884, label %._crit_edge413.loopexit, label %.lr.ph412

; <label>:1885:                                   ; preds = %2026, %._crit_edge413
  %.2230 = phi i32 [ %.4232, %2026 ], [ %1842, %._crit_edge413 ]
  %.5111 = phi i32 [ %.7113, %2026 ], [ %.4110, %._crit_edge413 ]
  %.690 = phi i32 [ %.892, %2026 ], [ %.589, %._crit_edge413 ]
  %.768 = phi i32 [ %.970, %2026 ], [ %.667, %._crit_edge413 ]
  %.244 = phi i32 [ %.446, %2026 ], [ %.143, %._crit_edge413 ]
  %.1124 = phi i32 [ %.1326, %2026 ], [ %.1023, %._crit_edge413 ]
  %.1511 = phi i32 [ %2033, %2026 ], [ 0, %._crit_edge413 ]
  %1886 = icmp slt i32 %.1511, %.768
  br i1 %1886, label %1887, label %2034

; <label>:1887:                                   ; preds = %1885, %._crit_edge407
  %.3231 = phi i32 [ %.6234, %._crit_edge407 ], [ %.2230, %1885 ]
  %.6112 = phi i32 [ %.8114, %._crit_edge407 ], [ %.5111, %1885 ]
  %.791 = phi i32 [ %.993, %._crit_edge407 ], [ %.690, %1885 ]
  %.869 = phi i32 [ %.1071, %._crit_edge407 ], [ %.768, %1885 ]
  %.345 = phi i32 [ %.547, %._crit_edge407 ], [ %.244, %1885 ]
  %.1225 = phi i32 [ %.1427, %._crit_edge407 ], [ %.1124, %1885 ]
  %.16 = phi i32 [ %.18, %._crit_edge407 ], [ %.1511, %1885 ]
  %1888 = icmp slt i32 %.3231, 1
  %1889 = icmp sgt i32 %.3231, 20
  %or.cond1 = or i1 %1888, %1889
  br i1 %or.cond1, label %.loopexit, label %1890

; <label>:1890:                                   ; preds = %1887, %33
  %.4232 = phi i32 [ %63, %33 ], [ %.3231, %1887 ]
  %.7113 = phi i32 [ %45, %33 ], [ %.6112, %1887 ]
  %.892 = phi i32 [ %43, %33 ], [ %.791, %1887 ]
  %.970 = phi i32 [ %41, %33 ], [ %.869, %1887 ]
  %.446 = phi i32 [ %39, %33 ], [ %.345, %1887 ]
  %.1326 = phi i32 [ %37, %33 ], [ %.1225, %1887 ]
  %.1712 = phi i32 [ %35, %33 ], [ %.16, %1887 ]
  %1891 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 34, i32* %1891, align 8
  %1892 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1893 = load i32, i32* %1892, align 4
  %1894 = icmp sge i32 %1893, 1
  br i1 %1894, label %._crit_edge410, label %.lr.ph409.preheader

.lr.ph409.preheader:                              ; preds = %1890
  %1895 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1896 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1897 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1898 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1899 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1900 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1901 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1902 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1903 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1904 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph409

._crit_edge410.loopexit:                          ; preds = %1954
  br label %._crit_edge410

._crit_edge410:                                   ; preds = %._crit_edge410.loopexit, %1890
  %1905 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1906 = load i32, i32* %1905, align 8
  %1907 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1908 = load i32, i32* %1907, align 4
  %1909 = sub nsw i32 %1908, 1
  %1910 = lshr i32 %1906, %1909
  %1911 = and i32 %1910, 1
  %1912 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1913 = load i32, i32* %1912, align 4
  %1914 = sub nsw i32 %1913, 1
  store i32 %1914, i32* %1912, align 4
  %1915 = trunc i32 %1911 to i8
  %1916 = zext i8 %1915 to i32
  %1917 = icmp eq i32 %1916, 0
  br i1 %1917, label %2026, label %1957

.lr.ph409:                                        ; preds = %.lr.ph409.preheader, %1954
  call void @unroll_loop(i32 115)
  %1918 = load %struct.bz_stream*, %struct.bz_stream** %1895, align 8
  %1919 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1918, i32 0, i32 1
  %1920 = load i32, i32* %1919, align 8
  %1921 = icmp eq i32 %1920, 0
  br i1 %1921, label %.loopexit.loopexit301, label %1922

; <label>:1922:                                   ; preds = %.lr.ph409
  %1923 = load i32, i32* %1896, align 8
  %1924 = shl i32 %1923, 8
  %1925 = load %struct.bz_stream*, %struct.bz_stream** %1897, align 8
  %1926 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1925, i32 0, i32 0
  %1927 = load i8*, i8** %1926, align 8
  %1928 = load i8, i8* %1927, align 1
  %1929 = zext i8 %1928 to i32
  %1930 = or i32 %1924, %1929
  store i32 %1930, i32* %1898, align 8
  %1931 = load i32, i32* %1899, align 4
  %1932 = add nsw i32 %1931, 8
  store i32 %1932, i32* %1899, align 4
  %1933 = load %struct.bz_stream*, %struct.bz_stream** %1900, align 8
  %1934 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1933, i32 0, i32 0
  %1935 = load i8*, i8** %1934, align 8
  %1936 = getelementptr inbounds i8, i8* %1935, i32 1
  store i8* %1936, i8** %1934, align 8
  %1937 = load %struct.bz_stream*, %struct.bz_stream** %1901, align 8
  %1938 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1937, i32 0, i32 1
  %1939 = load i32, i32* %1938, align 8
  %1940 = add i32 %1939, -1
  store i32 %1940, i32* %1938, align 8
  %1941 = load %struct.bz_stream*, %struct.bz_stream** %1902, align 8
  %1942 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1941, i32 0, i32 2
  %1943 = load i32, i32* %1942, align 4
  %1944 = add i32 %1943, 1
  store i32 %1944, i32* %1942, align 4
  %1945 = load %struct.bz_stream*, %struct.bz_stream** %1903, align 8
  %1946 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1945, i32 0, i32 2
  %1947 = load i32, i32* %1946, align 4
  %1948 = icmp eq i32 %1947, 0
  br i1 %1948, label %1949, label %1954

; <label>:1949:                                   ; preds = %1922
  %1950 = load %struct.bz_stream*, %struct.bz_stream** %1904, align 8
  %1951 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1950, i32 0, i32 3
  %1952 = load i32, i32* %1951, align 8
  %1953 = add i32 %1952, 1
  store i32 %1953, i32* %1951, align 8
  br label %1954

; <label>:1954:                                   ; preds = %1949, %1922
  %1955 = load i32, i32* %1892, align 4
  %1956 = icmp sge i32 %1955, 1
  br i1 %1956, label %._crit_edge410.loopexit, label %.lr.ph409

; <label>:1957:                                   ; preds = %._crit_edge410, %33
  %.5233 = phi i32 [ %63, %33 ], [ %.4232, %._crit_edge410 ]
  %.8114 = phi i32 [ %45, %33 ], [ %.7113, %._crit_edge410 ]
  %.993 = phi i32 [ %43, %33 ], [ %.892, %._crit_edge410 ]
  %.1071 = phi i32 [ %41, %33 ], [ %.970, %._crit_edge410 ]
  %.547 = phi i32 [ %39, %33 ], [ %.446, %._crit_edge410 ]
  %.1427 = phi i32 [ %37, %33 ], [ %.1326, %._crit_edge410 ]
  %.18 = phi i32 [ %35, %33 ], [ %.1712, %._crit_edge410 ]
  %1958 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 35, i32* %1958, align 8
  %1959 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1960 = load i32, i32* %1959, align 4
  %1961 = icmp sge i32 %1960, 1
  br i1 %1961, label %._crit_edge407, label %.lr.ph406.preheader

.lr.ph406.preheader:                              ; preds = %1957
  %1962 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1963 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1964 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1965 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1966 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1967 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1968 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1969 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1970 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %1971 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph406

._crit_edge407.loopexit:                          ; preds = %2023
  br label %._crit_edge407

._crit_edge407:                                   ; preds = %._crit_edge407.loopexit, %1957
  %1972 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %1973 = load i32, i32* %1972, align 8
  %1974 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1975 = load i32, i32* %1974, align 4
  %1976 = sub nsw i32 %1975, 1
  %1977 = lshr i32 %1973, %1976
  %1978 = and i32 %1977, 1
  %1979 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %1980 = load i32, i32* %1979, align 4
  %1981 = sub nsw i32 %1980, 1
  store i32 %1981, i32* %1979, align 4
  %1982 = trunc i32 %1978 to i8
  %1983 = zext i8 %1982 to i32
  %1984 = icmp eq i32 %1983, 0
  %1985 = add nsw i32 %.5233, 1
  %1986 = add nsw i32 %.5233, -1
  %.6234 = select i1 %1984, i32 %1985, i32 %1986
  br label %1887

.lr.ph406:                                        ; preds = %.lr.ph406.preheader, %2023
  call void @unroll_loop(i32 116)
  %1987 = load %struct.bz_stream*, %struct.bz_stream** %1962, align 8
  %1988 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1987, i32 0, i32 1
  %1989 = load i32, i32* %1988, align 8
  %1990 = icmp eq i32 %1989, 0
  br i1 %1990, label %.loopexit.loopexit276, label %1991

; <label>:1991:                                   ; preds = %.lr.ph406
  %1992 = load i32, i32* %1963, align 8
  %1993 = shl i32 %1992, 8
  %1994 = load %struct.bz_stream*, %struct.bz_stream** %1964, align 8
  %1995 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %1994, i32 0, i32 0
  %1996 = load i8*, i8** %1995, align 8
  %1997 = load i8, i8* %1996, align 1
  %1998 = zext i8 %1997 to i32
  %1999 = or i32 %1993, %1998
  store i32 %1999, i32* %1965, align 8
  %2000 = load i32, i32* %1966, align 4
  %2001 = add nsw i32 %2000, 8
  store i32 %2001, i32* %1966, align 4
  %2002 = load %struct.bz_stream*, %struct.bz_stream** %1967, align 8
  %2003 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2002, i32 0, i32 0
  %2004 = load i8*, i8** %2003, align 8
  %2005 = getelementptr inbounds i8, i8* %2004, i32 1
  store i8* %2005, i8** %2003, align 8
  %2006 = load %struct.bz_stream*, %struct.bz_stream** %1968, align 8
  %2007 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2006, i32 0, i32 1
  %2008 = load i32, i32* %2007, align 8
  %2009 = add i32 %2008, -1
  store i32 %2009, i32* %2007, align 8
  %2010 = load %struct.bz_stream*, %struct.bz_stream** %1969, align 8
  %2011 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2010, i32 0, i32 2
  %2012 = load i32, i32* %2011, align 4
  %2013 = add i32 %2012, 1
  store i32 %2013, i32* %2011, align 4
  %2014 = load %struct.bz_stream*, %struct.bz_stream** %1970, align 8
  %2015 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2014, i32 0, i32 2
  %2016 = load i32, i32* %2015, align 4
  %2017 = icmp eq i32 %2016, 0
  br i1 %2017, label %2018, label %2023

; <label>:2018:                                   ; preds = %1991
  %2019 = load %struct.bz_stream*, %struct.bz_stream** %1971, align 8
  %2020 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2019, i32 0, i32 3
  %2021 = load i32, i32* %2020, align 8
  %2022 = add i32 %2021, 1
  store i32 %2022, i32* %2020, align 8
  br label %2023

; <label>:2023:                                   ; preds = %2018, %1991
  %2024 = load i32, i32* %1959, align 4
  %2025 = icmp sge i32 %2024, 1
  br i1 %2025, label %._crit_edge407.loopexit, label %.lr.ph406

; <label>:2026:                                   ; preds = %._crit_edge410
  %2027 = trunc i32 %.4232 to i8
  %2028 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 35
  %2029 = sext i32 %.446 to i64
  %2030 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2028, i64 0, i64 %2029
  %2031 = sext i32 %.1712 to i64
  %2032 = getelementptr inbounds [258 x i8], [258 x i8]* %2030, i64 0, i64 %2031
  store i8 %2027, i8* %2032, align 1
  %2033 = add nsw i32 %.1712, 1
  br label %1885

; <label>:2034:                                   ; preds = %1885
  %2035 = add nsw i32 %.244, 1
  br label %1819

; <label>:2036:                                   ; preds = %1819
  %2037 = icmp slt i32 0, %.488
  br i1 %2037, label %.lr.ph541, label %2075

.lr.ph541:                                        ; preds = %2036
  %2038 = zext i32 %.566 to i64
  %2039 = zext i32 %.488 to i64
  %2040 = icmp slt i32 0, %.566
  %2041 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 36
  %2042 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 37
  %2043 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 38
  %2044 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 35
  %2045 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 39
  %scevgep1091 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 35, i64 0, i64 0
  %scevgep10911092 = bitcast i8* %scevgep1091 to %struct.DState*
  br label %2046

; <label>:2046:                                   ; preds = %.lr.ph541, %._crit_edge532
  %lsr.iv1093 = phi %struct.DState* [ %scevgep10911092, %.lr.ph541 ], [ %2070, %._crit_edge532 ]
  %indvars.iv544 = phi i64 [ 0, %.lr.ph541 ], [ %indvars.iv.next545, %._crit_edge532 ]
  %lsr.iv10931097 = bitcast %struct.DState* %lsr.iv1093 to i8*
  call void @unroll_loop(i32 117)
  br i1 %2040, label %.lr.ph531.preheader, label %._crit_edge532

.lr.ph531.preheader:                              ; preds = %2046
  br label %.lr.ph531

.lr.ph531:                                        ; preds = %.lr.ph531.preheader, %2060
  %indvars.iv535 = phi i64 [ %indvars.iv.next536, %2060 ], [ 0, %.lr.ph531.preheader ]
  %.04529 = phi i32 [ %.15, %2060 ], [ 32, %.lr.ph531.preheader ]
  %.06528 = phi i32 [ %.17, %2060 ], [ 0, %.lr.ph531.preheader ]
  call void @unroll_loop(i32 118)
  %uglygep1098 = getelementptr i8, i8* %lsr.iv10931097, i64 %indvars.iv535
  %2047 = load i8, i8* %uglygep1098, align 1
  %2048 = zext i8 %2047 to i32
  %2049 = icmp sgt i32 %2048, %.06528
  br i1 %2049, label %2050, label %2053

; <label>:2050:                                   ; preds = %.lr.ph531
  %uglygep1099 = getelementptr i8, i8* %lsr.iv10931097, i64 %indvars.iv535
  %2051 = load i8, i8* %uglygep1099, align 1
  %2052 = zext i8 %2051 to i32
  br label %2053

; <label>:2053:                                   ; preds = %2050, %.lr.ph531
  %.17 = phi i32 [ %2052, %2050 ], [ %.06528, %.lr.ph531 ]
  %uglygep1100 = getelementptr i8, i8* %lsr.iv10931097, i64 %indvars.iv535
  %2054 = load i8, i8* %uglygep1100, align 1
  %2055 = zext i8 %2054 to i32
  %2056 = icmp slt i32 %2055, %.04529
  br i1 %2056, label %2057, label %2060

; <label>:2057:                                   ; preds = %2053
  %uglygep1101 = getelementptr i8, i8* %lsr.iv10931097, i64 %indvars.iv535
  %2058 = load i8, i8* %uglygep1101, align 1
  %2059 = zext i8 %2058 to i32
  br label %2060

; <label>:2060:                                   ; preds = %2053, %2057
  %.15 = phi i32 [ %2059, %2057 ], [ %.04529, %2053 ]
  %indvars.iv.next536 = add nuw nsw i64 %indvars.iv535, 1
  %exitcond1034 = icmp ne i64 %2038, %indvars.iv.next536
  br i1 %exitcond1034, label %.lr.ph531, label %._crit_edge532.loopexit

._crit_edge532.loopexit:                          ; preds = %2060
  %.06.lcssa.ph = phi i32 [ %.17, %2060 ]
  %.04.lcssa.ph = phi i32 [ %.15, %2060 ]
  br label %._crit_edge532

._crit_edge532:                                   ; preds = %._crit_edge532.loopexit, %2046
  %.06.lcssa = phi i32 [ 0, %2046 ], [ %.06.lcssa.ph, %._crit_edge532.loopexit ]
  %.04.lcssa = phi i32 [ 32, %2046 ], [ %.04.lcssa.ph, %._crit_edge532.loopexit ]
  %2061 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2041, i64 0, i64 %indvars.iv544
  %2062 = getelementptr inbounds [258 x i32], [258 x i32]* %2061, i64 0, i64 0
  %2063 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2042, i64 0, i64 %indvars.iv544
  %2064 = getelementptr inbounds [258 x i32], [258 x i32]* %2063, i64 0, i64 0
  %2065 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2043, i64 0, i64 %indvars.iv544
  %2066 = getelementptr inbounds [258 x i32], [258 x i32]* %2065, i64 0, i64 0
  %2067 = getelementptr inbounds [6 x [258 x i8]], [6 x [258 x i8]]* %2044, i64 0, i64 %indvars.iv544
  %2068 = getelementptr inbounds [258 x i8], [258 x i8]* %2067, i64 0, i64 0
  call void @BZ2_hbCreateDecodeTables(i32* %2062, i32* %2064, i32* %2066, i8* %2068, i32 %.04.lcssa, i32 %.06.lcssa, i32 %.566)
  %2069 = getelementptr inbounds [6 x i32], [6 x i32]* %2045, i64 0, i64 %indvars.iv544
  store i32 %.04.lcssa, i32* %2069, align 4
  %indvars.iv.next545 = add nuw nsw i64 %indvars.iv544, 1
  %scevgep1094 = getelementptr %struct.DState, %struct.DState* %lsr.iv1093, i64 0, i32 16, i64 47
  %scevgep10941095 = bitcast i32* %scevgep1094 to i8*
  %uglygep1096 = getelementptr i8, i8* %scevgep10941095, i64 2
  %2070 = bitcast i8* %uglygep1096 to %struct.DState*
  %exitcond1035 = icmp ne i64 %indvars.iv.next545, %2039
  br i1 %exitcond1035, label %2046, label %._crit_edge542

._crit_edge542:                                   ; preds = %._crit_edge532
  %2071 = add i32 %.488, -1
  %2072 = zext i32 %2071 to i64
  %2073 = add i64 %2072, 1
  %2074 = trunc i64 %2073 to i32
  br label %2075

; <label>:2075:                                   ; preds = %._crit_edge542, %2036
  %.648.lcssa = phi i32 [ %2074, %._crit_edge542 ], [ 0, %2036 ]
  %2076 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %2077 = load i32, i32* %2076, align 8
  %2078 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %2079 = load i32, i32* %2078, align 8
  %scevgep1089 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 16, i64 0
  br label %2080

; <label>:2080:                                   ; preds = %2075, %2080
  %indvars.iv524 = phi i64 [ 0, %2075 ], [ %indvars.iv.next525, %2080 ]
  call void @unroll_loop(i32 119)
  %scevgep1090 = getelementptr i32, i32* %scevgep1089, i64 %indvars.iv524
  store i32 0, i32* %scevgep1090, align 4
  %indvars.iv.next525 = add nuw nsw i64 %indvars.iv524, 1
  %exitcond526 = icmp ne i64 %indvars.iv.next525, 256
  br i1 %exitcond526, label %2080, label %2081

; <label>:2081:                                   ; preds = %2080
  %2082 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %scevgep1077 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 31, i64 4095
  %scevgep10771078 = bitcast i8* %scevgep1077 to %struct.DState*
  br label %2083

; <label>:2083:                                   ; preds = %2081, %2088
  %lsr.iv1085 = phi i64 [ 255, %2081 ], [ %lsr.iv.next1086, %2088 ]
  %lsr.iv1079 = phi %struct.DState* [ %scevgep10771078, %2081 ], [ %2093, %2088 ]
  %indvars.iv521 = phi i64 [ 15, %2081 ], [ %indvars.iv.next522, %2088 ]
  %indvars.iv519 = phi i64 [ 4095, %2081 ], [ %indvars.iv.next520, %2088 ]
  %lsr.iv10791080 = bitcast %struct.DState* %lsr.iv1079 to i8*
  call void @unroll_loop(i32 120)
  br label %2084

; <label>:2084:                                   ; preds = %2083, %2084
  %lsr.iv1082 = phi i64 [ 0, %2083 ], [ %lsr.iv.next1083, %2084 ]
  call void @unroll_loop(i32 121)
  %2085 = add i64 %lsr.iv1085, %lsr.iv1082
  %uglygep1084 = getelementptr i8, i8* %lsr.iv10791080, i64 %lsr.iv1082
  %tmp1087 = trunc i64 %2085 to i8
  store i8 %tmp1087, i8* %uglygep1084, align 1
  %lsr.iv.next1083 = add nsw i64 %lsr.iv1082, -1
  %2086 = add i64 %lsr.iv.next1083, 15
  %tmp1088 = trunc i64 %2086 to i32
  %2087 = icmp sge i32 %tmp1088, 0
  br i1 %2087, label %2084, label %2088

; <label>:2088:                                   ; preds = %2084
  %2089 = add nsw i64 %indvars.iv519, -16
  %2090 = trunc i64 %2089 to i32
  %2091 = add nsw i32 %2090, 1
  %2092 = getelementptr inbounds [16 x i32], [16 x i32]* %2082, i64 0, i64 %indvars.iv521
  store i32 %2091, i32* %2092, align 4
  %indvars.iv.next522 = add nsw i64 %indvars.iv521, -1
  %indvars.iv.next520 = add nsw i64 %indvars.iv519, -16
  %uglygep1081 = getelementptr i8, i8* %lsr.iv10791080, i64 -16
  %2093 = bitcast i8* %uglygep1081 to %struct.DState*
  %lsr.iv.next1086 = add nsw i64 %lsr.iv1085, -16
  %2094 = icmp sge i64 %indvars.iv.next522, 0
  br i1 %2094, label %2083, label %2095

; <label>:2095:                                   ; preds = %2088
  %2096 = mul nsw i32 100000, %2079
  %2097 = add nsw i32 %2077, 1
  %2098 = trunc i64 256 to i32
  %2099 = icmp eq i32 0, 0
  br i1 %2099, label %2100, label %2125

; <label>:2100:                                   ; preds = %2095
  %2101 = add nsw i32 -1, 1
  %2102 = icmp sge i32 %2101, %.3109
  br i1 %2102, label %.loopexit, label %2103

; <label>:2103:                                   ; preds = %2100
  %2104 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 33
  %2105 = sext i32 %2101 to i64
  %2106 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2104, i64 0, i64 %2105
  %2107 = load i8, i8* %2106, align 1
  %2108 = zext i8 %2107 to i32
  %2109 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 39
  %2110 = sext i32 %2108 to i64
  %2111 = getelementptr inbounds [6 x i32], [6 x i32]* %2109, i64 0, i64 %2110
  %2112 = load i32, i32* %2111, align 4
  %2113 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 36
  %2114 = sext i32 %2108 to i64
  %2115 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2113, i64 0, i64 %2114
  %2116 = getelementptr inbounds [258 x i32], [258 x i32]* %2115, i64 0, i64 0
  %2117 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 38
  %2118 = sext i32 %2108 to i64
  %2119 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2117, i64 0, i64 %2118
  %2120 = getelementptr inbounds [258 x i32], [258 x i32]* %2119, i64 0, i64 0
  %2121 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 37
  %2122 = sext i32 %2108 to i64
  %2123 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2121, i64 0, i64 %2122
  %2124 = getelementptr inbounds [258 x i32], [258 x i32]* %2123, i64 0, i64 0
  br label %2125

; <label>:2125:                                   ; preds = %2103, %2095
  %.0342 = phi i32* [ %2120, %2103 ], [ %81, %2095 ]
  %.0327 = phi i32* [ %2124, %2103 ], [ %79, %2095 ]
  %.0312 = phi i32* [ %2116, %2103 ], [ %77, %2095 ]
  %.0297 = phi i32 [ %2112, %2103 ], [ %75, %2095 ]
  %.0282 = phi i32 [ %2108, %2103 ], [ %73, %2095 ]
  %.0154 = phi i32 [ 50, %2103 ], [ 0, %2095 ]
  %.0139 = phi i32 [ %2101, %2103 ], [ -1, %2095 ]
  %2126 = add nsw i32 %.0154, -1
  br label %2127

; <label>:2127:                                   ; preds = %33, %2125
  %.1343 = phi i32* [ %81, %33 ], [ %.0342, %2125 ]
  %.1328 = phi i32* [ %79, %33 ], [ %.0327, %2125 ]
  %.1313 = phi i32* [ %77, %33 ], [ %.0312, %2125 ]
  %.1298 = phi i32 [ %75, %33 ], [ %.0297, %2125 ]
  %.1283 = phi i32 [ %73, %33 ], [ %.0282, %2125 ]
  %.0248 = phi i32 [ %67, %33 ], [ %.0297, %2125 ]
  %.7235 = phi i32 [ %63, %33 ], [ %.0228, %2125 ]
  %.0190 = phi i32 [ %57, %33 ], [ 0, %2125 ]
  %.0178 = phi i32 [ %55, %33 ], [ %2096, %2125 ]
  %.1155 = phi i32 [ %51, %33 ], [ %2126, %2125 ]
  %.1140 = phi i32 [ %49, %33 ], [ %.0139, %2125 ]
  %.0127 = phi i32 [ %47, %33 ], [ %2097, %2125 ]
  %.9115 = phi i32 [ %45, %33 ], [ %.3109, %2125 ]
  %.1094 = phi i32 [ %43, %33 ], [ %.488, %2125 ]
  %.1172 = phi i32 [ %41, %33 ], [ %.566, %2125 ]
  %.749 = phi i32 [ %39, %33 ], [ %.648.lcssa, %2125 ]
  %.1528 = phi i32 [ %37, %33 ], [ %.922, %2125 ]
  %.21 = phi i32 [ %35, %33 ], [ %2098, %2125 ]
  %2128 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 36, i32* %2128, align 8
  %2129 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2130 = load i32, i32* %2129, align 4
  %2131 = icmp sge i32 %2130, %.0248
  br i1 %2131, label %._crit_edge512, label %.lr.ph511.preheader

.lr.ph511.preheader:                              ; preds = %2127
  %2132 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2133 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2134 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2135 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2136 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2137 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2138 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2139 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2140 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2141 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph511

._crit_edge512.loopexit:                          ; preds = %2190
  br label %._crit_edge512

._crit_edge512:                                   ; preds = %._crit_edge512.loopexit, %2127
  %2142 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2143 = load i32, i32* %2142, align 8
  %2144 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2145 = load i32, i32* %2144, align 4
  %2146 = sub nsw i32 %2145, %.0248
  %2147 = lshr i32 %2143, %2146
  %2148 = shl i32 1, %.0248
  %2149 = sub nsw i32 %2148, 1
  %2150 = and i32 %2147, %2149
  %2151 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2152 = load i32, i32* %2151, align 4
  %2153 = sub nsw i32 %2152, %.0248
  store i32 %2153, i32* %2151, align 4
  br label %2193

.lr.ph511:                                        ; preds = %.lr.ph511.preheader, %2190
  call void @unroll_loop(i32 122)
  %2154 = load %struct.bz_stream*, %struct.bz_stream** %2132, align 8
  %2155 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2154, i32 0, i32 1
  %2156 = load i32, i32* %2155, align 8
  %2157 = icmp eq i32 %2156, 0
  br i1 %2157, label %.loopexit.loopexit501, label %2158

; <label>:2158:                                   ; preds = %.lr.ph511
  %2159 = load i32, i32* %2133, align 8
  %2160 = shl i32 %2159, 8
  %2161 = load %struct.bz_stream*, %struct.bz_stream** %2134, align 8
  %2162 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2161, i32 0, i32 0
  %2163 = load i8*, i8** %2162, align 8
  %2164 = load i8, i8* %2163, align 1
  %2165 = zext i8 %2164 to i32
  %2166 = or i32 %2160, %2165
  store i32 %2166, i32* %2135, align 8
  %2167 = load i32, i32* %2136, align 4
  %2168 = add nsw i32 %2167, 8
  store i32 %2168, i32* %2136, align 4
  %2169 = load %struct.bz_stream*, %struct.bz_stream** %2137, align 8
  %2170 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2169, i32 0, i32 0
  %2171 = load i8*, i8** %2170, align 8
  %2172 = getelementptr inbounds i8, i8* %2171, i32 1
  store i8* %2172, i8** %2170, align 8
  %2173 = load %struct.bz_stream*, %struct.bz_stream** %2138, align 8
  %2174 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2173, i32 0, i32 1
  %2175 = load i32, i32* %2174, align 8
  %2176 = add i32 %2175, -1
  store i32 %2176, i32* %2174, align 8
  %2177 = load %struct.bz_stream*, %struct.bz_stream** %2139, align 8
  %2178 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2177, i32 0, i32 2
  %2179 = load i32, i32* %2178, align 4
  %2180 = add i32 %2179, 1
  store i32 %2180, i32* %2178, align 4
  %2181 = load %struct.bz_stream*, %struct.bz_stream** %2140, align 8
  %2182 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2181, i32 0, i32 2
  %2183 = load i32, i32* %2182, align 4
  %2184 = icmp eq i32 %2183, 0
  br i1 %2184, label %2185, label %2190

; <label>:2185:                                   ; preds = %2158
  %2186 = load %struct.bz_stream*, %struct.bz_stream** %2141, align 8
  %2187 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2186, i32 0, i32 3
  %2188 = load i32, i32* %2187, align 8
  %2189 = add i32 %2188, 1
  store i32 %2189, i32* %2187, align 8
  br label %2190

; <label>:2190:                                   ; preds = %2185, %2158
  %2191 = load i32, i32* %2129, align 4
  %2192 = icmp sge i32 %2191, %.0248
  br i1 %2192, label %._crit_edge512.loopexit, label %.lr.ph511

; <label>:2193:                                   ; preds = %._crit_edge512, %._crit_edge509
  %.2344 = phi i32* [ %.3345, %._crit_edge509 ], [ %.1343, %._crit_edge512 ]
  %.2329 = phi i32* [ %.3330, %._crit_edge509 ], [ %.1328, %._crit_edge512 ]
  %.2314 = phi i32* [ %.3315, %._crit_edge509 ], [ %.1313, %._crit_edge512 ]
  %.2299 = phi i32 [ %.3300, %._crit_edge509 ], [ %.1298, %._crit_edge512 ]
  %.2284 = phi i32 [ %.3285, %._crit_edge509 ], [ %.1283, %._crit_edge512 ]
  %.0271 = phi i32 [ %2223, %._crit_edge509 ], [ %71, %._crit_edge512 ]
  %.0260 = phi i32 [ %2228, %._crit_edge509 ], [ %2150, %._crit_edge512 ]
  %.1249 = phi i32 [ %.2250, %._crit_edge509 ], [ %.0248, %._crit_edge512 ]
  %.8236 = phi i32 [ %.9237, %._crit_edge509 ], [ %.7235, %._crit_edge512 ]
  %.1191 = phi i32 [ %.2192, %._crit_edge509 ], [ %.0190, %._crit_edge512 ]
  %.1179 = phi i32 [ %.2180, %._crit_edge509 ], [ %.0178, %._crit_edge512 ]
  %.2156 = phi i32 [ %.3157, %._crit_edge509 ], [ %.1155, %._crit_edge512 ]
  %.2141 = phi i32 [ %.3142, %._crit_edge509 ], [ %.1140, %._crit_edge512 ]
  %.1128 = phi i32 [ %.2129, %._crit_edge509 ], [ %.0127, %._crit_edge512 ]
  %.10116 = phi i32 [ %.11117, %._crit_edge509 ], [ %.9115, %._crit_edge512 ]
  %.1195 = phi i32 [ %.1296, %._crit_edge509 ], [ %.1094, %._crit_edge512 ]
  %.1273 = phi i32 [ %.1374, %._crit_edge509 ], [ %.1172, %._crit_edge512 ]
  %.850 = phi i32 [ %.951, %._crit_edge509 ], [ %.749, %._crit_edge512 ]
  %.1629 = phi i32 [ %.1730, %._crit_edge509 ], [ %.1528, %._crit_edge512 ]
  %.22 = phi i32 [ %.23, %._crit_edge509 ], [ %.21, %._crit_edge512 ]
  %2194 = icmp sgt i32 %.1249, 20
  br i1 %2194, label %.loopexit, label %2195

; <label>:2195:                                   ; preds = %2193
  %2196 = sext i32 %.1249 to i64
  %2197 = getelementptr inbounds i32, i32* %.2314, i64 %2196
  %2198 = load i32, i32* %2197, align 4
  %2199 = icmp sle i32 %.0260, %2198
  br i1 %2199, label %2268, label %2200

; <label>:2200:                                   ; preds = %2195
  %2201 = add nsw i32 %.1249, 1
  br label %2202

; <label>:2202:                                   ; preds = %33, %2200
  %.3345 = phi i32* [ %81, %33 ], [ %.2344, %2200 ]
  %.3330 = phi i32* [ %79, %33 ], [ %.2329, %2200 ]
  %.3315 = phi i32* [ %77, %33 ], [ %.2314, %2200 ]
  %.3300 = phi i32 [ %75, %33 ], [ %.2299, %2200 ]
  %.3285 = phi i32 [ %73, %33 ], [ %.2284, %2200 ]
  %.1272 = phi i32 [ %71, %33 ], [ %.0271, %2200 ]
  %.1261 = phi i32 [ %69, %33 ], [ %.0260, %2200 ]
  %.2250 = phi i32 [ %67, %33 ], [ %2201, %2200 ]
  %.9237 = phi i32 [ %63, %33 ], [ %.8236, %2200 ]
  %.2192 = phi i32 [ %57, %33 ], [ %.1191, %2200 ]
  %.2180 = phi i32 [ %55, %33 ], [ %.1179, %2200 ]
  %.3157 = phi i32 [ %51, %33 ], [ %.2156, %2200 ]
  %.3142 = phi i32 [ %49, %33 ], [ %.2141, %2200 ]
  %.2129 = phi i32 [ %47, %33 ], [ %.1128, %2200 ]
  %.11117 = phi i32 [ %45, %33 ], [ %.10116, %2200 ]
  %.1296 = phi i32 [ %43, %33 ], [ %.1195, %2200 ]
  %.1374 = phi i32 [ %41, %33 ], [ %.1273, %2200 ]
  %.951 = phi i32 [ %39, %33 ], [ %.850, %2200 ]
  %.1730 = phi i32 [ %37, %33 ], [ %.1629, %2200 ]
  %.23 = phi i32 [ %35, %33 ], [ %.22, %2200 ]
  %2203 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 37, i32* %2203, align 8
  %2204 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2205 = load i32, i32* %2204, align 4
  %2206 = icmp sge i32 %2205, 1
  br i1 %2206, label %._crit_edge509, label %.lr.ph508.preheader

.lr.ph508.preheader:                              ; preds = %2202
  %2207 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2208 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2209 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2210 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2211 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2212 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2213 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2214 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2215 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2216 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph508

._crit_edge509.loopexit:                          ; preds = %2265
  br label %._crit_edge509

._crit_edge509:                                   ; preds = %._crit_edge509.loopexit, %2202
  %2217 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2218 = load i32, i32* %2217, align 8
  %2219 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2220 = load i32, i32* %2219, align 4
  %2221 = sub nsw i32 %2220, 1
  %2222 = lshr i32 %2218, %2221
  %2223 = and i32 %2222, 1
  %2224 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2225 = load i32, i32* %2224, align 4
  %2226 = sub nsw i32 %2225, 1
  store i32 %2226, i32* %2224, align 4
  %2227 = shl i32 %.1261, 1
  %2228 = or i32 %2227, %2223
  br label %2193

.lr.ph508:                                        ; preds = %.lr.ph508.preheader, %2265
  call void @unroll_loop(i32 123)
  %2229 = load %struct.bz_stream*, %struct.bz_stream** %2207, align 8
  %2230 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2229, i32 0, i32 1
  %2231 = load i32, i32* %2230, align 8
  %2232 = icmp eq i32 %2231, 0
  br i1 %2232, label %.loopexit.loopexit476, label %2233

; <label>:2233:                                   ; preds = %.lr.ph508
  %2234 = load i32, i32* %2208, align 8
  %2235 = shl i32 %2234, 8
  %2236 = load %struct.bz_stream*, %struct.bz_stream** %2209, align 8
  %2237 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2236, i32 0, i32 0
  %2238 = load i8*, i8** %2237, align 8
  %2239 = load i8, i8* %2238, align 1
  %2240 = zext i8 %2239 to i32
  %2241 = or i32 %2235, %2240
  store i32 %2241, i32* %2210, align 8
  %2242 = load i32, i32* %2211, align 4
  %2243 = add nsw i32 %2242, 8
  store i32 %2243, i32* %2211, align 4
  %2244 = load %struct.bz_stream*, %struct.bz_stream** %2212, align 8
  %2245 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2244, i32 0, i32 0
  %2246 = load i8*, i8** %2245, align 8
  %2247 = getelementptr inbounds i8, i8* %2246, i32 1
  store i8* %2247, i8** %2245, align 8
  %2248 = load %struct.bz_stream*, %struct.bz_stream** %2213, align 8
  %2249 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2248, i32 0, i32 1
  %2250 = load i32, i32* %2249, align 8
  %2251 = add i32 %2250, -1
  store i32 %2251, i32* %2249, align 8
  %2252 = load %struct.bz_stream*, %struct.bz_stream** %2214, align 8
  %2253 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2252, i32 0, i32 2
  %2254 = load i32, i32* %2253, align 4
  %2255 = add i32 %2254, 1
  store i32 %2255, i32* %2253, align 4
  %2256 = load %struct.bz_stream*, %struct.bz_stream** %2215, align 8
  %2257 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2256, i32 0, i32 2
  %2258 = load i32, i32* %2257, align 4
  %2259 = icmp eq i32 %2258, 0
  br i1 %2259, label %2260, label %2265

; <label>:2260:                                   ; preds = %2233
  %2261 = load %struct.bz_stream*, %struct.bz_stream** %2216, align 8
  %2262 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2261, i32 0, i32 3
  %2263 = load i32, i32* %2262, align 8
  %2264 = add i32 %2263, 1
  store i32 %2264, i32* %2262, align 8
  br label %2265

; <label>:2265:                                   ; preds = %2260, %2233
  %2266 = load i32, i32* %2204, align 4
  %2267 = icmp sge i32 %2266, 1
  br i1 %2267, label %._crit_edge509.loopexit, label %.lr.ph508

; <label>:2268:                                   ; preds = %2195
  %2269 = sext i32 %.1249 to i64
  %2270 = getelementptr inbounds i32, i32* %.2329, i64 %2269
  %2271 = load i32, i32* %2270, align 4
  %2272 = sub nsw i32 %.0260, %2271
  %2273 = icmp slt i32 %2272, 0
  br i1 %2273, label %.loopexit, label %2274

; <label>:2274:                                   ; preds = %2268
  %2275 = sext i32 %.1249 to i64
  %2276 = getelementptr inbounds i32, i32* %.2329, i64 %2275
  %2277 = load i32, i32* %2276, align 4
  %2278 = sub nsw i32 %.0260, %2277
  %2279 = icmp sge i32 %2278, 258
  br i1 %2279, label %.loopexit, label %2280

; <label>:2280:                                   ; preds = %2274
  %2281 = sext i32 %.1249 to i64
  %2282 = getelementptr inbounds i32, i32* %.2329, i64 %2281
  %2283 = load i32, i32* %2282, align 4
  %2284 = sub nsw i32 %.0260, %2283
  %2285 = sext i32 %2284 to i64
  %2286 = getelementptr inbounds i32, i32* %.2344, i64 %2285
  %2287 = load i32, i32* %2286, align 4
  br label %2288

; <label>:2288:                                   ; preds = %2280, %2542, %2922
  %.4346 = phi i32* [ %.12354, %2922 ], [ %.8350, %2542 ], [ %.2344, %2280 ]
  %.4331 = phi i32* [ %.12339, %2922 ], [ %.8335, %2542 ], [ %.2329, %2280 ]
  %.4316 = phi i32* [ %.12324, %2922 ], [ %.8320, %2542 ], [ %.2314, %2280 ]
  %.4301 = phi i32 [ %.12309, %2922 ], [ %.8305, %2542 ], [ %.2299, %2280 ]
  %.4286 = phi i32 [ %.12294, %2922 ], [ %.8290, %2542 ], [ %.2284, %2280 ]
  %.2273 = phi i32 [ %.8279, %2922 ], [ %.5276, %2542 ], [ %.0271, %2280 ]
  %.2262 = phi i32 [ %.8268, %2922 ], [ %.5265, %2542 ], [ %.0260, %2280 ]
  %.3251 = phi i32 [ %.9257, %2922 ], [ %.6254, %2542 ], [ %.1249, %2280 ]
  %.10238 = phi i32 [ %.16244, %2922 ], [ %.13241, %2542 ], [ %.8236, %2280 ]
  %.0219 = phi i32 [ %.6225, %2922 ], [ %.3222, %2542 ], [ %61, %2280 ]
  %.0205 = phi i32 [ %.11216, %2922 ], [ %.9214, %2542 ], [ %59, %2280 ]
  %.3193 = phi i32 [ %.12202, %2922 ], [ %.10200, %2542 ], [ %.1191, %2280 ]
  %.3181 = phi i32 [ %.9187, %2922 ], [ %.6184, %2542 ], [ %.1179, %2280 ]
  %.0169 = phi i32 [ %2929, %2922 ], [ %2488, %2542 ], [ %2287, %2280 ]
  %.4158 = phi i32 [ %.12166, %2922 ], [ %.8162, %2542 ], [ %.2156, %2280 ]
  %.4143 = phi i32 [ %.12151, %2922 ], [ %.8147, %2542 ], [ %.2141, %2280 ]
  %.3130 = phi i32 [ %.9136, %2922 ], [ %.6133, %2542 ], [ %.1128, %2280 ]
  %.12118 = phi i32 [ %.18124, %2922 ], [ %.15121, %2542 ], [ %.10116, %2280 ]
  %.1397 = phi i32 [ %.19103, %2922 ], [ %.16100, %2542 ], [ %.1195, %2280 ]
  %.1475 = phi i32 [ %.2081, %2922 ], [ %.1778, %2542 ], [ %.1273, %2280 ]
  %.1052 = phi i32 [ %.1658, %2922 ], [ %.1355, %2542 ], [ %.850, %2280 ]
  %.1831 = phi i32 [ %.2437, %2922 ], [ %.2134, %2542 ], [ %.1629, %2280 ]
  %.24 = phi i32 [ %.30, %2922 ], [ %.27, %2542 ], [ %.22, %2280 ]
  %2289 = icmp eq i32 %.0169, %.3130
  br i1 %2289, label %2930, label %2290

; <label>:2290:                                   ; preds = %2288
  %switch = icmp ult i32 %.0169, 2
  br i1 %switch, label %2291, label %2543

; <label>:2291:                                   ; preds = %2290, %2481
  %.5347 = phi i32* [ %.8350, %2481 ], [ %.4346, %2290 ]
  %.5332 = phi i32* [ %.8335, %2481 ], [ %.4331, %2290 ]
  %.5317 = phi i32* [ %.8320, %2481 ], [ %.4316, %2290 ]
  %.5302 = phi i32 [ %.8305, %2481 ], [ %.4301, %2290 ]
  %.5287 = phi i32 [ %.8290, %2481 ], [ %.4286, %2290 ]
  %.3274 = phi i32 [ %.5276, %2481 ], [ %.2273, %2290 ]
  %.3263 = phi i32 [ %.5265, %2481 ], [ %.2262, %2290 ]
  %.4252 = phi i32 [ %.6254, %2481 ], [ %.3251, %2290 ]
  %.11239 = phi i32 [ %.13241, %2481 ], [ %.10238, %2290 ]
  %.1220 = phi i32 [ %.3222, %2481 ], [ 1, %2290 ]
  %.1206 = phi i32 [ %.5210, %2481 ], [ -1, %2290 ]
  %.4194 = phi i32 [ %.6196, %2481 ], [ %.3193, %2290 ]
  %.4182 = phi i32 [ %.6184, %2481 ], [ %.3181, %2290 ]
  %.1170 = phi i32 [ %2488, %2481 ], [ %.0169, %2290 ]
  %.5159 = phi i32 [ %.8162, %2481 ], [ %.4158, %2290 ]
  %.5144 = phi i32 [ %.8147, %2481 ], [ %.4143, %2290 ]
  %.4131 = phi i32 [ %.6133, %2481 ], [ %.3130, %2290 ]
  %.13119 = phi i32 [ %.15121, %2481 ], [ %.12118, %2290 ]
  %.1498 = phi i32 [ %.16100, %2481 ], [ %.1397, %2290 ]
  %.1576 = phi i32 [ %.1778, %2481 ], [ %.1475, %2290 ]
  %.1153 = phi i32 [ %.1355, %2481 ], [ %.1052, %2290 ]
  %.1932 = phi i32 [ %.2134, %2481 ], [ %.1831, %2290 ]
  %.25 = phi i32 [ %.27, %2481 ], [ %.24, %2290 ]
  switch i32 %.1170, label %2298 [
    i32 0, label %2292
    i32 1, label %2295
  ]

; <label>:2292:                                   ; preds = %2291
  %2293 = mul nsw i32 1, %.1220
  %2294 = add nsw i32 %.1206, %2293
  br label %2298

; <label>:2295:                                   ; preds = %2291
  %2296 = mul nsw i32 2, %.1220
  %2297 = add nsw i32 %.1206, %2296
  br label %2298

; <label>:2298:                                   ; preds = %2295, %2291, %2292
  %.3208 = phi i32 [ %2294, %2292 ], [ %2297, %2295 ], [ %.1206, %2291 ]
  %2299 = mul nsw i32 %.1220, 2
  %2300 = icmp eq i32 %.5159, 0
  br i1 %2300, label %2301, label %2326

; <label>:2301:                                   ; preds = %2298
  %2302 = add nsw i32 %.5144, 1
  %2303 = icmp sge i32 %2302, %.13119
  br i1 %2303, label %.loopexit, label %2304

; <label>:2304:                                   ; preds = %2301
  %2305 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 33
  %2306 = sext i32 %2302 to i64
  %2307 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2305, i64 0, i64 %2306
  %2308 = load i8, i8* %2307, align 1
  %2309 = zext i8 %2308 to i32
  %2310 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 39
  %2311 = sext i32 %2309 to i64
  %2312 = getelementptr inbounds [6 x i32], [6 x i32]* %2310, i64 0, i64 %2311
  %2313 = load i32, i32* %2312, align 4
  %2314 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 36
  %2315 = sext i32 %2309 to i64
  %2316 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2314, i64 0, i64 %2315
  %2317 = getelementptr inbounds [258 x i32], [258 x i32]* %2316, i64 0, i64 0
  %2318 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 38
  %2319 = sext i32 %2309 to i64
  %2320 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2318, i64 0, i64 %2319
  %2321 = getelementptr inbounds [258 x i32], [258 x i32]* %2320, i64 0, i64 0
  %2322 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 37
  %2323 = sext i32 %2309 to i64
  %2324 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2322, i64 0, i64 %2323
  %2325 = getelementptr inbounds [258 x i32], [258 x i32]* %2324, i64 0, i64 0
  br label %2326

; <label>:2326:                                   ; preds = %2304, %2298
  %.6348 = phi i32* [ %2321, %2304 ], [ %.5347, %2298 ]
  %.6333 = phi i32* [ %2325, %2304 ], [ %.5332, %2298 ]
  %.6318 = phi i32* [ %2317, %2304 ], [ %.5317, %2298 ]
  %.6303 = phi i32 [ %2313, %2304 ], [ %.5302, %2298 ]
  %.6288 = phi i32 [ %2309, %2304 ], [ %.5287, %2298 ]
  %.6160 = phi i32 [ 50, %2304 ], [ %.5159, %2298 ]
  %.6145 = phi i32 [ %2302, %2304 ], [ %.5144, %2298 ]
  %2327 = add nsw i32 %.6160, -1
  br label %2328

; <label>:2328:                                   ; preds = %33, %2326
  %.7349 = phi i32* [ %.6348, %2326 ], [ %81, %33 ]
  %.7334 = phi i32* [ %.6333, %2326 ], [ %79, %33 ]
  %.7319 = phi i32* [ %.6318, %2326 ], [ %77, %33 ]
  %.7304 = phi i32 [ %.6303, %2326 ], [ %75, %33 ]
  %.7289 = phi i32 [ %.6288, %2326 ], [ %73, %33 ]
  %.4275 = phi i32 [ %.3274, %2326 ], [ %71, %33 ]
  %.4264 = phi i32 [ %.3263, %2326 ], [ %69, %33 ]
  %.5253 = phi i32 [ %.6303, %2326 ], [ %67, %33 ]
  %.12240 = phi i32 [ %.11239, %2326 ], [ %63, %33 ]
  %.2221 = phi i32 [ %2299, %2326 ], [ %61, %33 ]
  %.4209 = phi i32 [ %.3208, %2326 ], [ %59, %33 ]
  %.5195 = phi i32 [ %.4194, %2326 ], [ %57, %33 ]
  %.5183 = phi i32 [ %.4182, %2326 ], [ %55, %33 ]
  %.2171 = phi i32 [ %.1170, %2326 ], [ %53, %33 ]
  %.7161 = phi i32 [ %2327, %2326 ], [ %51, %33 ]
  %.7146 = phi i32 [ %.6145, %2326 ], [ %49, %33 ]
  %.5132 = phi i32 [ %.4131, %2326 ], [ %47, %33 ]
  %.14120 = phi i32 [ %.13119, %2326 ], [ %45, %33 ]
  %.1599 = phi i32 [ %.1498, %2326 ], [ %43, %33 ]
  %.1677 = phi i32 [ %.1576, %2326 ], [ %41, %33 ]
  %.1254 = phi i32 [ %.1153, %2326 ], [ %39, %33 ]
  %.2033 = phi i32 [ %.1932, %2326 ], [ %37, %33 ]
  %.26 = phi i32 [ %.25, %2326 ], [ %35, %33 ]
  %2329 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 38, i32* %2329, align 8
  %2330 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2331 = load i32, i32* %2330, align 4
  %2332 = icmp sge i32 %2331, %.5253
  br i1 %2332, label %._crit_edge467, label %.lr.ph466.preheader

.lr.ph466.preheader:                              ; preds = %2328
  %2333 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2334 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2335 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2336 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2337 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2338 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2339 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2340 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2341 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2342 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph466

._crit_edge467.loopexit:                          ; preds = %2391
  br label %._crit_edge467

._crit_edge467:                                   ; preds = %._crit_edge467.loopexit, %2328
  %2343 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2344 = load i32, i32* %2343, align 8
  %2345 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2346 = load i32, i32* %2345, align 4
  %2347 = sub nsw i32 %2346, %.5253
  %2348 = lshr i32 %2344, %2347
  %2349 = shl i32 1, %.5253
  %2350 = sub nsw i32 %2349, 1
  %2351 = and i32 %2348, %2350
  %2352 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2353 = load i32, i32* %2352, align 4
  %2354 = sub nsw i32 %2353, %.5253
  store i32 %2354, i32* %2352, align 4
  br label %2394

.lr.ph466:                                        ; preds = %.lr.ph466.preheader, %2391
  call void @unroll_loop(i32 124)
  %2355 = load %struct.bz_stream*, %struct.bz_stream** %2333, align 8
  %2356 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2355, i32 0, i32 1
  %2357 = load i32, i32* %2356, align 8
  %2358 = icmp eq i32 %2357, 0
  br i1 %2358, label %.loopexit.loopexit401, label %2359

; <label>:2359:                                   ; preds = %.lr.ph466
  %2360 = load i32, i32* %2334, align 8
  %2361 = shl i32 %2360, 8
  %2362 = load %struct.bz_stream*, %struct.bz_stream** %2335, align 8
  %2363 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2362, i32 0, i32 0
  %2364 = load i8*, i8** %2363, align 8
  %2365 = load i8, i8* %2364, align 1
  %2366 = zext i8 %2365 to i32
  %2367 = or i32 %2361, %2366
  store i32 %2367, i32* %2336, align 8
  %2368 = load i32, i32* %2337, align 4
  %2369 = add nsw i32 %2368, 8
  store i32 %2369, i32* %2337, align 4
  %2370 = load %struct.bz_stream*, %struct.bz_stream** %2338, align 8
  %2371 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2370, i32 0, i32 0
  %2372 = load i8*, i8** %2371, align 8
  %2373 = getelementptr inbounds i8, i8* %2372, i32 1
  store i8* %2373, i8** %2371, align 8
  %2374 = load %struct.bz_stream*, %struct.bz_stream** %2339, align 8
  %2375 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2374, i32 0, i32 1
  %2376 = load i32, i32* %2375, align 8
  %2377 = add i32 %2376, -1
  store i32 %2377, i32* %2375, align 8
  %2378 = load %struct.bz_stream*, %struct.bz_stream** %2340, align 8
  %2379 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2378, i32 0, i32 2
  %2380 = load i32, i32* %2379, align 4
  %2381 = add i32 %2380, 1
  store i32 %2381, i32* %2379, align 4
  %2382 = load %struct.bz_stream*, %struct.bz_stream** %2341, align 8
  %2383 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2382, i32 0, i32 2
  %2384 = load i32, i32* %2383, align 4
  %2385 = icmp eq i32 %2384, 0
  br i1 %2385, label %2386, label %2391

; <label>:2386:                                   ; preds = %2359
  %2387 = load %struct.bz_stream*, %struct.bz_stream** %2342, align 8
  %2388 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2387, i32 0, i32 3
  %2389 = load i32, i32* %2388, align 8
  %2390 = add i32 %2389, 1
  store i32 %2390, i32* %2388, align 8
  br label %2391

; <label>:2391:                                   ; preds = %2386, %2359
  %2392 = load i32, i32* %2330, align 4
  %2393 = icmp sge i32 %2392, %.5253
  br i1 %2393, label %._crit_edge467.loopexit, label %.lr.ph466

; <label>:2394:                                   ; preds = %._crit_edge467, %._crit_edge464
  %.8350 = phi i32* [ %.7349, %._crit_edge467 ], [ %.9351, %._crit_edge464 ]
  %.8335 = phi i32* [ %.7334, %._crit_edge467 ], [ %.9336, %._crit_edge464 ]
  %.8320 = phi i32* [ %.7319, %._crit_edge467 ], [ %.9321, %._crit_edge464 ]
  %.8305 = phi i32 [ %.7304, %._crit_edge467 ], [ %.9306, %._crit_edge464 ]
  %.8290 = phi i32 [ %.7289, %._crit_edge467 ], [ %.9291, %._crit_edge464 ]
  %.5276 = phi i32 [ %.4275, %._crit_edge467 ], [ %2424, %._crit_edge464 ]
  %.5265 = phi i32 [ %2351, %._crit_edge467 ], [ %2429, %._crit_edge464 ]
  %.6254 = phi i32 [ %.5253, %._crit_edge467 ], [ %.7255, %._crit_edge464 ]
  %.13241 = phi i32 [ %.12240, %._crit_edge467 ], [ %.14242, %._crit_edge464 ]
  %.3222 = phi i32 [ %.2221, %._crit_edge467 ], [ %.4223, %._crit_edge464 ]
  %.5210 = phi i32 [ %.4209, %._crit_edge467 ], [ %.6211, %._crit_edge464 ]
  %.6196 = phi i32 [ %.5195, %._crit_edge467 ], [ %.7197, %._crit_edge464 ]
  %.6184 = phi i32 [ %.5183, %._crit_edge467 ], [ %.7185, %._crit_edge464 ]
  %.3172 = phi i32 [ %.2171, %._crit_edge467 ], [ %.4173, %._crit_edge464 ]
  %.8162 = phi i32 [ %.7161, %._crit_edge467 ], [ %.9163, %._crit_edge464 ]
  %.8147 = phi i32 [ %.7146, %._crit_edge467 ], [ %.9148, %._crit_edge464 ]
  %.6133 = phi i32 [ %.5132, %._crit_edge467 ], [ %.7134, %._crit_edge464 ]
  %.15121 = phi i32 [ %.14120, %._crit_edge467 ], [ %.16122, %._crit_edge464 ]
  %.16100 = phi i32 [ %.1599, %._crit_edge467 ], [ %.17101, %._crit_edge464 ]
  %.1778 = phi i32 [ %.1677, %._crit_edge467 ], [ %.1879, %._crit_edge464 ]
  %.1355 = phi i32 [ %.1254, %._crit_edge467 ], [ %.1456, %._crit_edge464 ]
  %.2134 = phi i32 [ %.2033, %._crit_edge467 ], [ %.2235, %._crit_edge464 ]
  %.27 = phi i32 [ %.26, %._crit_edge467 ], [ %.28, %._crit_edge464 ]
  %2395 = icmp sgt i32 %.6254, 20
  br i1 %2395, label %.loopexit, label %2396

; <label>:2396:                                   ; preds = %2394
  %2397 = sext i32 %.6254 to i64
  %2398 = getelementptr inbounds i32, i32* %.8320, i64 %2397
  %2399 = load i32, i32* %2398, align 4
  %2400 = icmp sle i32 %.5265, %2399
  br i1 %2400, label %2469, label %2401

; <label>:2401:                                   ; preds = %2396
  %2402 = add nsw i32 %.6254, 1
  br label %2403

; <label>:2403:                                   ; preds = %33, %2401
  %.9351 = phi i32* [ %.8350, %2401 ], [ %81, %33 ]
  %.9336 = phi i32* [ %.8335, %2401 ], [ %79, %33 ]
  %.9321 = phi i32* [ %.8320, %2401 ], [ %77, %33 ]
  %.9306 = phi i32 [ %.8305, %2401 ], [ %75, %33 ]
  %.9291 = phi i32 [ %.8290, %2401 ], [ %73, %33 ]
  %.6277 = phi i32 [ %.5276, %2401 ], [ %71, %33 ]
  %.6266 = phi i32 [ %.5265, %2401 ], [ %69, %33 ]
  %.7255 = phi i32 [ %2402, %2401 ], [ %67, %33 ]
  %.14242 = phi i32 [ %.13241, %2401 ], [ %63, %33 ]
  %.4223 = phi i32 [ %.3222, %2401 ], [ %61, %33 ]
  %.6211 = phi i32 [ %.5210, %2401 ], [ %59, %33 ]
  %.7197 = phi i32 [ %.6196, %2401 ], [ %57, %33 ]
  %.7185 = phi i32 [ %.6184, %2401 ], [ %55, %33 ]
  %.4173 = phi i32 [ %.3172, %2401 ], [ %53, %33 ]
  %.9163 = phi i32 [ %.8162, %2401 ], [ %51, %33 ]
  %.9148 = phi i32 [ %.8147, %2401 ], [ %49, %33 ]
  %.7134 = phi i32 [ %.6133, %2401 ], [ %47, %33 ]
  %.16122 = phi i32 [ %.15121, %2401 ], [ %45, %33 ]
  %.17101 = phi i32 [ %.16100, %2401 ], [ %43, %33 ]
  %.1879 = phi i32 [ %.1778, %2401 ], [ %41, %33 ]
  %.1456 = phi i32 [ %.1355, %2401 ], [ %39, %33 ]
  %.2235 = phi i32 [ %.2134, %2401 ], [ %37, %33 ]
  %.28 = phi i32 [ %.27, %2401 ], [ %35, %33 ]
  %2404 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 39, i32* %2404, align 8
  %2405 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2406 = load i32, i32* %2405, align 4
  %2407 = icmp sge i32 %2406, 1
  br i1 %2407, label %._crit_edge464, label %.lr.ph463.preheader

.lr.ph463.preheader:                              ; preds = %2403
  %2408 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2409 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2410 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2411 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2412 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2413 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2414 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2415 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2416 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2417 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph463

._crit_edge464.loopexit:                          ; preds = %2466
  br label %._crit_edge464

._crit_edge464:                                   ; preds = %._crit_edge464.loopexit, %2403
  %2418 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2419 = load i32, i32* %2418, align 8
  %2420 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2421 = load i32, i32* %2420, align 4
  %2422 = sub nsw i32 %2421, 1
  %2423 = lshr i32 %2419, %2422
  %2424 = and i32 %2423, 1
  %2425 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2426 = load i32, i32* %2425, align 4
  %2427 = sub nsw i32 %2426, 1
  store i32 %2427, i32* %2425, align 4
  %2428 = shl i32 %.6266, 1
  %2429 = or i32 %2428, %2424
  br label %2394

.lr.ph463:                                        ; preds = %.lr.ph463.preheader, %2466
  call void @unroll_loop(i32 125)
  %2430 = load %struct.bz_stream*, %struct.bz_stream** %2408, align 8
  %2431 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2430, i32 0, i32 1
  %2432 = load i32, i32* %2431, align 8
  %2433 = icmp eq i32 %2432, 0
  br i1 %2433, label %.loopexit.loopexit376, label %2434

; <label>:2434:                                   ; preds = %.lr.ph463
  %2435 = load i32, i32* %2409, align 8
  %2436 = shl i32 %2435, 8
  %2437 = load %struct.bz_stream*, %struct.bz_stream** %2410, align 8
  %2438 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2437, i32 0, i32 0
  %2439 = load i8*, i8** %2438, align 8
  %2440 = load i8, i8* %2439, align 1
  %2441 = zext i8 %2440 to i32
  %2442 = or i32 %2436, %2441
  store i32 %2442, i32* %2411, align 8
  %2443 = load i32, i32* %2412, align 4
  %2444 = add nsw i32 %2443, 8
  store i32 %2444, i32* %2412, align 4
  %2445 = load %struct.bz_stream*, %struct.bz_stream** %2413, align 8
  %2446 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2445, i32 0, i32 0
  %2447 = load i8*, i8** %2446, align 8
  %2448 = getelementptr inbounds i8, i8* %2447, i32 1
  store i8* %2448, i8** %2446, align 8
  %2449 = load %struct.bz_stream*, %struct.bz_stream** %2414, align 8
  %2450 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2449, i32 0, i32 1
  %2451 = load i32, i32* %2450, align 8
  %2452 = add i32 %2451, -1
  store i32 %2452, i32* %2450, align 8
  %2453 = load %struct.bz_stream*, %struct.bz_stream** %2415, align 8
  %2454 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2453, i32 0, i32 2
  %2455 = load i32, i32* %2454, align 4
  %2456 = add i32 %2455, 1
  store i32 %2456, i32* %2454, align 4
  %2457 = load %struct.bz_stream*, %struct.bz_stream** %2416, align 8
  %2458 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2457, i32 0, i32 2
  %2459 = load i32, i32* %2458, align 4
  %2460 = icmp eq i32 %2459, 0
  br i1 %2460, label %2461, label %2466

; <label>:2461:                                   ; preds = %2434
  %2462 = load %struct.bz_stream*, %struct.bz_stream** %2417, align 8
  %2463 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2462, i32 0, i32 3
  %2464 = load i32, i32* %2463, align 8
  %2465 = add i32 %2464, 1
  store i32 %2465, i32* %2463, align 8
  br label %2466

; <label>:2466:                                   ; preds = %2461, %2434
  %2467 = load i32, i32* %2405, align 4
  %2468 = icmp sge i32 %2467, 1
  br i1 %2468, label %._crit_edge464.loopexit, label %.lr.ph463

; <label>:2469:                                   ; preds = %2396
  %2470 = sext i32 %.6254 to i64
  %2471 = getelementptr inbounds i32, i32* %.8335, i64 %2470
  %2472 = load i32, i32* %2471, align 4
  %2473 = sub nsw i32 %.5265, %2472
  %2474 = icmp slt i32 %2473, 0
  br i1 %2474, label %.loopexit, label %2475

; <label>:2475:                                   ; preds = %2469
  %2476 = sext i32 %.6254 to i64
  %2477 = getelementptr inbounds i32, i32* %.8335, i64 %2476
  %2478 = load i32, i32* %2477, align 4
  %2479 = sub nsw i32 %.5265, %2478
  %2480 = icmp sge i32 %2479, 258
  br i1 %2480, label %.loopexit, label %2481

; <label>:2481:                                   ; preds = %2475
  %2482 = sext i32 %.6254 to i64
  %2483 = getelementptr inbounds i32, i32* %.8335, i64 %2482
  %2484 = load i32, i32* %2483, align 4
  %2485 = sub nsw i32 %.5265, %2484
  %2486 = sext i32 %2485 to i64
  %2487 = getelementptr inbounds i32, i32* %.8350, i64 %2486
  %2488 = load i32, i32* %2487, align 4
  %2489 = icmp eq i32 %2488, 0
  %2490 = icmp eq i32 %2488, 1
  %2491 = select i1 %2489, i1 true, i1 %2490
  br i1 %2491, label %2291, label %2492

; <label>:2492:                                   ; preds = %2481
  %2493 = add nsw i32 %.5210, 1
  %2494 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %2495 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2496 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2497 = getelementptr inbounds [16 x i32], [16 x i32]* %2496, i64 0, i64 0
  %2498 = load i32, i32* %2497, align 4
  %2499 = sext i32 %2498 to i64
  %2500 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2495, i64 0, i64 %2499
  %2501 = load i8, i8* %2500, align 1
  %2502 = zext i8 %2501 to i64
  %2503 = getelementptr inbounds [256 x i8], [256 x i8]* %2494, i64 0, i64 %2502
  %2504 = load i8, i8* %2503, align 1
  %2505 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 16
  %2506 = zext i8 %2504 to i64
  %2507 = getelementptr inbounds [256 x i32], [256 x i32]* %2505, i64 0, i64 %2506
  %2508 = load i32, i32* %2507, align 4
  %2509 = add nsw i32 %2508, %2493
  store i32 %2509, i32* %2507, align 4
  %2510 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 10
  %2511 = load i8, i8* %2510, align 4
  %2512 = icmp ne i8 %2511, 0
  %2513 = icmp sgt i32 %2493, 0
  br i1 %2512, label %2514, label %2528

; <label>:2514:                                   ; preds = %2492
  br i1 %2513, label %.lr.ph444, label %2542

.lr.ph444:                                        ; preds = %2514
  %2515 = sext i32 %.6196 to i64
  %2516 = sext i32 %.6184 to i64
  %2517 = zext i8 %2504 to i16
  %2518 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  br label %2519

; <label>:2519:                                   ; preds = %.lr.ph444, %2523
  %indvars.iv447 = phi i64 [ %2515, %.lr.ph444 ], [ %indvars.iv.next448, %2523 ]
  %.7212441 = phi i32 [ %2493, %.lr.ph444 ], [ %2525, %2523 ]
  call void @unroll_loop(i32 126)
  %2520 = icmp sge i64 %indvars.iv447, %2516
  br i1 %2520, label %2521, label %2523

; <label>:2521:                                   ; preds = %2519
  %.7212.lcssa369 = phi i32 [ %.7212441, %2519 ]
  %.8198.lcssa368.wide = phi i64 [ %indvars.iv447, %2519 ]
  %2522 = trunc i64 %.8198.lcssa368.wide to i32
  br label %.loopexit

; <label>:2523:                                   ; preds = %2519
  %2524 = load i16*, i16** %2518, align 8
  %scevgep1053 = getelementptr i16, i16* %2524, i64 %indvars.iv447
  store i16 %2517, i16* %scevgep1053, align 2
  %indvars.iv.next448 = add nsw i64 %indvars.iv447, 1
  %2525 = add nsw i32 %.7212441, -1
  %2526 = icmp sgt i32 %2525, 0
  br i1 %2526, label %2519, label %._crit_edge445

._crit_edge445:                                   ; preds = %2523
  %split = phi i32 [ %2525, %2523 ]
  %split446.wide = phi i64 [ %indvars.iv.next448, %2523 ]
  %2527 = trunc i64 %split446.wide to i32
  br label %2542

; <label>:2528:                                   ; preds = %2492
  br i1 %2513, label %.lr.ph454, label %2542

.lr.ph454:                                        ; preds = %2528
  %2529 = sext i32 %.6196 to i64
  %2530 = sext i32 %.6184 to i64
  %2531 = zext i8 %2504 to i32
  %2532 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  br label %2533

; <label>:2533:                                   ; preds = %.lr.ph454, %2537
  %indvars.iv458 = phi i64 [ %2529, %.lr.ph454 ], [ %indvars.iv.next459, %2537 ]
  %.8213451 = phi i32 [ %2493, %.lr.ph454 ], [ %2539, %2537 ]
  call void @unroll_loop(i32 127)
  %2534 = icmp sge i64 %indvars.iv458, %2530
  br i1 %2534, label %2535, label %2537

; <label>:2535:                                   ; preds = %2533
  %.8213.lcssa371 = phi i32 [ %.8213451, %2533 ]
  %.9199.lcssa370.wide = phi i64 [ %indvars.iv458, %2533 ]
  %2536 = trunc i64 %.9199.lcssa370.wide to i32
  br label %.loopexit

; <label>:2537:                                   ; preds = %2533
  %2538 = load i32*, i32** %2532, align 8
  %scevgep1054 = getelementptr i32, i32* %2538, i64 %indvars.iv458
  store i32 %2531, i32* %scevgep1054, align 4
  %indvars.iv.next459 = add nsw i64 %indvars.iv458, 1
  %2539 = add nsw i32 %.8213451, -1
  %2540 = icmp sgt i32 %2539, 0
  br i1 %2540, label %2533, label %._crit_edge455

._crit_edge455:                                   ; preds = %2537
  %split456 = phi i32 [ %2539, %2537 ]
  %split457.wide = phi i64 [ %indvars.iv.next459, %2537 ]
  %2541 = trunc i64 %split457.wide to i32
  br label %2542

; <label>:2542:                                   ; preds = %2528, %._crit_edge455, %2514, %._crit_edge445
  %.9214 = phi i32 [ %split, %._crit_edge445 ], [ %2493, %2514 ], [ %split456, %._crit_edge455 ], [ %2493, %2528 ]
  %.10200 = phi i32 [ %2527, %._crit_edge445 ], [ %.6196, %2514 ], [ %2541, %._crit_edge455 ], [ %.6196, %2528 ]
  br label %2288

; <label>:2543:                                   ; preds = %2290
  %2544 = icmp sge i32 %.3193, %.3181
  br i1 %2544, label %.loopexit, label %2545

; <label>:2545:                                   ; preds = %2543
  %2546 = sub nsw i32 %.0169, 1
  %2547 = icmp ult i32 %2546, 16
  br i1 %2547, label %2548, label %2633

; <label>:2548:                                   ; preds = %2545
  %2549 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2550 = getelementptr inbounds [16 x i32], [16 x i32]* %2549, i64 0, i64 0
  %2551 = load i32, i32* %2550, align 4
  %2552 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2553 = add i32 %2551, %2546
  %2554 = zext i32 %2553 to i64
  %2555 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2552, i64 0, i64 %2554
  %2556 = load i8, i8* %2555, align 1
  %2557 = icmp ugt i32 %2546, 3
  br i1 %2557, label %.lr.ph482, label %2616

.lr.ph482:                                        ; preds = %2548
  %2558 = add i32 %.0169, -5
  %2559 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2560 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2561 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2562 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2563 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2564 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2565 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2566 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2567 = add i32 %2551, -1
  %2568 = add i32 %2551, -1
  %2569 = add i32 %2551, -1
  %2570 = add i32 %2551, -1
  %2571 = add i32 %2551, -1
  %2572 = add i32 %2551, -1
  %2573 = add i32 %2551, -1
  %2574 = add i32 %2551, -1
  br label %2575

; <label>:2575:                                   ; preds = %.lr.ph482, %2575
  %lsr.iv1059 = phi i32 [ %.0169, %.lr.ph482 ], [ %lsr.iv.next1060, %2575 ]
  call void @unroll_loop(i32 128)
  %2576 = add i32 %2569, %lsr.iv1059
  %2577 = add i32 %2567, %lsr.iv1059
  %2578 = add i32 %2577, -1
  %2579 = sext i32 %2578 to i64
  %2580 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2559, i64 0, i64 %2579
  %2581 = load i8, i8* %2580, align 1
  %2582 = sext i32 %2576 to i64
  %2583 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2560, i64 0, i64 %2582
  store i8 %2581, i8* %2583, align 1
  %2584 = add i32 %2570, %lsr.iv1059
  %2585 = add i32 %2584, -2
  %2586 = sext i32 %2585 to i64
  %2587 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2561, i64 0, i64 %2586
  %2588 = load i8, i8* %2587, align 1
  %2589 = add i32 %2568, %lsr.iv1059
  %2590 = add i32 %2589, -1
  %2591 = sext i32 %2590 to i64
  %2592 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2562, i64 0, i64 %2591
  store i8 %2588, i8* %2592, align 1
  %2593 = add i32 %2572, %lsr.iv1059
  %2594 = add i32 %2593, -3
  %2595 = sext i32 %2594 to i64
  %2596 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2563, i64 0, i64 %2595
  %2597 = load i8, i8* %2596, align 1
  %2598 = add i32 %2571, %lsr.iv1059
  %2599 = add i32 %2598, -2
  %2600 = sext i32 %2599 to i64
  %2601 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2564, i64 0, i64 %2600
  store i8 %2597, i8* %2601, align 1
  %2602 = add i32 %2574, %lsr.iv1059
  %2603 = add i32 %2602, -4
  %2604 = sext i32 %2603 to i64
  %2605 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2565, i64 0, i64 %2604
  %2606 = load i8, i8* %2605, align 1
  %2607 = add i32 %2573, %lsr.iv1059
  %2608 = add i32 %2607, -3
  %2609 = sext i32 %2608 to i64
  %2610 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2566, i64 0, i64 %2609
  store i8 %2606, i8* %2610, align 1
  %lsr.iv.next1060 = add i32 %lsr.iv1059, -4
  %2611 = add i32 %lsr.iv.next1060, -1
  %2612 = icmp ugt i32 %2611, 3
  br i1 %2612, label %2575, label %._crit_edge483

._crit_edge483:                                   ; preds = %2575
  %2613 = lshr i32 %2558, 2
  %2614 = shl i32 %2613, 2
  %2615 = sub i32 %2558, %2614
  br label %2616

; <label>:2616:                                   ; preds = %._crit_edge483, %2548
  %.01.lcssa = phi i32 [ %2615, %._crit_edge483 ], [ %2546, %2548 ]
  %2617 = icmp ugt i32 %.01.lcssa, 0
  br i1 %2617, label %.lr.ph476, label %._crit_edge477

.lr.ph476:                                        ; preds = %2616
  %2618 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2619 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2620 = add i32 %.01.lcssa, %2551
  %2621 = add i32 %2620, -1
  br label %2622

; <label>:2622:                                   ; preds = %.lr.ph476, %2622
  %lsr.iv1057 = phi i32 [ %.01.lcssa, %.lr.ph476 ], [ %lsr.iv.next1058, %2622 ]
  %lsr.iv1055 = phi i32 [ %2621, %.lr.ph476 ], [ %lsr.iv.next1056, %2622 ]
  call void @unroll_loop(i32 129)
  %2623 = zext i32 %lsr.iv1055 to i64
  %2624 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2618, i64 0, i64 %2623
  %2625 = load i8, i8* %2624, align 1
  %2626 = add i32 %lsr.iv1055, 1
  %2627 = zext i32 %2626 to i64
  %2628 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2619, i64 0, i64 %2627
  store i8 %2625, i8* %2628, align 1
  %lsr.iv.next1056 = add i32 %lsr.iv1055, -1
  %lsr.iv.next1058 = add i32 %lsr.iv1057, -1
  %2629 = icmp ugt i32 %lsr.iv.next1058, 0
  br i1 %2629, label %2622, label %._crit_edge477.loopexit

._crit_edge477.loopexit:                          ; preds = %2622
  br label %._crit_edge477

._crit_edge477:                                   ; preds = %._crit_edge477.loopexit, %2616
  %2630 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2631 = sext i32 %2551 to i64
  %2632 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2630, i64 0, i64 %2631
  store i8 %2556, i8* %2632, align 1
  br label %.loopexit480

; <label>:2633:                                   ; preds = %2545
  %2634 = udiv i32 %2546, 16
  %2635 = urem i32 %2546, 16
  %2636 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2637 = sext i32 %2634 to i64
  %2638 = getelementptr inbounds [16 x i32], [16 x i32]* %2636, i64 0, i64 %2637
  %2639 = load i32, i32* %2638, align 4
  %2640 = add nsw i32 %2639, %2635
  %2641 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2642 = sext i32 %2640 to i64
  %2643 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2641, i64 0, i64 %2642
  %2644 = load i8, i8* %2643, align 1
  %2645 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2646 = sext i32 %2634 to i64
  %2647 = getelementptr inbounds [16 x i32], [16 x i32]* %2645, i64 0, i64 %2646
  %2648 = load i32, i32* %2647, align 4
  %2649 = icmp sgt i32 %2640, %2648
  br i1 %2649, label %.lr.ph503, label %._crit_edge504

.lr.ph503:                                        ; preds = %2633
  %2650 = add i32 %2639, %2635
  %2651 = sext i32 %2650 to i64
  %scevgep1073 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 31, i64 0
  br label %2652

; <label>:2652:                                   ; preds = %.lr.ph503, %2652
  %indvars.iv505 = phi i64 [ %2651, %.lr.ph503 ], [ %indvars.iv.next506, %2652 ]
  call void @unroll_loop(i32 130)
  %indvars.iv.next506 = add nsw i64 %indvars.iv505, -1
  %scevgep1075 = getelementptr i8, i8* %scevgep1073, i64 %indvars.iv505
  %scevgep1076 = getelementptr i8, i8* %scevgep1075, i64 -1
  %2653 = load i8, i8* %scevgep1076, align 1
  %scevgep1074 = getelementptr i8, i8* %scevgep1073, i64 %indvars.iv505
  store i8 %2653, i8* %scevgep1074, align 1
  %2654 = load i32, i32* %2647, align 4
  %2655 = sext i32 %2654 to i64
  %2656 = icmp sgt i64 %indvars.iv.next506, %2655
  br i1 %2656, label %2652, label %._crit_edge504.loopexit

._crit_edge504.loopexit:                          ; preds = %2652
  br label %._crit_edge504

._crit_edge504:                                   ; preds = %._crit_edge504.loopexit, %2633
  %2657 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2658 = sext i32 %2634 to i64
  %2659 = getelementptr inbounds [16 x i32], [16 x i32]* %2657, i64 0, i64 %2658
  %2660 = load i32, i32* %2659, align 4
  %2661 = add nsw i32 %2660, 1
  store i32 %2661, i32* %2659, align 4
  %2662 = icmp sgt i32 %2634, 0
  br i1 %2662, label %.lr.ph497.preheader, label %._crit_edge498

.lr.ph497.preheader:                              ; preds = %._crit_edge504
  %2663 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2664 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %scevgep1068 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 32, i64 0
  br label %.lr.ph497

.lr.ph497:                                        ; preds = %.lr.ph497.preheader, %.lr.ph497
  %indvars.iv499 = phi i64 [ %indvars.iv.next500, %.lr.ph497 ], [ %2637, %.lr.ph497.preheader ]
  call void @unroll_loop(i32 131)
  %scevgep1069 = getelementptr i32, i32* %scevgep1068, i64 %indvars.iv499
  %2665 = load i32, i32* %scevgep1069, align 4
  %2666 = add nsw i32 %2665, -1
  store i32 %2666, i32* %scevgep1069, align 4
  %indvars.iv.next500 = add nsw i64 %indvars.iv499, -1
  %scevgep1071 = getelementptr i32, i32* %scevgep1068, i64 %indvars.iv499
  %scevgep1072 = getelementptr i32, i32* %scevgep1071, i64 -1
  %2667 = load i32, i32* %scevgep1072, align 4
  %2668 = add nsw i32 %2667, 16
  %2669 = sub nsw i32 %2668, 1
  %2670 = sext i32 %2669 to i64
  %2671 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2663, i64 0, i64 %2670
  %2672 = load i8, i8* %2671, align 1
  %scevgep1070 = getelementptr i32, i32* %scevgep1068, i64 %indvars.iv499
  %2673 = load i32, i32* %scevgep1070, align 4
  %2674 = sext i32 %2673 to i64
  %2675 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2664, i64 0, i64 %2674
  store i8 %2672, i8* %2675, align 1
  %2676 = icmp sgt i64 %indvars.iv.next500, 0
  br i1 %2676, label %.lr.ph497, label %._crit_edge498.loopexit

._crit_edge498.loopexit:                          ; preds = %.lr.ph497
  br label %._crit_edge498

._crit_edge498:                                   ; preds = %._crit_edge498.loopexit, %._crit_edge504
  %2677 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2678 = getelementptr inbounds [16 x i32], [16 x i32]* %2677, i64 0, i64 0
  %2679 = load i32, i32* %2678, align 4
  %2680 = add nsw i32 %2679, -1
  store i32 %2680, i32* %2678, align 4
  %2681 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2682 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2683 = getelementptr inbounds [16 x i32], [16 x i32]* %2682, i64 0, i64 0
  %2684 = load i32, i32* %2683, align 4
  %2685 = sext i32 %2684 to i64
  %2686 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2681, i64 0, i64 %2685
  store i8 %2644, i8* %2686, align 1
  %2687 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2688 = getelementptr inbounds [16 x i32], [16 x i32]* %2687, i64 0, i64 0
  %2689 = load i32, i32* %2688, align 4
  %2690 = icmp eq i32 %2689, 0
  br i1 %2690, label %.preheader479.preheader, label %.loopexit480

.preheader479.preheader:                          ; preds = %._crit_edge498
  %2691 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 31
  %2692 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %2693 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 32
  %scevgep1061 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 31, i64 4095
  %scevgep10611062 = bitcast i8* %scevgep1061 to %struct.DState*
  br label %.preheader479

.preheader479:                                    ; preds = %.preheader479.preheader, %2704
  %lsr.iv1063 = phi %struct.DState* [ %scevgep10611062, %.preheader479.preheader ], [ %2709, %2704 ]
  %indvars.iv493 = phi i64 [ %indvars.iv.next494, %2704 ], [ 15, %.preheader479.preheader ]
  %indvars.iv491 = phi i64 [ %indvars.iv.next492, %2704 ], [ 4095, %.preheader479.preheader ]
  %lsr.iv10631064 = bitcast %struct.DState* %lsr.iv1063 to i8*
  call void @unroll_loop(i32 132)
  %2694 = getelementptr inbounds [16 x i32], [16 x i32]* %2692, i64 0, i64 %indvars.iv493
  br label %2695

; <label>:2695:                                   ; preds = %.preheader479, %2695
  %lsr.iv1065 = phi %struct.DState* [ %lsr.iv1063, %.preheader479 ], [ %2702, %2695 ]
  %.0359485 = phi i32 [ 15, %.preheader479 ], [ %2701, %2695 ]
  %lsr.iv10651066 = bitcast %struct.DState* %lsr.iv1065 to i8*
  call void @unroll_loop(i32 133)
  %2696 = load i32, i32* %2694, align 4
  %2697 = add i32 %.0359485, %2696
  %2698 = sext i32 %2697 to i64
  %2699 = getelementptr inbounds [4096 x i8], [4096 x i8]* %2691, i64 0, i64 %2698
  %2700 = load i8, i8* %2699, align 1
  store i8 %2700, i8* %lsr.iv10651066, align 1
  %2701 = add nsw i32 %.0359485, -1
  %uglygep1067 = getelementptr i8, i8* %lsr.iv10651066, i64 -1
  %2702 = bitcast i8* %uglygep1067 to %struct.DState*
  %2703 = icmp sge i32 %2701, 0
  br i1 %2703, label %2695, label %2704

; <label>:2704:                                   ; preds = %2695
  %2705 = add nsw i64 %indvars.iv491, -16
  %2706 = trunc i64 %2705 to i32
  %2707 = add nsw i32 %2706, 1
  %2708 = getelementptr inbounds [16 x i32], [16 x i32]* %2693, i64 0, i64 %indvars.iv493
  store i32 %2707, i32* %2708, align 4
  %indvars.iv.next494 = add nsw i64 %indvars.iv493, -1
  %indvars.iv.next492 = add nsw i64 %indvars.iv491, -16
  %uglygep = getelementptr i8, i8* %lsr.iv10631064, i64 -16
  %2709 = bitcast i8* %uglygep to %struct.DState*
  %2710 = icmp sge i64 %indvars.iv.next494, 0
  br i1 %2710, label %.preheader479, label %.loopexit480.loopexit

.loopexit480.loopexit:                            ; preds = %2704
  %.02.ph = phi i8 [ %2644, %2704 ]
  br label %.loopexit480

.loopexit480:                                     ; preds = %.loopexit480.loopexit, %._crit_edge498, %._crit_edge477
  %.02 = phi i8 [ %2556, %._crit_edge477 ], [ %2644, %._crit_edge498 ], [ %.02.ph, %.loopexit480.loopexit ]
  %2711 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 16
  %2712 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %2713 = zext i8 %.02 to i64
  %2714 = getelementptr inbounds [256 x i8], [256 x i8]* %2712, i64 0, i64 %2713
  %2715 = load i8, i8* %2714, align 1
  %2716 = zext i8 %2715 to i64
  %2717 = getelementptr inbounds [256 x i32], [256 x i32]* %2711, i64 0, i64 %2716
  %2718 = load i32, i32* %2717, align 4
  %2719 = add nsw i32 %2718, 1
  store i32 %2719, i32* %2717, align 4
  %2720 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 10
  %2721 = load i8, i8* %2720, align 4
  %2722 = icmp ne i8 %2721, 0
  %2723 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %2724 = zext i8 %.02 to i64
  %2725 = getelementptr inbounds [256 x i8], [256 x i8]* %2723, i64 0, i64 %2724
  %2726 = load i8, i8* %2725, align 1
  br i1 %2722, label %2727, label %2733

; <label>:2727:                                   ; preds = %.loopexit480
  %2728 = zext i8 %2726 to i16
  %2729 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %2730 = load i16*, i16** %2729, align 8
  %2731 = sext i32 %.3193 to i64
  %2732 = getelementptr inbounds i16, i16* %2730, i64 %2731
  store i16 %2728, i16* %2732, align 2
  br label %2739

; <label>:2733:                                   ; preds = %.loopexit480
  %2734 = zext i8 %2726 to i32
  %2735 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %2736 = load i32*, i32** %2735, align 8
  %2737 = sext i32 %.3193 to i64
  %2738 = getelementptr inbounds i32, i32* %2736, i64 %2737
  store i32 %2734, i32* %2738, align 4
  br label %2739

; <label>:2739:                                   ; preds = %2733, %2727
  %2740 = add nsw i32 %.3193, 1
  %2741 = icmp eq i32 %.4158, 0
  br i1 %2741, label %2742, label %2767

; <label>:2742:                                   ; preds = %2739
  %2743 = add nsw i32 %.4143, 1
  %2744 = icmp sge i32 %2743, %.12118
  br i1 %2744, label %.loopexit, label %2745

; <label>:2745:                                   ; preds = %2742
  %2746 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 33
  %2747 = sext i32 %2743 to i64
  %2748 = getelementptr inbounds [18002 x i8], [18002 x i8]* %2746, i64 0, i64 %2747
  %2749 = load i8, i8* %2748, align 1
  %2750 = zext i8 %2749 to i32
  %2751 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 39
  %2752 = sext i32 %2750 to i64
  %2753 = getelementptr inbounds [6 x i32], [6 x i32]* %2751, i64 0, i64 %2752
  %2754 = load i32, i32* %2753, align 4
  %2755 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 36
  %2756 = sext i32 %2750 to i64
  %2757 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2755, i64 0, i64 %2756
  %2758 = getelementptr inbounds [258 x i32], [258 x i32]* %2757, i64 0, i64 0
  %2759 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 38
  %2760 = sext i32 %2750 to i64
  %2761 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2759, i64 0, i64 %2760
  %2762 = getelementptr inbounds [258 x i32], [258 x i32]* %2761, i64 0, i64 0
  %2763 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 37
  %2764 = sext i32 %2750 to i64
  %2765 = getelementptr inbounds [6 x [258 x i32]], [6 x [258 x i32]]* %2763, i64 0, i64 %2764
  %2766 = getelementptr inbounds [258 x i32], [258 x i32]* %2765, i64 0, i64 0
  br label %2767

; <label>:2767:                                   ; preds = %2745, %2739
  %.10352 = phi i32* [ %2762, %2745 ], [ %.4346, %2739 ]
  %.10337 = phi i32* [ %2766, %2745 ], [ %.4331, %2739 ]
  %.10322 = phi i32* [ %2758, %2745 ], [ %.4316, %2739 ]
  %.10307 = phi i32 [ %2754, %2745 ], [ %.4301, %2739 ]
  %.10292 = phi i32 [ %2750, %2745 ], [ %.4286, %2739 ]
  %.10164 = phi i32 [ 50, %2745 ], [ %.4158, %2739 ]
  %.10149 = phi i32 [ %2743, %2745 ], [ %.4143, %2739 ]
  %2768 = add nsw i32 %.10164, -1
  br label %2769

; <label>:2769:                                   ; preds = %33, %2767
  %.11353 = phi i32* [ %.10352, %2767 ], [ %81, %33 ]
  %.11338 = phi i32* [ %.10337, %2767 ], [ %79, %33 ]
  %.11323 = phi i32* [ %.10322, %2767 ], [ %77, %33 ]
  %.11308 = phi i32 [ %.10307, %2767 ], [ %75, %33 ]
  %.11293 = phi i32 [ %.10292, %2767 ], [ %73, %33 ]
  %.7278 = phi i32 [ %.2273, %2767 ], [ %71, %33 ]
  %.7267 = phi i32 [ %.2262, %2767 ], [ %69, %33 ]
  %.8256 = phi i32 [ %.10307, %2767 ], [ %67, %33 ]
  %.15243 = phi i32 [ %.10238, %2767 ], [ %63, %33 ]
  %.5224 = phi i32 [ %.0219, %2767 ], [ %61, %33 ]
  %.10215 = phi i32 [ %.0205, %2767 ], [ %59, %33 ]
  %.11201 = phi i32 [ %2740, %2767 ], [ %57, %33 ]
  %.8186 = phi i32 [ %.3181, %2767 ], [ %55, %33 ]
  %.5174 = phi i32 [ %.0169, %2767 ], [ %53, %33 ]
  %.11165 = phi i32 [ %2768, %2767 ], [ %51, %33 ]
  %.11150 = phi i32 [ %.10149, %2767 ], [ %49, %33 ]
  %.8135 = phi i32 [ %.3130, %2767 ], [ %47, %33 ]
  %.17123 = phi i32 [ %.12118, %2767 ], [ %45, %33 ]
  %.18102 = phi i32 [ %.1397, %2767 ], [ %43, %33 ]
  %.1980 = phi i32 [ %.1475, %2767 ], [ %41, %33 ]
  %.1557 = phi i32 [ %.1052, %2767 ], [ %39, %33 ]
  %.2336 = phi i32 [ %.1831, %2767 ], [ %37, %33 ]
  %.29 = phi i32 [ %.24, %2767 ], [ %35, %33 ]
  %2770 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 40, i32* %2770, align 8
  %2771 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2772 = load i32, i32* %2771, align 4
  %2773 = icmp sge i32 %2772, %.8256
  br i1 %2773, label %._crit_edge473, label %.lr.ph472.preheader

.lr.ph472.preheader:                              ; preds = %2769
  %2774 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2775 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2776 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2777 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2778 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2779 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2780 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2781 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2782 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2783 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph472

._crit_edge473.loopexit:                          ; preds = %2832
  br label %._crit_edge473

._crit_edge473:                                   ; preds = %._crit_edge473.loopexit, %2769
  %2784 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2785 = load i32, i32* %2784, align 8
  %2786 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2787 = load i32, i32* %2786, align 4
  %2788 = sub nsw i32 %2787, %.8256
  %2789 = lshr i32 %2785, %2788
  %2790 = shl i32 1, %.8256
  %2791 = sub nsw i32 %2790, 1
  %2792 = and i32 %2789, %2791
  %2793 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2794 = load i32, i32* %2793, align 4
  %2795 = sub nsw i32 %2794, %.8256
  store i32 %2795, i32* %2793, align 4
  br label %2835

.lr.ph472:                                        ; preds = %.lr.ph472.preheader, %2832
  call void @unroll_loop(i32 134)
  %2796 = load %struct.bz_stream*, %struct.bz_stream** %2774, align 8
  %2797 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2796, i32 0, i32 1
  %2798 = load i32, i32* %2797, align 8
  %2799 = icmp eq i32 %2798, 0
  br i1 %2799, label %.loopexit.loopexit451, label %2800

; <label>:2800:                                   ; preds = %.lr.ph472
  %2801 = load i32, i32* %2775, align 8
  %2802 = shl i32 %2801, 8
  %2803 = load %struct.bz_stream*, %struct.bz_stream** %2776, align 8
  %2804 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2803, i32 0, i32 0
  %2805 = load i8*, i8** %2804, align 8
  %2806 = load i8, i8* %2805, align 1
  %2807 = zext i8 %2806 to i32
  %2808 = or i32 %2802, %2807
  store i32 %2808, i32* %2777, align 8
  %2809 = load i32, i32* %2778, align 4
  %2810 = add nsw i32 %2809, 8
  store i32 %2810, i32* %2778, align 4
  %2811 = load %struct.bz_stream*, %struct.bz_stream** %2779, align 8
  %2812 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2811, i32 0, i32 0
  %2813 = load i8*, i8** %2812, align 8
  %2814 = getelementptr inbounds i8, i8* %2813, i32 1
  store i8* %2814, i8** %2812, align 8
  %2815 = load %struct.bz_stream*, %struct.bz_stream** %2780, align 8
  %2816 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2815, i32 0, i32 1
  %2817 = load i32, i32* %2816, align 8
  %2818 = add i32 %2817, -1
  store i32 %2818, i32* %2816, align 8
  %2819 = load %struct.bz_stream*, %struct.bz_stream** %2781, align 8
  %2820 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2819, i32 0, i32 2
  %2821 = load i32, i32* %2820, align 4
  %2822 = add i32 %2821, 1
  store i32 %2822, i32* %2820, align 4
  %2823 = load %struct.bz_stream*, %struct.bz_stream** %2782, align 8
  %2824 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2823, i32 0, i32 2
  %2825 = load i32, i32* %2824, align 4
  %2826 = icmp eq i32 %2825, 0
  br i1 %2826, label %2827, label %2832

; <label>:2827:                                   ; preds = %2800
  %2828 = load %struct.bz_stream*, %struct.bz_stream** %2783, align 8
  %2829 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2828, i32 0, i32 3
  %2830 = load i32, i32* %2829, align 8
  %2831 = add i32 %2830, 1
  store i32 %2831, i32* %2829, align 8
  br label %2832

; <label>:2832:                                   ; preds = %2827, %2800
  %2833 = load i32, i32* %2771, align 4
  %2834 = icmp sge i32 %2833, %.8256
  br i1 %2834, label %._crit_edge473.loopexit, label %.lr.ph472

; <label>:2835:                                   ; preds = %._crit_edge473, %._crit_edge470
  %.12354 = phi i32* [ %.13355, %._crit_edge470 ], [ %.11353, %._crit_edge473 ]
  %.12339 = phi i32* [ %.13340, %._crit_edge470 ], [ %.11338, %._crit_edge473 ]
  %.12324 = phi i32* [ %.13325, %._crit_edge470 ], [ %.11323, %._crit_edge473 ]
  %.12309 = phi i32 [ %.13310, %._crit_edge470 ], [ %.11308, %._crit_edge473 ]
  %.12294 = phi i32 [ %.13295, %._crit_edge470 ], [ %.11293, %._crit_edge473 ]
  %.8279 = phi i32 [ %2865, %._crit_edge470 ], [ %.7278, %._crit_edge473 ]
  %.8268 = phi i32 [ %2870, %._crit_edge470 ], [ %2792, %._crit_edge473 ]
  %.9257 = phi i32 [ %.10258, %._crit_edge470 ], [ %.8256, %._crit_edge473 ]
  %.16244 = phi i32 [ %.17245, %._crit_edge470 ], [ %.15243, %._crit_edge473 ]
  %.6225 = phi i32 [ %.7226, %._crit_edge470 ], [ %.5224, %._crit_edge473 ]
  %.11216 = phi i32 [ %.12217, %._crit_edge470 ], [ %.10215, %._crit_edge473 ]
  %.12202 = phi i32 [ %.13203, %._crit_edge470 ], [ %.11201, %._crit_edge473 ]
  %.9187 = phi i32 [ %.10188, %._crit_edge470 ], [ %.8186, %._crit_edge473 ]
  %.6175 = phi i32 [ %.7176, %._crit_edge470 ], [ %.5174, %._crit_edge473 ]
  %.12166 = phi i32 [ %.13167, %._crit_edge470 ], [ %.11165, %._crit_edge473 ]
  %.12151 = phi i32 [ %.13152, %._crit_edge470 ], [ %.11150, %._crit_edge473 ]
  %.9136 = phi i32 [ %.10137, %._crit_edge470 ], [ %.8135, %._crit_edge473 ]
  %.18124 = phi i32 [ %.19125, %._crit_edge470 ], [ %.17123, %._crit_edge473 ]
  %.19103 = phi i32 [ %.20104, %._crit_edge470 ], [ %.18102, %._crit_edge473 ]
  %.2081 = phi i32 [ %.2182, %._crit_edge470 ], [ %.1980, %._crit_edge473 ]
  %.1658 = phi i32 [ %.1759, %._crit_edge470 ], [ %.1557, %._crit_edge473 ]
  %.2437 = phi i32 [ %.2538, %._crit_edge470 ], [ %.2336, %._crit_edge473 ]
  %.30 = phi i32 [ %.31, %._crit_edge470 ], [ %.29, %._crit_edge473 ]
  %2836 = icmp sgt i32 %.9257, 20
  br i1 %2836, label %.loopexit, label %2837

; <label>:2837:                                   ; preds = %2835
  %2838 = sext i32 %.9257 to i64
  %2839 = getelementptr inbounds i32, i32* %.12324, i64 %2838
  %2840 = load i32, i32* %2839, align 4
  %2841 = icmp sle i32 %.8268, %2840
  br i1 %2841, label %2910, label %2842

; <label>:2842:                                   ; preds = %2837
  %2843 = add nsw i32 %.9257, 1
  br label %2844

; <label>:2844:                                   ; preds = %33, %2842
  %.13355 = phi i32* [ %81, %33 ], [ %.12354, %2842 ]
  %.13340 = phi i32* [ %79, %33 ], [ %.12339, %2842 ]
  %.13325 = phi i32* [ %77, %33 ], [ %.12324, %2842 ]
  %.13310 = phi i32 [ %75, %33 ], [ %.12309, %2842 ]
  %.13295 = phi i32 [ %73, %33 ], [ %.12294, %2842 ]
  %.9280 = phi i32 [ %71, %33 ], [ %.8279, %2842 ]
  %.9269 = phi i32 [ %69, %33 ], [ %.8268, %2842 ]
  %.10258 = phi i32 [ %67, %33 ], [ %2843, %2842 ]
  %.17245 = phi i32 [ %63, %33 ], [ %.16244, %2842 ]
  %.7226 = phi i32 [ %61, %33 ], [ %.6225, %2842 ]
  %.12217 = phi i32 [ %59, %33 ], [ %.11216, %2842 ]
  %.13203 = phi i32 [ %57, %33 ], [ %.12202, %2842 ]
  %.10188 = phi i32 [ %55, %33 ], [ %.9187, %2842 ]
  %.7176 = phi i32 [ %53, %33 ], [ %.6175, %2842 ]
  %.13167 = phi i32 [ %51, %33 ], [ %.12166, %2842 ]
  %.13152 = phi i32 [ %49, %33 ], [ %.12151, %2842 ]
  %.10137 = phi i32 [ %47, %33 ], [ %.9136, %2842 ]
  %.19125 = phi i32 [ %45, %33 ], [ %.18124, %2842 ]
  %.20104 = phi i32 [ %43, %33 ], [ %.19103, %2842 ]
  %.2182 = phi i32 [ %41, %33 ], [ %.2081, %2842 ]
  %.1759 = phi i32 [ %39, %33 ], [ %.1658, %2842 ]
  %.2538 = phi i32 [ %37, %33 ], [ %.2437, %2842 ]
  %.31 = phi i32 [ %35, %33 ], [ %.30, %2842 ]
  %2845 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 41, i32* %2845, align 8
  %2846 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2847 = load i32, i32* %2846, align 4
  %2848 = icmp sge i32 %2847, 1
  br i1 %2848, label %._crit_edge470, label %.lr.ph469.preheader

.lr.ph469.preheader:                              ; preds = %2844
  %2849 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2850 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2851 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2852 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2853 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2854 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2855 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2856 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2857 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %2858 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph469

._crit_edge470.loopexit:                          ; preds = %2907
  br label %._crit_edge470

._crit_edge470:                                   ; preds = %._crit_edge470.loopexit, %2844
  %2859 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %2860 = load i32, i32* %2859, align 8
  %2861 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2862 = load i32, i32* %2861, align 4
  %2863 = sub nsw i32 %2862, 1
  %2864 = lshr i32 %2860, %2863
  %2865 = and i32 %2864, 1
  %2866 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %2867 = load i32, i32* %2866, align 4
  %2868 = sub nsw i32 %2867, 1
  store i32 %2868, i32* %2866, align 4
  %2869 = shl i32 %.9269, 1
  %2870 = or i32 %2869, %2865
  br label %2835

.lr.ph469:                                        ; preds = %.lr.ph469.preheader, %2907
  call void @unroll_loop(i32 135)
  %2871 = load %struct.bz_stream*, %struct.bz_stream** %2849, align 8
  %2872 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2871, i32 0, i32 1
  %2873 = load i32, i32* %2872, align 8
  %2874 = icmp eq i32 %2873, 0
  br i1 %2874, label %.loopexit.loopexit426, label %2875

; <label>:2875:                                   ; preds = %.lr.ph469
  %2876 = load i32, i32* %2850, align 8
  %2877 = shl i32 %2876, 8
  %2878 = load %struct.bz_stream*, %struct.bz_stream** %2851, align 8
  %2879 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2878, i32 0, i32 0
  %2880 = load i8*, i8** %2879, align 8
  %2881 = load i8, i8* %2880, align 1
  %2882 = zext i8 %2881 to i32
  %2883 = or i32 %2877, %2882
  store i32 %2883, i32* %2852, align 8
  %2884 = load i32, i32* %2853, align 4
  %2885 = add nsw i32 %2884, 8
  store i32 %2885, i32* %2853, align 4
  %2886 = load %struct.bz_stream*, %struct.bz_stream** %2854, align 8
  %2887 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2886, i32 0, i32 0
  %2888 = load i8*, i8** %2887, align 8
  %2889 = getelementptr inbounds i8, i8* %2888, i32 1
  store i8* %2889, i8** %2887, align 8
  %2890 = load %struct.bz_stream*, %struct.bz_stream** %2855, align 8
  %2891 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2890, i32 0, i32 1
  %2892 = load i32, i32* %2891, align 8
  %2893 = add i32 %2892, -1
  store i32 %2893, i32* %2891, align 8
  %2894 = load %struct.bz_stream*, %struct.bz_stream** %2856, align 8
  %2895 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2894, i32 0, i32 2
  %2896 = load i32, i32* %2895, align 4
  %2897 = add i32 %2896, 1
  store i32 %2897, i32* %2895, align 4
  %2898 = load %struct.bz_stream*, %struct.bz_stream** %2857, align 8
  %2899 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2898, i32 0, i32 2
  %2900 = load i32, i32* %2899, align 4
  %2901 = icmp eq i32 %2900, 0
  br i1 %2901, label %2902, label %2907

; <label>:2902:                                   ; preds = %2875
  %2903 = load %struct.bz_stream*, %struct.bz_stream** %2858, align 8
  %2904 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %2903, i32 0, i32 3
  %2905 = load i32, i32* %2904, align 8
  %2906 = add i32 %2905, 1
  store i32 %2906, i32* %2904, align 8
  br label %2907

; <label>:2907:                                   ; preds = %2902, %2875
  %2908 = load i32, i32* %2846, align 4
  %2909 = icmp sge i32 %2908, 1
  br i1 %2909, label %._crit_edge470.loopexit, label %.lr.ph469

; <label>:2910:                                   ; preds = %2837
  %2911 = sext i32 %.9257 to i64
  %2912 = getelementptr inbounds i32, i32* %.12339, i64 %2911
  %2913 = load i32, i32* %2912, align 4
  %2914 = sub nsw i32 %.8268, %2913
  %2915 = icmp slt i32 %2914, 0
  br i1 %2915, label %.loopexit, label %2916

; <label>:2916:                                   ; preds = %2910
  %2917 = sext i32 %.9257 to i64
  %2918 = getelementptr inbounds i32, i32* %.12339, i64 %2917
  %2919 = load i32, i32* %2918, align 4
  %2920 = sub nsw i32 %.8268, %2919
  %2921 = icmp sge i32 %2920, 258
  br i1 %2921, label %.loopexit, label %2922

; <label>:2922:                                   ; preds = %2916
  %2923 = sext i32 %.9257 to i64
  %2924 = getelementptr inbounds i32, i32* %.12339, i64 %2923
  %2925 = load i32, i32* %2924, align 4
  %2926 = sub nsw i32 %.8268, %2925
  %2927 = sext i32 %2926 to i64
  %2928 = getelementptr inbounds i32, i32* %.12354, i64 %2927
  %2929 = load i32, i32* %2928, align 4
  br label %2288

; <label>:2930:                                   ; preds = %2288
  %2931 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %2932 = load i32, i32* %2931, align 8
  %2933 = icmp slt i32 %2932, 0
  br i1 %2933, label %.loopexit, label %2934

; <label>:2934:                                   ; preds = %2930
  %2935 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %2936 = load i32, i32* %2935, align 8
  %2937 = icmp sge i32 %2936, %.3193
  br i1 %2937, label %.loopexit, label %2938

; <label>:2938:                                   ; preds = %2934
  %2939 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %2940 = getelementptr inbounds [257 x i32], [257 x i32]* %2939, i64 0, i64 0
  store i32 0, i32* %2940, align 8
  %scevgep1046 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 18, i64 1
  br label %2941

; <label>:2941:                                   ; preds = %2938, %2941
  %lsr.iv1047 = phi i64 [ -256, %2938 ], [ %lsr.iv.next1048, %2941 ]
  call void @unroll_loop(i32 136)
  %scevgep1049 = getelementptr i32, i32* %scevgep1046, i64 %lsr.iv1047
  %scevgep1050 = getelementptr i32, i32* %scevgep1049, i64 -2
  %2942 = load i32, i32* %scevgep1050, align 4
  %scevgep1051 = getelementptr i32, i32* %scevgep1046, i64 %lsr.iv1047
  %scevgep1052 = getelementptr i32, i32* %scevgep1051, i64 256
  store i32 %2942, i32* %scevgep1052, align 4
  %lsr.iv.next1048 = add nsw i64 %lsr.iv1047, 1
  %exitcond440 = icmp ne i64 %lsr.iv.next1048, 0
  br i1 %exitcond440, label %2941, label %.preheader378.preheader

.preheader378.preheader:                          ; preds = %2941
  %scevgep1040 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 18, i64 1
  br label %.preheader378

.preheader378:                                    ; preds = %.preheader378.preheader, %.preheader378
  %lsr.iv1041 = phi i64 [ 0, %.preheader378.preheader ], [ %lsr.iv.next1042, %.preheader378 ]
  call void @unroll_loop(i32 137)
  %scevgep1043 = getelementptr i32, i32* %scevgep1040, i64 %lsr.iv1041
  %scevgep1044 = getelementptr i32, i32* %scevgep1043, i64 -1
  %2943 = load i32, i32* %scevgep1044, align 4
  %scevgep1045 = getelementptr i32, i32* %scevgep1040, i64 %lsr.iv1041
  %2944 = load i32, i32* %scevgep1045, align 4
  %2945 = add nsw i32 %2944, %2943
  store i32 %2945, i32* %scevgep1045, align 4
  %lsr.iv.next1042 = add nuw nsw i64 %lsr.iv1041, 1
  %exitcond436 = icmp ne i64 %lsr.iv.next1042, 256
  br i1 %exitcond436, label %.preheader378, label %.preheader352.preheader

.preheader352.preheader:                          ; preds = %.preheader378
  %indvars.iv431.ph = phi i64 [ 0, %.preheader378 ]
  %scevgep1037 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 18, i64 0
  br label %.preheader352

.preheader352:                                    ; preds = %.preheader352.preheader, %2951
  %indvars.iv431 = phi i64 [ %indvars.iv.next432, %2951 ], [ %indvars.iv431.ph, %.preheader352.preheader ]
  call void @unroll_loop(i32 138)
  %scevgep1038 = getelementptr i32, i32* %scevgep1037, i64 %indvars.iv431
  %2946 = load i32, i32* %scevgep1038, align 4
  %2947 = icmp slt i32 %2946, 0
  br i1 %2947, label %.loopexit.loopexit351split, label %2948

; <label>:2948:                                   ; preds = %.preheader352
  %scevgep1039 = getelementptr i32, i32* %scevgep1037, i64 %indvars.iv431
  %2949 = load i32, i32* %scevgep1039, align 4
  %2950 = icmp sgt i32 %2949, %.3193
  br i1 %2950, label %..loopexit.loopexit351_crit_edge, label %2951

; <label>:2951:                                   ; preds = %2948
  %indvars.iv.next432 = add nuw nsw i64 %indvars.iv431, 1
  %2952 = icmp ule i64 %indvars.iv.next432, 256
  br i1 %2952, label %.preheader352, label %2953

; <label>:2953:                                   ; preds = %2951
  %2954 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 3
  store i32 0, i32* %2954, align 8
  %2955 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 2
  store i8 0, i8* %2955, align 4
  %2956 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 25
  store i32 -1, i32* %2956, align 8
  %2957 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 2, i32* %2957, align 8
  %2958 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 12
  %2959 = load i32, i32* %2958, align 4
  %2960 = icmp sge i32 %2959, 2
  br i1 %2960, label %2961, label %2965

; <label>:2961:                                   ; preds = %2953
  %2962 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2963 = getelementptr [7 x i8], [7 x i8]* @.str.1.161, i32 0, i32 0
  %2964 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2962, i8* %2963)
  br label %2965

; <label>:2965:                                   ; preds = %2961, %2953
  %2966 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 10
  %2967 = load i8, i8* %2966, align 4
  %2968 = icmp ne i8 %2967, 0
  br i1 %2968, label %.preheader.preheader, label %3236

.preheader.preheader:                             ; preds = %2965
  %scevgep1030 = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 19, i64 0
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %lsr.iv = phi i64 [ -257, %.preheader.preheader ], [ %lsr.iv.next, %.preheader ]
  call void @unroll_loop(i32 139)
  %scevgep1031 = getelementptr i32, i32* %scevgep1030, i64 %lsr.iv
  %2969 = load i32, i32* %scevgep1031, align 4
  %scevgep1032 = getelementptr i32, i32* %scevgep1030, i64 %lsr.iv
  %scevgep1033 = getelementptr i32, i32* %scevgep1032, i64 257
  store i32 %2969, i32* %scevgep1033, align 4
  %lsr.iv.next = add nsw i64 %lsr.iv, 1
  %exitcond421 = icmp ne i64 %lsr.iv.next, 0
  br i1 %exitcond421, label %.preheader, label %2970

; <label>:2970:                                   ; preds = %.preheader
  %2971 = icmp slt i32 0, %.3193
  br i1 %2971, label %.lr.ph416.preheader, label %._crit_edge417

.lr.ph416.preheader:                              ; preds = %2970
  %2972 = zext i32 %.3193 to i64
  %2973 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %2974 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %2975 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %2976 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %2977 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %2978 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %2979 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %2980 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 19
  %2981 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  br label %.lr.ph416

.lr.ph416:                                        ; preds = %.lr.ph416.preheader, %3024
  %indvars.iv = phi i64 [ %indvars.iv.next, %3024 ], [ 0, %.lr.ph416.preheader ]
  call void @unroll_loop(i32 140)
  %2982 = load i16*, i16** %2973, align 8
  %scevgep = getelementptr i16, i16* %2982, i64 %indvars.iv
  %2983 = load i16, i16* %scevgep, align 2
  %2984 = trunc i16 %2983 to i8
  %2985 = zext i8 %2984 to i64
  %2986 = getelementptr inbounds [257 x i32], [257 x i32]* %2974, i64 0, i64 %2985
  %2987 = load i32, i32* %2986, align 4
  %2988 = and i32 %2987, 65535
  %2989 = trunc i32 %2988 to i16
  %2990 = load i16*, i16** %2975, align 8
  %scevgep1026 = getelementptr i16, i16* %2990, i64 %indvars.iv
  store i16 %2989, i16* %scevgep1026, align 2
  %tmp = trunc i64 %indvars.iv to i32
  %2991 = and i32 %tmp, 1
  %2992 = icmp eq i32 %2991, 0
  %2993 = load i8*, i8** %2976, align 8
  %tmp1027 = trunc i64 %indvars.iv to i32
  %2994 = ashr i32 %tmp1027, 1
  %2995 = sext i32 %2994 to i64
  %2996 = getelementptr inbounds i8, i8* %2993, i64 %2995
  %2997 = load i8, i8* %2996, align 1
  %2998 = zext i8 %2997 to i32
  br i1 %2992, label %2999, label %3011

; <label>:2999:                                   ; preds = %.lr.ph416
  %3000 = and i32 %2998, 240
  %3001 = zext i8 %2984 to i64
  %3002 = getelementptr inbounds [257 x i32], [257 x i32]* %2977, i64 0, i64 %3001
  %3003 = load i32, i32* %3002, align 4
  %3004 = ashr i32 %3003, 16
  %3005 = or i32 %3000, %3004
  %3006 = trunc i32 %3005 to i8
  %3007 = load i8*, i8** %2978, align 8
  %tmp1028 = trunc i64 %indvars.iv to i32
  %3008 = ashr i32 %tmp1028, 1
  %3009 = sext i32 %3008 to i64
  %3010 = getelementptr inbounds i8, i8* %3007, i64 %3009
  store i8 %3006, i8* %3010, align 1
  br label %3024

; <label>:3011:                                   ; preds = %.lr.ph416
  %3012 = and i32 %2998, 15
  %3013 = zext i8 %2984 to i64
  %3014 = getelementptr inbounds [257 x i32], [257 x i32]* %2980, i64 0, i64 %3013
  %3015 = load i32, i32* %3014, align 4
  %3016 = ashr i32 %3015, 16
  %3017 = shl i32 %3016, 4
  %3018 = or i32 %3012, %3017
  %3019 = trunc i32 %3018 to i8
  %3020 = load i8*, i8** %2981, align 8
  %tmp1029 = trunc i64 %indvars.iv to i32
  %3021 = ashr i32 %tmp1029, 1
  %3022 = sext i32 %3021 to i64
  %3023 = getelementptr inbounds i8, i8* %3020, i64 %3022
  store i8 %3019, i8* %3023, align 1
  br label %3024

; <label>:3024:                                   ; preds = %3011, %2999
  %3025 = zext i8 %2984 to i64
  %3026 = getelementptr inbounds [257 x i32], [257 x i32]* %2979, i64 0, i64 %3025
  %3027 = load i32, i32* %3026, align 4
  %3028 = add nsw i32 %3027, 1
  store i32 %3028, i32* %3026, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond1033 = icmp ne i64 %2972, %indvars.iv.next
  br i1 %exitcond1033, label %.lr.ph416, label %._crit_edge417.loopexit

._crit_edge417.loopexit:                          ; preds = %3024
  br label %._crit_edge417

._crit_edge417:                                   ; preds = %._crit_edge417.loopexit, %2970
  %3029 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3030 = load i32, i32* %3029, align 8
  %3031 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3032 = load i16*, i16** %3031, align 8
  %3033 = sext i32 %3030 to i64
  %3034 = getelementptr inbounds i16, i16* %3032, i64 %3033
  %3035 = load i16, i16* %3034, align 2
  %3036 = zext i16 %3035 to i32
  %3037 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3038 = load i8*, i8** %3037, align 8
  %3039 = ashr i32 %3030, 1
  %3040 = sext i32 %3039 to i64
  %3041 = getelementptr inbounds i8, i8* %3038, i64 %3040
  %3042 = load i8, i8* %3041, align 1
  %3043 = zext i8 %3042 to i32
  %3044 = shl i32 %3030, 2
  %3045 = and i32 %3044, 4
  %3046 = lshr i32 %3043, %3045
  %3047 = and i32 %3046, 15
  %3048 = shl i32 %3047, 16
  %3049 = or i32 %3036, %3048
  %3050 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3051 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3052 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3053 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3054 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3055 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3056 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  br label %3057

; <label>:3057:                                   ; preds = %3107, %._crit_edge417
  %.2639 = phi i32 [ %3049, %._crit_edge417 ], [ %3074, %3107 ]
  %.37 = phi i32 [ %3030, %._crit_edge417 ], [ %.2639, %3107 ]
  call void @unroll_loop(i32 141)
  %3058 = load i16*, i16** %3051, align 8
  %3059 = sext i32 %.2639 to i64
  %3060 = getelementptr inbounds i16, i16* %3058, i64 %3059
  %3061 = load i16, i16* %3060, align 2
  %3062 = zext i16 %3061 to i32
  %3063 = load i8*, i8** %3052, align 8
  %3064 = ashr i32 %.2639, 1
  %3065 = sext i32 %3064 to i64
  %3066 = getelementptr inbounds i8, i8* %3063, i64 %3065
  %3067 = load i8, i8* %3066, align 1
  %3068 = zext i8 %3067 to i32
  %3069 = shl i32 %.2639, 2
  %3070 = and i32 %3069, 4
  %3071 = lshr i32 %3068, %3070
  %3072 = and i32 %3071, 15
  %3073 = shl i32 %3072, 16
  %3074 = or i32 %3062, %3073
  %3075 = and i32 %.37, 65535
  %3076 = trunc i32 %3075 to i16
  %3077 = load i16*, i16** %3053, align 8
  %3078 = sext i32 %.2639 to i64
  %3079 = getelementptr inbounds i16, i16* %3077, i64 %3078
  store i16 %3076, i16* %3079, align 2
  %3080 = and i32 %.2639, 1
  %3081 = icmp eq i32 %3080, 0
  %3082 = load i8*, i8** %3054, align 8
  %3083 = ashr i32 %.2639, 1
  %3084 = sext i32 %3083 to i64
  %3085 = getelementptr inbounds i8, i8* %3082, i64 %3084
  %3086 = load i8, i8* %3085, align 1
  %3087 = zext i8 %3086 to i32
  br i1 %3081, label %3088, label %3097

; <label>:3088:                                   ; preds = %3057
  %3089 = and i32 %3087, 240
  %3090 = ashr i32 %.37, 16
  %3091 = or i32 %3089, %3090
  %3092 = trunc i32 %3091 to i8
  %3093 = load i8*, i8** %3055, align 8
  %3094 = ashr i32 %.2639, 1
  %3095 = sext i32 %3094 to i64
  %3096 = getelementptr inbounds i8, i8* %3093, i64 %3095
  store i8 %3092, i8* %3096, align 1
  br label %3107

; <label>:3097:                                   ; preds = %3057
  %3098 = and i32 %3087, 15
  %3099 = ashr i32 %.37, 16
  %3100 = shl i32 %3099, 4
  %3101 = or i32 %3098, %3100
  %3102 = trunc i32 %3101 to i8
  %3103 = load i8*, i8** %3056, align 8
  %3104 = ashr i32 %.2639, 1
  %3105 = sext i32 %3104 to i64
  %3106 = getelementptr inbounds i8, i8* %3103, i64 %3105
  store i8 %3102, i8* %3106, align 1
  br label %3107

; <label>:3107:                                   ; preds = %3088, %3097
  %3108 = load i32, i32* %3050, align 8
  %3109 = icmp ne i32 %.2639, %3108
  br i1 %3109, label %3057, label %3110

; <label>:3110:                                   ; preds = %3107
  %.2639.lcssa = phi i32 [ %.2639, %3107 ]
  %.lcssa = phi i32 [ %3074, %3107 ]
  %3111 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3112 = load i32, i32* %3111, align 8
  %3113 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3112, i32* %3113, align 4
  %3114 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  store i32 0, i32* %3114, align 4
  %3115 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %3116 = load i8, i8* %3115, align 4
  %3117 = icmp ne i8 %3116, 0
  br i1 %3117, label %3118, label %3193

; <label>:3118:                                   ; preds = %3110
  %3119 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 0, i32* %3119, align 8
  %3120 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %3120, align 4
  %3121 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3122 = load i32, i32* %3121, align 4
  %3123 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %3124 = load i32, i32* %3123, align 8
  %3125 = mul i32 100000, %3124
  %3126 = icmp uge i32 %3122, %3125
  br i1 %3126, label %4014, label %3127

; <label>:3127:                                   ; preds = %3118
  %3128 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3129 = load i32, i32* %3128, align 4
  %3130 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3131 = getelementptr inbounds [257 x i32], [257 x i32]* %3130, i32 0, i32 0
  %3132 = call i32 @BZ2_indexIntoF(i32 %3129, i32* %3131)
  %3133 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %3132, i32* %3133, align 8
  %3134 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3135 = load i16*, i16** %3134, align 8
  %3136 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3137 = load i32, i32* %3136, align 4
  %3138 = zext i32 %3137 to i64
  %3139 = getelementptr inbounds i16, i16* %3135, i64 %3138
  %3140 = load i16, i16* %3139, align 2
  %3141 = zext i16 %3140 to i32
  %3142 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3143 = load i8*, i8** %3142, align 8
  %3144 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3145 = load i32, i32* %3144, align 4
  %3146 = lshr i32 %3145, 1
  %3147 = zext i32 %3146 to i64
  %3148 = getelementptr inbounds i8, i8* %3143, i64 %3147
  %3149 = load i8, i8* %3148, align 1
  %3150 = zext i8 %3149 to i32
  %3151 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3152 = load i32, i32* %3151, align 4
  %3153 = shl i32 %3152, 2
  %3154 = and i32 %3153, 4
  %3155 = lshr i32 %3150, %3154
  %3156 = and i32 %3155, 15
  %3157 = shl i32 %3156, 16
  %3158 = or i32 %3141, %3157
  %3159 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3158, i32* %3159, align 4
  %3160 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %3161 = load i32, i32* %3160, align 4
  %3162 = add nsw i32 %3161, 1
  store i32 %3162, i32* %3160, align 4
  %3163 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3164 = load i32, i32* %3163, align 8
  %3165 = icmp eq i32 %3164, 0
  br i1 %3165, label %3166, label %3181

; <label>:3166:                                   ; preds = %3127
  %3167 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3168 = load i32, i32* %3167, align 4
  %3169 = sext i32 %3168 to i64
  %3170 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %3169
  %3171 = load i32, i32* %3170, align 4
  %3172 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %3171, i32* %3172, align 8
  %3173 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3174 = load i32, i32* %3173, align 4
  %3175 = add nsw i32 %3174, 1
  store i32 %3175, i32* %3173, align 4
  %3176 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3177 = load i32, i32* %3176, align 4
  %3178 = icmp eq i32 %3177, 512
  br i1 %3178, label %3179, label %3181

; <label>:3179:                                   ; preds = %3166
  %3180 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %3180, align 4
  br label %3181

; <label>:3181:                                   ; preds = %3166, %3179, %3127
  %3182 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3183 = load i32, i32* %3182, align 8
  %3184 = add nsw i32 %3183, -1
  store i32 %3184, i32* %3182, align 8
  %3185 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3186 = load i32, i32* %3185, align 8
  %3187 = icmp eq i32 %3186, 1
  %3188 = zext i1 %3187 to i64
  %3189 = select i1 %3187, i32 1, i32 0
  %3190 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %3191 = load i32, i32* %3190, align 8
  %3192 = xor i32 %3191, %3189
  store i32 %3192, i32* %3190, align 8
  br label %.loopexit

; <label>:3193:                                   ; preds = %3110
  %3194 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3195 = load i32, i32* %3194, align 4
  %3196 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %3197 = load i32, i32* %3196, align 8
  %3198 = mul i32 100000, %3197
  %3199 = icmp uge i32 %3195, %3198
  br i1 %3199, label %4014, label %3200

; <label>:3200:                                   ; preds = %3193
  %3201 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3202 = load i32, i32* %3201, align 4
  %3203 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3204 = getelementptr inbounds [257 x i32], [257 x i32]* %3203, i32 0, i32 0
  %3205 = call i32 @BZ2_indexIntoF(i32 %3202, i32* %3204)
  %3206 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %3205, i32* %3206, align 8
  %3207 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 21
  %3208 = load i16*, i16** %3207, align 8
  %3209 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3210 = load i32, i32* %3209, align 4
  %3211 = zext i32 %3210 to i64
  %3212 = getelementptr inbounds i16, i16* %3208, i64 %3211
  %3213 = load i16, i16* %3212, align 2
  %3214 = zext i16 %3213 to i32
  %3215 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 22
  %3216 = load i8*, i8** %3215, align 8
  %3217 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3218 = load i32, i32* %3217, align 4
  %3219 = lshr i32 %3218, 1
  %3220 = zext i32 %3219 to i64
  %3221 = getelementptr inbounds i8, i8* %3216, i64 %3220
  %3222 = load i8, i8* %3221, align 1
  %3223 = zext i8 %3222 to i32
  %3224 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3225 = load i32, i32* %3224, align 4
  %3226 = shl i32 %3225, 2
  %3227 = and i32 %3226, 4
  %3228 = lshr i32 %3223, %3227
  %3229 = and i32 %3228, 15
  %3230 = shl i32 %3229, 16
  %3231 = or i32 %3214, %3230
  %3232 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3231, i32* %3232, align 4
  %3233 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %3234 = load i32, i32* %3233, align 4
  %3235 = add nsw i32 %3234, 1
  store i32 %3235, i32* %3233, align 4
  br label %.loopexit

; <label>:3236:                                   ; preds = %2965
  %3237 = icmp slt i32 0, %.3193
  br i1 %3237, label %.lr.ph424, label %3264

.lr.ph424:                                        ; preds = %3236
  %3238 = zext i32 %.3193 to i64
  %3239 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3240 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3241 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  %3242 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 18
  br label %3243

; <label>:3243:                                   ; preds = %.lr.ph424, %3243
  %lsr.iv1035 = phi i32 [ 0, %.lr.ph424 ], [ %lsr.iv.next1036, %3243 ]
  %indvars.iv426 = phi i64 [ 0, %.lr.ph424 ], [ %indvars.iv.next427, %3243 ]
  call void @unroll_loop(i32 142)
  %3244 = load i32*, i32** %3239, align 8
  %scevgep1034 = getelementptr i32, i32* %3244, i64 %indvars.iv426
  %3245 = load i32, i32* %scevgep1034, align 4
  %3246 = and i32 %3245, 255
  %3247 = trunc i32 %3246 to i8
  %3248 = load i32*, i32** %3240, align 8
  %3249 = zext i8 %3247 to i64
  %3250 = getelementptr inbounds [257 x i32], [257 x i32]* %3241, i64 0, i64 %3249
  %3251 = load i32, i32* %3250, align 4
  %3252 = sext i32 %3251 to i64
  %3253 = getelementptr inbounds i32, i32* %3248, i64 %3252
  %3254 = load i32, i32* %3253, align 4
  %3255 = or i32 %3254, %lsr.iv1035
  store i32 %3255, i32* %3253, align 4
  %3256 = zext i8 %3247 to i64
  %3257 = getelementptr inbounds [257 x i32], [257 x i32]* %3242, i64 0, i64 %3256
  %3258 = load i32, i32* %3257, align 4
  %3259 = add nsw i32 %3258, 1
  store i32 %3259, i32* %3257, align 4
  %indvars.iv.next427 = add nuw nsw i64 %indvars.iv426, 1
  %lsr.iv.next1036 = add i32 %lsr.iv1035, 256
  %exitcond = icmp ne i64 %3238, %indvars.iv.next427
  br i1 %exitcond, label %3243, label %._crit_edge425

._crit_edge425:                                   ; preds = %3243
  %3260 = add i32 %.3193, -1
  %3261 = zext i32 %3260 to i64
  %3262 = add i64 %3261, 1
  %3263 = trunc i64 %3262 to i32
  br label %3264

; <label>:3264:                                   ; preds = %._crit_edge425, %3236
  %.38.lcssa = phi i32 [ %3263, %._crit_edge425 ], [ 0, %3236 ]
  %3265 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3266 = load i32*, i32** %3265, align 8
  %3267 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 13
  %3268 = load i32, i32* %3267, align 8
  %3269 = sext i32 %3268 to i64
  %3270 = getelementptr inbounds i32, i32* %3266, i64 %3269
  %3271 = load i32, i32* %3270, align 4
  %3272 = lshr i32 %3271, 8
  %3273 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3272, i32* %3273, align 4
  %3274 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  store i32 0, i32* %3274, align 4
  %3275 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 4
  %3276 = load i8, i8* %3275, align 4
  %3277 = icmp ne i8 %3276, 0
  br i1 %3277, label %3278, label %3338

; <label>:3278:                                   ; preds = %3264
  %3279 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 0, i32* %3279, align 8
  %3280 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %3280, align 4
  %3281 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3282 = load i32, i32* %3281, align 4
  %3283 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %3284 = load i32, i32* %3283, align 8
  %3285 = mul i32 100000, %3284
  %3286 = icmp uge i32 %3282, %3285
  br i1 %3286, label %4014, label %3287

; <label>:3287:                                   ; preds = %3278
  %3288 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3289 = load i32*, i32** %3288, align 8
  %3290 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3291 = load i32, i32* %3290, align 4
  %3292 = zext i32 %3291 to i64
  %3293 = getelementptr inbounds i32, i32* %3289, i64 %3292
  %3294 = load i32, i32* %3293, align 4
  %3295 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3294, i32* %3295, align 4
  %3296 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3297 = load i32, i32* %3296, align 4
  %3298 = and i32 %3297, 255
  %3299 = trunc i32 %3298 to i8
  %3300 = zext i8 %3299 to i32
  %3301 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %3300, i32* %3301, align 8
  %3302 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3303 = load i32, i32* %3302, align 4
  %3304 = lshr i32 %3303, 8
  store i32 %3304, i32* %3302, align 4
  %3305 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %3306 = load i32, i32* %3305, align 4
  %3307 = add nsw i32 %3306, 1
  store i32 %3307, i32* %3305, align 4
  %3308 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3309 = load i32, i32* %3308, align 8
  %3310 = icmp eq i32 %3309, 0
  br i1 %3310, label %3311, label %3326

; <label>:3311:                                   ; preds = %3287
  %3312 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3313 = load i32, i32* %3312, align 4
  %3314 = sext i32 %3313 to i64
  %3315 = getelementptr inbounds [512 x i32], [512 x i32]* @BZ2_rNums, i64 0, i64 %3314
  %3316 = load i32, i32* %3315, align 4
  %3317 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  store i32 %3316, i32* %3317, align 8
  %3318 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3319 = load i32, i32* %3318, align 4
  %3320 = add nsw i32 %3319, 1
  store i32 %3320, i32* %3318, align 4
  %3321 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  %3322 = load i32, i32* %3321, align 4
  %3323 = icmp eq i32 %3322, 512
  br i1 %3323, label %3324, label %3326

; <label>:3324:                                   ; preds = %3311
  %3325 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 6
  store i32 0, i32* %3325, align 4
  br label %3326

; <label>:3326:                                   ; preds = %3311, %3324, %3287
  %3327 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3328 = load i32, i32* %3327, align 8
  %3329 = add nsw i32 %3328, -1
  store i32 %3329, i32* %3327, align 8
  %3330 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 5
  %3331 = load i32, i32* %3330, align 8
  %3332 = icmp eq i32 %3331, 1
  %3333 = zext i1 %3332 to i64
  %3334 = select i1 %3332, i32 1, i32 0
  %3335 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  %3336 = load i32, i32* %3335, align 8
  %3337 = xor i32 %3336, %3334
  store i32 %3337, i32* %3335, align 8
  br label %.loopexit

; <label>:3338:                                   ; preds = %3264
  %3339 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3340 = load i32, i32* %3339, align 4
  %3341 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 9
  %3342 = load i32, i32* %3341, align 8
  %3343 = mul i32 100000, %3342
  %3344 = icmp uge i32 %3340, %3343
  br i1 %3344, label %4014, label %3345

; <label>:3345:                                   ; preds = %3338
  %3346 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 20
  %3347 = load i32*, i32** %3346, align 8
  %3348 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3349 = load i32, i32* %3348, align 4
  %3350 = zext i32 %3349 to i64
  %3351 = getelementptr inbounds i32, i32* %3347, i64 %3350
  %3352 = load i32, i32* %3351, align 4
  %3353 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  store i32 %3352, i32* %3353, align 4
  %3354 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3355 = load i32, i32* %3354, align 4
  %3356 = and i32 %3355, 255
  %3357 = trunc i32 %3356 to i8
  %3358 = zext i8 %3357 to i32
  %3359 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 15
  store i32 %3358, i32* %3359, align 8
  %3360 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 14
  %3361 = load i32, i32* %3360, align 4
  %3362 = lshr i32 %3361, 8
  store i32 %3362, i32* %3360, align 4
  %3363 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 17
  %3364 = load i32, i32* %3363, align 4
  %3365 = add nsw i32 %3364, 1
  store i32 %3365, i32* %3363, align 4
  br label %.loopexit

; <label>:3366:                                   ; preds = %._crit_edge616, %33
  %3367 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 42, i32* %3367, align 8
  %3368 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3369 = load i32, i32* %3368, align 4
  %3370 = icmp sge i32 %3369, 8
  br i1 %3370, label %._crit_edge395, label %.lr.ph394.preheader

.lr.ph394.preheader:                              ; preds = %3366
  %3371 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3372 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3373 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3374 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3375 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3376 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3377 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3378 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3379 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3380 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph394

._crit_edge395.loopexit:                          ; preds = %3430
  br label %._crit_edge395

._crit_edge395:                                   ; preds = %._crit_edge395.loopexit, %3366
  %3381 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3382 = load i32, i32* %3381, align 8
  %3383 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3384 = load i32, i32* %3383, align 4
  %3385 = sub nsw i32 %3384, 8
  %3386 = lshr i32 %3382, %3385
  %3387 = and i32 %3386, 255
  %3388 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3389 = load i32, i32* %3388, align 4
  %3390 = sub nsw i32 %3389, 8
  store i32 %3390, i32* %3388, align 4
  %3391 = trunc i32 %3387 to i8
  %3392 = zext i8 %3391 to i32
  %3393 = icmp ne i32 %3392, 114
  br i1 %3393, label %.loopexit, label %3433

.lr.ph394:                                        ; preds = %.lr.ph394.preheader, %3430
  call void @unroll_loop(i32 143)
  %3394 = load %struct.bz_stream*, %struct.bz_stream** %3371, align 8
  %3395 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3394, i32 0, i32 1
  %3396 = load i32, i32* %3395, align 8
  %3397 = icmp eq i32 %3396, 0
  br i1 %3397, label %.loopexit.loopexit176, label %3398

; <label>:3398:                                   ; preds = %.lr.ph394
  %3399 = load i32, i32* %3372, align 8
  %3400 = shl i32 %3399, 8
  %3401 = load %struct.bz_stream*, %struct.bz_stream** %3373, align 8
  %3402 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3401, i32 0, i32 0
  %3403 = load i8*, i8** %3402, align 8
  %3404 = load i8, i8* %3403, align 1
  %3405 = zext i8 %3404 to i32
  %3406 = or i32 %3400, %3405
  store i32 %3406, i32* %3374, align 8
  %3407 = load i32, i32* %3375, align 4
  %3408 = add nsw i32 %3407, 8
  store i32 %3408, i32* %3375, align 4
  %3409 = load %struct.bz_stream*, %struct.bz_stream** %3376, align 8
  %3410 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3409, i32 0, i32 0
  %3411 = load i8*, i8** %3410, align 8
  %3412 = getelementptr inbounds i8, i8* %3411, i32 1
  store i8* %3412, i8** %3410, align 8
  %3413 = load %struct.bz_stream*, %struct.bz_stream** %3377, align 8
  %3414 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3413, i32 0, i32 1
  %3415 = load i32, i32* %3414, align 8
  %3416 = add i32 %3415, -1
  store i32 %3416, i32* %3414, align 8
  %3417 = load %struct.bz_stream*, %struct.bz_stream** %3378, align 8
  %3418 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3417, i32 0, i32 2
  %3419 = load i32, i32* %3418, align 4
  %3420 = add i32 %3419, 1
  store i32 %3420, i32* %3418, align 4
  %3421 = load %struct.bz_stream*, %struct.bz_stream** %3379, align 8
  %3422 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3421, i32 0, i32 2
  %3423 = load i32, i32* %3422, align 4
  %3424 = icmp eq i32 %3423, 0
  br i1 %3424, label %3425, label %3430

; <label>:3425:                                   ; preds = %3398
  %3426 = load %struct.bz_stream*, %struct.bz_stream** %3380, align 8
  %3427 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3426, i32 0, i32 3
  %3428 = load i32, i32* %3427, align 8
  %3429 = add i32 %3428, 1
  store i32 %3429, i32* %3427, align 8
  br label %3430

; <label>:3430:                                   ; preds = %3425, %3398
  %3431 = load i32, i32* %3368, align 4
  %3432 = icmp sge i32 %3431, 8
  br i1 %3432, label %._crit_edge395.loopexit, label %.lr.ph394

; <label>:3433:                                   ; preds = %._crit_edge395, %33
  %3434 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 43, i32* %3434, align 8
  %3435 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3436 = load i32, i32* %3435, align 4
  %3437 = icmp sge i32 %3436, 8
  br i1 %3437, label %._crit_edge392, label %.lr.ph391.preheader

.lr.ph391.preheader:                              ; preds = %3433
  %3438 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3439 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3440 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3441 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3442 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3443 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3444 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3445 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3446 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3447 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph391

._crit_edge392.loopexit:                          ; preds = %3497
  br label %._crit_edge392

._crit_edge392:                                   ; preds = %._crit_edge392.loopexit, %3433
  %3448 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3449 = load i32, i32* %3448, align 8
  %3450 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3451 = load i32, i32* %3450, align 4
  %3452 = sub nsw i32 %3451, 8
  %3453 = lshr i32 %3449, %3452
  %3454 = and i32 %3453, 255
  %3455 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3456 = load i32, i32* %3455, align 4
  %3457 = sub nsw i32 %3456, 8
  store i32 %3457, i32* %3455, align 4
  %3458 = trunc i32 %3454 to i8
  %3459 = zext i8 %3458 to i32
  %3460 = icmp ne i32 %3459, 69
  br i1 %3460, label %.loopexit, label %3500

.lr.ph391:                                        ; preds = %.lr.ph391.preheader, %3497
  call void @unroll_loop(i32 144)
  %3461 = load %struct.bz_stream*, %struct.bz_stream** %3438, align 8
  %3462 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3461, i32 0, i32 1
  %3463 = load i32, i32* %3462, align 8
  %3464 = icmp eq i32 %3463, 0
  br i1 %3464, label %.loopexit.loopexit151, label %3465

; <label>:3465:                                   ; preds = %.lr.ph391
  %3466 = load i32, i32* %3439, align 8
  %3467 = shl i32 %3466, 8
  %3468 = load %struct.bz_stream*, %struct.bz_stream** %3440, align 8
  %3469 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3468, i32 0, i32 0
  %3470 = load i8*, i8** %3469, align 8
  %3471 = load i8, i8* %3470, align 1
  %3472 = zext i8 %3471 to i32
  %3473 = or i32 %3467, %3472
  store i32 %3473, i32* %3441, align 8
  %3474 = load i32, i32* %3442, align 4
  %3475 = add nsw i32 %3474, 8
  store i32 %3475, i32* %3442, align 4
  %3476 = load %struct.bz_stream*, %struct.bz_stream** %3443, align 8
  %3477 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3476, i32 0, i32 0
  %3478 = load i8*, i8** %3477, align 8
  %3479 = getelementptr inbounds i8, i8* %3478, i32 1
  store i8* %3479, i8** %3477, align 8
  %3480 = load %struct.bz_stream*, %struct.bz_stream** %3444, align 8
  %3481 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3480, i32 0, i32 1
  %3482 = load i32, i32* %3481, align 8
  %3483 = add i32 %3482, -1
  store i32 %3483, i32* %3481, align 8
  %3484 = load %struct.bz_stream*, %struct.bz_stream** %3445, align 8
  %3485 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3484, i32 0, i32 2
  %3486 = load i32, i32* %3485, align 4
  %3487 = add i32 %3486, 1
  store i32 %3487, i32* %3485, align 4
  %3488 = load %struct.bz_stream*, %struct.bz_stream** %3446, align 8
  %3489 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3488, i32 0, i32 2
  %3490 = load i32, i32* %3489, align 4
  %3491 = icmp eq i32 %3490, 0
  br i1 %3491, label %3492, label %3497

; <label>:3492:                                   ; preds = %3465
  %3493 = load %struct.bz_stream*, %struct.bz_stream** %3447, align 8
  %3494 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3493, i32 0, i32 3
  %3495 = load i32, i32* %3494, align 8
  %3496 = add i32 %3495, 1
  store i32 %3496, i32* %3494, align 8
  br label %3497

; <label>:3497:                                   ; preds = %3492, %3465
  %3498 = load i32, i32* %3435, align 4
  %3499 = icmp sge i32 %3498, 8
  br i1 %3499, label %._crit_edge392.loopexit, label %.lr.ph391

; <label>:3500:                                   ; preds = %._crit_edge392, %33
  %3501 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 44, i32* %3501, align 8
  %3502 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3503 = load i32, i32* %3502, align 4
  %3504 = icmp sge i32 %3503, 8
  br i1 %3504, label %._crit_edge389, label %.lr.ph388.preheader

.lr.ph388.preheader:                              ; preds = %3500
  %3505 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3506 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3507 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3508 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3509 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3510 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3511 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3512 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3513 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3514 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph388

._crit_edge389.loopexit:                          ; preds = %3564
  br label %._crit_edge389

._crit_edge389:                                   ; preds = %._crit_edge389.loopexit, %3500
  %3515 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3516 = load i32, i32* %3515, align 8
  %3517 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3518 = load i32, i32* %3517, align 4
  %3519 = sub nsw i32 %3518, 8
  %3520 = lshr i32 %3516, %3519
  %3521 = and i32 %3520, 255
  %3522 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3523 = load i32, i32* %3522, align 4
  %3524 = sub nsw i32 %3523, 8
  store i32 %3524, i32* %3522, align 4
  %3525 = trunc i32 %3521 to i8
  %3526 = zext i8 %3525 to i32
  %3527 = icmp ne i32 %3526, 56
  br i1 %3527, label %.loopexit, label %3567

.lr.ph388:                                        ; preds = %.lr.ph388.preheader, %3564
  call void @unroll_loop(i32 145)
  %3528 = load %struct.bz_stream*, %struct.bz_stream** %3505, align 8
  %3529 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3528, i32 0, i32 1
  %3530 = load i32, i32* %3529, align 8
  %3531 = icmp eq i32 %3530, 0
  br i1 %3531, label %.loopexit.loopexit126, label %3532

; <label>:3532:                                   ; preds = %.lr.ph388
  %3533 = load i32, i32* %3506, align 8
  %3534 = shl i32 %3533, 8
  %3535 = load %struct.bz_stream*, %struct.bz_stream** %3507, align 8
  %3536 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3535, i32 0, i32 0
  %3537 = load i8*, i8** %3536, align 8
  %3538 = load i8, i8* %3537, align 1
  %3539 = zext i8 %3538 to i32
  %3540 = or i32 %3534, %3539
  store i32 %3540, i32* %3508, align 8
  %3541 = load i32, i32* %3509, align 4
  %3542 = add nsw i32 %3541, 8
  store i32 %3542, i32* %3509, align 4
  %3543 = load %struct.bz_stream*, %struct.bz_stream** %3510, align 8
  %3544 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3543, i32 0, i32 0
  %3545 = load i8*, i8** %3544, align 8
  %3546 = getelementptr inbounds i8, i8* %3545, i32 1
  store i8* %3546, i8** %3544, align 8
  %3547 = load %struct.bz_stream*, %struct.bz_stream** %3511, align 8
  %3548 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3547, i32 0, i32 1
  %3549 = load i32, i32* %3548, align 8
  %3550 = add i32 %3549, -1
  store i32 %3550, i32* %3548, align 8
  %3551 = load %struct.bz_stream*, %struct.bz_stream** %3512, align 8
  %3552 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3551, i32 0, i32 2
  %3553 = load i32, i32* %3552, align 4
  %3554 = add i32 %3553, 1
  store i32 %3554, i32* %3552, align 4
  %3555 = load %struct.bz_stream*, %struct.bz_stream** %3513, align 8
  %3556 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3555, i32 0, i32 2
  %3557 = load i32, i32* %3556, align 4
  %3558 = icmp eq i32 %3557, 0
  br i1 %3558, label %3559, label %3564

; <label>:3559:                                   ; preds = %3532
  %3560 = load %struct.bz_stream*, %struct.bz_stream** %3514, align 8
  %3561 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3560, i32 0, i32 3
  %3562 = load i32, i32* %3561, align 8
  %3563 = add i32 %3562, 1
  store i32 %3563, i32* %3561, align 8
  br label %3564

; <label>:3564:                                   ; preds = %3559, %3532
  %3565 = load i32, i32* %3502, align 4
  %3566 = icmp sge i32 %3565, 8
  br i1 %3566, label %._crit_edge389.loopexit, label %.lr.ph388

; <label>:3567:                                   ; preds = %._crit_edge389, %33
  %3568 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 45, i32* %3568, align 8
  %3569 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3570 = load i32, i32* %3569, align 4
  %3571 = icmp sge i32 %3570, 8
  br i1 %3571, label %._crit_edge386, label %.lr.ph385.preheader

.lr.ph385.preheader:                              ; preds = %3567
  %3572 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3573 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3574 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3575 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3576 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3577 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3578 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3579 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3580 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3581 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph385

._crit_edge386.loopexit:                          ; preds = %3631
  br label %._crit_edge386

._crit_edge386:                                   ; preds = %._crit_edge386.loopexit, %3567
  %3582 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3583 = load i32, i32* %3582, align 8
  %3584 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3585 = load i32, i32* %3584, align 4
  %3586 = sub nsw i32 %3585, 8
  %3587 = lshr i32 %3583, %3586
  %3588 = and i32 %3587, 255
  %3589 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3590 = load i32, i32* %3589, align 4
  %3591 = sub nsw i32 %3590, 8
  store i32 %3591, i32* %3589, align 4
  %3592 = trunc i32 %3588 to i8
  %3593 = zext i8 %3592 to i32
  %3594 = icmp ne i32 %3593, 80
  br i1 %3594, label %.loopexit, label %3634

.lr.ph385:                                        ; preds = %.lr.ph385.preheader, %3631
  call void @unroll_loop(i32 146)
  %3595 = load %struct.bz_stream*, %struct.bz_stream** %3572, align 8
  %3596 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3595, i32 0, i32 1
  %3597 = load i32, i32* %3596, align 8
  %3598 = icmp eq i32 %3597, 0
  br i1 %3598, label %.loopexit.loopexit101, label %3599

; <label>:3599:                                   ; preds = %.lr.ph385
  %3600 = load i32, i32* %3573, align 8
  %3601 = shl i32 %3600, 8
  %3602 = load %struct.bz_stream*, %struct.bz_stream** %3574, align 8
  %3603 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3602, i32 0, i32 0
  %3604 = load i8*, i8** %3603, align 8
  %3605 = load i8, i8* %3604, align 1
  %3606 = zext i8 %3605 to i32
  %3607 = or i32 %3601, %3606
  store i32 %3607, i32* %3575, align 8
  %3608 = load i32, i32* %3576, align 4
  %3609 = add nsw i32 %3608, 8
  store i32 %3609, i32* %3576, align 4
  %3610 = load %struct.bz_stream*, %struct.bz_stream** %3577, align 8
  %3611 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3610, i32 0, i32 0
  %3612 = load i8*, i8** %3611, align 8
  %3613 = getelementptr inbounds i8, i8* %3612, i32 1
  store i8* %3613, i8** %3611, align 8
  %3614 = load %struct.bz_stream*, %struct.bz_stream** %3578, align 8
  %3615 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3614, i32 0, i32 1
  %3616 = load i32, i32* %3615, align 8
  %3617 = add i32 %3616, -1
  store i32 %3617, i32* %3615, align 8
  %3618 = load %struct.bz_stream*, %struct.bz_stream** %3579, align 8
  %3619 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3618, i32 0, i32 2
  %3620 = load i32, i32* %3619, align 4
  %3621 = add i32 %3620, 1
  store i32 %3621, i32* %3619, align 4
  %3622 = load %struct.bz_stream*, %struct.bz_stream** %3580, align 8
  %3623 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3622, i32 0, i32 2
  %3624 = load i32, i32* %3623, align 4
  %3625 = icmp eq i32 %3624, 0
  br i1 %3625, label %3626, label %3631

; <label>:3626:                                   ; preds = %3599
  %3627 = load %struct.bz_stream*, %struct.bz_stream** %3581, align 8
  %3628 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3627, i32 0, i32 3
  %3629 = load i32, i32* %3628, align 8
  %3630 = add i32 %3629, 1
  store i32 %3630, i32* %3628, align 8
  br label %3631

; <label>:3631:                                   ; preds = %3626, %3599
  %3632 = load i32, i32* %3569, align 4
  %3633 = icmp sge i32 %3632, 8
  br i1 %3633, label %._crit_edge386.loopexit, label %.lr.ph385

; <label>:3634:                                   ; preds = %._crit_edge386, %33
  %3635 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 46, i32* %3635, align 8
  %3636 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3637 = load i32, i32* %3636, align 4
  %3638 = icmp sge i32 %3637, 8
  br i1 %3638, label %._crit_edge383, label %.lr.ph382.preheader

.lr.ph382.preheader:                              ; preds = %3634
  %3639 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3640 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3641 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3642 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3643 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3644 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3645 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3646 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3647 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3648 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph382

._crit_edge383.loopexit:                          ; preds = %3698
  br label %._crit_edge383

._crit_edge383:                                   ; preds = %._crit_edge383.loopexit, %3634
  %3649 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3650 = load i32, i32* %3649, align 8
  %3651 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3652 = load i32, i32* %3651, align 4
  %3653 = sub nsw i32 %3652, 8
  %3654 = lshr i32 %3650, %3653
  %3655 = and i32 %3654, 255
  %3656 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3657 = load i32, i32* %3656, align 4
  %3658 = sub nsw i32 %3657, 8
  store i32 %3658, i32* %3656, align 4
  %3659 = trunc i32 %3655 to i8
  %3660 = zext i8 %3659 to i32
  %3661 = icmp ne i32 %3660, 144
  br i1 %3661, label %.loopexit, label %3701

.lr.ph382:                                        ; preds = %.lr.ph382.preheader, %3698
  call void @unroll_loop(i32 147)
  %3662 = load %struct.bz_stream*, %struct.bz_stream** %3639, align 8
  %3663 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3662, i32 0, i32 1
  %3664 = load i32, i32* %3663, align 8
  %3665 = icmp eq i32 %3664, 0
  br i1 %3665, label %.loopexit.loopexit76, label %3666

; <label>:3666:                                   ; preds = %.lr.ph382
  %3667 = load i32, i32* %3640, align 8
  %3668 = shl i32 %3667, 8
  %3669 = load %struct.bz_stream*, %struct.bz_stream** %3641, align 8
  %3670 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3669, i32 0, i32 0
  %3671 = load i8*, i8** %3670, align 8
  %3672 = load i8, i8* %3671, align 1
  %3673 = zext i8 %3672 to i32
  %3674 = or i32 %3668, %3673
  store i32 %3674, i32* %3642, align 8
  %3675 = load i32, i32* %3643, align 4
  %3676 = add nsw i32 %3675, 8
  store i32 %3676, i32* %3643, align 4
  %3677 = load %struct.bz_stream*, %struct.bz_stream** %3644, align 8
  %3678 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3677, i32 0, i32 0
  %3679 = load i8*, i8** %3678, align 8
  %3680 = getelementptr inbounds i8, i8* %3679, i32 1
  store i8* %3680, i8** %3678, align 8
  %3681 = load %struct.bz_stream*, %struct.bz_stream** %3645, align 8
  %3682 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3681, i32 0, i32 1
  %3683 = load i32, i32* %3682, align 8
  %3684 = add i32 %3683, -1
  store i32 %3684, i32* %3682, align 8
  %3685 = load %struct.bz_stream*, %struct.bz_stream** %3646, align 8
  %3686 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3685, i32 0, i32 2
  %3687 = load i32, i32* %3686, align 4
  %3688 = add i32 %3687, 1
  store i32 %3688, i32* %3686, align 4
  %3689 = load %struct.bz_stream*, %struct.bz_stream** %3647, align 8
  %3690 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3689, i32 0, i32 2
  %3691 = load i32, i32* %3690, align 4
  %3692 = icmp eq i32 %3691, 0
  br i1 %3692, label %3693, label %3698

; <label>:3693:                                   ; preds = %3666
  %3694 = load %struct.bz_stream*, %struct.bz_stream** %3648, align 8
  %3695 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3694, i32 0, i32 3
  %3696 = load i32, i32* %3695, align 8
  %3697 = add i32 %3696, 1
  store i32 %3697, i32* %3695, align 8
  br label %3698

; <label>:3698:                                   ; preds = %3693, %3666
  %3699 = load i32, i32* %3636, align 4
  %3700 = icmp sge i32 %3699, 8
  br i1 %3700, label %._crit_edge383.loopexit, label %.lr.ph382

; <label>:3701:                                   ; preds = %._crit_edge383
  %3702 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 0, i32* %3702, align 4
  br label %3703

; <label>:3703:                                   ; preds = %33, %3701
  %3704 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 47, i32* %3704, align 8
  %3705 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3706 = load i32, i32* %3705, align 4
  %3707 = icmp sge i32 %3706, 8
  br i1 %3707, label %._crit_edge380, label %.lr.ph379.preheader

.lr.ph379.preheader:                              ; preds = %3703
  %3708 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3709 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3710 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3711 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3712 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3713 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3714 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3715 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3716 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3717 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph379

._crit_edge380.loopexit:                          ; preds = %3771
  br label %._crit_edge380

._crit_edge380:                                   ; preds = %._crit_edge380.loopexit, %3703
  %3718 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3719 = load i32, i32* %3718, align 8
  %3720 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3721 = load i32, i32* %3720, align 4
  %3722 = sub nsw i32 %3721, 8
  %3723 = lshr i32 %3719, %3722
  %3724 = and i32 %3723, 255
  %3725 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3726 = load i32, i32* %3725, align 4
  %3727 = sub nsw i32 %3726, 8
  store i32 %3727, i32* %3725, align 4
  %3728 = trunc i32 %3724 to i8
  %3729 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  %3730 = load i32, i32* %3729, align 4
  %3731 = shl i32 %3730, 8
  %3732 = zext i8 %3728 to i32
  %3733 = or i32 %3731, %3732
  %3734 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 %3733, i32* %3734, align 4
  br label %3774

.lr.ph379:                                        ; preds = %.lr.ph379.preheader, %3771
  call void @unroll_loop(i32 148)
  %3735 = load %struct.bz_stream*, %struct.bz_stream** %3708, align 8
  %3736 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3735, i32 0, i32 1
  %3737 = load i32, i32* %3736, align 8
  %3738 = icmp eq i32 %3737, 0
  br i1 %3738, label %.loopexit.loopexit51, label %3739

; <label>:3739:                                   ; preds = %.lr.ph379
  %3740 = load i32, i32* %3709, align 8
  %3741 = shl i32 %3740, 8
  %3742 = load %struct.bz_stream*, %struct.bz_stream** %3710, align 8
  %3743 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3742, i32 0, i32 0
  %3744 = load i8*, i8** %3743, align 8
  %3745 = load i8, i8* %3744, align 1
  %3746 = zext i8 %3745 to i32
  %3747 = or i32 %3741, %3746
  store i32 %3747, i32* %3711, align 8
  %3748 = load i32, i32* %3712, align 4
  %3749 = add nsw i32 %3748, 8
  store i32 %3749, i32* %3712, align 4
  %3750 = load %struct.bz_stream*, %struct.bz_stream** %3713, align 8
  %3751 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3750, i32 0, i32 0
  %3752 = load i8*, i8** %3751, align 8
  %3753 = getelementptr inbounds i8, i8* %3752, i32 1
  store i8* %3753, i8** %3751, align 8
  %3754 = load %struct.bz_stream*, %struct.bz_stream** %3714, align 8
  %3755 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3754, i32 0, i32 1
  %3756 = load i32, i32* %3755, align 8
  %3757 = add i32 %3756, -1
  store i32 %3757, i32* %3755, align 8
  %3758 = load %struct.bz_stream*, %struct.bz_stream** %3715, align 8
  %3759 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3758, i32 0, i32 2
  %3760 = load i32, i32* %3759, align 4
  %3761 = add i32 %3760, 1
  store i32 %3761, i32* %3759, align 4
  %3762 = load %struct.bz_stream*, %struct.bz_stream** %3716, align 8
  %3763 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3762, i32 0, i32 2
  %3764 = load i32, i32* %3763, align 4
  %3765 = icmp eq i32 %3764, 0
  br i1 %3765, label %3766, label %3771

; <label>:3766:                                   ; preds = %3739
  %3767 = load %struct.bz_stream*, %struct.bz_stream** %3717, align 8
  %3768 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3767, i32 0, i32 3
  %3769 = load i32, i32* %3768, align 8
  %3770 = add i32 %3769, 1
  store i32 %3770, i32* %3768, align 8
  br label %3771

; <label>:3771:                                   ; preds = %3766, %3739
  %3772 = load i32, i32* %3705, align 4
  %3773 = icmp sge i32 %3772, 8
  br i1 %3773, label %._crit_edge380.loopexit, label %.lr.ph379

; <label>:3774:                                   ; preds = %33, %._crit_edge380
  %3775 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 48, i32* %3775, align 8
  %3776 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3777 = load i32, i32* %3776, align 4
  %3778 = icmp sge i32 %3777, 8
  br i1 %3778, label %._crit_edge377, label %.lr.ph376.preheader

.lr.ph376.preheader:                              ; preds = %3774
  %3779 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3780 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3781 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3782 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3783 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3784 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3785 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3786 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3787 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3788 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph376

._crit_edge377.loopexit:                          ; preds = %3842
  br label %._crit_edge377

._crit_edge377:                                   ; preds = %._crit_edge377.loopexit, %3774
  %3789 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3790 = load i32, i32* %3789, align 8
  %3791 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3792 = load i32, i32* %3791, align 4
  %3793 = sub nsw i32 %3792, 8
  %3794 = lshr i32 %3790, %3793
  %3795 = and i32 %3794, 255
  %3796 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3797 = load i32, i32* %3796, align 4
  %3798 = sub nsw i32 %3797, 8
  store i32 %3798, i32* %3796, align 4
  %3799 = trunc i32 %3795 to i8
  %3800 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  %3801 = load i32, i32* %3800, align 4
  %3802 = shl i32 %3801, 8
  %3803 = zext i8 %3799 to i32
  %3804 = or i32 %3802, %3803
  %3805 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 %3804, i32* %3805, align 4
  br label %3845

.lr.ph376:                                        ; preds = %.lr.ph376.preheader, %3842
  call void @unroll_loop(i32 149)
  %3806 = load %struct.bz_stream*, %struct.bz_stream** %3779, align 8
  %3807 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3806, i32 0, i32 1
  %3808 = load i32, i32* %3807, align 8
  %3809 = icmp eq i32 %3808, 0
  br i1 %3809, label %.loopexit.loopexit26, label %3810

; <label>:3810:                                   ; preds = %.lr.ph376
  %3811 = load i32, i32* %3780, align 8
  %3812 = shl i32 %3811, 8
  %3813 = load %struct.bz_stream*, %struct.bz_stream** %3781, align 8
  %3814 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3813, i32 0, i32 0
  %3815 = load i8*, i8** %3814, align 8
  %3816 = load i8, i8* %3815, align 1
  %3817 = zext i8 %3816 to i32
  %3818 = or i32 %3812, %3817
  store i32 %3818, i32* %3782, align 8
  %3819 = load i32, i32* %3783, align 4
  %3820 = add nsw i32 %3819, 8
  store i32 %3820, i32* %3783, align 4
  %3821 = load %struct.bz_stream*, %struct.bz_stream** %3784, align 8
  %3822 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3821, i32 0, i32 0
  %3823 = load i8*, i8** %3822, align 8
  %3824 = getelementptr inbounds i8, i8* %3823, i32 1
  store i8* %3824, i8** %3822, align 8
  %3825 = load %struct.bz_stream*, %struct.bz_stream** %3785, align 8
  %3826 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3825, i32 0, i32 1
  %3827 = load i32, i32* %3826, align 8
  %3828 = add i32 %3827, -1
  store i32 %3828, i32* %3826, align 8
  %3829 = load %struct.bz_stream*, %struct.bz_stream** %3786, align 8
  %3830 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3829, i32 0, i32 2
  %3831 = load i32, i32* %3830, align 4
  %3832 = add i32 %3831, 1
  store i32 %3832, i32* %3830, align 4
  %3833 = load %struct.bz_stream*, %struct.bz_stream** %3787, align 8
  %3834 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3833, i32 0, i32 2
  %3835 = load i32, i32* %3834, align 4
  %3836 = icmp eq i32 %3835, 0
  br i1 %3836, label %3837, label %3842

; <label>:3837:                                   ; preds = %3810
  %3838 = load %struct.bz_stream*, %struct.bz_stream** %3788, align 8
  %3839 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3838, i32 0, i32 3
  %3840 = load i32, i32* %3839, align 8
  %3841 = add i32 %3840, 1
  store i32 %3841, i32* %3839, align 8
  br label %3842

; <label>:3842:                                   ; preds = %3837, %3810
  %3843 = load i32, i32* %3776, align 4
  %3844 = icmp sge i32 %3843, 8
  br i1 %3844, label %._crit_edge377.loopexit, label %.lr.ph376

; <label>:3845:                                   ; preds = %33, %._crit_edge377
  %3846 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 49, i32* %3846, align 8
  %3847 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3848 = load i32, i32* %3847, align 4
  %3849 = icmp sge i32 %3848, 8
  br i1 %3849, label %._crit_edge374, label %.lr.ph373.preheader

.lr.ph373.preheader:                              ; preds = %3845
  %3850 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3851 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3852 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3853 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3854 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3855 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3856 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3857 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3858 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3859 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph373

._crit_edge374.loopexit:                          ; preds = %3913
  br label %._crit_edge374

._crit_edge374:                                   ; preds = %._crit_edge374.loopexit, %3845
  %3860 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3861 = load i32, i32* %3860, align 8
  %3862 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3863 = load i32, i32* %3862, align 4
  %3864 = sub nsw i32 %3863, 8
  %3865 = lshr i32 %3861, %3864
  %3866 = and i32 %3865, 255
  %3867 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3868 = load i32, i32* %3867, align 4
  %3869 = sub nsw i32 %3868, 8
  store i32 %3869, i32* %3867, align 4
  %3870 = trunc i32 %3866 to i8
  %3871 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  %3872 = load i32, i32* %3871, align 4
  %3873 = shl i32 %3872, 8
  %3874 = zext i8 %3870 to i32
  %3875 = or i32 %3873, %3874
  %3876 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 %3875, i32* %3876, align 4
  br label %3916

.lr.ph373:                                        ; preds = %.lr.ph373.preheader, %3913
  call void @unroll_loop(i32 150)
  %3877 = load %struct.bz_stream*, %struct.bz_stream** %3850, align 8
  %3878 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3877, i32 0, i32 1
  %3879 = load i32, i32* %3878, align 8
  %3880 = icmp eq i32 %3879, 0
  br i1 %3880, label %.loopexit.loopexit1, label %3881

; <label>:3881:                                   ; preds = %.lr.ph373
  %3882 = load i32, i32* %3851, align 8
  %3883 = shl i32 %3882, 8
  %3884 = load %struct.bz_stream*, %struct.bz_stream** %3852, align 8
  %3885 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3884, i32 0, i32 0
  %3886 = load i8*, i8** %3885, align 8
  %3887 = load i8, i8* %3886, align 1
  %3888 = zext i8 %3887 to i32
  %3889 = or i32 %3883, %3888
  store i32 %3889, i32* %3853, align 8
  %3890 = load i32, i32* %3854, align 4
  %3891 = add nsw i32 %3890, 8
  store i32 %3891, i32* %3854, align 4
  %3892 = load %struct.bz_stream*, %struct.bz_stream** %3855, align 8
  %3893 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3892, i32 0, i32 0
  %3894 = load i8*, i8** %3893, align 8
  %3895 = getelementptr inbounds i8, i8* %3894, i32 1
  store i8* %3895, i8** %3893, align 8
  %3896 = load %struct.bz_stream*, %struct.bz_stream** %3856, align 8
  %3897 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3896, i32 0, i32 1
  %3898 = load i32, i32* %3897, align 8
  %3899 = add i32 %3898, -1
  store i32 %3899, i32* %3897, align 8
  %3900 = load %struct.bz_stream*, %struct.bz_stream** %3857, align 8
  %3901 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3900, i32 0, i32 2
  %3902 = load i32, i32* %3901, align 4
  %3903 = add i32 %3902, 1
  store i32 %3903, i32* %3901, align 4
  %3904 = load %struct.bz_stream*, %struct.bz_stream** %3858, align 8
  %3905 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3904, i32 0, i32 2
  %3906 = load i32, i32* %3905, align 4
  %3907 = icmp eq i32 %3906, 0
  br i1 %3907, label %3908, label %3913

; <label>:3908:                                   ; preds = %3881
  %3909 = load %struct.bz_stream*, %struct.bz_stream** %3859, align 8
  %3910 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3909, i32 0, i32 3
  %3911 = load i32, i32* %3910, align 8
  %3912 = add i32 %3911, 1
  store i32 %3912, i32* %3910, align 8
  br label %3913

; <label>:3913:                                   ; preds = %3908, %3881
  %3914 = load i32, i32* %3847, align 4
  %3915 = icmp sge i32 %3914, 8
  br i1 %3915, label %._crit_edge374.loopexit, label %.lr.ph373

; <label>:3916:                                   ; preds = %33, %._crit_edge374
  %3917 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 50, i32* %3917, align 8
  %3918 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3919 = load i32, i32* %3918, align 4
  %3920 = icmp sge i32 %3919, 8
  br i1 %3920, label %._crit_edge, label %.lr.ph.preheader

.lr.ph.preheader:                                 ; preds = %3916
  %3921 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3922 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3923 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3924 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3925 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3926 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3927 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3928 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3929 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  %3930 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 0
  br label %.lr.ph

._crit_edge.loopexit:                             ; preds = %3985
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %3916
  %3931 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 7
  %3932 = load i32, i32* %3931, align 8
  %3933 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3934 = load i32, i32* %3933, align 4
  %3935 = sub nsw i32 %3934, 8
  %3936 = lshr i32 %3932, %3935
  %3937 = and i32 %3936, 255
  %3938 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 8
  %3939 = load i32, i32* %3938, align 4
  %3940 = sub nsw i32 %3939, 8
  store i32 %3940, i32* %3938, align 4
  %3941 = trunc i32 %3937 to i8
  %3942 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  %3943 = load i32, i32* %3942, align 4
  %3944 = shl i32 %3943, 8
  %3945 = zext i8 %3941 to i32
  %3946 = or i32 %3944, %3945
  %3947 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 24
  store i32 %3946, i32* %3947, align 4
  %3948 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 1
  store i32 1, i32* %3948, align 8
  br label %.loopexit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %3985
  call void @unroll_loop(i32 151)
  %3949 = load %struct.bz_stream*, %struct.bz_stream** %3921, align 8
  %3950 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3949, i32 0, i32 1
  %3951 = load i32, i32* %3950, align 8
  %3952 = icmp eq i32 %3951, 0
  br i1 %3952, label %.loopexit.loopexit, label %3953

; <label>:3953:                                   ; preds = %.lr.ph
  %3954 = load i32, i32* %3922, align 8
  %3955 = shl i32 %3954, 8
  %3956 = load %struct.bz_stream*, %struct.bz_stream** %3923, align 8
  %3957 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3956, i32 0, i32 0
  %3958 = load i8*, i8** %3957, align 8
  %3959 = load i8, i8* %3958, align 1
  %3960 = zext i8 %3959 to i32
  %3961 = or i32 %3955, %3960
  store i32 %3961, i32* %3924, align 8
  %3962 = load i32, i32* %3925, align 4
  %3963 = add nsw i32 %3962, 8
  store i32 %3963, i32* %3925, align 4
  %3964 = load %struct.bz_stream*, %struct.bz_stream** %3926, align 8
  %3965 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3964, i32 0, i32 0
  %3966 = load i8*, i8** %3965, align 8
  %3967 = getelementptr inbounds i8, i8* %3966, i32 1
  store i8* %3967, i8** %3965, align 8
  %3968 = load %struct.bz_stream*, %struct.bz_stream** %3927, align 8
  %3969 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3968, i32 0, i32 1
  %3970 = load i32, i32* %3969, align 8
  %3971 = add i32 %3970, -1
  store i32 %3971, i32* %3969, align 8
  %3972 = load %struct.bz_stream*, %struct.bz_stream** %3928, align 8
  %3973 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3972, i32 0, i32 2
  %3974 = load i32, i32* %3973, align 4
  %3975 = add i32 %3974, 1
  store i32 %3975, i32* %3973, align 4
  %3976 = load %struct.bz_stream*, %struct.bz_stream** %3929, align 8
  %3977 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3976, i32 0, i32 2
  %3978 = load i32, i32* %3977, align 4
  %3979 = icmp eq i32 %3978, 0
  br i1 %3979, label %3980, label %3985

; <label>:3980:                                   ; preds = %3953
  %3981 = load %struct.bz_stream*, %struct.bz_stream** %3930, align 8
  %3982 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %3981, i32 0, i32 3
  %3983 = load i32, i32* %3982, align 8
  %3984 = add i32 %3983, 1
  store i32 %3984, i32* %3982, align 8
  br label %3985

; <label>:3985:                                   ; preds = %3980, %3953
  %3986 = load i32, i32* %3918, align 4
  %3987 = icmp sge i32 %3986, 8
  br i1 %3987, label %._crit_edge.loopexit, label %.lr.ph

; <label>:3988:                                   ; preds = %33
  call void @BZ2_bz__AssertH__fail(i32 4001)
  call void @BZ2_bz__AssertH__fail(i32 4002)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %.lr.ph
  %.14356.ph = phi i32* [ %81, %.lr.ph ]
  %.14341.ph = phi i32* [ %79, %.lr.ph ]
  %.14326.ph = phi i32* [ %77, %.lr.ph ]
  %.14311.ph = phi i32 [ %75, %.lr.ph ]
  %.14296.ph = phi i32 [ %73, %.lr.ph ]
  %.10281.ph = phi i32 [ %71, %.lr.ph ]
  %.10270.ph = phi i32 [ %69, %.lr.ph ]
  %.11259.ph = phi i32 [ %67, %.lr.ph ]
  %.18246.ph = phi i32 [ %63, %.lr.ph ]
  %.8227.ph = phi i32 [ %61, %.lr.ph ]
  %.13218.ph = phi i32 [ %59, %.lr.ph ]
  %.14204.ph = phi i32 [ %57, %.lr.ph ]
  %.11189.ph = phi i32 [ %55, %.lr.ph ]
  %.8177.ph = phi i32 [ %53, %.lr.ph ]
  %.14168.ph = phi i32 [ %51, %.lr.ph ]
  %.14153.ph = phi i32 [ %49, %.lr.ph ]
  %.11138.ph = phi i32 [ %47, %.lr.ph ]
  %.20126.ph = phi i32 [ %45, %.lr.ph ]
  %.21105.ph = phi i32 [ %43, %.lr.ph ]
  %.2283.ph = phi i32 [ %41, %.lr.ph ]
  %.1860.ph = phi i32 [ %39, %.lr.ph ]
  %.2841.ph = phi i32 [ %37, %.lr.ph ]
  %.40.ph = phi i32 [ %35, %.lr.ph ]
  %.03.ph = phi i32 [ 0, %.lr.ph ]
  br label %.loopexit

.loopexit.loopexit1:                              ; preds = %.lr.ph373
  %.14356.ph2 = phi i32* [ %81, %.lr.ph373 ]
  %.14341.ph3 = phi i32* [ %79, %.lr.ph373 ]
  %.14326.ph4 = phi i32* [ %77, %.lr.ph373 ]
  %.14311.ph5 = phi i32 [ %75, %.lr.ph373 ]
  %.14296.ph6 = phi i32 [ %73, %.lr.ph373 ]
  %.10281.ph7 = phi i32 [ %71, %.lr.ph373 ]
  %.10270.ph8 = phi i32 [ %69, %.lr.ph373 ]
  %.11259.ph9 = phi i32 [ %67, %.lr.ph373 ]
  %.18246.ph10 = phi i32 [ %63, %.lr.ph373 ]
  %.8227.ph11 = phi i32 [ %61, %.lr.ph373 ]
  %.13218.ph12 = phi i32 [ %59, %.lr.ph373 ]
  %.14204.ph13 = phi i32 [ %57, %.lr.ph373 ]
  %.11189.ph14 = phi i32 [ %55, %.lr.ph373 ]
  %.8177.ph15 = phi i32 [ %53, %.lr.ph373 ]
  %.14168.ph16 = phi i32 [ %51, %.lr.ph373 ]
  %.14153.ph17 = phi i32 [ %49, %.lr.ph373 ]
  %.11138.ph18 = phi i32 [ %47, %.lr.ph373 ]
  %.20126.ph19 = phi i32 [ %45, %.lr.ph373 ]
  %.21105.ph20 = phi i32 [ %43, %.lr.ph373 ]
  %.2283.ph21 = phi i32 [ %41, %.lr.ph373 ]
  %.1860.ph22 = phi i32 [ %39, %.lr.ph373 ]
  %.2841.ph23 = phi i32 [ %37, %.lr.ph373 ]
  %.40.ph24 = phi i32 [ %35, %.lr.ph373 ]
  %.03.ph25 = phi i32 [ 0, %.lr.ph373 ]
  br label %.loopexit

.loopexit.loopexit26:                             ; preds = %.lr.ph376
  %.14356.ph27 = phi i32* [ %81, %.lr.ph376 ]
  %.14341.ph28 = phi i32* [ %79, %.lr.ph376 ]
  %.14326.ph29 = phi i32* [ %77, %.lr.ph376 ]
  %.14311.ph30 = phi i32 [ %75, %.lr.ph376 ]
  %.14296.ph31 = phi i32 [ %73, %.lr.ph376 ]
  %.10281.ph32 = phi i32 [ %71, %.lr.ph376 ]
  %.10270.ph33 = phi i32 [ %69, %.lr.ph376 ]
  %.11259.ph34 = phi i32 [ %67, %.lr.ph376 ]
  %.18246.ph35 = phi i32 [ %63, %.lr.ph376 ]
  %.8227.ph36 = phi i32 [ %61, %.lr.ph376 ]
  %.13218.ph37 = phi i32 [ %59, %.lr.ph376 ]
  %.14204.ph38 = phi i32 [ %57, %.lr.ph376 ]
  %.11189.ph39 = phi i32 [ %55, %.lr.ph376 ]
  %.8177.ph40 = phi i32 [ %53, %.lr.ph376 ]
  %.14168.ph41 = phi i32 [ %51, %.lr.ph376 ]
  %.14153.ph42 = phi i32 [ %49, %.lr.ph376 ]
  %.11138.ph43 = phi i32 [ %47, %.lr.ph376 ]
  %.20126.ph44 = phi i32 [ %45, %.lr.ph376 ]
  %.21105.ph45 = phi i32 [ %43, %.lr.ph376 ]
  %.2283.ph46 = phi i32 [ %41, %.lr.ph376 ]
  %.1860.ph47 = phi i32 [ %39, %.lr.ph376 ]
  %.2841.ph48 = phi i32 [ %37, %.lr.ph376 ]
  %.40.ph49 = phi i32 [ %35, %.lr.ph376 ]
  %.03.ph50 = phi i32 [ 0, %.lr.ph376 ]
  br label %.loopexit

.loopexit.loopexit51:                             ; preds = %.lr.ph379
  %.14356.ph52 = phi i32* [ %81, %.lr.ph379 ]
  %.14341.ph53 = phi i32* [ %79, %.lr.ph379 ]
  %.14326.ph54 = phi i32* [ %77, %.lr.ph379 ]
  %.14311.ph55 = phi i32 [ %75, %.lr.ph379 ]
  %.14296.ph56 = phi i32 [ %73, %.lr.ph379 ]
  %.10281.ph57 = phi i32 [ %71, %.lr.ph379 ]
  %.10270.ph58 = phi i32 [ %69, %.lr.ph379 ]
  %.11259.ph59 = phi i32 [ %67, %.lr.ph379 ]
  %.18246.ph60 = phi i32 [ %63, %.lr.ph379 ]
  %.8227.ph61 = phi i32 [ %61, %.lr.ph379 ]
  %.13218.ph62 = phi i32 [ %59, %.lr.ph379 ]
  %.14204.ph63 = phi i32 [ %57, %.lr.ph379 ]
  %.11189.ph64 = phi i32 [ %55, %.lr.ph379 ]
  %.8177.ph65 = phi i32 [ %53, %.lr.ph379 ]
  %.14168.ph66 = phi i32 [ %51, %.lr.ph379 ]
  %.14153.ph67 = phi i32 [ %49, %.lr.ph379 ]
  %.11138.ph68 = phi i32 [ %47, %.lr.ph379 ]
  %.20126.ph69 = phi i32 [ %45, %.lr.ph379 ]
  %.21105.ph70 = phi i32 [ %43, %.lr.ph379 ]
  %.2283.ph71 = phi i32 [ %41, %.lr.ph379 ]
  %.1860.ph72 = phi i32 [ %39, %.lr.ph379 ]
  %.2841.ph73 = phi i32 [ %37, %.lr.ph379 ]
  %.40.ph74 = phi i32 [ %35, %.lr.ph379 ]
  %.03.ph75 = phi i32 [ 0, %.lr.ph379 ]
  br label %.loopexit

.loopexit.loopexit76:                             ; preds = %.lr.ph382
  %.14356.ph77 = phi i32* [ %81, %.lr.ph382 ]
  %.14341.ph78 = phi i32* [ %79, %.lr.ph382 ]
  %.14326.ph79 = phi i32* [ %77, %.lr.ph382 ]
  %.14311.ph80 = phi i32 [ %75, %.lr.ph382 ]
  %.14296.ph81 = phi i32 [ %73, %.lr.ph382 ]
  %.10281.ph82 = phi i32 [ %71, %.lr.ph382 ]
  %.10270.ph83 = phi i32 [ %69, %.lr.ph382 ]
  %.11259.ph84 = phi i32 [ %67, %.lr.ph382 ]
  %.18246.ph85 = phi i32 [ %63, %.lr.ph382 ]
  %.8227.ph86 = phi i32 [ %61, %.lr.ph382 ]
  %.13218.ph87 = phi i32 [ %59, %.lr.ph382 ]
  %.14204.ph88 = phi i32 [ %57, %.lr.ph382 ]
  %.11189.ph89 = phi i32 [ %55, %.lr.ph382 ]
  %.8177.ph90 = phi i32 [ %53, %.lr.ph382 ]
  %.14168.ph91 = phi i32 [ %51, %.lr.ph382 ]
  %.14153.ph92 = phi i32 [ %49, %.lr.ph382 ]
  %.11138.ph93 = phi i32 [ %47, %.lr.ph382 ]
  %.20126.ph94 = phi i32 [ %45, %.lr.ph382 ]
  %.21105.ph95 = phi i32 [ %43, %.lr.ph382 ]
  %.2283.ph96 = phi i32 [ %41, %.lr.ph382 ]
  %.1860.ph97 = phi i32 [ %39, %.lr.ph382 ]
  %.2841.ph98 = phi i32 [ %37, %.lr.ph382 ]
  %.40.ph99 = phi i32 [ %35, %.lr.ph382 ]
  %.03.ph100 = phi i32 [ 0, %.lr.ph382 ]
  br label %.loopexit

.loopexit.loopexit101:                            ; preds = %.lr.ph385
  %.14356.ph102 = phi i32* [ %81, %.lr.ph385 ]
  %.14341.ph103 = phi i32* [ %79, %.lr.ph385 ]
  %.14326.ph104 = phi i32* [ %77, %.lr.ph385 ]
  %.14311.ph105 = phi i32 [ %75, %.lr.ph385 ]
  %.14296.ph106 = phi i32 [ %73, %.lr.ph385 ]
  %.10281.ph107 = phi i32 [ %71, %.lr.ph385 ]
  %.10270.ph108 = phi i32 [ %69, %.lr.ph385 ]
  %.11259.ph109 = phi i32 [ %67, %.lr.ph385 ]
  %.18246.ph110 = phi i32 [ %63, %.lr.ph385 ]
  %.8227.ph111 = phi i32 [ %61, %.lr.ph385 ]
  %.13218.ph112 = phi i32 [ %59, %.lr.ph385 ]
  %.14204.ph113 = phi i32 [ %57, %.lr.ph385 ]
  %.11189.ph114 = phi i32 [ %55, %.lr.ph385 ]
  %.8177.ph115 = phi i32 [ %53, %.lr.ph385 ]
  %.14168.ph116 = phi i32 [ %51, %.lr.ph385 ]
  %.14153.ph117 = phi i32 [ %49, %.lr.ph385 ]
  %.11138.ph118 = phi i32 [ %47, %.lr.ph385 ]
  %.20126.ph119 = phi i32 [ %45, %.lr.ph385 ]
  %.21105.ph120 = phi i32 [ %43, %.lr.ph385 ]
  %.2283.ph121 = phi i32 [ %41, %.lr.ph385 ]
  %.1860.ph122 = phi i32 [ %39, %.lr.ph385 ]
  %.2841.ph123 = phi i32 [ %37, %.lr.ph385 ]
  %.40.ph124 = phi i32 [ %35, %.lr.ph385 ]
  %.03.ph125 = phi i32 [ 0, %.lr.ph385 ]
  br label %.loopexit

.loopexit.loopexit126:                            ; preds = %.lr.ph388
  %.14356.ph127 = phi i32* [ %81, %.lr.ph388 ]
  %.14341.ph128 = phi i32* [ %79, %.lr.ph388 ]
  %.14326.ph129 = phi i32* [ %77, %.lr.ph388 ]
  %.14311.ph130 = phi i32 [ %75, %.lr.ph388 ]
  %.14296.ph131 = phi i32 [ %73, %.lr.ph388 ]
  %.10281.ph132 = phi i32 [ %71, %.lr.ph388 ]
  %.10270.ph133 = phi i32 [ %69, %.lr.ph388 ]
  %.11259.ph134 = phi i32 [ %67, %.lr.ph388 ]
  %.18246.ph135 = phi i32 [ %63, %.lr.ph388 ]
  %.8227.ph136 = phi i32 [ %61, %.lr.ph388 ]
  %.13218.ph137 = phi i32 [ %59, %.lr.ph388 ]
  %.14204.ph138 = phi i32 [ %57, %.lr.ph388 ]
  %.11189.ph139 = phi i32 [ %55, %.lr.ph388 ]
  %.8177.ph140 = phi i32 [ %53, %.lr.ph388 ]
  %.14168.ph141 = phi i32 [ %51, %.lr.ph388 ]
  %.14153.ph142 = phi i32 [ %49, %.lr.ph388 ]
  %.11138.ph143 = phi i32 [ %47, %.lr.ph388 ]
  %.20126.ph144 = phi i32 [ %45, %.lr.ph388 ]
  %.21105.ph145 = phi i32 [ %43, %.lr.ph388 ]
  %.2283.ph146 = phi i32 [ %41, %.lr.ph388 ]
  %.1860.ph147 = phi i32 [ %39, %.lr.ph388 ]
  %.2841.ph148 = phi i32 [ %37, %.lr.ph388 ]
  %.40.ph149 = phi i32 [ %35, %.lr.ph388 ]
  %.03.ph150 = phi i32 [ 0, %.lr.ph388 ]
  br label %.loopexit

.loopexit.loopexit151:                            ; preds = %.lr.ph391
  %.14356.ph152 = phi i32* [ %81, %.lr.ph391 ]
  %.14341.ph153 = phi i32* [ %79, %.lr.ph391 ]
  %.14326.ph154 = phi i32* [ %77, %.lr.ph391 ]
  %.14311.ph155 = phi i32 [ %75, %.lr.ph391 ]
  %.14296.ph156 = phi i32 [ %73, %.lr.ph391 ]
  %.10281.ph157 = phi i32 [ %71, %.lr.ph391 ]
  %.10270.ph158 = phi i32 [ %69, %.lr.ph391 ]
  %.11259.ph159 = phi i32 [ %67, %.lr.ph391 ]
  %.18246.ph160 = phi i32 [ %63, %.lr.ph391 ]
  %.8227.ph161 = phi i32 [ %61, %.lr.ph391 ]
  %.13218.ph162 = phi i32 [ %59, %.lr.ph391 ]
  %.14204.ph163 = phi i32 [ %57, %.lr.ph391 ]
  %.11189.ph164 = phi i32 [ %55, %.lr.ph391 ]
  %.8177.ph165 = phi i32 [ %53, %.lr.ph391 ]
  %.14168.ph166 = phi i32 [ %51, %.lr.ph391 ]
  %.14153.ph167 = phi i32 [ %49, %.lr.ph391 ]
  %.11138.ph168 = phi i32 [ %47, %.lr.ph391 ]
  %.20126.ph169 = phi i32 [ %45, %.lr.ph391 ]
  %.21105.ph170 = phi i32 [ %43, %.lr.ph391 ]
  %.2283.ph171 = phi i32 [ %41, %.lr.ph391 ]
  %.1860.ph172 = phi i32 [ %39, %.lr.ph391 ]
  %.2841.ph173 = phi i32 [ %37, %.lr.ph391 ]
  %.40.ph174 = phi i32 [ %35, %.lr.ph391 ]
  %.03.ph175 = phi i32 [ 0, %.lr.ph391 ]
  br label %.loopexit

.loopexit.loopexit176:                            ; preds = %.lr.ph394
  %.14356.ph177 = phi i32* [ %81, %.lr.ph394 ]
  %.14341.ph178 = phi i32* [ %79, %.lr.ph394 ]
  %.14326.ph179 = phi i32* [ %77, %.lr.ph394 ]
  %.14311.ph180 = phi i32 [ %75, %.lr.ph394 ]
  %.14296.ph181 = phi i32 [ %73, %.lr.ph394 ]
  %.10281.ph182 = phi i32 [ %71, %.lr.ph394 ]
  %.10270.ph183 = phi i32 [ %69, %.lr.ph394 ]
  %.11259.ph184 = phi i32 [ %67, %.lr.ph394 ]
  %.18246.ph185 = phi i32 [ %63, %.lr.ph394 ]
  %.8227.ph186 = phi i32 [ %61, %.lr.ph394 ]
  %.13218.ph187 = phi i32 [ %59, %.lr.ph394 ]
  %.14204.ph188 = phi i32 [ %57, %.lr.ph394 ]
  %.11189.ph189 = phi i32 [ %55, %.lr.ph394 ]
  %.8177.ph190 = phi i32 [ %53, %.lr.ph394 ]
  %.14168.ph191 = phi i32 [ %51, %.lr.ph394 ]
  %.14153.ph192 = phi i32 [ %49, %.lr.ph394 ]
  %.11138.ph193 = phi i32 [ %47, %.lr.ph394 ]
  %.20126.ph194 = phi i32 [ %45, %.lr.ph394 ]
  %.21105.ph195 = phi i32 [ %43, %.lr.ph394 ]
  %.2283.ph196 = phi i32 [ %41, %.lr.ph394 ]
  %.1860.ph197 = phi i32 [ %39, %.lr.ph394 ]
  %.2841.ph198 = phi i32 [ %37, %.lr.ph394 ]
  %.40.ph199 = phi i32 [ %35, %.lr.ph394 ]
  %.03.ph200 = phi i32 [ 0, %.lr.ph394 ]
  br label %.loopexit

.loopexit.loopexit201:                            ; preds = %.lr.ph397
  %.14356.ph202 = phi i32* [ %81, %.lr.ph397 ]
  %.14341.ph203 = phi i32* [ %79, %.lr.ph397 ]
  %.14326.ph204 = phi i32* [ %77, %.lr.ph397 ]
  %.14311.ph205 = phi i32 [ %75, %.lr.ph397 ]
  %.14296.ph206 = phi i32 [ %73, %.lr.ph397 ]
  %.10281.ph207 = phi i32 [ %71, %.lr.ph397 ]
  %.10270.ph208 = phi i32 [ %69, %.lr.ph397 ]
  %.11259.ph209 = phi i32 [ %67, %.lr.ph397 ]
  %.18246.ph210 = phi i32 [ %63, %.lr.ph397 ]
  %.8227.ph211 = phi i32 [ %61, %.lr.ph397 ]
  %.13218.ph212 = phi i32 [ %59, %.lr.ph397 ]
  %.14204.ph213 = phi i32 [ %57, %.lr.ph397 ]
  %.11189.ph214 = phi i32 [ %55, %.lr.ph397 ]
  %.8177.ph215 = phi i32 [ %53, %.lr.ph397 ]
  %.14168.ph216 = phi i32 [ %51, %.lr.ph397 ]
  %.14153.ph217 = phi i32 [ %49, %.lr.ph397 ]
  %.11138.ph218 = phi i32 [ %47, %.lr.ph397 ]
  %.20126.ph219 = phi i32 [ %45, %.lr.ph397 ]
  %.21105.ph220 = phi i32 [ %43, %.lr.ph397 ]
  %.2283.ph221 = phi i32 [ %41, %.lr.ph397 ]
  %.1860.ph222 = phi i32 [ %39, %.lr.ph397 ]
  %.2841.ph223 = phi i32 [ %37, %.lr.ph397 ]
  %.40.ph224 = phi i32 [ %.110, %.lr.ph397 ]
  %.03.ph225 = phi i32 [ 0, %.lr.ph397 ]
  br label %.loopexit

.loopexit.loopexit226:                            ; preds = %.lr.ph400
  %.14356.ph227 = phi i32* [ %81, %.lr.ph400 ]
  %.14341.ph228 = phi i32* [ %79, %.lr.ph400 ]
  %.14326.ph229 = phi i32* [ %77, %.lr.ph400 ]
  %.14311.ph230 = phi i32 [ %75, %.lr.ph400 ]
  %.14296.ph231 = phi i32 [ %73, %.lr.ph400 ]
  %.10281.ph232 = phi i32 [ %71, %.lr.ph400 ]
  %.10270.ph233 = phi i32 [ %69, %.lr.ph400 ]
  %.11259.ph234 = phi i32 [ %67, %.lr.ph400 ]
  %.18246.ph235 = phi i32 [ %63, %.lr.ph400 ]
  %.8227.ph236 = phi i32 [ %61, %.lr.ph400 ]
  %.13218.ph237 = phi i32 [ %59, %.lr.ph400 ]
  %.14204.ph238 = phi i32 [ %57, %.lr.ph400 ]
  %.11189.ph239 = phi i32 [ %55, %.lr.ph400 ]
  %.8177.ph240 = phi i32 [ %53, %.lr.ph400 ]
  %.14168.ph241 = phi i32 [ %51, %.lr.ph400 ]
  %.14153.ph242 = phi i32 [ %49, %.lr.ph400 ]
  %.11138.ph243 = phi i32 [ %47, %.lr.ph400 ]
  %.20126.ph244 = phi i32 [ %45, %.lr.ph400 ]
  %.21105.ph245 = phi i32 [ %43, %.lr.ph400 ]
  %.2283.ph246 = phi i32 [ %41, %.lr.ph400 ]
  %.1860.ph247 = phi i32 [ %39, %.lr.ph400 ]
  %.2841.ph248 = phi i32 [ %.215, %.lr.ph400 ]
  %.40.ph249 = phi i32 [ %.5, %.lr.ph400 ]
  %.03.ph250 = phi i32 [ 0, %.lr.ph400 ]
  br label %.loopexit

.loopexit.loopexit251:                            ; preds = %.lr.ph403
  %.14356.ph252 = phi i32* [ %81, %.lr.ph403 ]
  %.14341.ph253 = phi i32* [ %79, %.lr.ph403 ]
  %.14326.ph254 = phi i32* [ %77, %.lr.ph403 ]
  %.14311.ph255 = phi i32 [ %75, %.lr.ph403 ]
  %.14296.ph256 = phi i32 [ %73, %.lr.ph403 ]
  %.10281.ph257 = phi i32 [ %71, %.lr.ph403 ]
  %.10270.ph258 = phi i32 [ %69, %.lr.ph403 ]
  %.11259.ph259 = phi i32 [ %67, %.lr.ph403 ]
  %.18246.ph260 = phi i32 [ %63, %.lr.ph403 ]
  %.8227.ph261 = phi i32 [ %61, %.lr.ph403 ]
  %.13218.ph262 = phi i32 [ %59, %.lr.ph403 ]
  %.14204.ph263 = phi i32 [ %57, %.lr.ph403 ]
  %.11189.ph264 = phi i32 [ %55, %.lr.ph403 ]
  %.8177.ph265 = phi i32 [ %53, %.lr.ph403 ]
  %.14168.ph266 = phi i32 [ %51, %.lr.ph403 ]
  %.14153.ph267 = phi i32 [ %49, %.lr.ph403 ]
  %.11138.ph268 = phi i32 [ %47, %.lr.ph403 ]
  %.20126.ph269 = phi i32 [ %.2108, %.lr.ph403 ]
  %.21105.ph270 = phi i32 [ %.387, %.lr.ph403 ]
  %.2283.ph271 = phi i32 [ %.465, %.lr.ph403 ]
  %.1860.ph272 = phi i32 [ %39, %.lr.ph403 ]
  %.2841.ph273 = phi i32 [ %.821, %.lr.ph403 ]
  %.40.ph274 = phi i32 [ %.11, %.lr.ph403 ]
  %.03.ph275 = phi i32 [ 0, %.lr.ph403 ]
  br label %.loopexit

.loopexit.loopexit276:                            ; preds = %.lr.ph406
  %.14356.ph277 = phi i32* [ %81, %.lr.ph406 ]
  %.14341.ph278 = phi i32* [ %79, %.lr.ph406 ]
  %.14326.ph279 = phi i32* [ %77, %.lr.ph406 ]
  %.14311.ph280 = phi i32 [ %75, %.lr.ph406 ]
  %.14296.ph281 = phi i32 [ %73, %.lr.ph406 ]
  %.10281.ph282 = phi i32 [ %71, %.lr.ph406 ]
  %.10270.ph283 = phi i32 [ %69, %.lr.ph406 ]
  %.11259.ph284 = phi i32 [ %67, %.lr.ph406 ]
  %.18246.ph285 = phi i32 [ %.5233, %.lr.ph406 ]
  %.8227.ph286 = phi i32 [ %61, %.lr.ph406 ]
  %.13218.ph287 = phi i32 [ %59, %.lr.ph406 ]
  %.14204.ph288 = phi i32 [ %57, %.lr.ph406 ]
  %.11189.ph289 = phi i32 [ %55, %.lr.ph406 ]
  %.8177.ph290 = phi i32 [ %53, %.lr.ph406 ]
  %.14168.ph291 = phi i32 [ %51, %.lr.ph406 ]
  %.14153.ph292 = phi i32 [ %49, %.lr.ph406 ]
  %.11138.ph293 = phi i32 [ %47, %.lr.ph406 ]
  %.20126.ph294 = phi i32 [ %.8114, %.lr.ph406 ]
  %.21105.ph295 = phi i32 [ %.993, %.lr.ph406 ]
  %.2283.ph296 = phi i32 [ %.1071, %.lr.ph406 ]
  %.1860.ph297 = phi i32 [ %.547, %.lr.ph406 ]
  %.2841.ph298 = phi i32 [ %.1427, %.lr.ph406 ]
  %.40.ph299 = phi i32 [ %.18, %.lr.ph406 ]
  %.03.ph300 = phi i32 [ 0, %.lr.ph406 ]
  br label %.loopexit

.loopexit.loopexit301:                            ; preds = %.lr.ph409
  %.14356.ph302 = phi i32* [ %81, %.lr.ph409 ]
  %.14341.ph303 = phi i32* [ %79, %.lr.ph409 ]
  %.14326.ph304 = phi i32* [ %77, %.lr.ph409 ]
  %.14311.ph305 = phi i32 [ %75, %.lr.ph409 ]
  %.14296.ph306 = phi i32 [ %73, %.lr.ph409 ]
  %.10281.ph307 = phi i32 [ %71, %.lr.ph409 ]
  %.10270.ph308 = phi i32 [ %69, %.lr.ph409 ]
  %.11259.ph309 = phi i32 [ %67, %.lr.ph409 ]
  %.18246.ph310 = phi i32 [ %.4232, %.lr.ph409 ]
  %.8227.ph311 = phi i32 [ %61, %.lr.ph409 ]
  %.13218.ph312 = phi i32 [ %59, %.lr.ph409 ]
  %.14204.ph313 = phi i32 [ %57, %.lr.ph409 ]
  %.11189.ph314 = phi i32 [ %55, %.lr.ph409 ]
  %.8177.ph315 = phi i32 [ %53, %.lr.ph409 ]
  %.14168.ph316 = phi i32 [ %51, %.lr.ph409 ]
  %.14153.ph317 = phi i32 [ %49, %.lr.ph409 ]
  %.11138.ph318 = phi i32 [ %47, %.lr.ph409 ]
  %.20126.ph319 = phi i32 [ %.7113, %.lr.ph409 ]
  %.21105.ph320 = phi i32 [ %.892, %.lr.ph409 ]
  %.2283.ph321 = phi i32 [ %.970, %.lr.ph409 ]
  %.1860.ph322 = phi i32 [ %.446, %.lr.ph409 ]
  %.2841.ph323 = phi i32 [ %.1326, %.lr.ph409 ]
  %.40.ph324 = phi i32 [ %.1712, %.lr.ph409 ]
  %.03.ph325 = phi i32 [ 0, %.lr.ph409 ]
  br label %.loopexit

.loopexit.loopexit326:                            ; preds = %.lr.ph412
  %.14356.ph327 = phi i32* [ %81, %.lr.ph412 ]
  %.14341.ph328 = phi i32* [ %79, %.lr.ph412 ]
  %.14326.ph329 = phi i32* [ %77, %.lr.ph412 ]
  %.14311.ph330 = phi i32 [ %75, %.lr.ph412 ]
  %.14296.ph331 = phi i32 [ %73, %.lr.ph412 ]
  %.10281.ph332 = phi i32 [ %71, %.lr.ph412 ]
  %.10270.ph333 = phi i32 [ %69, %.lr.ph412 ]
  %.11259.ph334 = phi i32 [ %67, %.lr.ph412 ]
  %.18246.ph335 = phi i32 [ %.1229, %.lr.ph412 ]
  %.8227.ph336 = phi i32 [ %61, %.lr.ph412 ]
  %.13218.ph337 = phi i32 [ %59, %.lr.ph412 ]
  %.14204.ph338 = phi i32 [ %57, %.lr.ph412 ]
  %.11189.ph339 = phi i32 [ %55, %.lr.ph412 ]
  %.8177.ph340 = phi i32 [ %53, %.lr.ph412 ]
  %.14168.ph341 = phi i32 [ %51, %.lr.ph412 ]
  %.14153.ph342 = phi i32 [ %49, %.lr.ph412 ]
  %.11138.ph343 = phi i32 [ %47, %.lr.ph412 ]
  %.20126.ph344 = phi i32 [ %.4110, %.lr.ph412 ]
  %.21105.ph345 = phi i32 [ %.589, %.lr.ph412 ]
  %.2283.ph346 = phi i32 [ %.667, %.lr.ph412 ]
  %.1860.ph347 = phi i32 [ %.143, %.lr.ph412 ]
  %.2841.ph348 = phi i32 [ %.1023, %.lr.ph412 ]
  %.40.ph349 = phi i32 [ %.14, %.lr.ph412 ]
  %.03.ph350 = phi i32 [ 0, %.lr.ph412 ]
  br label %.loopexit

.loopexit.loopexit351split:                       ; preds = %.preheader352
  br label %.loopexit.loopexit351

..loopexit.loopexit351_crit_edge:                 ; preds = %2948
  br label %.loopexit.loopexit351

.loopexit.loopexit351:                            ; preds = %.loopexit.loopexit351split, %..loopexit.loopexit351_crit_edge
  %indvars.iv431.lcssa = phi i64 [ %indvars.iv431, %..loopexit.loopexit351_crit_edge ], [ %indvars.iv431, %.loopexit.loopexit351split ]
  %.14356.ph352 = phi i32* [ %.4346, %..loopexit.loopexit351_crit_edge ], [ %.4346, %.loopexit.loopexit351split ]
  %.14341.ph353 = phi i32* [ %.4331, %..loopexit.loopexit351_crit_edge ], [ %.4331, %.loopexit.loopexit351split ]
  %.14326.ph354 = phi i32* [ %.4316, %..loopexit.loopexit351_crit_edge ], [ %.4316, %.loopexit.loopexit351split ]
  %.14311.ph355 = phi i32 [ %.4301, %..loopexit.loopexit351_crit_edge ], [ %.4301, %.loopexit.loopexit351split ]
  %.14296.ph356 = phi i32 [ %.4286, %..loopexit.loopexit351_crit_edge ], [ %.4286, %.loopexit.loopexit351split ]
  %.10281.ph357 = phi i32 [ %.2273, %..loopexit.loopexit351_crit_edge ], [ %.2273, %.loopexit.loopexit351split ]
  %.10270.ph358 = phi i32 [ %.2262, %..loopexit.loopexit351_crit_edge ], [ %.2262, %.loopexit.loopexit351split ]
  %.11259.ph359 = phi i32 [ %.3251, %..loopexit.loopexit351_crit_edge ], [ %.3251, %.loopexit.loopexit351split ]
  %.18246.ph360 = phi i32 [ %.10238, %..loopexit.loopexit351_crit_edge ], [ %.10238, %.loopexit.loopexit351split ]
  %.8227.ph361 = phi i32 [ %.0219, %..loopexit.loopexit351_crit_edge ], [ %.0219, %.loopexit.loopexit351split ]
  %.13218.ph362 = phi i32 [ %.0205, %..loopexit.loopexit351_crit_edge ], [ %.0205, %.loopexit.loopexit351split ]
  %.14204.ph363 = phi i32 [ %.3193, %..loopexit.loopexit351_crit_edge ], [ %.3193, %.loopexit.loopexit351split ]
  %.11189.ph364 = phi i32 [ %.3181, %..loopexit.loopexit351_crit_edge ], [ %.3181, %.loopexit.loopexit351split ]
  %.8177.ph365 = phi i32 [ %.0169, %..loopexit.loopexit351_crit_edge ], [ %.0169, %.loopexit.loopexit351split ]
  %.14168.ph366 = phi i32 [ %.4158, %..loopexit.loopexit351_crit_edge ], [ %.4158, %.loopexit.loopexit351split ]
  %.14153.ph367 = phi i32 [ %.4143, %..loopexit.loopexit351_crit_edge ], [ %.4143, %.loopexit.loopexit351split ]
  %.11138.ph368 = phi i32 [ %.3130, %..loopexit.loopexit351_crit_edge ], [ %.3130, %.loopexit.loopexit351split ]
  %.20126.ph369 = phi i32 [ %.12118, %..loopexit.loopexit351_crit_edge ], [ %.12118, %.loopexit.loopexit351split ]
  %.21105.ph370 = phi i32 [ %.1397, %..loopexit.loopexit351_crit_edge ], [ %.1397, %.loopexit.loopexit351split ]
  %.2283.ph371 = phi i32 [ %.1475, %..loopexit.loopexit351_crit_edge ], [ %.1475, %.loopexit.loopexit351split ]
  %.1860.ph372 = phi i32 [ %.1052, %..loopexit.loopexit351_crit_edge ], [ %.1052, %.loopexit.loopexit351split ]
  %.2841.ph373 = phi i32 [ %.1831, %..loopexit.loopexit351_crit_edge ], [ %.1831, %.loopexit.loopexit351split ]
  %.03.ph375 = phi i32 [ -4, %..loopexit.loopexit351_crit_edge ], [ -4, %.loopexit.loopexit351split ]
  %3989 = trunc i64 %indvars.iv431.lcssa to i32
  br label %.loopexit

.loopexit.loopexit376:                            ; preds = %.lr.ph463
  %.14356.ph377 = phi i32* [ %.9351, %.lr.ph463 ]
  %.14341.ph378 = phi i32* [ %.9336, %.lr.ph463 ]
  %.14326.ph379 = phi i32* [ %.9321, %.lr.ph463 ]
  %.14311.ph380 = phi i32 [ %.9306, %.lr.ph463 ]
  %.14296.ph381 = phi i32 [ %.9291, %.lr.ph463 ]
  %.10281.ph382 = phi i32 [ %.6277, %.lr.ph463 ]
  %.10270.ph383 = phi i32 [ %.6266, %.lr.ph463 ]
  %.11259.ph384 = phi i32 [ %.7255, %.lr.ph463 ]
  %.18246.ph385 = phi i32 [ %.14242, %.lr.ph463 ]
  %.8227.ph386 = phi i32 [ %.4223, %.lr.ph463 ]
  %.13218.ph387 = phi i32 [ %.6211, %.lr.ph463 ]
  %.14204.ph388 = phi i32 [ %.7197, %.lr.ph463 ]
  %.11189.ph389 = phi i32 [ %.7185, %.lr.ph463 ]
  %.8177.ph390 = phi i32 [ %.4173, %.lr.ph463 ]
  %.14168.ph391 = phi i32 [ %.9163, %.lr.ph463 ]
  %.14153.ph392 = phi i32 [ %.9148, %.lr.ph463 ]
  %.11138.ph393 = phi i32 [ %.7134, %.lr.ph463 ]
  %.20126.ph394 = phi i32 [ %.16122, %.lr.ph463 ]
  %.21105.ph395 = phi i32 [ %.17101, %.lr.ph463 ]
  %.2283.ph396 = phi i32 [ %.1879, %.lr.ph463 ]
  %.1860.ph397 = phi i32 [ %.1456, %.lr.ph463 ]
  %.2841.ph398 = phi i32 [ %.2235, %.lr.ph463 ]
  %.40.ph399 = phi i32 [ %.28, %.lr.ph463 ]
  %.03.ph400 = phi i32 [ 0, %.lr.ph463 ]
  br label %.loopexit

.loopexit.loopexit401:                            ; preds = %.lr.ph466
  %.14356.ph402 = phi i32* [ %.7349, %.lr.ph466 ]
  %.14341.ph403 = phi i32* [ %.7334, %.lr.ph466 ]
  %.14326.ph404 = phi i32* [ %.7319, %.lr.ph466 ]
  %.14311.ph405 = phi i32 [ %.7304, %.lr.ph466 ]
  %.14296.ph406 = phi i32 [ %.7289, %.lr.ph466 ]
  %.10281.ph407 = phi i32 [ %.4275, %.lr.ph466 ]
  %.10270.ph408 = phi i32 [ %.4264, %.lr.ph466 ]
  %.11259.ph409 = phi i32 [ %.5253, %.lr.ph466 ]
  %.18246.ph410 = phi i32 [ %.12240, %.lr.ph466 ]
  %.8227.ph411 = phi i32 [ %.2221, %.lr.ph466 ]
  %.13218.ph412 = phi i32 [ %.4209, %.lr.ph466 ]
  %.14204.ph413 = phi i32 [ %.5195, %.lr.ph466 ]
  %.11189.ph414 = phi i32 [ %.5183, %.lr.ph466 ]
  %.8177.ph415 = phi i32 [ %.2171, %.lr.ph466 ]
  %.14168.ph416 = phi i32 [ %.7161, %.lr.ph466 ]
  %.14153.ph417 = phi i32 [ %.7146, %.lr.ph466 ]
  %.11138.ph418 = phi i32 [ %.5132, %.lr.ph466 ]
  %.20126.ph419 = phi i32 [ %.14120, %.lr.ph466 ]
  %.21105.ph420 = phi i32 [ %.1599, %.lr.ph466 ]
  %.2283.ph421 = phi i32 [ %.1677, %.lr.ph466 ]
  %.1860.ph422 = phi i32 [ %.1254, %.lr.ph466 ]
  %.2841.ph423 = phi i32 [ %.2033, %.lr.ph466 ]
  %.40.ph424 = phi i32 [ %.26, %.lr.ph466 ]
  %.03.ph425 = phi i32 [ 0, %.lr.ph466 ]
  br label %.loopexit

.loopexit.loopexit426:                            ; preds = %.lr.ph469
  %.14356.ph427 = phi i32* [ %.13355, %.lr.ph469 ]
  %.14341.ph428 = phi i32* [ %.13340, %.lr.ph469 ]
  %.14326.ph429 = phi i32* [ %.13325, %.lr.ph469 ]
  %.14311.ph430 = phi i32 [ %.13310, %.lr.ph469 ]
  %.14296.ph431 = phi i32 [ %.13295, %.lr.ph469 ]
  %.10281.ph432 = phi i32 [ %.9280, %.lr.ph469 ]
  %.10270.ph433 = phi i32 [ %.9269, %.lr.ph469 ]
  %.11259.ph434 = phi i32 [ %.10258, %.lr.ph469 ]
  %.18246.ph435 = phi i32 [ %.17245, %.lr.ph469 ]
  %.8227.ph436 = phi i32 [ %.7226, %.lr.ph469 ]
  %.13218.ph437 = phi i32 [ %.12217, %.lr.ph469 ]
  %.14204.ph438 = phi i32 [ %.13203, %.lr.ph469 ]
  %.11189.ph439 = phi i32 [ %.10188, %.lr.ph469 ]
  %.8177.ph440 = phi i32 [ %.7176, %.lr.ph469 ]
  %.14168.ph441 = phi i32 [ %.13167, %.lr.ph469 ]
  %.14153.ph442 = phi i32 [ %.13152, %.lr.ph469 ]
  %.11138.ph443 = phi i32 [ %.10137, %.lr.ph469 ]
  %.20126.ph444 = phi i32 [ %.19125, %.lr.ph469 ]
  %.21105.ph445 = phi i32 [ %.20104, %.lr.ph469 ]
  %.2283.ph446 = phi i32 [ %.2182, %.lr.ph469 ]
  %.1860.ph447 = phi i32 [ %.1759, %.lr.ph469 ]
  %.2841.ph448 = phi i32 [ %.2538, %.lr.ph469 ]
  %.40.ph449 = phi i32 [ %.31, %.lr.ph469 ]
  %.03.ph450 = phi i32 [ 0, %.lr.ph469 ]
  br label %.loopexit

.loopexit.loopexit451:                            ; preds = %.lr.ph472
  %.14356.ph452 = phi i32* [ %.11353, %.lr.ph472 ]
  %.14341.ph453 = phi i32* [ %.11338, %.lr.ph472 ]
  %.14326.ph454 = phi i32* [ %.11323, %.lr.ph472 ]
  %.14311.ph455 = phi i32 [ %.11308, %.lr.ph472 ]
  %.14296.ph456 = phi i32 [ %.11293, %.lr.ph472 ]
  %.10281.ph457 = phi i32 [ %.7278, %.lr.ph472 ]
  %.10270.ph458 = phi i32 [ %.7267, %.lr.ph472 ]
  %.11259.ph459 = phi i32 [ %.8256, %.lr.ph472 ]
  %.18246.ph460 = phi i32 [ %.15243, %.lr.ph472 ]
  %.8227.ph461 = phi i32 [ %.5224, %.lr.ph472 ]
  %.13218.ph462 = phi i32 [ %.10215, %.lr.ph472 ]
  %.14204.ph463 = phi i32 [ %.11201, %.lr.ph472 ]
  %.11189.ph464 = phi i32 [ %.8186, %.lr.ph472 ]
  %.8177.ph465 = phi i32 [ %.5174, %.lr.ph472 ]
  %.14168.ph466 = phi i32 [ %.11165, %.lr.ph472 ]
  %.14153.ph467 = phi i32 [ %.11150, %.lr.ph472 ]
  %.11138.ph468 = phi i32 [ %.8135, %.lr.ph472 ]
  %.20126.ph469 = phi i32 [ %.17123, %.lr.ph472 ]
  %.21105.ph470 = phi i32 [ %.18102, %.lr.ph472 ]
  %.2283.ph471 = phi i32 [ %.1980, %.lr.ph472 ]
  %.1860.ph472 = phi i32 [ %.1557, %.lr.ph472 ]
  %.2841.ph473 = phi i32 [ %.2336, %.lr.ph472 ]
  %.40.ph474 = phi i32 [ %.29, %.lr.ph472 ]
  %.03.ph475 = phi i32 [ 0, %.lr.ph472 ]
  br label %.loopexit

.loopexit.loopexit476:                            ; preds = %.lr.ph508
  %.14356.ph477 = phi i32* [ %.3345, %.lr.ph508 ]
  %.14341.ph478 = phi i32* [ %.3330, %.lr.ph508 ]
  %.14326.ph479 = phi i32* [ %.3315, %.lr.ph508 ]
  %.14311.ph480 = phi i32 [ %.3300, %.lr.ph508 ]
  %.14296.ph481 = phi i32 [ %.3285, %.lr.ph508 ]
  %.10281.ph482 = phi i32 [ %.1272, %.lr.ph508 ]
  %.10270.ph483 = phi i32 [ %.1261, %.lr.ph508 ]
  %.11259.ph484 = phi i32 [ %.2250, %.lr.ph508 ]
  %.18246.ph485 = phi i32 [ %.9237, %.lr.ph508 ]
  %.8227.ph486 = phi i32 [ %61, %.lr.ph508 ]
  %.13218.ph487 = phi i32 [ %59, %.lr.ph508 ]
  %.14204.ph488 = phi i32 [ %.2192, %.lr.ph508 ]
  %.11189.ph489 = phi i32 [ %.2180, %.lr.ph508 ]
  %.8177.ph490 = phi i32 [ %53, %.lr.ph508 ]
  %.14168.ph491 = phi i32 [ %.3157, %.lr.ph508 ]
  %.14153.ph492 = phi i32 [ %.3142, %.lr.ph508 ]
  %.11138.ph493 = phi i32 [ %.2129, %.lr.ph508 ]
  %.20126.ph494 = phi i32 [ %.11117, %.lr.ph508 ]
  %.21105.ph495 = phi i32 [ %.1296, %.lr.ph508 ]
  %.2283.ph496 = phi i32 [ %.1374, %.lr.ph508 ]
  %.1860.ph497 = phi i32 [ %.951, %.lr.ph508 ]
  %.2841.ph498 = phi i32 [ %.1730, %.lr.ph508 ]
  %.40.ph499 = phi i32 [ %.23, %.lr.ph508 ]
  %.03.ph500 = phi i32 [ 0, %.lr.ph508 ]
  br label %.loopexit

.loopexit.loopexit501:                            ; preds = %.lr.ph511
  %.14356.ph502 = phi i32* [ %.1343, %.lr.ph511 ]
  %.14341.ph503 = phi i32* [ %.1328, %.lr.ph511 ]
  %.14326.ph504 = phi i32* [ %.1313, %.lr.ph511 ]
  %.14311.ph505 = phi i32 [ %.1298, %.lr.ph511 ]
  %.14296.ph506 = phi i32 [ %.1283, %.lr.ph511 ]
  %.10281.ph507 = phi i32 [ %71, %.lr.ph511 ]
  %.10270.ph508 = phi i32 [ %69, %.lr.ph511 ]
  %.11259.ph509 = phi i32 [ %.0248, %.lr.ph511 ]
  %.18246.ph510 = phi i32 [ %.7235, %.lr.ph511 ]
  %.8227.ph511 = phi i32 [ %61, %.lr.ph511 ]
  %.13218.ph512 = phi i32 [ %59, %.lr.ph511 ]
  %.14204.ph513 = phi i32 [ %.0190, %.lr.ph511 ]
  %.11189.ph514 = phi i32 [ %.0178, %.lr.ph511 ]
  %.8177.ph515 = phi i32 [ %53, %.lr.ph511 ]
  %.14168.ph516 = phi i32 [ %.1155, %.lr.ph511 ]
  %.14153.ph517 = phi i32 [ %.1140, %.lr.ph511 ]
  %.11138.ph518 = phi i32 [ %.0127, %.lr.ph511 ]
  %.20126.ph519 = phi i32 [ %.9115, %.lr.ph511 ]
  %.21105.ph520 = phi i32 [ %.1094, %.lr.ph511 ]
  %.2283.ph521 = phi i32 [ %.1172, %.lr.ph511 ]
  %.1860.ph522 = phi i32 [ %.749, %.lr.ph511 ]
  %.2841.ph523 = phi i32 [ %.1528, %.lr.ph511 ]
  %.40.ph524 = phi i32 [ %.21, %.lr.ph511 ]
  %.03.ph525 = phi i32 [ 0, %.lr.ph511 ]
  br label %.loopexit

.loopexit.loopexit526:                            ; preds = %.lr.ph566
  %.14356.ph527 = phi i32* [ %81, %.lr.ph566 ]
  %.14341.ph528 = phi i32* [ %79, %.lr.ph566 ]
  %.14326.ph529 = phi i32* [ %77, %.lr.ph566 ]
  %.14311.ph530 = phi i32 [ %75, %.lr.ph566 ]
  %.14296.ph531 = phi i32 [ %73, %.lr.ph566 ]
  %.10281.ph532 = phi i32 [ %71, %.lr.ph566 ]
  %.10270.ph533 = phi i32 [ %69, %.lr.ph566 ]
  %.11259.ph534 = phi i32 [ %67, %.lr.ph566 ]
  %.18246.ph535 = phi i32 [ %63, %.lr.ph566 ]
  %.8227.ph536 = phi i32 [ %61, %.lr.ph566 ]
  %.13218.ph537 = phi i32 [ %59, %.lr.ph566 ]
  %.14204.ph538 = phi i32 [ %57, %.lr.ph566 ]
  %.11189.ph539 = phi i32 [ %55, %.lr.ph566 ]
  %.8177.ph540 = phi i32 [ %53, %.lr.ph566 ]
  %.14168.ph541 = phi i32 [ %51, %.lr.ph566 ]
  %.14153.ph542 = phi i32 [ %49, %.lr.ph566 ]
  %.11138.ph543 = phi i32 [ %47, %.lr.ph566 ]
  %.20126.ph544 = phi i32 [ %45, %.lr.ph566 ]
  %.21105.ph545 = phi i32 [ %.084, %.lr.ph566 ]
  %.2283.ph546 = phi i32 [ %.162, %.lr.ph566 ]
  %.1860.ph547 = phi i32 [ %39, %.lr.ph566 ]
  %.2841.ph548 = phi i32 [ %.518, %.lr.ph566 ]
  %.40.ph549 = phi i32 [ %.8, %.lr.ph566 ]
  %.03.ph550 = phi i32 [ 0, %.lr.ph566 ]
  br label %.loopexit

.loopexit.loopexit551:                            ; preds = %.lr.ph569
  %.14356.ph552 = phi i32* [ %81, %.lr.ph569 ]
  %.14341.ph553 = phi i32* [ %79, %.lr.ph569 ]
  %.14326.ph554 = phi i32* [ %77, %.lr.ph569 ]
  %.14311.ph555 = phi i32 [ %75, %.lr.ph569 ]
  %.14296.ph556 = phi i32 [ %73, %.lr.ph569 ]
  %.10281.ph557 = phi i32 [ %71, %.lr.ph569 ]
  %.10270.ph558 = phi i32 [ %69, %.lr.ph569 ]
  %.11259.ph559 = phi i32 [ %67, %.lr.ph569 ]
  %.18246.ph560 = phi i32 [ %63, %.lr.ph569 ]
  %.8227.ph561 = phi i32 [ %61, %.lr.ph569 ]
  %.13218.ph562 = phi i32 [ %59, %.lr.ph569 ]
  %.14204.ph563 = phi i32 [ %57, %.lr.ph569 ]
  %.11189.ph564 = phi i32 [ %55, %.lr.ph569 ]
  %.8177.ph565 = phi i32 [ %53, %.lr.ph569 ]
  %.14168.ph566 = phi i32 [ %51, %.lr.ph569 ]
  %.14153.ph567 = phi i32 [ %49, %.lr.ph569 ]
  %.11138.ph568 = phi i32 [ %47, %.lr.ph569 ]
  %.20126.ph569 = phi i32 [ %45, %.lr.ph569 ]
  %.21105.ph570 = phi i32 [ %43, %.lr.ph569 ]
  %.2283.ph571 = phi i32 [ %.061, %.lr.ph569 ]
  %.1860.ph572 = phi i32 [ %39, %.lr.ph569 ]
  %.2841.ph573 = phi i32 [ %.417, %.lr.ph569 ]
  %.40.ph574 = phi i32 [ %.7, %.lr.ph569 ]
  %.03.ph575 = phi i32 [ 0, %.lr.ph569 ]
  br label %.loopexit

.loopexit.loopexit576:                            ; preds = %.lr.ph576
  %.14356.ph577 = phi i32* [ %81, %.lr.ph576 ]
  %.14341.ph578 = phi i32* [ %79, %.lr.ph576 ]
  %.14326.ph579 = phi i32* [ %77, %.lr.ph576 ]
  %.14311.ph580 = phi i32 [ %75, %.lr.ph576 ]
  %.14296.ph581 = phi i32 [ %73, %.lr.ph576 ]
  %.10281.ph582 = phi i32 [ %71, %.lr.ph576 ]
  %.10270.ph583 = phi i32 [ %69, %.lr.ph576 ]
  %.11259.ph584 = phi i32 [ %67, %.lr.ph576 ]
  %.18246.ph585 = phi i32 [ %63, %.lr.ph576 ]
  %.8227.ph586 = phi i32 [ %61, %.lr.ph576 ]
  %.13218.ph587 = phi i32 [ %59, %.lr.ph576 ]
  %.14204.ph588 = phi i32 [ %57, %.lr.ph576 ]
  %.11189.ph589 = phi i32 [ %55, %.lr.ph576 ]
  %.8177.ph590 = phi i32 [ %53, %.lr.ph576 ]
  %.14168.ph591 = phi i32 [ %51, %.lr.ph576 ]
  %.14153.ph592 = phi i32 [ %49, %.lr.ph576 ]
  %.11138.ph593 = phi i32 [ %47, %.lr.ph576 ]
  %.20126.ph594 = phi i32 [ %45, %.lr.ph576 ]
  %.21105.ph595 = phi i32 [ %43, %.lr.ph576 ]
  %.2283.ph596 = phi i32 [ %41, %.lr.ph576 ]
  %.1860.ph597 = phi i32 [ %39, %.lr.ph576 ]
  %.2841.ph598 = phi i32 [ %37, %.lr.ph576 ]
  %.40.ph599 = phi i32 [ %35, %.lr.ph576 ]
  %.03.ph600 = phi i32 [ 0, %.lr.ph576 ]
  br label %.loopexit

.loopexit.loopexit601:                            ; preds = %.lr.ph579
  %.14356.ph602 = phi i32* [ %81, %.lr.ph579 ]
  %.14341.ph603 = phi i32* [ %79, %.lr.ph579 ]
  %.14326.ph604 = phi i32* [ %77, %.lr.ph579 ]
  %.14311.ph605 = phi i32 [ %75, %.lr.ph579 ]
  %.14296.ph606 = phi i32 [ %73, %.lr.ph579 ]
  %.10281.ph607 = phi i32 [ %71, %.lr.ph579 ]
  %.10270.ph608 = phi i32 [ %69, %.lr.ph579 ]
  %.11259.ph609 = phi i32 [ %67, %.lr.ph579 ]
  %.18246.ph610 = phi i32 [ %63, %.lr.ph579 ]
  %.8227.ph611 = phi i32 [ %61, %.lr.ph579 ]
  %.13218.ph612 = phi i32 [ %59, %.lr.ph579 ]
  %.14204.ph613 = phi i32 [ %57, %.lr.ph579 ]
  %.11189.ph614 = phi i32 [ %55, %.lr.ph579 ]
  %.8177.ph615 = phi i32 [ %53, %.lr.ph579 ]
  %.14168.ph616 = phi i32 [ %51, %.lr.ph579 ]
  %.14153.ph617 = phi i32 [ %49, %.lr.ph579 ]
  %.11138.ph618 = phi i32 [ %47, %.lr.ph579 ]
  %.20126.ph619 = phi i32 [ %45, %.lr.ph579 ]
  %.21105.ph620 = phi i32 [ %43, %.lr.ph579 ]
  %.2283.ph621 = phi i32 [ %41, %.lr.ph579 ]
  %.1860.ph622 = phi i32 [ %39, %.lr.ph579 ]
  %.2841.ph623 = phi i32 [ %37, %.lr.ph579 ]
  %.40.ph624 = phi i32 [ %35, %.lr.ph579 ]
  %.03.ph625 = phi i32 [ 0, %.lr.ph579 ]
  br label %.loopexit

.loopexit.loopexit626:                            ; preds = %.lr.ph582
  %.14356.ph627 = phi i32* [ %81, %.lr.ph582 ]
  %.14341.ph628 = phi i32* [ %79, %.lr.ph582 ]
  %.14326.ph629 = phi i32* [ %77, %.lr.ph582 ]
  %.14311.ph630 = phi i32 [ %75, %.lr.ph582 ]
  %.14296.ph631 = phi i32 [ %73, %.lr.ph582 ]
  %.10281.ph632 = phi i32 [ %71, %.lr.ph582 ]
  %.10270.ph633 = phi i32 [ %69, %.lr.ph582 ]
  %.11259.ph634 = phi i32 [ %67, %.lr.ph582 ]
  %.18246.ph635 = phi i32 [ %63, %.lr.ph582 ]
  %.8227.ph636 = phi i32 [ %61, %.lr.ph582 ]
  %.13218.ph637 = phi i32 [ %59, %.lr.ph582 ]
  %.14204.ph638 = phi i32 [ %57, %.lr.ph582 ]
  %.11189.ph639 = phi i32 [ %55, %.lr.ph582 ]
  %.8177.ph640 = phi i32 [ %53, %.lr.ph582 ]
  %.14168.ph641 = phi i32 [ %51, %.lr.ph582 ]
  %.14153.ph642 = phi i32 [ %49, %.lr.ph582 ]
  %.11138.ph643 = phi i32 [ %47, %.lr.ph582 ]
  %.20126.ph644 = phi i32 [ %45, %.lr.ph582 ]
  %.21105.ph645 = phi i32 [ %43, %.lr.ph582 ]
  %.2283.ph646 = phi i32 [ %41, %.lr.ph582 ]
  %.1860.ph647 = phi i32 [ %39, %.lr.ph582 ]
  %.2841.ph648 = phi i32 [ %37, %.lr.ph582 ]
  %.40.ph649 = phi i32 [ %35, %.lr.ph582 ]
  %.03.ph650 = phi i32 [ 0, %.lr.ph582 ]
  br label %.loopexit

.loopexit.loopexit651:                            ; preds = %.lr.ph585
  %.14356.ph652 = phi i32* [ %81, %.lr.ph585 ]
  %.14341.ph653 = phi i32* [ %79, %.lr.ph585 ]
  %.14326.ph654 = phi i32* [ %77, %.lr.ph585 ]
  %.14311.ph655 = phi i32 [ %75, %.lr.ph585 ]
  %.14296.ph656 = phi i32 [ %73, %.lr.ph585 ]
  %.10281.ph657 = phi i32 [ %71, %.lr.ph585 ]
  %.10270.ph658 = phi i32 [ %69, %.lr.ph585 ]
  %.11259.ph659 = phi i32 [ %67, %.lr.ph585 ]
  %.18246.ph660 = phi i32 [ %63, %.lr.ph585 ]
  %.8227.ph661 = phi i32 [ %61, %.lr.ph585 ]
  %.13218.ph662 = phi i32 [ %59, %.lr.ph585 ]
  %.14204.ph663 = phi i32 [ %57, %.lr.ph585 ]
  %.11189.ph664 = phi i32 [ %55, %.lr.ph585 ]
  %.8177.ph665 = phi i32 [ %53, %.lr.ph585 ]
  %.14168.ph666 = phi i32 [ %51, %.lr.ph585 ]
  %.14153.ph667 = phi i32 [ %49, %.lr.ph585 ]
  %.11138.ph668 = phi i32 [ %47, %.lr.ph585 ]
  %.20126.ph669 = phi i32 [ %45, %.lr.ph585 ]
  %.21105.ph670 = phi i32 [ %43, %.lr.ph585 ]
  %.2283.ph671 = phi i32 [ %41, %.lr.ph585 ]
  %.1860.ph672 = phi i32 [ %39, %.lr.ph585 ]
  %.2841.ph673 = phi i32 [ %37, %.lr.ph585 ]
  %.40.ph674 = phi i32 [ %35, %.lr.ph585 ]
  %.03.ph675 = phi i32 [ 0, %.lr.ph585 ]
  br label %.loopexit

.loopexit.loopexit676:                            ; preds = %.lr.ph588
  %.14356.ph677 = phi i32* [ %81, %.lr.ph588 ]
  %.14341.ph678 = phi i32* [ %79, %.lr.ph588 ]
  %.14326.ph679 = phi i32* [ %77, %.lr.ph588 ]
  %.14311.ph680 = phi i32 [ %75, %.lr.ph588 ]
  %.14296.ph681 = phi i32 [ %73, %.lr.ph588 ]
  %.10281.ph682 = phi i32 [ %71, %.lr.ph588 ]
  %.10270.ph683 = phi i32 [ %69, %.lr.ph588 ]
  %.11259.ph684 = phi i32 [ %67, %.lr.ph588 ]
  %.18246.ph685 = phi i32 [ %63, %.lr.ph588 ]
  %.8227.ph686 = phi i32 [ %61, %.lr.ph588 ]
  %.13218.ph687 = phi i32 [ %59, %.lr.ph588 ]
  %.14204.ph688 = phi i32 [ %57, %.lr.ph588 ]
  %.11189.ph689 = phi i32 [ %55, %.lr.ph588 ]
  %.8177.ph690 = phi i32 [ %53, %.lr.ph588 ]
  %.14168.ph691 = phi i32 [ %51, %.lr.ph588 ]
  %.14153.ph692 = phi i32 [ %49, %.lr.ph588 ]
  %.11138.ph693 = phi i32 [ %47, %.lr.ph588 ]
  %.20126.ph694 = phi i32 [ %45, %.lr.ph588 ]
  %.21105.ph695 = phi i32 [ %43, %.lr.ph588 ]
  %.2283.ph696 = phi i32 [ %41, %.lr.ph588 ]
  %.1860.ph697 = phi i32 [ %39, %.lr.ph588 ]
  %.2841.ph698 = phi i32 [ %37, %.lr.ph588 ]
  %.40.ph699 = phi i32 [ %35, %.lr.ph588 ]
  %.03.ph700 = phi i32 [ 0, %.lr.ph588 ]
  br label %.loopexit

.loopexit.loopexit701:                            ; preds = %.lr.ph591
  %.14356.ph702 = phi i32* [ %81, %.lr.ph591 ]
  %.14341.ph703 = phi i32* [ %79, %.lr.ph591 ]
  %.14326.ph704 = phi i32* [ %77, %.lr.ph591 ]
  %.14311.ph705 = phi i32 [ %75, %.lr.ph591 ]
  %.14296.ph706 = phi i32 [ %73, %.lr.ph591 ]
  %.10281.ph707 = phi i32 [ %71, %.lr.ph591 ]
  %.10270.ph708 = phi i32 [ %69, %.lr.ph591 ]
  %.11259.ph709 = phi i32 [ %67, %.lr.ph591 ]
  %.18246.ph710 = phi i32 [ %63, %.lr.ph591 ]
  %.8227.ph711 = phi i32 [ %61, %.lr.ph591 ]
  %.13218.ph712 = phi i32 [ %59, %.lr.ph591 ]
  %.14204.ph713 = phi i32 [ %57, %.lr.ph591 ]
  %.11189.ph714 = phi i32 [ %55, %.lr.ph591 ]
  %.8177.ph715 = phi i32 [ %53, %.lr.ph591 ]
  %.14168.ph716 = phi i32 [ %51, %.lr.ph591 ]
  %.14153.ph717 = phi i32 [ %49, %.lr.ph591 ]
  %.11138.ph718 = phi i32 [ %47, %.lr.ph591 ]
  %.20126.ph719 = phi i32 [ %45, %.lr.ph591 ]
  %.21105.ph720 = phi i32 [ %43, %.lr.ph591 ]
  %.2283.ph721 = phi i32 [ %41, %.lr.ph591 ]
  %.1860.ph722 = phi i32 [ %39, %.lr.ph591 ]
  %.2841.ph723 = phi i32 [ %37, %.lr.ph591 ]
  %.40.ph724 = phi i32 [ %35, %.lr.ph591 ]
  %.03.ph725 = phi i32 [ 0, %.lr.ph591 ]
  br label %.loopexit

.loopexit.loopexit726:                            ; preds = %.lr.ph594
  %.14356.ph727 = phi i32* [ %81, %.lr.ph594 ]
  %.14341.ph728 = phi i32* [ %79, %.lr.ph594 ]
  %.14326.ph729 = phi i32* [ %77, %.lr.ph594 ]
  %.14311.ph730 = phi i32 [ %75, %.lr.ph594 ]
  %.14296.ph731 = phi i32 [ %73, %.lr.ph594 ]
  %.10281.ph732 = phi i32 [ %71, %.lr.ph594 ]
  %.10270.ph733 = phi i32 [ %69, %.lr.ph594 ]
  %.11259.ph734 = phi i32 [ %67, %.lr.ph594 ]
  %.18246.ph735 = phi i32 [ %63, %.lr.ph594 ]
  %.8227.ph736 = phi i32 [ %61, %.lr.ph594 ]
  %.13218.ph737 = phi i32 [ %59, %.lr.ph594 ]
  %.14204.ph738 = phi i32 [ %57, %.lr.ph594 ]
  %.11189.ph739 = phi i32 [ %55, %.lr.ph594 ]
  %.8177.ph740 = phi i32 [ %53, %.lr.ph594 ]
  %.14168.ph741 = phi i32 [ %51, %.lr.ph594 ]
  %.14153.ph742 = phi i32 [ %49, %.lr.ph594 ]
  %.11138.ph743 = phi i32 [ %47, %.lr.ph594 ]
  %.20126.ph744 = phi i32 [ %45, %.lr.ph594 ]
  %.21105.ph745 = phi i32 [ %43, %.lr.ph594 ]
  %.2283.ph746 = phi i32 [ %41, %.lr.ph594 ]
  %.1860.ph747 = phi i32 [ %39, %.lr.ph594 ]
  %.2841.ph748 = phi i32 [ %37, %.lr.ph594 ]
  %.40.ph749 = phi i32 [ %35, %.lr.ph594 ]
  %.03.ph750 = phi i32 [ 0, %.lr.ph594 ]
  br label %.loopexit

.loopexit.loopexit751:                            ; preds = %.lr.ph597
  %.14356.ph752 = phi i32* [ %81, %.lr.ph597 ]
  %.14341.ph753 = phi i32* [ %79, %.lr.ph597 ]
  %.14326.ph754 = phi i32* [ %77, %.lr.ph597 ]
  %.14311.ph755 = phi i32 [ %75, %.lr.ph597 ]
  %.14296.ph756 = phi i32 [ %73, %.lr.ph597 ]
  %.10281.ph757 = phi i32 [ %71, %.lr.ph597 ]
  %.10270.ph758 = phi i32 [ %69, %.lr.ph597 ]
  %.11259.ph759 = phi i32 [ %67, %.lr.ph597 ]
  %.18246.ph760 = phi i32 [ %63, %.lr.ph597 ]
  %.8227.ph761 = phi i32 [ %61, %.lr.ph597 ]
  %.13218.ph762 = phi i32 [ %59, %.lr.ph597 ]
  %.14204.ph763 = phi i32 [ %57, %.lr.ph597 ]
  %.11189.ph764 = phi i32 [ %55, %.lr.ph597 ]
  %.8177.ph765 = phi i32 [ %53, %.lr.ph597 ]
  %.14168.ph766 = phi i32 [ %51, %.lr.ph597 ]
  %.14153.ph767 = phi i32 [ %49, %.lr.ph597 ]
  %.11138.ph768 = phi i32 [ %47, %.lr.ph597 ]
  %.20126.ph769 = phi i32 [ %45, %.lr.ph597 ]
  %.21105.ph770 = phi i32 [ %43, %.lr.ph597 ]
  %.2283.ph771 = phi i32 [ %41, %.lr.ph597 ]
  %.1860.ph772 = phi i32 [ %39, %.lr.ph597 ]
  %.2841.ph773 = phi i32 [ %37, %.lr.ph597 ]
  %.40.ph774 = phi i32 [ %35, %.lr.ph597 ]
  %.03.ph775 = phi i32 [ 0, %.lr.ph597 ]
  br label %.loopexit

.loopexit.loopexit776:                            ; preds = %.lr.ph600
  %.14356.ph777 = phi i32* [ %81, %.lr.ph600 ]
  %.14341.ph778 = phi i32* [ %79, %.lr.ph600 ]
  %.14326.ph779 = phi i32* [ %77, %.lr.ph600 ]
  %.14311.ph780 = phi i32 [ %75, %.lr.ph600 ]
  %.14296.ph781 = phi i32 [ %73, %.lr.ph600 ]
  %.10281.ph782 = phi i32 [ %71, %.lr.ph600 ]
  %.10270.ph783 = phi i32 [ %69, %.lr.ph600 ]
  %.11259.ph784 = phi i32 [ %67, %.lr.ph600 ]
  %.18246.ph785 = phi i32 [ %63, %.lr.ph600 ]
  %.8227.ph786 = phi i32 [ %61, %.lr.ph600 ]
  %.13218.ph787 = phi i32 [ %59, %.lr.ph600 ]
  %.14204.ph788 = phi i32 [ %57, %.lr.ph600 ]
  %.11189.ph789 = phi i32 [ %55, %.lr.ph600 ]
  %.8177.ph790 = phi i32 [ %53, %.lr.ph600 ]
  %.14168.ph791 = phi i32 [ %51, %.lr.ph600 ]
  %.14153.ph792 = phi i32 [ %49, %.lr.ph600 ]
  %.11138.ph793 = phi i32 [ %47, %.lr.ph600 ]
  %.20126.ph794 = phi i32 [ %45, %.lr.ph600 ]
  %.21105.ph795 = phi i32 [ %43, %.lr.ph600 ]
  %.2283.ph796 = phi i32 [ %41, %.lr.ph600 ]
  %.1860.ph797 = phi i32 [ %39, %.lr.ph600 ]
  %.2841.ph798 = phi i32 [ %37, %.lr.ph600 ]
  %.40.ph799 = phi i32 [ %35, %.lr.ph600 ]
  %.03.ph800 = phi i32 [ 0, %.lr.ph600 ]
  br label %.loopexit

.loopexit.loopexit801:                            ; preds = %.lr.ph603
  %.14356.ph802 = phi i32* [ %81, %.lr.ph603 ]
  %.14341.ph803 = phi i32* [ %79, %.lr.ph603 ]
  %.14326.ph804 = phi i32* [ %77, %.lr.ph603 ]
  %.14311.ph805 = phi i32 [ %75, %.lr.ph603 ]
  %.14296.ph806 = phi i32 [ %73, %.lr.ph603 ]
  %.10281.ph807 = phi i32 [ %71, %.lr.ph603 ]
  %.10270.ph808 = phi i32 [ %69, %.lr.ph603 ]
  %.11259.ph809 = phi i32 [ %67, %.lr.ph603 ]
  %.18246.ph810 = phi i32 [ %63, %.lr.ph603 ]
  %.8227.ph811 = phi i32 [ %61, %.lr.ph603 ]
  %.13218.ph812 = phi i32 [ %59, %.lr.ph603 ]
  %.14204.ph813 = phi i32 [ %57, %.lr.ph603 ]
  %.11189.ph814 = phi i32 [ %55, %.lr.ph603 ]
  %.8177.ph815 = phi i32 [ %53, %.lr.ph603 ]
  %.14168.ph816 = phi i32 [ %51, %.lr.ph603 ]
  %.14153.ph817 = phi i32 [ %49, %.lr.ph603 ]
  %.11138.ph818 = phi i32 [ %47, %.lr.ph603 ]
  %.20126.ph819 = phi i32 [ %45, %.lr.ph603 ]
  %.21105.ph820 = phi i32 [ %43, %.lr.ph603 ]
  %.2283.ph821 = phi i32 [ %41, %.lr.ph603 ]
  %.1860.ph822 = phi i32 [ %39, %.lr.ph603 ]
  %.2841.ph823 = phi i32 [ %37, %.lr.ph603 ]
  %.40.ph824 = phi i32 [ %35, %.lr.ph603 ]
  %.03.ph825 = phi i32 [ 0, %.lr.ph603 ]
  br label %.loopexit

.loopexit.loopexit826:                            ; preds = %.lr.ph606
  %.14356.ph827 = phi i32* [ %81, %.lr.ph606 ]
  %.14341.ph828 = phi i32* [ %79, %.lr.ph606 ]
  %.14326.ph829 = phi i32* [ %77, %.lr.ph606 ]
  %.14311.ph830 = phi i32 [ %75, %.lr.ph606 ]
  %.14296.ph831 = phi i32 [ %73, %.lr.ph606 ]
  %.10281.ph832 = phi i32 [ %71, %.lr.ph606 ]
  %.10270.ph833 = phi i32 [ %69, %.lr.ph606 ]
  %.11259.ph834 = phi i32 [ %67, %.lr.ph606 ]
  %.18246.ph835 = phi i32 [ %63, %.lr.ph606 ]
  %.8227.ph836 = phi i32 [ %61, %.lr.ph606 ]
  %.13218.ph837 = phi i32 [ %59, %.lr.ph606 ]
  %.14204.ph838 = phi i32 [ %57, %.lr.ph606 ]
  %.11189.ph839 = phi i32 [ %55, %.lr.ph606 ]
  %.8177.ph840 = phi i32 [ %53, %.lr.ph606 ]
  %.14168.ph841 = phi i32 [ %51, %.lr.ph606 ]
  %.14153.ph842 = phi i32 [ %49, %.lr.ph606 ]
  %.11138.ph843 = phi i32 [ %47, %.lr.ph606 ]
  %.20126.ph844 = phi i32 [ %45, %.lr.ph606 ]
  %.21105.ph845 = phi i32 [ %43, %.lr.ph606 ]
  %.2283.ph846 = phi i32 [ %41, %.lr.ph606 ]
  %.1860.ph847 = phi i32 [ %39, %.lr.ph606 ]
  %.2841.ph848 = phi i32 [ %37, %.lr.ph606 ]
  %.40.ph849 = phi i32 [ %35, %.lr.ph606 ]
  %.03.ph850 = phi i32 [ 0, %.lr.ph606 ]
  br label %.loopexit

.loopexit.loopexit851:                            ; preds = %.lr.ph609
  %.14356.ph852 = phi i32* [ %81, %.lr.ph609 ]
  %.14341.ph853 = phi i32* [ %79, %.lr.ph609 ]
  %.14326.ph854 = phi i32* [ %77, %.lr.ph609 ]
  %.14311.ph855 = phi i32 [ %75, %.lr.ph609 ]
  %.14296.ph856 = phi i32 [ %73, %.lr.ph609 ]
  %.10281.ph857 = phi i32 [ %71, %.lr.ph609 ]
  %.10270.ph858 = phi i32 [ %69, %.lr.ph609 ]
  %.11259.ph859 = phi i32 [ %67, %.lr.ph609 ]
  %.18246.ph860 = phi i32 [ %63, %.lr.ph609 ]
  %.8227.ph861 = phi i32 [ %61, %.lr.ph609 ]
  %.13218.ph862 = phi i32 [ %59, %.lr.ph609 ]
  %.14204.ph863 = phi i32 [ %57, %.lr.ph609 ]
  %.11189.ph864 = phi i32 [ %55, %.lr.ph609 ]
  %.8177.ph865 = phi i32 [ %53, %.lr.ph609 ]
  %.14168.ph866 = phi i32 [ %51, %.lr.ph609 ]
  %.14153.ph867 = phi i32 [ %49, %.lr.ph609 ]
  %.11138.ph868 = phi i32 [ %47, %.lr.ph609 ]
  %.20126.ph869 = phi i32 [ %45, %.lr.ph609 ]
  %.21105.ph870 = phi i32 [ %43, %.lr.ph609 ]
  %.2283.ph871 = phi i32 [ %41, %.lr.ph609 ]
  %.1860.ph872 = phi i32 [ %39, %.lr.ph609 ]
  %.2841.ph873 = phi i32 [ %37, %.lr.ph609 ]
  %.40.ph874 = phi i32 [ %35, %.lr.ph609 ]
  %.03.ph875 = phi i32 [ 0, %.lr.ph609 ]
  br label %.loopexit

.loopexit.loopexit876:                            ; preds = %.lr.ph612
  %.14356.ph877 = phi i32* [ %81, %.lr.ph612 ]
  %.14341.ph878 = phi i32* [ %79, %.lr.ph612 ]
  %.14326.ph879 = phi i32* [ %77, %.lr.ph612 ]
  %.14311.ph880 = phi i32 [ %75, %.lr.ph612 ]
  %.14296.ph881 = phi i32 [ %73, %.lr.ph612 ]
  %.10281.ph882 = phi i32 [ %71, %.lr.ph612 ]
  %.10270.ph883 = phi i32 [ %69, %.lr.ph612 ]
  %.11259.ph884 = phi i32 [ %67, %.lr.ph612 ]
  %.18246.ph885 = phi i32 [ %63, %.lr.ph612 ]
  %.8227.ph886 = phi i32 [ %61, %.lr.ph612 ]
  %.13218.ph887 = phi i32 [ %59, %.lr.ph612 ]
  %.14204.ph888 = phi i32 [ %57, %.lr.ph612 ]
  %.11189.ph889 = phi i32 [ %55, %.lr.ph612 ]
  %.8177.ph890 = phi i32 [ %53, %.lr.ph612 ]
  %.14168.ph891 = phi i32 [ %51, %.lr.ph612 ]
  %.14153.ph892 = phi i32 [ %49, %.lr.ph612 ]
  %.11138.ph893 = phi i32 [ %47, %.lr.ph612 ]
  %.20126.ph894 = phi i32 [ %45, %.lr.ph612 ]
  %.21105.ph895 = phi i32 [ %43, %.lr.ph612 ]
  %.2283.ph896 = phi i32 [ %41, %.lr.ph612 ]
  %.1860.ph897 = phi i32 [ %39, %.lr.ph612 ]
  %.2841.ph898 = phi i32 [ %37, %.lr.ph612 ]
  %.40.ph899 = phi i32 [ %35, %.lr.ph612 ]
  %.03.ph900 = phi i32 [ 0, %.lr.ph612 ]
  br label %.loopexit

.loopexit.loopexit901:                            ; preds = %.lr.ph615
  %.14356.ph902 = phi i32* [ %81, %.lr.ph615 ]
  %.14341.ph903 = phi i32* [ %79, %.lr.ph615 ]
  %.14326.ph904 = phi i32* [ %77, %.lr.ph615 ]
  %.14311.ph905 = phi i32 [ %75, %.lr.ph615 ]
  %.14296.ph906 = phi i32 [ %73, %.lr.ph615 ]
  %.10281.ph907 = phi i32 [ %71, %.lr.ph615 ]
  %.10270.ph908 = phi i32 [ %69, %.lr.ph615 ]
  %.11259.ph909 = phi i32 [ %67, %.lr.ph615 ]
  %.18246.ph910 = phi i32 [ %63, %.lr.ph615 ]
  %.8227.ph911 = phi i32 [ %61, %.lr.ph615 ]
  %.13218.ph912 = phi i32 [ %59, %.lr.ph615 ]
  %.14204.ph913 = phi i32 [ %57, %.lr.ph615 ]
  %.11189.ph914 = phi i32 [ %55, %.lr.ph615 ]
  %.8177.ph915 = phi i32 [ %53, %.lr.ph615 ]
  %.14168.ph916 = phi i32 [ %51, %.lr.ph615 ]
  %.14153.ph917 = phi i32 [ %49, %.lr.ph615 ]
  %.11138.ph918 = phi i32 [ %47, %.lr.ph615 ]
  %.20126.ph919 = phi i32 [ %45, %.lr.ph615 ]
  %.21105.ph920 = phi i32 [ %43, %.lr.ph615 ]
  %.2283.ph921 = phi i32 [ %41, %.lr.ph615 ]
  %.1860.ph922 = phi i32 [ %39, %.lr.ph615 ]
  %.2841.ph923 = phi i32 [ %37, %.lr.ph615 ]
  %.40.ph924 = phi i32 [ %35, %.lr.ph615 ]
  %.03.ph925 = phi i32 [ 0, %.lr.ph615 ]
  br label %.loopexit

.loopexit.loopexit926:                            ; preds = %.lr.ph618
  %.14356.ph927 = phi i32* [ %81, %.lr.ph618 ]
  %.14341.ph928 = phi i32* [ %79, %.lr.ph618 ]
  %.14326.ph929 = phi i32* [ %77, %.lr.ph618 ]
  %.14311.ph930 = phi i32 [ %75, %.lr.ph618 ]
  %.14296.ph931 = phi i32 [ %73, %.lr.ph618 ]
  %.10281.ph932 = phi i32 [ %71, %.lr.ph618 ]
  %.10270.ph933 = phi i32 [ %69, %.lr.ph618 ]
  %.11259.ph934 = phi i32 [ %67, %.lr.ph618 ]
  %.18246.ph935 = phi i32 [ %63, %.lr.ph618 ]
  %.8227.ph936 = phi i32 [ %61, %.lr.ph618 ]
  %.13218.ph937 = phi i32 [ %59, %.lr.ph618 ]
  %.14204.ph938 = phi i32 [ %57, %.lr.ph618 ]
  %.11189.ph939 = phi i32 [ %55, %.lr.ph618 ]
  %.8177.ph940 = phi i32 [ %53, %.lr.ph618 ]
  %.14168.ph941 = phi i32 [ %51, %.lr.ph618 ]
  %.14153.ph942 = phi i32 [ %49, %.lr.ph618 ]
  %.11138.ph943 = phi i32 [ %47, %.lr.ph618 ]
  %.20126.ph944 = phi i32 [ %45, %.lr.ph618 ]
  %.21105.ph945 = phi i32 [ %43, %.lr.ph618 ]
  %.2283.ph946 = phi i32 [ %41, %.lr.ph618 ]
  %.1860.ph947 = phi i32 [ %39, %.lr.ph618 ]
  %.2841.ph948 = phi i32 [ %37, %.lr.ph618 ]
  %.40.ph949 = phi i32 [ %35, %.lr.ph618 ]
  %.03.ph950 = phi i32 [ 0, %.lr.ph618 ]
  br label %.loopexit

.loopexit.loopexit951:                            ; preds = %.lr.ph621
  %.14356.ph952 = phi i32* [ %81, %.lr.ph621 ]
  %.14341.ph953 = phi i32* [ %79, %.lr.ph621 ]
  %.14326.ph954 = phi i32* [ %77, %.lr.ph621 ]
  %.14311.ph955 = phi i32 [ %75, %.lr.ph621 ]
  %.14296.ph956 = phi i32 [ %73, %.lr.ph621 ]
  %.10281.ph957 = phi i32 [ %71, %.lr.ph621 ]
  %.10270.ph958 = phi i32 [ %69, %.lr.ph621 ]
  %.11259.ph959 = phi i32 [ %67, %.lr.ph621 ]
  %.18246.ph960 = phi i32 [ %63, %.lr.ph621 ]
  %.8227.ph961 = phi i32 [ %61, %.lr.ph621 ]
  %.13218.ph962 = phi i32 [ %59, %.lr.ph621 ]
  %.14204.ph963 = phi i32 [ %57, %.lr.ph621 ]
  %.11189.ph964 = phi i32 [ %55, %.lr.ph621 ]
  %.8177.ph965 = phi i32 [ %53, %.lr.ph621 ]
  %.14168.ph966 = phi i32 [ %51, %.lr.ph621 ]
  %.14153.ph967 = phi i32 [ %49, %.lr.ph621 ]
  %.11138.ph968 = phi i32 [ %47, %.lr.ph621 ]
  %.20126.ph969 = phi i32 [ %45, %.lr.ph621 ]
  %.21105.ph970 = phi i32 [ %43, %.lr.ph621 ]
  %.2283.ph971 = phi i32 [ %41, %.lr.ph621 ]
  %.1860.ph972 = phi i32 [ %39, %.lr.ph621 ]
  %.2841.ph973 = phi i32 [ %37, %.lr.ph621 ]
  %.40.ph974 = phi i32 [ %35, %.lr.ph621 ]
  %.03.ph975 = phi i32 [ 0, %.lr.ph621 ]
  br label %.loopexit

.loopexit.loopexit976:                            ; preds = %.lr.ph624
  %.14356.ph977 = phi i32* [ %81, %.lr.ph624 ]
  %.14341.ph978 = phi i32* [ %79, %.lr.ph624 ]
  %.14326.ph979 = phi i32* [ %77, %.lr.ph624 ]
  %.14311.ph980 = phi i32 [ %75, %.lr.ph624 ]
  %.14296.ph981 = phi i32 [ %73, %.lr.ph624 ]
  %.10281.ph982 = phi i32 [ %71, %.lr.ph624 ]
  %.10270.ph983 = phi i32 [ %69, %.lr.ph624 ]
  %.11259.ph984 = phi i32 [ %67, %.lr.ph624 ]
  %.18246.ph985 = phi i32 [ %63, %.lr.ph624 ]
  %.8227.ph986 = phi i32 [ %61, %.lr.ph624 ]
  %.13218.ph987 = phi i32 [ %59, %.lr.ph624 ]
  %.14204.ph988 = phi i32 [ %57, %.lr.ph624 ]
  %.11189.ph989 = phi i32 [ %55, %.lr.ph624 ]
  %.8177.ph990 = phi i32 [ %53, %.lr.ph624 ]
  %.14168.ph991 = phi i32 [ %51, %.lr.ph624 ]
  %.14153.ph992 = phi i32 [ %49, %.lr.ph624 ]
  %.11138.ph993 = phi i32 [ %47, %.lr.ph624 ]
  %.20126.ph994 = phi i32 [ %45, %.lr.ph624 ]
  %.21105.ph995 = phi i32 [ %43, %.lr.ph624 ]
  %.2283.ph996 = phi i32 [ %41, %.lr.ph624 ]
  %.1860.ph997 = phi i32 [ %39, %.lr.ph624 ]
  %.2841.ph998 = phi i32 [ %37, %.lr.ph624 ]
  %.40.ph999 = phi i32 [ %35, %.lr.ph624 ]
  %.03.ph1000 = phi i32 [ 0, %.lr.ph624 ]
  br label %.loopexit

.loopexit.loopexit1001:                           ; preds = %.lr.ph627
  %.14356.ph1002 = phi i32* [ %81, %.lr.ph627 ]
  %.14341.ph1003 = phi i32* [ %79, %.lr.ph627 ]
  %.14326.ph1004 = phi i32* [ %77, %.lr.ph627 ]
  %.14311.ph1005 = phi i32 [ %75, %.lr.ph627 ]
  %.14296.ph1006 = phi i32 [ %73, %.lr.ph627 ]
  %.10281.ph1007 = phi i32 [ %71, %.lr.ph627 ]
  %.10270.ph1008 = phi i32 [ %69, %.lr.ph627 ]
  %.11259.ph1009 = phi i32 [ %67, %.lr.ph627 ]
  %.18246.ph1010 = phi i32 [ %63, %.lr.ph627 ]
  %.8227.ph1011 = phi i32 [ %61, %.lr.ph627 ]
  %.13218.ph1012 = phi i32 [ %59, %.lr.ph627 ]
  %.14204.ph1013 = phi i32 [ %57, %.lr.ph627 ]
  %.11189.ph1014 = phi i32 [ %55, %.lr.ph627 ]
  %.8177.ph1015 = phi i32 [ %53, %.lr.ph627 ]
  %.14168.ph1016 = phi i32 [ %51, %.lr.ph627 ]
  %.14153.ph1017 = phi i32 [ %49, %.lr.ph627 ]
  %.11138.ph1018 = phi i32 [ %47, %.lr.ph627 ]
  %.20126.ph1019 = phi i32 [ %45, %.lr.ph627 ]
  %.21105.ph1020 = phi i32 [ %43, %.lr.ph627 ]
  %.2283.ph1021 = phi i32 [ %41, %.lr.ph627 ]
  %.1860.ph1022 = phi i32 [ %39, %.lr.ph627 ]
  %.2841.ph1023 = phi i32 [ %37, %.lr.ph627 ]
  %.40.ph1024 = phi i32 [ %35, %.lr.ph627 ]
  %.03.ph1025 = phi i32 [ 0, %.lr.ph627 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit1001, %.loopexit.loopexit976, %.loopexit.loopexit951, %.loopexit.loopexit926, %.loopexit.loopexit901, %.loopexit.loopexit876, %.loopexit.loopexit851, %.loopexit.loopexit826, %.loopexit.loopexit801, %.loopexit.loopexit776, %.loopexit.loopexit751, %.loopexit.loopexit726, %.loopexit.loopexit701, %.loopexit.loopexit676, %.loopexit.loopexit651, %.loopexit.loopexit626, %.loopexit.loopexit601, %.loopexit.loopexit576, %.loopexit.loopexit551, %.loopexit.loopexit526, %.loopexit.loopexit501, %.loopexit.loopexit476, %.loopexit.loopexit451, %.loopexit.loopexit426, %.loopexit.loopexit401, %.loopexit.loopexit376, %.loopexit.loopexit351, %.loopexit.loopexit326, %.loopexit.loopexit301, %.loopexit.loopexit276, %.loopexit.loopexit251, %.loopexit.loopexit226, %.loopexit.loopexit201, %.loopexit.loopexit176, %.loopexit.loopexit151, %.loopexit.loopexit126, %.loopexit.loopexit101, %.loopexit.loopexit76, %.loopexit.loopexit51, %.loopexit.loopexit26, %.loopexit.loopexit1, %.loopexit.loopexit, %._crit_edge383, %._crit_edge386, %._crit_edge389, %._crit_edge392, %._crit_edge395, %3200, %3181, %3345, %3326, %2930, %2934, %2910, %2916, %2835, %2742, %2543, %2469, %2475, %2394, %2301, %2268, %2274, %2193, %2100, %1887, %1774, %._crit_edge567, %._crit_edge570, %1565, %1395, %._crit_edge577, %._crit_edge601, %._crit_edge604, %._crit_edge607, %._crit_edge610, %._crit_edge613, %475, %399, %372, %395, %._crit_edge619, %353, %._crit_edge622, %._crit_edge625, %._crit_edge628, %3988, %._crit_edge, %2535, %2521
  %.14356 = phi i32* [ %81, %3988 ], [ %81, %._crit_edge ], [ %.8350, %2521 ], [ %.8350, %2535 ], [ %81, %._crit_edge628 ], [ %81, %._crit_edge625 ], [ %81, %._crit_edge622 ], [ %81, %353 ], [ %81, %._crit_edge619 ], [ %81, %395 ], [ %81, %372 ], [ %81, %399 ], [ %81, %475 ], [ %81, %._crit_edge613 ], [ %81, %._crit_edge610 ], [ %81, %._crit_edge607 ], [ %81, %._crit_edge604 ], [ %81, %._crit_edge601 ], [ %81, %._crit_edge577 ], [ %81, %1395 ], [ %81, %1565 ], [ %81, %._crit_edge570 ], [ %81, %._crit_edge567 ], [ %81, %1774 ], [ %81, %1887 ], [ %81, %2100 ], [ %.2344, %2193 ], [ %.2344, %2274 ], [ %.2344, %2268 ], [ %.5347, %2301 ], [ %.8350, %2394 ], [ %.8350, %2475 ], [ %.8350, %2469 ], [ %.4346, %2543 ], [ %.4346, %2742 ], [ %.12354, %2835 ], [ %.12354, %2916 ], [ %.12354, %2910 ], [ %.4346, %2934 ], [ %.4346, %2930 ], [ %.4346, %3326 ], [ %.4346, %3345 ], [ %.4346, %3181 ], [ %.4346, %3200 ], [ %81, %._crit_edge395 ], [ %81, %._crit_edge392 ], [ %81, %._crit_edge389 ], [ %81, %._crit_edge386 ], [ %81, %._crit_edge383 ], [ %.14356.ph, %.loopexit.loopexit ], [ %.14356.ph2, %.loopexit.loopexit1 ], [ %.14356.ph27, %.loopexit.loopexit26 ], [ %.14356.ph52, %.loopexit.loopexit51 ], [ %.14356.ph77, %.loopexit.loopexit76 ], [ %.14356.ph102, %.loopexit.loopexit101 ], [ %.14356.ph127, %.loopexit.loopexit126 ], [ %.14356.ph152, %.loopexit.loopexit151 ], [ %.14356.ph177, %.loopexit.loopexit176 ], [ %.14356.ph202, %.loopexit.loopexit201 ], [ %.14356.ph227, %.loopexit.loopexit226 ], [ %.14356.ph252, %.loopexit.loopexit251 ], [ %.14356.ph277, %.loopexit.loopexit276 ], [ %.14356.ph302, %.loopexit.loopexit301 ], [ %.14356.ph327, %.loopexit.loopexit326 ], [ %.14356.ph352, %.loopexit.loopexit351 ], [ %.14356.ph377, %.loopexit.loopexit376 ], [ %.14356.ph402, %.loopexit.loopexit401 ], [ %.14356.ph427, %.loopexit.loopexit426 ], [ %.14356.ph452, %.loopexit.loopexit451 ], [ %.14356.ph477, %.loopexit.loopexit476 ], [ %.14356.ph502, %.loopexit.loopexit501 ], [ %.14356.ph527, %.loopexit.loopexit526 ], [ %.14356.ph552, %.loopexit.loopexit551 ], [ %.14356.ph577, %.loopexit.loopexit576 ], [ %.14356.ph602, %.loopexit.loopexit601 ], [ %.14356.ph627, %.loopexit.loopexit626 ], [ %.14356.ph652, %.loopexit.loopexit651 ], [ %.14356.ph677, %.loopexit.loopexit676 ], [ %.14356.ph702, %.loopexit.loopexit701 ], [ %.14356.ph727, %.loopexit.loopexit726 ], [ %.14356.ph752, %.loopexit.loopexit751 ], [ %.14356.ph777, %.loopexit.loopexit776 ], [ %.14356.ph802, %.loopexit.loopexit801 ], [ %.14356.ph827, %.loopexit.loopexit826 ], [ %.14356.ph852, %.loopexit.loopexit851 ], [ %.14356.ph877, %.loopexit.loopexit876 ], [ %.14356.ph902, %.loopexit.loopexit901 ], [ %.14356.ph927, %.loopexit.loopexit926 ], [ %.14356.ph952, %.loopexit.loopexit951 ], [ %.14356.ph977, %.loopexit.loopexit976 ], [ %.14356.ph1002, %.loopexit.loopexit1001 ]
  %.14341 = phi i32* [ %79, %3988 ], [ %79, %._crit_edge ], [ %.8335, %2521 ], [ %.8335, %2535 ], [ %79, %._crit_edge628 ], [ %79, %._crit_edge625 ], [ %79, %._crit_edge622 ], [ %79, %353 ], [ %79, %._crit_edge619 ], [ %79, %395 ], [ %79, %372 ], [ %79, %399 ], [ %79, %475 ], [ %79, %._crit_edge613 ], [ %79, %._crit_edge610 ], [ %79, %._crit_edge607 ], [ %79, %._crit_edge604 ], [ %79, %._crit_edge601 ], [ %79, %._crit_edge577 ], [ %79, %1395 ], [ %79, %1565 ], [ %79, %._crit_edge570 ], [ %79, %._crit_edge567 ], [ %79, %1774 ], [ %79, %1887 ], [ %79, %2100 ], [ %.2329, %2193 ], [ %.2329, %2274 ], [ %.2329, %2268 ], [ %.5332, %2301 ], [ %.8335, %2394 ], [ %.8335, %2475 ], [ %.8335, %2469 ], [ %.4331, %2543 ], [ %.4331, %2742 ], [ %.12339, %2835 ], [ %.12339, %2916 ], [ %.12339, %2910 ], [ %.4331, %2934 ], [ %.4331, %2930 ], [ %.4331, %3326 ], [ %.4331, %3345 ], [ %.4331, %3181 ], [ %.4331, %3200 ], [ %79, %._crit_edge395 ], [ %79, %._crit_edge392 ], [ %79, %._crit_edge389 ], [ %79, %._crit_edge386 ], [ %79, %._crit_edge383 ], [ %.14341.ph, %.loopexit.loopexit ], [ %.14341.ph3, %.loopexit.loopexit1 ], [ %.14341.ph28, %.loopexit.loopexit26 ], [ %.14341.ph53, %.loopexit.loopexit51 ], [ %.14341.ph78, %.loopexit.loopexit76 ], [ %.14341.ph103, %.loopexit.loopexit101 ], [ %.14341.ph128, %.loopexit.loopexit126 ], [ %.14341.ph153, %.loopexit.loopexit151 ], [ %.14341.ph178, %.loopexit.loopexit176 ], [ %.14341.ph203, %.loopexit.loopexit201 ], [ %.14341.ph228, %.loopexit.loopexit226 ], [ %.14341.ph253, %.loopexit.loopexit251 ], [ %.14341.ph278, %.loopexit.loopexit276 ], [ %.14341.ph303, %.loopexit.loopexit301 ], [ %.14341.ph328, %.loopexit.loopexit326 ], [ %.14341.ph353, %.loopexit.loopexit351 ], [ %.14341.ph378, %.loopexit.loopexit376 ], [ %.14341.ph403, %.loopexit.loopexit401 ], [ %.14341.ph428, %.loopexit.loopexit426 ], [ %.14341.ph453, %.loopexit.loopexit451 ], [ %.14341.ph478, %.loopexit.loopexit476 ], [ %.14341.ph503, %.loopexit.loopexit501 ], [ %.14341.ph528, %.loopexit.loopexit526 ], [ %.14341.ph553, %.loopexit.loopexit551 ], [ %.14341.ph578, %.loopexit.loopexit576 ], [ %.14341.ph603, %.loopexit.loopexit601 ], [ %.14341.ph628, %.loopexit.loopexit626 ], [ %.14341.ph653, %.loopexit.loopexit651 ], [ %.14341.ph678, %.loopexit.loopexit676 ], [ %.14341.ph703, %.loopexit.loopexit701 ], [ %.14341.ph728, %.loopexit.loopexit726 ], [ %.14341.ph753, %.loopexit.loopexit751 ], [ %.14341.ph778, %.loopexit.loopexit776 ], [ %.14341.ph803, %.loopexit.loopexit801 ], [ %.14341.ph828, %.loopexit.loopexit826 ], [ %.14341.ph853, %.loopexit.loopexit851 ], [ %.14341.ph878, %.loopexit.loopexit876 ], [ %.14341.ph903, %.loopexit.loopexit901 ], [ %.14341.ph928, %.loopexit.loopexit926 ], [ %.14341.ph953, %.loopexit.loopexit951 ], [ %.14341.ph978, %.loopexit.loopexit976 ], [ %.14341.ph1003, %.loopexit.loopexit1001 ]
  %.14326 = phi i32* [ %77, %3988 ], [ %77, %._crit_edge ], [ %.8320, %2521 ], [ %.8320, %2535 ], [ %77, %._crit_edge628 ], [ %77, %._crit_edge625 ], [ %77, %._crit_edge622 ], [ %77, %353 ], [ %77, %._crit_edge619 ], [ %77, %395 ], [ %77, %372 ], [ %77, %399 ], [ %77, %475 ], [ %77, %._crit_edge613 ], [ %77, %._crit_edge610 ], [ %77, %._crit_edge607 ], [ %77, %._crit_edge604 ], [ %77, %._crit_edge601 ], [ %77, %._crit_edge577 ], [ %77, %1395 ], [ %77, %1565 ], [ %77, %._crit_edge570 ], [ %77, %._crit_edge567 ], [ %77, %1774 ], [ %77, %1887 ], [ %77, %2100 ], [ %.2314, %2193 ], [ %.2314, %2274 ], [ %.2314, %2268 ], [ %.5317, %2301 ], [ %.8320, %2394 ], [ %.8320, %2475 ], [ %.8320, %2469 ], [ %.4316, %2543 ], [ %.4316, %2742 ], [ %.12324, %2835 ], [ %.12324, %2916 ], [ %.12324, %2910 ], [ %.4316, %2934 ], [ %.4316, %2930 ], [ %.4316, %3326 ], [ %.4316, %3345 ], [ %.4316, %3181 ], [ %.4316, %3200 ], [ %77, %._crit_edge395 ], [ %77, %._crit_edge392 ], [ %77, %._crit_edge389 ], [ %77, %._crit_edge386 ], [ %77, %._crit_edge383 ], [ %.14326.ph, %.loopexit.loopexit ], [ %.14326.ph4, %.loopexit.loopexit1 ], [ %.14326.ph29, %.loopexit.loopexit26 ], [ %.14326.ph54, %.loopexit.loopexit51 ], [ %.14326.ph79, %.loopexit.loopexit76 ], [ %.14326.ph104, %.loopexit.loopexit101 ], [ %.14326.ph129, %.loopexit.loopexit126 ], [ %.14326.ph154, %.loopexit.loopexit151 ], [ %.14326.ph179, %.loopexit.loopexit176 ], [ %.14326.ph204, %.loopexit.loopexit201 ], [ %.14326.ph229, %.loopexit.loopexit226 ], [ %.14326.ph254, %.loopexit.loopexit251 ], [ %.14326.ph279, %.loopexit.loopexit276 ], [ %.14326.ph304, %.loopexit.loopexit301 ], [ %.14326.ph329, %.loopexit.loopexit326 ], [ %.14326.ph354, %.loopexit.loopexit351 ], [ %.14326.ph379, %.loopexit.loopexit376 ], [ %.14326.ph404, %.loopexit.loopexit401 ], [ %.14326.ph429, %.loopexit.loopexit426 ], [ %.14326.ph454, %.loopexit.loopexit451 ], [ %.14326.ph479, %.loopexit.loopexit476 ], [ %.14326.ph504, %.loopexit.loopexit501 ], [ %.14326.ph529, %.loopexit.loopexit526 ], [ %.14326.ph554, %.loopexit.loopexit551 ], [ %.14326.ph579, %.loopexit.loopexit576 ], [ %.14326.ph604, %.loopexit.loopexit601 ], [ %.14326.ph629, %.loopexit.loopexit626 ], [ %.14326.ph654, %.loopexit.loopexit651 ], [ %.14326.ph679, %.loopexit.loopexit676 ], [ %.14326.ph704, %.loopexit.loopexit701 ], [ %.14326.ph729, %.loopexit.loopexit726 ], [ %.14326.ph754, %.loopexit.loopexit751 ], [ %.14326.ph779, %.loopexit.loopexit776 ], [ %.14326.ph804, %.loopexit.loopexit801 ], [ %.14326.ph829, %.loopexit.loopexit826 ], [ %.14326.ph854, %.loopexit.loopexit851 ], [ %.14326.ph879, %.loopexit.loopexit876 ], [ %.14326.ph904, %.loopexit.loopexit901 ], [ %.14326.ph929, %.loopexit.loopexit926 ], [ %.14326.ph954, %.loopexit.loopexit951 ], [ %.14326.ph979, %.loopexit.loopexit976 ], [ %.14326.ph1004, %.loopexit.loopexit1001 ]
  %.14311 = phi i32 [ %75, %3988 ], [ %75, %._crit_edge ], [ %.8305, %2521 ], [ %.8305, %2535 ], [ %75, %._crit_edge628 ], [ %75, %._crit_edge625 ], [ %75, %._crit_edge622 ], [ %75, %353 ], [ %75, %._crit_edge619 ], [ %75, %395 ], [ %75, %372 ], [ %75, %399 ], [ %75, %475 ], [ %75, %._crit_edge613 ], [ %75, %._crit_edge610 ], [ %75, %._crit_edge607 ], [ %75, %._crit_edge604 ], [ %75, %._crit_edge601 ], [ %75, %._crit_edge577 ], [ %75, %1395 ], [ %75, %1565 ], [ %75, %._crit_edge570 ], [ %75, %._crit_edge567 ], [ %75, %1774 ], [ %75, %1887 ], [ %75, %2100 ], [ %.2299, %2193 ], [ %.2299, %2274 ], [ %.2299, %2268 ], [ %.5302, %2301 ], [ %.8305, %2394 ], [ %.8305, %2475 ], [ %.8305, %2469 ], [ %.4301, %2543 ], [ %.4301, %2742 ], [ %.12309, %2835 ], [ %.12309, %2916 ], [ %.12309, %2910 ], [ %.4301, %2934 ], [ %.4301, %2930 ], [ %.4301, %3326 ], [ %.4301, %3345 ], [ %.4301, %3181 ], [ %.4301, %3200 ], [ %75, %._crit_edge395 ], [ %75, %._crit_edge392 ], [ %75, %._crit_edge389 ], [ %75, %._crit_edge386 ], [ %75, %._crit_edge383 ], [ %.14311.ph, %.loopexit.loopexit ], [ %.14311.ph5, %.loopexit.loopexit1 ], [ %.14311.ph30, %.loopexit.loopexit26 ], [ %.14311.ph55, %.loopexit.loopexit51 ], [ %.14311.ph80, %.loopexit.loopexit76 ], [ %.14311.ph105, %.loopexit.loopexit101 ], [ %.14311.ph130, %.loopexit.loopexit126 ], [ %.14311.ph155, %.loopexit.loopexit151 ], [ %.14311.ph180, %.loopexit.loopexit176 ], [ %.14311.ph205, %.loopexit.loopexit201 ], [ %.14311.ph230, %.loopexit.loopexit226 ], [ %.14311.ph255, %.loopexit.loopexit251 ], [ %.14311.ph280, %.loopexit.loopexit276 ], [ %.14311.ph305, %.loopexit.loopexit301 ], [ %.14311.ph330, %.loopexit.loopexit326 ], [ %.14311.ph355, %.loopexit.loopexit351 ], [ %.14311.ph380, %.loopexit.loopexit376 ], [ %.14311.ph405, %.loopexit.loopexit401 ], [ %.14311.ph430, %.loopexit.loopexit426 ], [ %.14311.ph455, %.loopexit.loopexit451 ], [ %.14311.ph480, %.loopexit.loopexit476 ], [ %.14311.ph505, %.loopexit.loopexit501 ], [ %.14311.ph530, %.loopexit.loopexit526 ], [ %.14311.ph555, %.loopexit.loopexit551 ], [ %.14311.ph580, %.loopexit.loopexit576 ], [ %.14311.ph605, %.loopexit.loopexit601 ], [ %.14311.ph630, %.loopexit.loopexit626 ], [ %.14311.ph655, %.loopexit.loopexit651 ], [ %.14311.ph680, %.loopexit.loopexit676 ], [ %.14311.ph705, %.loopexit.loopexit701 ], [ %.14311.ph730, %.loopexit.loopexit726 ], [ %.14311.ph755, %.loopexit.loopexit751 ], [ %.14311.ph780, %.loopexit.loopexit776 ], [ %.14311.ph805, %.loopexit.loopexit801 ], [ %.14311.ph830, %.loopexit.loopexit826 ], [ %.14311.ph855, %.loopexit.loopexit851 ], [ %.14311.ph880, %.loopexit.loopexit876 ], [ %.14311.ph905, %.loopexit.loopexit901 ], [ %.14311.ph930, %.loopexit.loopexit926 ], [ %.14311.ph955, %.loopexit.loopexit951 ], [ %.14311.ph980, %.loopexit.loopexit976 ], [ %.14311.ph1005, %.loopexit.loopexit1001 ]
  %.14296 = phi i32 [ %73, %3988 ], [ %73, %._crit_edge ], [ %.8290, %2521 ], [ %.8290, %2535 ], [ %73, %._crit_edge628 ], [ %73, %._crit_edge625 ], [ %73, %._crit_edge622 ], [ %73, %353 ], [ %73, %._crit_edge619 ], [ %73, %395 ], [ %73, %372 ], [ %73, %399 ], [ %73, %475 ], [ %73, %._crit_edge613 ], [ %73, %._crit_edge610 ], [ %73, %._crit_edge607 ], [ %73, %._crit_edge604 ], [ %73, %._crit_edge601 ], [ %73, %._crit_edge577 ], [ %73, %1395 ], [ %73, %1565 ], [ %73, %._crit_edge570 ], [ %73, %._crit_edge567 ], [ %73, %1774 ], [ %73, %1887 ], [ %73, %2100 ], [ %.2284, %2193 ], [ %.2284, %2274 ], [ %.2284, %2268 ], [ %.5287, %2301 ], [ %.8290, %2394 ], [ %.8290, %2475 ], [ %.8290, %2469 ], [ %.4286, %2543 ], [ %.4286, %2742 ], [ %.12294, %2835 ], [ %.12294, %2916 ], [ %.12294, %2910 ], [ %.4286, %2934 ], [ %.4286, %2930 ], [ %.4286, %3326 ], [ %.4286, %3345 ], [ %.4286, %3181 ], [ %.4286, %3200 ], [ %73, %._crit_edge395 ], [ %73, %._crit_edge392 ], [ %73, %._crit_edge389 ], [ %73, %._crit_edge386 ], [ %73, %._crit_edge383 ], [ %.14296.ph, %.loopexit.loopexit ], [ %.14296.ph6, %.loopexit.loopexit1 ], [ %.14296.ph31, %.loopexit.loopexit26 ], [ %.14296.ph56, %.loopexit.loopexit51 ], [ %.14296.ph81, %.loopexit.loopexit76 ], [ %.14296.ph106, %.loopexit.loopexit101 ], [ %.14296.ph131, %.loopexit.loopexit126 ], [ %.14296.ph156, %.loopexit.loopexit151 ], [ %.14296.ph181, %.loopexit.loopexit176 ], [ %.14296.ph206, %.loopexit.loopexit201 ], [ %.14296.ph231, %.loopexit.loopexit226 ], [ %.14296.ph256, %.loopexit.loopexit251 ], [ %.14296.ph281, %.loopexit.loopexit276 ], [ %.14296.ph306, %.loopexit.loopexit301 ], [ %.14296.ph331, %.loopexit.loopexit326 ], [ %.14296.ph356, %.loopexit.loopexit351 ], [ %.14296.ph381, %.loopexit.loopexit376 ], [ %.14296.ph406, %.loopexit.loopexit401 ], [ %.14296.ph431, %.loopexit.loopexit426 ], [ %.14296.ph456, %.loopexit.loopexit451 ], [ %.14296.ph481, %.loopexit.loopexit476 ], [ %.14296.ph506, %.loopexit.loopexit501 ], [ %.14296.ph531, %.loopexit.loopexit526 ], [ %.14296.ph556, %.loopexit.loopexit551 ], [ %.14296.ph581, %.loopexit.loopexit576 ], [ %.14296.ph606, %.loopexit.loopexit601 ], [ %.14296.ph631, %.loopexit.loopexit626 ], [ %.14296.ph656, %.loopexit.loopexit651 ], [ %.14296.ph681, %.loopexit.loopexit676 ], [ %.14296.ph706, %.loopexit.loopexit701 ], [ %.14296.ph731, %.loopexit.loopexit726 ], [ %.14296.ph756, %.loopexit.loopexit751 ], [ %.14296.ph781, %.loopexit.loopexit776 ], [ %.14296.ph806, %.loopexit.loopexit801 ], [ %.14296.ph831, %.loopexit.loopexit826 ], [ %.14296.ph856, %.loopexit.loopexit851 ], [ %.14296.ph881, %.loopexit.loopexit876 ], [ %.14296.ph906, %.loopexit.loopexit901 ], [ %.14296.ph931, %.loopexit.loopexit926 ], [ %.14296.ph956, %.loopexit.loopexit951 ], [ %.14296.ph981, %.loopexit.loopexit976 ], [ %.14296.ph1006, %.loopexit.loopexit1001 ]
  %.10281 = phi i32 [ %71, %3988 ], [ %71, %._crit_edge ], [ %.5276, %2521 ], [ %.5276, %2535 ], [ %71, %._crit_edge628 ], [ %71, %._crit_edge625 ], [ %71, %._crit_edge622 ], [ %71, %353 ], [ %71, %._crit_edge619 ], [ %71, %395 ], [ %71, %372 ], [ %71, %399 ], [ %71, %475 ], [ %71, %._crit_edge613 ], [ %71, %._crit_edge610 ], [ %71, %._crit_edge607 ], [ %71, %._crit_edge604 ], [ %71, %._crit_edge601 ], [ %71, %._crit_edge577 ], [ %71, %1395 ], [ %71, %1565 ], [ %71, %._crit_edge570 ], [ %71, %._crit_edge567 ], [ %71, %1774 ], [ %71, %1887 ], [ %71, %2100 ], [ %.0271, %2193 ], [ %.0271, %2274 ], [ %.0271, %2268 ], [ %.3274, %2301 ], [ %.5276, %2394 ], [ %.5276, %2475 ], [ %.5276, %2469 ], [ %.2273, %2543 ], [ %.2273, %2742 ], [ %.8279, %2835 ], [ %.8279, %2916 ], [ %.8279, %2910 ], [ %.2273, %2934 ], [ %.2273, %2930 ], [ %.2273, %3326 ], [ %.2273, %3345 ], [ %.2273, %3181 ], [ %.2273, %3200 ], [ %71, %._crit_edge395 ], [ %71, %._crit_edge392 ], [ %71, %._crit_edge389 ], [ %71, %._crit_edge386 ], [ %71, %._crit_edge383 ], [ %.10281.ph, %.loopexit.loopexit ], [ %.10281.ph7, %.loopexit.loopexit1 ], [ %.10281.ph32, %.loopexit.loopexit26 ], [ %.10281.ph57, %.loopexit.loopexit51 ], [ %.10281.ph82, %.loopexit.loopexit76 ], [ %.10281.ph107, %.loopexit.loopexit101 ], [ %.10281.ph132, %.loopexit.loopexit126 ], [ %.10281.ph157, %.loopexit.loopexit151 ], [ %.10281.ph182, %.loopexit.loopexit176 ], [ %.10281.ph207, %.loopexit.loopexit201 ], [ %.10281.ph232, %.loopexit.loopexit226 ], [ %.10281.ph257, %.loopexit.loopexit251 ], [ %.10281.ph282, %.loopexit.loopexit276 ], [ %.10281.ph307, %.loopexit.loopexit301 ], [ %.10281.ph332, %.loopexit.loopexit326 ], [ %.10281.ph357, %.loopexit.loopexit351 ], [ %.10281.ph382, %.loopexit.loopexit376 ], [ %.10281.ph407, %.loopexit.loopexit401 ], [ %.10281.ph432, %.loopexit.loopexit426 ], [ %.10281.ph457, %.loopexit.loopexit451 ], [ %.10281.ph482, %.loopexit.loopexit476 ], [ %.10281.ph507, %.loopexit.loopexit501 ], [ %.10281.ph532, %.loopexit.loopexit526 ], [ %.10281.ph557, %.loopexit.loopexit551 ], [ %.10281.ph582, %.loopexit.loopexit576 ], [ %.10281.ph607, %.loopexit.loopexit601 ], [ %.10281.ph632, %.loopexit.loopexit626 ], [ %.10281.ph657, %.loopexit.loopexit651 ], [ %.10281.ph682, %.loopexit.loopexit676 ], [ %.10281.ph707, %.loopexit.loopexit701 ], [ %.10281.ph732, %.loopexit.loopexit726 ], [ %.10281.ph757, %.loopexit.loopexit751 ], [ %.10281.ph782, %.loopexit.loopexit776 ], [ %.10281.ph807, %.loopexit.loopexit801 ], [ %.10281.ph832, %.loopexit.loopexit826 ], [ %.10281.ph857, %.loopexit.loopexit851 ], [ %.10281.ph882, %.loopexit.loopexit876 ], [ %.10281.ph907, %.loopexit.loopexit901 ], [ %.10281.ph932, %.loopexit.loopexit926 ], [ %.10281.ph957, %.loopexit.loopexit951 ], [ %.10281.ph982, %.loopexit.loopexit976 ], [ %.10281.ph1007, %.loopexit.loopexit1001 ]
  %.10270 = phi i32 [ %69, %3988 ], [ %69, %._crit_edge ], [ %.5265, %2521 ], [ %.5265, %2535 ], [ %69, %._crit_edge628 ], [ %69, %._crit_edge625 ], [ %69, %._crit_edge622 ], [ %69, %353 ], [ %69, %._crit_edge619 ], [ %69, %395 ], [ %69, %372 ], [ %69, %399 ], [ %69, %475 ], [ %69, %._crit_edge613 ], [ %69, %._crit_edge610 ], [ %69, %._crit_edge607 ], [ %69, %._crit_edge604 ], [ %69, %._crit_edge601 ], [ %69, %._crit_edge577 ], [ %69, %1395 ], [ %69, %1565 ], [ %69, %._crit_edge570 ], [ %69, %._crit_edge567 ], [ %69, %1774 ], [ %69, %1887 ], [ %69, %2100 ], [ %.0260, %2193 ], [ %.0260, %2274 ], [ %.0260, %2268 ], [ %.3263, %2301 ], [ %.5265, %2394 ], [ %.5265, %2475 ], [ %.5265, %2469 ], [ %.2262, %2543 ], [ %.2262, %2742 ], [ %.8268, %2835 ], [ %.8268, %2916 ], [ %.8268, %2910 ], [ %.2262, %2934 ], [ %.2262, %2930 ], [ %.2262, %3326 ], [ %.2262, %3345 ], [ %.2262, %3181 ], [ %.2262, %3200 ], [ %69, %._crit_edge395 ], [ %69, %._crit_edge392 ], [ %69, %._crit_edge389 ], [ %69, %._crit_edge386 ], [ %69, %._crit_edge383 ], [ %.10270.ph, %.loopexit.loopexit ], [ %.10270.ph8, %.loopexit.loopexit1 ], [ %.10270.ph33, %.loopexit.loopexit26 ], [ %.10270.ph58, %.loopexit.loopexit51 ], [ %.10270.ph83, %.loopexit.loopexit76 ], [ %.10270.ph108, %.loopexit.loopexit101 ], [ %.10270.ph133, %.loopexit.loopexit126 ], [ %.10270.ph158, %.loopexit.loopexit151 ], [ %.10270.ph183, %.loopexit.loopexit176 ], [ %.10270.ph208, %.loopexit.loopexit201 ], [ %.10270.ph233, %.loopexit.loopexit226 ], [ %.10270.ph258, %.loopexit.loopexit251 ], [ %.10270.ph283, %.loopexit.loopexit276 ], [ %.10270.ph308, %.loopexit.loopexit301 ], [ %.10270.ph333, %.loopexit.loopexit326 ], [ %.10270.ph358, %.loopexit.loopexit351 ], [ %.10270.ph383, %.loopexit.loopexit376 ], [ %.10270.ph408, %.loopexit.loopexit401 ], [ %.10270.ph433, %.loopexit.loopexit426 ], [ %.10270.ph458, %.loopexit.loopexit451 ], [ %.10270.ph483, %.loopexit.loopexit476 ], [ %.10270.ph508, %.loopexit.loopexit501 ], [ %.10270.ph533, %.loopexit.loopexit526 ], [ %.10270.ph558, %.loopexit.loopexit551 ], [ %.10270.ph583, %.loopexit.loopexit576 ], [ %.10270.ph608, %.loopexit.loopexit601 ], [ %.10270.ph633, %.loopexit.loopexit626 ], [ %.10270.ph658, %.loopexit.loopexit651 ], [ %.10270.ph683, %.loopexit.loopexit676 ], [ %.10270.ph708, %.loopexit.loopexit701 ], [ %.10270.ph733, %.loopexit.loopexit726 ], [ %.10270.ph758, %.loopexit.loopexit751 ], [ %.10270.ph783, %.loopexit.loopexit776 ], [ %.10270.ph808, %.loopexit.loopexit801 ], [ %.10270.ph833, %.loopexit.loopexit826 ], [ %.10270.ph858, %.loopexit.loopexit851 ], [ %.10270.ph883, %.loopexit.loopexit876 ], [ %.10270.ph908, %.loopexit.loopexit901 ], [ %.10270.ph933, %.loopexit.loopexit926 ], [ %.10270.ph958, %.loopexit.loopexit951 ], [ %.10270.ph983, %.loopexit.loopexit976 ], [ %.10270.ph1008, %.loopexit.loopexit1001 ]
  %.11259 = phi i32 [ %67, %3988 ], [ %67, %._crit_edge ], [ %.6254, %2521 ], [ %.6254, %2535 ], [ %67, %._crit_edge628 ], [ %67, %._crit_edge625 ], [ %67, %._crit_edge622 ], [ %67, %353 ], [ %67, %._crit_edge619 ], [ %67, %395 ], [ %67, %372 ], [ %67, %399 ], [ %67, %475 ], [ %67, %._crit_edge613 ], [ %67, %._crit_edge610 ], [ %67, %._crit_edge607 ], [ %67, %._crit_edge604 ], [ %67, %._crit_edge601 ], [ %67, %._crit_edge577 ], [ %67, %1395 ], [ %67, %1565 ], [ %67, %._crit_edge570 ], [ %67, %._crit_edge567 ], [ %67, %1774 ], [ %67, %1887 ], [ %67, %2100 ], [ %.1249, %2193 ], [ %.1249, %2274 ], [ %.1249, %2268 ], [ %.4252, %2301 ], [ %.6254, %2394 ], [ %.6254, %2475 ], [ %.6254, %2469 ], [ %.3251, %2543 ], [ %.3251, %2742 ], [ %.9257, %2835 ], [ %.9257, %2916 ], [ %.9257, %2910 ], [ %.3251, %2934 ], [ %.3251, %2930 ], [ %.3251, %3326 ], [ %.3251, %3345 ], [ %.3251, %3181 ], [ %.3251, %3200 ], [ %67, %._crit_edge395 ], [ %67, %._crit_edge392 ], [ %67, %._crit_edge389 ], [ %67, %._crit_edge386 ], [ %67, %._crit_edge383 ], [ %.11259.ph, %.loopexit.loopexit ], [ %.11259.ph9, %.loopexit.loopexit1 ], [ %.11259.ph34, %.loopexit.loopexit26 ], [ %.11259.ph59, %.loopexit.loopexit51 ], [ %.11259.ph84, %.loopexit.loopexit76 ], [ %.11259.ph109, %.loopexit.loopexit101 ], [ %.11259.ph134, %.loopexit.loopexit126 ], [ %.11259.ph159, %.loopexit.loopexit151 ], [ %.11259.ph184, %.loopexit.loopexit176 ], [ %.11259.ph209, %.loopexit.loopexit201 ], [ %.11259.ph234, %.loopexit.loopexit226 ], [ %.11259.ph259, %.loopexit.loopexit251 ], [ %.11259.ph284, %.loopexit.loopexit276 ], [ %.11259.ph309, %.loopexit.loopexit301 ], [ %.11259.ph334, %.loopexit.loopexit326 ], [ %.11259.ph359, %.loopexit.loopexit351 ], [ %.11259.ph384, %.loopexit.loopexit376 ], [ %.11259.ph409, %.loopexit.loopexit401 ], [ %.11259.ph434, %.loopexit.loopexit426 ], [ %.11259.ph459, %.loopexit.loopexit451 ], [ %.11259.ph484, %.loopexit.loopexit476 ], [ %.11259.ph509, %.loopexit.loopexit501 ], [ %.11259.ph534, %.loopexit.loopexit526 ], [ %.11259.ph559, %.loopexit.loopexit551 ], [ %.11259.ph584, %.loopexit.loopexit576 ], [ %.11259.ph609, %.loopexit.loopexit601 ], [ %.11259.ph634, %.loopexit.loopexit626 ], [ %.11259.ph659, %.loopexit.loopexit651 ], [ %.11259.ph684, %.loopexit.loopexit676 ], [ %.11259.ph709, %.loopexit.loopexit701 ], [ %.11259.ph734, %.loopexit.loopexit726 ], [ %.11259.ph759, %.loopexit.loopexit751 ], [ %.11259.ph784, %.loopexit.loopexit776 ], [ %.11259.ph809, %.loopexit.loopexit801 ], [ %.11259.ph834, %.loopexit.loopexit826 ], [ %.11259.ph859, %.loopexit.loopexit851 ], [ %.11259.ph884, %.loopexit.loopexit876 ], [ %.11259.ph909, %.loopexit.loopexit901 ], [ %.11259.ph934, %.loopexit.loopexit926 ], [ %.11259.ph959, %.loopexit.loopexit951 ], [ %.11259.ph984, %.loopexit.loopexit976 ], [ %.11259.ph1009, %.loopexit.loopexit1001 ]
  %.18246 = phi i32 [ %63, %3988 ], [ %63, %._crit_edge ], [ %.13241, %2521 ], [ %.13241, %2535 ], [ %63, %._crit_edge628 ], [ %63, %._crit_edge625 ], [ %63, %._crit_edge622 ], [ %63, %353 ], [ %63, %._crit_edge619 ], [ %63, %395 ], [ %63, %372 ], [ %63, %399 ], [ %63, %475 ], [ %63, %._crit_edge613 ], [ %63, %._crit_edge610 ], [ %63, %._crit_edge607 ], [ %63, %._crit_edge604 ], [ %63, %._crit_edge601 ], [ %63, %._crit_edge577 ], [ %63, %1395 ], [ %63, %1565 ], [ %63, %._crit_edge570 ], [ %63, %._crit_edge567 ], [ %63, %1774 ], [ %.3231, %1887 ], [ %.0228, %2100 ], [ %.8236, %2193 ], [ %.8236, %2274 ], [ %.8236, %2268 ], [ %.11239, %2301 ], [ %.13241, %2394 ], [ %.13241, %2475 ], [ %.13241, %2469 ], [ %.10238, %2543 ], [ %.10238, %2742 ], [ %.16244, %2835 ], [ %.16244, %2916 ], [ %.16244, %2910 ], [ %.10238, %2934 ], [ %.10238, %2930 ], [ %.10238, %3326 ], [ %.10238, %3345 ], [ %.10238, %3181 ], [ %.10238, %3200 ], [ %63, %._crit_edge395 ], [ %63, %._crit_edge392 ], [ %63, %._crit_edge389 ], [ %63, %._crit_edge386 ], [ %63, %._crit_edge383 ], [ %.18246.ph, %.loopexit.loopexit ], [ %.18246.ph10, %.loopexit.loopexit1 ], [ %.18246.ph35, %.loopexit.loopexit26 ], [ %.18246.ph60, %.loopexit.loopexit51 ], [ %.18246.ph85, %.loopexit.loopexit76 ], [ %.18246.ph110, %.loopexit.loopexit101 ], [ %.18246.ph135, %.loopexit.loopexit126 ], [ %.18246.ph160, %.loopexit.loopexit151 ], [ %.18246.ph185, %.loopexit.loopexit176 ], [ %.18246.ph210, %.loopexit.loopexit201 ], [ %.18246.ph235, %.loopexit.loopexit226 ], [ %.18246.ph260, %.loopexit.loopexit251 ], [ %.18246.ph285, %.loopexit.loopexit276 ], [ %.18246.ph310, %.loopexit.loopexit301 ], [ %.18246.ph335, %.loopexit.loopexit326 ], [ %.18246.ph360, %.loopexit.loopexit351 ], [ %.18246.ph385, %.loopexit.loopexit376 ], [ %.18246.ph410, %.loopexit.loopexit401 ], [ %.18246.ph435, %.loopexit.loopexit426 ], [ %.18246.ph460, %.loopexit.loopexit451 ], [ %.18246.ph485, %.loopexit.loopexit476 ], [ %.18246.ph510, %.loopexit.loopexit501 ], [ %.18246.ph535, %.loopexit.loopexit526 ], [ %.18246.ph560, %.loopexit.loopexit551 ], [ %.18246.ph585, %.loopexit.loopexit576 ], [ %.18246.ph610, %.loopexit.loopexit601 ], [ %.18246.ph635, %.loopexit.loopexit626 ], [ %.18246.ph660, %.loopexit.loopexit651 ], [ %.18246.ph685, %.loopexit.loopexit676 ], [ %.18246.ph710, %.loopexit.loopexit701 ], [ %.18246.ph735, %.loopexit.loopexit726 ], [ %.18246.ph760, %.loopexit.loopexit751 ], [ %.18246.ph785, %.loopexit.loopexit776 ], [ %.18246.ph810, %.loopexit.loopexit801 ], [ %.18246.ph835, %.loopexit.loopexit826 ], [ %.18246.ph860, %.loopexit.loopexit851 ], [ %.18246.ph885, %.loopexit.loopexit876 ], [ %.18246.ph910, %.loopexit.loopexit901 ], [ %.18246.ph935, %.loopexit.loopexit926 ], [ %.18246.ph960, %.loopexit.loopexit951 ], [ %.18246.ph985, %.loopexit.loopexit976 ], [ %.18246.ph1010, %.loopexit.loopexit1001 ]
  %.8227 = phi i32 [ %61, %3988 ], [ %61, %._crit_edge ], [ %.3222, %2521 ], [ %.3222, %2535 ], [ %61, %._crit_edge628 ], [ %61, %._crit_edge625 ], [ %61, %._crit_edge622 ], [ %61, %353 ], [ %61, %._crit_edge619 ], [ %61, %395 ], [ %61, %372 ], [ %61, %399 ], [ %61, %475 ], [ %61, %._crit_edge613 ], [ %61, %._crit_edge610 ], [ %61, %._crit_edge607 ], [ %61, %._crit_edge604 ], [ %61, %._crit_edge601 ], [ %61, %._crit_edge577 ], [ %61, %1395 ], [ %61, %1565 ], [ %61, %._crit_edge570 ], [ %61, %._crit_edge567 ], [ %61, %1774 ], [ %61, %1887 ], [ %61, %2100 ], [ %61, %2193 ], [ %61, %2274 ], [ %61, %2268 ], [ %2299, %2301 ], [ %.3222, %2394 ], [ %.3222, %2475 ], [ %.3222, %2469 ], [ %.0219, %2543 ], [ %.0219, %2742 ], [ %.6225, %2835 ], [ %.6225, %2916 ], [ %.6225, %2910 ], [ %.0219, %2934 ], [ %.0219, %2930 ], [ %.0219, %3326 ], [ %.0219, %3345 ], [ %.0219, %3181 ], [ %.0219, %3200 ], [ %61, %._crit_edge395 ], [ %61, %._crit_edge392 ], [ %61, %._crit_edge389 ], [ %61, %._crit_edge386 ], [ %61, %._crit_edge383 ], [ %.8227.ph, %.loopexit.loopexit ], [ %.8227.ph11, %.loopexit.loopexit1 ], [ %.8227.ph36, %.loopexit.loopexit26 ], [ %.8227.ph61, %.loopexit.loopexit51 ], [ %.8227.ph86, %.loopexit.loopexit76 ], [ %.8227.ph111, %.loopexit.loopexit101 ], [ %.8227.ph136, %.loopexit.loopexit126 ], [ %.8227.ph161, %.loopexit.loopexit151 ], [ %.8227.ph186, %.loopexit.loopexit176 ], [ %.8227.ph211, %.loopexit.loopexit201 ], [ %.8227.ph236, %.loopexit.loopexit226 ], [ %.8227.ph261, %.loopexit.loopexit251 ], [ %.8227.ph286, %.loopexit.loopexit276 ], [ %.8227.ph311, %.loopexit.loopexit301 ], [ %.8227.ph336, %.loopexit.loopexit326 ], [ %.8227.ph361, %.loopexit.loopexit351 ], [ %.8227.ph386, %.loopexit.loopexit376 ], [ %.8227.ph411, %.loopexit.loopexit401 ], [ %.8227.ph436, %.loopexit.loopexit426 ], [ %.8227.ph461, %.loopexit.loopexit451 ], [ %.8227.ph486, %.loopexit.loopexit476 ], [ %.8227.ph511, %.loopexit.loopexit501 ], [ %.8227.ph536, %.loopexit.loopexit526 ], [ %.8227.ph561, %.loopexit.loopexit551 ], [ %.8227.ph586, %.loopexit.loopexit576 ], [ %.8227.ph611, %.loopexit.loopexit601 ], [ %.8227.ph636, %.loopexit.loopexit626 ], [ %.8227.ph661, %.loopexit.loopexit651 ], [ %.8227.ph686, %.loopexit.loopexit676 ], [ %.8227.ph711, %.loopexit.loopexit701 ], [ %.8227.ph736, %.loopexit.loopexit726 ], [ %.8227.ph761, %.loopexit.loopexit751 ], [ %.8227.ph786, %.loopexit.loopexit776 ], [ %.8227.ph811, %.loopexit.loopexit801 ], [ %.8227.ph836, %.loopexit.loopexit826 ], [ %.8227.ph861, %.loopexit.loopexit851 ], [ %.8227.ph886, %.loopexit.loopexit876 ], [ %.8227.ph911, %.loopexit.loopexit901 ], [ %.8227.ph936, %.loopexit.loopexit926 ], [ %.8227.ph961, %.loopexit.loopexit951 ], [ %.8227.ph986, %.loopexit.loopexit976 ], [ %.8227.ph1011, %.loopexit.loopexit1001 ]
  %.13218 = phi i32 [ %59, %3988 ], [ %59, %._crit_edge ], [ %.7212.lcssa369, %2521 ], [ %.8213.lcssa371, %2535 ], [ %59, %._crit_edge628 ], [ %59, %._crit_edge625 ], [ %59, %._crit_edge622 ], [ %59, %353 ], [ %59, %._crit_edge619 ], [ %59, %395 ], [ %59, %372 ], [ %59, %399 ], [ %59, %475 ], [ %59, %._crit_edge613 ], [ %59, %._crit_edge610 ], [ %59, %._crit_edge607 ], [ %59, %._crit_edge604 ], [ %59, %._crit_edge601 ], [ %59, %._crit_edge577 ], [ %59, %1395 ], [ %59, %1565 ], [ %59, %._crit_edge570 ], [ %59, %._crit_edge567 ], [ %59, %1774 ], [ %59, %1887 ], [ %59, %2100 ], [ %59, %2193 ], [ %59, %2274 ], [ %59, %2268 ], [ %.3208, %2301 ], [ %.5210, %2394 ], [ %.5210, %2475 ], [ %.5210, %2469 ], [ %.0205, %2543 ], [ %.0205, %2742 ], [ %.11216, %2835 ], [ %.11216, %2916 ], [ %.11216, %2910 ], [ %.0205, %2934 ], [ %.0205, %2930 ], [ %.0205, %3326 ], [ %.0205, %3345 ], [ %.0205, %3181 ], [ %.0205, %3200 ], [ %59, %._crit_edge395 ], [ %59, %._crit_edge392 ], [ %59, %._crit_edge389 ], [ %59, %._crit_edge386 ], [ %59, %._crit_edge383 ], [ %.13218.ph, %.loopexit.loopexit ], [ %.13218.ph12, %.loopexit.loopexit1 ], [ %.13218.ph37, %.loopexit.loopexit26 ], [ %.13218.ph62, %.loopexit.loopexit51 ], [ %.13218.ph87, %.loopexit.loopexit76 ], [ %.13218.ph112, %.loopexit.loopexit101 ], [ %.13218.ph137, %.loopexit.loopexit126 ], [ %.13218.ph162, %.loopexit.loopexit151 ], [ %.13218.ph187, %.loopexit.loopexit176 ], [ %.13218.ph212, %.loopexit.loopexit201 ], [ %.13218.ph237, %.loopexit.loopexit226 ], [ %.13218.ph262, %.loopexit.loopexit251 ], [ %.13218.ph287, %.loopexit.loopexit276 ], [ %.13218.ph312, %.loopexit.loopexit301 ], [ %.13218.ph337, %.loopexit.loopexit326 ], [ %.13218.ph362, %.loopexit.loopexit351 ], [ %.13218.ph387, %.loopexit.loopexit376 ], [ %.13218.ph412, %.loopexit.loopexit401 ], [ %.13218.ph437, %.loopexit.loopexit426 ], [ %.13218.ph462, %.loopexit.loopexit451 ], [ %.13218.ph487, %.loopexit.loopexit476 ], [ %.13218.ph512, %.loopexit.loopexit501 ], [ %.13218.ph537, %.loopexit.loopexit526 ], [ %.13218.ph562, %.loopexit.loopexit551 ], [ %.13218.ph587, %.loopexit.loopexit576 ], [ %.13218.ph612, %.loopexit.loopexit601 ], [ %.13218.ph637, %.loopexit.loopexit626 ], [ %.13218.ph662, %.loopexit.loopexit651 ], [ %.13218.ph687, %.loopexit.loopexit676 ], [ %.13218.ph712, %.loopexit.loopexit701 ], [ %.13218.ph737, %.loopexit.loopexit726 ], [ %.13218.ph762, %.loopexit.loopexit751 ], [ %.13218.ph787, %.loopexit.loopexit776 ], [ %.13218.ph812, %.loopexit.loopexit801 ], [ %.13218.ph837, %.loopexit.loopexit826 ], [ %.13218.ph862, %.loopexit.loopexit851 ], [ %.13218.ph887, %.loopexit.loopexit876 ], [ %.13218.ph912, %.loopexit.loopexit901 ], [ %.13218.ph937, %.loopexit.loopexit926 ], [ %.13218.ph962, %.loopexit.loopexit951 ], [ %.13218.ph987, %.loopexit.loopexit976 ], [ %.13218.ph1012, %.loopexit.loopexit1001 ]
  %.14204 = phi i32 [ %57, %3988 ], [ %57, %._crit_edge ], [ %2522, %2521 ], [ %2536, %2535 ], [ %57, %._crit_edge628 ], [ %57, %._crit_edge625 ], [ %57, %._crit_edge622 ], [ %57, %353 ], [ %57, %._crit_edge619 ], [ %57, %395 ], [ %57, %372 ], [ %57, %399 ], [ %57, %475 ], [ %57, %._crit_edge613 ], [ %57, %._crit_edge610 ], [ %57, %._crit_edge607 ], [ %57, %._crit_edge604 ], [ %57, %._crit_edge601 ], [ %57, %._crit_edge577 ], [ %57, %1395 ], [ %57, %1565 ], [ %57, %._crit_edge570 ], [ %57, %._crit_edge567 ], [ %57, %1774 ], [ %57, %1887 ], [ 0, %2100 ], [ %.1191, %2193 ], [ %.1191, %2274 ], [ %.1191, %2268 ], [ %.4194, %2301 ], [ %.6196, %2394 ], [ %.6196, %2475 ], [ %.6196, %2469 ], [ %.3193, %2543 ], [ %2740, %2742 ], [ %.12202, %2835 ], [ %.12202, %2916 ], [ %.12202, %2910 ], [ %.3193, %2934 ], [ %.3193, %2930 ], [ %.3193, %3326 ], [ %.3193, %3345 ], [ %.3193, %3181 ], [ %.3193, %3200 ], [ %57, %._crit_edge395 ], [ %57, %._crit_edge392 ], [ %57, %._crit_edge389 ], [ %57, %._crit_edge386 ], [ %57, %._crit_edge383 ], [ %.14204.ph, %.loopexit.loopexit ], [ %.14204.ph13, %.loopexit.loopexit1 ], [ %.14204.ph38, %.loopexit.loopexit26 ], [ %.14204.ph63, %.loopexit.loopexit51 ], [ %.14204.ph88, %.loopexit.loopexit76 ], [ %.14204.ph113, %.loopexit.loopexit101 ], [ %.14204.ph138, %.loopexit.loopexit126 ], [ %.14204.ph163, %.loopexit.loopexit151 ], [ %.14204.ph188, %.loopexit.loopexit176 ], [ %.14204.ph213, %.loopexit.loopexit201 ], [ %.14204.ph238, %.loopexit.loopexit226 ], [ %.14204.ph263, %.loopexit.loopexit251 ], [ %.14204.ph288, %.loopexit.loopexit276 ], [ %.14204.ph313, %.loopexit.loopexit301 ], [ %.14204.ph338, %.loopexit.loopexit326 ], [ %.14204.ph363, %.loopexit.loopexit351 ], [ %.14204.ph388, %.loopexit.loopexit376 ], [ %.14204.ph413, %.loopexit.loopexit401 ], [ %.14204.ph438, %.loopexit.loopexit426 ], [ %.14204.ph463, %.loopexit.loopexit451 ], [ %.14204.ph488, %.loopexit.loopexit476 ], [ %.14204.ph513, %.loopexit.loopexit501 ], [ %.14204.ph538, %.loopexit.loopexit526 ], [ %.14204.ph563, %.loopexit.loopexit551 ], [ %.14204.ph588, %.loopexit.loopexit576 ], [ %.14204.ph613, %.loopexit.loopexit601 ], [ %.14204.ph638, %.loopexit.loopexit626 ], [ %.14204.ph663, %.loopexit.loopexit651 ], [ %.14204.ph688, %.loopexit.loopexit676 ], [ %.14204.ph713, %.loopexit.loopexit701 ], [ %.14204.ph738, %.loopexit.loopexit726 ], [ %.14204.ph763, %.loopexit.loopexit751 ], [ %.14204.ph788, %.loopexit.loopexit776 ], [ %.14204.ph813, %.loopexit.loopexit801 ], [ %.14204.ph838, %.loopexit.loopexit826 ], [ %.14204.ph863, %.loopexit.loopexit851 ], [ %.14204.ph888, %.loopexit.loopexit876 ], [ %.14204.ph913, %.loopexit.loopexit901 ], [ %.14204.ph938, %.loopexit.loopexit926 ], [ %.14204.ph963, %.loopexit.loopexit951 ], [ %.14204.ph988, %.loopexit.loopexit976 ], [ %.14204.ph1013, %.loopexit.loopexit1001 ]
  %.11189 = phi i32 [ %55, %3988 ], [ %55, %._crit_edge ], [ %.6184, %2521 ], [ %.6184, %2535 ], [ %55, %._crit_edge628 ], [ %55, %._crit_edge625 ], [ %55, %._crit_edge622 ], [ %55, %353 ], [ %55, %._crit_edge619 ], [ %55, %395 ], [ %55, %372 ], [ %55, %399 ], [ %55, %475 ], [ %55, %._crit_edge613 ], [ %55, %._crit_edge610 ], [ %55, %._crit_edge607 ], [ %55, %._crit_edge604 ], [ %55, %._crit_edge601 ], [ %55, %._crit_edge577 ], [ %55, %1395 ], [ %55, %1565 ], [ %55, %._crit_edge570 ], [ %55, %._crit_edge567 ], [ %55, %1774 ], [ %55, %1887 ], [ %2096, %2100 ], [ %.1179, %2193 ], [ %.1179, %2274 ], [ %.1179, %2268 ], [ %.4182, %2301 ], [ %.6184, %2394 ], [ %.6184, %2475 ], [ %.6184, %2469 ], [ %.3181, %2543 ], [ %.3181, %2742 ], [ %.9187, %2835 ], [ %.9187, %2916 ], [ %.9187, %2910 ], [ %.3181, %2934 ], [ %.3181, %2930 ], [ %.3181, %3326 ], [ %.3181, %3345 ], [ %.3181, %3181 ], [ %.3181, %3200 ], [ %55, %._crit_edge395 ], [ %55, %._crit_edge392 ], [ %55, %._crit_edge389 ], [ %55, %._crit_edge386 ], [ %55, %._crit_edge383 ], [ %.11189.ph, %.loopexit.loopexit ], [ %.11189.ph14, %.loopexit.loopexit1 ], [ %.11189.ph39, %.loopexit.loopexit26 ], [ %.11189.ph64, %.loopexit.loopexit51 ], [ %.11189.ph89, %.loopexit.loopexit76 ], [ %.11189.ph114, %.loopexit.loopexit101 ], [ %.11189.ph139, %.loopexit.loopexit126 ], [ %.11189.ph164, %.loopexit.loopexit151 ], [ %.11189.ph189, %.loopexit.loopexit176 ], [ %.11189.ph214, %.loopexit.loopexit201 ], [ %.11189.ph239, %.loopexit.loopexit226 ], [ %.11189.ph264, %.loopexit.loopexit251 ], [ %.11189.ph289, %.loopexit.loopexit276 ], [ %.11189.ph314, %.loopexit.loopexit301 ], [ %.11189.ph339, %.loopexit.loopexit326 ], [ %.11189.ph364, %.loopexit.loopexit351 ], [ %.11189.ph389, %.loopexit.loopexit376 ], [ %.11189.ph414, %.loopexit.loopexit401 ], [ %.11189.ph439, %.loopexit.loopexit426 ], [ %.11189.ph464, %.loopexit.loopexit451 ], [ %.11189.ph489, %.loopexit.loopexit476 ], [ %.11189.ph514, %.loopexit.loopexit501 ], [ %.11189.ph539, %.loopexit.loopexit526 ], [ %.11189.ph564, %.loopexit.loopexit551 ], [ %.11189.ph589, %.loopexit.loopexit576 ], [ %.11189.ph614, %.loopexit.loopexit601 ], [ %.11189.ph639, %.loopexit.loopexit626 ], [ %.11189.ph664, %.loopexit.loopexit651 ], [ %.11189.ph689, %.loopexit.loopexit676 ], [ %.11189.ph714, %.loopexit.loopexit701 ], [ %.11189.ph739, %.loopexit.loopexit726 ], [ %.11189.ph764, %.loopexit.loopexit751 ], [ %.11189.ph789, %.loopexit.loopexit776 ], [ %.11189.ph814, %.loopexit.loopexit801 ], [ %.11189.ph839, %.loopexit.loopexit826 ], [ %.11189.ph864, %.loopexit.loopexit851 ], [ %.11189.ph889, %.loopexit.loopexit876 ], [ %.11189.ph914, %.loopexit.loopexit901 ], [ %.11189.ph939, %.loopexit.loopexit926 ], [ %.11189.ph964, %.loopexit.loopexit951 ], [ %.11189.ph989, %.loopexit.loopexit976 ], [ %.11189.ph1014, %.loopexit.loopexit1001 ]
  %.8177 = phi i32 [ %53, %3988 ], [ %53, %._crit_edge ], [ %2488, %2521 ], [ %2488, %2535 ], [ %53, %._crit_edge628 ], [ %53, %._crit_edge625 ], [ %53, %._crit_edge622 ], [ %53, %353 ], [ %53, %._crit_edge619 ], [ %53, %395 ], [ %53, %372 ], [ %53, %399 ], [ %53, %475 ], [ %53, %._crit_edge613 ], [ %53, %._crit_edge610 ], [ %53, %._crit_edge607 ], [ %53, %._crit_edge604 ], [ %53, %._crit_edge601 ], [ %53, %._crit_edge577 ], [ %53, %1395 ], [ %53, %1565 ], [ %53, %._crit_edge570 ], [ %53, %._crit_edge567 ], [ %53, %1774 ], [ %53, %1887 ], [ %53, %2100 ], [ %53, %2193 ], [ %53, %2274 ], [ %53, %2268 ], [ %.1170, %2301 ], [ %.3172, %2394 ], [ %.3172, %2475 ], [ %.3172, %2469 ], [ %.0169, %2543 ], [ %.0169, %2742 ], [ %.6175, %2835 ], [ %.6175, %2916 ], [ %.6175, %2910 ], [ %.0169, %2934 ], [ %.0169, %2930 ], [ %.0169, %3326 ], [ %.0169, %3345 ], [ %.0169, %3181 ], [ %.0169, %3200 ], [ %53, %._crit_edge395 ], [ %53, %._crit_edge392 ], [ %53, %._crit_edge389 ], [ %53, %._crit_edge386 ], [ %53, %._crit_edge383 ], [ %.8177.ph, %.loopexit.loopexit ], [ %.8177.ph15, %.loopexit.loopexit1 ], [ %.8177.ph40, %.loopexit.loopexit26 ], [ %.8177.ph65, %.loopexit.loopexit51 ], [ %.8177.ph90, %.loopexit.loopexit76 ], [ %.8177.ph115, %.loopexit.loopexit101 ], [ %.8177.ph140, %.loopexit.loopexit126 ], [ %.8177.ph165, %.loopexit.loopexit151 ], [ %.8177.ph190, %.loopexit.loopexit176 ], [ %.8177.ph215, %.loopexit.loopexit201 ], [ %.8177.ph240, %.loopexit.loopexit226 ], [ %.8177.ph265, %.loopexit.loopexit251 ], [ %.8177.ph290, %.loopexit.loopexit276 ], [ %.8177.ph315, %.loopexit.loopexit301 ], [ %.8177.ph340, %.loopexit.loopexit326 ], [ %.8177.ph365, %.loopexit.loopexit351 ], [ %.8177.ph390, %.loopexit.loopexit376 ], [ %.8177.ph415, %.loopexit.loopexit401 ], [ %.8177.ph440, %.loopexit.loopexit426 ], [ %.8177.ph465, %.loopexit.loopexit451 ], [ %.8177.ph490, %.loopexit.loopexit476 ], [ %.8177.ph515, %.loopexit.loopexit501 ], [ %.8177.ph540, %.loopexit.loopexit526 ], [ %.8177.ph565, %.loopexit.loopexit551 ], [ %.8177.ph590, %.loopexit.loopexit576 ], [ %.8177.ph615, %.loopexit.loopexit601 ], [ %.8177.ph640, %.loopexit.loopexit626 ], [ %.8177.ph665, %.loopexit.loopexit651 ], [ %.8177.ph690, %.loopexit.loopexit676 ], [ %.8177.ph715, %.loopexit.loopexit701 ], [ %.8177.ph740, %.loopexit.loopexit726 ], [ %.8177.ph765, %.loopexit.loopexit751 ], [ %.8177.ph790, %.loopexit.loopexit776 ], [ %.8177.ph815, %.loopexit.loopexit801 ], [ %.8177.ph840, %.loopexit.loopexit826 ], [ %.8177.ph865, %.loopexit.loopexit851 ], [ %.8177.ph890, %.loopexit.loopexit876 ], [ %.8177.ph915, %.loopexit.loopexit901 ], [ %.8177.ph940, %.loopexit.loopexit926 ], [ %.8177.ph965, %.loopexit.loopexit951 ], [ %.8177.ph990, %.loopexit.loopexit976 ], [ %.8177.ph1015, %.loopexit.loopexit1001 ]
  %.14168 = phi i32 [ %51, %3988 ], [ %51, %._crit_edge ], [ %.8162, %2521 ], [ %.8162, %2535 ], [ %51, %._crit_edge628 ], [ %51, %._crit_edge625 ], [ %51, %._crit_edge622 ], [ %51, %353 ], [ %51, %._crit_edge619 ], [ %51, %395 ], [ %51, %372 ], [ %51, %399 ], [ %51, %475 ], [ %51, %._crit_edge613 ], [ %51, %._crit_edge610 ], [ %51, %._crit_edge607 ], [ %51, %._crit_edge604 ], [ %51, %._crit_edge601 ], [ %51, %._crit_edge577 ], [ %51, %1395 ], [ %51, %1565 ], [ %51, %._crit_edge570 ], [ %51, %._crit_edge567 ], [ %51, %1774 ], [ %51, %1887 ], [ 0, %2100 ], [ %.2156, %2193 ], [ %.2156, %2274 ], [ %.2156, %2268 ], [ %.5159, %2301 ], [ %.8162, %2394 ], [ %.8162, %2475 ], [ %.8162, %2469 ], [ %.4158, %2543 ], [ %.4158, %2742 ], [ %.12166, %2835 ], [ %.12166, %2916 ], [ %.12166, %2910 ], [ %.4158, %2934 ], [ %.4158, %2930 ], [ %.4158, %3326 ], [ %.4158, %3345 ], [ %.4158, %3181 ], [ %.4158, %3200 ], [ %51, %._crit_edge395 ], [ %51, %._crit_edge392 ], [ %51, %._crit_edge389 ], [ %51, %._crit_edge386 ], [ %51, %._crit_edge383 ], [ %.14168.ph, %.loopexit.loopexit ], [ %.14168.ph16, %.loopexit.loopexit1 ], [ %.14168.ph41, %.loopexit.loopexit26 ], [ %.14168.ph66, %.loopexit.loopexit51 ], [ %.14168.ph91, %.loopexit.loopexit76 ], [ %.14168.ph116, %.loopexit.loopexit101 ], [ %.14168.ph141, %.loopexit.loopexit126 ], [ %.14168.ph166, %.loopexit.loopexit151 ], [ %.14168.ph191, %.loopexit.loopexit176 ], [ %.14168.ph216, %.loopexit.loopexit201 ], [ %.14168.ph241, %.loopexit.loopexit226 ], [ %.14168.ph266, %.loopexit.loopexit251 ], [ %.14168.ph291, %.loopexit.loopexit276 ], [ %.14168.ph316, %.loopexit.loopexit301 ], [ %.14168.ph341, %.loopexit.loopexit326 ], [ %.14168.ph366, %.loopexit.loopexit351 ], [ %.14168.ph391, %.loopexit.loopexit376 ], [ %.14168.ph416, %.loopexit.loopexit401 ], [ %.14168.ph441, %.loopexit.loopexit426 ], [ %.14168.ph466, %.loopexit.loopexit451 ], [ %.14168.ph491, %.loopexit.loopexit476 ], [ %.14168.ph516, %.loopexit.loopexit501 ], [ %.14168.ph541, %.loopexit.loopexit526 ], [ %.14168.ph566, %.loopexit.loopexit551 ], [ %.14168.ph591, %.loopexit.loopexit576 ], [ %.14168.ph616, %.loopexit.loopexit601 ], [ %.14168.ph641, %.loopexit.loopexit626 ], [ %.14168.ph666, %.loopexit.loopexit651 ], [ %.14168.ph691, %.loopexit.loopexit676 ], [ %.14168.ph716, %.loopexit.loopexit701 ], [ %.14168.ph741, %.loopexit.loopexit726 ], [ %.14168.ph766, %.loopexit.loopexit751 ], [ %.14168.ph791, %.loopexit.loopexit776 ], [ %.14168.ph816, %.loopexit.loopexit801 ], [ %.14168.ph841, %.loopexit.loopexit826 ], [ %.14168.ph866, %.loopexit.loopexit851 ], [ %.14168.ph891, %.loopexit.loopexit876 ], [ %.14168.ph916, %.loopexit.loopexit901 ], [ %.14168.ph941, %.loopexit.loopexit926 ], [ %.14168.ph966, %.loopexit.loopexit951 ], [ %.14168.ph991, %.loopexit.loopexit976 ], [ %.14168.ph1016, %.loopexit.loopexit1001 ]
  %.14153 = phi i32 [ %49, %3988 ], [ %49, %._crit_edge ], [ %.8147, %2521 ], [ %.8147, %2535 ], [ %49, %._crit_edge628 ], [ %49, %._crit_edge625 ], [ %49, %._crit_edge622 ], [ %49, %353 ], [ %49, %._crit_edge619 ], [ %49, %395 ], [ %49, %372 ], [ %49, %399 ], [ %49, %475 ], [ %49, %._crit_edge613 ], [ %49, %._crit_edge610 ], [ %49, %._crit_edge607 ], [ %49, %._crit_edge604 ], [ %49, %._crit_edge601 ], [ %49, %._crit_edge577 ], [ %49, %1395 ], [ %49, %1565 ], [ %49, %._crit_edge570 ], [ %49, %._crit_edge567 ], [ %49, %1774 ], [ %49, %1887 ], [ %2101, %2100 ], [ %.2141, %2193 ], [ %.2141, %2274 ], [ %.2141, %2268 ], [ %2302, %2301 ], [ %.8147, %2394 ], [ %.8147, %2475 ], [ %.8147, %2469 ], [ %.4143, %2543 ], [ %2743, %2742 ], [ %.12151, %2835 ], [ %.12151, %2916 ], [ %.12151, %2910 ], [ %.4143, %2934 ], [ %.4143, %2930 ], [ %.4143, %3326 ], [ %.4143, %3345 ], [ %.4143, %3181 ], [ %.4143, %3200 ], [ %49, %._crit_edge395 ], [ %49, %._crit_edge392 ], [ %49, %._crit_edge389 ], [ %49, %._crit_edge386 ], [ %49, %._crit_edge383 ], [ %.14153.ph, %.loopexit.loopexit ], [ %.14153.ph17, %.loopexit.loopexit1 ], [ %.14153.ph42, %.loopexit.loopexit26 ], [ %.14153.ph67, %.loopexit.loopexit51 ], [ %.14153.ph92, %.loopexit.loopexit76 ], [ %.14153.ph117, %.loopexit.loopexit101 ], [ %.14153.ph142, %.loopexit.loopexit126 ], [ %.14153.ph167, %.loopexit.loopexit151 ], [ %.14153.ph192, %.loopexit.loopexit176 ], [ %.14153.ph217, %.loopexit.loopexit201 ], [ %.14153.ph242, %.loopexit.loopexit226 ], [ %.14153.ph267, %.loopexit.loopexit251 ], [ %.14153.ph292, %.loopexit.loopexit276 ], [ %.14153.ph317, %.loopexit.loopexit301 ], [ %.14153.ph342, %.loopexit.loopexit326 ], [ %.14153.ph367, %.loopexit.loopexit351 ], [ %.14153.ph392, %.loopexit.loopexit376 ], [ %.14153.ph417, %.loopexit.loopexit401 ], [ %.14153.ph442, %.loopexit.loopexit426 ], [ %.14153.ph467, %.loopexit.loopexit451 ], [ %.14153.ph492, %.loopexit.loopexit476 ], [ %.14153.ph517, %.loopexit.loopexit501 ], [ %.14153.ph542, %.loopexit.loopexit526 ], [ %.14153.ph567, %.loopexit.loopexit551 ], [ %.14153.ph592, %.loopexit.loopexit576 ], [ %.14153.ph617, %.loopexit.loopexit601 ], [ %.14153.ph642, %.loopexit.loopexit626 ], [ %.14153.ph667, %.loopexit.loopexit651 ], [ %.14153.ph692, %.loopexit.loopexit676 ], [ %.14153.ph717, %.loopexit.loopexit701 ], [ %.14153.ph742, %.loopexit.loopexit726 ], [ %.14153.ph767, %.loopexit.loopexit751 ], [ %.14153.ph792, %.loopexit.loopexit776 ], [ %.14153.ph817, %.loopexit.loopexit801 ], [ %.14153.ph842, %.loopexit.loopexit826 ], [ %.14153.ph867, %.loopexit.loopexit851 ], [ %.14153.ph892, %.loopexit.loopexit876 ], [ %.14153.ph917, %.loopexit.loopexit901 ], [ %.14153.ph942, %.loopexit.loopexit926 ], [ %.14153.ph967, %.loopexit.loopexit951 ], [ %.14153.ph992, %.loopexit.loopexit976 ], [ %.14153.ph1017, %.loopexit.loopexit1001 ]
  %.11138 = phi i32 [ %47, %3988 ], [ %47, %._crit_edge ], [ %.6133, %2521 ], [ %.6133, %2535 ], [ %47, %._crit_edge628 ], [ %47, %._crit_edge625 ], [ %47, %._crit_edge622 ], [ %47, %353 ], [ %47, %._crit_edge619 ], [ %47, %395 ], [ %47, %372 ], [ %47, %399 ], [ %47, %475 ], [ %47, %._crit_edge613 ], [ %47, %._crit_edge610 ], [ %47, %._crit_edge607 ], [ %47, %._crit_edge604 ], [ %47, %._crit_edge601 ], [ %47, %._crit_edge577 ], [ %47, %1395 ], [ %47, %1565 ], [ %47, %._crit_edge570 ], [ %47, %._crit_edge567 ], [ %47, %1774 ], [ %47, %1887 ], [ %2097, %2100 ], [ %.1128, %2193 ], [ %.1128, %2274 ], [ %.1128, %2268 ], [ %.4131, %2301 ], [ %.6133, %2394 ], [ %.6133, %2475 ], [ %.6133, %2469 ], [ %.3130, %2543 ], [ %.3130, %2742 ], [ %.9136, %2835 ], [ %.9136, %2916 ], [ %.9136, %2910 ], [ %.3130, %2934 ], [ %.3130, %2930 ], [ %.3130, %3326 ], [ %.3130, %3345 ], [ %.3130, %3181 ], [ %.3130, %3200 ], [ %47, %._crit_edge395 ], [ %47, %._crit_edge392 ], [ %47, %._crit_edge389 ], [ %47, %._crit_edge386 ], [ %47, %._crit_edge383 ], [ %.11138.ph, %.loopexit.loopexit ], [ %.11138.ph18, %.loopexit.loopexit1 ], [ %.11138.ph43, %.loopexit.loopexit26 ], [ %.11138.ph68, %.loopexit.loopexit51 ], [ %.11138.ph93, %.loopexit.loopexit76 ], [ %.11138.ph118, %.loopexit.loopexit101 ], [ %.11138.ph143, %.loopexit.loopexit126 ], [ %.11138.ph168, %.loopexit.loopexit151 ], [ %.11138.ph193, %.loopexit.loopexit176 ], [ %.11138.ph218, %.loopexit.loopexit201 ], [ %.11138.ph243, %.loopexit.loopexit226 ], [ %.11138.ph268, %.loopexit.loopexit251 ], [ %.11138.ph293, %.loopexit.loopexit276 ], [ %.11138.ph318, %.loopexit.loopexit301 ], [ %.11138.ph343, %.loopexit.loopexit326 ], [ %.11138.ph368, %.loopexit.loopexit351 ], [ %.11138.ph393, %.loopexit.loopexit376 ], [ %.11138.ph418, %.loopexit.loopexit401 ], [ %.11138.ph443, %.loopexit.loopexit426 ], [ %.11138.ph468, %.loopexit.loopexit451 ], [ %.11138.ph493, %.loopexit.loopexit476 ], [ %.11138.ph518, %.loopexit.loopexit501 ], [ %.11138.ph543, %.loopexit.loopexit526 ], [ %.11138.ph568, %.loopexit.loopexit551 ], [ %.11138.ph593, %.loopexit.loopexit576 ], [ %.11138.ph618, %.loopexit.loopexit601 ], [ %.11138.ph643, %.loopexit.loopexit626 ], [ %.11138.ph668, %.loopexit.loopexit651 ], [ %.11138.ph693, %.loopexit.loopexit676 ], [ %.11138.ph718, %.loopexit.loopexit701 ], [ %.11138.ph743, %.loopexit.loopexit726 ], [ %.11138.ph768, %.loopexit.loopexit751 ], [ %.11138.ph793, %.loopexit.loopexit776 ], [ %.11138.ph818, %.loopexit.loopexit801 ], [ %.11138.ph843, %.loopexit.loopexit826 ], [ %.11138.ph868, %.loopexit.loopexit851 ], [ %.11138.ph893, %.loopexit.loopexit876 ], [ %.11138.ph918, %.loopexit.loopexit901 ], [ %.11138.ph943, %.loopexit.loopexit926 ], [ %.11138.ph968, %.loopexit.loopexit951 ], [ %.11138.ph993, %.loopexit.loopexit976 ], [ %.11138.ph1018, %.loopexit.loopexit1001 ]
  %.20126 = phi i32 [ %45, %3988 ], [ %45, %._crit_edge ], [ %.15121, %2521 ], [ %.15121, %2535 ], [ %45, %._crit_edge628 ], [ %45, %._crit_edge625 ], [ %45, %._crit_edge622 ], [ %45, %353 ], [ %45, %._crit_edge619 ], [ %45, %395 ], [ %45, %372 ], [ %45, %399 ], [ %45, %475 ], [ %45, %._crit_edge613 ], [ %45, %._crit_edge610 ], [ %45, %._crit_edge607 ], [ %45, %._crit_edge604 ], [ %45, %._crit_edge601 ], [ %45, %._crit_edge577 ], [ %45, %1395 ], [ %45, %1565 ], [ %45, %._crit_edge570 ], [ %1660, %._crit_edge567 ], [ %.2108, %1774 ], [ %.6112, %1887 ], [ %.3109, %2100 ], [ %.10116, %2193 ], [ %.10116, %2274 ], [ %.10116, %2268 ], [ %.13119, %2301 ], [ %.15121, %2394 ], [ %.15121, %2475 ], [ %.15121, %2469 ], [ %.12118, %2543 ], [ %.12118, %2742 ], [ %.18124, %2835 ], [ %.18124, %2916 ], [ %.18124, %2910 ], [ %.12118, %2934 ], [ %.12118, %2930 ], [ %.12118, %3326 ], [ %.12118, %3345 ], [ %.12118, %3181 ], [ %.12118, %3200 ], [ %45, %._crit_edge395 ], [ %45, %._crit_edge392 ], [ %45, %._crit_edge389 ], [ %45, %._crit_edge386 ], [ %45, %._crit_edge383 ], [ %.20126.ph, %.loopexit.loopexit ], [ %.20126.ph19, %.loopexit.loopexit1 ], [ %.20126.ph44, %.loopexit.loopexit26 ], [ %.20126.ph69, %.loopexit.loopexit51 ], [ %.20126.ph94, %.loopexit.loopexit76 ], [ %.20126.ph119, %.loopexit.loopexit101 ], [ %.20126.ph144, %.loopexit.loopexit126 ], [ %.20126.ph169, %.loopexit.loopexit151 ], [ %.20126.ph194, %.loopexit.loopexit176 ], [ %.20126.ph219, %.loopexit.loopexit201 ], [ %.20126.ph244, %.loopexit.loopexit226 ], [ %.20126.ph269, %.loopexit.loopexit251 ], [ %.20126.ph294, %.loopexit.loopexit276 ], [ %.20126.ph319, %.loopexit.loopexit301 ], [ %.20126.ph344, %.loopexit.loopexit326 ], [ %.20126.ph369, %.loopexit.loopexit351 ], [ %.20126.ph394, %.loopexit.loopexit376 ], [ %.20126.ph419, %.loopexit.loopexit401 ], [ %.20126.ph444, %.loopexit.loopexit426 ], [ %.20126.ph469, %.loopexit.loopexit451 ], [ %.20126.ph494, %.loopexit.loopexit476 ], [ %.20126.ph519, %.loopexit.loopexit501 ], [ %.20126.ph544, %.loopexit.loopexit526 ], [ %.20126.ph569, %.loopexit.loopexit551 ], [ %.20126.ph594, %.loopexit.loopexit576 ], [ %.20126.ph619, %.loopexit.loopexit601 ], [ %.20126.ph644, %.loopexit.loopexit626 ], [ %.20126.ph669, %.loopexit.loopexit651 ], [ %.20126.ph694, %.loopexit.loopexit676 ], [ %.20126.ph719, %.loopexit.loopexit701 ], [ %.20126.ph744, %.loopexit.loopexit726 ], [ %.20126.ph769, %.loopexit.loopexit751 ], [ %.20126.ph794, %.loopexit.loopexit776 ], [ %.20126.ph819, %.loopexit.loopexit801 ], [ %.20126.ph844, %.loopexit.loopexit826 ], [ %.20126.ph869, %.loopexit.loopexit851 ], [ %.20126.ph894, %.loopexit.loopexit876 ], [ %.20126.ph919, %.loopexit.loopexit901 ], [ %.20126.ph944, %.loopexit.loopexit926 ], [ %.20126.ph969, %.loopexit.loopexit951 ], [ %.20126.ph994, %.loopexit.loopexit976 ], [ %.20126.ph1019, %.loopexit.loopexit1001 ]
  %.21105 = phi i32 [ %43, %3988 ], [ %43, %._crit_edge ], [ %.16100, %2521 ], [ %.16100, %2535 ], [ %43, %._crit_edge628 ], [ %43, %._crit_edge625 ], [ %43, %._crit_edge622 ], [ %43, %353 ], [ %43, %._crit_edge619 ], [ %43, %395 ], [ %43, %372 ], [ %43, %399 ], [ %43, %475 ], [ %43, %._crit_edge613 ], [ %43, %._crit_edge610 ], [ %43, %._crit_edge607 ], [ %43, %._crit_edge604 ], [ %43, %._crit_edge601 ], [ %43, %._crit_edge577 ], [ %43, %1395 ], [ %43, %1565 ], [ %1594, %._crit_edge570 ], [ %.084, %._crit_edge567 ], [ %.387, %1774 ], [ %.791, %1887 ], [ %.488, %2100 ], [ %.1195, %2193 ], [ %.1195, %2274 ], [ %.1195, %2268 ], [ %.1498, %2301 ], [ %.16100, %2394 ], [ %.16100, %2475 ], [ %.16100, %2469 ], [ %.1397, %2543 ], [ %.1397, %2742 ], [ %.19103, %2835 ], [ %.19103, %2916 ], [ %.19103, %2910 ], [ %.1397, %2934 ], [ %.1397, %2930 ], [ %.1397, %3326 ], [ %.1397, %3345 ], [ %.1397, %3181 ], [ %.1397, %3200 ], [ %43, %._crit_edge395 ], [ %43, %._crit_edge392 ], [ %43, %._crit_edge389 ], [ %43, %._crit_edge386 ], [ %43, %._crit_edge383 ], [ %.21105.ph, %.loopexit.loopexit ], [ %.21105.ph20, %.loopexit.loopexit1 ], [ %.21105.ph45, %.loopexit.loopexit26 ], [ %.21105.ph70, %.loopexit.loopexit51 ], [ %.21105.ph95, %.loopexit.loopexit76 ], [ %.21105.ph120, %.loopexit.loopexit101 ], [ %.21105.ph145, %.loopexit.loopexit126 ], [ %.21105.ph170, %.loopexit.loopexit151 ], [ %.21105.ph195, %.loopexit.loopexit176 ], [ %.21105.ph220, %.loopexit.loopexit201 ], [ %.21105.ph245, %.loopexit.loopexit226 ], [ %.21105.ph270, %.loopexit.loopexit251 ], [ %.21105.ph295, %.loopexit.loopexit276 ], [ %.21105.ph320, %.loopexit.loopexit301 ], [ %.21105.ph345, %.loopexit.loopexit326 ], [ %.21105.ph370, %.loopexit.loopexit351 ], [ %.21105.ph395, %.loopexit.loopexit376 ], [ %.21105.ph420, %.loopexit.loopexit401 ], [ %.21105.ph445, %.loopexit.loopexit426 ], [ %.21105.ph470, %.loopexit.loopexit451 ], [ %.21105.ph495, %.loopexit.loopexit476 ], [ %.21105.ph520, %.loopexit.loopexit501 ], [ %.21105.ph545, %.loopexit.loopexit526 ], [ %.21105.ph570, %.loopexit.loopexit551 ], [ %.21105.ph595, %.loopexit.loopexit576 ], [ %.21105.ph620, %.loopexit.loopexit601 ], [ %.21105.ph645, %.loopexit.loopexit626 ], [ %.21105.ph670, %.loopexit.loopexit651 ], [ %.21105.ph695, %.loopexit.loopexit676 ], [ %.21105.ph720, %.loopexit.loopexit701 ], [ %.21105.ph745, %.loopexit.loopexit726 ], [ %.21105.ph770, %.loopexit.loopexit751 ], [ %.21105.ph795, %.loopexit.loopexit776 ], [ %.21105.ph820, %.loopexit.loopexit801 ], [ %.21105.ph845, %.loopexit.loopexit826 ], [ %.21105.ph870, %.loopexit.loopexit851 ], [ %.21105.ph895, %.loopexit.loopexit876 ], [ %.21105.ph920, %.loopexit.loopexit901 ], [ %.21105.ph945, %.loopexit.loopexit926 ], [ %.21105.ph970, %.loopexit.loopexit951 ], [ %.21105.ph995, %.loopexit.loopexit976 ], [ %.21105.ph1020, %.loopexit.loopexit1001 ]
  %.2283 = phi i32 [ %41, %3988 ], [ %41, %._crit_edge ], [ %.1778, %2521 ], [ %.1778, %2535 ], [ %41, %._crit_edge628 ], [ %41, %._crit_edge625 ], [ %41, %._crit_edge622 ], [ %41, %353 ], [ %41, %._crit_edge619 ], [ %41, %395 ], [ %41, %372 ], [ %41, %399 ], [ %41, %475 ], [ %41, %._crit_edge613 ], [ %41, %._crit_edge610 ], [ %41, %._crit_edge607 ], [ %41, %._crit_edge604 ], [ %41, %._crit_edge601 ], [ %41, %._crit_edge577 ], [ %41, %1395 ], [ %41, %1565 ], [ %.061, %._crit_edge570 ], [ %.162, %._crit_edge567 ], [ %.465, %1774 ], [ %.869, %1887 ], [ %.566, %2100 ], [ %.1273, %2193 ], [ %.1273, %2274 ], [ %.1273, %2268 ], [ %.1576, %2301 ], [ %.1778, %2394 ], [ %.1778, %2475 ], [ %.1778, %2469 ], [ %.1475, %2543 ], [ %.1475, %2742 ], [ %.2081, %2835 ], [ %.2081, %2916 ], [ %.2081, %2910 ], [ %.1475, %2934 ], [ %.1475, %2930 ], [ %.1475, %3326 ], [ %.1475, %3345 ], [ %.1475, %3181 ], [ %.1475, %3200 ], [ %41, %._crit_edge395 ], [ %41, %._crit_edge392 ], [ %41, %._crit_edge389 ], [ %41, %._crit_edge386 ], [ %41, %._crit_edge383 ], [ %.2283.ph, %.loopexit.loopexit ], [ %.2283.ph21, %.loopexit.loopexit1 ], [ %.2283.ph46, %.loopexit.loopexit26 ], [ %.2283.ph71, %.loopexit.loopexit51 ], [ %.2283.ph96, %.loopexit.loopexit76 ], [ %.2283.ph121, %.loopexit.loopexit101 ], [ %.2283.ph146, %.loopexit.loopexit126 ], [ %.2283.ph171, %.loopexit.loopexit151 ], [ %.2283.ph196, %.loopexit.loopexit176 ], [ %.2283.ph221, %.loopexit.loopexit201 ], [ %.2283.ph246, %.loopexit.loopexit226 ], [ %.2283.ph271, %.loopexit.loopexit251 ], [ %.2283.ph296, %.loopexit.loopexit276 ], [ %.2283.ph321, %.loopexit.loopexit301 ], [ %.2283.ph346, %.loopexit.loopexit326 ], [ %.2283.ph371, %.loopexit.loopexit351 ], [ %.2283.ph396, %.loopexit.loopexit376 ], [ %.2283.ph421, %.loopexit.loopexit401 ], [ %.2283.ph446, %.loopexit.loopexit426 ], [ %.2283.ph471, %.loopexit.loopexit451 ], [ %.2283.ph496, %.loopexit.loopexit476 ], [ %.2283.ph521, %.loopexit.loopexit501 ], [ %.2283.ph546, %.loopexit.loopexit526 ], [ %.2283.ph571, %.loopexit.loopexit551 ], [ %.2283.ph596, %.loopexit.loopexit576 ], [ %.2283.ph621, %.loopexit.loopexit601 ], [ %.2283.ph646, %.loopexit.loopexit626 ], [ %.2283.ph671, %.loopexit.loopexit651 ], [ %.2283.ph696, %.loopexit.loopexit676 ], [ %.2283.ph721, %.loopexit.loopexit701 ], [ %.2283.ph746, %.loopexit.loopexit726 ], [ %.2283.ph771, %.loopexit.loopexit751 ], [ %.2283.ph796, %.loopexit.loopexit776 ], [ %.2283.ph821, %.loopexit.loopexit801 ], [ %.2283.ph846, %.loopexit.loopexit826 ], [ %.2283.ph871, %.loopexit.loopexit851 ], [ %.2283.ph896, %.loopexit.loopexit876 ], [ %.2283.ph921, %.loopexit.loopexit901 ], [ %.2283.ph946, %.loopexit.loopexit926 ], [ %.2283.ph971, %.loopexit.loopexit951 ], [ %.2283.ph996, %.loopexit.loopexit976 ], [ %.2283.ph1021, %.loopexit.loopexit1001 ]
  %.1860 = phi i32 [ %39, %3988 ], [ %39, %._crit_edge ], [ %.1355, %2521 ], [ %.1355, %2535 ], [ %39, %._crit_edge628 ], [ %39, %._crit_edge625 ], [ %39, %._crit_edge622 ], [ %39, %353 ], [ %39, %._crit_edge619 ], [ %39, %395 ], [ %39, %372 ], [ %39, %399 ], [ %39, %475 ], [ %39, %._crit_edge613 ], [ %39, %._crit_edge610 ], [ %39, %._crit_edge607 ], [ %39, %._crit_edge604 ], [ %39, %._crit_edge601 ], [ %39, %._crit_edge577 ], [ %39, %1395 ], [ %39, %1565 ], [ %39, %._crit_edge570 ], [ %39, %._crit_edge567 ], [ %39, %1774 ], [ %.345, %1887 ], [ %.648.lcssa, %2100 ], [ %.850, %2193 ], [ %.850, %2274 ], [ %.850, %2268 ], [ %.1153, %2301 ], [ %.1355, %2394 ], [ %.1355, %2475 ], [ %.1355, %2469 ], [ %.1052, %2543 ], [ %.1052, %2742 ], [ %.1658, %2835 ], [ %.1658, %2916 ], [ %.1658, %2910 ], [ %.1052, %2934 ], [ %.1052, %2930 ], [ %.1052, %3326 ], [ %.1052, %3345 ], [ %.1052, %3181 ], [ %.1052, %3200 ], [ %39, %._crit_edge395 ], [ %39, %._crit_edge392 ], [ %39, %._crit_edge389 ], [ %39, %._crit_edge386 ], [ %39, %._crit_edge383 ], [ %.1860.ph, %.loopexit.loopexit ], [ %.1860.ph22, %.loopexit.loopexit1 ], [ %.1860.ph47, %.loopexit.loopexit26 ], [ %.1860.ph72, %.loopexit.loopexit51 ], [ %.1860.ph97, %.loopexit.loopexit76 ], [ %.1860.ph122, %.loopexit.loopexit101 ], [ %.1860.ph147, %.loopexit.loopexit126 ], [ %.1860.ph172, %.loopexit.loopexit151 ], [ %.1860.ph197, %.loopexit.loopexit176 ], [ %.1860.ph222, %.loopexit.loopexit201 ], [ %.1860.ph247, %.loopexit.loopexit226 ], [ %.1860.ph272, %.loopexit.loopexit251 ], [ %.1860.ph297, %.loopexit.loopexit276 ], [ %.1860.ph322, %.loopexit.loopexit301 ], [ %.1860.ph347, %.loopexit.loopexit326 ], [ %.1860.ph372, %.loopexit.loopexit351 ], [ %.1860.ph397, %.loopexit.loopexit376 ], [ %.1860.ph422, %.loopexit.loopexit401 ], [ %.1860.ph447, %.loopexit.loopexit426 ], [ %.1860.ph472, %.loopexit.loopexit451 ], [ %.1860.ph497, %.loopexit.loopexit476 ], [ %.1860.ph522, %.loopexit.loopexit501 ], [ %.1860.ph547, %.loopexit.loopexit526 ], [ %.1860.ph572, %.loopexit.loopexit551 ], [ %.1860.ph597, %.loopexit.loopexit576 ], [ %.1860.ph622, %.loopexit.loopexit601 ], [ %.1860.ph647, %.loopexit.loopexit626 ], [ %.1860.ph672, %.loopexit.loopexit651 ], [ %.1860.ph697, %.loopexit.loopexit676 ], [ %.1860.ph722, %.loopexit.loopexit701 ], [ %.1860.ph747, %.loopexit.loopexit726 ], [ %.1860.ph772, %.loopexit.loopexit751 ], [ %.1860.ph797, %.loopexit.loopexit776 ], [ %.1860.ph822, %.loopexit.loopexit801 ], [ %.1860.ph847, %.loopexit.loopexit826 ], [ %.1860.ph872, %.loopexit.loopexit851 ], [ %.1860.ph897, %.loopexit.loopexit876 ], [ %.1860.ph922, %.loopexit.loopexit901 ], [ %.1860.ph947, %.loopexit.loopexit926 ], [ %.1860.ph972, %.loopexit.loopexit951 ], [ %.1860.ph997, %.loopexit.loopexit976 ], [ %.1860.ph1022, %.loopexit.loopexit1001 ]
  %.2841 = phi i32 [ %37, %3988 ], [ %37, %._crit_edge ], [ %.2134, %2521 ], [ %.2134, %2535 ], [ %37, %._crit_edge628 ], [ %37, %._crit_edge625 ], [ %37, %._crit_edge622 ], [ %37, %353 ], [ %37, %._crit_edge619 ], [ %37, %395 ], [ %37, %372 ], [ %37, %399 ], [ %37, %475 ], [ %37, %._crit_edge613 ], [ %37, %._crit_edge610 ], [ %37, %._crit_edge607 ], [ %37, %._crit_edge604 ], [ %37, %._crit_edge601 ], [ %37, %._crit_edge577 ], [ %37, %1395 ], [ %.013, %1565 ], [ %.417, %._crit_edge570 ], [ %.518, %._crit_edge567 ], [ %1775, %1774 ], [ %.1225, %1887 ], [ %.922, %2100 ], [ %.1629, %2193 ], [ %.1629, %2274 ], [ %.1629, %2268 ], [ %.1932, %2301 ], [ %.2134, %2394 ], [ %.2134, %2475 ], [ %.2134, %2469 ], [ %.1831, %2543 ], [ %.1831, %2742 ], [ %.2437, %2835 ], [ %.2437, %2916 ], [ %.2437, %2910 ], [ %.1831, %2934 ], [ %.1831, %2930 ], [ %.lcssa, %3200 ], [ %.lcssa, %3181 ], [ %.1831, %3345 ], [ %.1831, %3326 ], [ %37, %._crit_edge395 ], [ %37, %._crit_edge392 ], [ %37, %._crit_edge389 ], [ %37, %._crit_edge386 ], [ %37, %._crit_edge383 ], [ %.2841.ph, %.loopexit.loopexit ], [ %.2841.ph23, %.loopexit.loopexit1 ], [ %.2841.ph48, %.loopexit.loopexit26 ], [ %.2841.ph73, %.loopexit.loopexit51 ], [ %.2841.ph98, %.loopexit.loopexit76 ], [ %.2841.ph123, %.loopexit.loopexit101 ], [ %.2841.ph148, %.loopexit.loopexit126 ], [ %.2841.ph173, %.loopexit.loopexit151 ], [ %.2841.ph198, %.loopexit.loopexit176 ], [ %.2841.ph223, %.loopexit.loopexit201 ], [ %.2841.ph248, %.loopexit.loopexit226 ], [ %.2841.ph273, %.loopexit.loopexit251 ], [ %.2841.ph298, %.loopexit.loopexit276 ], [ %.2841.ph323, %.loopexit.loopexit301 ], [ %.2841.ph348, %.loopexit.loopexit326 ], [ %.2841.ph373, %.loopexit.loopexit351 ], [ %.2841.ph398, %.loopexit.loopexit376 ], [ %.2841.ph423, %.loopexit.loopexit401 ], [ %.2841.ph448, %.loopexit.loopexit426 ], [ %.2841.ph473, %.loopexit.loopexit451 ], [ %.2841.ph498, %.loopexit.loopexit476 ], [ %.2841.ph523, %.loopexit.loopexit501 ], [ %.2841.ph548, %.loopexit.loopexit526 ], [ %.2841.ph573, %.loopexit.loopexit551 ], [ %.2841.ph598, %.loopexit.loopexit576 ], [ %.2841.ph623, %.loopexit.loopexit601 ], [ %.2841.ph648, %.loopexit.loopexit626 ], [ %.2841.ph673, %.loopexit.loopexit651 ], [ %.2841.ph698, %.loopexit.loopexit676 ], [ %.2841.ph723, %.loopexit.loopexit701 ], [ %.2841.ph748, %.loopexit.loopexit726 ], [ %.2841.ph773, %.loopexit.loopexit751 ], [ %.2841.ph798, %.loopexit.loopexit776 ], [ %.2841.ph823, %.loopexit.loopexit801 ], [ %.2841.ph848, %.loopexit.loopexit826 ], [ %.2841.ph873, %.loopexit.loopexit851 ], [ %.2841.ph898, %.loopexit.loopexit876 ], [ %.2841.ph923, %.loopexit.loopexit901 ], [ %.2841.ph948, %.loopexit.loopexit926 ], [ %.2841.ph973, %.loopexit.loopexit951 ], [ %.2841.ph998, %.loopexit.loopexit976 ], [ %.2841.ph1023, %.loopexit.loopexit1001 ]
  %.40 = phi i32 [ %35, %3988 ], [ %35, %._crit_edge ], [ %.27, %2521 ], [ %.27, %2535 ], [ %35, %._crit_edge628 ], [ %35, %._crit_edge625 ], [ %35, %._crit_edge622 ], [ %35, %353 ], [ %35, %._crit_edge619 ], [ %35, %395 ], [ %35, %372 ], [ %35, %399 ], [ %35, %475 ], [ %35, %._crit_edge613 ], [ %35, %._crit_edge610 ], [ %35, %._crit_edge607 ], [ %35, %._crit_edge604 ], [ %35, %._crit_edge601 ], [ %35, %._crit_edge577 ], [ %35, %1395 ], [ %.3, %1565 ], [ %.7, %._crit_edge570 ], [ %.8, %._crit_edge567 ], [ %.11, %1774 ], [ %.16, %1887 ], [ %2098, %2100 ], [ %.22, %2193 ], [ %.22, %2274 ], [ %.22, %2268 ], [ %.25, %2301 ], [ %.27, %2394 ], [ %.27, %2475 ], [ %.27, %2469 ], [ %.24, %2543 ], [ %.24, %2742 ], [ %.30, %2835 ], [ %.30, %2916 ], [ %.30, %2910 ], [ %.24, %2934 ], [ %.24, %2930 ], [ %.2639.lcssa, %3200 ], [ %.2639.lcssa, %3181 ], [ %.38.lcssa, %3345 ], [ %.38.lcssa, %3326 ], [ %35, %._crit_edge395 ], [ %35, %._crit_edge392 ], [ %35, %._crit_edge389 ], [ %35, %._crit_edge386 ], [ %35, %._crit_edge383 ], [ %.40.ph, %.loopexit.loopexit ], [ %.40.ph24, %.loopexit.loopexit1 ], [ %.40.ph49, %.loopexit.loopexit26 ], [ %.40.ph74, %.loopexit.loopexit51 ], [ %.40.ph99, %.loopexit.loopexit76 ], [ %.40.ph124, %.loopexit.loopexit101 ], [ %.40.ph149, %.loopexit.loopexit126 ], [ %.40.ph174, %.loopexit.loopexit151 ], [ %.40.ph199, %.loopexit.loopexit176 ], [ %.40.ph224, %.loopexit.loopexit201 ], [ %.40.ph249, %.loopexit.loopexit226 ], [ %.40.ph274, %.loopexit.loopexit251 ], [ %.40.ph299, %.loopexit.loopexit276 ], [ %.40.ph324, %.loopexit.loopexit301 ], [ %.40.ph349, %.loopexit.loopexit326 ], [ %3989, %.loopexit.loopexit351 ], [ %.40.ph399, %.loopexit.loopexit376 ], [ %.40.ph424, %.loopexit.loopexit401 ], [ %.40.ph449, %.loopexit.loopexit426 ], [ %.40.ph474, %.loopexit.loopexit451 ], [ %.40.ph499, %.loopexit.loopexit476 ], [ %.40.ph524, %.loopexit.loopexit501 ], [ %.40.ph549, %.loopexit.loopexit526 ], [ %.40.ph574, %.loopexit.loopexit551 ], [ %.40.ph599, %.loopexit.loopexit576 ], [ %.40.ph624, %.loopexit.loopexit601 ], [ %.40.ph649, %.loopexit.loopexit626 ], [ %.40.ph674, %.loopexit.loopexit651 ], [ %.40.ph699, %.loopexit.loopexit676 ], [ %.40.ph724, %.loopexit.loopexit701 ], [ %.40.ph749, %.loopexit.loopexit726 ], [ %.40.ph774, %.loopexit.loopexit751 ], [ %.40.ph799, %.loopexit.loopexit776 ], [ %.40.ph824, %.loopexit.loopexit801 ], [ %.40.ph849, %.loopexit.loopexit826 ], [ %.40.ph874, %.loopexit.loopexit851 ], [ %.40.ph899, %.loopexit.loopexit876 ], [ %.40.ph924, %.loopexit.loopexit901 ], [ %.40.ph949, %.loopexit.loopexit926 ], [ %.40.ph974, %.loopexit.loopexit951 ], [ %.40.ph999, %.loopexit.loopexit976 ], [ %.40.ph1024, %.loopexit.loopexit1001 ]
  %.03 = phi i32 [ 0, %3988 ], [ 4, %._crit_edge ], [ -4, %2521 ], [ -4, %2535 ], [ -5, %._crit_edge628 ], [ -5, %._crit_edge625 ], [ -5, %._crit_edge622 ], [ -5, %353 ], [ -5, %._crit_edge619 ], [ -3, %395 ], [ -3, %372 ], [ -3, %399 ], [ -4, %475 ], [ -4, %._crit_edge613 ], [ -4, %._crit_edge610 ], [ -4, %._crit_edge607 ], [ -4, %._crit_edge604 ], [ -4, %._crit_edge601 ], [ -4, %._crit_edge577 ], [ -4, %1395 ], [ -4, %1565 ], [ -4, %._crit_edge570 ], [ -4, %._crit_edge567 ], [ -4, %1774 ], [ -4, %1887 ], [ -4, %2100 ], [ -4, %2193 ], [ -4, %2274 ], [ -4, %2268 ], [ -4, %2301 ], [ -4, %2394 ], [ -4, %2475 ], [ -4, %2469 ], [ -4, %2543 ], [ -4, %2742 ], [ -4, %2835 ], [ -4, %2916 ], [ -4, %2910 ], [ -4, %2934 ], [ -4, %2930 ], [ 0, %3326 ], [ 0, %3345 ], [ 0, %3181 ], [ 0, %3200 ], [ -4, %._crit_edge395 ], [ -4, %._crit_edge392 ], [ -4, %._crit_edge389 ], [ -4, %._crit_edge386 ], [ -4, %._crit_edge383 ], [ %.03.ph, %.loopexit.loopexit ], [ %.03.ph25, %.loopexit.loopexit1 ], [ %.03.ph50, %.loopexit.loopexit26 ], [ %.03.ph75, %.loopexit.loopexit51 ], [ %.03.ph100, %.loopexit.loopexit76 ], [ %.03.ph125, %.loopexit.loopexit101 ], [ %.03.ph150, %.loopexit.loopexit126 ], [ %.03.ph175, %.loopexit.loopexit151 ], [ %.03.ph200, %.loopexit.loopexit176 ], [ %.03.ph225, %.loopexit.loopexit201 ], [ %.03.ph250, %.loopexit.loopexit226 ], [ %.03.ph275, %.loopexit.loopexit251 ], [ %.03.ph300, %.loopexit.loopexit276 ], [ %.03.ph325, %.loopexit.loopexit301 ], [ %.03.ph350, %.loopexit.loopexit326 ], [ %.03.ph375, %.loopexit.loopexit351 ], [ %.03.ph400, %.loopexit.loopexit376 ], [ %.03.ph425, %.loopexit.loopexit401 ], [ %.03.ph450, %.loopexit.loopexit426 ], [ %.03.ph475, %.loopexit.loopexit451 ], [ %.03.ph500, %.loopexit.loopexit476 ], [ %.03.ph525, %.loopexit.loopexit501 ], [ %.03.ph550, %.loopexit.loopexit526 ], [ %.03.ph575, %.loopexit.loopexit551 ], [ %.03.ph600, %.loopexit.loopexit576 ], [ %.03.ph625, %.loopexit.loopexit601 ], [ %.03.ph650, %.loopexit.loopexit626 ], [ %.03.ph675, %.loopexit.loopexit651 ], [ %.03.ph700, %.loopexit.loopexit676 ], [ %.03.ph725, %.loopexit.loopexit701 ], [ %.03.ph750, %.loopexit.loopexit726 ], [ %.03.ph775, %.loopexit.loopexit751 ], [ %.03.ph800, %.loopexit.loopexit776 ], [ %.03.ph825, %.loopexit.loopexit801 ], [ %.03.ph850, %.loopexit.loopexit826 ], [ %.03.ph875, %.loopexit.loopexit851 ], [ %.03.ph900, %.loopexit.loopexit876 ], [ %.03.ph925, %.loopexit.loopexit901 ], [ %.03.ph950, %.loopexit.loopexit926 ], [ %.03.ph975, %.loopexit.loopexit951 ], [ %.03.ph1000, %.loopexit.loopexit976 ], [ %.03.ph1025, %.loopexit.loopexit1001 ]
  %3990 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 40
  store i32 %.40, i32* %3990, align 4
  %3991 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 41
  store i32 %.2841, i32* %3991, align 8
  %3992 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 42
  store i32 %.1860, i32* %3992, align 4
  %3993 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 43
  store i32 %.2283, i32* %3993, align 8
  %3994 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 44
  store i32 %.21105, i32* %3994, align 4
  %3995 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 45
  store i32 %.20126, i32* %3995, align 8
  %3996 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 46
  store i32 %.11138, i32* %3996, align 4
  %3997 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 47
  store i32 %.14153, i32* %3997, align 8
  %3998 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 48
  store i32 %.14168, i32* %3998, align 4
  %3999 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 49
  store i32 %.8177, i32* %3999, align 8
  %4000 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 50
  store i32 %.11189, i32* %4000, align 4
  %4001 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 51
  store i32 %.14204, i32* %4001, align 8
  %4002 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 52
  store i32 %.13218, i32* %4002, align 4
  %4003 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 53
  store i32 %.8227, i32* %4003, align 8
  %4004 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 54
  store i32 %.18246, i32* %4004, align 4
  %4005 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 55
  store i32 %65, i32* %4005, align 8
  %4006 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 56
  store i32 %.11259, i32* %4006, align 4
  %4007 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 57
  store i32 %.10270, i32* %4007, align 8
  %4008 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 58
  store i32 %.10281, i32* %4008, align 4
  %4009 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 59
  store i32 %.14296, i32* %4009, align 8
  %4010 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 60
  store i32 %.14311, i32* %4010, align 4
  %4011 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 61
  store i32* %.14326, i32** %4011, align 8
  %4012 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 62
  store i32* %.14341, i32** %4012, align 8
  %4013 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 63
  store i32* %.14356, i32** %4013, align 8
  br label %4014

; <label>:4014:                                   ; preds = %3338, %3278, %3193, %3118, %.loopexit
  %.0 = phi i32 [ %.03, %.loopexit ], [ 1, %3118 ], [ 1, %3193 ], [ 1, %3278 ], [ 1, %3338 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @makeMaps_d(%struct.DState*) #0 {
  %2 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 30
  %4 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %5 = getelementptr inbounds %struct.DState, %struct.DState* %0, i32 0, i32 27
  %scevgep = getelementptr %struct.DState, %struct.DState* %0, i64 0, i32 28, i64 0
  br label %6

; <label>:6:                                      ; preds = %1, %15
  %indvars.iv = phi i64 [ 0, %1 ], [ %indvars.iv.next, %15 ]
  call void @unroll_loop(i32 86)
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %indvars.iv
  %7 = load i8, i8* %scevgep1, align 1
  %8 = icmp ne i8 %7, 0
  br i1 %8, label %9, label %15

; <label>:9:                                      ; preds = %6
  %10 = load i32, i32* %4, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %11
  %tmp = trunc i64 %indvars.iv to i8
  store i8 %tmp, i8* %12, align 1
  %13 = load i32, i32* %5, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %5, align 8
  br label %15

; <label>:15:                                     ; preds = %6, %9
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp ne i64 %indvars.iv.next, 256
  br i1 %exitcond, label %6, label %16

; <label>:16:                                     ; preds = %15
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_blockSort(%struct.EState*) #0 {
  %2 = alloca i32, align 4, !track !64
  %3 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 8
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 9
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 6
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 28
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %10, 10000
  br i1 %15, label %16, label %21

; <label>:16:                                     ; preds = %1
  %17 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 4
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 5
  %20 = load i32*, i32** %19, align 8
  call void @fallbackSort(i32* %18, i32* %20, i32* %8, i32 %10, i32 %12)
  br label %62

; <label>:21:                                     ; preds = %1
  %22 = add nsw i32 %10, 34
  %23 = and i32 %22, 1
  %24 = icmp ne i32 %23, 0
  %25 = add nsw i32 %22, 1
  %spec.select = select i1 %24, i32 %25, i32 %22
  %26 = sext i32 %spec.select to i64
  %27 = getelementptr inbounds i8, i8* %6, i64 %26
  %28 = bitcast i8* %27 to i16*
  %29 = icmp slt i32 %14, 1
  %.01 = select i1 %29, i32 1, i32 %14
  %30 = icmp sgt i32 %.01, 100
  %spec.select1 = select i1 %30, i32 100, i32 %.01
  %31 = sub nsw i32 %spec.select1, 1
  %32 = sdiv i32 %31, 3
  %33 = mul nsw i32 %10, %32
  store i32 %33, i32* %2, align 4
  call void @mainSort(i32* %4, i8* %6, i16* %28, i32* %8, i32 %10, i32 %12, i32* %2)
  %34 = icmp sge i32 %12, 3
  br i1 %34, label %35, label %48

; <label>:35:                                     ; preds = %21
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = load i32, i32* %2, align 4
  %38 = sub nsw i32 %33, %37
  %39 = load i32, i32* %2, align 4
  %40 = sub nsw i32 %33, %39
  %41 = sitofp i32 %40 to float
  %42 = icmp eq i32 %10, 0
  %. = select i1 %42, i32 1, i32 %10
  %43 = sitofp i32 %. to float
  %44 = fdiv float %41, %43
  %45 = fpext float %44 to double
  %46 = getelementptr [38 x i8], [38 x i8]* @.str.164, i32 0, i32 0
  %47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* %46, i32 %38, i32 %10, double %45)
  br label %48

; <label>:48:                                     ; preds = %35, %21
  %49 = load i32, i32* %2, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %62

; <label>:51:                                     ; preds = %48
  %52 = icmp sge i32 %12, 2
  br i1 %52, label %53, label %57

; <label>:53:                                     ; preds = %51
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %55 = getelementptr [54 x i8], [54 x i8]* @.str.1.165, i32 0, i32 0
  %56 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %54, i8* %55)
  br label %57

; <label>:57:                                     ; preds = %53, %51
  %58 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 4
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 5
  %61 = load i32*, i32** %60, align 8
  call void @fallbackSort(i32* %59, i32* %61, i32* %8, i32 %10, i32 %12)
  br label %62

; <label>:62:                                     ; preds = %48, %57, %16
  %63 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 7
  store i32 -1, i32* %63, align 8
  %64 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 17
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 0, %65
  br i1 %66, label %.lr.ph.preheader, label %.loopexit

.lr.ph.preheader:                                 ; preds = %62
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %72
  %indvars.iv = phi i64 [ %indvars.iv.next, %72 ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 154)
  %scevgep = getelementptr i32, i32* %4, i64 %indvars.iv
  %67 = load i32, i32* %scevgep, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

; <label>:69:                                     ; preds = %.lr.ph
  %.1.lcssa3.wide = phi i64 [ %indvars.iv, %.lr.ph ]
  %70 = trunc i64 %.1.lcssa3.wide to i32
  %71 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 7
  store i32 %70, i32* %71, align 8
  br label %.loopexit

; <label>:72:                                     ; preds = %.lr.ph
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %73 = load i32, i32* %64, align 4
  %74 = sext i32 %73 to i64
  %75 = icmp slt i64 %indvars.iv.next, %74
  br i1 %75, label %.lr.ph, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %72
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %62, %69
  %76 = getelementptr inbounds %struct.EState, %struct.EState* %0, i32 0, i32 7
  %77 = load i32, i32* %76, align 8
  %78 = icmp ne i32 %77, -1
  br i1 %78, label %80, label %79

; <label>:79:                                     ; preds = %.loopexit
  call void @BZ2_bz__AssertH__fail(i32 1003)
  br label %80

; <label>:80:                                     ; preds = %79, %.loopexit
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackSort(i32*, i32*, i32*, i32, i32) #0 {
  %6 = bitcast i32* %1 to i8*
  %7 = alloca [257 x i32], align 16, !track !65
  %8 = alloca [256 x i32], align 16, !track !66
  %9 = bitcast i32* undef to i8*
  %10 = icmp sge i32 %4, 4
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %5
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %13 = getelementptr [28 x i8], [28 x i8]* @.str.2.167, i32 0, i32 0
  %14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* %13)
  br label %15

; <label>:15:                                     ; preds = %11, %5
  br label %16

; <label>:16:                                     ; preds = %15, %16
  %indvars.iv81 = phi i64 [ 0, %15 ], [ %indvars.iv.next82, %16 ]
  call void @unroll_loop(i32 156)
  %scevgep27 = getelementptr [257 x i32], [257 x i32]* %7, i64 0, i64 %indvars.iv81
  store i32 0, i32* %scevgep27, align 4
  %indvars.iv.next82 = add nuw nsw i64 %indvars.iv81, 1
  %exitcond83 = icmp ne i64 %indvars.iv.next82, 257
  br i1 %exitcond83, label %16, label %17

; <label>:17:                                     ; preds = %16
  %18 = icmp slt i32 0, %3
  br i1 %18, label %.lr.ph74.preheader, label %._crit_edge75

.lr.ph74.preheader:                               ; preds = %17
  %19 = zext i32 %3 to i64
  br label %.lr.ph74

.lr.ph74:                                         ; preds = %.lr.ph74.preheader, %.lr.ph74
  %indvars.iv76 = phi i64 [ %indvars.iv.next77, %.lr.ph74 ], [ 0, %.lr.ph74.preheader ]
  call void @unroll_loop(i32 157)
  %20 = getelementptr inbounds i8, i8* %6, i64 %indvars.iv76
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds [257 x i32], [257 x i32]* %7, i64 0, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %23, align 4
  %indvars.iv.next77 = add nuw nsw i64 %indvars.iv76, 1
  %exitcond12 = icmp ne i64 %19, %indvars.iv.next77
  br i1 %exitcond12, label %.lr.ph74, label %._crit_edge75.loopexit

._crit_edge75.loopexit:                           ; preds = %.lr.ph74
  br label %._crit_edge75

._crit_edge75:                                    ; preds = %._crit_edge75.loopexit, %17
  br label %26

; <label>:26:                                     ; preds = %._crit_edge75, %26
  %indvars.iv69 = phi i64 [ 0, %._crit_edge75 ], [ %indvars.iv.next70, %26 ]
  call void @unroll_loop(i32 158)
  %scevgep25 = getelementptr [257 x i32], [257 x i32]* %7, i64 0, i64 %indvars.iv69
  %27 = load i32, i32* %scevgep25, align 4
  %scevgep26 = getelementptr [256 x i32], [256 x i32]* %8, i64 0, i64 %indvars.iv69
  store i32 %27, i32* %scevgep26, align 4
  %indvars.iv.next70 = add nuw nsw i64 %indvars.iv69, 1
  %exitcond71 = icmp ne i64 %indvars.iv.next70, 256
  br i1 %exitcond71, label %26, label %.preheader8.preheader

.preheader8.preheader:                            ; preds = %26
  %scevgep19 = getelementptr [257 x i32], [257 x i32]* %7, i64 0, i64 1
  br label %.preheader8

.preheader8:                                      ; preds = %.preheader8.preheader, %.preheader8
  %lsr.iv20 = phi i64 [ 0, %.preheader8.preheader ], [ %lsr.iv.next21, %.preheader8 ]
  call void @unroll_loop(i32 159)
  %scevgep22 = getelementptr i32, i32* %scevgep19, i64 %lsr.iv20
  %scevgep23 = getelementptr i32, i32* %scevgep22, i64 -1
  %28 = load i32, i32* %scevgep23, align 4
  %scevgep24 = getelementptr i32, i32* %scevgep19, i64 %lsr.iv20
  %29 = load i32, i32* %scevgep24, align 4
  %30 = add nsw i32 %29, %28
  store i32 %30, i32* %scevgep24, align 4
  %lsr.iv.next21 = add nuw nsw i64 %lsr.iv20, 1
  %exitcond67 = icmp ne i64 %lsr.iv.next21, 256
  br i1 %exitcond67, label %.preheader8, label %31

; <label>:31:                                     ; preds = %.preheader8
  %32 = icmp slt i32 0, %3
  br i1 %32, label %.lr.ph58.preheader, label %._crit_edge59

.lr.ph58.preheader:                               ; preds = %31
  %33 = zext i32 %3 to i64
  br label %.lr.ph58

.lr.ph58:                                         ; preds = %.lr.ph58.preheader, %.lr.ph58
  %indvars.iv60 = phi i64 [ %indvars.iv.next61, %.lr.ph58 ], [ 0, %.lr.ph58.preheader ]
  call void @unroll_loop(i32 160)
  %34 = getelementptr inbounds i8, i8* %6, i64 %indvars.iv60
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [257 x i32], [257 x i32]* %7, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = sub nsw i32 %39, 1
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds [257 x i32], [257 x i32]* %7, i64 0, i64 %41
  store i32 %40, i32* %42, align 4
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds i32, i32* %0, i64 %43
  %tmp18 = trunc i64 %indvars.iv60 to i32
  store i32 %tmp18, i32* %44, align 4
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %exitcond11 = icmp ne i64 %33, %indvars.iv.next61
  br i1 %exitcond11, label %.lr.ph58, label %._crit_edge59.loopexit

._crit_edge59.loopexit:                           ; preds = %.lr.ph58
  br label %._crit_edge59

._crit_edge59:                                    ; preds = %._crit_edge59.loopexit, %31
  %45 = sdiv i32 %3, 32
  %46 = add nsw i32 2, %45
  %47 = icmp slt i32 0, %46
  br i1 %47, label %.lr.ph50.preheader, label %._crit_edge51

.lr.ph50.preheader:                               ; preds = %._crit_edge59
  %48 = zext i32 %46 to i64
  br label %.lr.ph50

.lr.ph50:                                         ; preds = %.lr.ph50.preheader, %.lr.ph50
  %indvars.iv52 = phi i64 [ %indvars.iv.next53, %.lr.ph50 ], [ 0, %.lr.ph50.preheader ]
  call void @unroll_loop(i32 161)
  %scevgep17 = getelementptr i32, i32* %2, i64 %indvars.iv52
  store i32 0, i32* %scevgep17, align 4
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1
  %exitcond10 = icmp ne i64 %48, %indvars.iv.next53
  br i1 %exitcond10, label %.lr.ph50, label %._crit_edge51.loopexit

._crit_edge51.loopexit:                           ; preds = %.lr.ph50
  br label %._crit_edge51

._crit_edge51:                                    ; preds = %._crit_edge51.loopexit, %._crit_edge59
  br label %49

; <label>:49:                                     ; preds = %._crit_edge51, %49
  %indvars.iv45 = phi i64 [ 0, %._crit_edge51 ], [ %indvars.iv.next46, %49 ]
  call void @unroll_loop(i32 162)
  %scevgep15 = getelementptr [257 x i32], [257 x i32]* %7, i64 0, i64 %indvars.iv45
  %50 = load i32, i32* %scevgep15, align 4
  %51 = and i32 %50, 31
  %52 = shl i32 1, %51
  %scevgep16 = getelementptr [257 x i32], [257 x i32]* %7, i64 0, i64 %indvars.iv45
  %53 = load i32, i32* %scevgep16, align 4
  %54 = ashr i32 %53, 5
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %2, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = or i32 %57, %52
  store i32 %58, i32* %56, align 4
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1
  %exitcond47 = icmp ne i64 %indvars.iv.next46, 256
  br i1 %exitcond47, label %49, label %.preheader7.preheader

.preheader7.preheader:                            ; preds = %49
  br label %.preheader7

.preheader7:                                      ; preds = %.preheader7.preheader, %.preheader7
  %lsr.iv13 = phi i32 [ 32, %.preheader7.preheader ], [ %lsr.iv.next14, %.preheader7 ]
  %lsr.iv11 = phi i32 [ %3, %.preheader7.preheader ], [ %lsr.iv.next12, %.preheader7 ]
  call void @unroll_loop(i32 163)
  %59 = and i32 %lsr.iv11, 31
  %60 = shl i32 1, %59
  %61 = ashr i32 %lsr.iv11, 5
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %2, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = or i32 %64, %60
  store i32 %65, i32* %63, align 4
  %66 = add i32 %lsr.iv11, 1
  %67 = and i32 %66, 31
  %68 = shl i32 1, %67
  %69 = xor i32 %68, -1
  %70 = add i32 %lsr.iv11, 1
  %71 = ashr i32 %70, 5
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %2, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, %69
  store i32 %75, i32* %73, align 4
  %lsr.iv.next12 = add i32 %lsr.iv11, 2
  %lsr.iv.next14 = add nsw i32 %lsr.iv13, -1
  %exitcond43 = icmp ne i32 %lsr.iv.next14, 0
  br i1 %exitcond43, label %.preheader7, label %.preheader6

.preheader6:                                      ; preds = %.preheader7
  %.010.ph = phi i32 [ 1, %.preheader7 ]
  %76 = zext i32 %3 to i64
  %77 = icmp sge i32 %4, 4
  %78 = icmp slt i32 0, %3
  %79 = icmp sge i32 %4, 4
  br label %80

; <label>:80:                                     ; preds = %.preheader6, %209
  %.010 = phi i32 [ %210, %209 ], [ %.010.ph, %.preheader6 ]
  call void @unroll_loop(i32 164)
  br i1 %77, label %81, label %84

; <label>:81:                                     ; preds = %80
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %83 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3.170, i64 0, i64 0), i32 %.010)
  br label %84

; <label>:84:                                     ; preds = %81, %80
  br i1 %78, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %84
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %.lr.ph29.preheader, %.lr.ph29
  %indvars.iv31 = phi i64 [ %indvars.iv.next32, %.lr.ph29 ], [ 0, %.lr.ph29.preheader ]
  %.0627 = phi i32 [ %spec.select, %.lr.ph29 ], [ 0, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 165)
  %tmp = trunc i64 %indvars.iv31 to i32
  %85 = ashr i32 %tmp, 5
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %2, i64 %86
  %88 = load i32, i32* %87, align 4
  %tmp2 = trunc i64 %indvars.iv31 to i32
  %89 = and i32 %tmp2, 31
  %90 = shl i32 1, %89
  %91 = and i32 %88, %90
  %92 = icmp ne i32 %91, 0
  %tmp3 = trunc i64 %indvars.iv31 to i32
  %spec.select = select i1 %92, i32 %tmp3, i32 %.0627
  %scevgep4 = getelementptr i32, i32* %0, i64 %indvars.iv31
  %93 = load i32, i32* %scevgep4, align 4
  %94 = sub i32 %93, %.010
  %95 = icmp slt i32 %94, 0
  %96 = add nsw i32 %94, %3
  %.04 = select i1 %95, i32 %96, i32 %94
  %97 = sext i32 %.04 to i64
  %98 = getelementptr inbounds i32, i32* %1, i64 %97
  store i32 %spec.select, i32* %98, align 4
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %exitcond = icmp ne i64 %76, %indvars.iv.next32
  br i1 %exitcond, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %.lr.ph29
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %84
  br label %99

; <label>:99:                                     ; preds = %._crit_edge30, %._crit_edge39
  %.03 = phi i32 [ -1, %._crit_edge30 ], [ %179, %._crit_edge39 ]
  %.0 = phi i32 [ 0, %._crit_edge30 ], [ %.1, %._crit_edge39 ]
  call void @unroll_loop(i32 166)
  br label %100

; <label>:100:                                    ; preds = %100, %99
  %lsr.iv5 = phi i32 [ %lsr.iv.next6, %100 ], [ %.03, %99 ]
  %101 = add i32 %lsr.iv5, 1
  call void @unroll_loop(i32 167)
  %102 = ashr i32 %101, 5
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %2, i64 %103
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %101, 31
  %107 = shl i32 1, %106
  %108 = and i32 %105, %107
  %109 = icmp ne i32 %108, 0
  %110 = icmp ne i32 %106, 0
  %111 = select i1 %109, i1 %110, i1 false
  %lsr.iv.next6 = add i32 %lsr.iv5, 1
  br i1 %111, label %100, label %112

; <label>:112:                                    ; preds = %100
  %.15.lcssa = phi i32 [ %lsr.iv.next6, %100 ]
  %113 = ashr i32 %.15.lcssa, 5
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %2, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %.15.lcssa, 31
  %118 = shl i32 1, %117
  %119 = and i32 %116, %118
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %.preheader5.preheader, label %.loopexit4

.preheader5.preheader:                            ; preds = %112
  br label %.preheader5

.preheader5:                                      ; preds = %.preheader5.preheader, %.preheader5
  %.2 = phi i32 [ %126, %.preheader5 ], [ %.15.lcssa, %.preheader5.preheader ]
  call void @unroll_loop(i32 168)
  %121 = ashr i32 %.2, 5
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %2, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -1
  %126 = add nsw i32 %.2, 32
  %127 = add i32 %126, -32
  br i1 %125, label %.preheader5, label %.preheader3.preheader

.preheader3.preheader:                            ; preds = %.preheader5
  %.3.ph = phi i32 [ %127, %.preheader5 ]
  br label %.preheader3

.preheader3:                                      ; preds = %.preheader3.preheader, %.preheader3
  %.3 = phi i32 [ %136, %.preheader3 ], [ %.3.ph, %.preheader3.preheader ]
  call void @unroll_loop(i32 169)
  %128 = ashr i32 %.3, 5
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %2, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %.3, 31
  %133 = shl i32 1, %132
  %134 = and i32 %131, %133
  %135 = icmp ne i32 %134, 0
  %136 = add nsw i32 %.3, 1
  %137 = add i32 %136, -1
  br i1 %135, label %.preheader3, label %.loopexit4.loopexit

.loopexit4.loopexit:                              ; preds = %.preheader3
  %.4.ph = phi i32 [ %137, %.preheader3 ]
  br label %.loopexit4

.loopexit4:                                       ; preds = %.loopexit4.loopexit, %112
  %.4 = phi i32 [ %.15.lcssa, %112 ], [ %.4.ph, %.loopexit4.loopexit ]
  %138 = sub nsw i32 %.4, 1
  %139 = icmp sge i32 %138, %3
  br i1 %139, label %205, label %.preheader2.preheader

.preheader2.preheader:                            ; preds = %.loopexit4
  br label %.preheader2

.preheader2:                                      ; preds = %.preheader2.preheader, %.preheader2
  %.5 = phi i32 [ %150, %.preheader2 ], [ %.4, %.preheader2.preheader ]
  call void @unroll_loop(i32 170)
  %140 = ashr i32 %.5, 5
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i32, i32* %2, i64 %141
  %143 = load i32, i32* %142, align 4
  %144 = and i32 %.5, 31
  %145 = shl i32 1, %144
  %146 = and i32 %143, %145
  %147 = icmp ne i32 %146, 0
  %148 = icmp ne i32 %144, 0
  %149 = select i1 %147, i1 false, i1 %148
  %150 = add nsw i32 %.5, 1
  %151 = add i32 %150, -1
  br i1 %149, label %.preheader2, label %152

; <label>:152:                                    ; preds = %.preheader2
  %.5.lcssa = phi i32 [ %151, %.preheader2 ]
  %153 = ashr i32 %.5.lcssa, 5
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i32, i32* %2, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = and i32 %.5.lcssa, 31
  %158 = shl i32 1, %157
  %159 = and i32 %156, %158
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %.loopexit, label %.preheader1.preheader

.preheader1.preheader:                            ; preds = %152
  br label %.preheader1

.preheader1:                                      ; preds = %.preheader1.preheader, %.preheader1
  %.6 = phi i32 [ %166, %.preheader1 ], [ %.5.lcssa, %.preheader1.preheader ]
  call void @unroll_loop(i32 171)
  %161 = ashr i32 %.6, 5
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i32, i32* %2, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  %166 = add nsw i32 %.6, 32
  %167 = add i32 %166, -32
  br i1 %165, label %.preheader1, label %.preheader.preheader

.preheader.preheader:                             ; preds = %.preheader1
  %.7.ph = phi i32 [ %167, %.preheader1 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %.7 = phi i32 [ %177, %.preheader ], [ %.7.ph, %.preheader.preheader ]
  call void @unroll_loop(i32 172)
  %168 = ashr i32 %.7, 5
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i32, i32* %2, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = and i32 %.7, 31
  %173 = shl i32 1, %172
  %174 = and i32 %171, %173
  %175 = icmp ne i32 %174, 0
  %176 = xor i1 %175, true
  %177 = add nsw i32 %.7, 1
  %178 = add i32 %177, -1
  br i1 %176, label %.preheader, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.preheader
  %.8.ph = phi i32 [ %178, %.preheader ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %152
  %.8 = phi i32 [ %.5.lcssa, %152 ], [ %.8.ph, %.loopexit.loopexit ]
  %179 = sub nsw i32 %.8, 1
  %180 = icmp sge i32 %179, %3
  br i1 %180, label %205, label %181

; <label>:181:                                    ; preds = %.loopexit
  %182 = icmp sgt i32 %179, %138
  br i1 %182, label %.lr.ph38, label %._crit_edge39

.lr.ph38:                                         ; preds = %181
  %183 = sub nsw i32 %179, %138
  %184 = add nsw i32 %183, 1
  %185 = add nsw i32 %.0, %184
  call void @fallbackQSort3(i32* %0, i32* %1, i32 %138, i32 %179)
  %186 = add i32 %.4, -1
  %187 = sext i32 %186 to i64
  %188 = sext i32 %179 to i64
  br label %189

; <label>:189:                                    ; preds = %.lr.ph38, %203
  %indvars.iv40 = phi i64 [ %187, %.lr.ph38 ], [ %indvars.iv.next41, %203 ]
  %.0136 = phi i32 [ -1, %.lr.ph38 ], [ %.12, %203 ]
  %lsr10 = trunc i64 %indvars.iv40 to i32
  call void @unroll_loop(i32 173)
  %scevgep7 = getelementptr i32, i32* %0, i64 %indvars.iv40
  %190 = load i32, i32* %scevgep7, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds i32, i32* %1, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = icmp ne i32 %.0136, %193
  br i1 %194, label %195, label %203

; <label>:195:                                    ; preds = %189
  %196 = and i32 %lsr10, 31
  %197 = shl i32 1, %196
  %198 = ashr i32 %lsr10, 5
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i32, i32* %2, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = or i32 %201, %197
  store i32 %202, i32* %200, align 4
  br label %203

; <label>:203:                                    ; preds = %189, %195
  %.12 = phi i32 [ %193, %195 ], [ %.0136, %189 ]
  %indvars.iv.next41 = add nsw i64 %indvars.iv40, 1
  %204 = icmp sle i64 %indvars.iv.next41, %188
  br i1 %204, label %189, label %._crit_edge39.loopexit

._crit_edge39.loopexit:                           ; preds = %203
  %.1.ph = phi i32 [ %185, %203 ]
  br label %._crit_edge39

._crit_edge39:                                    ; preds = %._crit_edge39.loopexit, %181
  %.1 = phi i32 [ %.0, %181 ], [ %.1.ph, %._crit_edge39.loopexit ]
  br label %99

; <label>:205:                                    ; preds = %.loopexit, %.loopexit4
  %.021 = phi i32 [ %.0, %.loopexit4 ], [ %.0, %.loopexit ]
  br i1 %79, label %206, label %209

; <label>:206:                                    ; preds = %205
  %207 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %208 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %207, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.171, i64 0, i64 0), i32 %.021)
  br label %209

; <label>:209:                                    ; preds = %206, %205
  %210 = mul nuw nsw i32 %.010, 2
  %211 = icmp sgt i32 %210, %3
  %212 = icmp eq i32 %.021, 0
  %or.cond = or i1 %211, %212
  br i1 %or.cond, label %213, label %80

; <label>:213:                                    ; preds = %209
  %214 = icmp sge i32 %4, 4
  br i1 %214, label %215, label %219

; <label>:215:                                    ; preds = %213
  %216 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %217 = getelementptr [34 x i8], [34 x i8]* @.str.5.172, i32 0, i32 0
  %218 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %216, i8* %217)
  br label %219

; <label>:219:                                    ; preds = %215, %213
  %220 = icmp slt i32 0, %3
  br i1 %220, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %219
  %221 = zext i32 %3 to i64
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %227
  %indvars.iv24 = phi i64 [ %indvars.iv.next25, %227 ], [ 0, %.lr.ph.preheader ]
  %.2823 = phi i32 [ %228, %227 ], [ 0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 174)
  %222 = sext i32 %.2823 to i64
  %223 = add i64 %222, -1
  br label %224

; <label>:224:                                    ; preds = %224, %.lr.ph
  %lsr.iv = phi i64 [ %lsr.iv.next, %224 ], [ %223, %.lr.ph ]
  call void @unroll_loop(i32 175)
  %scevgep = getelementptr [256 x i32], [256 x i32]* %8, i64 0, i64 %lsr.iv
  %scevgep1 = getelementptr i32, i32* %scevgep, i64 1
  %225 = load i32, i32* %scevgep1, align 4
  %226 = icmp eq i32 %225, 0
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %226, label %224, label %227

; <label>:227:                                    ; preds = %224
  %.39.lcssa.wide = phi i64 [ %lsr.iv.next, %224 ]
  %228 = trunc i64 %.39.lcssa.wide to i32
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = add nsw i32 %231, -1
  store i32 %232, i32* %230, align 4
  %233 = trunc i32 %228 to i8
  %234 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv24
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %6, i64 %236
  store i8 %233, i8* %237, align 1
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %exitcond9 = icmp ne i64 %indvars.iv.next25, %221
  br i1 %exitcond9, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %227
  %.39.lcssa.wide.lcssa = phi i64 [ %.39.lcssa.wide, %227 ]
  %238 = trunc i64 %.39.lcssa.wide.lcssa to i32
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %219
  %.28.lcssa = phi i32 [ 0, %219 ], [ %238, %._crit_edge.loopexit ]
  %239 = icmp slt i32 %.28.lcssa, 256
  br i1 %239, label %241, label %240

; <label>:240:                                    ; preds = %._crit_edge
  call void @BZ2_bz__AssertH__fail(i32 1005)
  br label %241

; <label>:241:                                    ; preds = %240, %._crit_edge
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainSort(i32*, i8*, i16*, i32*, i32, i32, i32*) #0 {
  %8 = alloca [256 x i32], align 16
  %9 = alloca [256 x i8], align 16
  %10 = alloca [256 x i32], align 16, !track !67
  %11 = alloca [256 x i32], align 16, !track !68
  %12 = icmp sge i32 %5, 4
  br i1 %12, label %13, label %17

; <label>:13:                                     ; preds = %7
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %15 = getelementptr [34 x i8], [34 x i8]* @.str.6.166, i32 0, i32 0
  %16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %15)
  br label %17

; <label>:17:                                     ; preds = %13, %7
  br label %18

; <label>:18:                                     ; preds = %17, %18
  %indvars.iv101 = phi i64 [ 65536, %17 ], [ %indvars.iv.next102, %18 ]
  call void @unroll_loop(i32 177)
  %scevgep78 = getelementptr i32, i32* %3, i64 %indvars.iv101
  store i32 0, i32* %scevgep78, align 4
  %indvars.iv.next102 = add nsw i64 %indvars.iv101, -1
  %19 = icmp sge i64 %indvars.iv.next102, 0
  br i1 %19, label %18, label %20

; <label>:20:                                     ; preds = %18
  %21 = getelementptr inbounds i8, i8* %1, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = shl i32 %23, 8
  %25 = sub nsw i32 %4, 1
  %26 = icmp sge i32 %25, 3
  br i1 %26, label %.lr.ph97, label %76

.lr.ph97:                                         ; preds = %20
  %27 = add i32 %4, -4
  %28 = add i32 %4, -1
  %29 = sext i32 %28 to i64
  br label %30

; <label>:30:                                     ; preds = %.lr.ph97, %30
  %indvars.iv6 = phi i64 [ %29, %.lr.ph97 ], [ %indvars.iv.next7, %30 ]
  %.0895 = phi i32 [ %24, %.lr.ph97 ], [ %66, %30 ]
  call void @unroll_loop(i32 178)
  %scevgep64 = getelementptr i16, i16* %2, i64 %indvars.iv6
  store i16 0, i16* %scevgep64, align 2
  %31 = ashr i32 %.0895, 8
  %scevgep71 = getelementptr i8, i8* %1, i64 %indvars.iv6
  %32 = load i8, i8* %scevgep71, align 1
  %33 = zext i8 %32 to i16
  %34 = zext i16 %33 to i32
  %35 = shl i32 %34, 8
  %36 = or i32 %31, %35
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %3, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* %38, align 4
  %scevgep65 = getelementptr i16, i16* %2, i64 %indvars.iv6
  %scevgep66 = getelementptr i16, i16* %scevgep65, i64 -1
  store i16 0, i16* %scevgep66, align 2
  %41 = ashr i32 %36, 8
  %scevgep72 = getelementptr i8, i8* %1, i64 %indvars.iv6
  %scevgep73 = getelementptr i8, i8* %scevgep72, i64 -1
  %42 = load i8, i8* %scevgep73, align 1
  %43 = zext i8 %42 to i16
  %44 = zext i16 %43 to i32
  %45 = shl i32 %44, 8
  %46 = or i32 %41, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %3, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %48, align 4
  %scevgep67 = getelementptr i16, i16* %2, i64 %indvars.iv6
  %scevgep68 = getelementptr i16, i16* %scevgep67, i64 -2
  store i16 0, i16* %scevgep68, align 2
  %51 = ashr i32 %46, 8
  %scevgep74 = getelementptr i8, i8* %1, i64 %indvars.iv6
  %scevgep75 = getelementptr i8, i8* %scevgep74, i64 -2
  %52 = load i8, i8* %scevgep75, align 1
  %53 = zext i8 %52 to i16
  %54 = zext i16 %53 to i32
  %55 = shl i32 %54, 8
  %56 = or i32 %51, %55
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %3, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %58, align 4
  %scevgep69 = getelementptr i16, i16* %2, i64 %indvars.iv6
  %scevgep70 = getelementptr i16, i16* %scevgep69, i64 -3
  store i16 0, i16* %scevgep70, align 2
  %61 = ashr i32 %56, 8
  %scevgep76 = getelementptr i8, i8* %1, i64 %indvars.iv6
  %scevgep77 = getelementptr i8, i8* %scevgep76, i64 -3
  %62 = load i8, i8* %scevgep77, align 1
  %63 = zext i8 %62 to i16
  %64 = zext i16 %63 to i32
  %65 = shl i32 %64, 8
  %66 = or i32 %61, %65
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %3, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = add i32 %69, 1
  store i32 %70, i32* %68, align 4
  %indvars.iv.next7 = add nsw i64 %indvars.iv6, -4
  %71 = icmp sge i64 %indvars.iv.next7, 3
  br i1 %71, label %30, label %._crit_edge98

._crit_edge98:                                    ; preds = %30
  %split99 = phi i32 [ %66, %30 ]
  %72 = lshr i32 %27, 2
  %73 = shl i32 %72, 2
  %74 = add i32 %4, -5
  %75 = sub i32 %74, %73
  br label %76

; <label>:76:                                     ; preds = %._crit_edge98, %20
  %.114.lcssa = phi i32 [ %75, %._crit_edge98 ], [ %25, %20 ]
  %.08.lcssa = phi i32 [ %split99, %._crit_edge98 ], [ %24, %20 ]
  %77 = icmp sge i32 %.114.lcssa, 0
  br i1 %77, label %.lr.ph90, label %._crit_edge91

.lr.ph90:                                         ; preds = %76
  %78 = sext i32 %.114.lcssa to i64
  br label %79

; <label>:79:                                     ; preds = %.lr.ph90, %79
  %indvars.iv92 = phi i64 [ %78, %.lr.ph90 ], [ %indvars.iv.next93, %79 ]
  %.1988 = phi i32 [ %.08.lcssa, %.lr.ph90 ], [ %85, %79 ]
  call void @unroll_loop(i32 179)
  %scevgep62 = getelementptr i16, i16* %2, i64 %indvars.iv92
  store i16 0, i16* %scevgep62, align 2
  %80 = ashr i32 %.1988, 8
  %scevgep63 = getelementptr i8, i8* %1, i64 %indvars.iv92
  %81 = load i8, i8* %scevgep63, align 1
  %82 = zext i8 %81 to i16
  %83 = zext i16 %82 to i32
  %84 = shl i32 %83, 8
  %85 = or i32 %80, %84
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i32, i32* %3, i64 %86
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %indvars.iv.next93 = add nsw i64 %indvars.iv92, -1
  %90 = icmp sge i64 %indvars.iv.next93, 0
  br i1 %90, label %79, label %._crit_edge91.loopexit

._crit_edge91.loopexit:                           ; preds = %79
  br label %._crit_edge91

._crit_edge91:                                    ; preds = %._crit_edge91.loopexit, %76
  %91 = sext i32 %4 to i64
  %scevgep58 = getelementptr i8, i8* %1, i64 %91
  %scevgep60 = getelementptr i16, i16* %2, i64 %91
  br label %92

; <label>:92:                                     ; preds = %._crit_edge91, %92
  %indvars.iv84 = phi i64 [ 0, %._crit_edge91 ], [ %indvars.iv.next85, %92 ]
  call void @unroll_loop(i32 180)
  %scevgep57 = getelementptr i8, i8* %1, i64 %indvars.iv84
  %93 = load i8, i8* %scevgep57, align 1
  %scevgep59 = getelementptr i8, i8* %scevgep58, i64 %indvars.iv84
  store i8 %93, i8* %scevgep59, align 1
  %scevgep61 = getelementptr i16, i16* %scevgep60, i64 %indvars.iv84
  store i16 0, i16* %scevgep61, align 2
  %indvars.iv.next85 = add nuw nsw i64 %indvars.iv84, 1
  %exitcond86 = icmp ne i64 %indvars.iv.next85, 34
  br i1 %exitcond86, label %92, label %94

; <label>:94:                                     ; preds = %92
  %95 = icmp sge i32 %5, 4
  br i1 %95, label %96, label %100

; <label>:96:                                     ; preds = %94
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %98 = getelementptr [28 x i8], [28 x i8]* @.str.2.167, i32 0, i32 0
  %99 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %97, i8* %98)
  br label %100

; <label>:100:                                    ; preds = %96, %94
  %scevgep51 = getelementptr i32, i32* %3, i64 1
  br label %101

; <label>:101:                                    ; preds = %100, %101
  %lsr.iv52 = phi i64 [ 0, %100 ], [ %lsr.iv.next53, %101 ]
  call void @unroll_loop(i32 181)
  %scevgep54 = getelementptr i32, i32* %scevgep51, i64 %lsr.iv52
  %scevgep55 = getelementptr i32, i32* %scevgep54, i64 -1
  %102 = load i32, i32* %scevgep55, align 4
  %scevgep56 = getelementptr i32, i32* %scevgep51, i64 %lsr.iv52
  %103 = load i32, i32* %scevgep56, align 4
  %104 = add i32 %103, %102
  store i32 %104, i32* %scevgep56, align 4
  %lsr.iv.next53 = add nuw nsw i64 %lsr.iv52, 1
  %exitcond82 = icmp ne i64 %lsr.iv.next53, 65536
  br i1 %exitcond82, label %101, label %105

; <label>:105:                                    ; preds = %101
  %106 = getelementptr inbounds i8, i8* %1, i64 0
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = shl i32 %108, 8
  %110 = trunc i32 %109 to i16
  %111 = sub nsw i32 %4, 1
  %112 = icmp sge i32 %111, 3
  br i1 %112, label %.lr.ph76, label %194

.lr.ph76:                                         ; preds = %105
  %113 = add i32 %4, -4
  %114 = add i32 %4, -1
  %115 = sext i32 %114 to i64
  %scevgep37 = getelementptr i8, i8* %1, i64 %115
  %116 = zext i32 %114 to i64
  %117 = add i32 %4, -2
  %118 = zext i32 %117 to i64
  %119 = add i32 %4, -3
  %120 = zext i32 %119 to i64
  %121 = zext i32 %113 to i64
  br label %122

; <label>:122:                                    ; preds = %.lr.ph76, %122
  %lsr.iv38 = phi i64 [ 0, %.lr.ph76 ], [ %lsr.iv.next39, %122 ]
  %.0274 = phi i16 [ %110, %.lr.ph76 ], [ %177, %122 ]
  call void @unroll_loop(i32 182)
  %123 = zext i16 %.0274 to i32
  %124 = ashr i32 %123, 8
  %scevgep40 = getelementptr i8, i8* %scevgep37, i64 %lsr.iv38
  %125 = load i8, i8* %scevgep40, align 1
  %126 = zext i8 %125 to i32
  %127 = shl i32 %126, 8
  %128 = or i32 %124, %127
  %129 = trunc i32 %128 to i16
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds i32, i32* %3, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = sub i32 %132, 1
  %134 = zext i16 %129 to i64
  %135 = getelementptr inbounds i32, i32* %3, i64 %134
  store i32 %133, i32* %135, align 4
  %136 = sext i32 %133 to i64
  %137 = getelementptr inbounds i32, i32* %0, i64 %136
  %138 = add i64 %116, %lsr.iv38
  %tmp47 = trunc i64 %138 to i32
  store i32 %tmp47, i32* %137, align 4
  %139 = zext i16 %129 to i32
  %140 = ashr i32 %139, 8
  %scevgep41 = getelementptr i8, i8* %scevgep37, i64 %lsr.iv38
  %scevgep42 = getelementptr i8, i8* %scevgep41, i64 -1
  %141 = load i8, i8* %scevgep42, align 1
  %142 = zext i8 %141 to i32
  %143 = shl i32 %142, 8
  %144 = or i32 %140, %143
  %145 = trunc i32 %144 to i16
  %146 = zext i16 %145 to i64
  %147 = getelementptr inbounds i32, i32* %3, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = sub i32 %148, 1
  %150 = zext i16 %145 to i64
  %151 = getelementptr inbounds i32, i32* %3, i64 %150
  store i32 %149, i32* %151, align 4
  %152 = sext i32 %149 to i64
  %153 = getelementptr inbounds i32, i32* %0, i64 %152
  %154 = add i64 %118, %lsr.iv38
  %tmp48 = trunc i64 %154 to i32
  store i32 %tmp48, i32* %153, align 4
  %155 = zext i16 %145 to i32
  %156 = ashr i32 %155, 8
  %scevgep43 = getelementptr i8, i8* %scevgep37, i64 %lsr.iv38
  %scevgep44 = getelementptr i8, i8* %scevgep43, i64 -2
  %157 = load i8, i8* %scevgep44, align 1
  %158 = zext i8 %157 to i32
  %159 = shl i32 %158, 8
  %160 = or i32 %156, %159
  %161 = trunc i32 %160 to i16
  %162 = zext i16 %161 to i64
  %163 = getelementptr inbounds i32, i32* %3, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = sub i32 %164, 1
  %166 = zext i16 %161 to i64
  %167 = getelementptr inbounds i32, i32* %3, i64 %166
  store i32 %165, i32* %167, align 4
  %168 = sext i32 %165 to i64
  %169 = getelementptr inbounds i32, i32* %0, i64 %168
  %170 = add i64 %120, %lsr.iv38
  %tmp49 = trunc i64 %170 to i32
  store i32 %tmp49, i32* %169, align 4
  %171 = zext i16 %161 to i32
  %172 = ashr i32 %171, 8
  %scevgep45 = getelementptr i8, i8* %scevgep37, i64 %lsr.iv38
  %scevgep46 = getelementptr i8, i8* %scevgep45, i64 -3
  %173 = load i8, i8* %scevgep46, align 1
  %174 = zext i8 %173 to i32
  %175 = shl i32 %174, 8
  %176 = or i32 %172, %175
  %177 = trunc i32 %176 to i16
  %178 = zext i16 %177 to i64
  %179 = getelementptr inbounds i32, i32* %3, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = sub i32 %180, 1
  %182 = zext i16 %177 to i64
  %183 = getelementptr inbounds i32, i32* %3, i64 %182
  store i32 %181, i32* %183, align 4
  %184 = sext i32 %181 to i64
  %185 = getelementptr inbounds i32, i32* %0, i64 %184
  %186 = add i64 %121, %lsr.iv38
  %tmp50 = trunc i64 %186 to i32
  store i32 %tmp50, i32* %185, align 4
  %lsr.iv.next39 = add nsw i64 %lsr.iv38, -4
  %187 = add i64 %115, %lsr.iv.next39
  %188 = icmp sge i64 %187, 3
  br i1 %188, label %122, label %._crit_edge77

._crit_edge77:                                    ; preds = %122
  %.lcssa = phi i32 [ %176, %122 ]
  %189 = lshr i32 %113, 2
  %190 = trunc i32 %.lcssa to i16
  %191 = shl i32 %189, 2
  %192 = add i32 %4, -5
  %193 = sub i32 %192, %191
  br label %194

; <label>:194:                                    ; preds = %._crit_edge77, %105
  %.518.lcssa = phi i32 [ %193, %._crit_edge77 ], [ %111, %105 ]
  %.02.lcssa = phi i16 [ %190, %._crit_edge77 ], [ %110, %105 ]
  %195 = icmp sge i32 %.518.lcssa, 0
  br i1 %195, label %.lr.ph69, label %._crit_edge70

.lr.ph69:                                         ; preds = %194
  %196 = sext i32 %.518.lcssa to i64
  br label %197

; <label>:197:                                    ; preds = %.lr.ph69, %197
  %lsr.iv35 = phi i32 [ %.518.lcssa, %.lr.ph69 ], [ %lsr.iv.next36, %197 ]
  %indvars.iv71 = phi i64 [ %196, %.lr.ph69 ], [ %indvars.iv.next72, %197 ]
  %.1367 = phi i16 [ %.02.lcssa, %.lr.ph69 ], [ %204, %197 ]
  call void @unroll_loop(i32 183)
  %198 = zext i16 %.1367 to i32
  %199 = ashr i32 %198, 8
  %scevgep34 = getelementptr i8, i8* %1, i64 %indvars.iv71
  %200 = load i8, i8* %scevgep34, align 1
  %201 = zext i8 %200 to i32
  %202 = shl i32 %201, 8
  %203 = or i32 %199, %202
  %204 = trunc i32 %203 to i16
  %205 = zext i16 %204 to i64
  %206 = getelementptr inbounds i32, i32* %3, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = sub i32 %207, 1
  %209 = zext i16 %204 to i64
  %210 = getelementptr inbounds i32, i32* %3, i64 %209
  store i32 %208, i32* %210, align 4
  %211 = sext i32 %208 to i64
  %212 = getelementptr inbounds i32, i32* %0, i64 %211
  store i32 %lsr.iv35, i32* %212, align 4
  %indvars.iv.next72 = add nsw i64 %indvars.iv71, -1
  %lsr.iv.next36 = add i32 %lsr.iv35, -1
  %213 = icmp sge i64 %indvars.iv.next72, 0
  br i1 %213, label %197, label %._crit_edge70.loopexit

._crit_edge70.loopexit:                           ; preds = %197
  br label %._crit_edge70

._crit_edge70:                                    ; preds = %._crit_edge70.loopexit, %194
  br label %214

; <label>:214:                                    ; preds = %._crit_edge70, %214
  %indvars.iv63 = phi i64 [ 0, %._crit_edge70 ], [ %indvars.iv.next64, %214 ]
  %scevgep31 = getelementptr [256 x i8], [256 x i8]* %9, i64 0, i64 %indvars.iv63
  store i8 0, i8* %scevgep31, align 1
  %scevgep33 = getelementptr [256 x i32], [256 x i32]* %8, i64 0, i64 %indvars.iv63
  %tmp32 = trunc i64 %indvars.iv63 to i32
  store i32 %tmp32, i32* %scevgep33, align 4
  %indvars.iv.next64 = add nuw nsw i64 %indvars.iv63, 1
  %exitcond65 = icmp ne i64 %indvars.iv.next64, 256
  br i1 %exitcond65, label %214, label %.preheader3.preheader

.preheader3.preheader:                            ; preds = %214
  %.01.ph = phi i32 [ 1, %214 ]
  br label %.preheader3

.preheader3:                                      ; preds = %.preheader3.preheader, %.preheader3
  %.01 = phi i32 [ %216, %.preheader3 ], [ %.01.ph, %.preheader3.preheader ]
  %215 = mul nsw i32 3, %.01
  %216 = add nsw i32 %215, 1
  %217 = icmp sle i32 %216, 256
  br i1 %217, label %.preheader3, label %.preheader2.preheader

.preheader2.preheader:                            ; preds = %.preheader3
  %.1.ph = phi i32 [ 364, %.preheader3 ]
  br label %.preheader2

.preheader2:                                      ; preds = %.preheader2.preheader, %._crit_edge58
  %.1 = phi i32 [ %218, %._crit_edge58 ], [ %.1.ph, %.preheader2.preheader ]
  %218 = sdiv i32 %.1, 3
  %219 = icmp sle i32 %218, 255
  br i1 %219, label %.lr.ph57, label %._crit_edge58

.lr.ph57:                                         ; preds = %.preheader2
  %220 = sext i32 %218 to i64
  %221 = sub nsw i32 %218, 1
  br label %222

; <label>:222:                                    ; preds = %.lr.ph57, %264
  %lsr.iv27 = phi i32 [ 0, %.lr.ph57 ], [ %lsr.iv.next28, %264 ]
  %indvars.iv59 = phi i64 [ %220, %.lr.ph57 ], [ %indvars.iv.next60, %264 ]
  %223 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %indvars.iv59
  %224 = load i32, i32* %223, align 4
  %225 = add nsw i32 %224, 1
  %226 = shl i32 %225, 8
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i32, i32* %3, i64 %227
  %229 = shl i32 %224, 8
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i32, i32* %3, i64 %230
  br label %232

; <label>:232:                                    ; preds = %254, %222
  %lsr.iv29 = phi i32 [ %lsr.iv.next30, %254 ], [ %lsr.iv27, %222 ]
  %233 = add i32 %218, %lsr.iv29
  call void @unroll_loop(i32 184)
  %234 = sext i32 %lsr.iv29 to i64
  %235 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %234
  %236 = load i32, i32* %235, align 4
  %237 = add nsw i32 %236, 1
  %238 = shl i32 %237, 8
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i32, i32* %3, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = sext i32 %lsr.iv29 to i64
  %243 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %242
  %244 = load i32, i32* %243, align 4
  %245 = shl i32 %244, 8
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %3, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = sub i32 %241, %248
  %250 = load i32, i32* %228, align 4
  %251 = load i32, i32* %231, align 4
  %252 = sub i32 %250, %251
  %253 = icmp ugt i32 %249, %252
  br i1 %253, label %254, label %._crit_edge26

; <label>:254:                                    ; preds = %232
  %255 = sext i32 %lsr.iv29 to i64
  %256 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = sext i32 %233 to i64
  %259 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %258
  store i32 %257, i32* %259, align 4
  %lsr.iv.next30 = sub i32 %lsr.iv29, %218
  %260 = add i32 %218, %lsr.iv.next30
  %261 = icmp sle i32 %260, %221
  br i1 %261, label %split, label %232

split:                                            ; preds = %254
  %262 = add i32 %218, %lsr.iv.next30
  br label %264

._crit_edge26:                                    ; preds = %232
  %263 = add i32 %218, %lsr.iv29
  br label %264

; <label>:264:                                    ; preds = %split, %._crit_edge26
  %.311 = phi i32 [ %263, %._crit_edge26 ], [ %262, %split ]
  %265 = sext i32 %.311 to i64
  %266 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %265
  store i32 %224, i32* %266, align 4
  %indvars.iv.next60 = add nsw i64 %indvars.iv59, 1
  %lsr.iv.next28 = add i32 %lsr.iv27, 1
  %exitcond61 = icmp ne i64 %indvars.iv.next60, 256
  br i1 %exitcond61, label %222, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %264
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %.preheader2
  %267 = icmp ne i32 %218, 1
  br i1 %267, label %.preheader2, label %.preheader.preheader

.preheader.preheader:                             ; preds = %._crit_edge58
  %indvars.iv53.ph = phi i64 [ 0, %._crit_edge58 ]
  %.0452.ph = phi i32 [ 0, %._crit_edge58 ]
  %268 = icmp sge i32 %5, 4
  %269 = sub nsw i32 %4, 1
  %scevgep7 = getelementptr i32, i32* %3, i64 1
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %457
  %indvars.iv53 = phi i64 [ %indvars.iv.next54, %457 ], [ %indvars.iv53.ph, %.preheader.preheader ]
  %.0452 = phi i32 [ %.15.lcssa, %457 ], [ %.0452.ph, %.preheader.preheader ]
  call void @unroll_loop(i32 185)
  %270 = getelementptr inbounds [256 x i32], [256 x i32]* %8, i64 0, i64 %indvars.iv53
  %271 = load i32, i32* %270, align 4
  %272 = zext i32 %271 to i64
  %273 = zext i32 %271 to i64
  %274 = shl i32 %271, 8
  %275 = sext i32 %274 to i64
  %scevgep = getelementptr i32, i32* %3, i64 %275
  br label %276

; <label>:276:                                    ; preds = %.preheader, %304
  %indvars.iv = phi i64 [ 0, %.preheader ], [ %indvars.iv.next, %304 ]
  %.1528 = phi i32 [ %.0452, %.preheader ], [ %.4, %304 ]
  call void @unroll_loop(i32 186)
  %277 = icmp ne i64 %273, %indvars.iv
  br i1 %277, label %278, label %304

; <label>:278:                                    ; preds = %276
  %scevgep1 = getelementptr i32, i32* %scevgep, i64 %indvars.iv
  %279 = load i32, i32* %scevgep1, align 4
  %280 = and i32 %279, 2097152
  %281 = icmp ne i32 %280, 0
  br i1 %281, label %301, label %282

; <label>:282:                                    ; preds = %278
  %scevgep2 = getelementptr i32, i32* %scevgep, i64 %indvars.iv
  %283 = load i32, i32* %scevgep2, align 4
  %284 = and i32 %283, -2097153
  %scevgep3 = getelementptr i32, i32* %scevgep, i64 %indvars.iv
  %scevgep4 = getelementptr i32, i32* %scevgep3, i64 1
  %285 = load i32, i32* %scevgep4, align 4
  %286 = and i32 %285, -2097153
  %287 = sub i32 %286, 1
  %288 = icmp sgt i32 %287, %284
  br i1 %288, label %289, label %301

; <label>:289:                                    ; preds = %282
  br i1 %268, label %290, label %295

; <label>:290:                                    ; preds = %289
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %292 = sub nsw i32 %287, %284
  %293 = add nsw i32 %292, 1
  %tmp = trunc i64 %indvars.iv to i32
  %tmp6 = trunc i64 %272 to i32
  %294 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %291, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7.168, i64 0, i64 0), i32 %tmp6, i32 %tmp, i32 %.1528, i32 %293)
  br label %295

; <label>:295:                                    ; preds = %290, %289
  call void @mainQSort3(i32* %0, i8* %1, i16* %2, i32 %4, i32 %284, i32 %287, i32 2, i32* %6)
  %296 = sub nsw i32 %287, %284
  %297 = add nsw i32 %296, 1
  %298 = add nsw i32 %.1528, %297
  %299 = load i32, i32* %6, align 4
  %300 = icmp slt i32 %299, 0
  br i1 %300, label %.loopexit.loopexit, label %301

; <label>:301:                                    ; preds = %282, %295, %278
  %.3 = phi i32 [ %.1528, %278 ], [ %.1528, %282 ], [ %298, %295 ]
  %scevgep5 = getelementptr i32, i32* %scevgep, i64 %indvars.iv
  %302 = load i32, i32* %scevgep5, align 4
  %303 = or i32 %302, 2097152
  store i32 %303, i32* %scevgep5, align 4
  br label %304

; <label>:304:                                    ; preds = %276, %301
  %.4 = phi i32 [ %.3, %301 ], [ %.1528, %276 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %305 = icmp ule i64 %indvars.iv.next, 255
  br i1 %305, label %276, label %306

; <label>:306:                                    ; preds = %304
  %.15.lcssa = phi i32 [ %.4, %304 ]
  %307 = sext i32 %271 to i64
  %308 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %307
  %309 = load i8, i8* %308, align 1
  %310 = icmp ne i8 %309, 0
  br i1 %310, label %311, label %312

; <label>:311:                                    ; preds = %306
  call void @BZ2_bz__AssertH__fail(i32 1006)
  br label %312

; <label>:312:                                    ; preds = %311, %306
  %313 = sext i32 %271 to i64
  %scevgep8 = getelementptr i32, i32* %scevgep7, i64 %313
  br label %314

; <label>:314:                                    ; preds = %312, %314
  %lsr.iv = phi i32* [ %scevgep8, %312 ], [ %scevgep9, %314 ]
  %indvars.iv30 = phi i64 [ 0, %312 ], [ %indvars.iv.next31, %314 ]
  call void @unroll_loop(i32 187)
  %scevgep10 = getelementptr i32, i32* %lsr.iv, i64 -1
  %315 = load i32, i32* %scevgep10, align 4
  %316 = and i32 %315, -2097153
  %scevgep11 = getelementptr [256 x i32], [256 x i32]* %10, i64 0, i64 %indvars.iv30
  store i32 %316, i32* %scevgep11, align 4
  %317 = load i32, i32* %lsr.iv, align 4
  %318 = and i32 %317, -2097153
  %319 = sub i32 %318, 1
  %scevgep12 = getelementptr [256 x i32], [256 x i32]* %11, i64 0, i64 %indvars.iv30
  store i32 %319, i32* %scevgep12, align 4
  %indvars.iv.next31 = add nuw nsw i64 %indvars.iv30, 1
  %scevgep9 = getelementptr i32, i32* %lsr.iv, i64 256
  %exitcond = icmp ne i64 %indvars.iv.next31, 256
  br i1 %exitcond, label %314, label %320

; <label>:320:                                    ; preds = %314
  %321 = shl i32 %271, 8
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i32, i32* %3, i64 %322
  %324 = load i32, i32* %323, align 4
  %325 = and i32 %324, -2097153
  %326 = sext i32 %271 to i64
  %327 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %326
  %328 = load i32, i32* %327, align 4
  %329 = icmp slt i32 %325, %328
  br i1 %329, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %320
  %330 = sext i32 %325 to i64
  br label %331

; <label>:331:                                    ; preds = %.lr.ph, %350
  %indvars.iv33 = phi i64 [ %330, %.lr.ph ], [ %indvars.iv.next34, %350 ]
  call void @unroll_loop(i32 188)
  %scevgep13 = getelementptr i32, i32* %0, i64 %indvars.iv33
  %332 = load i32, i32* %scevgep13, align 4
  %333 = sub i32 %332, 1
  %334 = icmp slt i32 %333, 0
  %335 = add nsw i32 %333, %4
  %spec.select = select i1 %334, i32 %335, i32 %333
  %336 = sext i32 %spec.select to i64
  %337 = getelementptr inbounds i8, i8* %1, i64 %336
  %338 = load i8, i8* %337, align 1
  %339 = zext i8 %338 to i64
  %340 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %339
  %341 = load i8, i8* %340, align 1
  %342 = icmp ne i8 %341, 0
  br i1 %342, label %350, label %343

; <label>:343:                                    ; preds = %331
  %344 = zext i8 %338 to i64
  %345 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = add nsw i32 %346, 1
  store i32 %347, i32* %345, align 4
  %348 = sext i32 %346 to i64
  %349 = getelementptr inbounds i32, i32* %0, i64 %348
  store i32 %spec.select, i32* %349, align 4
  br label %350

; <label>:350:                                    ; preds = %331, %343
  %indvars.iv.next34 = add nsw i64 %indvars.iv33, 1
  %351 = load i32, i32* %327, align 4
  %352 = sext i32 %351 to i64
  %353 = icmp slt i64 %indvars.iv.next34, %352
  br i1 %353, label %331, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %350
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %320
  %354 = add nsw i32 %271, 1
  %355 = shl i32 %354, 8
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i32, i32* %3, i64 %356
  %358 = load i32, i32* %357, align 4
  %359 = and i32 %358, -2097153
  %360 = sub i32 %359, 1
  %361 = sext i32 %271 to i64
  %362 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %361
  %363 = load i32, i32* %362, align 4
  %364 = icmp sgt i32 %360, %363
  br i1 %364, label %.lr.ph37, label %._crit_edge38

.lr.ph37:                                         ; preds = %._crit_edge
  %365 = sext i32 %360 to i64
  br label %366

; <label>:366:                                    ; preds = %.lr.ph37, %385
  %indvars.iv39 = phi i64 [ %365, %.lr.ph37 ], [ %indvars.iv.next40, %385 ]
  call void @unroll_loop(i32 189)
  %scevgep14 = getelementptr i32, i32* %0, i64 %indvars.iv39
  %367 = load i32, i32* %scevgep14, align 4
  %368 = sub i32 %367, 1
  %369 = icmp slt i32 %368, 0
  %370 = add nsw i32 %368, %4
  %spec.select1 = select i1 %369, i32 %370, i32 %368
  %371 = sext i32 %spec.select1 to i64
  %372 = getelementptr inbounds i8, i8* %1, i64 %371
  %373 = load i8, i8* %372, align 1
  %374 = zext i8 %373 to i64
  %375 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %374
  %376 = load i8, i8* %375, align 1
  %377 = icmp ne i8 %376, 0
  br i1 %377, label %385, label %378

; <label>:378:                                    ; preds = %366
  %379 = zext i8 %373 to i64
  %380 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %379
  %381 = load i32, i32* %380, align 4
  %382 = add nsw i32 %381, -1
  store i32 %382, i32* %380, align 4
  %383 = sext i32 %381 to i64
  %384 = getelementptr inbounds i32, i32* %0, i64 %383
  store i32 %spec.select1, i32* %384, align 4
  br label %385

; <label>:385:                                    ; preds = %366, %378
  %indvars.iv.next40 = add i64 %indvars.iv39, -1
  %386 = load i32, i32* %362, align 4
  %387 = sext i32 %386 to i64
  %388 = icmp sgt i64 %indvars.iv.next40, %387
  br i1 %388, label %366, label %._crit_edge38.loopexit

._crit_edge38.loopexit:                           ; preds = %385
  br label %._crit_edge38

._crit_edge38:                                    ; preds = %._crit_edge38.loopexit, %._crit_edge
  %389 = sext i32 %271 to i64
  %390 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = sub nsw i32 %391, 1
  %393 = sext i32 %271 to i64
  %394 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %393
  %395 = load i32, i32* %394, align 4
  %396 = icmp eq i32 %392, %395
  br i1 %396, label %408, label %397

; <label>:397:                                    ; preds = %._crit_edge38
  %398 = sext i32 %271 to i64
  %399 = getelementptr inbounds [256 x i32], [256 x i32]* %10, i64 0, i64 %398
  %400 = load i32, i32* %399, align 4
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %407

; <label>:402:                                    ; preds = %397
  %403 = sext i32 %271 to i64
  %404 = getelementptr inbounds [256 x i32], [256 x i32]* %11, i64 0, i64 %403
  %405 = load i32, i32* %404, align 4
  %406 = icmp eq i32 %405, %269
  br i1 %406, label %408, label %407

; <label>:407:                                    ; preds = %402, %397
  call void @BZ2_bz__AssertH__fail(i32 1007)
  br label %408

; <label>:408:                                    ; preds = %407, %402, %._crit_edge38
  %scevgep15 = getelementptr i32, i32* %3, i64 %313
  %scevgep1517 = bitcast i32* %scevgep15 to i8*
  br label %409

; <label>:409:                                    ; preds = %408, %409
  %lsr.iv16 = phi i64 [ 0, %408 ], [ %lsr.iv.next, %409 ]
  call void @unroll_loop(i32 190)
  %uglygep = getelementptr i8, i8* %scevgep1517, i64 %lsr.iv16
  %uglygep18 = bitcast i8* %uglygep to i32*
  %410 = load i32, i32* %uglygep18, align 4
  %411 = or i32 %410, 2097152
  store i32 %411, i32* %uglygep18, align 4
  %lsr.iv.next = add nuw nsw i64 %lsr.iv16, 1024
  %exitcond44 = icmp ne i64 %lsr.iv.next, 262144
  br i1 %exitcond44, label %409, label %412

; <label>:412:                                    ; preds = %409
  %413 = sext i32 %271 to i64
  %414 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 %413
  store i8 1, i8* %414, align 1
  %415 = icmp ult i64 %indvars.iv53, 255
  br i1 %415, label %416, label %457

; <label>:416:                                    ; preds = %412
  %417 = shl i32 %271, 8
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds i32, i32* %3, i64 %418
  %420 = load i32, i32* %419, align 4
  %421 = and i32 %420, -2097153
  %422 = add nsw i32 %271, 1
  %423 = shl i32 %422, 8
  %424 = sext i32 %423 to i64
  %425 = getelementptr inbounds i32, i32* %3, i64 %424
  %426 = load i32, i32* %425, align 4
  %427 = and i32 %426, -2097153
  %428 = sub i32 %427, %421
  br label %429

; <label>:429:                                    ; preds = %429, %416
  %lsr.iv19 = phi i32 [ %lsr.iv.next20, %429 ], [ -1, %416 ]
  %430 = add i32 %lsr.iv19, 1
  call void @unroll_loop(i32 191)
  %431 = ashr i32 %428, %430
  %432 = icmp sgt i32 %431, 65534
  %lsr.iv.next20 = add nsw i32 %lsr.iv19, 1
  br i1 %432, label %429, label %433

; <label>:433:                                    ; preds = %429
  %.0.lcssa = phi i32 [ %lsr.iv.next20, %429 ]
  %434 = sub nsw i32 %428, 1
  %435 = icmp sge i32 %434, 0
  br i1 %435, label %.lr.ph47, label %._crit_edge48

.lr.ph47:                                         ; preds = %433
  %436 = add i32 %427, -1
  %437 = sub i32 %436, %421
  %438 = sext i32 %437 to i64
  %439 = sext i32 %421 to i64
  %scevgep21 = getelementptr i32, i32* %0, i64 %439
  br label %440

; <label>:440:                                    ; preds = %.lr.ph47, %451
  %indvars.iv49 = phi i64 [ %438, %.lr.ph47 ], [ %indvars.iv.next50, %451 ]
  %lsr25 = trunc i64 %indvars.iv49 to i32
  call void @unroll_loop(i32 192)
  %scevgep22 = getelementptr i32, i32* %scevgep21, i64 %indvars.iv49
  %441 = load i32, i32* %scevgep22, align 4
  %442 = ashr i32 %lsr25, %.0.lcssa
  %443 = trunc i32 %442 to i16
  %444 = sext i32 %441 to i64
  %445 = getelementptr inbounds i16, i16* %2, i64 %444
  store i16 %443, i16* %445, align 2
  %446 = icmp slt i32 %441, 34
  br i1 %446, label %447, label %451

; <label>:447:                                    ; preds = %440
  %448 = add nsw i32 %441, %4
  %449 = sext i32 %448 to i64
  %450 = getelementptr inbounds i16, i16* %2, i64 %449
  store i16 %443, i16* %450, align 2
  br label %451

; <label>:451:                                    ; preds = %440, %447
  %indvars.iv.next50 = add nsw i64 %indvars.iv49, -1
  %452 = icmp sge i64 %indvars.iv.next50, 0
  br i1 %452, label %440, label %._crit_edge48.loopexit

._crit_edge48.loopexit:                           ; preds = %451
  br label %._crit_edge48

._crit_edge48:                                    ; preds = %._crit_edge48.loopexit, %433
  %453 = sub nsw i32 %428, 1
  %454 = ashr i32 %453, %.0.lcssa
  %455 = icmp sle i32 %454, 65535
  br i1 %455, label %457, label %456

; <label>:456:                                    ; preds = %._crit_edge48
  call void @BZ2_bz__AssertH__fail(i32 1002)
  br label %457

; <label>:457:                                    ; preds = %412, %456, %._crit_edge48
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %458 = icmp ule i64 %indvars.iv.next54, 255
  br i1 %458, label %.preheader, label %459

; <label>:459:                                    ; preds = %457
  %.04.lcssa = phi i32 [ %.15.lcssa, %457 ]
  %460 = icmp sge i32 %5, 4
  br i1 %460, label %461, label %.loopexit

; <label>:461:                                    ; preds = %459
  %462 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %463 = sub nsw i32 %4, %.04.lcssa
  %464 = getelementptr [44 x i8], [44 x i8]* @.str.8.169, i32 0, i32 0
  %465 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %462, i8* %464, i32 %4, i32 %.04.lcssa, i32 %463)
  br label %.loopexit

.loopexit.loopexit:                               ; preds = %295
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %461, %459
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainQSort3(i32*, i8*, i16*, i32, i32, i32, i32, i32*) #0 {
  %9 = alloca [100 x i32], align 16
  %10 = alloca [100 x i32], align 16
  %11 = alloca [100 x i32], align 16
  %12 = alloca [3 x i32], align 4
  %13 = alloca [3 x i32], align 4
  %14 = alloca [3 x i32], align 4
  %15 = sext i32 0 to i64
  %16 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %15
  store i32 %4, i32* %16, align 4
  %17 = sext i32 0 to i64
  %18 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %17
  store i32 %5, i32* %18, align 4
  %19 = sext i32 0 to i64
  %20 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %19
  store i32 %6, i32* %20, align 4
  %21 = add nsw i32 0, 1
  %22 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %23 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %24 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %25 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %26 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %27 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %28 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  %29 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %30 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  %31 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %32 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %33 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %34 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %35 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %36 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %37 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %38 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %39 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %41 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %43 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %44 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %45 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %46 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %47 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %48 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %49 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %50 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  %51 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %52 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  %53 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %54 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  %55 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %56 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %57 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %58 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %59 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %60 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  %61 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %62 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  %63 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %64 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %65 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %66 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %67 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %68 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %69 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %70 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %71 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %72 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %73 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %74 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %75 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %76 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %77 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %78 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %79 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 0
  %80 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 0
  %81 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 0
  %82 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 1
  %83 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 1
  %84 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 1
  %85 = getelementptr inbounds [3 x i32], [3 x i32]* %12, i64 0, i64 2
  %86 = getelementptr inbounds [3 x i32], [3 x i32]* %13, i64 0, i64 2
  %87 = getelementptr inbounds [3 x i32], [3 x i32]* %14, i64 0, i64 2
  %.promoted = load i32, i32* %24, align 1
  %.promoted1 = load i32, i32* %27, align 1
  %.promoted2 = load i32, i32* %30, align 1
  br label %88

; <label>:88:                                     ; preds = %8, %.backedge
  %89 = phi i32 [ %.promoted2, %8 ], [ %111, %.backedge ]
  %90 = phi i32 [ %.promoted1, %8 ], [ %112, %.backedge ]
  %91 = phi i32 [ %.promoted, %8 ], [ %113, %.backedge ]
  %.0681 = phi i32 [ %21, %8 ], [ %.06.be, %.backedge ]
  call void @unroll_loop(i32 194)
  %92 = icmp slt i32 %.0681, 98
  br i1 %92, label %94, label %93

; <label>:93:                                     ; preds = %88
  call void @BZ2_bz__AssertH__fail(i32 1001)
  br label %94

; <label>:94:                                     ; preds = %93, %88
  %95 = add nsw i32 %.0681, -1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %95 to i64
  %100 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %95 to i64
  %103 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sub nsw i32 %101, %98
  %106 = icmp slt i32 %105, 20
  %107 = icmp sgt i32 %104, 14
  %or.cond = or i1 %106, %107
  br i1 %or.cond, label %108, label %115

; <label>:108:                                    ; preds = %94
  call void @mainSimpleSort(i32* %0, i8* %1, i16* %2, i32 %3, i32 %98, i32 %101, i32 %104, i32* %7)
  %109 = load i32, i32* %7, align 4
  %110 = icmp slt i32 %109, 0
  br i1 %110, label %.loopexit, label %.backedge

.backedge:                                        ; preds = %108, %226, %332
  %111 = phi i32 [ %89, %226 ], [ %318, %332 ], [ %89, %108 ]
  %112 = phi i32 [ %90, %226 ], [ %333, %332 ], [ %90, %108 ]
  %113 = phi i32 [ %91, %226 ], [ %334, %332 ], [ %91, %108 ]
  %.06.be = phi i32 [ %234, %226 ], [ %361, %332 ], [ %95, %108 ]
  %114 = icmp sgt i32 %.06.be, 0
  br i1 %114, label %88, label %.loopexit

; <label>:115:                                    ; preds = %94
  %116 = sext i32 %98 to i64
  %117 = getelementptr inbounds i32, i32* %0, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, %104
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %1, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i32 %101 to i64
  %124 = getelementptr inbounds i32, i32* %0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, %104
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %1, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = add nsw i32 %98, %101
  %131 = ashr i32 %130, 1
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i32, i32* %0, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, %104
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %1, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = call zeroext i8 @mmed3(i8 zeroext %122, i8 zeroext %129, i8 zeroext %138)
  %140 = zext i8 %139 to i32
  br label %141

; <label>:141:                                    ; preds = %115, %211
  %.012 = phi i32 [ %101, %115 ], [ %.11321, %211 ]
  %.010 = phi i32 [ %98, %115 ], [ %.11117, %211 ]
  %.08 = phi i32 [ %101, %115 ], [ %223, %211 ]
  %.07 = phi i32 [ %98, %115 ], [ %222, %211 ]
  call void @unroll_loop(i32 195)
  %142 = sext i32 %.08 to i64
  %143 = icmp sgt i32 %.07, %.08
  br i1 %143, label %.outer28._crit_edge, label %.lr.ph.lr.ph

.lr.ph.lr.ph:                                     ; preds = %141
  %144 = sext i32 %.010 to i64
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.lr.ph, %.outer28
  %indvars.iv43 = phi i64 [ %144, %.lr.ph.lr.ph ], [ %indvars.iv.next44, %.outer28 ]
  %.1.ph40 = phi i32 [ %.07, %.lr.ph.lr.ph ], [ %167, %.outer28 ]
  call void @unroll_loop(i32 176)
  %145 = sext i32 %.1.ph40 to i64
  br label %149

.outer28..outer28._crit_edge_crit_edge:           ; preds = %.outer28
  %split41.wide = phi i64 [ %indvars.iv.next44, %.outer28 ]
  %split42 = phi i32 [ %167, %.outer28 ]
  %146 = trunc i64 %split41.wide to i32
  br label %.outer28._crit_edge

._crit_edge:                                      ; preds = %174
  %split37.wide = phi i64 [ %indvars.iv43, %174 ]
  %split38.wide = phi i64 [ %indvars.iv.next, %174 ]
  %147 = trunc i64 %split37.wide to i32
  %148 = trunc i64 %split38.wide to i32
  br label %.outer28._crit_edge

; <label>:149:                                    ; preds = %.lr.ph, %174
  %indvars.iv = phi i64 [ %145, %.lr.ph ], [ %indvars.iv.next, %174 ]
  call void @unroll_loop(i32 196)
  %scevgep = getelementptr i32, i32* %0, i64 %indvars.iv
  %150 = load i32, i32* %scevgep, align 4
  %151 = add i32 %150, %104
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %1, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i32
  %156 = sub nsw i32 %155, %140
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %.outer28, label %169

.outer28:                                         ; preds = %149
  %.1.lcssa30.wide = phi i64 [ %indvars.iv, %149 ]
  %158 = trunc i64 %.1.lcssa30.wide to i32
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i32, i32* %0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv43
  %163 = load i32, i32* %162, align 4
  %164 = sext i32 %158 to i64
  %165 = getelementptr inbounds i32, i32* %0, i64 %164
  store i32 %163, i32* %165, align 4
  %166 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv43
  store i32 %161, i32* %166, align 4
  %indvars.iv.next44 = add i64 %indvars.iv43, 1
  %167 = add nsw i32 %158, 1
  %168 = icmp sgt i32 %167, %.08
  br i1 %168, label %.outer28..outer28._crit_edge_crit_edge, label %.lr.ph

; <label>:169:                                    ; preds = %149
  %170 = icmp sgt i32 %156, 0
  br i1 %170, label %171, label %174

; <label>:171:                                    ; preds = %169
  %.111.lcssa16.wide = phi i64 [ %indvars.iv43, %169 ]
  %.1.lcssa14.wide = phi i64 [ %indvars.iv, %169 ]
  %172 = trunc i64 %.111.lcssa16.wide to i32
  %173 = trunc i64 %.1.lcssa14.wide to i32
  br label %.outer28._crit_edge

; <label>:174:                                    ; preds = %169
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %175 = icmp sgt i64 %indvars.iv.next, %142
  br i1 %175, label %._crit_edge, label %149

.outer28._crit_edge:                              ; preds = %._crit_edge, %.outer28..outer28._crit_edge_crit_edge, %141, %171
  %.11117 = phi i32 [ %172, %171 ], [ %147, %._crit_edge ], [ %146, %.outer28..outer28._crit_edge_crit_edge ], [ %.010, %141 ]
  %.115 = phi i32 [ %173, %171 ], [ %148, %._crit_edge ], [ %split42, %.outer28..outer28._crit_edge_crit_edge ], [ %.07, %141 ]
  %176 = sext i32 %.115 to i64
  %177 = icmp sgt i32 %.115, %.08
  br i1 %177, label %.outer._crit_edge, label %.lr.ph46.lr.ph

.lr.ph46.lr.ph:                                   ; preds = %.outer28._crit_edge
  %178 = sext i32 %.012 to i64
  br label %.lr.ph46

.lr.ph46:                                         ; preds = %.lr.ph46.lr.ph, %.outer
  %indvars.iv58 = phi i64 [ %178, %.lr.ph46.lr.ph ], [ %indvars.iv.next59, %.outer ]
  %.19.ph55 = phi i32 [ %.08, %.lr.ph46.lr.ph ], [ %201, %.outer ]
  call void @unroll_loop(i32 153)
  %179 = sext i32 %.19.ph55 to i64
  br label %183

.outer..outer._crit_edge_crit_edge:               ; preds = %.outer
  %split56.wide = phi i64 [ %indvars.iv.next59, %.outer ]
  %split57 = phi i32 [ %201, %.outer ]
  %180 = trunc i64 %split56.wide to i32
  br label %.outer._crit_edge

._crit_edge49:                                    ; preds = %208
  %split50.wide = phi i64 [ %indvars.iv58, %208 ]
  %split51.wide = phi i64 [ %indvars.iv.next53, %208 ]
  %181 = trunc i64 %split50.wide to i32
  %182 = trunc i64 %split51.wide to i32
  br label %.outer._crit_edge

; <label>:183:                                    ; preds = %.lr.ph46, %208
  %indvars.iv52 = phi i64 [ %179, %.lr.ph46 ], [ %indvars.iv.next53, %208 ]
  call void @unroll_loop(i32 197)
  %scevgep3 = getelementptr i32, i32* %0, i64 %indvars.iv52
  %184 = load i32, i32* %scevgep3, align 4
  %185 = add i32 %184, %104
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %1, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = sub nsw i32 %189, %140
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %.outer, label %203

.outer:                                           ; preds = %183
  %.19.lcssa23.wide = phi i64 [ %indvars.iv52, %183 ]
  %192 = trunc i64 %.19.lcssa23.wide to i32
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i32, i32* %0, i64 %193
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv58
  %197 = load i32, i32* %196, align 4
  %198 = sext i32 %192 to i64
  %199 = getelementptr inbounds i32, i32* %0, i64 %198
  store i32 %197, i32* %199, align 4
  %200 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv58
  store i32 %195, i32* %200, align 4
  %indvars.iv.next59 = add i64 %indvars.iv58, -1
  %201 = add nsw i32 %192, -1
  %202 = icmp sgt i32 %.115, %201
  br i1 %202, label %.outer..outer._crit_edge_crit_edge, label %.lr.ph46

; <label>:203:                                    ; preds = %183
  %204 = icmp slt i32 %190, 0
  br i1 %204, label %205, label %208

; <label>:205:                                    ; preds = %203
  %.113.lcssa20.wide = phi i64 [ %indvars.iv58, %203 ]
  %.19.lcssa18.wide = phi i64 [ %indvars.iv52, %203 ]
  %206 = trunc i64 %.113.lcssa20.wide to i32
  %207 = trunc i64 %.19.lcssa18.wide to i32
  br label %.outer._crit_edge

; <label>:208:                                    ; preds = %203
  %indvars.iv.next53 = add nsw i64 %indvars.iv52, -1
  %209 = icmp sgt i64 %176, %indvars.iv.next53
  br i1 %209, label %._crit_edge49, label %183

.outer._crit_edge:                                ; preds = %._crit_edge49, %.outer..outer._crit_edge_crit_edge, %.outer28._crit_edge, %205
  %.11321 = phi i32 [ %206, %205 ], [ %181, %._crit_edge49 ], [ %180, %.outer..outer._crit_edge_crit_edge ], [ %.012, %.outer28._crit_edge ]
  %.1919 = phi i32 [ %207, %205 ], [ %182, %._crit_edge49 ], [ %split57, %.outer..outer._crit_edge_crit_edge ], [ %.08, %.outer28._crit_edge ]
  %210 = icmp sgt i32 %.115, %.1919
  br i1 %210, label %224, label %211

; <label>:211:                                    ; preds = %.outer._crit_edge
  %212 = sext i32 %.115 to i64
  %213 = getelementptr inbounds i32, i32* %0, i64 %212
  %214 = load i32, i32* %213, align 4
  %215 = sext i32 %.1919 to i64
  %216 = getelementptr inbounds i32, i32* %0, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = sext i32 %.115 to i64
  %219 = getelementptr inbounds i32, i32* %0, i64 %218
  store i32 %217, i32* %219, align 4
  %220 = sext i32 %.1919 to i64
  %221 = getelementptr inbounds i32, i32* %0, i64 %220
  store i32 %214, i32* %221, align 4
  %222 = add nsw i32 %.115, 1
  %223 = add nsw i32 %.1919, -1
  br label %141

; <label>:224:                                    ; preds = %.outer._crit_edge
  %.11321.lcssa = phi i32 [ %.11321, %.outer._crit_edge ]
  %.1919.lcssa = phi i32 [ %.1919, %.outer._crit_edge ]
  %.11117.lcssa = phi i32 [ %.11117, %.outer._crit_edge ]
  %.115.lcssa = phi i32 [ %.115, %.outer._crit_edge ]
  %225 = icmp slt i32 %.11321.lcssa, %.11117.lcssa
  br i1 %225, label %226, label %235

; <label>:226:                                    ; preds = %224
  %227 = sext i32 %95 to i64
  %228 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %227
  store i32 %98, i32* %228, align 4
  %229 = sext i32 %95 to i64
  %230 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %229
  store i32 %101, i32* %230, align 4
  %231 = add nsw i32 %104, 1
  %232 = sext i32 %95 to i64
  %233 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %232
  store i32 %231, i32* %233, align 4
  %234 = add nsw i32 %95, 1
  br label %.backedge

; <label>:235:                                    ; preds = %224
  %236 = sub nsw i32 %.11117.lcssa, %98
  %237 = sub nsw i32 %.115.lcssa, %.11117.lcssa
  %238 = icmp slt i32 %236, %237
  %239 = sub nsw i32 %.11117.lcssa, %98
  %240 = sub nsw i32 %.115.lcssa, %.11117.lcssa
  %241 = select i1 %238, i32 %239, i32 %240
  %242 = icmp sgt i32 %241, 0
  br i1 %242, label %.lr.ph64, label %._crit_edge65

.lr.ph64:                                         ; preds = %235
  %243 = add i32 %.115.lcssa, 1
  %244 = add i32 %.11117.lcssa, -1
  %245 = sub i32 %244, %.115.lcssa
  %246 = add i32 %98, -1
  %247 = sub i32 %246, %.11117.lcssa
  %248 = icmp sgt i32 %245, %247
  %smax = select i1 %248, i32 %245, i32 %247
  %249 = add i32 %243, %smax
  %250 = sext i32 %249 to i64
  %251 = sext i32 %98 to i64
  %252 = shl i64 %251, 2
  %253 = shl i64 %250, 2
  br label %254

; <label>:254:                                    ; preds = %.lr.ph64, %254
  %lsr.iv = phi i32* [ %0, %.lr.ph64 ], [ %scevgep4, %254 ]
  %.0362 = phi i32 [ %241, %.lr.ph64 ], [ %257, %254 ]
  %lsr.iv5 = bitcast i32* %lsr.iv to i8*
  call void @unroll_loop(i32 198)
  %uglygep = getelementptr i8, i8* %lsr.iv5, i64 %252
  %uglygep6 = bitcast i8* %uglygep to i32*
  %255 = load i32, i32* %uglygep6, align 4
  %uglygep7 = getelementptr i8, i8* %lsr.iv5, i64 %253
  %uglygep78 = bitcast i8* %uglygep7 to i32*
  %256 = load i32, i32* %uglygep78, align 4
  store i32 %256, i32* %uglygep6, align 4
  store i32 %255, i32* %uglygep78, align 4
  %257 = add nsw i32 %.0362, -1
  %scevgep4 = getelementptr i32, i32* %lsr.iv, i64 1
  %258 = icmp sgt i32 %257, 0
  br i1 %258, label %254, label %._crit_edge65.loopexit

._crit_edge65.loopexit:                           ; preds = %254
  br label %._crit_edge65

._crit_edge65:                                    ; preds = %._crit_edge65.loopexit, %235
  %259 = sub nsw i32 %101, %.11321.lcssa
  %260 = sub nsw i32 %.11321.lcssa, %.1919.lcssa
  %261 = icmp slt i32 %259, %260
  %262 = sub nsw i32 %101, %.11321.lcssa
  %263 = sub nsw i32 %.11321.lcssa, %.1919.lcssa
  %264 = select i1 %261, i32 %262, i32 %263
  %265 = icmp sgt i32 %264, 0
  br i1 %265, label %.lr.ph74, label %._crit_edge75

.lr.ph74:                                         ; preds = %._crit_edge65
  %266 = add i32 %101, 2
  %267 = add i32 %.11321.lcssa, -1
  %268 = sub i32 %267, %101
  %269 = add i32 %.1919.lcssa, -1
  %270 = sub i32 %269, %.11321.lcssa
  %271 = icmp sgt i32 %268, %270
  %smax76 = select i1 %271, i32 %268, i32 %270
  %272 = add i32 %266, %smax76
  %273 = sext i32 %272 to i64
  %274 = sext i32 %.115.lcssa to i64
  %275 = shl i64 %274, 2
  %276 = shl i64 %273, 2
  br label %277

; <label>:277:                                    ; preds = %.lr.ph74, %277
  %lsr.iv9 = phi i32* [ %0, %.lr.ph74 ], [ %scevgep10, %277 ]
  %.072 = phi i32 [ %264, %.lr.ph74 ], [ %280, %277 ]
  %lsr.iv911 = bitcast i32* %lsr.iv9 to i8*
  call void @unroll_loop(i32 199)
  %uglygep12 = getelementptr i8, i8* %lsr.iv911, i64 %275
  %uglygep1213 = bitcast i8* %uglygep12 to i32*
  %278 = load i32, i32* %uglygep1213, align 4
  %uglygep14 = getelementptr i8, i8* %lsr.iv911, i64 %276
  %uglygep1415 = bitcast i8* %uglygep14 to i32*
  %279 = load i32, i32* %uglygep1415, align 4
  store i32 %279, i32* %uglygep1213, align 4
  store i32 %278, i32* %uglygep1415, align 4
  %280 = add nsw i32 %.072, -1
  %scevgep10 = getelementptr i32, i32* %lsr.iv9, i64 1
  %281 = icmp sgt i32 %280, 0
  br i1 %281, label %277, label %._crit_edge75.loopexit

._crit_edge75.loopexit:                           ; preds = %277
  br label %._crit_edge75

._crit_edge75:                                    ; preds = %._crit_edge75.loopexit, %._crit_edge65
  %282 = add nsw i32 %98, %.115.lcssa
  %283 = sub nsw i32 %282, %.11117.lcssa
  %284 = sub nsw i32 %283, 1
  %285 = sub nsw i32 %.11321.lcssa, %.1919.lcssa
  %286 = sub nsw i32 %101, %285
  %287 = add nsw i32 %286, 1
  store i32 %98, i32* %22, align 4
  store i32 %284, i32* %23, align 4
  store i32 %287, i32* %25, align 4
  store i32 %101, i32* %26, align 4
  %288 = add nsw i32 %284, 1
  store i32 %288, i32* %28, align 4
  %289 = sub nsw i32 %287, 1
  store i32 %289, i32* %29, align 4
  %290 = add nsw i32 %104, 1
  %291 = load i32, i32* %31, align 4
  %292 = load i32, i32* %32, align 4
  %293 = sub nsw i32 %291, %292
  %294 = load i32, i32* %33, align 4
  %295 = load i32, i32* %34, align 4
  %296 = sub nsw i32 %294, %295
  %297 = icmp slt i32 %293, %296
  br i1 %297, label %298, label %303

; <label>:298:                                    ; preds = %._crit_edge75
  %299 = load i32, i32* %35, align 4
  %300 = load i32, i32* %36, align 4
  store i32 %300, i32* %37, align 4
  store i32 %299, i32* %38, align 4
  %301 = load i32, i32* %39, align 4
  %302 = load i32, i32* %40, align 4
  store i32 %302, i32* %41, align 4
  store i32 %301, i32* %42, align 4
  br label %303

; <label>:303:                                    ; preds = %298, %._crit_edge75
  %304 = phi i32 [ %104, %298 ], [ %104, %._crit_edge75 ]
  %305 = load i32, i32* %47, align 4
  %306 = load i32, i32* %48, align 4
  %307 = sub nsw i32 %305, %306
  %308 = load i32, i32* %49, align 4
  %309 = load i32, i32* %50, align 4
  %310 = sub nsw i32 %308, %309
  %311 = icmp slt i32 %307, %310
  br i1 %311, label %312, label %317

; <label>:312:                                    ; preds = %303
  %313 = load i32, i32* %51, align 4
  %314 = load i32, i32* %52, align 4
  store i32 %314, i32* %53, align 4
  store i32 %313, i32* %54, align 4
  %315 = load i32, i32* %55, align 4
  %316 = load i32, i32* %56, align 4
  store i32 %316, i32* %57, align 4
  store i32 %315, i32* %58, align 4
  br label %317

; <label>:317:                                    ; preds = %312, %303
  %318 = phi i32 [ %304, %312 ], [ %290, %303 ]
  %319 = phi i32 [ %290, %312 ], [ %304, %303 ]
  %320 = load i32, i32* %63, align 4
  %321 = load i32, i32* %64, align 4
  %322 = sub nsw i32 %320, %321
  %323 = load i32, i32* %65, align 4
  %324 = load i32, i32* %66, align 4
  %325 = sub nsw i32 %323, %324
  %326 = icmp slt i32 %322, %325
  br i1 %326, label %327, label %332

; <label>:327:                                    ; preds = %317
  %328 = load i32, i32* %67, align 4
  %329 = load i32, i32* %68, align 4
  store i32 %329, i32* %69, align 4
  store i32 %328, i32* %70, align 4
  %330 = load i32, i32* %71, align 4
  %331 = load i32, i32* %72, align 4
  store i32 %331, i32* %73, align 4
  store i32 %330, i32* %74, align 4
  br label %332

; <label>:332:                                    ; preds = %327, %317
  %333 = phi i32 [ %304, %327 ], [ %319, %317 ]
  %334 = phi i32 [ %319, %327 ], [ %304, %317 ]
  %335 = load i32, i32* %79, align 4
  %336 = sext i32 %95 to i64
  %337 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %336
  store i32 %335, i32* %337, align 4
  %338 = load i32, i32* %80, align 4
  %339 = sext i32 %95 to i64
  %340 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %339
  store i32 %338, i32* %340, align 4
  %341 = sext i32 %95 to i64
  %342 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %341
  store i32 %334, i32* %342, align 4
  %343 = add nsw i32 %95, 1
  %344 = load i32, i32* %82, align 4
  %345 = sext i32 %343 to i64
  %346 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %345
  store i32 %344, i32* %346, align 4
  %347 = load i32, i32* %83, align 4
  %348 = sext i32 %343 to i64
  %349 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %348
  store i32 %347, i32* %349, align 4
  %350 = sext i32 %343 to i64
  %351 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %350
  store i32 %333, i32* %351, align 4
  %352 = add nsw i32 %343, 1
  %353 = load i32, i32* %85, align 4
  %354 = sext i32 %352 to i64
  %355 = getelementptr inbounds [100 x i32], [100 x i32]* %9, i64 0, i64 %354
  store i32 %353, i32* %355, align 4
  %356 = load i32, i32* %86, align 4
  %357 = sext i32 %352 to i64
  %358 = getelementptr inbounds [100 x i32], [100 x i32]* %10, i64 0, i64 %357
  store i32 %356, i32* %358, align 4
  %359 = sext i32 %352 to i64
  %360 = getelementptr inbounds [100 x i32], [100 x i32]* %11, i64 0, i64 %359
  store i32 %318, i32* %360, align 4
  %361 = add nsw i32 %352, 1
  br label %.backedge

.loopexit:                                        ; preds = %.backedge, %108
  %362 = phi i32 [ %111, %.backedge ], [ %89, %108 ]
  %363 = phi i32 [ %112, %.backedge ], [ %90, %108 ]
  %364 = phi i32 [ %113, %.backedge ], [ %91, %108 ]
  store i32 %364, i32* %24, align 1
  store i32 %363, i32* %27, align 1
  store i32 %362, i32* %30, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @mainSimpleSort(i32*, i8*, i16*, i32, i32, i32, i32, i32*) #0 {
  %9 = sub nsw i32 %5, %4
  %10 = add nsw i32 %9, 1
  %11 = icmp slt i32 %10, 2
  br i1 %11, label %.loopexit8, label %.preheader.preheader

.preheader.preheader:                             ; preds = %8
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %lsr.iv12 = phi i64 [ -1, %.preheader.preheader ], [ %lsr.iv.next13, %.preheader ]
  %12 = shl i64 %lsr.iv12, 2
  %13 = inttoptr i64 %12 to i32*
  %uglygep = getelementptr i8, i8* bitcast ([14 x i32]* @incs to i8*), i64 %12
  %uglygep14 = bitcast i8* %uglygep to i32*
  %scevgep = getelementptr i32, i32* %uglygep14, i64 1
  %14 = load i32, i32* %scevgep, align 4
  %15 = icmp slt i32 %14, %10
  %lsr.iv.next13 = add i64 %lsr.iv12, 1
  br i1 %15, label %.preheader, label %16

; <label>:16:                                     ; preds = %.preheader
  %.0.lcssa.wide = phi i64 [ %lsr.iv.next13, %.preheader ]
  %17 = trunc i64 %.0.lcssa.wide to i32
  %18 = add nsw i32 %17, -1
  %19 = icmp sge i32 %18, 0
  br i1 %19, label %.lr.ph20, label %.loopexit8

.lr.ph20:                                         ; preds = %16
  %20 = zext i32 %17 to i64
  %21 = add i64 %20, -1
  %22 = add i32 %4, 1
  %23 = add i32 %4, 2
  br label %24

; <label>:24:                                     ; preds = %.lr.ph20, %._crit_edge
  %indvars.iv = phi i64 [ %21, %.lr.ph20 ], [ %indvars.iv.next, %._crit_edge ]
  %25 = getelementptr inbounds [14 x i32], [14 x i32]* @incs, i64 0, i64 %indvars.iv
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %4, %26
  %28 = icmp sgt i32 %27, %5
  br i1 %28, label %._crit_edge, label %.lr.ph17.preheader

.lr.ph17.preheader:                               ; preds = %24
  %29 = add nsw i32 %4, %26
  %30 = sub nsw i32 %29, 1
  %31 = add nsw i32 %4, %26
  %32 = sub nsw i32 %31, 1
  %33 = add nsw i32 %4, %26
  %34 = sub nsw i32 %33, 1
  %35 = mul i32 %26, -1
  br label %.lr.ph17

; <label>:36:                                     ; preds = %.loopexit
  %lsr.iv.next = add i32 %lsr.iv, 3
  %lsr.iv.next5 = add i32 %lsr.iv4, 3
  %lsr.iv.next9 = add i32 %lsr.iv8, 3
  %37 = icmp sgt i32 %128, %5
  br i1 %37, label %._crit_edge.loopexit, label %.lr.ph17

.lr.ph17:                                         ; preds = %.lr.ph17.preheader, %36
  %lsr.iv8 = phi i32 [ %23, %.lr.ph17.preheader ], [ %lsr.iv.next9, %36 ]
  %lsr.iv4 = phi i32 [ %22, %.lr.ph17.preheader ], [ %lsr.iv.next5, %36 ]
  %lsr.iv = phi i32 [ %4, %.lr.ph17.preheader ], [ %lsr.iv.next, %36 ]
  %.0316 = phi i32 [ %128, %36 ], [ %27, %.lr.ph17.preheader ]
  call void @unroll_loop(i32 200)
  %38 = sext i32 %.0316 to i64
  %39 = getelementptr inbounds i32, i32* %0, i64 %38
  %40 = load i32, i32* %39, align 4
  %41 = sub nsw i32 %.0316, %26
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, %6
  %46 = add i32 %40, %6
  %47 = call zeroext i8 @mainGtU(i32 %45, i32 %46, i8* %1, i16* %2, i32 %3, i32* %7)
  %48 = icmp ne i8 %47, 0
  br i1 %48, label %.lr.ph.preheader, label %.loopexit7

.lr.ph.preheader:                                 ; preds = %.lr.ph17
  br label %.lr.ph

; <label>:49:                                     ; preds = %.lr.ph
  %50 = add i32 %35, %lsr.iv2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %0, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, %6
  %55 = call zeroext i8 @mainGtU(i32 %54, i32 %46, i8* %1, i16* %2, i32 %3, i32* %7)
  %56 = icmp ne i8 %55, 0
  %lsr.iv.next3 = sub i32 %lsr.iv2, %26
  br i1 %56, label %.lr.ph, label %.loopexit7.loopexitsplit

.lr.ph:                                           ; preds = %.lr.ph.preheader, %49
  %lsr.iv2 = phi i32 [ %lsr.iv, %.lr.ph.preheader ], [ %lsr.iv.next3, %49 ]
  %57 = add i32 %26, %lsr.iv2
  call void @unroll_loop(i32 201)
  %58 = sext i32 %lsr.iv2 to i64
  %59 = getelementptr inbounds i32, i32* %0, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = sext i32 %57 to i64
  %62 = getelementptr inbounds i32, i32* %0, i64 %61
  store i32 %60, i32* %62, align 4
  %63 = icmp sle i32 %lsr.iv2, %30
  br i1 %63, label %.lr.ph..loopexit7.loopexit_crit_edge, label %49

.loopexit7.loopexitsplit:                         ; preds = %49
  br label %.loopexit7.loopexit

.lr.ph..loopexit7.loopexit_crit_edge:             ; preds = %.lr.ph
  br label %.loopexit7.loopexit

.loopexit7.loopexit:                              ; preds = %.loopexit7.loopexitsplit, %.lr.ph..loopexit7.loopexit_crit_edge
  %.12.ph = phi i32 [ %lsr.iv2, %.lr.ph..loopexit7.loopexit_crit_edge ], [ %lsr.iv2, %.loopexit7.loopexitsplit ]
  br label %.loopexit7

.loopexit7:                                       ; preds = %.loopexit7.loopexit, %.lr.ph17
  %.12 = phi i32 [ %.0316, %.lr.ph17 ], [ %.12.ph, %.loopexit7.loopexit ]
  %64 = sext i32 %.12 to i64
  %65 = getelementptr inbounds i32, i32* %0, i64 %64
  store i32 %40, i32* %65, align 4
  %66 = add nsw i32 %.0316, 1
  %67 = icmp sgt i32 %66, %5
  br i1 %67, label %._crit_edge.loopexit, label %68

; <label>:68:                                     ; preds = %.loopexit7
  %69 = sext i32 %66 to i64
  %70 = getelementptr inbounds i32, i32* %0, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = sub nsw i32 %66, %26
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i32, i32* %0, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, %6
  %77 = add i32 %71, %6
  %78 = call zeroext i8 @mainGtU(i32 %76, i32 %77, i8* %1, i16* %2, i32 %3, i32* %7)
  %79 = icmp ne i8 %78, 0
  br i1 %79, label %.lr.ph11.preheader, label %.loopexit6

.lr.ph11.preheader:                               ; preds = %68
  br label %.lr.ph11

; <label>:80:                                     ; preds = %.lr.ph11
  %81 = add i32 %35, %lsr.iv6
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %0, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = add i32 %84, %6
  %86 = call zeroext i8 @mainGtU(i32 %85, i32 %77, i8* %1, i16* %2, i32 %3, i32* %7)
  %87 = icmp ne i8 %86, 0
  %lsr.iv.next7 = sub i32 %lsr.iv6, %26
  br i1 %87, label %.lr.ph11, label %.loopexit6.loopexitsplit

.lr.ph11:                                         ; preds = %.lr.ph11.preheader, %80
  %lsr.iv6 = phi i32 [ %lsr.iv4, %.lr.ph11.preheader ], [ %lsr.iv.next7, %80 ]
  %88 = add i32 %26, %lsr.iv6
  call void @unroll_loop(i32 202)
  %89 = sext i32 %lsr.iv6 to i64
  %90 = getelementptr inbounds i32, i32* %0, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %88 to i64
  %93 = getelementptr inbounds i32, i32* %0, i64 %92
  store i32 %91, i32* %93, align 4
  %94 = icmp sle i32 %lsr.iv6, %32
  br i1 %94, label %.lr.ph11..loopexit6.loopexit_crit_edge, label %80

.loopexit6.loopexitsplit:                         ; preds = %80
  br label %.loopexit6.loopexit

.lr.ph11..loopexit6.loopexit_crit_edge:           ; preds = %.lr.ph11
  br label %.loopexit6.loopexit

.loopexit6.loopexit:                              ; preds = %.loopexit6.loopexitsplit, %.lr.ph11..loopexit6.loopexit_crit_edge
  %.3.ph = phi i32 [ %lsr.iv6, %.lr.ph11..loopexit6.loopexit_crit_edge ], [ %lsr.iv6, %.loopexit6.loopexitsplit ]
  br label %.loopexit6

.loopexit6:                                       ; preds = %.loopexit6.loopexit, %68
  %.3 = phi i32 [ %66, %68 ], [ %.3.ph, %.loopexit6.loopexit ]
  %95 = sext i32 %.3 to i64
  %96 = getelementptr inbounds i32, i32* %0, i64 %95
  store i32 %71, i32* %96, align 4
  %97 = add nsw i32 %66, 1
  %98 = icmp sgt i32 %97, %5
  br i1 %98, label %._crit_edge.loopexit, label %99

; <label>:99:                                     ; preds = %.loopexit6
  %100 = sext i32 %97 to i64
  %101 = getelementptr inbounds i32, i32* %0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = sub nsw i32 %97, %26
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, %6
  %108 = add i32 %102, %6
  %109 = call zeroext i8 @mainGtU(i32 %107, i32 %108, i8* %1, i16* %2, i32 %3, i32* %7)
  %110 = icmp ne i8 %109, 0
  br i1 %110, label %.lr.ph14.preheader, label %.loopexit

.lr.ph14.preheader:                               ; preds = %99
  br label %.lr.ph14

; <label>:111:                                    ; preds = %.lr.ph14
  %112 = add i32 %35, %lsr.iv10
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %0, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, %6
  %117 = call zeroext i8 @mainGtU(i32 %116, i32 %108, i8* %1, i16* %2, i32 %3, i32* %7)
  %118 = icmp ne i8 %117, 0
  %lsr.iv.next11 = sub i32 %lsr.iv10, %26
  br i1 %118, label %.lr.ph14, label %.loopexit.loopexitsplit

.lr.ph14:                                         ; preds = %.lr.ph14.preheader, %111
  %lsr.iv10 = phi i32 [ %lsr.iv8, %.lr.ph14.preheader ], [ %lsr.iv.next11, %111 ]
  %119 = add i32 %26, %lsr.iv10
  call void @unroll_loop(i32 203)
  %120 = sext i32 %lsr.iv10 to i64
  %121 = getelementptr inbounds i32, i32* %0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %119 to i64
  %124 = getelementptr inbounds i32, i32* %0, i64 %123
  store i32 %122, i32* %124, align 4
  %125 = icmp sle i32 %lsr.iv10, %34
  br i1 %125, label %.lr.ph14..loopexit.loopexit_crit_edge, label %111

.loopexit.loopexitsplit:                          ; preds = %111
  br label %.loopexit.loopexit

.lr.ph14..loopexit.loopexit_crit_edge:            ; preds = %.lr.ph14
  br label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.loopexit.loopexitsplit, %.lr.ph14..loopexit.loopexit_crit_edge
  %.5.ph = phi i32 [ %lsr.iv10, %.lr.ph14..loopexit.loopexit_crit_edge ], [ %lsr.iv10, %.loopexit.loopexitsplit ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %99
  %.5 = phi i32 [ %97, %99 ], [ %.5.ph, %.loopexit.loopexit ]
  %126 = sext i32 %.5 to i64
  %127 = getelementptr inbounds i32, i32* %0, i64 %126
  store i32 %102, i32* %127, align 4
  %128 = add nsw i32 %97, 1
  %129 = load i32, i32* %7, align 4
  %130 = icmp slt i32 %129, 0
  br i1 %130, label %.loopexit8.loopexit, label %36

._crit_edge.loopexit:                             ; preds = %.loopexit6, %.loopexit7, %36
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %24
  %indvars.iv.next = add i64 %indvars.iv, -1
  %131 = icmp sge i64 %indvars.iv.next, 0
  br i1 %131, label %24, label %.loopexit8.loopexit1

.loopexit8.loopexit:                              ; preds = %.loopexit
  br label %.loopexit8

.loopexit8.loopexit1:                             ; preds = %._crit_edge
  br label %.loopexit8

.loopexit8:                                       ; preds = %.loopexit8.loopexit1, %.loopexit8.loopexit, %16, %8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mmed3(i8 zeroext, i8 zeroext, i8 zeroext) #0 {
  %4 = zext i8 %0 to i32
  %5 = zext i8 %1 to i32
  %6 = icmp sgt i32 %4, %5
  %spec.select = select i1 %6, i8 %0, i8 %1
  %spec.select1 = select i1 %6, i8 %1, i8 %0
  %7 = zext i8 %spec.select to i32
  %8 = zext i8 %2 to i32
  %9 = icmp sgt i32 %7, %8
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %3
  %11 = zext i8 %spec.select1 to i32
  %12 = zext i8 %2 to i32
  %13 = icmp sgt i32 %11, %12
  %spec.select2 = select i1 %13, i8 %spec.select1, i8 %2
  br label %14

; <label>:14:                                     ; preds = %10, %3
  %.2 = phi i8 [ %spec.select2, %10 ], [ %spec.select, %3 ]
  ret i8 %.2
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mainGtU(i32, i32, i8*, i16*, i32, i32*) #0 {
  %7 = zext i32 %0 to i64
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %2, i64 %10
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %9 to i32
  %14 = zext i8 %12 to i32
  %15 = icmp ne i32 %13, %14
  br i1 %15, label %16, label %22

; <label>:16:                                     ; preds = %6
  %17 = zext i8 %9 to i32
  %18 = zext i8 %12 to i32
  %19 = icmp sgt i32 %17, %18
  %20 = zext i1 %19 to i32
  %21 = trunc i32 %20 to i8
  br label %.loopexit

; <label>:22:                                     ; preds = %6
  %23 = add i32 %0, 1
  %24 = add i32 %1, 1
  %25 = zext i32 %23 to i64
  %26 = getelementptr inbounds i8, i8* %2, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i32 %24 to i64
  %29 = getelementptr inbounds i8, i8* %2, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %27 to i32
  %32 = zext i8 %30 to i32
  %33 = icmp ne i32 %31, %32
  br i1 %33, label %34, label %40

; <label>:34:                                     ; preds = %22
  %35 = zext i8 %27 to i32
  %36 = zext i8 %30 to i32
  %37 = icmp sgt i32 %35, %36
  %38 = zext i1 %37 to i32
  %39 = trunc i32 %38 to i8
  br label %.loopexit

; <label>:40:                                     ; preds = %22
  %41 = add i32 %23, 1
  %42 = add i32 %24, 1
  %43 = zext i32 %41 to i64
  %44 = getelementptr inbounds i8, i8* %2, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = zext i32 %42 to i64
  %47 = getelementptr inbounds i8, i8* %2, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %45 to i32
  %50 = zext i8 %48 to i32
  %51 = icmp ne i32 %49, %50
  br i1 %51, label %52, label %58

; <label>:52:                                     ; preds = %40
  %53 = zext i8 %45 to i32
  %54 = zext i8 %48 to i32
  %55 = icmp sgt i32 %53, %54
  %56 = zext i1 %55 to i32
  %57 = trunc i32 %56 to i8
  br label %.loopexit

; <label>:58:                                     ; preds = %40
  %59 = add i32 %41, 1
  %60 = add i32 %42, 1
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds i8, i8* %2, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = zext i32 %60 to i64
  %65 = getelementptr inbounds i8, i8* %2, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %63 to i32
  %68 = zext i8 %66 to i32
  %69 = icmp ne i32 %67, %68
  br i1 %69, label %70, label %76

; <label>:70:                                     ; preds = %58
  %71 = zext i8 %63 to i32
  %72 = zext i8 %66 to i32
  %73 = icmp sgt i32 %71, %72
  %74 = zext i1 %73 to i32
  %75 = trunc i32 %74 to i8
  br label %.loopexit

; <label>:76:                                     ; preds = %58
  %77 = add i32 %59, 1
  %78 = add i32 %60, 1
  %79 = zext i32 %77 to i64
  %80 = getelementptr inbounds i8, i8* %2, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = zext i32 %78 to i64
  %83 = getelementptr inbounds i8, i8* %2, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %81 to i32
  %86 = zext i8 %84 to i32
  %87 = icmp ne i32 %85, %86
  br i1 %87, label %88, label %94

; <label>:88:                                     ; preds = %76
  %89 = zext i8 %81 to i32
  %90 = zext i8 %84 to i32
  %91 = icmp sgt i32 %89, %90
  %92 = zext i1 %91 to i32
  %93 = trunc i32 %92 to i8
  br label %.loopexit

; <label>:94:                                     ; preds = %76
  %95 = add i32 %77, 1
  %96 = add i32 %78, 1
  %97 = zext i32 %95 to i64
  %98 = getelementptr inbounds i8, i8* %2, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i32 %96 to i64
  %101 = getelementptr inbounds i8, i8* %2, i64 %100
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %99 to i32
  %104 = zext i8 %102 to i32
  %105 = icmp ne i32 %103, %104
  br i1 %105, label %106, label %112

; <label>:106:                                    ; preds = %94
  %107 = zext i8 %99 to i32
  %108 = zext i8 %102 to i32
  %109 = icmp sgt i32 %107, %108
  %110 = zext i1 %109 to i32
  %111 = trunc i32 %110 to i8
  br label %.loopexit

; <label>:112:                                    ; preds = %94
  %113 = add i32 %95, 1
  %114 = add i32 %96, 1
  %115 = zext i32 %113 to i64
  %116 = getelementptr inbounds i8, i8* %2, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = zext i32 %114 to i64
  %119 = getelementptr inbounds i8, i8* %2, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %117 to i32
  %122 = zext i8 %120 to i32
  %123 = icmp ne i32 %121, %122
  br i1 %123, label %124, label %130

; <label>:124:                                    ; preds = %112
  %125 = zext i8 %117 to i32
  %126 = zext i8 %120 to i32
  %127 = icmp sgt i32 %125, %126
  %128 = zext i1 %127 to i32
  %129 = trunc i32 %128 to i8
  br label %.loopexit

; <label>:130:                                    ; preds = %112
  %131 = add i32 %113, 1
  %132 = add i32 %114, 1
  %133 = zext i32 %131 to i64
  %134 = getelementptr inbounds i8, i8* %2, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i32 %132 to i64
  %137 = getelementptr inbounds i8, i8* %2, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %135 to i32
  %140 = zext i8 %138 to i32
  %141 = icmp ne i32 %139, %140
  br i1 %141, label %142, label %148

; <label>:142:                                    ; preds = %130
  %143 = zext i8 %135 to i32
  %144 = zext i8 %138 to i32
  %145 = icmp sgt i32 %143, %144
  %146 = zext i1 %145 to i32
  %147 = trunc i32 %146 to i8
  br label %.loopexit

; <label>:148:                                    ; preds = %130
  %149 = add i32 %131, 1
  %150 = add i32 %132, 1
  %151 = zext i32 %149 to i64
  %152 = getelementptr inbounds i8, i8* %2, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = zext i32 %150 to i64
  %155 = getelementptr inbounds i8, i8* %2, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %153 to i32
  %158 = zext i8 %156 to i32
  %159 = icmp ne i32 %157, %158
  br i1 %159, label %160, label %166

; <label>:160:                                    ; preds = %148
  %161 = zext i8 %153 to i32
  %162 = zext i8 %156 to i32
  %163 = icmp sgt i32 %161, %162
  %164 = zext i1 %163 to i32
  %165 = trunc i32 %164 to i8
  br label %.loopexit

; <label>:166:                                    ; preds = %148
  %167 = add i32 %149, 1
  %168 = add i32 %150, 1
  %169 = zext i32 %167 to i64
  %170 = getelementptr inbounds i8, i8* %2, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i32 %168 to i64
  %173 = getelementptr inbounds i8, i8* %2, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %171 to i32
  %176 = zext i8 %174 to i32
  %177 = icmp ne i32 %175, %176
  br i1 %177, label %178, label %184

; <label>:178:                                    ; preds = %166
  %179 = zext i8 %171 to i32
  %180 = zext i8 %174 to i32
  %181 = icmp sgt i32 %179, %180
  %182 = zext i1 %181 to i32
  %183 = trunc i32 %182 to i8
  br label %.loopexit

; <label>:184:                                    ; preds = %166
  %185 = add i32 %167, 1
  %186 = add i32 %168, 1
  %187 = zext i32 %185 to i64
  %188 = getelementptr inbounds i8, i8* %2, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i32 %186 to i64
  %191 = getelementptr inbounds i8, i8* %2, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %189 to i32
  %194 = zext i8 %192 to i32
  %195 = icmp ne i32 %193, %194
  br i1 %195, label %196, label %202

; <label>:196:                                    ; preds = %184
  %197 = zext i8 %189 to i32
  %198 = zext i8 %192 to i32
  %199 = icmp sgt i32 %197, %198
  %200 = zext i1 %199 to i32
  %201 = trunc i32 %200 to i8
  br label %.loopexit

; <label>:202:                                    ; preds = %184
  %203 = add i32 %185, 1
  %204 = add i32 %186, 1
  %205 = zext i32 %203 to i64
  %206 = getelementptr inbounds i8, i8* %2, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = zext i32 %204 to i64
  %209 = getelementptr inbounds i8, i8* %2, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %207 to i32
  %212 = zext i8 %210 to i32
  %213 = icmp ne i32 %211, %212
  br i1 %213, label %214, label %220

; <label>:214:                                    ; preds = %202
  %215 = zext i8 %207 to i32
  %216 = zext i8 %210 to i32
  %217 = icmp sgt i32 %215, %216
  %218 = zext i1 %217 to i32
  %219 = trunc i32 %218 to i8
  br label %.loopexit

; <label>:220:                                    ; preds = %202
  %221 = add i32 %203, 1
  %222 = add i32 %204, 1
  %223 = add i32 %4, 8
  br label %224

; <label>:224:                                    ; preds = %494, %220
  %.04 = phi i32 [ %223, %220 ], [ %501, %494 ]
  %.02 = phi i32 [ %222, %220 ], [ %.13, %494 ]
  %.01 = phi i32 [ %221, %220 ], [ %spec.select, %494 ]
  call void @unroll_loop(i32 204)
  %225 = zext i32 %.01 to i64
  %226 = getelementptr inbounds i8, i8* %2, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i32 %.02 to i64
  %229 = getelementptr inbounds i8, i8* %2, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %227 to i32
  %232 = zext i8 %230 to i32
  %233 = icmp ne i32 %231, %232
  br i1 %233, label %234, label %240

; <label>:234:                                    ; preds = %224
  %.lcssa21 = phi i8 [ %227, %224 ]
  %.lcssa = phi i8 [ %230, %224 ]
  %235 = zext i8 %.lcssa21 to i32
  %236 = zext i8 %.lcssa to i32
  %237 = icmp sgt i32 %235, %236
  %238 = zext i1 %237 to i32
  %239 = trunc i32 %238 to i8
  br label %.loopexit

; <label>:240:                                    ; preds = %224
  %241 = zext i32 %.01 to i64
  %242 = getelementptr inbounds i16, i16* %3, i64 %241
  %243 = load i16, i16* %242, align 2
  %244 = zext i32 %.02 to i64
  %245 = getelementptr inbounds i16, i16* %3, i64 %244
  %246 = load i16, i16* %245, align 2
  %247 = zext i16 %243 to i32
  %248 = zext i16 %246 to i32
  %249 = icmp ne i32 %247, %248
  br i1 %249, label %250, label %256

; <label>:250:                                    ; preds = %240
  %.lcssa54 = phi i16 [ %243, %240 ]
  %.lcssa38 = phi i16 [ %246, %240 ]
  %251 = zext i16 %.lcssa54 to i32
  %252 = zext i16 %.lcssa38 to i32
  %253 = icmp sgt i32 %251, %252
  %254 = zext i1 %253 to i32
  %255 = trunc i32 %254 to i8
  br label %.loopexit

; <label>:256:                                    ; preds = %240
  %257 = add i32 %.01, 1
  %258 = add i32 %.02, 1
  %259 = zext i32 %257 to i64
  %260 = getelementptr inbounds i8, i8* %2, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = zext i32 %258 to i64
  %263 = getelementptr inbounds i8, i8* %2, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %261 to i32
  %266 = zext i8 %264 to i32
  %267 = icmp ne i32 %265, %266
  br i1 %267, label %268, label %274

; <label>:268:                                    ; preds = %256
  %.lcssa85 = phi i8 [ %261, %256 ]
  %.lcssa70 = phi i8 [ %264, %256 ]
  %269 = zext i8 %.lcssa85 to i32
  %270 = zext i8 %.lcssa70 to i32
  %271 = icmp sgt i32 %269, %270
  %272 = zext i1 %271 to i32
  %273 = trunc i32 %272 to i8
  br label %.loopexit

; <label>:274:                                    ; preds = %256
  %275 = zext i32 %257 to i64
  %276 = getelementptr inbounds i16, i16* %3, i64 %275
  %277 = load i16, i16* %276, align 2
  %278 = zext i32 %258 to i64
  %279 = getelementptr inbounds i16, i16* %3, i64 %278
  %280 = load i16, i16* %279, align 2
  %281 = zext i16 %277 to i32
  %282 = zext i16 %280 to i32
  %283 = icmp ne i32 %281, %282
  br i1 %283, label %284, label %290

; <label>:284:                                    ; preds = %274
  %.lcssa114 = phi i16 [ %277, %274 ]
  %.lcssa100 = phi i16 [ %280, %274 ]
  %285 = zext i16 %.lcssa114 to i32
  %286 = zext i16 %.lcssa100 to i32
  %287 = icmp sgt i32 %285, %286
  %288 = zext i1 %287 to i32
  %289 = trunc i32 %288 to i8
  br label %.loopexit

; <label>:290:                                    ; preds = %274
  %291 = add i32 %257, 1
  %292 = add i32 %258, 1
  %293 = zext i32 %291 to i64
  %294 = getelementptr inbounds i8, i8* %2, i64 %293
  %295 = load i8, i8* %294, align 1
  %296 = zext i32 %292 to i64
  %297 = getelementptr inbounds i8, i8* %2, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %295 to i32
  %300 = zext i8 %298 to i32
  %301 = icmp ne i32 %299, %300
  br i1 %301, label %302, label %308

; <label>:302:                                    ; preds = %290
  %.lcssa141 = phi i8 [ %295, %290 ]
  %.lcssa128 = phi i8 [ %298, %290 ]
  %303 = zext i8 %.lcssa141 to i32
  %304 = zext i8 %.lcssa128 to i32
  %305 = icmp sgt i32 %303, %304
  %306 = zext i1 %305 to i32
  %307 = trunc i32 %306 to i8
  br label %.loopexit

; <label>:308:                                    ; preds = %290
  %309 = zext i32 %291 to i64
  %310 = getelementptr inbounds i16, i16* %3, i64 %309
  %311 = load i16, i16* %310, align 2
  %312 = zext i32 %292 to i64
  %313 = getelementptr inbounds i16, i16* %3, i64 %312
  %314 = load i16, i16* %313, align 2
  %315 = zext i16 %311 to i32
  %316 = zext i16 %314 to i32
  %317 = icmp ne i32 %315, %316
  br i1 %317, label %318, label %324

; <label>:318:                                    ; preds = %308
  %.lcssa166 = phi i16 [ %311, %308 ]
  %.lcssa154 = phi i16 [ %314, %308 ]
  %319 = zext i16 %.lcssa166 to i32
  %320 = zext i16 %.lcssa154 to i32
  %321 = icmp sgt i32 %319, %320
  %322 = zext i1 %321 to i32
  %323 = trunc i32 %322 to i8
  br label %.loopexit

; <label>:324:                                    ; preds = %308
  %325 = add i32 %291, 1
  %326 = add i32 %292, 1
  %327 = zext i32 %325 to i64
  %328 = getelementptr inbounds i8, i8* %2, i64 %327
  %329 = load i8, i8* %328, align 1
  %330 = zext i32 %326 to i64
  %331 = getelementptr inbounds i8, i8* %2, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %329 to i32
  %334 = zext i8 %332 to i32
  %335 = icmp ne i32 %333, %334
  br i1 %335, label %336, label %342

; <label>:336:                                    ; preds = %324
  %.lcssa189 = phi i8 [ %329, %324 ]
  %.lcssa178 = phi i8 [ %332, %324 ]
  %337 = zext i8 %.lcssa189 to i32
  %338 = zext i8 %.lcssa178 to i32
  %339 = icmp sgt i32 %337, %338
  %340 = zext i1 %339 to i32
  %341 = trunc i32 %340 to i8
  br label %.loopexit

; <label>:342:                                    ; preds = %324
  %343 = zext i32 %325 to i64
  %344 = getelementptr inbounds i16, i16* %3, i64 %343
  %345 = load i16, i16* %344, align 2
  %346 = zext i32 %326 to i64
  %347 = getelementptr inbounds i16, i16* %3, i64 %346
  %348 = load i16, i16* %347, align 2
  %349 = zext i16 %345 to i32
  %350 = zext i16 %348 to i32
  %351 = icmp ne i32 %349, %350
  br i1 %351, label %352, label %358

; <label>:352:                                    ; preds = %342
  %.lcssa210 = phi i16 [ %345, %342 ]
  %.lcssa200 = phi i16 [ %348, %342 ]
  %353 = zext i16 %.lcssa210 to i32
  %354 = zext i16 %.lcssa200 to i32
  %355 = icmp sgt i32 %353, %354
  %356 = zext i1 %355 to i32
  %357 = trunc i32 %356 to i8
  br label %.loopexit

; <label>:358:                                    ; preds = %342
  %359 = add i32 %325, 1
  %360 = add i32 %326, 1
  %361 = zext i32 %359 to i64
  %362 = getelementptr inbounds i8, i8* %2, i64 %361
  %363 = load i8, i8* %362, align 1
  %364 = zext i32 %360 to i64
  %365 = getelementptr inbounds i8, i8* %2, i64 %364
  %366 = load i8, i8* %365, align 1
  %367 = zext i8 %363 to i32
  %368 = zext i8 %366 to i32
  %369 = icmp ne i32 %367, %368
  br i1 %369, label %370, label %376

; <label>:370:                                    ; preds = %358
  %.lcssa229 = phi i8 [ %363, %358 ]
  %.lcssa220 = phi i8 [ %366, %358 ]
  %371 = zext i8 %.lcssa229 to i32
  %372 = zext i8 %.lcssa220 to i32
  %373 = icmp sgt i32 %371, %372
  %374 = zext i1 %373 to i32
  %375 = trunc i32 %374 to i8
  br label %.loopexit

; <label>:376:                                    ; preds = %358
  %377 = zext i32 %359 to i64
  %378 = getelementptr inbounds i16, i16* %3, i64 %377
  %379 = load i16, i16* %378, align 2
  %380 = zext i32 %360 to i64
  %381 = getelementptr inbounds i16, i16* %3, i64 %380
  %382 = load i16, i16* %381, align 2
  %383 = zext i16 %379 to i32
  %384 = zext i16 %382 to i32
  %385 = icmp ne i32 %383, %384
  br i1 %385, label %386, label %392

; <label>:386:                                    ; preds = %376
  %.lcssa246 = phi i16 [ %379, %376 ]
  %.lcssa238 = phi i16 [ %382, %376 ]
  %387 = zext i16 %.lcssa246 to i32
  %388 = zext i16 %.lcssa238 to i32
  %389 = icmp sgt i32 %387, %388
  %390 = zext i1 %389 to i32
  %391 = trunc i32 %390 to i8
  br label %.loopexit

; <label>:392:                                    ; preds = %376
  %393 = add i32 %359, 1
  %394 = add i32 %360, 1
  %395 = zext i32 %393 to i64
  %396 = getelementptr inbounds i8, i8* %2, i64 %395
  %397 = load i8, i8* %396, align 1
  %398 = zext i32 %394 to i64
  %399 = getelementptr inbounds i8, i8* %2, i64 %398
  %400 = load i8, i8* %399, align 1
  %401 = zext i8 %397 to i32
  %402 = zext i8 %400 to i32
  %403 = icmp ne i32 %401, %402
  br i1 %403, label %404, label %410

; <label>:404:                                    ; preds = %392
  %.lcssa261 = phi i8 [ %397, %392 ]
  %.lcssa254 = phi i8 [ %400, %392 ]
  %405 = zext i8 %.lcssa261 to i32
  %406 = zext i8 %.lcssa254 to i32
  %407 = icmp sgt i32 %405, %406
  %408 = zext i1 %407 to i32
  %409 = trunc i32 %408 to i8
  br label %.loopexit

; <label>:410:                                    ; preds = %392
  %411 = zext i32 %393 to i64
  %412 = getelementptr inbounds i16, i16* %3, i64 %411
  %413 = load i16, i16* %412, align 2
  %414 = zext i32 %394 to i64
  %415 = getelementptr inbounds i16, i16* %3, i64 %414
  %416 = load i16, i16* %415, align 2
  %417 = zext i16 %413 to i32
  %418 = zext i16 %416 to i32
  %419 = icmp ne i32 %417, %418
  br i1 %419, label %420, label %426

; <label>:420:                                    ; preds = %410
  %.lcssa274 = phi i16 [ %413, %410 ]
  %.lcssa268 = phi i16 [ %416, %410 ]
  %421 = zext i16 %.lcssa274 to i32
  %422 = zext i16 %.lcssa268 to i32
  %423 = icmp sgt i32 %421, %422
  %424 = zext i1 %423 to i32
  %425 = trunc i32 %424 to i8
  br label %.loopexit

; <label>:426:                                    ; preds = %410
  %427 = add i32 %393, 1
  %428 = add i32 %394, 1
  %429 = zext i32 %427 to i64
  %430 = getelementptr inbounds i8, i8* %2, i64 %429
  %431 = load i8, i8* %430, align 1
  %432 = zext i32 %428 to i64
  %433 = getelementptr inbounds i8, i8* %2, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %431 to i32
  %436 = zext i8 %434 to i32
  %437 = icmp ne i32 %435, %436
  br i1 %437, label %438, label %444

; <label>:438:                                    ; preds = %426
  %.lcssa285 = phi i8 [ %431, %426 ]
  %.lcssa280 = phi i8 [ %434, %426 ]
  %439 = zext i8 %.lcssa285 to i32
  %440 = zext i8 %.lcssa280 to i32
  %441 = icmp sgt i32 %439, %440
  %442 = zext i1 %441 to i32
  %443 = trunc i32 %442 to i8
  br label %.loopexit

; <label>:444:                                    ; preds = %426
  %445 = zext i32 %427 to i64
  %446 = getelementptr inbounds i16, i16* %3, i64 %445
  %447 = load i16, i16* %446, align 2
  %448 = zext i32 %428 to i64
  %449 = getelementptr inbounds i16, i16* %3, i64 %448
  %450 = load i16, i16* %449, align 2
  %451 = zext i16 %447 to i32
  %452 = zext i16 %450 to i32
  %453 = icmp ne i32 %451, %452
  br i1 %453, label %454, label %460

; <label>:454:                                    ; preds = %444
  %.lcssa294 = phi i16 [ %447, %444 ]
  %.lcssa290 = phi i16 [ %450, %444 ]
  %455 = zext i16 %.lcssa294 to i32
  %456 = zext i16 %.lcssa290 to i32
  %457 = icmp sgt i32 %455, %456
  %458 = zext i1 %457 to i32
  %459 = trunc i32 %458 to i8
  br label %.loopexit

; <label>:460:                                    ; preds = %444
  %461 = add i32 %427, 1
  %462 = add i32 %428, 1
  %463 = zext i32 %461 to i64
  %464 = getelementptr inbounds i8, i8* %2, i64 %463
  %465 = load i8, i8* %464, align 1
  %466 = zext i32 %462 to i64
  %467 = getelementptr inbounds i8, i8* %2, i64 %466
  %468 = load i8, i8* %467, align 1
  %469 = zext i8 %465 to i32
  %470 = zext i8 %468 to i32
  %471 = icmp ne i32 %469, %470
  br i1 %471, label %472, label %478

; <label>:472:                                    ; preds = %460
  %.lcssa301 = phi i8 [ %465, %460 ]
  %.lcssa298 = phi i8 [ %468, %460 ]
  %473 = zext i8 %.lcssa301 to i32
  %474 = zext i8 %.lcssa298 to i32
  %475 = icmp sgt i32 %473, %474
  %476 = zext i1 %475 to i32
  %477 = trunc i32 %476 to i8
  br label %.loopexit

; <label>:478:                                    ; preds = %460
  %479 = zext i32 %461 to i64
  %480 = getelementptr inbounds i16, i16* %3, i64 %479
  %481 = load i16, i16* %480, align 2
  %482 = zext i32 %462 to i64
  %483 = getelementptr inbounds i16, i16* %3, i64 %482
  %484 = load i16, i16* %483, align 2
  %485 = zext i16 %481 to i32
  %486 = zext i16 %484 to i32
  %487 = icmp ne i32 %485, %486
  br i1 %487, label %488, label %494

; <label>:488:                                    ; preds = %478
  %.lcssa306 = phi i16 [ %481, %478 ]
  %.lcssa304 = phi i16 [ %484, %478 ]
  %489 = zext i16 %.lcssa306 to i32
  %490 = zext i16 %.lcssa304 to i32
  %491 = icmp sgt i32 %489, %490
  %492 = zext i1 %491 to i32
  %493 = trunc i32 %492 to i8
  br label %.loopexit

; <label>:494:                                    ; preds = %478
  %495 = add i32 %461, 1
  %496 = add i32 %462, 1
  %497 = icmp uge i32 %495, %4
  %498 = sub i32 %495, %4
  %spec.select = select i1 %497, i32 %498, i32 %495
  %499 = icmp uge i32 %496, %4
  %500 = sub i32 %496, %4
  %.13 = select i1 %499, i32 %500, i32 %496
  %501 = sub nsw i32 %.04, 8
  %502 = load i32, i32* %5, align 4
  %503 = add nsw i32 %502, -1
  store i32 %503, i32* %5, align 4
  %504 = icmp sge i32 %501, 0
  br i1 %504, label %224, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %494
  %.0.ph = phi i8 [ 0, %494 ]
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %488, %472, %454, %438, %420, %404, %386, %370, %352, %336, %318, %302, %284, %268, %250, %234, %214, %196, %178, %160, %142, %124, %106, %88, %70, %52, %34, %16
  %.0 = phi i8 [ %21, %16 ], [ %39, %34 ], [ %57, %52 ], [ %75, %70 ], [ %93, %88 ], [ %111, %106 ], [ %129, %124 ], [ %147, %142 ], [ %165, %160 ], [ %183, %178 ], [ %201, %196 ], [ %219, %214 ], [ %239, %234 ], [ %255, %250 ], [ %273, %268 ], [ %289, %284 ], [ %307, %302 ], [ %323, %318 ], [ %341, %336 ], [ %357, %352 ], [ %375, %370 ], [ %391, %386 ], [ %409, %404 ], [ %425, %420 ], [ %443, %438 ], [ %459, %454 ], [ %477, %472 ], [ %493, %488 ], [ %.0.ph, %.loopexit.loopexit ]
  ret i8 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackQSort3(i32*, i32*, i32, i32) #0 {
  %5 = alloca [100 x i32], align 16
  %6 = alloca [100 x i32], align 16
  %7 = sext i32 0 to i64
  %8 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %7
  store i32 %2, i32* %8, align 4
  %9 = sext i32 0 to i64
  %10 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %9
  store i32 %3, i32* %10, align 4
  %11 = add nsw i32 0, 1
  br label %.lr.ph

.lr.ph:                                           ; preds = %4, %.outer39.backedge
  %.011.ph95 = phi i32 [ %11, %4 ], [ %.011.ph.be, %.outer39.backedge ]
  %.017.ph94 = phi i32 [ 0, %4 ], [ %30, %.outer39.backedge ]
  call void @unroll_loop(i32 152)
  %12 = sext i32 %.011.ph95 to i64
  %13 = add i64 %12, -1
  br label %14

; <label>:14:                                     ; preds = %.lr.ph, %23
  %lsr.iv = phi i64 [ %13, %.lr.ph ], [ %lsr.iv.next, %23 ]
  %15 = add i64 %lsr.iv, 1
  call void @unroll_loop(i32 205)
  %16 = icmp slt i64 %15, 99
  br i1 %16, label %18, label %17

; <label>:17:                                     ; preds = %14
  call void @BZ2_bz__AssertH__fail(i32 1004)
  br label %18

; <label>:18:                                     ; preds = %17, %14
  %scevgep2 = getelementptr [100 x i32], [100 x i32]* %5, i64 0, i64 %lsr.iv
  %19 = load i32, i32* %scevgep2, align 4
  %scevgep = getelementptr [100 x i32], [100 x i32]* %6, i64 0, i64 %lsr.iv
  %20 = load i32, i32* %scevgep, align 4
  %21 = sub nsw i32 %20, %19
  %22 = icmp slt i32 %21, 10
  br i1 %22, label %23, label %26

; <label>:23:                                     ; preds = %18
  call void @fallbackSimpleSort(i32* %0, i32* %1, i32 %19, i32 %20)
  %lsr.iv.next = add i64 %lsr.iv, -1
  %24 = add i64 %lsr.iv.next, 1
  %25 = icmp sgt i64 %24, 0
  br i1 %25, label %14, label %.outer39._crit_edge.loopexit

; <label>:26:                                     ; preds = %18
  %.lcssa42.wide = phi i64 [ %lsr.iv, %18 ]
  %.lcssa41 = phi i32 [ %19, %18 ]
  %.lcssa = phi i32 [ %20, %18 ]
  %27 = trunc i64 %.lcssa42.wide to i32
  %28 = mul nuw i32 %.017.ph94, 7621
  %29 = add i32 %28, 1
  %30 = urem i32 %29, 32768
  %31 = urem i32 %30, 3
  switch i32 %31, label %48 [
    i32 0, label %32
    i32 1, label %39
  ]

; <label>:32:                                     ; preds = %26
  %33 = sext i32 %.lcssa41 to i64
  %34 = getelementptr inbounds i32, i32* %0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %1, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %55

; <label>:39:                                     ; preds = %26
  %40 = add nsw i32 %.lcssa41, %.lcssa
  %41 = ashr i32 %40, 1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %0, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %1, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %55

; <label>:48:                                     ; preds = %26
  %49 = sext i32 %.lcssa to i64
  %50 = getelementptr inbounds i32, i32* %0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %1, i64 %52
  %54 = load i32, i32* %53, align 4
  br label %55

; <label>:55:                                     ; preds = %39, %48, %32
  %.116 = phi i32 [ %38, %32 ], [ %47, %39 ], [ %54, %48 ]
  br label %56

; <label>:56:                                     ; preds = %55, %122
  %.09 = phi i32 [ %.lcssa, %55 ], [ %.11025, %122 ]
  %.07 = phi i32 [ %.lcssa41, %55 ], [ %.1821, %122 ]
  %.05 = phi i32 [ %.lcssa, %55 ], [ %134, %122 ]
  %.04 = phi i32 [ %.lcssa41, %55 ], [ %133, %122 ]
  call void @unroll_loop(i32 206)
  %57 = sext i32 %.05 to i64
  %58 = icmp sgt i32 %.04, %.05
  br i1 %58, label %.outer32._crit_edge, label %.lr.ph45.lr.ph

.lr.ph45.lr.ph:                                   ; preds = %56
  %59 = sext i32 %.07 to i64
  br label %.lr.ph45

.lr.ph45:                                         ; preds = %.lr.ph45.lr.ph, %.outer32
  %indvars.iv56 = phi i64 [ %59, %.lr.ph45.lr.ph ], [ %indvars.iv.next57, %.outer32 ]
  %.1.ph53 = phi i32 [ %.04, %.lr.ph45.lr.ph ], [ %80, %.outer32 ]
  call void @unroll_loop(i32 193)
  %60 = sext i32 %.1.ph53 to i64
  br label %64

.outer32..outer32._crit_edge_crit_edge:           ; preds = %.outer32
  %split54.wide = phi i64 [ %indvars.iv.next57, %.outer32 ]
  %split55 = phi i32 [ %80, %.outer32 ]
  %61 = trunc i64 %split54.wide to i32
  br label %.outer32._crit_edge

._crit_edge47:                                    ; preds = %87
  %split48.wide = phi i64 [ %indvars.iv56, %87 ]
  %split49.wide = phi i64 [ %indvars.iv.next51, %87 ]
  %62 = trunc i64 %split48.wide to i32
  %63 = trunc i64 %split49.wide to i32
  br label %.outer32._crit_edge

; <label>:64:                                     ; preds = %.lr.ph45, %87
  %indvars.iv50 = phi i64 [ %60, %.lr.ph45 ], [ %indvars.iv.next51, %87 ]
  call void @unroll_loop(i32 207)
  %scevgep3 = getelementptr i32, i32* %0, i64 %indvars.iv50
  %65 = load i32, i32* %scevgep3, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %1, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = sub nsw i32 %68, %.116
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %.outer32, label %82

.outer32:                                         ; preds = %64
  %.1.lcssa34.wide = phi i64 [ %indvars.iv50, %64 ]
  %71 = trunc i64 %.1.lcssa34.wide to i32
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %0, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv56
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %71 to i64
  %78 = getelementptr inbounds i32, i32* %0, i64 %77
  store i32 %76, i32* %78, align 4
  %79 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv56
  store i32 %74, i32* %79, align 4
  %indvars.iv.next57 = add i64 %indvars.iv56, 1
  %80 = add nsw i32 %71, 1
  %81 = icmp sgt i32 %80, %.05
  br i1 %81, label %.outer32..outer32._crit_edge_crit_edge, label %.lr.ph45

; <label>:82:                                     ; preds = %64
  %83 = icmp sgt i32 %69, 0
  br i1 %83, label %84, label %87

; <label>:84:                                     ; preds = %82
  %.18.lcssa20.wide = phi i64 [ %indvars.iv56, %82 ]
  %.1.lcssa18.wide = phi i64 [ %indvars.iv50, %82 ]
  %85 = trunc i64 %.18.lcssa20.wide to i32
  %86 = trunc i64 %.1.lcssa18.wide to i32
  br label %.outer32._crit_edge

; <label>:87:                                     ; preds = %82
  %indvars.iv.next51 = add nsw i64 %indvars.iv50, 1
  %88 = icmp sgt i64 %indvars.iv.next51, %57
  br i1 %88, label %._crit_edge47, label %64

.outer32._crit_edge:                              ; preds = %._crit_edge47, %.outer32..outer32._crit_edge_crit_edge, %56, %84
  %.1821 = phi i32 [ %85, %84 ], [ %62, %._crit_edge47 ], [ %61, %.outer32..outer32._crit_edge_crit_edge ], [ %.07, %56 ]
  %.119 = phi i32 [ %86, %84 ], [ %63, %._crit_edge47 ], [ %split55, %.outer32..outer32._crit_edge_crit_edge ], [ %.04, %56 ]
  %89 = sext i32 %.119 to i64
  %90 = icmp sgt i32 %.119, %.05
  br i1 %90, label %.outer._crit_edge, label %.lr.ph59.lr.ph

.lr.ph59.lr.ph:                                   ; preds = %.outer32._crit_edge
  %91 = sext i32 %.09 to i64
  br label %.lr.ph59

.lr.ph59:                                         ; preds = %.lr.ph59.lr.ph, %.outer
  %indvars.iv71 = phi i64 [ %91, %.lr.ph59.lr.ph ], [ %indvars.iv.next72, %.outer ]
  %.16.ph68 = phi i32 [ %.05, %.lr.ph59.lr.ph ], [ %112, %.outer ]
  call void @unroll_loop(i32 155)
  %92 = sext i32 %.16.ph68 to i64
  br label %96

.outer..outer._crit_edge_crit_edge:               ; preds = %.outer
  %split69.wide = phi i64 [ %indvars.iv.next72, %.outer ]
  %split70 = phi i32 [ %112, %.outer ]
  %93 = trunc i64 %split69.wide to i32
  br label %.outer._crit_edge

._crit_edge62:                                    ; preds = %119
  %split63.wide = phi i64 [ %indvars.iv71, %119 ]
  %split64.wide = phi i64 [ %indvars.iv.next66, %119 ]
  %94 = trunc i64 %split63.wide to i32
  %95 = trunc i64 %split64.wide to i32
  br label %.outer._crit_edge

; <label>:96:                                     ; preds = %.lr.ph59, %119
  %indvars.iv65 = phi i64 [ %92, %.lr.ph59 ], [ %indvars.iv.next66, %119 ]
  call void @unroll_loop(i32 208)
  %scevgep4 = getelementptr i32, i32* %0, i64 %indvars.iv65
  %97 = load i32, i32* %scevgep4, align 4
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sub nsw i32 %100, %.116
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %.outer, label %114

.outer:                                           ; preds = %96
  %.16.lcssa27.wide = phi i64 [ %indvars.iv65, %96 ]
  %103 = trunc i64 %.16.lcssa27.wide to i32
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i32, i32* %0, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv71
  %108 = load i32, i32* %107, align 4
  %109 = sext i32 %103 to i64
  %110 = getelementptr inbounds i32, i32* %0, i64 %109
  store i32 %108, i32* %110, align 4
  %111 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv71
  store i32 %106, i32* %111, align 4
  %indvars.iv.next72 = add i64 %indvars.iv71, -1
  %112 = add nsw i32 %103, -1
  %113 = icmp sgt i32 %.119, %112
  br i1 %113, label %.outer..outer._crit_edge_crit_edge, label %.lr.ph59

; <label>:114:                                    ; preds = %96
  %115 = icmp slt i32 %101, 0
  br i1 %115, label %116, label %119

; <label>:116:                                    ; preds = %114
  %.110.lcssa24.wide = phi i64 [ %indvars.iv71, %114 ]
  %.16.lcssa22.wide = phi i64 [ %indvars.iv65, %114 ]
  %117 = trunc i64 %.110.lcssa24.wide to i32
  %118 = trunc i64 %.16.lcssa22.wide to i32
  br label %.outer._crit_edge

; <label>:119:                                    ; preds = %114
  %indvars.iv.next66 = add nsw i64 %indvars.iv65, -1
  %120 = icmp sgt i64 %89, %indvars.iv.next66
  br i1 %120, label %._crit_edge62, label %96

.outer._crit_edge:                                ; preds = %._crit_edge62, %.outer..outer._crit_edge_crit_edge, %.outer32._crit_edge, %116
  %.11025 = phi i32 [ %117, %116 ], [ %94, %._crit_edge62 ], [ %93, %.outer..outer._crit_edge_crit_edge ], [ %.09, %.outer32._crit_edge ]
  %.1623 = phi i32 [ %118, %116 ], [ %95, %._crit_edge62 ], [ %split70, %.outer..outer._crit_edge_crit_edge ], [ %.05, %.outer32._crit_edge ]
  %121 = icmp sgt i32 %.119, %.1623
  br i1 %121, label %135, label %122

; <label>:122:                                    ; preds = %.outer._crit_edge
  %123 = sext i32 %.119 to i64
  %124 = getelementptr inbounds i32, i32* %0, i64 %123
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %.1623 to i64
  %127 = getelementptr inbounds i32, i32* %0, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %.119 to i64
  %130 = getelementptr inbounds i32, i32* %0, i64 %129
  store i32 %128, i32* %130, align 4
  %131 = sext i32 %.1623 to i64
  %132 = getelementptr inbounds i32, i32* %0, i64 %131
  store i32 %125, i32* %132, align 4
  %133 = add nsw i32 %.119, 1
  %134 = add nsw i32 %.1623, -1
  br label %56

; <label>:135:                                    ; preds = %.outer._crit_edge
  %.11025.lcssa = phi i32 [ %.11025, %.outer._crit_edge ]
  %.1623.lcssa = phi i32 [ %.1623, %.outer._crit_edge ]
  %.1821.lcssa = phi i32 [ %.1821, %.outer._crit_edge ]
  %.119.lcssa = phi i32 [ %.119, %.outer._crit_edge ]
  %136 = icmp slt i32 %.11025.lcssa, %.1821.lcssa
  br i1 %136, label %.outer39.backedge, label %138

.outer39.backedge:                                ; preds = %196, %205, %135
  %.011.ph.be = phi i32 [ %27, %135 ], [ %204, %196 ], [ %213, %205 ]
  %137 = icmp sgt i32 %.011.ph.be, 0
  br i1 %137, label %.lr.ph, label %.outer39._crit_edge.loopexit1

; <label>:138:                                    ; preds = %135
  %139 = sub nsw i32 %.1821.lcssa, %.lcssa41
  %140 = sub nsw i32 %.119.lcssa, %.1821.lcssa
  %141 = icmp slt i32 %139, %140
  %142 = sub nsw i32 %.1821.lcssa, %.lcssa41
  %143 = sub nsw i32 %.119.lcssa, %.1821.lcssa
  %144 = select i1 %141, i32 %142, i32 %143
  %145 = icmp sgt i32 %144, 0
  br i1 %145, label %.lr.ph77, label %._crit_edge78

.lr.ph77:                                         ; preds = %138
  %146 = add i32 %.119.lcssa, 1
  %147 = add i32 %.lcssa41, -1
  %148 = sub i32 %147, %.1821.lcssa
  %149 = add i32 %.1821.lcssa, -1
  %150 = sub i32 %149, %.119.lcssa
  %151 = icmp sgt i32 %148, %150
  %smax = select i1 %151, i32 %148, i32 %150
  %152 = add i32 %146, %smax
  %153 = sext i32 %152 to i64
  %154 = sext i32 %.lcssa41 to i64
  %155 = shl i64 %154, 2
  %156 = shl i64 %153, 2
  br label %157

; <label>:157:                                    ; preds = %.lr.ph77, %157
  %lsr.iv5 = phi i32* [ %0, %.lr.ph77 ], [ %scevgep6, %157 ]
  %.0375 = phi i32 [ %144, %.lr.ph77 ], [ %160, %157 ]
  %lsr.iv57 = bitcast i32* %lsr.iv5 to i8*
  call void @unroll_loop(i32 209)
  %uglygep = getelementptr i8, i8* %lsr.iv57, i64 %155
  %uglygep8 = bitcast i8* %uglygep to i32*
  %158 = load i32, i32* %uglygep8, align 4
  %uglygep9 = getelementptr i8, i8* %lsr.iv57, i64 %156
  %uglygep910 = bitcast i8* %uglygep9 to i32*
  %159 = load i32, i32* %uglygep910, align 4
  store i32 %159, i32* %uglygep8, align 4
  store i32 %158, i32* %uglygep910, align 4
  %160 = add nsw i32 %.0375, -1
  %scevgep6 = getelementptr i32, i32* %lsr.iv5, i64 1
  %161 = icmp sgt i32 %160, 0
  br i1 %161, label %157, label %._crit_edge78.loopexit

._crit_edge78.loopexit:                           ; preds = %157
  br label %._crit_edge78

._crit_edge78:                                    ; preds = %._crit_edge78.loopexit, %138
  %162 = sub nsw i32 %.lcssa, %.11025.lcssa
  %163 = sub nsw i32 %.11025.lcssa, %.1623.lcssa
  %164 = icmp slt i32 %162, %163
  %165 = sub nsw i32 %.lcssa, %.11025.lcssa
  %166 = sub nsw i32 %.11025.lcssa, %.1623.lcssa
  %167 = select i1 %164, i32 %165, i32 %166
  %168 = icmp sgt i32 %167, 0
  br i1 %168, label %.lr.ph87, label %._crit_edge88

.lr.ph87:                                         ; preds = %._crit_edge78
  %169 = add i32 %.lcssa, 2
  %170 = add i32 %.11025.lcssa, -1
  %171 = sub i32 %170, %.lcssa
  %172 = add i32 %.1623.lcssa, -1
  %173 = sub i32 %172, %.11025.lcssa
  %174 = icmp sgt i32 %171, %173
  %smax89 = select i1 %174, i32 %171, i32 %173
  %175 = add i32 %169, %smax89
  %176 = sext i32 %175 to i64
  %177 = sext i32 %.119.lcssa to i64
  %178 = shl i64 %177, 2
  %179 = shl i64 %176, 2
  br label %180

; <label>:180:                                    ; preds = %.lr.ph87, %180
  %lsr.iv11 = phi i32* [ %0, %.lr.ph87 ], [ %scevgep12, %180 ]
  %.085 = phi i32 [ %167, %.lr.ph87 ], [ %183, %180 ]
  %lsr.iv1113 = bitcast i32* %lsr.iv11 to i8*
  call void @unroll_loop(i32 210)
  %uglygep14 = getelementptr i8, i8* %lsr.iv1113, i64 %178
  %uglygep1415 = bitcast i8* %uglygep14 to i32*
  %181 = load i32, i32* %uglygep1415, align 4
  %uglygep16 = getelementptr i8, i8* %lsr.iv1113, i64 %179
  %uglygep1617 = bitcast i8* %uglygep16 to i32*
  %182 = load i32, i32* %uglygep1617, align 4
  store i32 %182, i32* %uglygep1415, align 4
  store i32 %181, i32* %uglygep1617, align 4
  %183 = add nsw i32 %.085, -1
  %scevgep12 = getelementptr i32, i32* %lsr.iv11, i64 1
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %180, label %._crit_edge88.loopexit

._crit_edge88.loopexit:                           ; preds = %180
  br label %._crit_edge88

._crit_edge88:                                    ; preds = %._crit_edge88.loopexit, %._crit_edge78
  %185 = add nsw i32 %.lcssa41, %.119.lcssa
  %186 = sub nsw i32 %185, %.1821.lcssa
  %187 = sub nsw i32 %186, 1
  %188 = sub nsw i32 %.11025.lcssa, %.1623.lcssa
  %189 = sub nsw i32 %.lcssa, %188
  %190 = add nsw i32 %189, 1
  %191 = sub nsw i32 %187, %.lcssa41
  %192 = sub nsw i32 %.lcssa, %190
  %193 = icmp sgt i32 %191, %192
  %194 = sext i32 %27 to i64
  %195 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %194
  br i1 %193, label %196, label %205

; <label>:196:                                    ; preds = %._crit_edge88
  store i32 %.lcssa41, i32* %195, align 4
  %197 = sext i32 %27 to i64
  %198 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %197
  store i32 %187, i32* %198, align 4
  %199 = add nsw i32 %27, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %200
  store i32 %190, i32* %201, align 4
  %202 = sext i32 %199 to i64
  %203 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %202
  store i32 %.lcssa, i32* %203, align 4
  %204 = add nsw i32 %199, 1
  br label %.outer39.backedge

; <label>:205:                                    ; preds = %._crit_edge88
  store i32 %190, i32* %195, align 4
  %206 = sext i32 %27 to i64
  %207 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %206
  store i32 %.lcssa, i32* %207, align 4
  %208 = add nsw i32 %27, 1
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds [100 x i32], [100 x i32]* %5, i64 0, i64 %209
  store i32 %.lcssa41, i32* %210, align 4
  %211 = sext i32 %208 to i64
  %212 = getelementptr inbounds [100 x i32], [100 x i32]* %6, i64 0, i64 %211
  store i32 %187, i32* %212, align 4
  %213 = add nsw i32 %208, 1
  br label %.outer39.backedge

.outer39._crit_edge.loopexit:                     ; preds = %23
  br label %.outer39._crit_edge

.outer39._crit_edge.loopexit1:                    ; preds = %.outer39.backedge
  br label %.outer39._crit_edge

.outer39._crit_edge:                              ; preds = %.outer39._crit_edge.loopexit1, %.outer39._crit_edge.loopexit
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @fallbackSimpleSort(i32*, i32*, i32, i32) #0 {
  %5 = icmp eq i32 %2, %3
  br i1 %5, label %.loopexit, label %6

; <label>:6:                                      ; preds = %4
  %7 = sub nsw i32 %3, %2
  %8 = icmp sgt i32 %7, 3
  br i1 %8, label %9, label %._crit_edge

; <label>:9:                                      ; preds = %6
  %10 = sub nsw i32 %3, 4
  %11 = sext i32 %3 to i64
  %12 = sext i32 %3 to i64
  %13 = icmp sge i32 %10, %2
  br i1 %13, label %.lr.ph14, label %._crit_edge

.lr.ph14:                                         ; preds = %9
  %14 = add i32 %3, -4
  %15 = sext i32 %14 to i64
  %16 = sext i32 %2 to i64
  br label %17

; <label>:17:                                     ; preds = %.lr.ph14, %.critedge
  %indvars.iv15 = phi i64 [ %15, %.lr.ph14 ], [ %indvars.iv.next16, %.critedge ]
  %18 = phi i64 [ %12, %.lr.ph14 ], [ %37, %.critedge ]
  %lsr8 = trunc i64 %18 to i32
  call void @unroll_loop(i32 211)
  %19 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv15
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i32, i32* %1, i64 %21
  %23 = load i32, i32* %22, align 4
  call void @unroll_loop(i32 212)
  %24 = icmp sle i64 %18, %11
  br i1 %24, label %.lr.ph9.preheader, label %.critedge

.lr.ph9.preheader:                                ; preds = %17
  br label %.lr.ph9

.lr.ph9:                                          ; preds = %.lr.ph9.preheader, %30
  %indvars.iv107 = phi i64 [ %indvars.iv.next11, %30 ], [ %18, %.lr.ph9.preheader ]
  %scevgep4 = getelementptr i32, i32* %0, i64 %indvars.iv107
  %25 = load i32, i32* %scevgep4, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %1, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %23, %28
  br i1 %29, label %30, label %.lr.ph9..critedge.loopexit_crit_edge

; <label>:30:                                     ; preds = %.lr.ph9
  %scevgep5 = getelementptr i32, i32* %0, i64 %indvars.iv107
  %31 = load i32, i32* %scevgep5, align 4
  %scevgep6 = getelementptr i32, i32* %0, i64 %indvars.iv107
  %scevgep7 = getelementptr i32, i32* %scevgep6, i64 -4
  store i32 %31, i32* %scevgep7, align 4
  %indvars.iv.next11 = add nsw i64 %indvars.iv107, 4
  call void @unroll_loop(i32 212)
  %32 = icmp sle i64 %indvars.iv.next11, %11
  br i1 %32, label %.lr.ph9, label %.critedge.loopexitsplit

.critedge.loopexitsplit:                          ; preds = %30
  br label %.critedge.loopexit

.lr.ph9..critedge.loopexit_crit_edge:             ; preds = %.lr.ph9
  br label %.critedge.loopexit

.critedge.loopexit:                               ; preds = %.critedge.loopexitsplit, %.lr.ph9..critedge.loopexit_crit_edge
  %.0.lcssa.wide.ph = phi i64 [ %indvars.iv107, %.lr.ph9..critedge.loopexit_crit_edge ], [ %indvars.iv.next11, %.critedge.loopexitsplit ]
  br label %.critedge

.critedge:                                        ; preds = %.critedge.loopexit, %17
  %.0.lcssa.wide = phi i64 [ %18, %17 ], [ %.0.lcssa.wide.ph, %.critedge.loopexit ]
  %33 = trunc i64 %.0.lcssa.wide to i32
  %34 = sub nsw i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %0, i64 %35
  store i32 %20, i32* %36, align 4
  %indvars.iv.next16 = add nsw i64 %indvars.iv15, -1
  %indvars.iv.next9 = add i32 %lsr8, -1
  %37 = sext i32 %indvars.iv.next9 to i64
  %38 = icmp sge i64 %indvars.iv.next16, %16
  br i1 %38, label %17, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.critedge
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %9, %6
  %39 = sub nsw i32 %3, 1
  %40 = sext i32 %3 to i64
  %41 = sext i32 %3 to i64
  %42 = icmp sge i32 %39, %2
  br i1 %42, label %.lr.ph, label %.loopexit

.lr.ph:                                           ; preds = %._crit_edge
  %43 = add i32 %3, -1
  %44 = sext i32 %43 to i64
  %45 = sext i32 %2 to i64
  br label %46

; <label>:46:                                     ; preds = %.lr.ph, %.critedge1
  %indvars.iv = phi i64 [ %44, %.lr.ph ], [ %indvars.iv.next7, %.critedge1 ]
  %47 = phi i64 [ %41, %.lr.ph ], [ %66, %.critedge1 ]
  %lsr = trunc i64 %47 to i32
  call void @unroll_loop(i32 213)
  %48 = getelementptr inbounds i32, i32* %0, i64 %indvars.iv
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i32, i32* %1, i64 %50
  %52 = load i32, i32* %51, align 4
  call void @unroll_loop(i32 214)
  %53 = icmp sle i64 %47, %40
  br i1 %53, label %.lr.ph4.preheader, label %.critedge1

.lr.ph4.preheader:                                ; preds = %46
  br label %.lr.ph4

.lr.ph4:                                          ; preds = %.lr.ph4.preheader, %59
  %indvars.iv32 = phi i64 [ %indvars.iv.next4, %59 ], [ %47, %.lr.ph4.preheader ]
  %scevgep = getelementptr i32, i32* %0, i64 %indvars.iv32
  %54 = load i32, i32* %scevgep, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %1, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %52, %57
  br i1 %58, label %59, label %.lr.ph4..critedge1.loopexit_crit_edge

; <label>:59:                                     ; preds = %.lr.ph4
  %scevgep1 = getelementptr i32, i32* %0, i64 %indvars.iv32
  %60 = load i32, i32* %scevgep1, align 4
  %scevgep2 = getelementptr i32, i32* %0, i64 %indvars.iv32
  %scevgep3 = getelementptr i32, i32* %scevgep2, i64 -1
  store i32 %60, i32* %scevgep3, align 4
  %indvars.iv.next4 = add nsw i64 %indvars.iv32, 1
  call void @unroll_loop(i32 214)
  %61 = icmp sle i64 %indvars.iv.next4, %40
  br i1 %61, label %.lr.ph4, label %.critedge1.loopexitsplit

.critedge1.loopexitsplit:                         ; preds = %59
  br label %.critedge1.loopexit

.lr.ph4..critedge1.loopexit_crit_edge:            ; preds = %.lr.ph4
  br label %.critedge1.loopexit

.critedge1.loopexit:                              ; preds = %.critedge1.loopexitsplit, %.lr.ph4..critedge1.loopexit_crit_edge
  %.1.lcssa.wide.ph = phi i64 [ %indvars.iv32, %.lr.ph4..critedge1.loopexit_crit_edge ], [ %indvars.iv.next4, %.critedge1.loopexitsplit ]
  br label %.critedge1

.critedge1:                                       ; preds = %.critedge1.loopexit, %46
  %.1.lcssa.wide = phi i64 [ %47, %46 ], [ %.1.lcssa.wide.ph, %.critedge1.loopexit ]
  %62 = trunc i64 %.1.lcssa.wide to i32
  %63 = sub nsw i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %0, i64 %64
  store i32 %49, i32* %65, align 4
  %indvars.iv.next7 = add nsw i64 %indvars.iv, -1
  %indvars.iv.next = add i32 %lsr, -1
  %66 = sext i32 %indvars.iv.next to i64
  %67 = icmp sge i64 %indvars.iv.next7, %45
  br i1 %67, label %46, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %.critedge1
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %._crit_edge, %4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbMakeCodeLengths(i8*, i32*, i32, i32) #0 {
  %5 = alloca [260 x i32], align 16
  %6 = alloca [516 x i32], align 16, !track !69
  %7 = alloca [516 x i32], align 16
  %8 = icmp slt i32 0, %2
  br i1 %8, label %.lr.ph78.preheader, label %._crit_edge79

.lr.ph78.preheader:                               ; preds = %4
  %9 = zext i32 %2 to i64
  %scevgep4 = getelementptr [516 x i32], [516 x i32]* %6, i64 0, i64 1
  br label %.lr.ph78

.lr.ph78:                                         ; preds = %.lr.ph78.preheader, %14
  %indvars.iv80 = phi i64 [ %indvars.iv.next81, %14 ], [ 0, %.lr.ph78.preheader ]
  call void @unroll_loop(i32 215)
  %scevgep2 = getelementptr i32, i32* %1, i64 %indvars.iv80
  %10 = load i32, i32* %scevgep2, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

; <label>:12:                                     ; preds = %.lr.ph78
  %scevgep3 = getelementptr i32, i32* %1, i64 %indvars.iv80
  %13 = load i32, i32* %scevgep3, align 4
  br label %14

; <label>:14:                                     ; preds = %.lr.ph78, %12
  %15 = phi i32 [ %13, %12 ], [ 1, %.lr.ph78 ]
  %16 = shl i32 %15, 8
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %scevgep5 = getelementptr i32, i32* %scevgep4, i64 %indvars.iv80
  store i32 %16, i32* %scevgep5, align 4
  %exitcond5 = icmp ne i64 %9, %indvars.iv.next81
  br i1 %exitcond5, label %.lr.ph78, label %._crit_edge79.loopexit

._crit_edge79.loopexit:                           ; preds = %14
  br label %._crit_edge79

._crit_edge79:                                    ; preds = %._crit_edge79.loopexit, %4
  %17 = add i32 %2, -1
  %18 = zext i32 %17 to i64
  %19 = add i64 %18, 1
  %20 = sext i32 %2 to i64
  %21 = add i64 %20, 1
  %22 = add i32 %2, 1
  %23 = zext i32 %2 to i64
  %24 = zext i32 %22 to i64
  %25 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 0
  %26 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 0
  %27 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 0
  %28 = icmp sle i32 1, %2
  %29 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  %30 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  %31 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  %32 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  %33 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  %34 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 1
  %35 = icmp sle i32 1, %2
  %36 = trunc i64 %19 to i32
  %37 = icmp sle i32 1, %2
  br label %38

; <label>:38:                                     ; preds = %._crit_edge79, %._crit_edge71
  call void @unroll_loop(i32 216)
  store i32 0, i32* %25, align 16
  store i32 0, i32* %26, align 16
  store i32 -2, i32* %27, align 16
  br i1 %28, label %.lr.ph22.preheader, label %77

.lr.ph22.preheader:                               ; preds = %38
  br label %.lr.ph22

.lr.ph22:                                         ; preds = %.lr.ph22.preheader, %._crit_edge
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %._crit_edge ], [ 1, %.lr.ph22.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %._crit_edge ], [ 0, %.lr.ph22.preheader ]
  call void @unroll_loop(i32 217)
  %39 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %indvars.iv25
  store i32 -1, i32* %39, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %40 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next
  %41 = trunc i64 %indvars.iv25 to i32
  store i32 %41, i32* %40, align 4
  %42 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = trunc i64 %indvars.iv.next to i32
  %48 = ashr i32 %47, 1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %46, %54
  %56 = trunc i64 %indvars.iv.next to i32
  br i1 %55, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %.lr.ph22
  %57 = trunc i64 %indvars.iv.next to i32
  br label %58

; <label>:58:                                     ; preds = %.lr.ph, %58
  %.0718 = phi i32 [ %57, %.lr.ph ], [ %65, %58 ]
  call void @unroll_loop(i32 218)
  %59 = ashr i32 %.0718, 1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %.0718 to i64
  %64 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %63
  store i32 %62, i32* %64, align 4
  %65 = ashr i32 %.0718, 1
  %66 = load i32, i32* %45, align 4
  %67 = ashr i32 %65, 1
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %66, %73
  br i1 %74, label %58, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %58
  %.07.lcssa.ph = phi i32 [ %65, %58 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.lr.ph22
  %.07.lcssa = phi i32 [ %56, %.lr.ph22 ], [ %.07.lcssa.ph, %._crit_edge.loopexit ]
  %75 = sext i32 %.07.lcssa to i64
  %76 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %75
  store i32 %43, i32* %76, align 4
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %exitcond3 = icmp ne i64 %indvars.iv.next, %23
  br i1 %exitcond3, label %.lr.ph22, label %._crit_edge23

._crit_edge23:                                    ; preds = %._crit_edge
  br label %77

; <label>:77:                                     ; preds = %._crit_edge23, %38
  %.05.lcssa = phi i32 [ %36, %._crit_edge23 ], [ 0, %38 ]
  %78 = icmp slt i32 %.05.lcssa, 260
  br i1 %78, label %80, label %79

; <label>:79:                                     ; preds = %77
  call void @BZ2_bz__AssertH__fail(i32 2001)
  br label %80

; <label>:80:                                     ; preds = %79, %77
  %81 = icmp sgt i32 %.05.lcssa, 1
  br i1 %81, label %.lr.ph45, label %259

.lr.ph45:                                         ; preds = %80
  %82 = sext i32 %.05.lcssa to i64
  br label %83

; <label>:83:                                     ; preds = %.lr.ph45, %._crit_edge40
  %indvars.iv50 = phi i64 [ %82, %.lr.ph45 ], [ %indvars.iv.next51, %._crit_edge40 ]
  %indvars.iv48 = phi i64 [ %20, %.lr.ph45 ], [ %indvars.iv.next49, %._crit_edge40 ]
  call void @unroll_loop(i32 219)
  %84 = load i32, i32* %29, align 4
  %85 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv50
  %86 = load i32, i32* %85, align 4
  store i32 %86, i32* %30, align 4
  %indvars.iv.next51 = add nsw i64 %indvars.iv50, -1
  %87 = load i32, i32* %31, align 4
  %88 = icmp sgt i64 2, %indvars.iv.next51
  br i1 %88, label %._crit_edge30, label %.lr.ph29.preheader

.lr.ph29.preheader:                               ; preds = %83
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %89
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %.lr.ph29.preheader, %119
  %91 = phi i32 [ %125, %119 ], [ 2, %.lr.ph29.preheader ]
  %.0627 = phi i32 [ %.03, %119 ], [ 1, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 220)
  %92 = sext i32 %91 to i64
  %93 = icmp slt i64 %92, %indvars.iv.next51
  br i1 %93, label %94, label %110

; <label>:94:                                     ; preds = %.lr.ph29
  %95 = add nuw nsw i32 %91, 1
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = sext i32 %91 to i64
  %103 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = icmp slt i32 %101, %107
  %109 = add nuw nsw i32 %91, 1
  %spec.select = select i1 %108, i32 %109, i32 %91
  br label %110

; <label>:110:                                    ; preds = %94, %.lr.ph29
  %.03 = phi i32 [ %91, %.lr.ph29 ], [ %spec.select, %94 ]
  %111 = load i32, i32* %90, align 4
  %112 = sext i32 %.03 to i64
  %113 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = icmp slt i32 %111, %117
  br i1 %118, label %._crit_edge30.loopexit, label %119

; <label>:119:                                    ; preds = %110
  %120 = sext i32 %.03 to i64
  %121 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = sext i32 %.0627 to i64
  %124 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %123
  store i32 %122, i32* %124, align 4
  %125 = shl i32 %.03, 1
  %126 = sext i32 %125 to i64
  %127 = icmp sgt i64 %126, %indvars.iv.next51
  br i1 %127, label %._crit_edge30.loopexit, label %.lr.ph29

._crit_edge30.loopexit:                           ; preds = %119, %110
  %.0615.ph = phi i32 [ %.03, %119 ], [ %.0627, %110 ]
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %83
  %.0615 = phi i32 [ 1, %83 ], [ %.0615.ph, %._crit_edge30.loopexit ]
  %128 = sext i32 %.0615 to i64
  %129 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %128
  store i32 %87, i32* %129, align 4
  %130 = load i32, i32* %32, align 4
  %131 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next51
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %33, align 4
  %133 = add nsw i64 %indvars.iv.next51, -1
  %134 = load i32, i32* %34, align 4
  %135 = icmp sgt i64 2, %133
  br i1 %135, label %._crit_edge35, label %.lr.ph34.preheader

.lr.ph34.preheader:                               ; preds = %._crit_edge30
  %136 = sext i32 %134 to i64
  %137 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %136
  br label %.lr.ph34

.lr.ph34:                                         ; preds = %.lr.ph34.preheader, %166
  %138 = phi i32 [ %172, %166 ], [ 2, %.lr.ph34.preheader ]
  %.0232 = phi i32 [ %.01, %166 ], [ 1, %.lr.ph34.preheader ]
  call void @unroll_loop(i32 221)
  %139 = sext i32 %138 to i64
  %140 = icmp slt i64 %139, %133
  br i1 %140, label %141, label %157

; <label>:141:                                    ; preds = %.lr.ph34
  %142 = add nuw nsw i32 %138, 1
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %138 to i64
  %150 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %149
  %151 = load i32, i32* %150, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = icmp slt i32 %148, %154
  %156 = add nuw nsw i32 %138, 1
  %spec.select1 = select i1 %155, i32 %156, i32 %138
  br label %157

; <label>:157:                                    ; preds = %141, %.lr.ph34
  %.01 = phi i32 [ %138, %.lr.ph34 ], [ %spec.select1, %141 ]
  %158 = load i32, i32* %137, align 4
  %159 = sext i32 %.01 to i64
  %160 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = icmp slt i32 %158, %164
  br i1 %165, label %._crit_edge35.loopexit, label %166

; <label>:166:                                    ; preds = %157
  %167 = sext i32 %.01 to i64
  %168 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %.0232 to i64
  %171 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %170
  store i32 %169, i32* %171, align 4
  %172 = shl i32 %.01, 1
  %173 = sext i32 %172 to i64
  %174 = icmp sgt i64 %173, %133
  br i1 %174, label %._crit_edge35.loopexit, label %.lr.ph34

._crit_edge35.loopexit:                           ; preds = %166, %157
  %.0217.ph = phi i32 [ %.01, %166 ], [ %.0232, %157 ]
  br label %._crit_edge35

._crit_edge35:                                    ; preds = %._crit_edge35.loopexit, %._crit_edge30
  %.0217 = phi i32 [ 1, %._crit_edge30 ], [ %.0217.ph, %._crit_edge35.loopexit ]
  %175 = sext i32 %.0217 to i64
  %176 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %175
  store i32 %134, i32* %176, align 4
  %indvars.iv.next49 = add nsw i64 %indvars.iv48, 1
  %177 = sext i32 %130 to i64
  %178 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %177
  %179 = trunc i64 %indvars.iv.next49 to i32
  store i32 %179, i32* %178, align 4
  %180 = sext i32 %84 to i64
  %181 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %180
  %182 = trunc i64 %indvars.iv.next49 to i32
  store i32 %182, i32* %181, align 4
  %183 = sext i32 %84 to i64
  %184 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %183
  %185 = load i32, i32* %184, align 4
  %186 = and i32 %185, -256
  %187 = sext i32 %130 to i64
  %188 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %187
  %189 = load i32, i32* %188, align 4
  %190 = and i32 %189, -256
  %191 = add i32 %186, %190
  %192 = sext i32 %84 to i64
  %193 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = and i32 %194, 255
  %196 = sext i32 %130 to i64
  %197 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = and i32 %198, 255
  %200 = icmp sgt i32 %195, %199
  br i1 %200, label %201, label %206

; <label>:201:                                    ; preds = %._crit_edge35
  %202 = sext i32 %84 to i64
  %203 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %202
  %204 = load i32, i32* %203, align 4
  %205 = and i32 %204, 255
  br label %211

; <label>:206:                                    ; preds = %._crit_edge35
  %207 = sext i32 %130 to i64
  %208 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = and i32 %209, 255
  br label %211

; <label>:211:                                    ; preds = %206, %201
  %212 = phi i32 [ %205, %201 ], [ %210, %206 ]
  %213 = add nsw i32 1, %212
  %214 = or i32 %191, %213
  %215 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %indvars.iv.next49
  store i32 %214, i32* %215, align 4
  %216 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %indvars.iv.next49
  store i32 -1, i32* %216, align 4
  %217 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next51
  %218 = trunc i64 %indvars.iv.next49 to i32
  store i32 %218, i32* %217, align 4
  %219 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %indvars.iv.next51
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = trunc i64 %indvars.iv.next51 to i32
  %225 = ashr i32 %224, 1
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %226
  %228 = load i32, i32* %227, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = icmp slt i32 %223, %231
  %233 = trunc i64 %indvars.iv.next51 to i32
  br i1 %232, label %.lr.ph39, label %._crit_edge40

.lr.ph39:                                         ; preds = %211
  %234 = trunc i64 %indvars.iv.next51 to i32
  br label %235

; <label>:235:                                    ; preds = %.lr.ph39, %235
  %.037 = phi i32 [ %234, %.lr.ph39 ], [ %242, %235 ]
  call void @unroll_loop(i32 222)
  %236 = ashr i32 %.037, 1
  %237 = sext i32 %236 to i64
  %238 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %237
  %239 = load i32, i32* %238, align 4
  %240 = sext i32 %.037 to i64
  %241 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %240
  store i32 %239, i32* %241, align 4
  %242 = ashr i32 %.037, 1
  %243 = load i32, i32* %222, align 4
  %244 = ashr i32 %242, 1
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds [516 x i32], [516 x i32]* %6, i64 0, i64 %248
  %250 = load i32, i32* %249, align 4
  %251 = icmp slt i32 %243, %250
  br i1 %251, label %235, label %._crit_edge40.loopexit

._crit_edge40.loopexit:                           ; preds = %235
  %.0.lcssa.ph = phi i32 [ %242, %235 ]
  br label %._crit_edge40

._crit_edge40:                                    ; preds = %._crit_edge40.loopexit, %211
  %.0.lcssa = phi i32 [ %233, %211 ], [ %.0.lcssa.ph, %._crit_edge40.loopexit ]
  %252 = sext i32 %.0.lcssa to i64
  %253 = getelementptr inbounds [260 x i32], [260 x i32]* %5, i64 0, i64 %252
  store i32 %220, i32* %253, align 4
  %254 = icmp sgt i64 %indvars.iv.next51, 1
  br i1 %254, label %83, label %._crit_edge46

._crit_edge46:                                    ; preds = %._crit_edge40
  %255 = add i32 %.05.lcssa, -2
  %256 = zext i32 %255 to i64
  %257 = add i64 %21, %256
  %258 = trunc i64 %257 to i32
  br label %259

; <label>:259:                                    ; preds = %._crit_edge46, %80
  %.04.lcssa = phi i32 [ %258, %._crit_edge46 ], [ %2, %80 ]
  %260 = icmp slt i32 %.04.lcssa, 516
  br i1 %260, label %262, label %261

; <label>:261:                                    ; preds = %259
  call void @BZ2_bz__AssertH__fail(i32 2002)
  br label %262

; <label>:262:                                    ; preds = %261, %259
  br i1 %35, label %.lr.ph61.preheader, label %._crit_edge62

.lr.ph61.preheader:                               ; preds = %262
  br label %.lr.ph61

.lr.ph61:                                         ; preds = %.lr.ph61.preheader, %._crit_edge56
  %indvars.iv64 = phi i64 [ %indvars.iv.next65, %._crit_edge56 ], [ 1, %.lr.ph61.preheader ]
  %.01258 = phi i8 [ %spec.select2, %._crit_edge56 ], [ 0, %.lr.ph61.preheader ]
  call void @unroll_loop(i32 223)
  %263 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %indvars.iv64
  %264 = load i32, i32* %263, align 4
  %265 = icmp sge i32 %264, 0
  br i1 %265, label %.lr.ph55, label %._crit_edge56

.lr.ph55:                                         ; preds = %.lr.ph61
  %266 = trunc i64 %indvars.iv64 to i32
  br label %267

; <label>:267:                                    ; preds = %.lr.ph55, %267
  %.01053 = phi i32 [ 0, %.lr.ph55 ], [ %271, %267 ]
  %.01152 = phi i32 [ %266, %.lr.ph55 ], [ %270, %267 ]
  %268 = sext i32 %.01152 to i64
  %269 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %268
  %270 = load i32, i32* %269, align 4
  %271 = add nuw nsw i32 %.01053, 1
  %272 = sext i32 %270 to i64
  %273 = getelementptr inbounds [516 x i32], [516 x i32]* %7, i64 0, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = icmp sge i32 %274, 0
  br i1 %275, label %267, label %._crit_edge56.loopexit

._crit_edge56.loopexit:                           ; preds = %267
  %.010.lcssa.ph = phi i32 [ %271, %267 ]
  br label %._crit_edge56

._crit_edge56:                                    ; preds = %._crit_edge56.loopexit, %.lr.ph61
  %.010.lcssa = phi i32 [ 0, %.lr.ph61 ], [ %.010.lcssa.ph, %._crit_edge56.loopexit ]
  %276 = trunc i32 %.010.lcssa to i8
  %277 = sub nuw nsw i64 %indvars.iv64, 1
  %278 = getelementptr inbounds i8, i8* %0, i64 %277
  store i8 %276, i8* %278, align 1
  %279 = icmp sgt i32 %.010.lcssa, %3
  %spec.select2 = select i1 %279, i8 1, i8 %.01258
  %indvars.iv.next65 = add nuw nsw i64 %indvars.iv64, 1
  %exitcond = icmp ne i64 %indvars.iv.next65, %24
  br i1 %exitcond, label %.lr.ph61, label %._crit_edge62.loopexit

._crit_edge62.loopexit:                           ; preds = %._crit_edge56
  %.012.lcssa.ph = phi i8 [ %spec.select2, %._crit_edge56 ]
  br label %._crit_edge62

._crit_edge62:                                    ; preds = %._crit_edge62.loopexit, %262
  %.012.lcssa = phi i8 [ 0, %262 ], [ %.012.lcssa.ph, %._crit_edge62.loopexit ]
  %280 = icmp ne i8 %.012.lcssa, 0
  br i1 %280, label %281, label %287

; <label>:281:                                    ; preds = %._crit_edge62
  br i1 %37, label %.lr.ph70.preheader, label %._crit_edge71

.lr.ph70.preheader:                               ; preds = %281
  br label %.lr.ph70

.lr.ph70:                                         ; preds = %.lr.ph70.preheader, %.lr.ph70
  %indvars.iv72 = phi i64 [ %indvars.iv.next73, %.lr.ph70 ], [ 1, %.lr.ph70.preheader ]
  call void @unroll_loop(i32 224)
  %scevgep = getelementptr [516 x i32], [516 x i32]* %6, i64 0, i64 %indvars.iv72
  %282 = load i32, i32* %scevgep, align 4
  %283 = ashr i32 %282, 8
  %284 = sdiv i32 %283, 2
  %285 = add nsw i32 1, %284
  %286 = shl i32 %285, 8
  %scevgep1 = getelementptr [516 x i32], [516 x i32]* %6, i64 0, i64 %indvars.iv72
  store i32 %286, i32* %scevgep1, align 4
  %indvars.iv.next73 = add nuw nsw i64 %indvars.iv72, 1
  %exitcond4 = icmp ne i64 %24, %indvars.iv.next73
  br i1 %exitcond4, label %.lr.ph70, label %._crit_edge71.loopexit

._crit_edge71.loopexit:                           ; preds = %.lr.ph70
  br label %._crit_edge71

._crit_edge71:                                    ; preds = %._crit_edge71.loopexit, %281
  br label %38

; <label>:287:                                    ; preds = %._crit_edge62
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbAssignCodes(i32*, i8*, i32, i32, i32) #0 {
  %6 = icmp sle i32 %2, %3
  br i1 %6, label %.lr.ph8.preheader, label %._crit_edge9

.lr.ph8.preheader:                                ; preds = %5
  %7 = zext i32 %4 to i64
  %8 = icmp slt i32 0, %4
  br label %.lr.ph8

.lr.ph8:                                          ; preds = %.lr.ph8.preheader, %._crit_edge
  %.016 = phi i32 [ %15, %._crit_edge ], [ 0, %.lr.ph8.preheader ]
  %.025 = phi i32 [ %16, %._crit_edge ], [ %2, %.lr.ph8.preheader ]
  br i1 %8, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %.lr.ph8
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader, %14
  %indvars.iv = phi i64 [ %indvars.iv.next, %14 ], [ 0, %.lr.ph.preheader ]
  %.13 = phi i32 [ %.2, %14 ], [ %.016, %.lr.ph.preheader ]
  call void @unroll_loop(i32 225)
  %scevgep = getelementptr i8, i8* %1, i64 %indvars.iv
  %9 = load i8, i8* %scevgep, align 1
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %10, %.025
  br i1 %11, label %12, label %14

; <label>:12:                                     ; preds = %.lr.ph
  %scevgep1 = getelementptr i32, i32* %0, i64 %indvars.iv
  store i32 %.13, i32* %scevgep1, align 4
  %13 = add nsw i32 %.13, 1
  br label %14

; <label>:14:                                     ; preds = %.lr.ph, %12
  %.2 = phi i32 [ %13, %12 ], [ %.13, %.lr.ph ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond1 = icmp ne i64 %7, %indvars.iv.next
  br i1 %exitcond1, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %14
  %.1.lcssa.ph = phi i32 [ %.2, %14 ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %.lr.ph8
  %.1.lcssa = phi i32 [ %.016, %.lr.ph8 ], [ %.1.lcssa.ph, %._crit_edge.loopexit ]
  %15 = shl i32 %.1.lcssa, 1
  %16 = add nsw i32 %.025, 1
  %17 = icmp sle i32 %16, %3
  br i1 %17, label %.lr.ph8, label %._crit_edge9.loopexit

._crit_edge9.loopexit:                            ; preds = %._crit_edge
  br label %._crit_edge9

._crit_edge9:                                     ; preds = %._crit_edge9.loopexit, %5
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BZ2_hbCreateDecodeTables(i32*, i32*, i32*, i8*, i32, i32, i32) #0 {
  %8 = icmp sle i32 %4, %5
  br i1 %8, label %.lr.ph44.preheader, label %._crit_edge45

.lr.ph44.preheader:                               ; preds = %7
  %9 = zext i32 %6 to i64
  %10 = icmp slt i32 0, %6
  br label %.lr.ph44

.lr.ph44:                                         ; preds = %.lr.ph44.preheader, %._crit_edge36
  %.0242 = phi i32 [ %19, %._crit_edge36 ], [ %4, %.lr.ph44.preheader ]
  %.0341 = phi i32 [ %.14.lcssa, %._crit_edge36 ], [ 0, %.lr.ph44.preheader ]
  br i1 %10, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %.lr.ph44
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %.lr.ph35.preheader, %18
  %indvars.iv37 = phi i64 [ %indvars.iv.next38, %18 ], [ 0, %.lr.ph35.preheader ]
  %.1432 = phi i32 [ %.25, %18 ], [ %.0341, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 226)
  %scevgep19 = getelementptr i8, i8* %3, i64 %indvars.iv37
  %11 = load i8, i8* %scevgep19, align 1
  %12 = zext i8 %11 to i32
  %13 = icmp eq i32 %12, %.0242
  br i1 %13, label %14, label %18

; <label>:14:                                     ; preds = %.lr.ph35
  %15 = sext i32 %.1432 to i64
  %16 = getelementptr inbounds i32, i32* %2, i64 %15
  %tmp = trunc i64 %indvars.iv37 to i32
  store i32 %tmp, i32* %16, align 4
  %17 = add nsw i32 %.1432, 1
  br label %18

; <label>:18:                                     ; preds = %.lr.ph35, %14
  %.25 = phi i32 [ %17, %14 ], [ %.1432, %.lr.ph35 ]
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1
  %exitcond4 = icmp ne i64 %9, %indvars.iv.next38
  br i1 %exitcond4, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %18
  %.14.lcssa.ph = phi i32 [ %.25, %18 ]
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %.lr.ph44
  %.14.lcssa = phi i32 [ %.0341, %.lr.ph44 ], [ %.14.lcssa.ph, %._crit_edge36.loopexit ]
  %19 = add nsw i32 %.0242, 1
  %20 = icmp sle i32 %19, %5
  br i1 %20, label %.lr.ph44, label %._crit_edge45.loopexit

._crit_edge45.loopexit:                           ; preds = %._crit_edge36
  br label %._crit_edge45

._crit_edge45:                                    ; preds = %._crit_edge45.loopexit, %7
  br label %21

; <label>:21:                                     ; preds = %._crit_edge45, %21
  %indvars.iv29 = phi i64 [ 0, %._crit_edge45 ], [ %indvars.iv.next30, %21 ]
  call void @unroll_loop(i32 227)
  %scevgep18 = getelementptr i32, i32* %1, i64 %indvars.iv29
  store i32 0, i32* %scevgep18, align 4
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %exitcond31 = icmp ne i64 %indvars.iv.next30, 23
  br i1 %exitcond31, label %21, label %22

; <label>:22:                                     ; preds = %21
  %23 = icmp slt i32 0, %6
  br i1 %23, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %22
  %24 = zext i32 %6 to i64
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %.lr.ph23.preheader, %.lr.ph23
  %indvars.iv25 = phi i64 [ %indvars.iv.next26, %.lr.ph23 ], [ 0, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 228)
  %scevgep17 = getelementptr i8, i8* %3, i64 %indvars.iv25
  %25 = load i8, i8* %scevgep17, align 1
  %26 = zext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i32, i32* %1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %29, align 4
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %exitcond3 = icmp ne i64 %24, %indvars.iv.next26
  br i1 %exitcond3, label %.lr.ph23, label %._crit_edge24.loopexit

._crit_edge24.loopexit:                           ; preds = %.lr.ph23
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %22
  br label %32

; <label>:32:                                     ; preds = %._crit_edge24, %32
  %indvars.iv18 = phi i64 [ 1, %._crit_edge24 ], [ %indvars.iv.next19, %32 ]
  call void @unroll_loop(i32 229)
  %scevgep14 = getelementptr i32, i32* %1, i64 %indvars.iv18
  %scevgep15 = getelementptr i32, i32* %scevgep14, i64 -1
  %33 = load i32, i32* %scevgep15, align 4
  %scevgep16 = getelementptr i32, i32* %1, i64 %indvars.iv18
  %34 = load i32, i32* %scevgep16, align 4
  %35 = add nsw i32 %34, %33
  store i32 %35, i32* %scevgep16, align 4
  %indvars.iv.next19 = add nuw nsw i64 %indvars.iv18, 1
  %exitcond20 = icmp ne i64 %indvars.iv.next19, 23
  br i1 %exitcond20, label %32, label %.preheader.preheader

.preheader.preheader:                             ; preds = %32
  %indvars.iv15.ph = phi i64 [ 0, %32 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %.preheader
  %indvars.iv15 = phi i64 [ %indvars.iv.next16, %.preheader ], [ %indvars.iv15.ph, %.preheader.preheader ]
  call void @unroll_loop(i32 230)
  %scevgep13 = getelementptr i32, i32* %0, i64 %indvars.iv15
  store i32 0, i32* %scevgep13, align 4
  %indvars.iv.next16 = add nuw nsw i64 %indvars.iv15, 1
  %exitcond = icmp ne i64 %indvars.iv.next16, 23
  br i1 %exitcond, label %.preheader, label %36

; <label>:36:                                     ; preds = %.preheader
  %37 = icmp sle i32 %4, %5
  br i1 %37, label %.lr.ph10, label %._crit_edge11

.lr.ph10:                                         ; preds = %36
  %38 = sext i32 %4 to i64
  %39 = sext i32 %5 to i64
  %40 = add i64 %39, 1
  %41 = add i64 %38, 1
  %scevgep5 = getelementptr i32, i32* %1, i64 %41
  %scevgep11 = getelementptr i32, i32* %0, i64 %38
  %42 = sub i64 %40, %38
  br label %43

; <label>:43:                                     ; preds = %.lr.ph10, %43
  %lsr.iv6 = phi i64 [ 0, %.lr.ph10 ], [ %lsr.iv.next7, %43 ]
  %.08 = phi i32 [ 0, %.lr.ph10 ], [ %49, %43 ]
  call void @unroll_loop(i32 231)
  %scevgep10 = getelementptr i32, i32* %scevgep5, i64 %lsr.iv6
  %44 = load i32, i32* %scevgep10, align 4
  %scevgep8 = getelementptr i32, i32* %scevgep5, i64 %lsr.iv6
  %scevgep9 = getelementptr i32, i32* %scevgep8, i64 -1
  %45 = load i32, i32* %scevgep9, align 4
  %46 = sub nsw i32 %44, %45
  %47 = add nsw i32 %.08, %46
  %48 = sub nsw i32 %47, 1
  %scevgep12 = getelementptr i32, i32* %scevgep11, i64 %lsr.iv6
  store i32 %48, i32* %scevgep12, align 4
  %49 = shl i32 %47, 1
  %lsr.iv.next7 = add i64 %lsr.iv6, 1
  %exitcond2 = icmp ne i64 %42, %lsr.iv.next7
  br i1 %exitcond2, label %43, label %._crit_edge11.loopexit

._crit_edge11.loopexit:                           ; preds = %43
  br label %._crit_edge11

._crit_edge11:                                    ; preds = %._crit_edge11.loopexit, %36
  %50 = add nsw i32 %4, 1
  %51 = icmp sle i32 %50, %5
  br i1 %51, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %._crit_edge11
  %52 = add i32 %4, 1
  %53 = sext i32 %52 to i64
  %54 = sext i32 %5 to i64
  %55 = add i64 %54, 1
  %56 = add i64 %53, -1
  %scevgep = getelementptr i32, i32* %0, i64 %56
  %scevgep2 = getelementptr i32, i32* %1, i64 %53
  %57 = sub i64 %55, %53
  br label %58

; <label>:58:                                     ; preds = %.lr.ph, %58
  %lsr.iv = phi i64 [ 0, %.lr.ph ], [ %lsr.iv.next, %58 ]
  call void @unroll_loop(i32 232)
  %scevgep1 = getelementptr i32, i32* %scevgep, i64 %lsr.iv
  %59 = load i32, i32* %scevgep1, align 4
  %60 = add nsw i32 %59, 1
  %61 = shl i32 %60, 1
  %scevgep3 = getelementptr i32, i32* %scevgep2, i64 %lsr.iv
  %62 = load i32, i32* %scevgep3, align 4
  %63 = sub nsw i32 %61, %62
  %scevgep4 = getelementptr i32, i32* %scevgep2, i64 %lsr.iv
  store i32 %63, i32* %scevgep4, align 4
  %lsr.iv.next = add i64 %lsr.iv, 1
  %exitcond1 = icmp ne i64 %57, %lsr.iv.next
  br i1 %exitcond1, label %58, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %58
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge11
  ret void
}

declare void @unroll_loop(i32)

; Function Attrs: noinline nounwind uwtable
define internal void @copyFileName_clone(i8*, i8*) #0 {
  %3 = getelementptr [7 x i8], [7 x i8]* @3, i64 0, i64 0
  %4 = call i64 @strlen(i8* %3) #10
  %5 = icmp ugt i64 6, 1024
  br i1 false, label %6, label %11

; <label>:6:                                      ; preds = %2
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = getelementptr [120 x i8], [120 x i8]* @.str.47, i32 0, i32 0
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %1, i32 1024)
  call void @setExit(i32 1)
  %10 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %10) #11
  unreachable

; <label>:11:                                     ; preds = %2
  %12 = call i8* @strncpy(i8* %0, i8* %1, i64 1024) #9, !track !17
  %13 = getelementptr inbounds i8, i8* %0, i64 1024
  store i8 0, i8* %13, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @copyFileName_clone.3(i8*, i8*) #0 {
  %3 = getelementptr [7 x i8], [7 x i8]* @4, i64 0, i64 0
  %4 = call i64 @strlen(i8* %3) #10
  %5 = icmp ugt i64 6, 1024
  br i1 false, label %6, label %11

; <label>:6:                                      ; preds = %2
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = getelementptr [120 x i8], [120 x i8]* @.str.47, i32 0, i32 0
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %1, i32 1024)
  call void @setExit(i32 1)
  %10 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %10) #11
  unreachable

; <label>:11:                                     ; preds = %2
  %12 = call i8* @strncpy(i8* %0, i8* %1, i64 1024) #9, !track !17
  %13 = getelementptr inbounds i8, i8* %0, i64 1024
  store i8 0, i8* %13, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @copyFileName_clone.5(i8*, i8*) #0 {
  %3 = getelementptr [6 x i8], [6 x i8]* @5, i64 0, i64 0
  %4 = call i64 @strlen(i8* %3) #10
  %5 = icmp ugt i64 5, 1024
  br i1 false, label %6, label %11

; <label>:6:                                      ; preds = %2
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = getelementptr [120 x i8], [120 x i8]* @.str.47, i32 0, i32 0
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %1, i32 1024)
  call void @setExit(i32 1)
  %10 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %10) #11
  unreachable

; <label>:11:                                     ; preds = %2
  %12 = call i8* @strncpy(i8* %0, i8* %1, i64 1024) #9, !track !17
  %13 = getelementptr inbounds i8, i8* %0, i64 1024
  store i8 0, i8* %13, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old.26(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), align 1
  %39 = sext i8 98 to i32
  %40 = icmp eq i32 98, 47
  br i1 false, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %37
  call void @__loop_iteration_test___0()
  %43 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %44 = sext i8 122 to i32
  %45 = icmp ne i32 122, 0
  br i1 true, label %488, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %655, %646, %637, %628, %619, %610, %601, %592, %583, %574, %565, %556, %547, %538, %529, %520, %511, %502, %493, %42
  call void @__loop_termination_test___0()
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone(%struct.zzzz** %22, i8* %46)
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone.9(%struct.zzzz** %22, i8* %47)
  %48 = sub nsw i32 3, 1, !track_argc !10
  %49 = icmp sle i32 1, 2
  br i1 true, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57, %.lr.ph57.preheader
  %lsr.iv5 = phi i64 [ 0, %.lr.ph57.preheader ], [ %lsr.iv.next6, %.lr.ph57 ]
  call void @unroll_loop(i32 1)
  %50 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7 = getelementptr i8*, i8** %scevgep4, i64 %lsr.iv5
  %51 = load i8*, i8** %scevgep7, align 8
  %52 = call %struct.zzzz* @snocString(%struct.zzzz* %50, i8* %51)
  store %struct.zzzz* %52, %struct.zzzz** %22, align 8
  %lsr.iv.next6 = add nuw nsw i64 %lsr.iv5, 1
  %exitcond = icmp ne i64 %lsr.iv.next6, 2
  br i1 %exitcond, label %.lr.ph57, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %53 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %54 = icmp ne %struct.zzzz* %53, null
  br i1 %54, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %82, %.lr.ph53.preheader
  %.051 = phi i8 [ %.1, %82 ], [ 1, %.lr.ph53.preheader ]
  %.0149 = phi %struct.zzzz* [ %84, %82 ], [ %53, %.lr.ph53.preheader ]
  call void @unroll_loop(i32 2)
  %55 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = call i32 @strcmp(i8* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %82, label %59

; <label>:59:                                     ; preds = %.lr.ph53
  %60 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 0
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %64, 45
  %66 = zext i8 %.051 to i32
  %67 = icmp ne i32 %66, 0
  %or.cond = and i1 %65, %67
  br i1 %or.cond, label %82, label %68

; <label>:68:                                     ; preds = %59
  %69 = load i32, i32* @numFileNames, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* @numFileNames, align 4
  %71 = load i32, i32* @longestFileName, align 4
  %72 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i64 @strlen(i8* %73) #10
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %71, %75
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %68
  %78 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @strlen(i8* %79) #10
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* @longestFileName, align 4
  br label %82

; <label>:82:                                     ; preds = %77, %68, %59, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ %.051, %59 ], [ %.051, %77 ], [ %.051, %68 ]
  %83 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 1
  %84 = load %struct.zzzz*, %struct.zzzz** %83, align 8
  %85 = icmp ne %struct.zzzz* %84, null
  br i1 %85, label %.lr.ph53, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %82
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %86 = load i32, i32* @numFileNames, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

; <label>:88:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %90

; <label>:90:                                     ; preds = %89, %88
  store i32 1, i32* @opMode, align 4
  %91 = load i8*, i8** @progName, align 8
  %92 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %93 = call i8* @strstr(i8* %91, i8* %92) #10, !track !11
  %94 = icmp ne i8* %93, null
  br i1 %94, label %100, label %95

; <label>:95:                                     ; preds = %90
  %96 = load i8*, i8** @progName, align 8
  %97 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %98 = call i8* @strstr(i8* %96, i8* %97) #10, !track !12
  %99 = icmp ne i8* %98, null
  br i1 %99, label %100, label %101

; <label>:100:                                    ; preds = %95, %90
  store i32 2, i32* @opMode, align 4
  br label %101

; <label>:101:                                    ; preds = %100, %95
  %102 = load i8*, i8** @progName, align 8
  %103 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %104 = call i8* @strstr(i8* %102, i8* %103) #10, !track !13
  %105 = icmp ne i8* %104, null
  br i1 %105, label %121, label %106

; <label>:106:                                    ; preds = %101
  %107 = load i8*, i8** @progName, align 8
  %108 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %109 = call i8* @strstr(i8* %107, i8* %108) #10, !track !14
  %110 = icmp ne i8* %109, null
  br i1 %110, label %121, label %111

; <label>:111:                                    ; preds = %106
  %112 = load i8*, i8** @progName, align 8
  %113 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %114 = call i8* @strstr(i8* %112, i8* %113) #10, !track !15
  %115 = icmp ne i8* %114, null
  br i1 %115, label %121, label %116

; <label>:116:                                    ; preds = %111
  %117 = load i8*, i8** @progName, align 8
  %118 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %119 = call i8* @strstr(i8* %117, i8* %118) #10, !track !16
  %120 = icmp ne i8* %119, null
  br i1 %120, label %121, label %126

; <label>:121:                                    ; preds = %116, %111, %106, %101
  store i32 2, i32* @opMode, align 4
  %122 = load i32, i32* @numFileNames, align 4
  %123 = icmp eq i32 %122, 0
  %124 = zext i1 %123 to i64
  %125 = select i1 %123, i32 1, i32 2
  store i32 %125, i32* @srcMode, align 4
  br label %126

; <label>:126:                                    ; preds = %121, %116
  %127 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %128 = icmp ne %struct.zzzz* %127, null
  br i1 %128, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %126
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %._crit_edge43, %.lr.ph48.preheader
  %.1244 = phi %struct.zzzz* [ %195, %._crit_edge43 ], [ %127, %.lr.ph48.preheader ]
  call void @unroll_loop(i32 3)
  %129 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = call i32 @strcmp(i8* %130, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %.loopexit17.loopexit, label %133

; <label>:133:                                    ; preds = %.lr.ph48
  %134 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 0
  %137 = load i8, i8* %136, align 1
  %138 = sext i8 %137 to i32
  %139 = icmp eq i32 %138, 45
  br i1 %139, label %140, label %._crit_edge43

; <label>:140:                                    ; preds = %133
  %141 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 1
  %144 = load i8, i8* %143, align 1
  %145 = sext i8 %144 to i32
  %146 = icmp ne i32 %145, 45
  br i1 %146, label %147, label %._crit_edge43

; <label>:147:                                    ; preds = %140
  %148 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 1
  %151 = load i8, i8* %150, align 1
  %152 = sext i8 %151 to i32
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %147
  %154 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %189, %.lr.ph42.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph42.preheader ], [ %lsr.iv.next, %189 ]
  call void @unroll_loop(i32 4)
  %155 = load i8*, i8** %154, align 8
  %scevgep = getelementptr i8, i8* %155, i64 1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %156 = load i8, i8* %scevgep1, align 1
  %157 = sext i8 %156 to i32
  switch i32 %157, label %181 [
    i32 99, label %158
    i32 100, label %159
    i32 122, label %160
    i32 102, label %161
    i32 116, label %162
    i32 107, label %163
    i32 115, label %164
    i32 113, label %165
    i32 49, label %166
    i32 50, label %167
    i32 51, label %168
    i32 52, label %169
    i32 53, label %170
    i32 54, label %171
    i32 55, label %172
    i32 56, label %173
    i32 57, label %174
    i32 86, label %175
    i32 76, label %175
    i32 118, label %176
    i32 104, label %179
  ]

; <label>:158:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %189

; <label>:159:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %189

; <label>:160:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %189

; <label>:161:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %189

; <label>:162:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %189

; <label>:163:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %189

; <label>:164:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %189

; <label>:165:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %189

; <label>:166:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %189

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %189

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %189

; <label>:169:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %189

; <label>:170:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %189

; <label>:171:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %189

; <label>:172:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %189

; <label>:173:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %189

; <label>:174:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %189

; <label>:175:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %189

; <label>:176:                                    ; preds = %.lr.ph42
  %177 = load i32, i32* @verbosity, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* @verbosity, align 4
  br label %189

; <label>:179:                                    ; preds = %.lr.ph42
  %180 = load i8*, i8** @progName, align 8
  call void @usage(i8* %180)
  call void @exit(i32 0) #11
  unreachable

; <label>:181:                                    ; preds = %.lr.ph42
  %.12.lcssa15 = phi %struct.zzzz* [ %.1244, %.lr.ph42 ]
  %182 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %183 = load i8*, i8** @progName, align 8
  %184 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %187 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %182, i8* %186, i8* %183, i8* %185)
  %188 = load i8*, i8** @progName, align 8
  call void @usage(i8* %188)
  call void @exit(i32 1) #11
  unreachable

; <label>:189:                                    ; preds = %176, %175, %174, %173, %172, %171, %170, %169, %168, %167, %166, %165, %164, %163, %162, %161, %160, %159, %158
  %190 = load i8*, i8** %148, align 8
  %scevgep2 = getelementptr i8, i8* %190, i64 2
  %scevgep3 = getelementptr i8, i8* %scevgep2, i64 %lsr.iv
  %191 = load i8, i8* %scevgep3, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp ne i32 %192, 0
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %193, label %.lr.ph42, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %189
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %147, %140, %133
  %.1245 = phi %struct.zzzz* [ %.1244, %140 ], [ %.1244, %133 ], [ %.1244, %147 ], [ %.1244, %._crit_edge43.loopexit ]
  %194 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1245, i32 0, i32 1
  %195 = load %struct.zzzz*, %struct.zzzz** %194, align 8
  %196 = icmp ne %struct.zzzz* %195, null
  br i1 %196, label %.lr.ph48, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %._crit_edge43, %.lr.ph48
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %126
  %197 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %198 = icmp ne %struct.zzzz* %197, null
  br i1 %198, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %321, %.lr.ph39.preheader
  %.2337 = phi %struct.zzzz* [ %323, %321 ], [ %197, %.lr.ph39.preheader ]
  call void @unroll_loop(i32 5)
  %199 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %200 = load i8*, i8** %199, align 8
  %201 = call i32 @strcmp(i8* %200, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %.loopexit.loopexit, label %203

; <label>:203:                                    ; preds = %.lr.ph39
  %204 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %205 = load i8*, i8** %204, align 8
  %206 = call i32 @strcmp(i8* %205, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

; <label>:208:                                    ; preds = %203
  store i32 2, i32* @srcMode, align 4
  br label %321

; <label>:209:                                    ; preds = %203
  %210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = call i32 @strcmp(i8* %211, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

; <label>:214:                                    ; preds = %209
  store i32 2, i32* @opMode, align 4
  br label %321

; <label>:215:                                    ; preds = %209
  %216 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  %218 = call i32 @strcmp(i8* %217, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %221

; <label>:220:                                    ; preds = %215
  store i32 1, i32* @opMode, align 4
  br label %321

; <label>:221:                                    ; preds = %215
  %222 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = call i32 @strcmp(i8* %223, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

; <label>:226:                                    ; preds = %221
  store i8 1, i8* @forceOverwrite, align 1
  br label %321

; <label>:227:                                    ; preds = %221
  %228 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  %230 = call i32 @strcmp(i8* %229, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

; <label>:232:                                    ; preds = %227
  store i32 3, i32* @opMode, align 4
  br label %321

; <label>:233:                                    ; preds = %227
  %234 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = call i32 @strcmp(i8* %235, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %239

; <label>:238:                                    ; preds = %233
  store i8 1, i8* @keepInputFiles, align 1
  br label %321

; <label>:239:                                    ; preds = %233
  %240 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %241 = load i8*, i8** %240, align 8
  %242 = call i32 @strcmp(i8* %241, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

; <label>:244:                                    ; preds = %239
  store i8 1, i8* @smallMode, align 1
  br label %321

; <label>:245:                                    ; preds = %239
  %246 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %247 = load i8*, i8** %246, align 8
  %248 = call i32 @strcmp(i8* %247, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

; <label>:250:                                    ; preds = %245
  store i8 0, i8* @noisy, align 1
  br label %321

; <label>:251:                                    ; preds = %245
  %252 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %253 = load i8*, i8** %252, align 8
  %254 = call i32 @strcmp(i8* %253, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

; <label>:256:                                    ; preds = %251
  call void @license()
  br label %321

; <label>:257:                                    ; preds = %251
  %258 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = call i32 @strcmp(i8* %259, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

; <label>:262:                                    ; preds = %257
  call void @license()
  br label %321

; <label>:263:                                    ; preds = %257
  %264 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  %266 = call i32 @strcmp(i8* %265, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %268, label %269

; <label>:268:                                    ; preds = %263
  store i32 1, i32* @workFactor, align 4
  br label %321

; <label>:269:                                    ; preds = %263
  %270 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %271 = load i8*, i8** %270, align 8
  %272 = call i32 @strcmp(i8* %271, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  br i1 %273, label %276, label %277

; <label>:276:                                    ; preds = %269
  call void @redundant(i8* %275)
  br label %321

; <label>:277:                                    ; preds = %269
  %278 = call i32 @strcmp(i8* %275, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %281 = load i8*, i8** %280, align 8
  br i1 %279, label %282, label %283

; <label>:282:                                    ; preds = %277
  call void @redundant(i8* %281)
  br label %321

; <label>:283:                                    ; preds = %277
  %284 = call i32 @strcmp(i8* %281, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

; <label>:286:                                    ; preds = %283
  store i32 1, i32* @blockSize100k, align 4
  br label %321

; <label>:287:                                    ; preds = %283
  %288 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = call i32 @strcmp(i8* %289, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

; <label>:292:                                    ; preds = %287
  store i32 9, i32* @blockSize100k, align 4
  br label %321

; <label>:293:                                    ; preds = %287
  %294 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  %296 = call i32 @strcmp(i8* %295, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %301

; <label>:298:                                    ; preds = %293
  %299 = load i32, i32* @verbosity, align 4
  %300 = add nsw i32 %299, 1
  store i32 %300, i32* @verbosity, align 4
  br label %321

; <label>:301:                                    ; preds = %293
  %302 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  %304 = call i32 @strcmp(i8* %303, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %308

; <label>:306:                                    ; preds = %301
  %307 = load i8*, i8** @progName, align 8
  call void @usage(i8* %307)
  call void @exit(i32 0) #11
  unreachable

; <label>:308:                                    ; preds = %301
  %309 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %310 = load i8*, i8** %309, align 8
  %311 = call i32 @strncmp(i8* %310, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %321

; <label>:313:                                    ; preds = %308
  %.23.lcssa13 = phi %struct.zzzz* [ %.2337, %308 ]
  %314 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %315 = load i8*, i8** @progName, align 8
  %316 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %317 = load i8*, i8** %316, align 8
  %318 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %319 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %314, i8* %318, i8* %315, i8* %317)
  %320 = load i8*, i8** @progName, align 8
  call void @usage(i8* %320)
  call void @exit(i32 1) #11
  unreachable

; <label>:321:                                    ; preds = %308, %298, %292, %286, %282, %276, %268, %262, %256, %250, %244, %238, %232, %226, %220, %214, %208
  %322 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 1
  %323 = load %struct.zzzz*, %struct.zzzz** %322, align 8
  %324 = icmp ne %struct.zzzz* %323, null
  br i1 %324, label %.lr.ph39, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %321, %.lr.ph39
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %325 = load i32, i32* @verbosity, align 4
  %326 = icmp sgt i32 %325, 4
  br i1 %326, label %327, label %328

; <label>:327:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %328

; <label>:328:                                    ; preds = %327, %.loopexit
  %329 = load i32, i32* @opMode, align 4
  %330 = icmp eq i32 %329, 1
  br i1 %330, label %331, label %338

; <label>:331:                                    ; preds = %328
  %332 = load i8, i8* @smallMode, align 1
  %333 = zext i8 %332 to i32
  %334 = icmp ne i32 %333, 0
  %335 = load i32, i32* @blockSize100k, align 4
  %336 = icmp sgt i32 %335, 2
  %or.cond3 = and i1 %334, %336
  br i1 %or.cond3, label %337, label %338

; <label>:337:                                    ; preds = %331
  store i32 2, i32* @blockSize100k, align 4
  br label %338

; <label>:338:                                    ; preds = %337, %331, %328
  %339 = load i32, i32* @opMode, align 4
  %340 = icmp eq i32 %339, 3
  %341 = load i32, i32* @srcMode, align 4
  %342 = icmp eq i32 %341, 2
  %or.cond5 = and i1 %340, %342
  br i1 %or.cond5, label %343, label %348

; <label>:343:                                    ; preds = %338
  %344 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %345 = load i8*, i8** @progName, align 8
  %346 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %347 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %344, i8* %346, i8* %345)
  call void @exit(i32 1) #11
  unreachable

; <label>:348:                                    ; preds = %338
  %349 = load i32, i32* @srcMode, align 4
  %350 = icmp eq i32 %349, 2
  %351 = load i32, i32* @numFileNames, align 4
  %352 = icmp eq i32 %351, 0
  %or.cond7 = and i1 %350, %352
  br i1 %or.cond7, label %353, label %354

; <label>:353:                                    ; preds = %348
  store i32 1, i32* @srcMode, align 4
  br label %354

; <label>:354:                                    ; preds = %353, %348
  %355 = load i32, i32* @opMode, align 4
  %356 = icmp ne i32 %355, 1
  br i1 %356, label %357, label %358

; <label>:357:                                    ; preds = %354
  store i32 0, i32* @blockSize100k, align 4
  br label %358

; <label>:358:                                    ; preds = %357, %354
  %359 = load i32, i32* @srcMode, align 4
  %360 = icmp eq i32 %359, 3
  br i1 %360, label %361, label %365

; <label>:361:                                    ; preds = %358
  %362 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %363 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %364 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %365

; <label>:365:                                    ; preds = %361, %358
  %366 = load i32, i32* @opMode, align 4
  %367 = icmp eq i32 %366, 1
  br i1 %367, label %368, label %397

; <label>:368:                                    ; preds = %365
  %369 = load i32, i32* @srcMode, align 4
  %370 = icmp eq i32 %369, 1
  br i1 %370, label %371, label %372

; <label>:371:                                    ; preds = %368
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:372:                                    ; preds = %368
  %373 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %374 = icmp ne %struct.zzzz* %373, null
  br i1 %374, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %372
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %393, %.lr.ph23.preheader
  %.221 = phi i8 [ %.3, %393 ], [ 1, %.lr.ph23.preheader ]
  %.3419 = phi %struct.zzzz* [ %395, %393 ], [ %373, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 6)
  %375 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %376 = load i8*, i8** %375, align 8
  %377 = call i32 @strcmp(i8* %376, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %393, label %379

; <label>:379:                                    ; preds = %.lr.ph23
  %380 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %381 = load i8*, i8** %380, align 8
  %382 = getelementptr inbounds i8, i8* %381, i64 0
  %383 = load i8, i8* %382, align 1
  %384 = sext i8 %383 to i32
  %385 = icmp eq i32 %384, 45
  %386 = zext i8 %.221 to i32
  %387 = icmp ne i32 %386, 0
  %or.cond9 = and i1 %385, %387
  br i1 %or.cond9, label %393, label %388

; <label>:388:                                    ; preds = %379
  %389 = load i32, i32* @numFilesProcessed, align 4
  %390 = add nsw i32 %389, 1
  store i32 %390, i32* @numFilesProcessed, align 4
  %391 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %392 = load i8*, i8** %391, align 8
  call void @compress(i8* %392)
  br label %393

; <label>:393:                                    ; preds = %388, %379, %.lr.ph23
  %.3 = phi i8 [ %.221, %388 ], [ 0, %.lr.ph23 ], [ %.221, %379 ]
  %394 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 1
  %395 = load %struct.zzzz*, %struct.zzzz** %394, align 8
  %396 = icmp ne %struct.zzzz* %395, null
  br i1 %396, label %.lr.ph23, label %._crit_edge24.loopexit

; <label>:397:                                    ; preds = %365
  %398 = load i32, i32* @opMode, align 4
  %399 = icmp eq i32 %398, 2
  br i1 %399, label %400, label %433

; <label>:400:                                    ; preds = %397
  store i8 0, i8* @unzFailsExist, align 1
  %401 = load i32, i32* @srcMode, align 4
  %402 = icmp eq i32 %401, 1
  br i1 %402, label %403, label %404

; <label>:403:                                    ; preds = %400
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:404:                                    ; preds = %400
  %405 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %406 = icmp ne %struct.zzzz* %405, null
  br i1 %406, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %404
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %425, %.lr.ph29.preheader
  %.427 = phi i8 [ %.5, %425 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %427, %425 ], [ %405, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %407 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %408 = load i8*, i8** %407, align 8
  %409 = call i32 @strcmp(i8* %408, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %425, label %411

; <label>:411:                                    ; preds = %.lr.ph29
  %412 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %413 = load i8*, i8** %412, align 8
  %414 = getelementptr inbounds i8, i8* %413, i64 0
  %415 = load i8, i8* %414, align 1
  %416 = sext i8 %415 to i32
  %417 = icmp eq i32 %416, 45
  %418 = zext i8 %.427 to i32
  %419 = icmp ne i32 %418, 0
  %or.cond11 = and i1 %417, %419
  br i1 %or.cond11, label %425, label %420

; <label>:420:                                    ; preds = %411
  %421 = load i32, i32* @numFilesProcessed, align 4
  %422 = add nsw i32 %421, 1
  store i32 %422, i32* @numFilesProcessed, align 4
  %423 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %424 = load i8*, i8** %423, align 8
  call void @uncompress(i8* %424)
  br label %425

; <label>:425:                                    ; preds = %420, %411, %.lr.ph29
  %.5 = phi i8 [ %.427, %420 ], [ 0, %.lr.ph29 ], [ %.427, %411 ]
  %426 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %427 = load %struct.zzzz*, %struct.zzzz** %426, align 8
  %428 = icmp ne %struct.zzzz* %427, null
  br i1 %428, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %425
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %404, %403
  %429 = load i8, i8* @unzFailsExist, align 1
  %430 = icmp ne i8 %429, 0
  br i1 %430, label %431, label %._crit_edge24

; <label>:431:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %432 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %432) #11
  unreachable

; <label>:433:                                    ; preds = %397
  store i8 0, i8* @testFailsExist, align 1
  %434 = load i32, i32* @srcMode, align 4
  %435 = icmp eq i32 %434, 1
  br i1 %435, label %436, label %437

; <label>:436:                                    ; preds = %433
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:437:                                    ; preds = %433
  %438 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %439 = icmp ne %struct.zzzz* %438, null
  br i1 %439, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %437
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %458, %.lr.ph35.preheader
  %.633 = phi i8 [ %.7, %458 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %460, %458 ], [ %438, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %440 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  %442 = call i32 @strcmp(i8* %441, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %458, label %444

; <label>:444:                                    ; preds = %.lr.ph35
  %445 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %446 = load i8*, i8** %445, align 8
  %447 = getelementptr inbounds i8, i8* %446, i64 0
  %448 = load i8, i8* %447, align 1
  %449 = sext i8 %448 to i32
  %450 = icmp eq i32 %449, 45
  %451 = zext i8 %.633 to i32
  %452 = icmp ne i32 %451, 0
  %or.cond13 = and i1 %450, %452
  br i1 %or.cond13, label %458, label %453

; <label>:453:                                    ; preds = %444
  %454 = load i32, i32* @numFilesProcessed, align 4
  %455 = add nsw i32 %454, 1
  store i32 %455, i32* @numFilesProcessed, align 4
  %456 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %457 = load i8*, i8** %456, align 8
  call void @testf(i8* %457)
  br label %458

; <label>:458:                                    ; preds = %453, %444, %.lr.ph35
  %.7 = phi i8 [ %.633, %453 ], [ 0, %.lr.ph35 ], [ %.633, %444 ]
  %459 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %460 = load %struct.zzzz*, %struct.zzzz** %459, align 8
  %461 = icmp ne %struct.zzzz* %460, null
  br i1 %461, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %458
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %437, %436
  %462 = load i8, i8* @testFailsExist, align 1
  %463 = zext i8 %462 to i32
  %464 = icmp ne i32 %463, 0
  br i1 %464, label %465, label %._crit_edge24

; <label>:465:                                    ; preds = %._crit_edge36
  %466 = load i8, i8* @noisy, align 1
  %467 = zext i8 %466 to i32
  %468 = icmp ne i32 %467, 0
  br i1 %468, label %469, label %._crit_edge24

; <label>:469:                                    ; preds = %465
  %470 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %471 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %472 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %470, i8* %471)
  call void @setExit(i32 2)
  %473 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %473) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %393
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %465, %._crit_edge36, %._crit_edge30, %372, %371
  %474 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %475 = icmp ne %struct.zzzz* %474, null
  br i1 %475, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %484, %.lr.ph.preheader
  %.6718 = phi %struct.zzzz* [ %477, %484 ], [ %474, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %476 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %477 = load %struct.zzzz*, %struct.zzzz** %476, align 8
  %478 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %479 = load i8*, i8** %478, align 8
  %480 = icmp ne i8* %479, null
  br i1 %480, label %481, label %484

; <label>:481:                                    ; preds = %.lr.ph
  %482 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %483 = load i8*, i8** %482, align 8
  call void @free(i8* %483) #9
  br label %484

; <label>:484:                                    ; preds = %481, %.lr.ph
  %485 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %485) #9
  %486 = icmp ne %struct.zzzz* %477, null
  br i1 %486, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %484
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %487 = load i32, i32* @exitValue, align 4
  ret i32 %487

; <label>:488:                                    ; preds = %42
  call void @unroll_loop(i32 0)
  %489 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %490 = sext i8 122 to i32
  %491 = icmp eq i32 122, 47
  br i1 false, label %492, label %493

; <label>:492:                                    ; preds = %488
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), i8** @progName, align 8
  br label %493

; <label>:493:                                    ; preds = %492, %488
  call void @__loop_iteration_test___0()
  %494 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %495 = sext i8 105 to i32
  %496 = icmp ne i32 105, 0
  br i1 true, label %497, label %._crit_edge64.loopexit

; <label>:497:                                    ; preds = %493
  call void @unroll_loop(i32 0)
  %498 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %499 = sext i8 105 to i32
  %500 = icmp eq i32 105, 47
  br i1 false, label %501, label %502

; <label>:501:                                    ; preds = %497
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), i8** @progName, align 8
  br label %502

; <label>:502:                                    ; preds = %501, %497
  call void @__loop_iteration_test___0()
  %503 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %504 = sext i8 112 to i32
  %505 = icmp ne i32 112, 0
  br i1 true, label %506, label %._crit_edge64.loopexit

; <label>:506:                                    ; preds = %502
  call void @unroll_loop(i32 0)
  %507 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %508 = sext i8 112 to i32
  %509 = icmp eq i32 112, 47
  br i1 false, label %510, label %511

; <label>:510:                                    ; preds = %506
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), i8** @progName, align 8
  br label %511

; <label>:511:                                    ; preds = %510, %506
  call void @__loop_iteration_test___0()
  %512 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %513 = sext i8 50 to i32
  %514 = icmp ne i32 50, 0
  br i1 true, label %515, label %._crit_edge64.loopexit

; <label>:515:                                    ; preds = %511
  call void @unroll_loop(i32 0)
  %516 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %517 = sext i8 50 to i32
  %518 = icmp eq i32 50, 47
  br i1 false, label %519, label %520

; <label>:519:                                    ; preds = %515
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), i8** @progName, align 8
  br label %520

; <label>:520:                                    ; preds = %519, %515
  call void @__loop_iteration_test___0()
  %521 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %522 = sext i8 0 to i32
  %523 = icmp ne i32 0, 0
  br i1 false, label %524, label %._crit_edge64.loopexit

; <label>:524:                                    ; preds = %520
  call void @unroll_loop(i32 0)
  %525 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %526 = sext i8 %525 to i32
  %527 = icmp eq i32 %526, 47
  br i1 %527, label %528, label %529

; <label>:528:                                    ; preds = %524
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), i8** @progName, align 8
  br label %529

; <label>:529:                                    ; preds = %528, %524
  call void @__loop_iteration_test___0()
  %530 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %531 = sext i8 %530 to i32
  %532 = icmp ne i32 %531, 0
  br i1 %532, label %533, label %._crit_edge64.loopexit

; <label>:533:                                    ; preds = %529
  call void @unroll_loop(i32 0)
  %534 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %535 = sext i8 %534 to i32
  %536 = icmp eq i32 %535, 47
  br i1 %536, label %537, label %538

; <label>:537:                                    ; preds = %533
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), i8** @progName, align 8
  br label %538

; <label>:538:                                    ; preds = %537, %533
  call void @__loop_iteration_test___0()
  %539 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %540 = sext i8 %539 to i32
  %541 = icmp ne i32 %540, 0
  br i1 %541, label %542, label %._crit_edge64.loopexit

; <label>:542:                                    ; preds = %538
  call void @unroll_loop(i32 0)
  %543 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %544 = sext i8 %543 to i32
  %545 = icmp eq i32 %544, 47
  br i1 %545, label %546, label %547

; <label>:546:                                    ; preds = %542
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), i8** @progName, align 8
  br label %547

; <label>:547:                                    ; preds = %546, %542
  call void @__loop_iteration_test___0()
  %548 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %549 = sext i8 %548 to i32
  %550 = icmp ne i32 %549, 0
  br i1 %550, label %551, label %._crit_edge64.loopexit

; <label>:551:                                    ; preds = %547
  call void @unroll_loop(i32 0)
  %552 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %553 = sext i8 %552 to i32
  %554 = icmp eq i32 %553, 47
  br i1 %554, label %555, label %556

; <label>:555:                                    ; preds = %551
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), i8** @progName, align 8
  br label %556

; <label>:556:                                    ; preds = %555, %551
  call void @__loop_iteration_test___0()
  %557 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %558 = sext i8 %557 to i32
  %559 = icmp ne i32 %558, 0
  br i1 %559, label %560, label %._crit_edge64.loopexit

; <label>:560:                                    ; preds = %556
  call void @unroll_loop(i32 0)
  %561 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %562 = sext i8 %561 to i32
  %563 = icmp eq i32 %562, 47
  br i1 %563, label %564, label %565

; <label>:564:                                    ; preds = %560
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), i8** @progName, align 8
  br label %565

; <label>:565:                                    ; preds = %564, %560
  call void @__loop_iteration_test___0()
  %566 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %567 = sext i8 %566 to i32
  %568 = icmp ne i32 %567, 0
  br i1 %568, label %569, label %._crit_edge64.loopexit

; <label>:569:                                    ; preds = %565
  call void @unroll_loop(i32 0)
  %570 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %571 = sext i8 %570 to i32
  %572 = icmp eq i32 %571, 47
  br i1 %572, label %573, label %574

; <label>:573:                                    ; preds = %569
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), i8** @progName, align 8
  br label %574

; <label>:574:                                    ; preds = %573, %569
  call void @__loop_iteration_test___0()
  %575 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %576 = sext i8 %575 to i32
  %577 = icmp ne i32 %576, 0
  br i1 %577, label %578, label %._crit_edge64.loopexit

; <label>:578:                                    ; preds = %574
  call void @unroll_loop(i32 0)
  %579 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %580 = sext i8 %579 to i32
  %581 = icmp eq i32 %580, 47
  br i1 %581, label %582, label %583

; <label>:582:                                    ; preds = %578
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), i8** @progName, align 8
  br label %583

; <label>:583:                                    ; preds = %582, %578
  call void @__loop_iteration_test___0()
  %584 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %585 = sext i8 %584 to i32
  %586 = icmp ne i32 %585, 0
  br i1 %586, label %587, label %._crit_edge64.loopexit

; <label>:587:                                    ; preds = %583
  call void @unroll_loop(i32 0)
  %588 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %589 = sext i8 %588 to i32
  %590 = icmp eq i32 %589, 47
  br i1 %590, label %591, label %592

; <label>:591:                                    ; preds = %587
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), i8** @progName, align 8
  br label %592

; <label>:592:                                    ; preds = %591, %587
  call void @__loop_iteration_test___0()
  %593 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %594 = sext i8 %593 to i32
  %595 = icmp ne i32 %594, 0
  br i1 %595, label %596, label %._crit_edge64.loopexit

; <label>:596:                                    ; preds = %592
  call void @unroll_loop(i32 0)
  %597 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %598 = sext i8 %597 to i32
  %599 = icmp eq i32 %598, 47
  br i1 %599, label %600, label %601

; <label>:600:                                    ; preds = %596
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), i8** @progName, align 8
  br label %601

; <label>:601:                                    ; preds = %600, %596
  call void @__loop_iteration_test___0()
  %602 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %603 = sext i8 %602 to i32
  %604 = icmp ne i32 %603, 0
  br i1 %604, label %605, label %._crit_edge64.loopexit

; <label>:605:                                    ; preds = %601
  call void @unroll_loop(i32 0)
  %606 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %607 = sext i8 %606 to i32
  %608 = icmp eq i32 %607, 47
  br i1 %608, label %609, label %610

; <label>:609:                                    ; preds = %605
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), i8** @progName, align 8
  br label %610

; <label>:610:                                    ; preds = %609, %605
  call void @__loop_iteration_test___0()
  %611 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %612 = sext i8 %611 to i32
  %613 = icmp ne i32 %612, 0
  br i1 %613, label %614, label %._crit_edge64.loopexit

; <label>:614:                                    ; preds = %610
  call void @unroll_loop(i32 0)
  %615 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %616 = sext i8 %615 to i32
  %617 = icmp eq i32 %616, 47
  br i1 %617, label %618, label %619

; <label>:618:                                    ; preds = %614
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), i8** @progName, align 8
  br label %619

; <label>:619:                                    ; preds = %618, %614
  call void @__loop_iteration_test___0()
  %620 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %621 = sext i8 %620 to i32
  %622 = icmp ne i32 %621, 0
  br i1 %622, label %623, label %._crit_edge64.loopexit

; <label>:623:                                    ; preds = %619
  call void @unroll_loop(i32 0)
  %624 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %625 = sext i8 %624 to i32
  %626 = icmp eq i32 %625, 47
  br i1 %626, label %627, label %628

; <label>:627:                                    ; preds = %623
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), i8** @progName, align 8
  br label %628

; <label>:628:                                    ; preds = %627, %623
  call void @__loop_iteration_test___0()
  %629 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %630 = sext i8 %629 to i32
  %631 = icmp ne i32 %630, 0
  br i1 %631, label %632, label %._crit_edge64.loopexit

; <label>:632:                                    ; preds = %628
  call void @unroll_loop(i32 0)
  %633 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %634 = sext i8 %633 to i32
  %635 = icmp eq i32 %634, 47
  br i1 %635, label %636, label %637

; <label>:636:                                    ; preds = %632
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), i8** @progName, align 8
  br label %637

; <label>:637:                                    ; preds = %636, %632
  call void @__loop_iteration_test___0()
  %638 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %639 = sext i8 %638 to i32
  %640 = icmp ne i32 %639, 0
  br i1 %640, label %641, label %._crit_edge64.loopexit

; <label>:641:                                    ; preds = %637
  call void @unroll_loop(i32 0)
  %642 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %643 = sext i8 %642 to i32
  %644 = icmp eq i32 %643, 47
  br i1 %644, label %645, label %646

; <label>:645:                                    ; preds = %641
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), i8** @progName, align 8
  br label %646

; <label>:646:                                    ; preds = %645, %641
  call void @__loop_iteration_test___0()
  %647 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %648 = sext i8 %647 to i32
  %649 = icmp ne i32 %648, 0
  br i1 %649, label %650, label %._crit_edge64.loopexit

; <label>:650:                                    ; preds = %646
  call void @unroll_loop(i32 0)
  %651 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %652 = sext i8 %651 to i32
  %653 = icmp eq i32 %652, 47
  br i1 %653, label %654, label %655

; <label>:654:                                    ; preds = %650
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), i8** @progName, align 8
  br label %655

; <label>:655:                                    ; preds = %654, %650
  call void @__loop_iteration_test___0()
  %656 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), align 1
  %657 = sext i8 %656 to i32
  br label %._crit_edge64.loopexit
}

declare void @__loop_termination_test___0()

declare void @__loop_iteration_test___0()

; Function Attrs: noinline nounwind uwtable
define internal void @addFlagsFromEnvVar_clone(%struct.zzzz**, i8*) #0 {
  %3 = call i8* @getenv(i8* %1) #9
  %4 = icmp ne i64 0, 0
  %5 = icmp ne i8* null, null
  br i1 false, label %6, label %._crit_edge12

; <label>:6:                                      ; preds = %2
  %7 = load i8, i8* null, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %._crit_edge12, label %.lr.ph11.preheader

.lr.ph11.preheader:                               ; preds = %6
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %55, %.lr.ph11.preheader
  %.09 = phi i8* [ %.1.lcssa, %55 ], [ null, %.lr.ph11.preheader ]
  %.028 = phi i32 [ %42, %55 ], [ 0, %.lr.ph11.preheader ]
  call void @unroll_loop(i32 11)
  %10 = sext i32 %.028 to i64
  %11 = call i16** @__ctype_b_loc() #13
  %12 = load i16*, i16** %11, align 8
  %scevgep = getelementptr i8, i8* %.09, i64 -1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %10
  br label %13

; <label>:13:                                     ; preds = %13, %.lr.ph11
  %lsr.iv = phi i8* [ %scevgep2, %13 ], [ %scevgep1, %.lr.ph11 ]
  %scevgep3 = getelementptr i8, i8* %lsr.iv, i64 1
  %14 = load i8, i8* %scevgep3, align 1
  %15 = sext i8 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i16, i16* %12, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = and i32 %19, 8192
  %21 = icmp ne i32 %20, 0
  %scevgep2 = getelementptr i8, i8* %lsr.iv, i64 1
  br i1 %21, label %13, label %22

; <label>:22:                                     ; preds = %13
  %.1.lcssa = phi i8* [ %scevgep2, %13 ]
  br label %23

; <label>:23:                                     ; preds = %39, %22
  %lsr.iv4 = phi i64 [ %lsr.iv.next, %39 ], [ -1, %22 ]
  %scevgep7 = getelementptr i8, i8* %.1.lcssa, i64 %lsr.iv4
  %scevgep8 = getelementptr i8, i8* %scevgep7, i64 1
  %24 = load i8, i8* %scevgep8, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %39

; <label>:27:                                     ; preds = %23
  %28 = call i16** @__ctype_b_loc() #13
  %29 = load i16*, i16** %28, align 8
  %scevgep5 = getelementptr i8, i8* %.1.lcssa, i64 %lsr.iv4
  %scevgep6 = getelementptr i8, i8* %scevgep5, i64 1
  %30 = load i8, i8* %scevgep6, align 1
  %31 = sext i8 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %29, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = and i32 %35, 8192
  %37 = icmp ne i32 %36, 0
  %38 = xor i1 %37, true
  br label %39

; <label>:39:                                     ; preds = %27, %23
  %40 = phi i1 [ false, %23 ], [ %38, %27 ]
  %lsr.iv.next = add i64 %lsr.iv4, 1
  br i1 %40, label %23, label %41

; <label>:41:                                     ; preds = %39
  %.13.lcssa.wide = phi i64 [ %lsr.iv.next, %39 ]
  %42 = trunc i64 %.13.lcssa.wide to i32
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %55

; <label>:44:                                     ; preds = %41
  %45 = icmp sgt i32 %42, 1024
  %spec.select = select i1 %45, i32 1024, i32 %42
  %46 = icmp slt i32 0, %spec.select
  br i1 %46, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %44
  %47 = sext i32 %spec.select to i64
  br label %48

; <label>:48:                                     ; preds = %48, %.lr.ph
  %indvars.iv6 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next7, %48 ]
  %indvars.iv610 = inttoptr i64 %indvars.iv6 to i8*
  %scevgep9 = getelementptr i8, i8* %.1.lcssa, i64 %indvars.iv6
  %49 = load i8, i8* %scevgep9, align 1
  %scevgep11 = getelementptr [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %indvars.iv6
  store i8 %49, i8* %scevgep11, align 1
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %50 = icmp slt i64 %indvars.iv.next7, %47
  br i1 %50, label %48, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %48
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %44
  %51 = sext i32 %spec.select to i64
  %52 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %51
  store i8 0, i8* %52, align 1
  %53 = load %struct.zzzz*, %struct.zzzz** %0, align 8
  %54 = call %struct.zzzz* @snocString(%struct.zzzz* %53, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 0))
  store %struct.zzzz* %54, %struct.zzzz** %0, align 8
  br label %55

; <label>:55:                                     ; preds = %._crit_edge, %41
  %56 = sext i32 %42 to i64
  %57 = getelementptr inbounds i8, i8* %.1.lcssa, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %._crit_edge12.loopexit, label %.lr.ph11

._crit_edge12.loopexit:                           ; preds = %55
  br label %._crit_edge12

._crit_edge12:                                    ; preds = %._crit_edge12.loopexit, %6, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @addFlagsFromEnvVar_clone.9(%struct.zzzz**, i8*) #0 {
  %3 = call i8* @getenv(i8* %1) #9
  %4 = icmp ne i64 0, 0
  %5 = icmp ne i8* null, null
  br i1 false, label %6, label %._crit_edge12

; <label>:6:                                      ; preds = %2
  %7 = load i8, i8* null, align 1
  %8 = sext i8 %7 to i32
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %._crit_edge12, label %.lr.ph11.preheader

.lr.ph11.preheader:                               ; preds = %6
  br label %.lr.ph11

.lr.ph11:                                         ; preds = %55, %.lr.ph11.preheader
  %.09 = phi i8* [ %.1.lcssa, %55 ], [ null, %.lr.ph11.preheader ]
  %.028 = phi i32 [ %42, %55 ], [ 0, %.lr.ph11.preheader ]
  call void @unroll_loop(i32 11)
  %10 = sext i32 %.028 to i64
  %11 = call i16** @__ctype_b_loc() #13
  %12 = load i16*, i16** %11, align 8
  %scevgep = getelementptr i8, i8* %.09, i64 -1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %10
  br label %13

; <label>:13:                                     ; preds = %13, %.lr.ph11
  %lsr.iv = phi i8* [ %scevgep2, %13 ], [ %scevgep1, %.lr.ph11 ]
  %scevgep3 = getelementptr i8, i8* %lsr.iv, i64 1
  %14 = load i8, i8* %scevgep3, align 1
  %15 = sext i8 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i16, i16* %12, i64 %16
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = and i32 %19, 8192
  %21 = icmp ne i32 %20, 0
  %scevgep2 = getelementptr i8, i8* %lsr.iv, i64 1
  br i1 %21, label %13, label %22

; <label>:22:                                     ; preds = %13
  %.1.lcssa = phi i8* [ %scevgep2, %13 ]
  br label %23

; <label>:23:                                     ; preds = %39, %22
  %lsr.iv4 = phi i64 [ %lsr.iv.next, %39 ], [ -1, %22 ]
  %scevgep7 = getelementptr i8, i8* %.1.lcssa, i64 %lsr.iv4
  %scevgep8 = getelementptr i8, i8* %scevgep7, i64 1
  %24 = load i8, i8* %scevgep8, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %39

; <label>:27:                                     ; preds = %23
  %28 = call i16** @__ctype_b_loc() #13
  %29 = load i16*, i16** %28, align 8
  %scevgep5 = getelementptr i8, i8* %.1.lcssa, i64 %lsr.iv4
  %scevgep6 = getelementptr i8, i8* %scevgep5, i64 1
  %30 = load i8, i8* %scevgep6, align 1
  %31 = sext i8 %30 to i32
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %29, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = and i32 %35, 8192
  %37 = icmp ne i32 %36, 0
  %38 = xor i1 %37, true
  br label %39

; <label>:39:                                     ; preds = %27, %23
  %40 = phi i1 [ false, %23 ], [ %38, %27 ]
  %lsr.iv.next = add i64 %lsr.iv4, 1
  br i1 %40, label %23, label %41

; <label>:41:                                     ; preds = %39
  %.13.lcssa.wide = phi i64 [ %lsr.iv.next, %39 ]
  %42 = trunc i64 %.13.lcssa.wide to i32
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %55

; <label>:44:                                     ; preds = %41
  %45 = icmp sgt i32 %42, 1024
  %spec.select = select i1 %45, i32 1024, i32 %42
  %46 = icmp slt i32 0, %spec.select
  br i1 %46, label %.lr.ph, label %._crit_edge

.lr.ph:                                           ; preds = %44
  %47 = sext i32 %spec.select to i64
  br label %48

; <label>:48:                                     ; preds = %48, %.lr.ph
  %indvars.iv6 = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next7, %48 ]
  %indvars.iv610 = inttoptr i64 %indvars.iv6 to i8*
  %scevgep9 = getelementptr i8, i8* %.1.lcssa, i64 %indvars.iv6
  %49 = load i8, i8* %scevgep9, align 1
  %scevgep11 = getelementptr [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %indvars.iv6
  store i8 %49, i8* %scevgep11, align 1
  %indvars.iv.next7 = add nuw nsw i64 %indvars.iv6, 1
  %50 = icmp slt i64 %indvars.iv.next7, %47
  br i1 %50, label %48, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %48
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %44
  %51 = sext i32 %spec.select to i64
  %52 = getelementptr inbounds [1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 %51
  store i8 0, i8* %52, align 1
  %53 = load %struct.zzzz*, %struct.zzzz** %0, align 8
  %54 = call %struct.zzzz* @snocString(%struct.zzzz* %53, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @tmpName, i64 0, i64 0))
  store %struct.zzzz* %54, %struct.zzzz** %0, align 8
  br label %55

; <label>:55:                                     ; preds = %._crit_edge, %41
  %56 = sext i32 %42 to i64
  %57 = getelementptr inbounds i8, i8* %.1.lcssa, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %._crit_edge12.loopexit, label %.lr.ph11

._crit_edge12.loopexit:                           ; preds = %55
  br label %._crit_edge12

._crit_edge12:                                    ; preds = %._crit_edge12.loopexit, %6, %2
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old.28(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), align 1
  %39 = sext i8 98 to i32
  %40 = icmp eq i32 98, 47
  br i1 false, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %37
  call void @__loop_iteration_test___0()
  %43 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %44 = sext i8 122 to i32
  %45 = icmp ne i32 122, 0
  br i1 true, label %489, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %656, %647, %638, %629, %620, %611, %602, %593, %584, %575, %566, %557, %548, %539, %530, %521, %512, %503, %494, %42
  call void @__loop_termination_test___0()
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone(%struct.zzzz** %22, i8* %46)
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone.9(%struct.zzzz** %22, i8* %47)
  %48 = sub nsw i32 3, 1, !track_argc !10
  %49 = icmp sle i32 1, 2
  br i1 true, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %50 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %51 = load i8*, i8** %scevgep4, align 8
  %52 = call %struct.zzzz* @snocString_clone(%struct.zzzz* null, i8* %51)
  store %struct.zzzz* %52, %struct.zzzz** %22, align 8
  br i1 true, label %.lr.ph57.1, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57.1, %.lr.ph57
  call void @__loop_termination_test___1()
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %53 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %54 = icmp ne i64 10000562, 0
  %55 = icmp ne %struct.zzzz* %53, null
  br i1 true, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %83, %.lr.ph53.preheader
  %.051 = phi i8 [ %.1, %83 ], [ 1, %.lr.ph53.preheader ]
  %.0149 = phi %struct.zzzz* [ %85, %83 ], [ %53, %.lr.ph53.preheader ]
  call void @unroll_loop(i32 2)
  %56 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @strcmp(i8* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %83, label %60

; <label>:60:                                     ; preds = %.lr.ph53
  %61 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 0
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i32
  %66 = icmp eq i32 %65, 45
  %67 = zext i8 %.051 to i32
  %68 = icmp ne i32 %67, 0
  %or.cond = and i1 %66, %68
  br i1 %or.cond, label %83, label %69

; <label>:69:                                     ; preds = %60
  %70 = load i32, i32* @numFileNames, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* @numFileNames, align 4
  %72 = load i32, i32* @longestFileName, align 4
  %73 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = call i64 @strlen(i8* %74) #10
  %76 = trunc i64 %75 to i32
  %77 = icmp slt i32 %72, %76
  br i1 %77, label %78, label %83

; <label>:78:                                     ; preds = %69
  %79 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = call i64 @strlen(i8* %80) #10
  %82 = trunc i64 %81 to i32
  store i32 %82, i32* @longestFileName, align 4
  br label %83

; <label>:83:                                     ; preds = %78, %69, %60, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ %.051, %60 ], [ %.051, %78 ], [ %.051, %69 ]
  %84 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.0149, i32 0, i32 1
  %85 = load %struct.zzzz*, %struct.zzzz** %84, align 8
  %86 = icmp ne %struct.zzzz* %85, null
  br i1 %86, label %.lr.ph53, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %83
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %87 = load i32, i32* @numFileNames, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %91

; <label>:90:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %91

; <label>:91:                                     ; preds = %90, %89
  store i32 1, i32* @opMode, align 4
  %92 = load i8*, i8** @progName, align 8
  %93 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %94 = call i8* @strstr(i8* %92, i8* %93) #10, !track !11
  %95 = icmp ne i8* %94, null
  br i1 %95, label %101, label %96

; <label>:96:                                     ; preds = %91
  %97 = load i8*, i8** @progName, align 8
  %98 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %99 = call i8* @strstr(i8* %97, i8* %98) #10, !track !12
  %100 = icmp ne i8* %99, null
  br i1 %100, label %101, label %102

; <label>:101:                                    ; preds = %96, %91
  store i32 2, i32* @opMode, align 4
  br label %102

; <label>:102:                                    ; preds = %101, %96
  %103 = load i8*, i8** @progName, align 8
  %104 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %105 = call i8* @strstr(i8* %103, i8* %104) #10, !track !13
  %106 = icmp ne i8* %105, null
  br i1 %106, label %122, label %107

; <label>:107:                                    ; preds = %102
  %108 = load i8*, i8** @progName, align 8
  %109 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %110 = call i8* @strstr(i8* %108, i8* %109) #10, !track !14
  %111 = icmp ne i8* %110, null
  br i1 %111, label %122, label %112

; <label>:112:                                    ; preds = %107
  %113 = load i8*, i8** @progName, align 8
  %114 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %115 = call i8* @strstr(i8* %113, i8* %114) #10, !track !15
  %116 = icmp ne i8* %115, null
  br i1 %116, label %122, label %117

; <label>:117:                                    ; preds = %112
  %118 = load i8*, i8** @progName, align 8
  %119 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %120 = call i8* @strstr(i8* %118, i8* %119) #10, !track !16
  %121 = icmp ne i8* %120, null
  br i1 %121, label %122, label %127

; <label>:122:                                    ; preds = %117, %112, %107, %102
  store i32 2, i32* @opMode, align 4
  %123 = load i32, i32* @numFileNames, align 4
  %124 = icmp eq i32 %123, 0
  %125 = zext i1 %124 to i64
  %126 = select i1 %124, i32 1, i32 2
  store i32 %126, i32* @srcMode, align 4
  br label %127

; <label>:127:                                    ; preds = %122, %117
  %128 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %129 = icmp ne %struct.zzzz* %128, null
  br i1 %129, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %127
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %._crit_edge43, %.lr.ph48.preheader
  %.1244 = phi %struct.zzzz* [ %196, %._crit_edge43 ], [ %128, %.lr.ph48.preheader ]
  call void @unroll_loop(i32 3)
  %130 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = call i32 @strcmp(i8* %131, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %.loopexit17.loopexit, label %134

; <label>:134:                                    ; preds = %.lr.ph48
  %135 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 0
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %139, 45
  br i1 %140, label %141, label %._crit_edge43

; <label>:141:                                    ; preds = %134
  %142 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 1
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp ne i32 %146, 45
  br i1 %147, label %148, label %._crit_edge43

; <label>:148:                                    ; preds = %141
  %149 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 1
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %148
  %155 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %190, %.lr.ph42.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph42.preheader ], [ %lsr.iv.next, %190 ]
  call void @unroll_loop(i32 4)
  %156 = load i8*, i8** %155, align 8
  %scevgep = getelementptr i8, i8* %156, i64 1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %157 = load i8, i8* %scevgep1, align 1
  %158 = sext i8 %157 to i32
  switch i32 %158, label %182 [
    i32 99, label %159
    i32 100, label %160
    i32 122, label %161
    i32 102, label %162
    i32 116, label %163
    i32 107, label %164
    i32 115, label %165
    i32 113, label %166
    i32 49, label %167
    i32 50, label %168
    i32 51, label %169
    i32 52, label %170
    i32 53, label %171
    i32 54, label %172
    i32 55, label %173
    i32 56, label %174
    i32 57, label %175
    i32 86, label %176
    i32 76, label %176
    i32 118, label %177
    i32 104, label %180
  ]

; <label>:159:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %190

; <label>:160:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %190

; <label>:161:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %190

; <label>:162:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %190

; <label>:163:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %190

; <label>:164:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %190

; <label>:165:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %190

; <label>:166:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %190

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %190

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %190

; <label>:169:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %190

; <label>:170:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %190

; <label>:171:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %190

; <label>:172:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %190

; <label>:173:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %190

; <label>:174:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %190

; <label>:175:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %190

; <label>:176:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %190

; <label>:177:                                    ; preds = %.lr.ph42
  %178 = load i32, i32* @verbosity, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* @verbosity, align 4
  br label %190

; <label>:180:                                    ; preds = %.lr.ph42
  %181 = load i8*, i8** @progName, align 8
  call void @usage(i8* %181)
  call void @exit(i32 0) #11
  unreachable

; <label>:182:                                    ; preds = %.lr.ph42
  %.12.lcssa15 = phi %struct.zzzz* [ %.1244, %.lr.ph42 ]
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %184 = load i8*, i8** @progName, align 8
  %185 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %188 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %183, i8* %187, i8* %184, i8* %186)
  %189 = load i8*, i8** @progName, align 8
  call void @usage(i8* %189)
  call void @exit(i32 1) #11
  unreachable

; <label>:190:                                    ; preds = %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167, %166, %165, %164, %163, %162, %161, %160, %159
  %191 = load i8*, i8** %149, align 8
  %scevgep2 = getelementptr i8, i8* %191, i64 2
  %scevgep3 = getelementptr i8, i8* %scevgep2, i64 %lsr.iv
  %192 = load i8, i8* %scevgep3, align 1
  %193 = sext i8 %192 to i32
  %194 = icmp ne i32 %193, 0
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %194, label %.lr.ph42, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %190
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %148, %141, %134
  %.1245 = phi %struct.zzzz* [ %.1244, %141 ], [ %.1244, %134 ], [ %.1244, %148 ], [ %.1244, %._crit_edge43.loopexit ]
  %195 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1245, i32 0, i32 1
  %196 = load %struct.zzzz*, %struct.zzzz** %195, align 8
  %197 = icmp ne %struct.zzzz* %196, null
  br i1 %197, label %.lr.ph48, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %._crit_edge43, %.lr.ph48
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %127
  %198 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %199 = icmp ne %struct.zzzz* %198, null
  br i1 %199, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %322, %.lr.ph39.preheader
  %.2337 = phi %struct.zzzz* [ %324, %322 ], [ %198, %.lr.ph39.preheader ]
  call void @unroll_loop(i32 5)
  %200 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  %202 = call i32 @strcmp(i8* %201, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %.loopexit.loopexit, label %204

; <label>:204:                                    ; preds = %.lr.ph39
  %205 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  %207 = call i32 @strcmp(i8* %206, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %210

; <label>:209:                                    ; preds = %204
  store i32 2, i32* @srcMode, align 4
  br label %322

; <label>:210:                                    ; preds = %204
  %211 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = call i32 @strcmp(i8* %212, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

; <label>:215:                                    ; preds = %210
  store i32 2, i32* @opMode, align 4
  br label %322

; <label>:216:                                    ; preds = %210
  %217 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = call i32 @strcmp(i8* %218, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

; <label>:221:                                    ; preds = %216
  store i32 1, i32* @opMode, align 4
  br label %322

; <label>:222:                                    ; preds = %216
  %223 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = call i32 @strcmp(i8* %224, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

; <label>:227:                                    ; preds = %222
  store i8 1, i8* @forceOverwrite, align 1
  br label %322

; <label>:228:                                    ; preds = %222
  %229 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %230 = load i8*, i8** %229, align 8
  %231 = call i32 @strcmp(i8* %230, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

; <label>:233:                                    ; preds = %228
  store i32 3, i32* @opMode, align 4
  br label %322

; <label>:234:                                    ; preds = %228
  %235 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %236 = load i8*, i8** %235, align 8
  %237 = call i32 @strcmp(i8* %236, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

; <label>:239:                                    ; preds = %234
  store i8 1, i8* @keepInputFiles, align 1
  br label %322

; <label>:240:                                    ; preds = %234
  %241 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = call i32 @strcmp(i8* %242, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

; <label>:245:                                    ; preds = %240
  store i8 1, i8* @smallMode, align 1
  br label %322

; <label>:246:                                    ; preds = %240
  %247 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = call i32 @strcmp(i8* %248, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

; <label>:251:                                    ; preds = %246
  store i8 0, i8* @noisy, align 1
  br label %322

; <label>:252:                                    ; preds = %246
  %253 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %254 = load i8*, i8** %253, align 8
  %255 = call i32 @strcmp(i8* %254, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

; <label>:257:                                    ; preds = %252
  call void @license()
  br label %322

; <label>:258:                                    ; preds = %252
  %259 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = call i32 @strcmp(i8* %260, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

; <label>:263:                                    ; preds = %258
  call void @license()
  br label %322

; <label>:264:                                    ; preds = %258
  %265 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8
  %267 = call i32 @strcmp(i8* %266, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

; <label>:269:                                    ; preds = %264
  store i32 1, i32* @workFactor, align 4
  br label %322

; <label>:270:                                    ; preds = %264
  %271 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = call i32 @strcmp(i8* %272, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  br i1 %274, label %277, label %278

; <label>:277:                                    ; preds = %270
  call void @redundant(i8* %276)
  br label %322

; <label>:278:                                    ; preds = %270
  %279 = call i32 @strcmp(i8* %276, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  br i1 %280, label %283, label %284

; <label>:283:                                    ; preds = %278
  call void @redundant(i8* %282)
  br label %322

; <label>:284:                                    ; preds = %278
  %285 = call i32 @strcmp(i8* %282, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

; <label>:287:                                    ; preds = %284
  store i32 1, i32* @blockSize100k, align 4
  br label %322

; <label>:288:                                    ; preds = %284
  %289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = call i32 @strcmp(i8* %290, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

; <label>:293:                                    ; preds = %288
  store i32 9, i32* @blockSize100k, align 4
  br label %322

; <label>:294:                                    ; preds = %288
  %295 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %296 = load i8*, i8** %295, align 8
  %297 = call i32 @strcmp(i8* %296, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %302

; <label>:299:                                    ; preds = %294
  %300 = load i32, i32* @verbosity, align 4
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* @verbosity, align 4
  br label %322

; <label>:302:                                    ; preds = %294
  %303 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %304 = load i8*, i8** %303, align 8
  %305 = call i32 @strcmp(i8* %304, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %309

; <label>:307:                                    ; preds = %302
  %308 = load i8*, i8** @progName, align 8
  call void @usage(i8* %308)
  call void @exit(i32 0) #11
  unreachable

; <label>:309:                                    ; preds = %302
  %310 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = call i32 @strncmp(i8* %311, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %322

; <label>:314:                                    ; preds = %309
  %.23.lcssa13 = phi %struct.zzzz* [ %.2337, %309 ]
  %315 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %316 = load i8*, i8** @progName, align 8
  %317 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %318 = load i8*, i8** %317, align 8
  %319 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %320 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %315, i8* %319, i8* %316, i8* %318)
  %321 = load i8*, i8** @progName, align 8
  call void @usage(i8* %321)
  call void @exit(i32 1) #11
  unreachable

; <label>:322:                                    ; preds = %309, %299, %293, %287, %283, %277, %269, %263, %257, %251, %245, %239, %233, %227, %221, %215, %209
  %323 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 1
  %324 = load %struct.zzzz*, %struct.zzzz** %323, align 8
  %325 = icmp ne %struct.zzzz* %324, null
  br i1 %325, label %.lr.ph39, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %322, %.lr.ph39
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %326 = load i32, i32* @verbosity, align 4
  %327 = icmp sgt i32 %326, 4
  br i1 %327, label %328, label %329

; <label>:328:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %329

; <label>:329:                                    ; preds = %328, %.loopexit
  %330 = load i32, i32* @opMode, align 4
  %331 = icmp eq i32 %330, 1
  br i1 %331, label %332, label %339

; <label>:332:                                    ; preds = %329
  %333 = load i8, i8* @smallMode, align 1
  %334 = zext i8 %333 to i32
  %335 = icmp ne i32 %334, 0
  %336 = load i32, i32* @blockSize100k, align 4
  %337 = icmp sgt i32 %336, 2
  %or.cond3 = and i1 %335, %337
  br i1 %or.cond3, label %338, label %339

; <label>:338:                                    ; preds = %332
  store i32 2, i32* @blockSize100k, align 4
  br label %339

; <label>:339:                                    ; preds = %338, %332, %329
  %340 = load i32, i32* @opMode, align 4
  %341 = icmp eq i32 %340, 3
  %342 = load i32, i32* @srcMode, align 4
  %343 = icmp eq i32 %342, 2
  %or.cond5 = and i1 %341, %343
  br i1 %or.cond5, label %344, label %349

; <label>:344:                                    ; preds = %339
  %345 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %346 = load i8*, i8** @progName, align 8
  %347 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %348 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %345, i8* %347, i8* %346)
  call void @exit(i32 1) #11
  unreachable

; <label>:349:                                    ; preds = %339
  %350 = load i32, i32* @srcMode, align 4
  %351 = icmp eq i32 %350, 2
  %352 = load i32, i32* @numFileNames, align 4
  %353 = icmp eq i32 %352, 0
  %or.cond7 = and i1 %351, %353
  br i1 %or.cond7, label %354, label %355

; <label>:354:                                    ; preds = %349
  store i32 1, i32* @srcMode, align 4
  br label %355

; <label>:355:                                    ; preds = %354, %349
  %356 = load i32, i32* @opMode, align 4
  %357 = icmp ne i32 %356, 1
  br i1 %357, label %358, label %359

; <label>:358:                                    ; preds = %355
  store i32 0, i32* @blockSize100k, align 4
  br label %359

; <label>:359:                                    ; preds = %358, %355
  %360 = load i32, i32* @srcMode, align 4
  %361 = icmp eq i32 %360, 3
  br i1 %361, label %362, label %366

; <label>:362:                                    ; preds = %359
  %363 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %364 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %365 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %366

; <label>:366:                                    ; preds = %362, %359
  %367 = load i32, i32* @opMode, align 4
  %368 = icmp eq i32 %367, 1
  br i1 %368, label %369, label %398

; <label>:369:                                    ; preds = %366
  %370 = load i32, i32* @srcMode, align 4
  %371 = icmp eq i32 %370, 1
  br i1 %371, label %372, label %373

; <label>:372:                                    ; preds = %369
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:373:                                    ; preds = %369
  %374 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %375 = icmp ne %struct.zzzz* %374, null
  br i1 %375, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %373
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %394, %.lr.ph23.preheader
  %.221 = phi i8 [ %.3, %394 ], [ 1, %.lr.ph23.preheader ]
  %.3419 = phi %struct.zzzz* [ %396, %394 ], [ %374, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 6)
  %376 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %377 = load i8*, i8** %376, align 8
  %378 = call i32 @strcmp(i8* %377, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %394, label %380

; <label>:380:                                    ; preds = %.lr.ph23
  %381 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = getelementptr inbounds i8, i8* %382, i64 0
  %384 = load i8, i8* %383, align 1
  %385 = sext i8 %384 to i32
  %386 = icmp eq i32 %385, 45
  %387 = zext i8 %.221 to i32
  %388 = icmp ne i32 %387, 0
  %or.cond9 = and i1 %386, %388
  br i1 %or.cond9, label %394, label %389

; <label>:389:                                    ; preds = %380
  %390 = load i32, i32* @numFilesProcessed, align 4
  %391 = add nsw i32 %390, 1
  store i32 %391, i32* @numFilesProcessed, align 4
  %392 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %393 = load i8*, i8** %392, align 8
  call void @compress(i8* %393)
  br label %394

; <label>:394:                                    ; preds = %389, %380, %.lr.ph23
  %.3 = phi i8 [ %.221, %389 ], [ 0, %.lr.ph23 ], [ %.221, %380 ]
  %395 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 1
  %396 = load %struct.zzzz*, %struct.zzzz** %395, align 8
  %397 = icmp ne %struct.zzzz* %396, null
  br i1 %397, label %.lr.ph23, label %._crit_edge24.loopexit

; <label>:398:                                    ; preds = %366
  %399 = load i32, i32* @opMode, align 4
  %400 = icmp eq i32 %399, 2
  br i1 %400, label %401, label %434

; <label>:401:                                    ; preds = %398
  store i8 0, i8* @unzFailsExist, align 1
  %402 = load i32, i32* @srcMode, align 4
  %403 = icmp eq i32 %402, 1
  br i1 %403, label %404, label %405

; <label>:404:                                    ; preds = %401
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:405:                                    ; preds = %401
  %406 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %407 = icmp ne %struct.zzzz* %406, null
  br i1 %407, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %405
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %426, %.lr.ph29.preheader
  %.427 = phi i8 [ %.5, %426 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %428, %426 ], [ %406, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %408 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %409 = load i8*, i8** %408, align 8
  %410 = call i32 @strcmp(i8* %409, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %426, label %412

; <label>:412:                                    ; preds = %.lr.ph29
  %413 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %414 = load i8*, i8** %413, align 8
  %415 = getelementptr inbounds i8, i8* %414, i64 0
  %416 = load i8, i8* %415, align 1
  %417 = sext i8 %416 to i32
  %418 = icmp eq i32 %417, 45
  %419 = zext i8 %.427 to i32
  %420 = icmp ne i32 %419, 0
  %or.cond11 = and i1 %418, %420
  br i1 %or.cond11, label %426, label %421

; <label>:421:                                    ; preds = %412
  %422 = load i32, i32* @numFilesProcessed, align 4
  %423 = add nsw i32 %422, 1
  store i32 %423, i32* @numFilesProcessed, align 4
  %424 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %425 = load i8*, i8** %424, align 8
  call void @uncompress(i8* %425)
  br label %426

; <label>:426:                                    ; preds = %421, %412, %.lr.ph29
  %.5 = phi i8 [ %.427, %421 ], [ 0, %.lr.ph29 ], [ %.427, %412 ]
  %427 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %428 = load %struct.zzzz*, %struct.zzzz** %427, align 8
  %429 = icmp ne %struct.zzzz* %428, null
  br i1 %429, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %426
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %405, %404
  %430 = load i8, i8* @unzFailsExist, align 1
  %431 = icmp ne i8 %430, 0
  br i1 %431, label %432, label %._crit_edge24

; <label>:432:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %433 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %433) #11
  unreachable

; <label>:434:                                    ; preds = %398
  store i8 0, i8* @testFailsExist, align 1
  %435 = load i32, i32* @srcMode, align 4
  %436 = icmp eq i32 %435, 1
  br i1 %436, label %437, label %438

; <label>:437:                                    ; preds = %434
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:438:                                    ; preds = %434
  %439 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %440 = icmp ne %struct.zzzz* %439, null
  br i1 %440, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %438
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %459, %.lr.ph35.preheader
  %.633 = phi i8 [ %.7, %459 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %461, %459 ], [ %439, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %441 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %442 = load i8*, i8** %441, align 8
  %443 = call i32 @strcmp(i8* %442, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %459, label %445

; <label>:445:                                    ; preds = %.lr.ph35
  %446 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %447 = load i8*, i8** %446, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 0
  %449 = load i8, i8* %448, align 1
  %450 = sext i8 %449 to i32
  %451 = icmp eq i32 %450, 45
  %452 = zext i8 %.633 to i32
  %453 = icmp ne i32 %452, 0
  %or.cond13 = and i1 %451, %453
  br i1 %or.cond13, label %459, label %454

; <label>:454:                                    ; preds = %445
  %455 = load i32, i32* @numFilesProcessed, align 4
  %456 = add nsw i32 %455, 1
  store i32 %456, i32* @numFilesProcessed, align 4
  %457 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %458 = load i8*, i8** %457, align 8
  call void @testf(i8* %458)
  br label %459

; <label>:459:                                    ; preds = %454, %445, %.lr.ph35
  %.7 = phi i8 [ %.633, %454 ], [ 0, %.lr.ph35 ], [ %.633, %445 ]
  %460 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %461 = load %struct.zzzz*, %struct.zzzz** %460, align 8
  %462 = icmp ne %struct.zzzz* %461, null
  br i1 %462, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %459
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %438, %437
  %463 = load i8, i8* @testFailsExist, align 1
  %464 = zext i8 %463 to i32
  %465 = icmp ne i32 %464, 0
  br i1 %465, label %466, label %._crit_edge24

; <label>:466:                                    ; preds = %._crit_edge36
  %467 = load i8, i8* @noisy, align 1
  %468 = zext i8 %467 to i32
  %469 = icmp ne i32 %468, 0
  br i1 %469, label %470, label %._crit_edge24

; <label>:470:                                    ; preds = %466
  %471 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %472 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %473 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %471, i8* %472)
  call void @setExit(i32 2)
  %474 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %474) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %394
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %466, %._crit_edge36, %._crit_edge30, %373, %372
  %475 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %476 = icmp ne %struct.zzzz* %475, null
  br i1 %476, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %485, %.lr.ph.preheader
  %.6718 = phi %struct.zzzz* [ %478, %485 ], [ %475, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %478 = load %struct.zzzz*, %struct.zzzz** %477, align 8
  %479 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %480 = load i8*, i8** %479, align 8
  %481 = icmp ne i8* %480, null
  br i1 %481, label %482, label %485

; <label>:482:                                    ; preds = %.lr.ph
  %483 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %484 = load i8*, i8** %483, align 8
  call void @free(i8* %484) #9
  br label %485

; <label>:485:                                    ; preds = %482, %.lr.ph
  %486 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %486) #9
  %487 = icmp ne %struct.zzzz* %478, null
  br i1 %487, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %485
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %488 = load i32, i32* @exitValue, align 4
  ret i32 %488

; <label>:489:                                    ; preds = %42
  call void @unroll_loop(i32 0)
  %490 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %491 = sext i8 122 to i32
  %492 = icmp eq i32 122, 47
  br i1 false, label %493, label %494

; <label>:493:                                    ; preds = %489
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), i8** @progName, align 8
  br label %494

; <label>:494:                                    ; preds = %493, %489
  call void @__loop_iteration_test___0()
  %495 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %496 = sext i8 105 to i32
  %497 = icmp ne i32 105, 0
  br i1 true, label %498, label %._crit_edge64.loopexit

; <label>:498:                                    ; preds = %494
  call void @unroll_loop(i32 0)
  %499 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %500 = sext i8 105 to i32
  %501 = icmp eq i32 105, 47
  br i1 false, label %502, label %503

; <label>:502:                                    ; preds = %498
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), i8** @progName, align 8
  br label %503

; <label>:503:                                    ; preds = %502, %498
  call void @__loop_iteration_test___0()
  %504 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %505 = sext i8 112 to i32
  %506 = icmp ne i32 112, 0
  br i1 true, label %507, label %._crit_edge64.loopexit

; <label>:507:                                    ; preds = %503
  call void @unroll_loop(i32 0)
  %508 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %509 = sext i8 112 to i32
  %510 = icmp eq i32 112, 47
  br i1 false, label %511, label %512

; <label>:511:                                    ; preds = %507
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), i8** @progName, align 8
  br label %512

; <label>:512:                                    ; preds = %511, %507
  call void @__loop_iteration_test___0()
  %513 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %514 = sext i8 50 to i32
  %515 = icmp ne i32 50, 0
  br i1 true, label %516, label %._crit_edge64.loopexit

; <label>:516:                                    ; preds = %512
  call void @unroll_loop(i32 0)
  %517 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %518 = sext i8 50 to i32
  %519 = icmp eq i32 50, 47
  br i1 false, label %520, label %521

; <label>:520:                                    ; preds = %516
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), i8** @progName, align 8
  br label %521

; <label>:521:                                    ; preds = %520, %516
  call void @__loop_iteration_test___0()
  %522 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %523 = sext i8 0 to i32
  %524 = icmp ne i32 0, 0
  br i1 false, label %525, label %._crit_edge64.loopexit

; <label>:525:                                    ; preds = %521
  call void @unroll_loop(i32 0)
  %526 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %527 = sext i8 %526 to i32
  %528 = icmp eq i32 %527, 47
  br i1 %528, label %529, label %530

; <label>:529:                                    ; preds = %525
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), i8** @progName, align 8
  br label %530

; <label>:530:                                    ; preds = %529, %525
  call void @__loop_iteration_test___0()
  %531 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %532 = sext i8 %531 to i32
  %533 = icmp ne i32 %532, 0
  br i1 %533, label %534, label %._crit_edge64.loopexit

; <label>:534:                                    ; preds = %530
  call void @unroll_loop(i32 0)
  %535 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %536 = sext i8 %535 to i32
  %537 = icmp eq i32 %536, 47
  br i1 %537, label %538, label %539

; <label>:538:                                    ; preds = %534
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), i8** @progName, align 8
  br label %539

; <label>:539:                                    ; preds = %538, %534
  call void @__loop_iteration_test___0()
  %540 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %541 = sext i8 %540 to i32
  %542 = icmp ne i32 %541, 0
  br i1 %542, label %543, label %._crit_edge64.loopexit

; <label>:543:                                    ; preds = %539
  call void @unroll_loop(i32 0)
  %544 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %545 = sext i8 %544 to i32
  %546 = icmp eq i32 %545, 47
  br i1 %546, label %547, label %548

; <label>:547:                                    ; preds = %543
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), i8** @progName, align 8
  br label %548

; <label>:548:                                    ; preds = %547, %543
  call void @__loop_iteration_test___0()
  %549 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %550 = sext i8 %549 to i32
  %551 = icmp ne i32 %550, 0
  br i1 %551, label %552, label %._crit_edge64.loopexit

; <label>:552:                                    ; preds = %548
  call void @unroll_loop(i32 0)
  %553 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %554 = sext i8 %553 to i32
  %555 = icmp eq i32 %554, 47
  br i1 %555, label %556, label %557

; <label>:556:                                    ; preds = %552
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), i8** @progName, align 8
  br label %557

; <label>:557:                                    ; preds = %556, %552
  call void @__loop_iteration_test___0()
  %558 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %559 = sext i8 %558 to i32
  %560 = icmp ne i32 %559, 0
  br i1 %560, label %561, label %._crit_edge64.loopexit

; <label>:561:                                    ; preds = %557
  call void @unroll_loop(i32 0)
  %562 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %563 = sext i8 %562 to i32
  %564 = icmp eq i32 %563, 47
  br i1 %564, label %565, label %566

; <label>:565:                                    ; preds = %561
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), i8** @progName, align 8
  br label %566

; <label>:566:                                    ; preds = %565, %561
  call void @__loop_iteration_test___0()
  %567 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %568 = sext i8 %567 to i32
  %569 = icmp ne i32 %568, 0
  br i1 %569, label %570, label %._crit_edge64.loopexit

; <label>:570:                                    ; preds = %566
  call void @unroll_loop(i32 0)
  %571 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %572 = sext i8 %571 to i32
  %573 = icmp eq i32 %572, 47
  br i1 %573, label %574, label %575

; <label>:574:                                    ; preds = %570
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), i8** @progName, align 8
  br label %575

; <label>:575:                                    ; preds = %574, %570
  call void @__loop_iteration_test___0()
  %576 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %577 = sext i8 %576 to i32
  %578 = icmp ne i32 %577, 0
  br i1 %578, label %579, label %._crit_edge64.loopexit

; <label>:579:                                    ; preds = %575
  call void @unroll_loop(i32 0)
  %580 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %581 = sext i8 %580 to i32
  %582 = icmp eq i32 %581, 47
  br i1 %582, label %583, label %584

; <label>:583:                                    ; preds = %579
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), i8** @progName, align 8
  br label %584

; <label>:584:                                    ; preds = %583, %579
  call void @__loop_iteration_test___0()
  %585 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %586 = sext i8 %585 to i32
  %587 = icmp ne i32 %586, 0
  br i1 %587, label %588, label %._crit_edge64.loopexit

; <label>:588:                                    ; preds = %584
  call void @unroll_loop(i32 0)
  %589 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %590 = sext i8 %589 to i32
  %591 = icmp eq i32 %590, 47
  br i1 %591, label %592, label %593

; <label>:592:                                    ; preds = %588
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), i8** @progName, align 8
  br label %593

; <label>:593:                                    ; preds = %592, %588
  call void @__loop_iteration_test___0()
  %594 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %595 = sext i8 %594 to i32
  %596 = icmp ne i32 %595, 0
  br i1 %596, label %597, label %._crit_edge64.loopexit

; <label>:597:                                    ; preds = %593
  call void @unroll_loop(i32 0)
  %598 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %599 = sext i8 %598 to i32
  %600 = icmp eq i32 %599, 47
  br i1 %600, label %601, label %602

; <label>:601:                                    ; preds = %597
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), i8** @progName, align 8
  br label %602

; <label>:602:                                    ; preds = %601, %597
  call void @__loop_iteration_test___0()
  %603 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %604 = sext i8 %603 to i32
  %605 = icmp ne i32 %604, 0
  br i1 %605, label %606, label %._crit_edge64.loopexit

; <label>:606:                                    ; preds = %602
  call void @unroll_loop(i32 0)
  %607 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %608 = sext i8 %607 to i32
  %609 = icmp eq i32 %608, 47
  br i1 %609, label %610, label %611

; <label>:610:                                    ; preds = %606
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), i8** @progName, align 8
  br label %611

; <label>:611:                                    ; preds = %610, %606
  call void @__loop_iteration_test___0()
  %612 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %613 = sext i8 %612 to i32
  %614 = icmp ne i32 %613, 0
  br i1 %614, label %615, label %._crit_edge64.loopexit

; <label>:615:                                    ; preds = %611
  call void @unroll_loop(i32 0)
  %616 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %617 = sext i8 %616 to i32
  %618 = icmp eq i32 %617, 47
  br i1 %618, label %619, label %620

; <label>:619:                                    ; preds = %615
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), i8** @progName, align 8
  br label %620

; <label>:620:                                    ; preds = %619, %615
  call void @__loop_iteration_test___0()
  %621 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %622 = sext i8 %621 to i32
  %623 = icmp ne i32 %622, 0
  br i1 %623, label %624, label %._crit_edge64.loopexit

; <label>:624:                                    ; preds = %620
  call void @unroll_loop(i32 0)
  %625 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %626 = sext i8 %625 to i32
  %627 = icmp eq i32 %626, 47
  br i1 %627, label %628, label %629

; <label>:628:                                    ; preds = %624
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), i8** @progName, align 8
  br label %629

; <label>:629:                                    ; preds = %628, %624
  call void @__loop_iteration_test___0()
  %630 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %631 = sext i8 %630 to i32
  %632 = icmp ne i32 %631, 0
  br i1 %632, label %633, label %._crit_edge64.loopexit

; <label>:633:                                    ; preds = %629
  call void @unroll_loop(i32 0)
  %634 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %635 = sext i8 %634 to i32
  %636 = icmp eq i32 %635, 47
  br i1 %636, label %637, label %638

; <label>:637:                                    ; preds = %633
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), i8** @progName, align 8
  br label %638

; <label>:638:                                    ; preds = %637, %633
  call void @__loop_iteration_test___0()
  %639 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %640 = sext i8 %639 to i32
  %641 = icmp ne i32 %640, 0
  br i1 %641, label %642, label %._crit_edge64.loopexit

; <label>:642:                                    ; preds = %638
  call void @unroll_loop(i32 0)
  %643 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %644 = sext i8 %643 to i32
  %645 = icmp eq i32 %644, 47
  br i1 %645, label %646, label %647

; <label>:646:                                    ; preds = %642
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), i8** @progName, align 8
  br label %647

; <label>:647:                                    ; preds = %646, %642
  call void @__loop_iteration_test___0()
  %648 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %649 = sext i8 %648 to i32
  %650 = icmp ne i32 %649, 0
  br i1 %650, label %651, label %._crit_edge64.loopexit

; <label>:651:                                    ; preds = %647
  call void @unroll_loop(i32 0)
  %652 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %653 = sext i8 %652 to i32
  %654 = icmp eq i32 %653, 47
  br i1 %654, label %655, label %656

; <label>:655:                                    ; preds = %651
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), i8** @progName, align 8
  br label %656

; <label>:656:                                    ; preds = %655, %651
  call void @__loop_iteration_test___0()
  %657 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), align 1
  %658 = sext i8 %657 to i32
  br label %._crit_edge64.loopexit

.lr.ph57.1:                                       ; preds = %.lr.ph57
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %659 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4, i64 1
  %660 = load i8*, i8** %scevgep7.1, align 8
  %661 = call %struct.zzzz* @snocString_clone.17(%struct.zzzz* %659, i8* %660)
  store %struct.zzzz* %661, %struct.zzzz** %22, align 8
  br label %._crit_edge58.loopexit
}

declare void @__loop_termination_test___1()

declare void @__loop_iteration_test___1()

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @snocString_clone(%struct.zzzz*, i8*) #2 {
  %3 = icmp eq i64 0, 0
  %4 = icmp eq %struct.zzzz* null, null
  br i1 true, label %5, label %16

; <label>:5:                                      ; preds = %2
  %6 = call %struct.zzzz* @mkCell_clone()
  %7 = getelementptr [6 x i8], [6 x i8]* @6, i64 0, i64 0
  %8 = call i64 @strlen(i8* %7) #10
  %9 = add i64 5, 5
  %10 = trunc i64 10 to i32
  %11 = call i8* @myMalloc_clone.15(i32 10)
  %12 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %6, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %6, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = call i8* @strcpy(i8* %14, i8* %1) #9, !track !18
  br label %29

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %18 = load %struct.zzzz*, %struct.zzzz** %17, align 8
  %19 = icmp ne %struct.zzzz* %18, null
  br i1 %19, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %16
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.012 = phi %struct.zzzz* [ %21, %.lr.ph ], [ null, %.lr.ph.preheader ]
  call void @unroll_loop(i32 12)
  %20 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.012, i32 0, i32 1
  %21 = load %struct.zzzz*, %struct.zzzz** %20, align 8
  %22 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %21, i32 0, i32 1
  %23 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %24 = icmp ne %struct.zzzz* %23, null
  br i1 %24, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.01.lcssa.ph = phi %struct.zzzz* [ %21, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %16
  %.01.lcssa = phi %struct.zzzz* [ null, %16 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %25 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  %26 = load %struct.zzzz*, %struct.zzzz** %25, align 8
  %27 = call %struct.zzzz* @snocString(%struct.zzzz* %26, i8* %1)
  %28 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  store %struct.zzzz* %27, %struct.zzzz** %28, align 8
  br label %29

; <label>:29:                                     ; preds = %._crit_edge, %5
  %.0 = phi %struct.zzzz* [ %6, %5 ], [ null, %._crit_edge ]
  ret %struct.zzzz* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @mkCell_clone() #2 {
  %1 = call i8* @myMalloc_clone(i32 16)
  %2 = bitcast i8* %1 to %struct.zzzz*
  %3 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 1
  store %struct.zzzz* null, %struct.zzzz** %4, align 8
  ret %struct.zzzz* %2
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @myMalloc_clone(i32) #2 {
  %2 = sext i32 16 to i64
  %3 = call noalias i8* @malloc(i64 16) #9, !track !55
  %4 = icmp eq i64 10000562, 0
  %5 = icmp eq i8* %3, null
  br i1 false, label %6, label %7

; <label>:6:                                      ; preds = %1
  call void @outOfMemory() #12
  unreachable

; <label>:7:                                      ; preds = %1
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @myMalloc_clone.15(i32) #2 {
  %2 = sext i32 10 to i64
  %3 = call noalias i8* @malloc(i64 10) #9, !track !55
  %4 = icmp eq i64 10000579, 0
  %5 = icmp eq i8* %3, null
  br i1 false, label %6, label %7

; <label>:6:                                      ; preds = %1
  call void @outOfMemory() #12
  unreachable

; <label>:7:                                      ; preds = %1
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @snocString_clone.17(%struct.zzzz*, i8*) #2 {
  %3 = icmp eq i64 10000562, 0
  %4 = icmp eq %struct.zzzz* %0, null
  br i1 false, label %5, label %15

; <label>:5:                                      ; preds = %2
  %6 = call %struct.zzzz* @mkCell()
  %7 = call i64 @strlen(i8* %1) #10
  %8 = add i64 5, %7
  %9 = trunc i64 %8 to i32
  %10 = call i8* @myMalloc(i32 %9)
  %11 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %6, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %6, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = call i8* @strcpy(i8* %13, i8* %1) #9, !track !18
  br label %29

; <label>:15:                                     ; preds = %2
  %16 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %0, i32 0, i32 1
  %17 = load %struct.zzzz*, %struct.zzzz** %16, align 8
  %18 = icmp ne i64 0, 0
  %19 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %15
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.012 = phi %struct.zzzz* [ %21, %.lr.ph ], [ %0, %.lr.ph.preheader ]
  call void @unroll_loop(i32 12)
  %20 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.012, i32 0, i32 1
  %21 = load %struct.zzzz*, %struct.zzzz** %20, align 8
  %22 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %21, i32 0, i32 1
  %23 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %24 = icmp ne %struct.zzzz* %23, null
  br i1 %24, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.01.lcssa.ph = phi %struct.zzzz* [ %21, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %15
  %.01.lcssa = phi %struct.zzzz* [ %0, %15 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %25 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  %26 = load %struct.zzzz*, %struct.zzzz** %25, align 8
  %27 = call %struct.zzzz* @snocString_clone.19(%struct.zzzz* null, i8* %1)
  %28 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  store %struct.zzzz* %27, %struct.zzzz** %28, align 8
  br label %29

; <label>:29:                                     ; preds = %._crit_edge, %5
  %.0 = phi %struct.zzzz* [ %6, %5 ], [ %0, %._crit_edge ]
  ret %struct.zzzz* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @snocString_clone.19(%struct.zzzz*, i8*) #2 {
  %3 = icmp eq i64 0, 0
  %4 = icmp eq %struct.zzzz* null, null
  br i1 true, label %5, label %16

; <label>:5:                                      ; preds = %2
  %6 = call %struct.zzzz* @mkCell_clone.21()
  %7 = getelementptr [10 x i8], [10 x i8]* @7, i64 0, i64 0
  %8 = call i64 @strlen(i8* %7) #10
  %9 = add i64 5, 9
  %10 = trunc i64 14 to i32
  %11 = call i8* @myMalloc_clone.25(i32 14)
  %12 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %6, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %6, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = call i8* @strcpy(i8* %14, i8* %1) #9, !track !18
  br label %29

; <label>:16:                                     ; preds = %2
  %17 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %18 = load %struct.zzzz*, %struct.zzzz** %17, align 8
  %19 = icmp ne %struct.zzzz* %18, null
  br i1 %19, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %16
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph, %.lr.ph.preheader
  %.012 = phi %struct.zzzz* [ %21, %.lr.ph ], [ null, %.lr.ph.preheader ]
  call void @unroll_loop(i32 12)
  %20 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.012, i32 0, i32 1
  %21 = load %struct.zzzz*, %struct.zzzz** %20, align 8
  %22 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %21, i32 0, i32 1
  %23 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %24 = icmp ne %struct.zzzz* %23, null
  br i1 %24, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %.lr.ph
  %.01.lcssa.ph = phi %struct.zzzz* [ %21, %.lr.ph ]
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %16
  %.01.lcssa = phi %struct.zzzz* [ null, %16 ], [ %.01.lcssa.ph, %._crit_edge.loopexit ]
  %25 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  %26 = load %struct.zzzz*, %struct.zzzz** %25, align 8
  %27 = call %struct.zzzz* @snocString(%struct.zzzz* %26, i8* %1)
  %28 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.01.lcssa, i32 0, i32 1
  store %struct.zzzz* %27, %struct.zzzz** %28, align 8
  br label %29

; <label>:29:                                     ; preds = %._crit_edge, %5
  %.0 = phi %struct.zzzz* [ %6, %5 ], [ null, %._crit_edge ]
  ret %struct.zzzz* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.zzzz* @mkCell_clone.21() #2 {
  %1 = call i8* @myMalloc_clone.23(i32 16)
  %2 = bitcast i8* %1 to %struct.zzzz*
  %3 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 0
  store i8* null, i8** %3, align 8
  %4 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2, i32 0, i32 1
  store %struct.zzzz* null, %struct.zzzz** %4, align 8
  ret %struct.zzzz* %2
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @myMalloc_clone.23(i32) #2 {
  %2 = sext i32 16 to i64
  %3 = call noalias i8* @malloc(i64 16) #9, !track !55
  %4 = icmp eq i64 10000590, 0
  %5 = icmp eq i8* %3, null
  br i1 false, label %6, label %7

; <label>:6:                                      ; preds = %1
  call void @outOfMemory() #12
  unreachable

; <label>:7:                                      ; preds = %1
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @myMalloc_clone.25(i32) #2 {
  %2 = sext i32 14 to i64
  %3 = call noalias i8* @malloc(i64 14) #9, !track !55
  %4 = icmp eq i64 10000607, 0
  %5 = icmp eq i8* %3, null
  br i1 false, label %6, label %7

; <label>:6:                                      ; preds = %1
  call void @outOfMemory() #12
  unreachable

; <label>:7:                                      ; preds = %1
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old.31_old(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), align 1
  %39 = sext i8 98 to i32
  %40 = icmp eq i32 98, 47
  br i1 false, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %37
  call void @__loop_iteration_test___0()
  %43 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %44 = sext i8 122 to i32
  %45 = icmp ne i32 122, 0
  br i1 true, label %496, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %663, %654, %645, %636, %627, %618, %609, %600, %591, %582, %573, %564, %555, %546, %537, %528, %519, %510, %501, %42
  call void @__loop_termination_test___0()
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone(%struct.zzzz** %22, i8* %46)
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone.9(%struct.zzzz** %22, i8* %47)
  %48 = sub nsw i32 3, 1, !track_argc !10
  %49 = icmp sle i32 1, 2
  br i1 true, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %50 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %51 = load i8*, i8** %scevgep4, align 8
  %52 = call %struct.zzzz* @snocString_clone(%struct.zzzz* null, i8* %51)
  store %struct.zzzz* %52, %struct.zzzz** %22, align 8
  br i1 true, label %.lr.ph57.1, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57.1, %.lr.ph57
  call void @__loop_termination_test___1()
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %53 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %54 = icmp ne i64 10000562, 0
  %55 = icmp ne %struct.zzzz* %53, null
  br i1 true, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %.lr.ph53.preheader
  call void @unroll_loop(i32 2)
  %56 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr [6 x i8], [6 x i8]* @8, i64 0, i64 0
  %59 = getelementptr [3 x i8], [3 x i8]* @9, i64 0, i64 0
  %60 = call i32 @strcmp(i8* %58, i8* %59) #10
  %61 = icmp eq i32 1, 0
  br i1 false, label %82, label %62

; <label>:62:                                     ; preds = %.lr.ph53
  %63 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 45 to i32
  %67 = icmp eq i32 45, 45
  br i1 true, label %82, label %68

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @numFileNames, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* @numFileNames, align 4
  %71 = load i32, i32* @longestFileName, align 4
  %72 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i64 @strlen(i8* %73) #10
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %71, %75
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %68
  %78 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @strlen(i8* %79) #10
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* @longestFileName, align 4
  br label %82

; <label>:82:                                     ; preds = %77, %68, %62, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ 1, %62 ], [ 1, %77 ], [ 1, %68 ]
  call void @__loop_iteration_test___2()
  %83 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 1
  %84 = load %struct.zzzz*, %struct.zzzz** %83, align 8
  %85 = icmp ne i64 10000590, 0
  %86 = icmp ne %struct.zzzz* %84, null
  br i1 true, label %.lr.ph53.1, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %1240, %1210, %1180, %1150, %1120, %1090, %1060, %1030, %1000, %970, %940, %910, %880, %850, %820, %790, %760, %730, %699, %82
  call void @__loop_termination_test___2()
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %87 = load i32, i32* @numFileNames, align 4
  %88 = icmp eq i32 1, 0
  br i1 false, label %89, label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %91

; <label>:90:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %91

; <label>:91:                                     ; preds = %90, %89
  store i32 1, i32* @opMode, align 4
  %92 = load i8*, i8** @progName, align 8
  %93 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %94 = call i8* @strstr(i8* %92, i8* %93) #10, !track !11
  %95 = icmp ne i64 0, 0
  %96 = icmp ne i8* null, null
  br i1 false, label %103, label %97

; <label>:97:                                     ; preds = %91
  %98 = load i8*, i8** @progName, align 8
  %99 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %100 = call i8* @strstr(i8* %98, i8* %99) #10, !track !12
  %101 = icmp ne i64 0, 0
  %102 = icmp ne i8* null, null
  br i1 false, label %103, label %104

; <label>:103:                                    ; preds = %97, %91
  store i32 2, i32* @opMode, align 4
  br label %104

; <label>:104:                                    ; preds = %103, %97
  %105 = load i8*, i8** @progName, align 8
  %106 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %107 = call i8* @strstr(i8* %105, i8* %106) #10, !track !13
  %108 = icmp ne i64 0, 0
  %109 = icmp ne i8* null, null
  br i1 false, label %128, label %110

; <label>:110:                                    ; preds = %104
  %111 = load i8*, i8** @progName, align 8
  %112 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %113 = call i8* @strstr(i8* %111, i8* %112) #10, !track !14
  %114 = icmp ne i64 0, 0
  %115 = icmp ne i8* null, null
  br i1 false, label %128, label %116

; <label>:116:                                    ; preds = %110
  %117 = load i8*, i8** @progName, align 8
  %118 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %119 = call i8* @strstr(i8* %117, i8* %118) #10, !track !15
  %120 = icmp ne i64 0, 0
  %121 = icmp ne i8* null, null
  br i1 false, label %128, label %122

; <label>:122:                                    ; preds = %116
  %123 = load i8*, i8** @progName, align 8
  %124 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %125 = call i8* @strstr(i8* %123, i8* %124) #10, !track !16
  %126 = icmp ne i64 0, 0
  %127 = icmp ne i8* null, null
  br i1 false, label %128, label %133

; <label>:128:                                    ; preds = %122, %116, %110, %104
  store i32 2, i32* @opMode, align 4
  %129 = load i32, i32* @numFileNames, align 4
  %130 = icmp eq i32 %129, 0
  %131 = zext i1 %130 to i64
  %132 = select i1 %130, i32 1, i32 2
  store i32 %132, i32* @srcMode, align 4
  br label %133

; <label>:133:                                    ; preds = %128, %122
  %134 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %135 = icmp ne i64 10000562, 0
  %136 = icmp ne %struct.zzzz* %134, null
  br i1 true, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %133
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %._crit_edge43, %.lr.ph48.preheader
  %.1244 = phi %struct.zzzz* [ %203, %._crit_edge43 ], [ %134, %.lr.ph48.preheader ]
  call void @unroll_loop(i32 3)
  %137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = call i32 @strcmp(i8* %138, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %.loopexit17.loopexit, label %141

; <label>:141:                                    ; preds = %.lr.ph48
  %142 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 0
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %146, 45
  br i1 %147, label %148, label %._crit_edge43

; <label>:148:                                    ; preds = %141
  %149 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 1
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp ne i32 %153, 45
  br i1 %154, label %155, label %._crit_edge43

; <label>:155:                                    ; preds = %148
  %156 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = getelementptr inbounds i8, i8* %157, i64 1
  %159 = load i8, i8* %158, align 1
  %160 = sext i8 %159 to i32
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %155
  %162 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1244, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %197, %.lr.ph42.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph42.preheader ], [ %lsr.iv.next, %197 ]
  call void @unroll_loop(i32 4)
  %163 = load i8*, i8** %162, align 8
  %scevgep = getelementptr i8, i8* %163, i64 1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %164 = load i8, i8* %scevgep1, align 1
  %165 = sext i8 %164 to i32
  switch i32 %165, label %189 [
    i32 99, label %166
    i32 100, label %167
    i32 122, label %168
    i32 102, label %169
    i32 116, label %170
    i32 107, label %171
    i32 115, label %172
    i32 113, label %173
    i32 49, label %174
    i32 50, label %175
    i32 51, label %176
    i32 52, label %177
    i32 53, label %178
    i32 54, label %179
    i32 55, label %180
    i32 56, label %181
    i32 57, label %182
    i32 86, label %183
    i32 76, label %183
    i32 118, label %184
    i32 104, label %187
  ]

; <label>:166:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %197

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %197

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %197

; <label>:169:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %197

; <label>:170:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %197

; <label>:171:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %197

; <label>:172:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %197

; <label>:173:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %197

; <label>:174:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %197

; <label>:175:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %197

; <label>:176:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %197

; <label>:177:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %197

; <label>:178:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %197

; <label>:179:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %197

; <label>:180:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %197

; <label>:181:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %197

; <label>:182:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %197

; <label>:183:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %197

; <label>:184:                                    ; preds = %.lr.ph42
  %185 = load i32, i32* @verbosity, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* @verbosity, align 4
  br label %197

; <label>:187:                                    ; preds = %.lr.ph42
  %188 = load i8*, i8** @progName, align 8
  call void @usage(i8* %188)
  call void @exit(i32 0) #11
  unreachable

; <label>:189:                                    ; preds = %.lr.ph42
  %.12.lcssa15 = phi %struct.zzzz* [ %.1244, %.lr.ph42 ]
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %191 = load i8*, i8** @progName, align 8
  %192 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  %194 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %195 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %190, i8* %194, i8* %191, i8* %193)
  %196 = load i8*, i8** @progName, align 8
  call void @usage(i8* %196)
  call void @exit(i32 1) #11
  unreachable

; <label>:197:                                    ; preds = %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167, %166
  %198 = load i8*, i8** %156, align 8
  %scevgep2 = getelementptr i8, i8* %198, i64 2
  %scevgep3 = getelementptr i8, i8* %scevgep2, i64 %lsr.iv
  %199 = load i8, i8* %scevgep3, align 1
  %200 = sext i8 %199 to i32
  %201 = icmp ne i32 %200, 0
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %201, label %.lr.ph42, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %197
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %155, %148, %141
  %.1245 = phi %struct.zzzz* [ %.1244, %148 ], [ %.1244, %141 ], [ %.1244, %155 ], [ %.1244, %._crit_edge43.loopexit ]
  %202 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.1245, i32 0, i32 1
  %203 = load %struct.zzzz*, %struct.zzzz** %202, align 8
  %204 = icmp ne %struct.zzzz* %203, null
  br i1 %204, label %.lr.ph48, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %._crit_edge43, %.lr.ph48
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %133
  %205 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %206 = icmp ne %struct.zzzz* %205, null
  br i1 %206, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %329, %.lr.ph39.preheader
  %.2337 = phi %struct.zzzz* [ %331, %329 ], [ %205, %.lr.ph39.preheader ]
  call void @unroll_loop(i32 5)
  %207 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = call i32 @strcmp(i8* %208, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %.loopexit.loopexit, label %211

; <label>:211:                                    ; preds = %.lr.ph39
  %212 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = call i32 @strcmp(i8* %213, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

; <label>:216:                                    ; preds = %211
  store i32 2, i32* @srcMode, align 4
  br label %329

; <label>:217:                                    ; preds = %211
  %218 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8
  %220 = call i32 @strcmp(i8* %219, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

; <label>:222:                                    ; preds = %217
  store i32 2, i32* @opMode, align 4
  br label %329

; <label>:223:                                    ; preds = %217
  %224 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = call i32 @strcmp(i8* %225, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %228, label %229

; <label>:228:                                    ; preds = %223
  store i32 1, i32* @opMode, align 4
  br label %329

; <label>:229:                                    ; preds = %223
  %230 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  %232 = call i32 @strcmp(i8* %231, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %235

; <label>:234:                                    ; preds = %229
  store i8 1, i8* @forceOverwrite, align 1
  br label %329

; <label>:235:                                    ; preds = %229
  %236 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  %238 = call i32 @strcmp(i8* %237, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

; <label>:240:                                    ; preds = %235
  store i32 3, i32* @opMode, align 4
  br label %329

; <label>:241:                                    ; preds = %235
  %242 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %243 = load i8*, i8** %242, align 8
  %244 = call i32 @strcmp(i8* %243, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

; <label>:246:                                    ; preds = %241
  store i8 1, i8* @keepInputFiles, align 1
  br label %329

; <label>:247:                                    ; preds = %241
  %248 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = call i32 @strcmp(i8* %249, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

; <label>:252:                                    ; preds = %247
  store i8 1, i8* @smallMode, align 1
  br label %329

; <label>:253:                                    ; preds = %247
  %254 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  %256 = call i32 @strcmp(i8* %255, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %259

; <label>:258:                                    ; preds = %253
  store i8 0, i8* @noisy, align 1
  br label %329

; <label>:259:                                    ; preds = %253
  %260 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %261 = load i8*, i8** %260, align 8
  %262 = call i32 @strcmp(i8* %261, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

; <label>:264:                                    ; preds = %259
  call void @license()
  br label %329

; <label>:265:                                    ; preds = %259
  %266 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = call i32 @strcmp(i8* %267, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %271

; <label>:270:                                    ; preds = %265
  call void @license()
  br label %329

; <label>:271:                                    ; preds = %265
  %272 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = call i32 @strcmp(i8* %273, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

; <label>:276:                                    ; preds = %271
  store i32 1, i32* @workFactor, align 4
  br label %329

; <label>:277:                                    ; preds = %271
  %278 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = call i32 @strcmp(i8* %279, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %283 = load i8*, i8** %282, align 8
  br i1 %281, label %284, label %285

; <label>:284:                                    ; preds = %277
  call void @redundant(i8* %283)
  br label %329

; <label>:285:                                    ; preds = %277
  %286 = call i32 @strcmp(i8* %283, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %287 = icmp eq i32 %286, 0
  %288 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  br i1 %287, label %290, label %291

; <label>:290:                                    ; preds = %285
  call void @redundant(i8* %289)
  br label %329

; <label>:291:                                    ; preds = %285
  %292 = call i32 @strcmp(i8* %289, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

; <label>:294:                                    ; preds = %291
  store i32 1, i32* @blockSize100k, align 4
  br label %329

; <label>:295:                                    ; preds = %291
  %296 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %297 = load i8*, i8** %296, align 8
  %298 = call i32 @strcmp(i8* %297, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

; <label>:300:                                    ; preds = %295
  store i32 9, i32* @blockSize100k, align 4
  br label %329

; <label>:301:                                    ; preds = %295
  %302 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %303 = load i8*, i8** %302, align 8
  %304 = call i32 @strcmp(i8* %303, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %309

; <label>:306:                                    ; preds = %301
  %307 = load i32, i32* @verbosity, align 4
  %308 = add nsw i32 %307, 1
  store i32 %308, i32* @verbosity, align 4
  br label %329

; <label>:309:                                    ; preds = %301
  %310 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %311 = load i8*, i8** %310, align 8
  %312 = call i32 @strcmp(i8* %311, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %316

; <label>:314:                                    ; preds = %309
  %315 = load i8*, i8** @progName, align 8
  call void @usage(i8* %315)
  call void @exit(i32 0) #11
  unreachable

; <label>:316:                                    ; preds = %309
  %317 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %318 = load i8*, i8** %317, align 8
  %319 = call i32 @strncmp(i8* %318, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %329

; <label>:321:                                    ; preds = %316
  %.23.lcssa13 = phi %struct.zzzz* [ %.2337, %316 ]
  %322 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %323 = load i8*, i8** @progName, align 8
  %324 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %325 = load i8*, i8** %324, align 8
  %326 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %327 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %322, i8* %326, i8* %323, i8* %325)
  %328 = load i8*, i8** @progName, align 8
  call void @usage(i8* %328)
  call void @exit(i32 1) #11
  unreachable

; <label>:329:                                    ; preds = %316, %306, %300, %294, %290, %284, %276, %270, %264, %258, %252, %246, %240, %234, %228, %222, %216
  %330 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 1
  %331 = load %struct.zzzz*, %struct.zzzz** %330, align 8
  %332 = icmp ne %struct.zzzz* %331, null
  br i1 %332, label %.lr.ph39, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %329, %.lr.ph39
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %333 = load i32, i32* @verbosity, align 4
  %334 = icmp sgt i32 %333, 4
  br i1 %334, label %335, label %336

; <label>:335:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %336

; <label>:336:                                    ; preds = %335, %.loopexit
  %337 = load i32, i32* @opMode, align 4
  %338 = icmp eq i32 %337, 1
  br i1 %338, label %339, label %346

; <label>:339:                                    ; preds = %336
  %340 = load i8, i8* @smallMode, align 1
  %341 = zext i8 %340 to i32
  %342 = icmp ne i32 %341, 0
  %343 = load i32, i32* @blockSize100k, align 4
  %344 = icmp sgt i32 %343, 2
  %or.cond3 = and i1 %342, %344
  br i1 %or.cond3, label %345, label %346

; <label>:345:                                    ; preds = %339
  store i32 2, i32* @blockSize100k, align 4
  br label %346

; <label>:346:                                    ; preds = %345, %339, %336
  %347 = load i32, i32* @opMode, align 4
  %348 = icmp eq i32 %347, 3
  %349 = load i32, i32* @srcMode, align 4
  %350 = icmp eq i32 %349, 2
  %or.cond5 = and i1 %348, %350
  br i1 %or.cond5, label %351, label %356

; <label>:351:                                    ; preds = %346
  %352 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %353 = load i8*, i8** @progName, align 8
  %354 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %355 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %352, i8* %354, i8* %353)
  call void @exit(i32 1) #11
  unreachable

; <label>:356:                                    ; preds = %346
  %357 = load i32, i32* @srcMode, align 4
  %358 = icmp eq i32 %357, 2
  %359 = load i32, i32* @numFileNames, align 4
  %360 = icmp eq i32 %359, 0
  %or.cond7 = and i1 %358, %360
  br i1 %or.cond7, label %361, label %362

; <label>:361:                                    ; preds = %356
  store i32 1, i32* @srcMode, align 4
  br label %362

; <label>:362:                                    ; preds = %361, %356
  %363 = load i32, i32* @opMode, align 4
  %364 = icmp ne i32 %363, 1
  br i1 %364, label %365, label %366

; <label>:365:                                    ; preds = %362
  store i32 0, i32* @blockSize100k, align 4
  br label %366

; <label>:366:                                    ; preds = %365, %362
  %367 = load i32, i32* @srcMode, align 4
  %368 = icmp eq i32 %367, 3
  br i1 %368, label %369, label %373

; <label>:369:                                    ; preds = %366
  %370 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %371 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %372 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %373

; <label>:373:                                    ; preds = %369, %366
  %374 = load i32, i32* @opMode, align 4
  %375 = icmp eq i32 %374, 1
  br i1 %375, label %376, label %405

; <label>:376:                                    ; preds = %373
  %377 = load i32, i32* @srcMode, align 4
  %378 = icmp eq i32 %377, 1
  br i1 %378, label %379, label %380

; <label>:379:                                    ; preds = %376
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:380:                                    ; preds = %376
  %381 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %382 = icmp ne %struct.zzzz* %381, null
  br i1 %382, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %380
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %401, %.lr.ph23.preheader
  %.221 = phi i8 [ %.3, %401 ], [ 1, %.lr.ph23.preheader ]
  %.3419 = phi %struct.zzzz* [ %403, %401 ], [ %381, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 6)
  %383 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %384 = load i8*, i8** %383, align 8
  %385 = call i32 @strcmp(i8* %384, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %401, label %387

; <label>:387:                                    ; preds = %.lr.ph23
  %388 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = getelementptr inbounds i8, i8* %389, i64 0
  %391 = load i8, i8* %390, align 1
  %392 = sext i8 %391 to i32
  %393 = icmp eq i32 %392, 45
  %394 = zext i8 %.221 to i32
  %395 = icmp ne i32 %394, 0
  %or.cond9 = and i1 %393, %395
  br i1 %or.cond9, label %401, label %396

; <label>:396:                                    ; preds = %387
  %397 = load i32, i32* @numFilesProcessed, align 4
  %398 = add nsw i32 %397, 1
  store i32 %398, i32* @numFilesProcessed, align 4
  %399 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %400 = load i8*, i8** %399, align 8
  call void @compress(i8* %400)
  br label %401

; <label>:401:                                    ; preds = %396, %387, %.lr.ph23
  %.3 = phi i8 [ %.221, %396 ], [ 0, %.lr.ph23 ], [ %.221, %387 ]
  %402 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 1
  %403 = load %struct.zzzz*, %struct.zzzz** %402, align 8
  %404 = icmp ne %struct.zzzz* %403, null
  br i1 %404, label %.lr.ph23, label %._crit_edge24.loopexit

; <label>:405:                                    ; preds = %373
  %406 = load i32, i32* @opMode, align 4
  %407 = icmp eq i32 %406, 2
  br i1 %407, label %408, label %441

; <label>:408:                                    ; preds = %405
  store i8 0, i8* @unzFailsExist, align 1
  %409 = load i32, i32* @srcMode, align 4
  %410 = icmp eq i32 %409, 1
  br i1 %410, label %411, label %412

; <label>:411:                                    ; preds = %408
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:412:                                    ; preds = %408
  %413 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %414 = icmp ne %struct.zzzz* %413, null
  br i1 %414, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %412
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %433, %.lr.ph29.preheader
  %.427 = phi i8 [ %.5, %433 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %435, %433 ], [ %413, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %415 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %416 = load i8*, i8** %415, align 8
  %417 = call i32 @strcmp(i8* %416, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %433, label %419

; <label>:419:                                    ; preds = %.lr.ph29
  %420 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %421 = load i8*, i8** %420, align 8
  %422 = getelementptr inbounds i8, i8* %421, i64 0
  %423 = load i8, i8* %422, align 1
  %424 = sext i8 %423 to i32
  %425 = icmp eq i32 %424, 45
  %426 = zext i8 %.427 to i32
  %427 = icmp ne i32 %426, 0
  %or.cond11 = and i1 %425, %427
  br i1 %or.cond11, label %433, label %428

; <label>:428:                                    ; preds = %419
  %429 = load i32, i32* @numFilesProcessed, align 4
  %430 = add nsw i32 %429, 1
  store i32 %430, i32* @numFilesProcessed, align 4
  %431 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %432 = load i8*, i8** %431, align 8
  call void @uncompress(i8* %432)
  br label %433

; <label>:433:                                    ; preds = %428, %419, %.lr.ph29
  %.5 = phi i8 [ %.427, %428 ], [ 0, %.lr.ph29 ], [ %.427, %419 ]
  %434 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %435 = load %struct.zzzz*, %struct.zzzz** %434, align 8
  %436 = icmp ne %struct.zzzz* %435, null
  br i1 %436, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %433
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %412, %411
  %437 = load i8, i8* @unzFailsExist, align 1
  %438 = icmp ne i8 %437, 0
  br i1 %438, label %439, label %._crit_edge24

; <label>:439:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %440 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %440) #11
  unreachable

; <label>:441:                                    ; preds = %405
  store i8 0, i8* @testFailsExist, align 1
  %442 = load i32, i32* @srcMode, align 4
  %443 = icmp eq i32 %442, 1
  br i1 %443, label %444, label %445

; <label>:444:                                    ; preds = %441
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:445:                                    ; preds = %441
  %446 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %447 = icmp ne %struct.zzzz* %446, null
  br i1 %447, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %445
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %466, %.lr.ph35.preheader
  %.633 = phi i8 [ %.7, %466 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %468, %466 ], [ %446, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %448 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %449 = load i8*, i8** %448, align 8
  %450 = call i32 @strcmp(i8* %449, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %466, label %452

; <label>:452:                                    ; preds = %.lr.ph35
  %453 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %454 = load i8*, i8** %453, align 8
  %455 = getelementptr inbounds i8, i8* %454, i64 0
  %456 = load i8, i8* %455, align 1
  %457 = sext i8 %456 to i32
  %458 = icmp eq i32 %457, 45
  %459 = zext i8 %.633 to i32
  %460 = icmp ne i32 %459, 0
  %or.cond13 = and i1 %458, %460
  br i1 %or.cond13, label %466, label %461

; <label>:461:                                    ; preds = %452
  %462 = load i32, i32* @numFilesProcessed, align 4
  %463 = add nsw i32 %462, 1
  store i32 %463, i32* @numFilesProcessed, align 4
  %464 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %465 = load i8*, i8** %464, align 8
  call void @testf(i8* %465)
  br label %466

; <label>:466:                                    ; preds = %461, %452, %.lr.ph35
  %.7 = phi i8 [ %.633, %461 ], [ 0, %.lr.ph35 ], [ %.633, %452 ]
  %467 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %468 = load %struct.zzzz*, %struct.zzzz** %467, align 8
  %469 = icmp ne %struct.zzzz* %468, null
  br i1 %469, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %466
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %445, %444
  %470 = load i8, i8* @testFailsExist, align 1
  %471 = zext i8 %470 to i32
  %472 = icmp ne i32 %471, 0
  br i1 %472, label %473, label %._crit_edge24

; <label>:473:                                    ; preds = %._crit_edge36
  %474 = load i8, i8* @noisy, align 1
  %475 = zext i8 %474 to i32
  %476 = icmp ne i32 %475, 0
  br i1 %476, label %477, label %._crit_edge24

; <label>:477:                                    ; preds = %473
  %478 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %479 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %480 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %478, i8* %479)
  call void @setExit(i32 2)
  %481 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %481) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %401
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %473, %._crit_edge36, %._crit_edge30, %380, %379
  %482 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %483 = icmp ne %struct.zzzz* %482, null
  br i1 %483, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %492, %.lr.ph.preheader
  %.6718 = phi %struct.zzzz* [ %485, %492 ], [ %482, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %484 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %485 = load %struct.zzzz*, %struct.zzzz** %484, align 8
  %486 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %487 = load i8*, i8** %486, align 8
  %488 = icmp ne i8* %487, null
  br i1 %488, label %489, label %492

; <label>:489:                                    ; preds = %.lr.ph
  %490 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %491 = load i8*, i8** %490, align 8
  call void @free(i8* %491) #9
  br label %492

; <label>:492:                                    ; preds = %489, %.lr.ph
  %493 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %493) #9
  %494 = icmp ne %struct.zzzz* %485, null
  br i1 %494, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %492
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %495 = load i32, i32* @exitValue, align 4
  ret i32 %495

; <label>:496:                                    ; preds = %42
  call void @unroll_loop(i32 0)
  %497 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %498 = sext i8 122 to i32
  %499 = icmp eq i32 122, 47
  br i1 false, label %500, label %501

; <label>:500:                                    ; preds = %496
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), i8** @progName, align 8
  br label %501

; <label>:501:                                    ; preds = %500, %496
  call void @__loop_iteration_test___0()
  %502 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %503 = sext i8 105 to i32
  %504 = icmp ne i32 105, 0
  br i1 true, label %505, label %._crit_edge64.loopexit

; <label>:505:                                    ; preds = %501
  call void @unroll_loop(i32 0)
  %506 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %507 = sext i8 105 to i32
  %508 = icmp eq i32 105, 47
  br i1 false, label %509, label %510

; <label>:509:                                    ; preds = %505
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), i8** @progName, align 8
  br label %510

; <label>:510:                                    ; preds = %509, %505
  call void @__loop_iteration_test___0()
  %511 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %512 = sext i8 112 to i32
  %513 = icmp ne i32 112, 0
  br i1 true, label %514, label %._crit_edge64.loopexit

; <label>:514:                                    ; preds = %510
  call void @unroll_loop(i32 0)
  %515 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %516 = sext i8 112 to i32
  %517 = icmp eq i32 112, 47
  br i1 false, label %518, label %519

; <label>:518:                                    ; preds = %514
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), i8** @progName, align 8
  br label %519

; <label>:519:                                    ; preds = %518, %514
  call void @__loop_iteration_test___0()
  %520 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %521 = sext i8 50 to i32
  %522 = icmp ne i32 50, 0
  br i1 true, label %523, label %._crit_edge64.loopexit

; <label>:523:                                    ; preds = %519
  call void @unroll_loop(i32 0)
  %524 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %525 = sext i8 50 to i32
  %526 = icmp eq i32 50, 47
  br i1 false, label %527, label %528

; <label>:527:                                    ; preds = %523
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), i8** @progName, align 8
  br label %528

; <label>:528:                                    ; preds = %527, %523
  call void @__loop_iteration_test___0()
  %529 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %530 = sext i8 0 to i32
  %531 = icmp ne i32 0, 0
  br i1 false, label %532, label %._crit_edge64.loopexit

; <label>:532:                                    ; preds = %528
  call void @unroll_loop(i32 0)
  %533 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %534 = sext i8 %533 to i32
  %535 = icmp eq i32 %534, 47
  br i1 %535, label %536, label %537

; <label>:536:                                    ; preds = %532
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), i8** @progName, align 8
  br label %537

; <label>:537:                                    ; preds = %536, %532
  call void @__loop_iteration_test___0()
  %538 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %539 = sext i8 %538 to i32
  %540 = icmp ne i32 %539, 0
  br i1 %540, label %541, label %._crit_edge64.loopexit

; <label>:541:                                    ; preds = %537
  call void @unroll_loop(i32 0)
  %542 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %543 = sext i8 %542 to i32
  %544 = icmp eq i32 %543, 47
  br i1 %544, label %545, label %546

; <label>:545:                                    ; preds = %541
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), i8** @progName, align 8
  br label %546

; <label>:546:                                    ; preds = %545, %541
  call void @__loop_iteration_test___0()
  %547 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %548 = sext i8 %547 to i32
  %549 = icmp ne i32 %548, 0
  br i1 %549, label %550, label %._crit_edge64.loopexit

; <label>:550:                                    ; preds = %546
  call void @unroll_loop(i32 0)
  %551 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %552 = sext i8 %551 to i32
  %553 = icmp eq i32 %552, 47
  br i1 %553, label %554, label %555

; <label>:554:                                    ; preds = %550
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), i8** @progName, align 8
  br label %555

; <label>:555:                                    ; preds = %554, %550
  call void @__loop_iteration_test___0()
  %556 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %557 = sext i8 %556 to i32
  %558 = icmp ne i32 %557, 0
  br i1 %558, label %559, label %._crit_edge64.loopexit

; <label>:559:                                    ; preds = %555
  call void @unroll_loop(i32 0)
  %560 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %561 = sext i8 %560 to i32
  %562 = icmp eq i32 %561, 47
  br i1 %562, label %563, label %564

; <label>:563:                                    ; preds = %559
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), i8** @progName, align 8
  br label %564

; <label>:564:                                    ; preds = %563, %559
  call void @__loop_iteration_test___0()
  %565 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %566 = sext i8 %565 to i32
  %567 = icmp ne i32 %566, 0
  br i1 %567, label %568, label %._crit_edge64.loopexit

; <label>:568:                                    ; preds = %564
  call void @unroll_loop(i32 0)
  %569 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %570 = sext i8 %569 to i32
  %571 = icmp eq i32 %570, 47
  br i1 %571, label %572, label %573

; <label>:572:                                    ; preds = %568
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), i8** @progName, align 8
  br label %573

; <label>:573:                                    ; preds = %572, %568
  call void @__loop_iteration_test___0()
  %574 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %575 = sext i8 %574 to i32
  %576 = icmp ne i32 %575, 0
  br i1 %576, label %577, label %._crit_edge64.loopexit

; <label>:577:                                    ; preds = %573
  call void @unroll_loop(i32 0)
  %578 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %579 = sext i8 %578 to i32
  %580 = icmp eq i32 %579, 47
  br i1 %580, label %581, label %582

; <label>:581:                                    ; preds = %577
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), i8** @progName, align 8
  br label %582

; <label>:582:                                    ; preds = %581, %577
  call void @__loop_iteration_test___0()
  %583 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %584 = sext i8 %583 to i32
  %585 = icmp ne i32 %584, 0
  br i1 %585, label %586, label %._crit_edge64.loopexit

; <label>:586:                                    ; preds = %582
  call void @unroll_loop(i32 0)
  %587 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %588 = sext i8 %587 to i32
  %589 = icmp eq i32 %588, 47
  br i1 %589, label %590, label %591

; <label>:590:                                    ; preds = %586
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), i8** @progName, align 8
  br label %591

; <label>:591:                                    ; preds = %590, %586
  call void @__loop_iteration_test___0()
  %592 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %593 = sext i8 %592 to i32
  %594 = icmp ne i32 %593, 0
  br i1 %594, label %595, label %._crit_edge64.loopexit

; <label>:595:                                    ; preds = %591
  call void @unroll_loop(i32 0)
  %596 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %597 = sext i8 %596 to i32
  %598 = icmp eq i32 %597, 47
  br i1 %598, label %599, label %600

; <label>:599:                                    ; preds = %595
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), i8** @progName, align 8
  br label %600

; <label>:600:                                    ; preds = %599, %595
  call void @__loop_iteration_test___0()
  %601 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %602 = sext i8 %601 to i32
  %603 = icmp ne i32 %602, 0
  br i1 %603, label %604, label %._crit_edge64.loopexit

; <label>:604:                                    ; preds = %600
  call void @unroll_loop(i32 0)
  %605 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %606 = sext i8 %605 to i32
  %607 = icmp eq i32 %606, 47
  br i1 %607, label %608, label %609

; <label>:608:                                    ; preds = %604
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), i8** @progName, align 8
  br label %609

; <label>:609:                                    ; preds = %608, %604
  call void @__loop_iteration_test___0()
  %610 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %611 = sext i8 %610 to i32
  %612 = icmp ne i32 %611, 0
  br i1 %612, label %613, label %._crit_edge64.loopexit

; <label>:613:                                    ; preds = %609
  call void @unroll_loop(i32 0)
  %614 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %615 = sext i8 %614 to i32
  %616 = icmp eq i32 %615, 47
  br i1 %616, label %617, label %618

; <label>:617:                                    ; preds = %613
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), i8** @progName, align 8
  br label %618

; <label>:618:                                    ; preds = %617, %613
  call void @__loop_iteration_test___0()
  %619 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %620 = sext i8 %619 to i32
  %621 = icmp ne i32 %620, 0
  br i1 %621, label %622, label %._crit_edge64.loopexit

; <label>:622:                                    ; preds = %618
  call void @unroll_loop(i32 0)
  %623 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %624 = sext i8 %623 to i32
  %625 = icmp eq i32 %624, 47
  br i1 %625, label %626, label %627

; <label>:626:                                    ; preds = %622
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), i8** @progName, align 8
  br label %627

; <label>:627:                                    ; preds = %626, %622
  call void @__loop_iteration_test___0()
  %628 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %629 = sext i8 %628 to i32
  %630 = icmp ne i32 %629, 0
  br i1 %630, label %631, label %._crit_edge64.loopexit

; <label>:631:                                    ; preds = %627
  call void @unroll_loop(i32 0)
  %632 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %633 = sext i8 %632 to i32
  %634 = icmp eq i32 %633, 47
  br i1 %634, label %635, label %636

; <label>:635:                                    ; preds = %631
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), i8** @progName, align 8
  br label %636

; <label>:636:                                    ; preds = %635, %631
  call void @__loop_iteration_test___0()
  %637 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %638 = sext i8 %637 to i32
  %639 = icmp ne i32 %638, 0
  br i1 %639, label %640, label %._crit_edge64.loopexit

; <label>:640:                                    ; preds = %636
  call void @unroll_loop(i32 0)
  %641 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %642 = sext i8 %641 to i32
  %643 = icmp eq i32 %642, 47
  br i1 %643, label %644, label %645

; <label>:644:                                    ; preds = %640
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), i8** @progName, align 8
  br label %645

; <label>:645:                                    ; preds = %644, %640
  call void @__loop_iteration_test___0()
  %646 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %647 = sext i8 %646 to i32
  %648 = icmp ne i32 %647, 0
  br i1 %648, label %649, label %._crit_edge64.loopexit

; <label>:649:                                    ; preds = %645
  call void @unroll_loop(i32 0)
  %650 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %651 = sext i8 %650 to i32
  %652 = icmp eq i32 %651, 47
  br i1 %652, label %653, label %654

; <label>:653:                                    ; preds = %649
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), i8** @progName, align 8
  br label %654

; <label>:654:                                    ; preds = %653, %649
  call void @__loop_iteration_test___0()
  %655 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %656 = sext i8 %655 to i32
  %657 = icmp ne i32 %656, 0
  br i1 %657, label %658, label %._crit_edge64.loopexit

; <label>:658:                                    ; preds = %654
  call void @unroll_loop(i32 0)
  %659 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %660 = sext i8 %659 to i32
  %661 = icmp eq i32 %660, 47
  br i1 %661, label %662, label %663

; <label>:662:                                    ; preds = %658
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), i8** @progName, align 8
  br label %663

; <label>:663:                                    ; preds = %662, %658
  call void @__loop_iteration_test___0()
  %664 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), align 1
  %665 = sext i8 %664 to i32
  br label %._crit_edge64.loopexit

.lr.ph57.1:                                       ; preds = %.lr.ph57
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %666 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4, i64 1
  %667 = load i8*, i8** %scevgep7.1, align 8
  %668 = call %struct.zzzz* @snocString_clone.17(%struct.zzzz* %666, i8* %667)
  store %struct.zzzz* %668, %struct.zzzz** %22, align 8
  br label %._crit_edge58.loopexit

.lr.ph53.1:                                       ; preds = %82
  call void @unroll_loop(i32 2)
  %669 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %670 = load i8*, i8** %669, align 8
  %671 = getelementptr [10 x i8], [10 x i8]* @10, i64 0, i64 0
  %672 = getelementptr [3 x i8], [3 x i8]* @11, i64 0, i64 0
  %673 = call i32 @strcmp(i8* %671, i8* %672) #10
  %674 = icmp eq i32 1, 0
  br i1 false, label %699, label %675

; <label>:675:                                    ; preds = %.lr.ph53.1
  %676 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %677 = load i8*, i8** %676, align 8
  %678 = load i8, i8* %677, align 1
  %679 = sext i8 104 to i32
  %680 = icmp eq i32 104, 45
  %681 = zext i8 1 to i32
  %682 = icmp ne i32 1, 0
  %or.cond.1 = and i1 false, true
  br i1 false, label %699, label %683

; <label>:683:                                    ; preds = %675
  %684 = load i32, i32* @numFileNames, align 4
  %685 = add nsw i32 0, 1
  store i32 1, i32* @numFileNames, align 4
  %686 = load i32, i32* @longestFileName, align 4
  %687 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %688 = load i8*, i8** %687, align 8
  %689 = getelementptr [10 x i8], [10 x i8]* @12, i64 0, i64 0
  %690 = call i64 @strlen(i8* %689) #10
  %691 = trunc i64 9 to i32
  %692 = icmp slt i32 7, 9
  br i1 true, label %693, label %699

; <label>:693:                                    ; preds = %683
  %694 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %695 = load i8*, i8** %694, align 8
  %696 = getelementptr [10 x i8], [10 x i8]* @13, i64 0, i64 0
  %697 = call i64 @strlen(i8* %696) #10
  %698 = trunc i64 9 to i32
  store i32 9, i32* @longestFileName, align 4
  br label %699

; <label>:699:                                    ; preds = %693, %683, %675, %.lr.ph53.1
  %.1.1 = phi i8 [ 0, %.lr.ph53.1 ], [ 1, %675 ], [ 1, %693 ], [ 1, %683 ]
  call void @__loop_iteration_test___2()
  %700 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 1
  %701 = load %struct.zzzz*, %struct.zzzz** %700, align 8
  %702 = icmp ne i64 0, 0
  %703 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph53.2, label %._crit_edge54.loopexit

.lr.ph53.2:                                       ; preds = %699
  call void @unroll_loop(i32 2)
  %704 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %705 = load i8*, i8** %704, align 8
  %706 = call i32 @strcmp(i8* %705, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %730, label %708

; <label>:708:                                    ; preds = %.lr.ph53.2
  %709 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %710 = load i8*, i8** %709, align 8
  %711 = load i8, i8* %710, align 1
  %712 = sext i8 %711 to i32
  %713 = icmp eq i32 %712, 45
  %714 = zext i8 1 to i32
  %715 = icmp ne i32 %714, 0
  %or.cond.2 = and i1 %713, %715
  br i1 %or.cond.2, label %730, label %716

; <label>:716:                                    ; preds = %708
  %717 = load i32, i32* @numFileNames, align 4
  %718 = add nsw i32 %717, 1
  store i32 %718, i32* @numFileNames, align 4
  %719 = load i32, i32* @longestFileName, align 4
  %720 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %721 = load i8*, i8** %720, align 8
  %722 = call i64 @strlen(i8* %721) #10
  %723 = trunc i64 %722 to i32
  %724 = icmp slt i32 %719, %723
  br i1 %724, label %725, label %730

; <label>:725:                                    ; preds = %716
  %726 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %727 = load i8*, i8** %726, align 8
  %728 = call i64 @strlen(i8* %727) #10
  %729 = trunc i64 %728 to i32
  store i32 %729, i32* @longestFileName, align 4
  br label %730

; <label>:730:                                    ; preds = %725, %716, %708, %.lr.ph53.2
  %.1.2 = phi i8 [ 0, %.lr.ph53.2 ], [ 1, %708 ], [ 1, %725 ], [ 1, %716 ]
  call void @__loop_iteration_test___2()
  %731 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %732 = load %struct.zzzz*, %struct.zzzz** %731, align 8
  %733 = icmp ne %struct.zzzz* %732, null
  br i1 %733, label %.lr.ph53.3, label %._crit_edge54.loopexit

.lr.ph53.3:                                       ; preds = %730
  call void @unroll_loop(i32 2)
  %734 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %732, i32 0, i32 0
  %735 = load i8*, i8** %734, align 8
  %736 = call i32 @strcmp(i8* %735, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %760, label %738

; <label>:738:                                    ; preds = %.lr.ph53.3
  %739 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %732, i32 0, i32 0
  %740 = load i8*, i8** %739, align 8
  %741 = load i8, i8* %740, align 1
  %742 = sext i8 %741 to i32
  %743 = icmp eq i32 %742, 45
  %744 = zext i8 %.1.2 to i32
  %745 = icmp ne i32 %744, 0
  %or.cond.3 = and i1 %743, %745
  br i1 %or.cond.3, label %760, label %746

; <label>:746:                                    ; preds = %738
  %747 = load i32, i32* @numFileNames, align 4
  %748 = add nsw i32 %747, 1
  store i32 %748, i32* @numFileNames, align 4
  %749 = load i32, i32* @longestFileName, align 4
  %750 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %732, i32 0, i32 0
  %751 = load i8*, i8** %750, align 8
  %752 = call i64 @strlen(i8* %751) #10
  %753 = trunc i64 %752 to i32
  %754 = icmp slt i32 %749, %753
  br i1 %754, label %755, label %760

; <label>:755:                                    ; preds = %746
  %756 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %732, i32 0, i32 0
  %757 = load i8*, i8** %756, align 8
  %758 = call i64 @strlen(i8* %757) #10
  %759 = trunc i64 %758 to i32
  store i32 %759, i32* @longestFileName, align 4
  br label %760

; <label>:760:                                    ; preds = %755, %746, %738, %.lr.ph53.3
  %.1.3 = phi i8 [ 0, %.lr.ph53.3 ], [ %.1.2, %738 ], [ %.1.2, %755 ], [ %.1.2, %746 ]
  call void @__loop_iteration_test___2()
  %761 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %732, i32 0, i32 1
  %762 = load %struct.zzzz*, %struct.zzzz** %761, align 8
  %763 = icmp ne %struct.zzzz* %762, null
  br i1 %763, label %.lr.ph53.4, label %._crit_edge54.loopexit

.lr.ph53.4:                                       ; preds = %760
  call void @unroll_loop(i32 2)
  %764 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %762, i32 0, i32 0
  %765 = load i8*, i8** %764, align 8
  %766 = call i32 @strcmp(i8* %765, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %790, label %768

; <label>:768:                                    ; preds = %.lr.ph53.4
  %769 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %762, i32 0, i32 0
  %770 = load i8*, i8** %769, align 8
  %771 = load i8, i8* %770, align 1
  %772 = sext i8 %771 to i32
  %773 = icmp eq i32 %772, 45
  %774 = zext i8 %.1.3 to i32
  %775 = icmp ne i32 %774, 0
  %or.cond.4 = and i1 %773, %775
  br i1 %or.cond.4, label %790, label %776

; <label>:776:                                    ; preds = %768
  %777 = load i32, i32* @numFileNames, align 4
  %778 = add nsw i32 %777, 1
  store i32 %778, i32* @numFileNames, align 4
  %779 = load i32, i32* @longestFileName, align 4
  %780 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %762, i32 0, i32 0
  %781 = load i8*, i8** %780, align 8
  %782 = call i64 @strlen(i8* %781) #10
  %783 = trunc i64 %782 to i32
  %784 = icmp slt i32 %779, %783
  br i1 %784, label %785, label %790

; <label>:785:                                    ; preds = %776
  %786 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %762, i32 0, i32 0
  %787 = load i8*, i8** %786, align 8
  %788 = call i64 @strlen(i8* %787) #10
  %789 = trunc i64 %788 to i32
  store i32 %789, i32* @longestFileName, align 4
  br label %790

; <label>:790:                                    ; preds = %785, %776, %768, %.lr.ph53.4
  %.1.4 = phi i8 [ 0, %.lr.ph53.4 ], [ %.1.3, %768 ], [ %.1.3, %785 ], [ %.1.3, %776 ]
  call void @__loop_iteration_test___2()
  %791 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %762, i32 0, i32 1
  %792 = load %struct.zzzz*, %struct.zzzz** %791, align 8
  %793 = icmp ne %struct.zzzz* %792, null
  br i1 %793, label %.lr.ph53.5, label %._crit_edge54.loopexit

.lr.ph53.5:                                       ; preds = %790
  call void @unroll_loop(i32 2)
  %794 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %792, i32 0, i32 0
  %795 = load i8*, i8** %794, align 8
  %796 = call i32 @strcmp(i8* %795, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %820, label %798

; <label>:798:                                    ; preds = %.lr.ph53.5
  %799 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %792, i32 0, i32 0
  %800 = load i8*, i8** %799, align 8
  %801 = load i8, i8* %800, align 1
  %802 = sext i8 %801 to i32
  %803 = icmp eq i32 %802, 45
  %804 = zext i8 %.1.4 to i32
  %805 = icmp ne i32 %804, 0
  %or.cond.5 = and i1 %803, %805
  br i1 %or.cond.5, label %820, label %806

; <label>:806:                                    ; preds = %798
  %807 = load i32, i32* @numFileNames, align 4
  %808 = add nsw i32 %807, 1
  store i32 %808, i32* @numFileNames, align 4
  %809 = load i32, i32* @longestFileName, align 4
  %810 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %792, i32 0, i32 0
  %811 = load i8*, i8** %810, align 8
  %812 = call i64 @strlen(i8* %811) #10
  %813 = trunc i64 %812 to i32
  %814 = icmp slt i32 %809, %813
  br i1 %814, label %815, label %820

; <label>:815:                                    ; preds = %806
  %816 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %792, i32 0, i32 0
  %817 = load i8*, i8** %816, align 8
  %818 = call i64 @strlen(i8* %817) #10
  %819 = trunc i64 %818 to i32
  store i32 %819, i32* @longestFileName, align 4
  br label %820

; <label>:820:                                    ; preds = %815, %806, %798, %.lr.ph53.5
  %.1.5 = phi i8 [ 0, %.lr.ph53.5 ], [ %.1.4, %798 ], [ %.1.4, %815 ], [ %.1.4, %806 ]
  call void @__loop_iteration_test___2()
  %821 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %792, i32 0, i32 1
  %822 = load %struct.zzzz*, %struct.zzzz** %821, align 8
  %823 = icmp ne %struct.zzzz* %822, null
  br i1 %823, label %.lr.ph53.6, label %._crit_edge54.loopexit

.lr.ph53.6:                                       ; preds = %820
  call void @unroll_loop(i32 2)
  %824 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %822, i32 0, i32 0
  %825 = load i8*, i8** %824, align 8
  %826 = call i32 @strcmp(i8* %825, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %850, label %828

; <label>:828:                                    ; preds = %.lr.ph53.6
  %829 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %822, i32 0, i32 0
  %830 = load i8*, i8** %829, align 8
  %831 = load i8, i8* %830, align 1
  %832 = sext i8 %831 to i32
  %833 = icmp eq i32 %832, 45
  %834 = zext i8 %.1.5 to i32
  %835 = icmp ne i32 %834, 0
  %or.cond.6 = and i1 %833, %835
  br i1 %or.cond.6, label %850, label %836

; <label>:836:                                    ; preds = %828
  %837 = load i32, i32* @numFileNames, align 4
  %838 = add nsw i32 %837, 1
  store i32 %838, i32* @numFileNames, align 4
  %839 = load i32, i32* @longestFileName, align 4
  %840 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %822, i32 0, i32 0
  %841 = load i8*, i8** %840, align 8
  %842 = call i64 @strlen(i8* %841) #10
  %843 = trunc i64 %842 to i32
  %844 = icmp slt i32 %839, %843
  br i1 %844, label %845, label %850

; <label>:845:                                    ; preds = %836
  %846 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %822, i32 0, i32 0
  %847 = load i8*, i8** %846, align 8
  %848 = call i64 @strlen(i8* %847) #10
  %849 = trunc i64 %848 to i32
  store i32 %849, i32* @longestFileName, align 4
  br label %850

; <label>:850:                                    ; preds = %845, %836, %828, %.lr.ph53.6
  %.1.6 = phi i8 [ 0, %.lr.ph53.6 ], [ %.1.5, %828 ], [ %.1.5, %845 ], [ %.1.5, %836 ]
  call void @__loop_iteration_test___2()
  %851 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %822, i32 0, i32 1
  %852 = load %struct.zzzz*, %struct.zzzz** %851, align 8
  %853 = icmp ne %struct.zzzz* %852, null
  br i1 %853, label %.lr.ph53.7, label %._crit_edge54.loopexit

.lr.ph53.7:                                       ; preds = %850
  call void @unroll_loop(i32 2)
  %854 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %852, i32 0, i32 0
  %855 = load i8*, i8** %854, align 8
  %856 = call i32 @strcmp(i8* %855, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %880, label %858

; <label>:858:                                    ; preds = %.lr.ph53.7
  %859 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %852, i32 0, i32 0
  %860 = load i8*, i8** %859, align 8
  %861 = load i8, i8* %860, align 1
  %862 = sext i8 %861 to i32
  %863 = icmp eq i32 %862, 45
  %864 = zext i8 %.1.6 to i32
  %865 = icmp ne i32 %864, 0
  %or.cond.7 = and i1 %863, %865
  br i1 %or.cond.7, label %880, label %866

; <label>:866:                                    ; preds = %858
  %867 = load i32, i32* @numFileNames, align 4
  %868 = add nsw i32 %867, 1
  store i32 %868, i32* @numFileNames, align 4
  %869 = load i32, i32* @longestFileName, align 4
  %870 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %852, i32 0, i32 0
  %871 = load i8*, i8** %870, align 8
  %872 = call i64 @strlen(i8* %871) #10
  %873 = trunc i64 %872 to i32
  %874 = icmp slt i32 %869, %873
  br i1 %874, label %875, label %880

; <label>:875:                                    ; preds = %866
  %876 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %852, i32 0, i32 0
  %877 = load i8*, i8** %876, align 8
  %878 = call i64 @strlen(i8* %877) #10
  %879 = trunc i64 %878 to i32
  store i32 %879, i32* @longestFileName, align 4
  br label %880

; <label>:880:                                    ; preds = %875, %866, %858, %.lr.ph53.7
  %.1.7 = phi i8 [ 0, %.lr.ph53.7 ], [ %.1.6, %858 ], [ %.1.6, %875 ], [ %.1.6, %866 ]
  call void @__loop_iteration_test___2()
  %881 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %852, i32 0, i32 1
  %882 = load %struct.zzzz*, %struct.zzzz** %881, align 8
  %883 = icmp ne %struct.zzzz* %882, null
  br i1 %883, label %.lr.ph53.8, label %._crit_edge54.loopexit

.lr.ph53.8:                                       ; preds = %880
  call void @unroll_loop(i32 2)
  %884 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %882, i32 0, i32 0
  %885 = load i8*, i8** %884, align 8
  %886 = call i32 @strcmp(i8* %885, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %910, label %888

; <label>:888:                                    ; preds = %.lr.ph53.8
  %889 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %882, i32 0, i32 0
  %890 = load i8*, i8** %889, align 8
  %891 = load i8, i8* %890, align 1
  %892 = sext i8 %891 to i32
  %893 = icmp eq i32 %892, 45
  %894 = zext i8 %.1.7 to i32
  %895 = icmp ne i32 %894, 0
  %or.cond.8 = and i1 %893, %895
  br i1 %or.cond.8, label %910, label %896

; <label>:896:                                    ; preds = %888
  %897 = load i32, i32* @numFileNames, align 4
  %898 = add nsw i32 %897, 1
  store i32 %898, i32* @numFileNames, align 4
  %899 = load i32, i32* @longestFileName, align 4
  %900 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %882, i32 0, i32 0
  %901 = load i8*, i8** %900, align 8
  %902 = call i64 @strlen(i8* %901) #10
  %903 = trunc i64 %902 to i32
  %904 = icmp slt i32 %899, %903
  br i1 %904, label %905, label %910

; <label>:905:                                    ; preds = %896
  %906 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %882, i32 0, i32 0
  %907 = load i8*, i8** %906, align 8
  %908 = call i64 @strlen(i8* %907) #10
  %909 = trunc i64 %908 to i32
  store i32 %909, i32* @longestFileName, align 4
  br label %910

; <label>:910:                                    ; preds = %905, %896, %888, %.lr.ph53.8
  %.1.8 = phi i8 [ 0, %.lr.ph53.8 ], [ %.1.7, %888 ], [ %.1.7, %905 ], [ %.1.7, %896 ]
  call void @__loop_iteration_test___2()
  %911 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %882, i32 0, i32 1
  %912 = load %struct.zzzz*, %struct.zzzz** %911, align 8
  %913 = icmp ne %struct.zzzz* %912, null
  br i1 %913, label %.lr.ph53.9, label %._crit_edge54.loopexit

.lr.ph53.9:                                       ; preds = %910
  call void @unroll_loop(i32 2)
  %914 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %912, i32 0, i32 0
  %915 = load i8*, i8** %914, align 8
  %916 = call i32 @strcmp(i8* %915, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %917 = icmp eq i32 %916, 0
  br i1 %917, label %940, label %918

; <label>:918:                                    ; preds = %.lr.ph53.9
  %919 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %912, i32 0, i32 0
  %920 = load i8*, i8** %919, align 8
  %921 = load i8, i8* %920, align 1
  %922 = sext i8 %921 to i32
  %923 = icmp eq i32 %922, 45
  %924 = zext i8 %.1.8 to i32
  %925 = icmp ne i32 %924, 0
  %or.cond.9 = and i1 %923, %925
  br i1 %or.cond.9, label %940, label %926

; <label>:926:                                    ; preds = %918
  %927 = load i32, i32* @numFileNames, align 4
  %928 = add nsw i32 %927, 1
  store i32 %928, i32* @numFileNames, align 4
  %929 = load i32, i32* @longestFileName, align 4
  %930 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %912, i32 0, i32 0
  %931 = load i8*, i8** %930, align 8
  %932 = call i64 @strlen(i8* %931) #10
  %933 = trunc i64 %932 to i32
  %934 = icmp slt i32 %929, %933
  br i1 %934, label %935, label %940

; <label>:935:                                    ; preds = %926
  %936 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %912, i32 0, i32 0
  %937 = load i8*, i8** %936, align 8
  %938 = call i64 @strlen(i8* %937) #10
  %939 = trunc i64 %938 to i32
  store i32 %939, i32* @longestFileName, align 4
  br label %940

; <label>:940:                                    ; preds = %935, %926, %918, %.lr.ph53.9
  %.1.9 = phi i8 [ 0, %.lr.ph53.9 ], [ %.1.8, %918 ], [ %.1.8, %935 ], [ %.1.8, %926 ]
  call void @__loop_iteration_test___2()
  %941 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %912, i32 0, i32 1
  %942 = load %struct.zzzz*, %struct.zzzz** %941, align 8
  %943 = icmp ne %struct.zzzz* %942, null
  br i1 %943, label %.lr.ph53.10, label %._crit_edge54.loopexit

.lr.ph53.10:                                      ; preds = %940
  call void @unroll_loop(i32 2)
  %944 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %942, i32 0, i32 0
  %945 = load i8*, i8** %944, align 8
  %946 = call i32 @strcmp(i8* %945, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %947 = icmp eq i32 %946, 0
  br i1 %947, label %970, label %948

; <label>:948:                                    ; preds = %.lr.ph53.10
  %949 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %942, i32 0, i32 0
  %950 = load i8*, i8** %949, align 8
  %951 = load i8, i8* %950, align 1
  %952 = sext i8 %951 to i32
  %953 = icmp eq i32 %952, 45
  %954 = zext i8 %.1.9 to i32
  %955 = icmp ne i32 %954, 0
  %or.cond.10 = and i1 %953, %955
  br i1 %or.cond.10, label %970, label %956

; <label>:956:                                    ; preds = %948
  %957 = load i32, i32* @numFileNames, align 4
  %958 = add nsw i32 %957, 1
  store i32 %958, i32* @numFileNames, align 4
  %959 = load i32, i32* @longestFileName, align 4
  %960 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %942, i32 0, i32 0
  %961 = load i8*, i8** %960, align 8
  %962 = call i64 @strlen(i8* %961) #10
  %963 = trunc i64 %962 to i32
  %964 = icmp slt i32 %959, %963
  br i1 %964, label %965, label %970

; <label>:965:                                    ; preds = %956
  %966 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %942, i32 0, i32 0
  %967 = load i8*, i8** %966, align 8
  %968 = call i64 @strlen(i8* %967) #10
  %969 = trunc i64 %968 to i32
  store i32 %969, i32* @longestFileName, align 4
  br label %970

; <label>:970:                                    ; preds = %965, %956, %948, %.lr.ph53.10
  %.1.10 = phi i8 [ 0, %.lr.ph53.10 ], [ %.1.9, %948 ], [ %.1.9, %965 ], [ %.1.9, %956 ]
  call void @__loop_iteration_test___2()
  %971 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %942, i32 0, i32 1
  %972 = load %struct.zzzz*, %struct.zzzz** %971, align 8
  %973 = icmp ne %struct.zzzz* %972, null
  br i1 %973, label %.lr.ph53.11, label %._crit_edge54.loopexit

.lr.ph53.11:                                      ; preds = %970
  call void @unroll_loop(i32 2)
  %974 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %972, i32 0, i32 0
  %975 = load i8*, i8** %974, align 8
  %976 = call i32 @strcmp(i8* %975, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %977 = icmp eq i32 %976, 0
  br i1 %977, label %1000, label %978

; <label>:978:                                    ; preds = %.lr.ph53.11
  %979 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %972, i32 0, i32 0
  %980 = load i8*, i8** %979, align 8
  %981 = load i8, i8* %980, align 1
  %982 = sext i8 %981 to i32
  %983 = icmp eq i32 %982, 45
  %984 = zext i8 %.1.10 to i32
  %985 = icmp ne i32 %984, 0
  %or.cond.11 = and i1 %983, %985
  br i1 %or.cond.11, label %1000, label %986

; <label>:986:                                    ; preds = %978
  %987 = load i32, i32* @numFileNames, align 4
  %988 = add nsw i32 %987, 1
  store i32 %988, i32* @numFileNames, align 4
  %989 = load i32, i32* @longestFileName, align 4
  %990 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %972, i32 0, i32 0
  %991 = load i8*, i8** %990, align 8
  %992 = call i64 @strlen(i8* %991) #10
  %993 = trunc i64 %992 to i32
  %994 = icmp slt i32 %989, %993
  br i1 %994, label %995, label %1000

; <label>:995:                                    ; preds = %986
  %996 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %972, i32 0, i32 0
  %997 = load i8*, i8** %996, align 8
  %998 = call i64 @strlen(i8* %997) #10
  %999 = trunc i64 %998 to i32
  store i32 %999, i32* @longestFileName, align 4
  br label %1000

; <label>:1000:                                   ; preds = %995, %986, %978, %.lr.ph53.11
  %.1.11 = phi i8 [ 0, %.lr.ph53.11 ], [ %.1.10, %978 ], [ %.1.10, %995 ], [ %.1.10, %986 ]
  call void @__loop_iteration_test___2()
  %1001 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %972, i32 0, i32 1
  %1002 = load %struct.zzzz*, %struct.zzzz** %1001, align 8
  %1003 = icmp ne %struct.zzzz* %1002, null
  br i1 %1003, label %.lr.ph53.12, label %._crit_edge54.loopexit

.lr.ph53.12:                                      ; preds = %1000
  call void @unroll_loop(i32 2)
  %1004 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1002, i32 0, i32 0
  %1005 = load i8*, i8** %1004, align 8
  %1006 = call i32 @strcmp(i8* %1005, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1007 = icmp eq i32 %1006, 0
  br i1 %1007, label %1030, label %1008

; <label>:1008:                                   ; preds = %.lr.ph53.12
  %1009 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1002, i32 0, i32 0
  %1010 = load i8*, i8** %1009, align 8
  %1011 = load i8, i8* %1010, align 1
  %1012 = sext i8 %1011 to i32
  %1013 = icmp eq i32 %1012, 45
  %1014 = zext i8 %.1.11 to i32
  %1015 = icmp ne i32 %1014, 0
  %or.cond.12 = and i1 %1013, %1015
  br i1 %or.cond.12, label %1030, label %1016

; <label>:1016:                                   ; preds = %1008
  %1017 = load i32, i32* @numFileNames, align 4
  %1018 = add nsw i32 %1017, 1
  store i32 %1018, i32* @numFileNames, align 4
  %1019 = load i32, i32* @longestFileName, align 4
  %1020 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1002, i32 0, i32 0
  %1021 = load i8*, i8** %1020, align 8
  %1022 = call i64 @strlen(i8* %1021) #10
  %1023 = trunc i64 %1022 to i32
  %1024 = icmp slt i32 %1019, %1023
  br i1 %1024, label %1025, label %1030

; <label>:1025:                                   ; preds = %1016
  %1026 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1002, i32 0, i32 0
  %1027 = load i8*, i8** %1026, align 8
  %1028 = call i64 @strlen(i8* %1027) #10
  %1029 = trunc i64 %1028 to i32
  store i32 %1029, i32* @longestFileName, align 4
  br label %1030

; <label>:1030:                                   ; preds = %1025, %1016, %1008, %.lr.ph53.12
  %.1.12 = phi i8 [ 0, %.lr.ph53.12 ], [ %.1.11, %1008 ], [ %.1.11, %1025 ], [ %.1.11, %1016 ]
  call void @__loop_iteration_test___2()
  %1031 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1002, i32 0, i32 1
  %1032 = load %struct.zzzz*, %struct.zzzz** %1031, align 8
  %1033 = icmp ne %struct.zzzz* %1032, null
  br i1 %1033, label %.lr.ph53.13, label %._crit_edge54.loopexit

.lr.ph53.13:                                      ; preds = %1030
  call void @unroll_loop(i32 2)
  %1034 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1032, i32 0, i32 0
  %1035 = load i8*, i8** %1034, align 8
  %1036 = call i32 @strcmp(i8* %1035, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1037 = icmp eq i32 %1036, 0
  br i1 %1037, label %1060, label %1038

; <label>:1038:                                   ; preds = %.lr.ph53.13
  %1039 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1032, i32 0, i32 0
  %1040 = load i8*, i8** %1039, align 8
  %1041 = load i8, i8* %1040, align 1
  %1042 = sext i8 %1041 to i32
  %1043 = icmp eq i32 %1042, 45
  %1044 = zext i8 %.1.12 to i32
  %1045 = icmp ne i32 %1044, 0
  %or.cond.13 = and i1 %1043, %1045
  br i1 %or.cond.13, label %1060, label %1046

; <label>:1046:                                   ; preds = %1038
  %1047 = load i32, i32* @numFileNames, align 4
  %1048 = add nsw i32 %1047, 1
  store i32 %1048, i32* @numFileNames, align 4
  %1049 = load i32, i32* @longestFileName, align 4
  %1050 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1032, i32 0, i32 0
  %1051 = load i8*, i8** %1050, align 8
  %1052 = call i64 @strlen(i8* %1051) #10
  %1053 = trunc i64 %1052 to i32
  %1054 = icmp slt i32 %1049, %1053
  br i1 %1054, label %1055, label %1060

; <label>:1055:                                   ; preds = %1046
  %1056 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1032, i32 0, i32 0
  %1057 = load i8*, i8** %1056, align 8
  %1058 = call i64 @strlen(i8* %1057) #10
  %1059 = trunc i64 %1058 to i32
  store i32 %1059, i32* @longestFileName, align 4
  br label %1060

; <label>:1060:                                   ; preds = %1055, %1046, %1038, %.lr.ph53.13
  %.1.13 = phi i8 [ 0, %.lr.ph53.13 ], [ %.1.12, %1038 ], [ %.1.12, %1055 ], [ %.1.12, %1046 ]
  call void @__loop_iteration_test___2()
  %1061 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1032, i32 0, i32 1
  %1062 = load %struct.zzzz*, %struct.zzzz** %1061, align 8
  %1063 = icmp ne %struct.zzzz* %1062, null
  br i1 %1063, label %.lr.ph53.14, label %._crit_edge54.loopexit

.lr.ph53.14:                                      ; preds = %1060
  call void @unroll_loop(i32 2)
  %1064 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1062, i32 0, i32 0
  %1065 = load i8*, i8** %1064, align 8
  %1066 = call i32 @strcmp(i8* %1065, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1067 = icmp eq i32 %1066, 0
  br i1 %1067, label %1090, label %1068

; <label>:1068:                                   ; preds = %.lr.ph53.14
  %1069 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1062, i32 0, i32 0
  %1070 = load i8*, i8** %1069, align 8
  %1071 = load i8, i8* %1070, align 1
  %1072 = sext i8 %1071 to i32
  %1073 = icmp eq i32 %1072, 45
  %1074 = zext i8 %.1.13 to i32
  %1075 = icmp ne i32 %1074, 0
  %or.cond.14 = and i1 %1073, %1075
  br i1 %or.cond.14, label %1090, label %1076

; <label>:1076:                                   ; preds = %1068
  %1077 = load i32, i32* @numFileNames, align 4
  %1078 = add nsw i32 %1077, 1
  store i32 %1078, i32* @numFileNames, align 4
  %1079 = load i32, i32* @longestFileName, align 4
  %1080 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1062, i32 0, i32 0
  %1081 = load i8*, i8** %1080, align 8
  %1082 = call i64 @strlen(i8* %1081) #10
  %1083 = trunc i64 %1082 to i32
  %1084 = icmp slt i32 %1079, %1083
  br i1 %1084, label %1085, label %1090

; <label>:1085:                                   ; preds = %1076
  %1086 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1062, i32 0, i32 0
  %1087 = load i8*, i8** %1086, align 8
  %1088 = call i64 @strlen(i8* %1087) #10
  %1089 = trunc i64 %1088 to i32
  store i32 %1089, i32* @longestFileName, align 4
  br label %1090

; <label>:1090:                                   ; preds = %1085, %1076, %1068, %.lr.ph53.14
  %.1.14 = phi i8 [ 0, %.lr.ph53.14 ], [ %.1.13, %1068 ], [ %.1.13, %1085 ], [ %.1.13, %1076 ]
  call void @__loop_iteration_test___2()
  %1091 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1062, i32 0, i32 1
  %1092 = load %struct.zzzz*, %struct.zzzz** %1091, align 8
  %1093 = icmp ne %struct.zzzz* %1092, null
  br i1 %1093, label %.lr.ph53.15, label %._crit_edge54.loopexit

.lr.ph53.15:                                      ; preds = %1090
  call void @unroll_loop(i32 2)
  %1094 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1092, i32 0, i32 0
  %1095 = load i8*, i8** %1094, align 8
  %1096 = call i32 @strcmp(i8* %1095, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1120, label %1098

; <label>:1098:                                   ; preds = %.lr.ph53.15
  %1099 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1092, i32 0, i32 0
  %1100 = load i8*, i8** %1099, align 8
  %1101 = load i8, i8* %1100, align 1
  %1102 = sext i8 %1101 to i32
  %1103 = icmp eq i32 %1102, 45
  %1104 = zext i8 %.1.14 to i32
  %1105 = icmp ne i32 %1104, 0
  %or.cond.15 = and i1 %1103, %1105
  br i1 %or.cond.15, label %1120, label %1106

; <label>:1106:                                   ; preds = %1098
  %1107 = load i32, i32* @numFileNames, align 4
  %1108 = add nsw i32 %1107, 1
  store i32 %1108, i32* @numFileNames, align 4
  %1109 = load i32, i32* @longestFileName, align 4
  %1110 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1092, i32 0, i32 0
  %1111 = load i8*, i8** %1110, align 8
  %1112 = call i64 @strlen(i8* %1111) #10
  %1113 = trunc i64 %1112 to i32
  %1114 = icmp slt i32 %1109, %1113
  br i1 %1114, label %1115, label %1120

; <label>:1115:                                   ; preds = %1106
  %1116 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1092, i32 0, i32 0
  %1117 = load i8*, i8** %1116, align 8
  %1118 = call i64 @strlen(i8* %1117) #10
  %1119 = trunc i64 %1118 to i32
  store i32 %1119, i32* @longestFileName, align 4
  br label %1120

; <label>:1120:                                   ; preds = %1115, %1106, %1098, %.lr.ph53.15
  %.1.15 = phi i8 [ 0, %.lr.ph53.15 ], [ %.1.14, %1098 ], [ %.1.14, %1115 ], [ %.1.14, %1106 ]
  call void @__loop_iteration_test___2()
  %1121 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1092, i32 0, i32 1
  %1122 = load %struct.zzzz*, %struct.zzzz** %1121, align 8
  %1123 = icmp ne %struct.zzzz* %1122, null
  br i1 %1123, label %.lr.ph53.16, label %._crit_edge54.loopexit

.lr.ph53.16:                                      ; preds = %1120
  call void @unroll_loop(i32 2)
  %1124 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1122, i32 0, i32 0
  %1125 = load i8*, i8** %1124, align 8
  %1126 = call i32 @strcmp(i8* %1125, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1127 = icmp eq i32 %1126, 0
  br i1 %1127, label %1150, label %1128

; <label>:1128:                                   ; preds = %.lr.ph53.16
  %1129 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1122, i32 0, i32 0
  %1130 = load i8*, i8** %1129, align 8
  %1131 = load i8, i8* %1130, align 1
  %1132 = sext i8 %1131 to i32
  %1133 = icmp eq i32 %1132, 45
  %1134 = zext i8 %.1.15 to i32
  %1135 = icmp ne i32 %1134, 0
  %or.cond.16 = and i1 %1133, %1135
  br i1 %or.cond.16, label %1150, label %1136

; <label>:1136:                                   ; preds = %1128
  %1137 = load i32, i32* @numFileNames, align 4
  %1138 = add nsw i32 %1137, 1
  store i32 %1138, i32* @numFileNames, align 4
  %1139 = load i32, i32* @longestFileName, align 4
  %1140 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1122, i32 0, i32 0
  %1141 = load i8*, i8** %1140, align 8
  %1142 = call i64 @strlen(i8* %1141) #10
  %1143 = trunc i64 %1142 to i32
  %1144 = icmp slt i32 %1139, %1143
  br i1 %1144, label %1145, label %1150

; <label>:1145:                                   ; preds = %1136
  %1146 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1122, i32 0, i32 0
  %1147 = load i8*, i8** %1146, align 8
  %1148 = call i64 @strlen(i8* %1147) #10
  %1149 = trunc i64 %1148 to i32
  store i32 %1149, i32* @longestFileName, align 4
  br label %1150

; <label>:1150:                                   ; preds = %1145, %1136, %1128, %.lr.ph53.16
  %.1.16 = phi i8 [ 0, %.lr.ph53.16 ], [ %.1.15, %1128 ], [ %.1.15, %1145 ], [ %.1.15, %1136 ]
  call void @__loop_iteration_test___2()
  %1151 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1122, i32 0, i32 1
  %1152 = load %struct.zzzz*, %struct.zzzz** %1151, align 8
  %1153 = icmp ne %struct.zzzz* %1152, null
  br i1 %1153, label %.lr.ph53.17, label %._crit_edge54.loopexit

.lr.ph53.17:                                      ; preds = %1150
  call void @unroll_loop(i32 2)
  %1154 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1152, i32 0, i32 0
  %1155 = load i8*, i8** %1154, align 8
  %1156 = call i32 @strcmp(i8* %1155, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1157 = icmp eq i32 %1156, 0
  br i1 %1157, label %1180, label %1158

; <label>:1158:                                   ; preds = %.lr.ph53.17
  %1159 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1152, i32 0, i32 0
  %1160 = load i8*, i8** %1159, align 8
  %1161 = load i8, i8* %1160, align 1
  %1162 = sext i8 %1161 to i32
  %1163 = icmp eq i32 %1162, 45
  %1164 = zext i8 %.1.16 to i32
  %1165 = icmp ne i32 %1164, 0
  %or.cond.17 = and i1 %1163, %1165
  br i1 %or.cond.17, label %1180, label %1166

; <label>:1166:                                   ; preds = %1158
  %1167 = load i32, i32* @numFileNames, align 4
  %1168 = add nsw i32 %1167, 1
  store i32 %1168, i32* @numFileNames, align 4
  %1169 = load i32, i32* @longestFileName, align 4
  %1170 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1152, i32 0, i32 0
  %1171 = load i8*, i8** %1170, align 8
  %1172 = call i64 @strlen(i8* %1171) #10
  %1173 = trunc i64 %1172 to i32
  %1174 = icmp slt i32 %1169, %1173
  br i1 %1174, label %1175, label %1180

; <label>:1175:                                   ; preds = %1166
  %1176 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1152, i32 0, i32 0
  %1177 = load i8*, i8** %1176, align 8
  %1178 = call i64 @strlen(i8* %1177) #10
  %1179 = trunc i64 %1178 to i32
  store i32 %1179, i32* @longestFileName, align 4
  br label %1180

; <label>:1180:                                   ; preds = %1175, %1166, %1158, %.lr.ph53.17
  %.1.17 = phi i8 [ 0, %.lr.ph53.17 ], [ %.1.16, %1158 ], [ %.1.16, %1175 ], [ %.1.16, %1166 ]
  call void @__loop_iteration_test___2()
  %1181 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1152, i32 0, i32 1
  %1182 = load %struct.zzzz*, %struct.zzzz** %1181, align 8
  %1183 = icmp ne %struct.zzzz* %1182, null
  br i1 %1183, label %.lr.ph53.18, label %._crit_edge54.loopexit

.lr.ph53.18:                                      ; preds = %1180
  call void @unroll_loop(i32 2)
  %1184 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1182, i32 0, i32 0
  %1185 = load i8*, i8** %1184, align 8
  %1186 = call i32 @strcmp(i8* %1185, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1187 = icmp eq i32 %1186, 0
  br i1 %1187, label %1210, label %1188

; <label>:1188:                                   ; preds = %.lr.ph53.18
  %1189 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1182, i32 0, i32 0
  %1190 = load i8*, i8** %1189, align 8
  %1191 = load i8, i8* %1190, align 1
  %1192 = sext i8 %1191 to i32
  %1193 = icmp eq i32 %1192, 45
  %1194 = zext i8 %.1.17 to i32
  %1195 = icmp ne i32 %1194, 0
  %or.cond.18 = and i1 %1193, %1195
  br i1 %or.cond.18, label %1210, label %1196

; <label>:1196:                                   ; preds = %1188
  %1197 = load i32, i32* @numFileNames, align 4
  %1198 = add nsw i32 %1197, 1
  store i32 %1198, i32* @numFileNames, align 4
  %1199 = load i32, i32* @longestFileName, align 4
  %1200 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1182, i32 0, i32 0
  %1201 = load i8*, i8** %1200, align 8
  %1202 = call i64 @strlen(i8* %1201) #10
  %1203 = trunc i64 %1202 to i32
  %1204 = icmp slt i32 %1199, %1203
  br i1 %1204, label %1205, label %1210

; <label>:1205:                                   ; preds = %1196
  %1206 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1182, i32 0, i32 0
  %1207 = load i8*, i8** %1206, align 8
  %1208 = call i64 @strlen(i8* %1207) #10
  %1209 = trunc i64 %1208 to i32
  store i32 %1209, i32* @longestFileName, align 4
  br label %1210

; <label>:1210:                                   ; preds = %1205, %1196, %1188, %.lr.ph53.18
  %.1.18 = phi i8 [ 0, %.lr.ph53.18 ], [ %.1.17, %1188 ], [ %.1.17, %1205 ], [ %.1.17, %1196 ]
  call void @__loop_iteration_test___2()
  %1211 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1182, i32 0, i32 1
  %1212 = load %struct.zzzz*, %struct.zzzz** %1211, align 8
  %1213 = icmp ne %struct.zzzz* %1212, null
  br i1 %1213, label %.lr.ph53.19, label %._crit_edge54.loopexit

.lr.ph53.19:                                      ; preds = %1210
  call void @unroll_loop(i32 2)
  %1214 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1212, i32 0, i32 0
  %1215 = load i8*, i8** %1214, align 8
  %1216 = call i32 @strcmp(i8* %1215, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1217 = icmp eq i32 %1216, 0
  br i1 %1217, label %1240, label %1218

; <label>:1218:                                   ; preds = %.lr.ph53.19
  %1219 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1212, i32 0, i32 0
  %1220 = load i8*, i8** %1219, align 8
  %1221 = load i8, i8* %1220, align 1
  %1222 = sext i8 %1221 to i32
  %1223 = icmp eq i32 %1222, 45
  %1224 = zext i8 %.1.18 to i32
  %1225 = icmp ne i32 %1224, 0
  %or.cond.19 = and i1 %1223, %1225
  br i1 %or.cond.19, label %1240, label %1226

; <label>:1226:                                   ; preds = %1218
  %1227 = load i32, i32* @numFileNames, align 4
  %1228 = add nsw i32 %1227, 1
  store i32 %1228, i32* @numFileNames, align 4
  %1229 = load i32, i32* @longestFileName, align 4
  %1230 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1212, i32 0, i32 0
  %1231 = load i8*, i8** %1230, align 8
  %1232 = call i64 @strlen(i8* %1231) #10
  %1233 = trunc i64 %1232 to i32
  %1234 = icmp slt i32 %1229, %1233
  br i1 %1234, label %1235, label %1240

; <label>:1235:                                   ; preds = %1226
  %1236 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1212, i32 0, i32 0
  %1237 = load i8*, i8** %1236, align 8
  %1238 = call i64 @strlen(i8* %1237) #10
  %1239 = trunc i64 %1238 to i32
  store i32 %1239, i32* @longestFileName, align 4
  br label %1240

; <label>:1240:                                   ; preds = %1235, %1226, %1218, %.lr.ph53.19
  call void @__loop_iteration_test___2()
  %1241 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1212, i32 0, i32 1
  %1242 = load %struct.zzzz*, %struct.zzzz** %1241, align 8
  br label %._crit_edge54.loopexit
}

declare void @__loop_termination_test___2()

declare void @__loop_iteration_test___2()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_clone_old(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), align 1
  %39 = sext i8 98 to i32
  %40 = icmp eq i32 98, 47
  br i1 false, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %37
  call void @__loop_iteration_test___0()
  %43 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %44 = sext i8 122 to i32
  %45 = icmp ne i32 122, 0
  br i1 true, label %497, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %664, %655, %646, %637, %628, %619, %610, %601, %592, %583, %574, %565, %556, %547, %538, %529, %520, %511, %502, %42
  call void @__loop_termination_test___0()
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone(%struct.zzzz** %22, i8* %46)
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone.9(%struct.zzzz** %22, i8* %47)
  %48 = sub nsw i32 3, 1, !track_argc !10
  %49 = icmp sle i32 1, 2
  br i1 true, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %50 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %51 = load i8*, i8** %scevgep4, align 8
  %52 = call %struct.zzzz* @snocString_clone(%struct.zzzz* null, i8* %51)
  store %struct.zzzz* %52, %struct.zzzz** %22, align 8
  br i1 true, label %.lr.ph57.1, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57.1, %.lr.ph57
  call void @__loop_termination_test___1()
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %53 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %54 = icmp ne i64 10000562, 0
  %55 = icmp ne %struct.zzzz* %53, null
  br i1 true, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %.lr.ph53.preheader
  call void @unroll_loop(i32 2)
  %56 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr [6 x i8], [6 x i8]* @8, i64 0, i64 0
  %59 = getelementptr [3 x i8], [3 x i8]* @9, i64 0, i64 0
  %60 = call i32 @strcmp(i8* %58, i8* %59) #10
  %61 = icmp eq i32 1, 0
  br i1 false, label %82, label %62

; <label>:62:                                     ; preds = %.lr.ph53
  %63 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 45 to i32
  %67 = icmp eq i32 45, 45
  br i1 true, label %82, label %68

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @numFileNames, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* @numFileNames, align 4
  %71 = load i32, i32* @longestFileName, align 4
  %72 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i64 @strlen(i8* %73) #10
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %71, %75
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %68
  %78 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @strlen(i8* %79) #10
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* @longestFileName, align 4
  br label %82

; <label>:82:                                     ; preds = %77, %68, %62, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ 1, %62 ], [ 1, %77 ], [ 1, %68 ]
  call void @__loop_iteration_test___2()
  %83 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 1
  %84 = load %struct.zzzz*, %struct.zzzz** %83, align 8
  %85 = icmp ne i64 10000590, 0
  %86 = icmp ne %struct.zzzz* %84, null
  br i1 true, label %.lr.ph53.1, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %1241, %1211, %1181, %1151, %1121, %1091, %1061, %1031, %1001, %971, %941, %911, %881, %851, %821, %791, %761, %731, %700, %82
  call void @__loop_termination_test___2()
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %87 = load i32, i32* @numFileNames, align 4
  %88 = icmp eq i32 1, 0
  br i1 false, label %89, label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %91

; <label>:90:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %91

; <label>:91:                                     ; preds = %90, %89
  store i32 1, i32* @opMode, align 4
  %92 = load i8*, i8** @progName, align 8
  %93 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %94 = call i8* @strstr(i8* %92, i8* %93) #10, !track !11
  %95 = icmp ne i64 0, 0
  %96 = icmp ne i8* null, null
  br i1 false, label %103, label %97

; <label>:97:                                     ; preds = %91
  %98 = load i8*, i8** @progName, align 8
  %99 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %100 = call i8* @strstr(i8* %98, i8* %99) #10, !track !12
  %101 = icmp ne i64 0, 0
  %102 = icmp ne i8* null, null
  br i1 false, label %103, label %104

; <label>:103:                                    ; preds = %97, %91
  store i32 2, i32* @opMode, align 4
  br label %104

; <label>:104:                                    ; preds = %103, %97
  %105 = load i8*, i8** @progName, align 8
  %106 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %107 = call i8* @strstr(i8* %105, i8* %106) #10, !track !13
  %108 = icmp ne i64 0, 0
  %109 = icmp ne i8* null, null
  br i1 false, label %128, label %110

; <label>:110:                                    ; preds = %104
  %111 = load i8*, i8** @progName, align 8
  %112 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %113 = call i8* @strstr(i8* %111, i8* %112) #10, !track !14
  %114 = icmp ne i64 0, 0
  %115 = icmp ne i8* null, null
  br i1 false, label %128, label %116

; <label>:116:                                    ; preds = %110
  %117 = load i8*, i8** @progName, align 8
  %118 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %119 = call i8* @strstr(i8* %117, i8* %118) #10, !track !15
  %120 = icmp ne i64 0, 0
  %121 = icmp ne i8* null, null
  br i1 false, label %128, label %122

; <label>:122:                                    ; preds = %116
  %123 = load i8*, i8** @progName, align 8
  %124 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %125 = call i8* @strstr(i8* %123, i8* %124) #10, !track !16
  %126 = icmp ne i64 0, 0
  %127 = icmp ne i8* null, null
  br i1 false, label %128, label %133

; <label>:128:                                    ; preds = %122, %116, %110, %104
  store i32 2, i32* @opMode, align 4
  %129 = load i32, i32* @numFileNames, align 4
  %130 = icmp eq i32 %129, 0
  %131 = zext i1 %130 to i64
  %132 = select i1 %130, i32 1, i32 2
  store i32 %132, i32* @srcMode, align 4
  br label %133

; <label>:133:                                    ; preds = %128, %122
  %134 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %135 = icmp ne i64 10000562, 0
  %136 = icmp ne %struct.zzzz* %134, null
  br i1 true, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %133
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %.lr.ph48.preheader
  call void @unroll_loop(i32 3)
  %137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr [6 x i8], [6 x i8]* @14, i64 0, i64 0
  %140 = getelementptr [3 x i8], [3 x i8]* @15, i64 0, i64 0
  %141 = call i32 @strcmp(i8* %139, i8* %140) #10
  %142 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %143

; <label>:143:                                    ; preds = %.lr.ph48
  %144 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 45 to i32
  %148 = icmp eq i32 45, 45
  br i1 true, label %149, label %._crit_edge43

; <label>:149:                                    ; preds = %143
  %150 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 102 to i32
  %155 = icmp ne i32 102, 45
  br i1 true, label %156, label %._crit_edge43

; <label>:156:                                    ; preds = %149
  %157 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 102 to i32
  %162 = icmp ne i32 102, 0
  br i1 true, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %156
  %163 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %198, %.lr.ph42.preheader
  %lsr.iv = phi i64 [ 0, %.lr.ph42.preheader ], [ %lsr.iv.next, %198 ]
  call void @unroll_loop(i32 4)
  %164 = load i8*, i8** %163, align 8
  %scevgep = getelementptr i8, i8* %164, i64 1
  %scevgep1 = getelementptr i8, i8* %scevgep, i64 %lsr.iv
  %165 = load i8, i8* %scevgep1, align 1
  %166 = sext i8 %165 to i32
  switch i32 %166, label %.loopexit1 [
    i32 99, label %167
    i32 100, label %168
    i32 122, label %169
    i32 102, label %170
    i32 116, label %171
    i32 107, label %172
    i32 115, label %173
    i32 113, label %174
    i32 49, label %175
    i32 50, label %176
    i32 51, label %177
    i32 52, label %178
    i32 53, label %179
    i32 54, label %180
    i32 55, label %181
    i32 56, label %182
    i32 57, label %183
    i32 86, label %184
    i32 76, label %184
    i32 118, label %185
    i32 104, label %.loopexit2
  ]

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %198

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %198

; <label>:169:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %198

; <label>:170:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %198

; <label>:171:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %198

; <label>:172:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %198

; <label>:173:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %198

; <label>:174:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %198

; <label>:175:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %198

; <label>:176:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %198

; <label>:177:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %198

; <label>:178:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %198

; <label>:179:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %198

; <label>:180:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %198

; <label>:181:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %198

; <label>:182:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %198

; <label>:183:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %198

; <label>:184:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %198

; <label>:185:                                    ; preds = %.lr.ph42
  %186 = load i32, i32* @verbosity, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* @verbosity, align 4
  br label %198

.loopexit2:                                       ; preds = %.lr.ph42
  br label %188

.loopexit4:                                       ; preds = %.lr.ph42.1
  br label %188

.loopexit6:                                       ; preds = %.lr.ph42.2
  br label %188

.loopexit8:                                       ; preds = %.lr.ph42.3
  br label %188

.loopexit10:                                      ; preds = %.lr.ph42.4
  br label %188

.loopexit12:                                      ; preds = %.lr.ph42.5
  br label %188

.loopexit14:                                      ; preds = %.lr.ph42.6
  br label %188

.loopexit16:                                      ; preds = %.lr.ph42.7
  br label %188

.loopexit19:                                      ; preds = %.lr.ph42.8
  br label %188

.loopexit21:                                      ; preds = %.lr.ph42.9
  br label %188

.loopexit23:                                      ; preds = %.lr.ph42.10
  br label %188

.loopexit25:                                      ; preds = %.lr.ph42.11
  br label %188

.loopexit27:                                      ; preds = %.lr.ph42.12
  br label %188

.loopexit29:                                      ; preds = %.lr.ph42.13
  br label %188

.loopexit31:                                      ; preds = %.lr.ph42.14
  br label %188

.loopexit33:                                      ; preds = %.lr.ph42.15
  br label %188

.loopexit35:                                      ; preds = %.lr.ph42.16
  br label %188

.loopexit37:                                      ; preds = %.lr.ph42.17
  br label %188

.loopexit39:                                      ; preds = %.lr.ph42.18
  br label %188

.loopexit41:                                      ; preds = %.lr.ph42.19
  br label %188

; <label>:188:                                    ; preds = %.loopexit41, %.loopexit39, %.loopexit37, %.loopexit35, %.loopexit33, %.loopexit31, %.loopexit29, %.loopexit27, %.loopexit25, %.loopexit23, %.loopexit21, %.loopexit19, %.loopexit16, %.loopexit14, %.loopexit12, %.loopexit10, %.loopexit8, %.loopexit6, %.loopexit4, %.loopexit2
  call void @__loop_termination_test___3()
  %189 = load i8*, i8** @progName, align 8
  call void @usage(i8* %189)
  call void @exit(i32 0) #11
  unreachable

.loopexit1:                                       ; preds = %.lr.ph42
  br label %190

.loopexit3:                                       ; preds = %.lr.ph42.1
  br label %190

.loopexit5:                                       ; preds = %.lr.ph42.2
  br label %190

.loopexit7:                                       ; preds = %.lr.ph42.3
  br label %190

.loopexit9:                                       ; preds = %.lr.ph42.4
  br label %190

.loopexit11:                                      ; preds = %.lr.ph42.5
  br label %190

.loopexit13:                                      ; preds = %.lr.ph42.6
  br label %190

.loopexit15:                                      ; preds = %.lr.ph42.7
  br label %190

.loopexit18:                                      ; preds = %.lr.ph42.8
  br label %190

.loopexit20:                                      ; preds = %.lr.ph42.9
  br label %190

.loopexit22:                                      ; preds = %.lr.ph42.10
  br label %190

.loopexit24:                                      ; preds = %.lr.ph42.11
  br label %190

.loopexit26:                                      ; preds = %.lr.ph42.12
  br label %190

.loopexit28:                                      ; preds = %.lr.ph42.13
  br label %190

.loopexit30:                                      ; preds = %.lr.ph42.14
  br label %190

.loopexit32:                                      ; preds = %.lr.ph42.15
  br label %190

.loopexit34:                                      ; preds = %.lr.ph42.16
  br label %190

.loopexit36:                                      ; preds = %.lr.ph42.17
  br label %190

.loopexit38:                                      ; preds = %.lr.ph42.18
  br label %190

.loopexit40:                                      ; preds = %.lr.ph42.19
  br label %190

; <label>:190:                                    ; preds = %.loopexit40, %.loopexit38, %.loopexit36, %.loopexit34, %.loopexit32, %.loopexit30, %.loopexit28, %.loopexit26, %.loopexit24, %.loopexit22, %.loopexit20, %.loopexit18, %.loopexit15, %.loopexit13, %.loopexit11, %.loopexit9, %.loopexit7, %.loopexit5, %.loopexit3, %.loopexit1
  %.12.lcssa15 = phi %struct.zzzz* [ %134, %.loopexit1 ], [ %204, %.loopexit3 ], [ %1299, %.loopexit5 ], [ %1356, %.loopexit7 ], [ %1413, %.loopexit9 ], [ %1470, %.loopexit11 ], [ %1527, %.loopexit13 ], [ %1584, %.loopexit15 ], [ %1641, %.loopexit18 ], [ %1698, %.loopexit20 ], [ %1755, %.loopexit22 ], [ %1812, %.loopexit24 ], [ %1869, %.loopexit26 ], [ %1926, %.loopexit28 ], [ %1983, %.loopexit30 ], [ %2040, %.loopexit32 ], [ %2097, %.loopexit34 ], [ %2154, %.loopexit36 ], [ %2211, %.loopexit38 ], [ %2268, %.loopexit40 ]
  call void @__loop_termination_test___3()
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %192 = load i8*, i8** @progName, align 8
  %193 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* %195, i8* %192, i8* %194)
  %197 = load i8*, i8** @progName, align 8
  call void @usage(i8* %197)
  call void @exit(i32 1) #11
  unreachable

; <label>:198:                                    ; preds = %185, %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167
  %199 = load i8*, i8** %157, align 8
  %scevgep2 = getelementptr i8, i8* %199, i64 2
  %scevgep3 = getelementptr i8, i8* %scevgep2, i64 %lsr.iv
  %200 = load i8, i8* %scevgep3, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp ne i32 %201, 0
  %lsr.iv.next = add i64 %lsr.iv, 1
  br i1 %202, label %.lr.ph42, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %198
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %156, %149, %143
  call void @__loop_iteration_test___3()
  %203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 1
  %204 = load %struct.zzzz*, %struct.zzzz** %203, align 8
  %205 = icmp ne %struct.zzzz* %204, null
  br i1 %205, label %.lr.ph48.1, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %._crit_edge43.19, %.lr.ph48.19, %._crit_edge43.18, %.lr.ph48.18, %._crit_edge43.17, %.lr.ph48.17, %._crit_edge43.16, %.lr.ph48.16, %._crit_edge43.15, %.lr.ph48.15, %._crit_edge43.14, %.lr.ph48.14, %._crit_edge43.13, %.lr.ph48.13, %._crit_edge43.12, %.lr.ph48.12, %._crit_edge43.11, %.lr.ph48.11, %._crit_edge43.10, %.lr.ph48.10, %._crit_edge43.9, %.lr.ph48.9, %._crit_edge43.8, %.lr.ph48.8, %._crit_edge43.7, %.lr.ph48.7, %._crit_edge43.6, %.lr.ph48.6, %._crit_edge43.5, %.lr.ph48.5, %._crit_edge43.4, %.lr.ph48.4, %._crit_edge43.3, %.lr.ph48.3, %._crit_edge43.2, %.lr.ph48.2, %._crit_edge43.1, %.lr.ph48.1, %._crit_edge43, %.lr.ph48
  call void @__loop_termination_test___3()
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %133
  %206 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %207 = icmp ne %struct.zzzz* %206, null
  br i1 %207, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %330, %.lr.ph39.preheader
  %.2337 = phi %struct.zzzz* [ %332, %330 ], [ %206, %.lr.ph39.preheader ]
  call void @unroll_loop(i32 5)
  %208 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  %210 = call i32 @strcmp(i8* %209, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %.loopexit.loopexit, label %212

; <label>:212:                                    ; preds = %.lr.ph39
  %213 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %214 = load i8*, i8** %213, align 8
  %215 = call i32 @strcmp(i8* %214, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

; <label>:217:                                    ; preds = %212
  store i32 2, i32* @srcMode, align 4
  br label %330

; <label>:218:                                    ; preds = %212
  %219 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  %221 = call i32 @strcmp(i8* %220, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

; <label>:223:                                    ; preds = %218
  store i32 2, i32* @opMode, align 4
  br label %330

; <label>:224:                                    ; preds = %218
  %225 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = call i32 @strcmp(i8* %226, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

; <label>:229:                                    ; preds = %224
  store i32 1, i32* @opMode, align 4
  br label %330

; <label>:230:                                    ; preds = %224
  %231 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %232 = load i8*, i8** %231, align 8
  %233 = call i32 @strcmp(i8* %232, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

; <label>:235:                                    ; preds = %230
  store i8 1, i8* @forceOverwrite, align 1
  br label %330

; <label>:236:                                    ; preds = %230
  %237 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %238 = load i8*, i8** %237, align 8
  %239 = call i32 @strcmp(i8* %238, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

; <label>:241:                                    ; preds = %236
  store i32 3, i32* @opMode, align 4
  br label %330

; <label>:242:                                    ; preds = %236
  %243 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = call i32 @strcmp(i8* %244, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

; <label>:247:                                    ; preds = %242
  store i8 1, i8* @keepInputFiles, align 1
  br label %330

; <label>:248:                                    ; preds = %242
  %249 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = call i32 @strcmp(i8* %250, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

; <label>:253:                                    ; preds = %248
  store i8 1, i8* @smallMode, align 1
  br label %330

; <label>:254:                                    ; preds = %248
  %255 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  %257 = call i32 @strcmp(i8* %256, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

; <label>:259:                                    ; preds = %254
  store i8 0, i8* @noisy, align 1
  br label %330

; <label>:260:                                    ; preds = %254
  %261 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %262 = load i8*, i8** %261, align 8
  %263 = call i32 @strcmp(i8* %262, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

; <label>:265:                                    ; preds = %260
  call void @license()
  br label %330

; <label>:266:                                    ; preds = %260
  %267 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = call i32 @strcmp(i8* %268, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

; <label>:271:                                    ; preds = %266
  call void @license()
  br label %330

; <label>:272:                                    ; preds = %266
  %273 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = call i32 @strcmp(i8* %274, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

; <label>:277:                                    ; preds = %272
  store i32 1, i32* @workFactor, align 4
  br label %330

; <label>:278:                                    ; preds = %272
  %279 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = call i32 @strcmp(i8* %280, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %284 = load i8*, i8** %283, align 8
  br i1 %282, label %285, label %286

; <label>:285:                                    ; preds = %278
  call void @redundant(i8* %284)
  br label %330

; <label>:286:                                    ; preds = %278
  %287 = call i32 @strcmp(i8* %284, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  br i1 %288, label %291, label %292

; <label>:291:                                    ; preds = %286
  call void @redundant(i8* %290)
  br label %330

; <label>:292:                                    ; preds = %286
  %293 = call i32 @strcmp(i8* %290, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

; <label>:295:                                    ; preds = %292
  store i32 1, i32* @blockSize100k, align 4
  br label %330

; <label>:296:                                    ; preds = %292
  %297 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = call i32 @strcmp(i8* %298, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

; <label>:301:                                    ; preds = %296
  store i32 9, i32* @blockSize100k, align 4
  br label %330

; <label>:302:                                    ; preds = %296
  %303 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %304 = load i8*, i8** %303, align 8
  %305 = call i32 @strcmp(i8* %304, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %310

; <label>:307:                                    ; preds = %302
  %308 = load i32, i32* @verbosity, align 4
  %309 = add nsw i32 %308, 1
  store i32 %309, i32* @verbosity, align 4
  br label %330

; <label>:310:                                    ; preds = %302
  %311 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  %313 = call i32 @strcmp(i8* %312, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %317

; <label>:315:                                    ; preds = %310
  %316 = load i8*, i8** @progName, align 8
  call void @usage(i8* %316)
  call void @exit(i32 0) #11
  unreachable

; <label>:317:                                    ; preds = %310
  %318 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %319 = load i8*, i8** %318, align 8
  %320 = call i32 @strncmp(i8* %319, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %330

; <label>:322:                                    ; preds = %317
  %.23.lcssa13 = phi %struct.zzzz* [ %.2337, %317 ]
  %323 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %324 = load i8*, i8** @progName, align 8
  %325 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %326 = load i8*, i8** %325, align 8
  %327 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %328 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %323, i8* %327, i8* %324, i8* %326)
  %329 = load i8*, i8** @progName, align 8
  call void @usage(i8* %329)
  call void @exit(i32 1) #11
  unreachable

; <label>:330:                                    ; preds = %317, %307, %301, %295, %291, %285, %277, %271, %265, %259, %253, %247, %241, %235, %229, %223, %217
  %331 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 1
  %332 = load %struct.zzzz*, %struct.zzzz** %331, align 8
  %333 = icmp ne %struct.zzzz* %332, null
  br i1 %333, label %.lr.ph39, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %330, %.lr.ph39
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %334 = load i32, i32* @verbosity, align 4
  %335 = icmp sgt i32 %334, 4
  br i1 %335, label %336, label %337

; <label>:336:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %337

; <label>:337:                                    ; preds = %336, %.loopexit
  %338 = load i32, i32* @opMode, align 4
  %339 = icmp eq i32 %338, 1
  br i1 %339, label %340, label %347

; <label>:340:                                    ; preds = %337
  %341 = load i8, i8* @smallMode, align 1
  %342 = zext i8 %341 to i32
  %343 = icmp ne i32 %342, 0
  %344 = load i32, i32* @blockSize100k, align 4
  %345 = icmp sgt i32 %344, 2
  %or.cond3 = and i1 %343, %345
  br i1 %or.cond3, label %346, label %347

; <label>:346:                                    ; preds = %340
  store i32 2, i32* @blockSize100k, align 4
  br label %347

; <label>:347:                                    ; preds = %346, %340, %337
  %348 = load i32, i32* @opMode, align 4
  %349 = icmp eq i32 %348, 3
  %350 = load i32, i32* @srcMode, align 4
  %351 = icmp eq i32 %350, 2
  %or.cond5 = and i1 %349, %351
  br i1 %or.cond5, label %352, label %357

; <label>:352:                                    ; preds = %347
  %353 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %354 = load i8*, i8** @progName, align 8
  %355 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %356 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %353, i8* %355, i8* %354)
  call void @exit(i32 1) #11
  unreachable

; <label>:357:                                    ; preds = %347
  %358 = load i32, i32* @srcMode, align 4
  %359 = icmp eq i32 %358, 2
  %360 = load i32, i32* @numFileNames, align 4
  %361 = icmp eq i32 %360, 0
  %or.cond7 = and i1 %359, %361
  br i1 %or.cond7, label %362, label %363

; <label>:362:                                    ; preds = %357
  store i32 1, i32* @srcMode, align 4
  br label %363

; <label>:363:                                    ; preds = %362, %357
  %364 = load i32, i32* @opMode, align 4
  %365 = icmp ne i32 %364, 1
  br i1 %365, label %366, label %367

; <label>:366:                                    ; preds = %363
  store i32 0, i32* @blockSize100k, align 4
  br label %367

; <label>:367:                                    ; preds = %366, %363
  %368 = load i32, i32* @srcMode, align 4
  %369 = icmp eq i32 %368, 3
  br i1 %369, label %370, label %374

; <label>:370:                                    ; preds = %367
  %371 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %372 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %373 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %374

; <label>:374:                                    ; preds = %370, %367
  %375 = load i32, i32* @opMode, align 4
  %376 = icmp eq i32 %375, 1
  br i1 %376, label %377, label %406

; <label>:377:                                    ; preds = %374
  %378 = load i32, i32* @srcMode, align 4
  %379 = icmp eq i32 %378, 1
  br i1 %379, label %380, label %381

; <label>:380:                                    ; preds = %377
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:381:                                    ; preds = %377
  %382 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %383 = icmp ne %struct.zzzz* %382, null
  br i1 %383, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %381
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %402, %.lr.ph23.preheader
  %.221 = phi i8 [ %.3, %402 ], [ 1, %.lr.ph23.preheader ]
  %.3419 = phi %struct.zzzz* [ %404, %402 ], [ %382, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 6)
  %384 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  %386 = call i32 @strcmp(i8* %385, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %402, label %388

; <label>:388:                                    ; preds = %.lr.ph23
  %389 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = getelementptr inbounds i8, i8* %390, i64 0
  %392 = load i8, i8* %391, align 1
  %393 = sext i8 %392 to i32
  %394 = icmp eq i32 %393, 45
  %395 = zext i8 %.221 to i32
  %396 = icmp ne i32 %395, 0
  %or.cond9 = and i1 %394, %396
  br i1 %or.cond9, label %402, label %397

; <label>:397:                                    ; preds = %388
  %398 = load i32, i32* @numFilesProcessed, align 4
  %399 = add nsw i32 %398, 1
  store i32 %399, i32* @numFilesProcessed, align 4
  %400 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %401 = load i8*, i8** %400, align 8
  call void @compress(i8* %401)
  br label %402

; <label>:402:                                    ; preds = %397, %388, %.lr.ph23
  %.3 = phi i8 [ %.221, %397 ], [ 0, %.lr.ph23 ], [ %.221, %388 ]
  %403 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 1
  %404 = load %struct.zzzz*, %struct.zzzz** %403, align 8
  %405 = icmp ne %struct.zzzz* %404, null
  br i1 %405, label %.lr.ph23, label %._crit_edge24.loopexit

; <label>:406:                                    ; preds = %374
  %407 = load i32, i32* @opMode, align 4
  %408 = icmp eq i32 %407, 2
  br i1 %408, label %409, label %442

; <label>:409:                                    ; preds = %406
  store i8 0, i8* @unzFailsExist, align 1
  %410 = load i32, i32* @srcMode, align 4
  %411 = icmp eq i32 %410, 1
  br i1 %411, label %412, label %413

; <label>:412:                                    ; preds = %409
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:413:                                    ; preds = %409
  %414 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %415 = icmp ne %struct.zzzz* %414, null
  br i1 %415, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %413
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %434, %.lr.ph29.preheader
  %.427 = phi i8 [ %.5, %434 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %436, %434 ], [ %414, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %416 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %417 = load i8*, i8** %416, align 8
  %418 = call i32 @strcmp(i8* %417, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %434, label %420

; <label>:420:                                    ; preds = %.lr.ph29
  %421 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %422 = load i8*, i8** %421, align 8
  %423 = getelementptr inbounds i8, i8* %422, i64 0
  %424 = load i8, i8* %423, align 1
  %425 = sext i8 %424 to i32
  %426 = icmp eq i32 %425, 45
  %427 = zext i8 %.427 to i32
  %428 = icmp ne i32 %427, 0
  %or.cond11 = and i1 %426, %428
  br i1 %or.cond11, label %434, label %429

; <label>:429:                                    ; preds = %420
  %430 = load i32, i32* @numFilesProcessed, align 4
  %431 = add nsw i32 %430, 1
  store i32 %431, i32* @numFilesProcessed, align 4
  %432 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %433 = load i8*, i8** %432, align 8
  call void @uncompress(i8* %433)
  br label %434

; <label>:434:                                    ; preds = %429, %420, %.lr.ph29
  %.5 = phi i8 [ %.427, %429 ], [ 0, %.lr.ph29 ], [ %.427, %420 ]
  %435 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %436 = load %struct.zzzz*, %struct.zzzz** %435, align 8
  %437 = icmp ne %struct.zzzz* %436, null
  br i1 %437, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %434
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %413, %412
  %438 = load i8, i8* @unzFailsExist, align 1
  %439 = icmp ne i8 %438, 0
  br i1 %439, label %440, label %._crit_edge24

; <label>:440:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %441 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %441) #11
  unreachable

; <label>:442:                                    ; preds = %406
  store i8 0, i8* @testFailsExist, align 1
  %443 = load i32, i32* @srcMode, align 4
  %444 = icmp eq i32 %443, 1
  br i1 %444, label %445, label %446

; <label>:445:                                    ; preds = %442
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:446:                                    ; preds = %442
  %447 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %448 = icmp ne %struct.zzzz* %447, null
  br i1 %448, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %446
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %467, %.lr.ph35.preheader
  %.633 = phi i8 [ %.7, %467 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %469, %467 ], [ %447, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %449 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %450 = load i8*, i8** %449, align 8
  %451 = call i32 @strcmp(i8* %450, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %467, label %453

; <label>:453:                                    ; preds = %.lr.ph35
  %454 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %455 = load i8*, i8** %454, align 8
  %456 = getelementptr inbounds i8, i8* %455, i64 0
  %457 = load i8, i8* %456, align 1
  %458 = sext i8 %457 to i32
  %459 = icmp eq i32 %458, 45
  %460 = zext i8 %.633 to i32
  %461 = icmp ne i32 %460, 0
  %or.cond13 = and i1 %459, %461
  br i1 %or.cond13, label %467, label %462

; <label>:462:                                    ; preds = %453
  %463 = load i32, i32* @numFilesProcessed, align 4
  %464 = add nsw i32 %463, 1
  store i32 %464, i32* @numFilesProcessed, align 4
  %465 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %466 = load i8*, i8** %465, align 8
  call void @testf(i8* %466)
  br label %467

; <label>:467:                                    ; preds = %462, %453, %.lr.ph35
  %.7 = phi i8 [ %.633, %462 ], [ 0, %.lr.ph35 ], [ %.633, %453 ]
  %468 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %469 = load %struct.zzzz*, %struct.zzzz** %468, align 8
  %470 = icmp ne %struct.zzzz* %469, null
  br i1 %470, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %467
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %446, %445
  %471 = load i8, i8* @testFailsExist, align 1
  %472 = zext i8 %471 to i32
  %473 = icmp ne i32 %472, 0
  br i1 %473, label %474, label %._crit_edge24

; <label>:474:                                    ; preds = %._crit_edge36
  %475 = load i8, i8* @noisy, align 1
  %476 = zext i8 %475 to i32
  %477 = icmp ne i32 %476, 0
  br i1 %477, label %478, label %._crit_edge24

; <label>:478:                                    ; preds = %474
  %479 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %480 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %481 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %479, i8* %480)
  call void @setExit(i32 2)
  %482 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %482) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %402
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %474, %._crit_edge36, %._crit_edge30, %381, %380
  %483 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %484 = icmp ne %struct.zzzz* %483, null
  br i1 %484, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %493, %.lr.ph.preheader
  %.6718 = phi %struct.zzzz* [ %486, %493 ], [ %483, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %485 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %486 = load %struct.zzzz*, %struct.zzzz** %485, align 8
  %487 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %488 = load i8*, i8** %487, align 8
  %489 = icmp ne i8* %488, null
  br i1 %489, label %490, label %493

; <label>:490:                                    ; preds = %.lr.ph
  %491 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %492 = load i8*, i8** %491, align 8
  call void @free(i8* %492) #9
  br label %493

; <label>:493:                                    ; preds = %490, %.lr.ph
  %494 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %494) #9
  %495 = icmp ne %struct.zzzz* %486, null
  br i1 %495, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %493
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %496 = load i32, i32* @exitValue, align 4
  ret i32 %496

; <label>:497:                                    ; preds = %42
  call void @unroll_loop(i32 0)
  %498 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %499 = sext i8 122 to i32
  %500 = icmp eq i32 122, 47
  br i1 false, label %501, label %502

; <label>:501:                                    ; preds = %497
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), i8** @progName, align 8
  br label %502

; <label>:502:                                    ; preds = %501, %497
  call void @__loop_iteration_test___0()
  %503 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %504 = sext i8 105 to i32
  %505 = icmp ne i32 105, 0
  br i1 true, label %506, label %._crit_edge64.loopexit

; <label>:506:                                    ; preds = %502
  call void @unroll_loop(i32 0)
  %507 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %508 = sext i8 105 to i32
  %509 = icmp eq i32 105, 47
  br i1 false, label %510, label %511

; <label>:510:                                    ; preds = %506
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), i8** @progName, align 8
  br label %511

; <label>:511:                                    ; preds = %510, %506
  call void @__loop_iteration_test___0()
  %512 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %513 = sext i8 112 to i32
  %514 = icmp ne i32 112, 0
  br i1 true, label %515, label %._crit_edge64.loopexit

; <label>:515:                                    ; preds = %511
  call void @unroll_loop(i32 0)
  %516 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %517 = sext i8 112 to i32
  %518 = icmp eq i32 112, 47
  br i1 false, label %519, label %520

; <label>:519:                                    ; preds = %515
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), i8** @progName, align 8
  br label %520

; <label>:520:                                    ; preds = %519, %515
  call void @__loop_iteration_test___0()
  %521 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %522 = sext i8 50 to i32
  %523 = icmp ne i32 50, 0
  br i1 true, label %524, label %._crit_edge64.loopexit

; <label>:524:                                    ; preds = %520
  call void @unroll_loop(i32 0)
  %525 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %526 = sext i8 50 to i32
  %527 = icmp eq i32 50, 47
  br i1 false, label %528, label %529

; <label>:528:                                    ; preds = %524
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), i8** @progName, align 8
  br label %529

; <label>:529:                                    ; preds = %528, %524
  call void @__loop_iteration_test___0()
  %530 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %531 = sext i8 0 to i32
  %532 = icmp ne i32 0, 0
  br i1 false, label %533, label %._crit_edge64.loopexit

; <label>:533:                                    ; preds = %529
  call void @unroll_loop(i32 0)
  %534 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %535 = sext i8 %534 to i32
  %536 = icmp eq i32 %535, 47
  br i1 %536, label %537, label %538

; <label>:537:                                    ; preds = %533
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), i8** @progName, align 8
  br label %538

; <label>:538:                                    ; preds = %537, %533
  call void @__loop_iteration_test___0()
  %539 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %540 = sext i8 %539 to i32
  %541 = icmp ne i32 %540, 0
  br i1 %541, label %542, label %._crit_edge64.loopexit

; <label>:542:                                    ; preds = %538
  call void @unroll_loop(i32 0)
  %543 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %544 = sext i8 %543 to i32
  %545 = icmp eq i32 %544, 47
  br i1 %545, label %546, label %547

; <label>:546:                                    ; preds = %542
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), i8** @progName, align 8
  br label %547

; <label>:547:                                    ; preds = %546, %542
  call void @__loop_iteration_test___0()
  %548 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %549 = sext i8 %548 to i32
  %550 = icmp ne i32 %549, 0
  br i1 %550, label %551, label %._crit_edge64.loopexit

; <label>:551:                                    ; preds = %547
  call void @unroll_loop(i32 0)
  %552 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %553 = sext i8 %552 to i32
  %554 = icmp eq i32 %553, 47
  br i1 %554, label %555, label %556

; <label>:555:                                    ; preds = %551
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), i8** @progName, align 8
  br label %556

; <label>:556:                                    ; preds = %555, %551
  call void @__loop_iteration_test___0()
  %557 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %558 = sext i8 %557 to i32
  %559 = icmp ne i32 %558, 0
  br i1 %559, label %560, label %._crit_edge64.loopexit

; <label>:560:                                    ; preds = %556
  call void @unroll_loop(i32 0)
  %561 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %562 = sext i8 %561 to i32
  %563 = icmp eq i32 %562, 47
  br i1 %563, label %564, label %565

; <label>:564:                                    ; preds = %560
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), i8** @progName, align 8
  br label %565

; <label>:565:                                    ; preds = %564, %560
  call void @__loop_iteration_test___0()
  %566 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %567 = sext i8 %566 to i32
  %568 = icmp ne i32 %567, 0
  br i1 %568, label %569, label %._crit_edge64.loopexit

; <label>:569:                                    ; preds = %565
  call void @unroll_loop(i32 0)
  %570 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %571 = sext i8 %570 to i32
  %572 = icmp eq i32 %571, 47
  br i1 %572, label %573, label %574

; <label>:573:                                    ; preds = %569
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), i8** @progName, align 8
  br label %574

; <label>:574:                                    ; preds = %573, %569
  call void @__loop_iteration_test___0()
  %575 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %576 = sext i8 %575 to i32
  %577 = icmp ne i32 %576, 0
  br i1 %577, label %578, label %._crit_edge64.loopexit

; <label>:578:                                    ; preds = %574
  call void @unroll_loop(i32 0)
  %579 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %580 = sext i8 %579 to i32
  %581 = icmp eq i32 %580, 47
  br i1 %581, label %582, label %583

; <label>:582:                                    ; preds = %578
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), i8** @progName, align 8
  br label %583

; <label>:583:                                    ; preds = %582, %578
  call void @__loop_iteration_test___0()
  %584 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %585 = sext i8 %584 to i32
  %586 = icmp ne i32 %585, 0
  br i1 %586, label %587, label %._crit_edge64.loopexit

; <label>:587:                                    ; preds = %583
  call void @unroll_loop(i32 0)
  %588 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %589 = sext i8 %588 to i32
  %590 = icmp eq i32 %589, 47
  br i1 %590, label %591, label %592

; <label>:591:                                    ; preds = %587
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), i8** @progName, align 8
  br label %592

; <label>:592:                                    ; preds = %591, %587
  call void @__loop_iteration_test___0()
  %593 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %594 = sext i8 %593 to i32
  %595 = icmp ne i32 %594, 0
  br i1 %595, label %596, label %._crit_edge64.loopexit

; <label>:596:                                    ; preds = %592
  call void @unroll_loop(i32 0)
  %597 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %598 = sext i8 %597 to i32
  %599 = icmp eq i32 %598, 47
  br i1 %599, label %600, label %601

; <label>:600:                                    ; preds = %596
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), i8** @progName, align 8
  br label %601

; <label>:601:                                    ; preds = %600, %596
  call void @__loop_iteration_test___0()
  %602 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %603 = sext i8 %602 to i32
  %604 = icmp ne i32 %603, 0
  br i1 %604, label %605, label %._crit_edge64.loopexit

; <label>:605:                                    ; preds = %601
  call void @unroll_loop(i32 0)
  %606 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %607 = sext i8 %606 to i32
  %608 = icmp eq i32 %607, 47
  br i1 %608, label %609, label %610

; <label>:609:                                    ; preds = %605
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), i8** @progName, align 8
  br label %610

; <label>:610:                                    ; preds = %609, %605
  call void @__loop_iteration_test___0()
  %611 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %612 = sext i8 %611 to i32
  %613 = icmp ne i32 %612, 0
  br i1 %613, label %614, label %._crit_edge64.loopexit

; <label>:614:                                    ; preds = %610
  call void @unroll_loop(i32 0)
  %615 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %616 = sext i8 %615 to i32
  %617 = icmp eq i32 %616, 47
  br i1 %617, label %618, label %619

; <label>:618:                                    ; preds = %614
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), i8** @progName, align 8
  br label %619

; <label>:619:                                    ; preds = %618, %614
  call void @__loop_iteration_test___0()
  %620 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %621 = sext i8 %620 to i32
  %622 = icmp ne i32 %621, 0
  br i1 %622, label %623, label %._crit_edge64.loopexit

; <label>:623:                                    ; preds = %619
  call void @unroll_loop(i32 0)
  %624 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %625 = sext i8 %624 to i32
  %626 = icmp eq i32 %625, 47
  br i1 %626, label %627, label %628

; <label>:627:                                    ; preds = %623
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), i8** @progName, align 8
  br label %628

; <label>:628:                                    ; preds = %627, %623
  call void @__loop_iteration_test___0()
  %629 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %630 = sext i8 %629 to i32
  %631 = icmp ne i32 %630, 0
  br i1 %631, label %632, label %._crit_edge64.loopexit

; <label>:632:                                    ; preds = %628
  call void @unroll_loop(i32 0)
  %633 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %634 = sext i8 %633 to i32
  %635 = icmp eq i32 %634, 47
  br i1 %635, label %636, label %637

; <label>:636:                                    ; preds = %632
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), i8** @progName, align 8
  br label %637

; <label>:637:                                    ; preds = %636, %632
  call void @__loop_iteration_test___0()
  %638 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %639 = sext i8 %638 to i32
  %640 = icmp ne i32 %639, 0
  br i1 %640, label %641, label %._crit_edge64.loopexit

; <label>:641:                                    ; preds = %637
  call void @unroll_loop(i32 0)
  %642 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %643 = sext i8 %642 to i32
  %644 = icmp eq i32 %643, 47
  br i1 %644, label %645, label %646

; <label>:645:                                    ; preds = %641
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), i8** @progName, align 8
  br label %646

; <label>:646:                                    ; preds = %645, %641
  call void @__loop_iteration_test___0()
  %647 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %648 = sext i8 %647 to i32
  %649 = icmp ne i32 %648, 0
  br i1 %649, label %650, label %._crit_edge64.loopexit

; <label>:650:                                    ; preds = %646
  call void @unroll_loop(i32 0)
  %651 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %652 = sext i8 %651 to i32
  %653 = icmp eq i32 %652, 47
  br i1 %653, label %654, label %655

; <label>:654:                                    ; preds = %650
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), i8** @progName, align 8
  br label %655

; <label>:655:                                    ; preds = %654, %650
  call void @__loop_iteration_test___0()
  %656 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %657 = sext i8 %656 to i32
  %658 = icmp ne i32 %657, 0
  br i1 %658, label %659, label %._crit_edge64.loopexit

; <label>:659:                                    ; preds = %655
  call void @unroll_loop(i32 0)
  %660 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %661 = sext i8 %660 to i32
  %662 = icmp eq i32 %661, 47
  br i1 %662, label %663, label %664

; <label>:663:                                    ; preds = %659
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), i8** @progName, align 8
  br label %664

; <label>:664:                                    ; preds = %663, %659
  call void @__loop_iteration_test___0()
  %665 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), align 1
  %666 = sext i8 %665 to i32
  br label %._crit_edge64.loopexit

.lr.ph57.1:                                       ; preds = %.lr.ph57
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %667 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4, i64 1
  %668 = load i8*, i8** %scevgep7.1, align 8
  %669 = call %struct.zzzz* @snocString_clone.17(%struct.zzzz* %667, i8* %668)
  store %struct.zzzz* %669, %struct.zzzz** %22, align 8
  br label %._crit_edge58.loopexit

.lr.ph53.1:                                       ; preds = %82
  call void @unroll_loop(i32 2)
  %670 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %671 = load i8*, i8** %670, align 8
  %672 = getelementptr [10 x i8], [10 x i8]* @10, i64 0, i64 0
  %673 = getelementptr [3 x i8], [3 x i8]* @11, i64 0, i64 0
  %674 = call i32 @strcmp(i8* %672, i8* %673) #10
  %675 = icmp eq i32 1, 0
  br i1 false, label %700, label %676

; <label>:676:                                    ; preds = %.lr.ph53.1
  %677 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %678 = load i8*, i8** %677, align 8
  %679 = load i8, i8* %678, align 1
  %680 = sext i8 104 to i32
  %681 = icmp eq i32 104, 45
  %682 = zext i8 1 to i32
  %683 = icmp ne i32 1, 0
  %or.cond.1 = and i1 false, true
  br i1 false, label %700, label %684

; <label>:684:                                    ; preds = %676
  %685 = load i32, i32* @numFileNames, align 4
  %686 = add nsw i32 0, 1
  store i32 1, i32* @numFileNames, align 4
  %687 = load i32, i32* @longestFileName, align 4
  %688 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %689 = load i8*, i8** %688, align 8
  %690 = getelementptr [10 x i8], [10 x i8]* @12, i64 0, i64 0
  %691 = call i64 @strlen(i8* %690) #10
  %692 = trunc i64 9 to i32
  %693 = icmp slt i32 7, 9
  br i1 true, label %694, label %700

; <label>:694:                                    ; preds = %684
  %695 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %696 = load i8*, i8** %695, align 8
  %697 = getelementptr [10 x i8], [10 x i8]* @13, i64 0, i64 0
  %698 = call i64 @strlen(i8* %697) #10
  %699 = trunc i64 9 to i32
  store i32 9, i32* @longestFileName, align 4
  br label %700

; <label>:700:                                    ; preds = %694, %684, %676, %.lr.ph53.1
  %.1.1 = phi i8 [ 0, %.lr.ph53.1 ], [ 1, %676 ], [ 1, %694 ], [ 1, %684 ]
  call void @__loop_iteration_test___2()
  %701 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 1
  %702 = load %struct.zzzz*, %struct.zzzz** %701, align 8
  %703 = icmp ne i64 0, 0
  %704 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph53.2, label %._crit_edge54.loopexit

.lr.ph53.2:                                       ; preds = %700
  call void @unroll_loop(i32 2)
  %705 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %706 = load i8*, i8** %705, align 8
  %707 = call i32 @strcmp(i8* %706, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %708 = icmp eq i32 %707, 0
  br i1 %708, label %731, label %709

; <label>:709:                                    ; preds = %.lr.ph53.2
  %710 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %711 = load i8*, i8** %710, align 8
  %712 = load i8, i8* %711, align 1
  %713 = sext i8 %712 to i32
  %714 = icmp eq i32 %713, 45
  %715 = zext i8 1 to i32
  %716 = icmp ne i32 %715, 0
  %or.cond.2 = and i1 %714, %716
  br i1 %or.cond.2, label %731, label %717

; <label>:717:                                    ; preds = %709
  %718 = load i32, i32* @numFileNames, align 4
  %719 = add nsw i32 %718, 1
  store i32 %719, i32* @numFileNames, align 4
  %720 = load i32, i32* @longestFileName, align 4
  %721 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %722 = load i8*, i8** %721, align 8
  %723 = call i64 @strlen(i8* %722) #10
  %724 = trunc i64 %723 to i32
  %725 = icmp slt i32 %720, %724
  br i1 %725, label %726, label %731

; <label>:726:                                    ; preds = %717
  %727 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %728 = load i8*, i8** %727, align 8
  %729 = call i64 @strlen(i8* %728) #10
  %730 = trunc i64 %729 to i32
  store i32 %730, i32* @longestFileName, align 4
  br label %731

; <label>:731:                                    ; preds = %726, %717, %709, %.lr.ph53.2
  %.1.2 = phi i8 [ 0, %.lr.ph53.2 ], [ 1, %709 ], [ 1, %726 ], [ 1, %717 ]
  call void @__loop_iteration_test___2()
  %732 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %733 = load %struct.zzzz*, %struct.zzzz** %732, align 8
  %734 = icmp ne %struct.zzzz* %733, null
  br i1 %734, label %.lr.ph53.3, label %._crit_edge54.loopexit

.lr.ph53.3:                                       ; preds = %731
  call void @unroll_loop(i32 2)
  %735 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %733, i32 0, i32 0
  %736 = load i8*, i8** %735, align 8
  %737 = call i32 @strcmp(i8* %736, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %761, label %739

; <label>:739:                                    ; preds = %.lr.ph53.3
  %740 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %733, i32 0, i32 0
  %741 = load i8*, i8** %740, align 8
  %742 = load i8, i8* %741, align 1
  %743 = sext i8 %742 to i32
  %744 = icmp eq i32 %743, 45
  %745 = zext i8 %.1.2 to i32
  %746 = icmp ne i32 %745, 0
  %or.cond.3 = and i1 %744, %746
  br i1 %or.cond.3, label %761, label %747

; <label>:747:                                    ; preds = %739
  %748 = load i32, i32* @numFileNames, align 4
  %749 = add nsw i32 %748, 1
  store i32 %749, i32* @numFileNames, align 4
  %750 = load i32, i32* @longestFileName, align 4
  %751 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %733, i32 0, i32 0
  %752 = load i8*, i8** %751, align 8
  %753 = call i64 @strlen(i8* %752) #10
  %754 = trunc i64 %753 to i32
  %755 = icmp slt i32 %750, %754
  br i1 %755, label %756, label %761

; <label>:756:                                    ; preds = %747
  %757 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %733, i32 0, i32 0
  %758 = load i8*, i8** %757, align 8
  %759 = call i64 @strlen(i8* %758) #10
  %760 = trunc i64 %759 to i32
  store i32 %760, i32* @longestFileName, align 4
  br label %761

; <label>:761:                                    ; preds = %756, %747, %739, %.lr.ph53.3
  %.1.3 = phi i8 [ 0, %.lr.ph53.3 ], [ %.1.2, %739 ], [ %.1.2, %756 ], [ %.1.2, %747 ]
  call void @__loop_iteration_test___2()
  %762 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %733, i32 0, i32 1
  %763 = load %struct.zzzz*, %struct.zzzz** %762, align 8
  %764 = icmp ne %struct.zzzz* %763, null
  br i1 %764, label %.lr.ph53.4, label %._crit_edge54.loopexit

.lr.ph53.4:                                       ; preds = %761
  call void @unroll_loop(i32 2)
  %765 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %763, i32 0, i32 0
  %766 = load i8*, i8** %765, align 8
  %767 = call i32 @strcmp(i8* %766, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %791, label %769

; <label>:769:                                    ; preds = %.lr.ph53.4
  %770 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %763, i32 0, i32 0
  %771 = load i8*, i8** %770, align 8
  %772 = load i8, i8* %771, align 1
  %773 = sext i8 %772 to i32
  %774 = icmp eq i32 %773, 45
  %775 = zext i8 %.1.3 to i32
  %776 = icmp ne i32 %775, 0
  %or.cond.4 = and i1 %774, %776
  br i1 %or.cond.4, label %791, label %777

; <label>:777:                                    ; preds = %769
  %778 = load i32, i32* @numFileNames, align 4
  %779 = add nsw i32 %778, 1
  store i32 %779, i32* @numFileNames, align 4
  %780 = load i32, i32* @longestFileName, align 4
  %781 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %763, i32 0, i32 0
  %782 = load i8*, i8** %781, align 8
  %783 = call i64 @strlen(i8* %782) #10
  %784 = trunc i64 %783 to i32
  %785 = icmp slt i32 %780, %784
  br i1 %785, label %786, label %791

; <label>:786:                                    ; preds = %777
  %787 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %763, i32 0, i32 0
  %788 = load i8*, i8** %787, align 8
  %789 = call i64 @strlen(i8* %788) #10
  %790 = trunc i64 %789 to i32
  store i32 %790, i32* @longestFileName, align 4
  br label %791

; <label>:791:                                    ; preds = %786, %777, %769, %.lr.ph53.4
  %.1.4 = phi i8 [ 0, %.lr.ph53.4 ], [ %.1.3, %769 ], [ %.1.3, %786 ], [ %.1.3, %777 ]
  call void @__loop_iteration_test___2()
  %792 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %763, i32 0, i32 1
  %793 = load %struct.zzzz*, %struct.zzzz** %792, align 8
  %794 = icmp ne %struct.zzzz* %793, null
  br i1 %794, label %.lr.ph53.5, label %._crit_edge54.loopexit

.lr.ph53.5:                                       ; preds = %791
  call void @unroll_loop(i32 2)
  %795 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %793, i32 0, i32 0
  %796 = load i8*, i8** %795, align 8
  %797 = call i32 @strcmp(i8* %796, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %821, label %799

; <label>:799:                                    ; preds = %.lr.ph53.5
  %800 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %793, i32 0, i32 0
  %801 = load i8*, i8** %800, align 8
  %802 = load i8, i8* %801, align 1
  %803 = sext i8 %802 to i32
  %804 = icmp eq i32 %803, 45
  %805 = zext i8 %.1.4 to i32
  %806 = icmp ne i32 %805, 0
  %or.cond.5 = and i1 %804, %806
  br i1 %or.cond.5, label %821, label %807

; <label>:807:                                    ; preds = %799
  %808 = load i32, i32* @numFileNames, align 4
  %809 = add nsw i32 %808, 1
  store i32 %809, i32* @numFileNames, align 4
  %810 = load i32, i32* @longestFileName, align 4
  %811 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %793, i32 0, i32 0
  %812 = load i8*, i8** %811, align 8
  %813 = call i64 @strlen(i8* %812) #10
  %814 = trunc i64 %813 to i32
  %815 = icmp slt i32 %810, %814
  br i1 %815, label %816, label %821

; <label>:816:                                    ; preds = %807
  %817 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %793, i32 0, i32 0
  %818 = load i8*, i8** %817, align 8
  %819 = call i64 @strlen(i8* %818) #10
  %820 = trunc i64 %819 to i32
  store i32 %820, i32* @longestFileName, align 4
  br label %821

; <label>:821:                                    ; preds = %816, %807, %799, %.lr.ph53.5
  %.1.5 = phi i8 [ 0, %.lr.ph53.5 ], [ %.1.4, %799 ], [ %.1.4, %816 ], [ %.1.4, %807 ]
  call void @__loop_iteration_test___2()
  %822 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %793, i32 0, i32 1
  %823 = load %struct.zzzz*, %struct.zzzz** %822, align 8
  %824 = icmp ne %struct.zzzz* %823, null
  br i1 %824, label %.lr.ph53.6, label %._crit_edge54.loopexit

.lr.ph53.6:                                       ; preds = %821
  call void @unroll_loop(i32 2)
  %825 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %823, i32 0, i32 0
  %826 = load i8*, i8** %825, align 8
  %827 = call i32 @strcmp(i8* %826, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %828 = icmp eq i32 %827, 0
  br i1 %828, label %851, label %829

; <label>:829:                                    ; preds = %.lr.ph53.6
  %830 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %823, i32 0, i32 0
  %831 = load i8*, i8** %830, align 8
  %832 = load i8, i8* %831, align 1
  %833 = sext i8 %832 to i32
  %834 = icmp eq i32 %833, 45
  %835 = zext i8 %.1.5 to i32
  %836 = icmp ne i32 %835, 0
  %or.cond.6 = and i1 %834, %836
  br i1 %or.cond.6, label %851, label %837

; <label>:837:                                    ; preds = %829
  %838 = load i32, i32* @numFileNames, align 4
  %839 = add nsw i32 %838, 1
  store i32 %839, i32* @numFileNames, align 4
  %840 = load i32, i32* @longestFileName, align 4
  %841 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %823, i32 0, i32 0
  %842 = load i8*, i8** %841, align 8
  %843 = call i64 @strlen(i8* %842) #10
  %844 = trunc i64 %843 to i32
  %845 = icmp slt i32 %840, %844
  br i1 %845, label %846, label %851

; <label>:846:                                    ; preds = %837
  %847 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %823, i32 0, i32 0
  %848 = load i8*, i8** %847, align 8
  %849 = call i64 @strlen(i8* %848) #10
  %850 = trunc i64 %849 to i32
  store i32 %850, i32* @longestFileName, align 4
  br label %851

; <label>:851:                                    ; preds = %846, %837, %829, %.lr.ph53.6
  %.1.6 = phi i8 [ 0, %.lr.ph53.6 ], [ %.1.5, %829 ], [ %.1.5, %846 ], [ %.1.5, %837 ]
  call void @__loop_iteration_test___2()
  %852 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %823, i32 0, i32 1
  %853 = load %struct.zzzz*, %struct.zzzz** %852, align 8
  %854 = icmp ne %struct.zzzz* %853, null
  br i1 %854, label %.lr.ph53.7, label %._crit_edge54.loopexit

.lr.ph53.7:                                       ; preds = %851
  call void @unroll_loop(i32 2)
  %855 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %853, i32 0, i32 0
  %856 = load i8*, i8** %855, align 8
  %857 = call i32 @strcmp(i8* %856, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %858 = icmp eq i32 %857, 0
  br i1 %858, label %881, label %859

; <label>:859:                                    ; preds = %.lr.ph53.7
  %860 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %853, i32 0, i32 0
  %861 = load i8*, i8** %860, align 8
  %862 = load i8, i8* %861, align 1
  %863 = sext i8 %862 to i32
  %864 = icmp eq i32 %863, 45
  %865 = zext i8 %.1.6 to i32
  %866 = icmp ne i32 %865, 0
  %or.cond.7 = and i1 %864, %866
  br i1 %or.cond.7, label %881, label %867

; <label>:867:                                    ; preds = %859
  %868 = load i32, i32* @numFileNames, align 4
  %869 = add nsw i32 %868, 1
  store i32 %869, i32* @numFileNames, align 4
  %870 = load i32, i32* @longestFileName, align 4
  %871 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %853, i32 0, i32 0
  %872 = load i8*, i8** %871, align 8
  %873 = call i64 @strlen(i8* %872) #10
  %874 = trunc i64 %873 to i32
  %875 = icmp slt i32 %870, %874
  br i1 %875, label %876, label %881

; <label>:876:                                    ; preds = %867
  %877 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %853, i32 0, i32 0
  %878 = load i8*, i8** %877, align 8
  %879 = call i64 @strlen(i8* %878) #10
  %880 = trunc i64 %879 to i32
  store i32 %880, i32* @longestFileName, align 4
  br label %881

; <label>:881:                                    ; preds = %876, %867, %859, %.lr.ph53.7
  %.1.7 = phi i8 [ 0, %.lr.ph53.7 ], [ %.1.6, %859 ], [ %.1.6, %876 ], [ %.1.6, %867 ]
  call void @__loop_iteration_test___2()
  %882 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %853, i32 0, i32 1
  %883 = load %struct.zzzz*, %struct.zzzz** %882, align 8
  %884 = icmp ne %struct.zzzz* %883, null
  br i1 %884, label %.lr.ph53.8, label %._crit_edge54.loopexit

.lr.ph53.8:                                       ; preds = %881
  call void @unroll_loop(i32 2)
  %885 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %883, i32 0, i32 0
  %886 = load i8*, i8** %885, align 8
  %887 = call i32 @strcmp(i8* %886, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %911, label %889

; <label>:889:                                    ; preds = %.lr.ph53.8
  %890 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %883, i32 0, i32 0
  %891 = load i8*, i8** %890, align 8
  %892 = load i8, i8* %891, align 1
  %893 = sext i8 %892 to i32
  %894 = icmp eq i32 %893, 45
  %895 = zext i8 %.1.7 to i32
  %896 = icmp ne i32 %895, 0
  %or.cond.8 = and i1 %894, %896
  br i1 %or.cond.8, label %911, label %897

; <label>:897:                                    ; preds = %889
  %898 = load i32, i32* @numFileNames, align 4
  %899 = add nsw i32 %898, 1
  store i32 %899, i32* @numFileNames, align 4
  %900 = load i32, i32* @longestFileName, align 4
  %901 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %883, i32 0, i32 0
  %902 = load i8*, i8** %901, align 8
  %903 = call i64 @strlen(i8* %902) #10
  %904 = trunc i64 %903 to i32
  %905 = icmp slt i32 %900, %904
  br i1 %905, label %906, label %911

; <label>:906:                                    ; preds = %897
  %907 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %883, i32 0, i32 0
  %908 = load i8*, i8** %907, align 8
  %909 = call i64 @strlen(i8* %908) #10
  %910 = trunc i64 %909 to i32
  store i32 %910, i32* @longestFileName, align 4
  br label %911

; <label>:911:                                    ; preds = %906, %897, %889, %.lr.ph53.8
  %.1.8 = phi i8 [ 0, %.lr.ph53.8 ], [ %.1.7, %889 ], [ %.1.7, %906 ], [ %.1.7, %897 ]
  call void @__loop_iteration_test___2()
  %912 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %883, i32 0, i32 1
  %913 = load %struct.zzzz*, %struct.zzzz** %912, align 8
  %914 = icmp ne %struct.zzzz* %913, null
  br i1 %914, label %.lr.ph53.9, label %._crit_edge54.loopexit

.lr.ph53.9:                                       ; preds = %911
  call void @unroll_loop(i32 2)
  %915 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %913, i32 0, i32 0
  %916 = load i8*, i8** %915, align 8
  %917 = call i32 @strcmp(i8* %916, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %941, label %919

; <label>:919:                                    ; preds = %.lr.ph53.9
  %920 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %913, i32 0, i32 0
  %921 = load i8*, i8** %920, align 8
  %922 = load i8, i8* %921, align 1
  %923 = sext i8 %922 to i32
  %924 = icmp eq i32 %923, 45
  %925 = zext i8 %.1.8 to i32
  %926 = icmp ne i32 %925, 0
  %or.cond.9 = and i1 %924, %926
  br i1 %or.cond.9, label %941, label %927

; <label>:927:                                    ; preds = %919
  %928 = load i32, i32* @numFileNames, align 4
  %929 = add nsw i32 %928, 1
  store i32 %929, i32* @numFileNames, align 4
  %930 = load i32, i32* @longestFileName, align 4
  %931 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %913, i32 0, i32 0
  %932 = load i8*, i8** %931, align 8
  %933 = call i64 @strlen(i8* %932) #10
  %934 = trunc i64 %933 to i32
  %935 = icmp slt i32 %930, %934
  br i1 %935, label %936, label %941

; <label>:936:                                    ; preds = %927
  %937 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %913, i32 0, i32 0
  %938 = load i8*, i8** %937, align 8
  %939 = call i64 @strlen(i8* %938) #10
  %940 = trunc i64 %939 to i32
  store i32 %940, i32* @longestFileName, align 4
  br label %941

; <label>:941:                                    ; preds = %936, %927, %919, %.lr.ph53.9
  %.1.9 = phi i8 [ 0, %.lr.ph53.9 ], [ %.1.8, %919 ], [ %.1.8, %936 ], [ %.1.8, %927 ]
  call void @__loop_iteration_test___2()
  %942 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %913, i32 0, i32 1
  %943 = load %struct.zzzz*, %struct.zzzz** %942, align 8
  %944 = icmp ne %struct.zzzz* %943, null
  br i1 %944, label %.lr.ph53.10, label %._crit_edge54.loopexit

.lr.ph53.10:                                      ; preds = %941
  call void @unroll_loop(i32 2)
  %945 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %943, i32 0, i32 0
  %946 = load i8*, i8** %945, align 8
  %947 = call i32 @strcmp(i8* %946, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %948 = icmp eq i32 %947, 0
  br i1 %948, label %971, label %949

; <label>:949:                                    ; preds = %.lr.ph53.10
  %950 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %943, i32 0, i32 0
  %951 = load i8*, i8** %950, align 8
  %952 = load i8, i8* %951, align 1
  %953 = sext i8 %952 to i32
  %954 = icmp eq i32 %953, 45
  %955 = zext i8 %.1.9 to i32
  %956 = icmp ne i32 %955, 0
  %or.cond.10 = and i1 %954, %956
  br i1 %or.cond.10, label %971, label %957

; <label>:957:                                    ; preds = %949
  %958 = load i32, i32* @numFileNames, align 4
  %959 = add nsw i32 %958, 1
  store i32 %959, i32* @numFileNames, align 4
  %960 = load i32, i32* @longestFileName, align 4
  %961 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %943, i32 0, i32 0
  %962 = load i8*, i8** %961, align 8
  %963 = call i64 @strlen(i8* %962) #10
  %964 = trunc i64 %963 to i32
  %965 = icmp slt i32 %960, %964
  br i1 %965, label %966, label %971

; <label>:966:                                    ; preds = %957
  %967 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %943, i32 0, i32 0
  %968 = load i8*, i8** %967, align 8
  %969 = call i64 @strlen(i8* %968) #10
  %970 = trunc i64 %969 to i32
  store i32 %970, i32* @longestFileName, align 4
  br label %971

; <label>:971:                                    ; preds = %966, %957, %949, %.lr.ph53.10
  %.1.10 = phi i8 [ 0, %.lr.ph53.10 ], [ %.1.9, %949 ], [ %.1.9, %966 ], [ %.1.9, %957 ]
  call void @__loop_iteration_test___2()
  %972 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %943, i32 0, i32 1
  %973 = load %struct.zzzz*, %struct.zzzz** %972, align 8
  %974 = icmp ne %struct.zzzz* %973, null
  br i1 %974, label %.lr.ph53.11, label %._crit_edge54.loopexit

.lr.ph53.11:                                      ; preds = %971
  call void @unroll_loop(i32 2)
  %975 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %973, i32 0, i32 0
  %976 = load i8*, i8** %975, align 8
  %977 = call i32 @strcmp(i8* %976, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %1001, label %979

; <label>:979:                                    ; preds = %.lr.ph53.11
  %980 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %973, i32 0, i32 0
  %981 = load i8*, i8** %980, align 8
  %982 = load i8, i8* %981, align 1
  %983 = sext i8 %982 to i32
  %984 = icmp eq i32 %983, 45
  %985 = zext i8 %.1.10 to i32
  %986 = icmp ne i32 %985, 0
  %or.cond.11 = and i1 %984, %986
  br i1 %or.cond.11, label %1001, label %987

; <label>:987:                                    ; preds = %979
  %988 = load i32, i32* @numFileNames, align 4
  %989 = add nsw i32 %988, 1
  store i32 %989, i32* @numFileNames, align 4
  %990 = load i32, i32* @longestFileName, align 4
  %991 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %973, i32 0, i32 0
  %992 = load i8*, i8** %991, align 8
  %993 = call i64 @strlen(i8* %992) #10
  %994 = trunc i64 %993 to i32
  %995 = icmp slt i32 %990, %994
  br i1 %995, label %996, label %1001

; <label>:996:                                    ; preds = %987
  %997 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %973, i32 0, i32 0
  %998 = load i8*, i8** %997, align 8
  %999 = call i64 @strlen(i8* %998) #10
  %1000 = trunc i64 %999 to i32
  store i32 %1000, i32* @longestFileName, align 4
  br label %1001

; <label>:1001:                                   ; preds = %996, %987, %979, %.lr.ph53.11
  %.1.11 = phi i8 [ 0, %.lr.ph53.11 ], [ %.1.10, %979 ], [ %.1.10, %996 ], [ %.1.10, %987 ]
  call void @__loop_iteration_test___2()
  %1002 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %973, i32 0, i32 1
  %1003 = load %struct.zzzz*, %struct.zzzz** %1002, align 8
  %1004 = icmp ne %struct.zzzz* %1003, null
  br i1 %1004, label %.lr.ph53.12, label %._crit_edge54.loopexit

.lr.ph53.12:                                      ; preds = %1001
  call void @unroll_loop(i32 2)
  %1005 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1003, i32 0, i32 0
  %1006 = load i8*, i8** %1005, align 8
  %1007 = call i32 @strcmp(i8* %1006, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1031, label %1009

; <label>:1009:                                   ; preds = %.lr.ph53.12
  %1010 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1003, i32 0, i32 0
  %1011 = load i8*, i8** %1010, align 8
  %1012 = load i8, i8* %1011, align 1
  %1013 = sext i8 %1012 to i32
  %1014 = icmp eq i32 %1013, 45
  %1015 = zext i8 %.1.11 to i32
  %1016 = icmp ne i32 %1015, 0
  %or.cond.12 = and i1 %1014, %1016
  br i1 %or.cond.12, label %1031, label %1017

; <label>:1017:                                   ; preds = %1009
  %1018 = load i32, i32* @numFileNames, align 4
  %1019 = add nsw i32 %1018, 1
  store i32 %1019, i32* @numFileNames, align 4
  %1020 = load i32, i32* @longestFileName, align 4
  %1021 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1003, i32 0, i32 0
  %1022 = load i8*, i8** %1021, align 8
  %1023 = call i64 @strlen(i8* %1022) #10
  %1024 = trunc i64 %1023 to i32
  %1025 = icmp slt i32 %1020, %1024
  br i1 %1025, label %1026, label %1031

; <label>:1026:                                   ; preds = %1017
  %1027 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1003, i32 0, i32 0
  %1028 = load i8*, i8** %1027, align 8
  %1029 = call i64 @strlen(i8* %1028) #10
  %1030 = trunc i64 %1029 to i32
  store i32 %1030, i32* @longestFileName, align 4
  br label %1031

; <label>:1031:                                   ; preds = %1026, %1017, %1009, %.lr.ph53.12
  %.1.12 = phi i8 [ 0, %.lr.ph53.12 ], [ %.1.11, %1009 ], [ %.1.11, %1026 ], [ %.1.11, %1017 ]
  call void @__loop_iteration_test___2()
  %1032 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1003, i32 0, i32 1
  %1033 = load %struct.zzzz*, %struct.zzzz** %1032, align 8
  %1034 = icmp ne %struct.zzzz* %1033, null
  br i1 %1034, label %.lr.ph53.13, label %._crit_edge54.loopexit

.lr.ph53.13:                                      ; preds = %1031
  call void @unroll_loop(i32 2)
  %1035 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1033, i32 0, i32 0
  %1036 = load i8*, i8** %1035, align 8
  %1037 = call i32 @strcmp(i8* %1036, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1038 = icmp eq i32 %1037, 0
  br i1 %1038, label %1061, label %1039

; <label>:1039:                                   ; preds = %.lr.ph53.13
  %1040 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1033, i32 0, i32 0
  %1041 = load i8*, i8** %1040, align 8
  %1042 = load i8, i8* %1041, align 1
  %1043 = sext i8 %1042 to i32
  %1044 = icmp eq i32 %1043, 45
  %1045 = zext i8 %.1.12 to i32
  %1046 = icmp ne i32 %1045, 0
  %or.cond.13 = and i1 %1044, %1046
  br i1 %or.cond.13, label %1061, label %1047

; <label>:1047:                                   ; preds = %1039
  %1048 = load i32, i32* @numFileNames, align 4
  %1049 = add nsw i32 %1048, 1
  store i32 %1049, i32* @numFileNames, align 4
  %1050 = load i32, i32* @longestFileName, align 4
  %1051 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1033, i32 0, i32 0
  %1052 = load i8*, i8** %1051, align 8
  %1053 = call i64 @strlen(i8* %1052) #10
  %1054 = trunc i64 %1053 to i32
  %1055 = icmp slt i32 %1050, %1054
  br i1 %1055, label %1056, label %1061

; <label>:1056:                                   ; preds = %1047
  %1057 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1033, i32 0, i32 0
  %1058 = load i8*, i8** %1057, align 8
  %1059 = call i64 @strlen(i8* %1058) #10
  %1060 = trunc i64 %1059 to i32
  store i32 %1060, i32* @longestFileName, align 4
  br label %1061

; <label>:1061:                                   ; preds = %1056, %1047, %1039, %.lr.ph53.13
  %.1.13 = phi i8 [ 0, %.lr.ph53.13 ], [ %.1.12, %1039 ], [ %.1.12, %1056 ], [ %.1.12, %1047 ]
  call void @__loop_iteration_test___2()
  %1062 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1033, i32 0, i32 1
  %1063 = load %struct.zzzz*, %struct.zzzz** %1062, align 8
  %1064 = icmp ne %struct.zzzz* %1063, null
  br i1 %1064, label %.lr.ph53.14, label %._crit_edge54.loopexit

.lr.ph53.14:                                      ; preds = %1061
  call void @unroll_loop(i32 2)
  %1065 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1063, i32 0, i32 0
  %1066 = load i8*, i8** %1065, align 8
  %1067 = call i32 @strcmp(i8* %1066, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1091, label %1069

; <label>:1069:                                   ; preds = %.lr.ph53.14
  %1070 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1063, i32 0, i32 0
  %1071 = load i8*, i8** %1070, align 8
  %1072 = load i8, i8* %1071, align 1
  %1073 = sext i8 %1072 to i32
  %1074 = icmp eq i32 %1073, 45
  %1075 = zext i8 %.1.13 to i32
  %1076 = icmp ne i32 %1075, 0
  %or.cond.14 = and i1 %1074, %1076
  br i1 %or.cond.14, label %1091, label %1077

; <label>:1077:                                   ; preds = %1069
  %1078 = load i32, i32* @numFileNames, align 4
  %1079 = add nsw i32 %1078, 1
  store i32 %1079, i32* @numFileNames, align 4
  %1080 = load i32, i32* @longestFileName, align 4
  %1081 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1063, i32 0, i32 0
  %1082 = load i8*, i8** %1081, align 8
  %1083 = call i64 @strlen(i8* %1082) #10
  %1084 = trunc i64 %1083 to i32
  %1085 = icmp slt i32 %1080, %1084
  br i1 %1085, label %1086, label %1091

; <label>:1086:                                   ; preds = %1077
  %1087 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1063, i32 0, i32 0
  %1088 = load i8*, i8** %1087, align 8
  %1089 = call i64 @strlen(i8* %1088) #10
  %1090 = trunc i64 %1089 to i32
  store i32 %1090, i32* @longestFileName, align 4
  br label %1091

; <label>:1091:                                   ; preds = %1086, %1077, %1069, %.lr.ph53.14
  %.1.14 = phi i8 [ 0, %.lr.ph53.14 ], [ %.1.13, %1069 ], [ %.1.13, %1086 ], [ %.1.13, %1077 ]
  call void @__loop_iteration_test___2()
  %1092 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1063, i32 0, i32 1
  %1093 = load %struct.zzzz*, %struct.zzzz** %1092, align 8
  %1094 = icmp ne %struct.zzzz* %1093, null
  br i1 %1094, label %.lr.ph53.15, label %._crit_edge54.loopexit

.lr.ph53.15:                                      ; preds = %1091
  call void @unroll_loop(i32 2)
  %1095 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1093, i32 0, i32 0
  %1096 = load i8*, i8** %1095, align 8
  %1097 = call i32 @strcmp(i8* %1096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1098 = icmp eq i32 %1097, 0
  br i1 %1098, label %1121, label %1099

; <label>:1099:                                   ; preds = %.lr.ph53.15
  %1100 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1093, i32 0, i32 0
  %1101 = load i8*, i8** %1100, align 8
  %1102 = load i8, i8* %1101, align 1
  %1103 = sext i8 %1102 to i32
  %1104 = icmp eq i32 %1103, 45
  %1105 = zext i8 %.1.14 to i32
  %1106 = icmp ne i32 %1105, 0
  %or.cond.15 = and i1 %1104, %1106
  br i1 %or.cond.15, label %1121, label %1107

; <label>:1107:                                   ; preds = %1099
  %1108 = load i32, i32* @numFileNames, align 4
  %1109 = add nsw i32 %1108, 1
  store i32 %1109, i32* @numFileNames, align 4
  %1110 = load i32, i32* @longestFileName, align 4
  %1111 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1093, i32 0, i32 0
  %1112 = load i8*, i8** %1111, align 8
  %1113 = call i64 @strlen(i8* %1112) #10
  %1114 = trunc i64 %1113 to i32
  %1115 = icmp slt i32 %1110, %1114
  br i1 %1115, label %1116, label %1121

; <label>:1116:                                   ; preds = %1107
  %1117 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1093, i32 0, i32 0
  %1118 = load i8*, i8** %1117, align 8
  %1119 = call i64 @strlen(i8* %1118) #10
  %1120 = trunc i64 %1119 to i32
  store i32 %1120, i32* @longestFileName, align 4
  br label %1121

; <label>:1121:                                   ; preds = %1116, %1107, %1099, %.lr.ph53.15
  %.1.15 = phi i8 [ 0, %.lr.ph53.15 ], [ %.1.14, %1099 ], [ %.1.14, %1116 ], [ %.1.14, %1107 ]
  call void @__loop_iteration_test___2()
  %1122 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1093, i32 0, i32 1
  %1123 = load %struct.zzzz*, %struct.zzzz** %1122, align 8
  %1124 = icmp ne %struct.zzzz* %1123, null
  br i1 %1124, label %.lr.ph53.16, label %._crit_edge54.loopexit

.lr.ph53.16:                                      ; preds = %1121
  call void @unroll_loop(i32 2)
  %1125 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1123, i32 0, i32 0
  %1126 = load i8*, i8** %1125, align 8
  %1127 = call i32 @strcmp(i8* %1126, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1128 = icmp eq i32 %1127, 0
  br i1 %1128, label %1151, label %1129

; <label>:1129:                                   ; preds = %.lr.ph53.16
  %1130 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1123, i32 0, i32 0
  %1131 = load i8*, i8** %1130, align 8
  %1132 = load i8, i8* %1131, align 1
  %1133 = sext i8 %1132 to i32
  %1134 = icmp eq i32 %1133, 45
  %1135 = zext i8 %.1.15 to i32
  %1136 = icmp ne i32 %1135, 0
  %or.cond.16 = and i1 %1134, %1136
  br i1 %or.cond.16, label %1151, label %1137

; <label>:1137:                                   ; preds = %1129
  %1138 = load i32, i32* @numFileNames, align 4
  %1139 = add nsw i32 %1138, 1
  store i32 %1139, i32* @numFileNames, align 4
  %1140 = load i32, i32* @longestFileName, align 4
  %1141 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1123, i32 0, i32 0
  %1142 = load i8*, i8** %1141, align 8
  %1143 = call i64 @strlen(i8* %1142) #10
  %1144 = trunc i64 %1143 to i32
  %1145 = icmp slt i32 %1140, %1144
  br i1 %1145, label %1146, label %1151

; <label>:1146:                                   ; preds = %1137
  %1147 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1123, i32 0, i32 0
  %1148 = load i8*, i8** %1147, align 8
  %1149 = call i64 @strlen(i8* %1148) #10
  %1150 = trunc i64 %1149 to i32
  store i32 %1150, i32* @longestFileName, align 4
  br label %1151

; <label>:1151:                                   ; preds = %1146, %1137, %1129, %.lr.ph53.16
  %.1.16 = phi i8 [ 0, %.lr.ph53.16 ], [ %.1.15, %1129 ], [ %.1.15, %1146 ], [ %.1.15, %1137 ]
  call void @__loop_iteration_test___2()
  %1152 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1123, i32 0, i32 1
  %1153 = load %struct.zzzz*, %struct.zzzz** %1152, align 8
  %1154 = icmp ne %struct.zzzz* %1153, null
  br i1 %1154, label %.lr.ph53.17, label %._crit_edge54.loopexit

.lr.ph53.17:                                      ; preds = %1151
  call void @unroll_loop(i32 2)
  %1155 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1153, i32 0, i32 0
  %1156 = load i8*, i8** %1155, align 8
  %1157 = call i32 @strcmp(i8* %1156, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1158 = icmp eq i32 %1157, 0
  br i1 %1158, label %1181, label %1159

; <label>:1159:                                   ; preds = %.lr.ph53.17
  %1160 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1153, i32 0, i32 0
  %1161 = load i8*, i8** %1160, align 8
  %1162 = load i8, i8* %1161, align 1
  %1163 = sext i8 %1162 to i32
  %1164 = icmp eq i32 %1163, 45
  %1165 = zext i8 %.1.16 to i32
  %1166 = icmp ne i32 %1165, 0
  %or.cond.17 = and i1 %1164, %1166
  br i1 %or.cond.17, label %1181, label %1167

; <label>:1167:                                   ; preds = %1159
  %1168 = load i32, i32* @numFileNames, align 4
  %1169 = add nsw i32 %1168, 1
  store i32 %1169, i32* @numFileNames, align 4
  %1170 = load i32, i32* @longestFileName, align 4
  %1171 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1153, i32 0, i32 0
  %1172 = load i8*, i8** %1171, align 8
  %1173 = call i64 @strlen(i8* %1172) #10
  %1174 = trunc i64 %1173 to i32
  %1175 = icmp slt i32 %1170, %1174
  br i1 %1175, label %1176, label %1181

; <label>:1176:                                   ; preds = %1167
  %1177 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1153, i32 0, i32 0
  %1178 = load i8*, i8** %1177, align 8
  %1179 = call i64 @strlen(i8* %1178) #10
  %1180 = trunc i64 %1179 to i32
  store i32 %1180, i32* @longestFileName, align 4
  br label %1181

; <label>:1181:                                   ; preds = %1176, %1167, %1159, %.lr.ph53.17
  %.1.17 = phi i8 [ 0, %.lr.ph53.17 ], [ %.1.16, %1159 ], [ %.1.16, %1176 ], [ %.1.16, %1167 ]
  call void @__loop_iteration_test___2()
  %1182 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1153, i32 0, i32 1
  %1183 = load %struct.zzzz*, %struct.zzzz** %1182, align 8
  %1184 = icmp ne %struct.zzzz* %1183, null
  br i1 %1184, label %.lr.ph53.18, label %._crit_edge54.loopexit

.lr.ph53.18:                                      ; preds = %1181
  call void @unroll_loop(i32 2)
  %1185 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1183, i32 0, i32 0
  %1186 = load i8*, i8** %1185, align 8
  %1187 = call i32 @strcmp(i8* %1186, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1188 = icmp eq i32 %1187, 0
  br i1 %1188, label %1211, label %1189

; <label>:1189:                                   ; preds = %.lr.ph53.18
  %1190 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1183, i32 0, i32 0
  %1191 = load i8*, i8** %1190, align 8
  %1192 = load i8, i8* %1191, align 1
  %1193 = sext i8 %1192 to i32
  %1194 = icmp eq i32 %1193, 45
  %1195 = zext i8 %.1.17 to i32
  %1196 = icmp ne i32 %1195, 0
  %or.cond.18 = and i1 %1194, %1196
  br i1 %or.cond.18, label %1211, label %1197

; <label>:1197:                                   ; preds = %1189
  %1198 = load i32, i32* @numFileNames, align 4
  %1199 = add nsw i32 %1198, 1
  store i32 %1199, i32* @numFileNames, align 4
  %1200 = load i32, i32* @longestFileName, align 4
  %1201 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1183, i32 0, i32 0
  %1202 = load i8*, i8** %1201, align 8
  %1203 = call i64 @strlen(i8* %1202) #10
  %1204 = trunc i64 %1203 to i32
  %1205 = icmp slt i32 %1200, %1204
  br i1 %1205, label %1206, label %1211

; <label>:1206:                                   ; preds = %1197
  %1207 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1183, i32 0, i32 0
  %1208 = load i8*, i8** %1207, align 8
  %1209 = call i64 @strlen(i8* %1208) #10
  %1210 = trunc i64 %1209 to i32
  store i32 %1210, i32* @longestFileName, align 4
  br label %1211

; <label>:1211:                                   ; preds = %1206, %1197, %1189, %.lr.ph53.18
  %.1.18 = phi i8 [ 0, %.lr.ph53.18 ], [ %.1.17, %1189 ], [ %.1.17, %1206 ], [ %.1.17, %1197 ]
  call void @__loop_iteration_test___2()
  %1212 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1183, i32 0, i32 1
  %1213 = load %struct.zzzz*, %struct.zzzz** %1212, align 8
  %1214 = icmp ne %struct.zzzz* %1213, null
  br i1 %1214, label %.lr.ph53.19, label %._crit_edge54.loopexit

.lr.ph53.19:                                      ; preds = %1211
  call void @unroll_loop(i32 2)
  %1215 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1213, i32 0, i32 0
  %1216 = load i8*, i8** %1215, align 8
  %1217 = call i32 @strcmp(i8* %1216, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1241, label %1219

; <label>:1219:                                   ; preds = %.lr.ph53.19
  %1220 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1213, i32 0, i32 0
  %1221 = load i8*, i8** %1220, align 8
  %1222 = load i8, i8* %1221, align 1
  %1223 = sext i8 %1222 to i32
  %1224 = icmp eq i32 %1223, 45
  %1225 = zext i8 %.1.18 to i32
  %1226 = icmp ne i32 %1225, 0
  %or.cond.19 = and i1 %1224, %1226
  br i1 %or.cond.19, label %1241, label %1227

; <label>:1227:                                   ; preds = %1219
  %1228 = load i32, i32* @numFileNames, align 4
  %1229 = add nsw i32 %1228, 1
  store i32 %1229, i32* @numFileNames, align 4
  %1230 = load i32, i32* @longestFileName, align 4
  %1231 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1213, i32 0, i32 0
  %1232 = load i8*, i8** %1231, align 8
  %1233 = call i64 @strlen(i8* %1232) #10
  %1234 = trunc i64 %1233 to i32
  %1235 = icmp slt i32 %1230, %1234
  br i1 %1235, label %1236, label %1241

; <label>:1236:                                   ; preds = %1227
  %1237 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1213, i32 0, i32 0
  %1238 = load i8*, i8** %1237, align 8
  %1239 = call i64 @strlen(i8* %1238) #10
  %1240 = trunc i64 %1239 to i32
  store i32 %1240, i32* @longestFileName, align 4
  br label %1241

; <label>:1241:                                   ; preds = %1236, %1227, %1219, %.lr.ph53.19
  call void @__loop_iteration_test___2()
  %1242 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1213, i32 0, i32 1
  %1243 = load %struct.zzzz*, %struct.zzzz** %1242, align 8
  br label %._crit_edge54.loopexit

.lr.ph48.1:                                       ; preds = %._crit_edge43
  call void @unroll_loop(i32 3)
  %1244 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1245 = load i8*, i8** %1244, align 8
  %1246 = call i32 @strcmp(i8* %1245, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1247 = icmp eq i32 %1246, 0
  br i1 %1247, label %.loopexit17.loopexit, label %1248

; <label>:1248:                                   ; preds = %.lr.ph48.1
  %1249 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1250 = load i8*, i8** %1249, align 8
  %1251 = load i8, i8* %1250, align 1
  %1252 = sext i8 %1251 to i32
  %1253 = icmp eq i32 %1252, 45
  br i1 %1253, label %1254, label %._crit_edge43.1

; <label>:1254:                                   ; preds = %1248
  %1255 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1256 = load i8*, i8** %1255, align 8
  %1257 = getelementptr inbounds i8, i8* %1256, i64 1
  %1258 = load i8, i8* %1257, align 1
  %1259 = sext i8 %1258 to i32
  %1260 = icmp ne i32 %1259, 45
  br i1 %1260, label %1261, label %._crit_edge43.1

; <label>:1261:                                   ; preds = %1254
  %1262 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1263 = load i8*, i8** %1262, align 8
  %1264 = getelementptr inbounds i8, i8* %1263, i64 1
  %1265 = load i8, i8* %1264, align 1
  %1266 = sext i8 %1265 to i32
  %1267 = icmp ne i32 %1266, 0
  br i1 %1267, label %.lr.ph42.preheader.1, label %._crit_edge43.1

.lr.ph42.preheader.1:                             ; preds = %1261
  %1268 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  br label %.lr.ph42.1

.lr.ph42.1:                                       ; preds = %1293, %.lr.ph42.preheader.1
  %lsr.iv.1 = phi i64 [ 0, %.lr.ph42.preheader.1 ], [ %lsr.iv.next.1, %1293 ]
  call void @unroll_loop(i32 4)
  %1269 = load i8*, i8** %1268, align 8
  %scevgep.1 = getelementptr i8, i8* %1269, i64 1
  %scevgep1.1 = getelementptr i8, i8* %scevgep.1, i64 %lsr.iv.1
  %1270 = load i8, i8* %scevgep1.1, align 1
  %1271 = sext i8 %1270 to i32
  switch i32 %1271, label %.loopexit3 [
    i32 99, label %1292
    i32 100, label %1291
    i32 122, label %1290
    i32 102, label %1289
    i32 116, label %1288
    i32 107, label %1287
    i32 115, label %1286
    i32 113, label %1285
    i32 49, label %1284
    i32 50, label %1283
    i32 51, label %1282
    i32 52, label %1281
    i32 53, label %1280
    i32 54, label %1279
    i32 55, label %1278
    i32 56, label %1277
    i32 57, label %1276
    i32 86, label %1275
    i32 76, label %1275
    i32 118, label %1272
    i32 104, label %.loopexit4
  ]

; <label>:1272:                                   ; preds = %.lr.ph42.1
  %1273 = load i32, i32* @verbosity, align 4
  %1274 = add nsw i32 %1273, 1
  store i32 %1274, i32* @verbosity, align 4
  br label %1293

; <label>:1275:                                   ; preds = %.lr.ph42.1, %.lr.ph42.1
  call void @license()
  br label %1293

; <label>:1276:                                   ; preds = %.lr.ph42.1
  store i32 9, i32* @blockSize100k, align 4
  br label %1293

; <label>:1277:                                   ; preds = %.lr.ph42.1
  store i32 8, i32* @blockSize100k, align 4
  br label %1293

; <label>:1278:                                   ; preds = %.lr.ph42.1
  store i32 7, i32* @blockSize100k, align 4
  br label %1293

; <label>:1279:                                   ; preds = %.lr.ph42.1
  store i32 6, i32* @blockSize100k, align 4
  br label %1293

; <label>:1280:                                   ; preds = %.lr.ph42.1
  store i32 5, i32* @blockSize100k, align 4
  br label %1293

; <label>:1281:                                   ; preds = %.lr.ph42.1
  store i32 4, i32* @blockSize100k, align 4
  br label %1293

; <label>:1282:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @blockSize100k, align 4
  br label %1293

; <label>:1283:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @blockSize100k, align 4
  br label %1293

; <label>:1284:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @blockSize100k, align 4
  br label %1293

; <label>:1285:                                   ; preds = %.lr.ph42.1
  store i8 0, i8* @noisy, align 1
  br label %1293

; <label>:1286:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @smallMode, align 1
  br label %1293

; <label>:1287:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @keepInputFiles, align 1
  br label %1293

; <label>:1288:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @opMode, align 4
  br label %1293

; <label>:1289:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @forceOverwrite, align 1
  br label %1293

; <label>:1290:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @opMode, align 4
  br label %1293

; <label>:1291:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @opMode, align 4
  br label %1293

; <label>:1292:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @srcMode, align 4
  br label %1293

; <label>:1293:                                   ; preds = %1292, %1291, %1290, %1289, %1288, %1287, %1286, %1285, %1284, %1283, %1282, %1281, %1280, %1279, %1278, %1277, %1276, %1275, %1272
  %1294 = load i8*, i8** %1262, align 8
  %scevgep2.1 = getelementptr i8, i8* %1294, i64 2
  %scevgep3.1 = getelementptr i8, i8* %scevgep2.1, i64 %lsr.iv.1
  %1295 = load i8, i8* %scevgep3.1, align 1
  %1296 = sext i8 %1295 to i32
  %1297 = icmp ne i32 %1296, 0
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %1297, label %.lr.ph42.1, label %._crit_edge43.loopexit.1

._crit_edge43.loopexit.1:                         ; preds = %1293
  br label %._crit_edge43.1

._crit_edge43.1:                                  ; preds = %._crit_edge43.loopexit.1, %1261, %1254, %1248
  call void @__loop_iteration_test___3()
  %1298 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 1
  %1299 = load %struct.zzzz*, %struct.zzzz** %1298, align 8
  %1300 = icmp ne %struct.zzzz* %1299, null
  br i1 %1300, label %.lr.ph48.2, label %.loopexit17.loopexit

.lr.ph48.2:                                       ; preds = %._crit_edge43.1
  call void @unroll_loop(i32 3)
  %1301 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1299, i32 0, i32 0
  %1302 = load i8*, i8** %1301, align 8
  %1303 = call i32 @strcmp(i8* %1302, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1304 = icmp eq i32 %1303, 0
  br i1 %1304, label %.loopexit17.loopexit, label %1305

; <label>:1305:                                   ; preds = %.lr.ph48.2
  %1306 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1299, i32 0, i32 0
  %1307 = load i8*, i8** %1306, align 8
  %1308 = load i8, i8* %1307, align 1
  %1309 = sext i8 %1308 to i32
  %1310 = icmp eq i32 %1309, 45
  br i1 %1310, label %1311, label %._crit_edge43.2

; <label>:1311:                                   ; preds = %1305
  %1312 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1299, i32 0, i32 0
  %1313 = load i8*, i8** %1312, align 8
  %1314 = getelementptr inbounds i8, i8* %1313, i64 1
  %1315 = load i8, i8* %1314, align 1
  %1316 = sext i8 %1315 to i32
  %1317 = icmp ne i32 %1316, 45
  br i1 %1317, label %1318, label %._crit_edge43.2

; <label>:1318:                                   ; preds = %1311
  %1319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1299, i32 0, i32 0
  %1320 = load i8*, i8** %1319, align 8
  %1321 = getelementptr inbounds i8, i8* %1320, i64 1
  %1322 = load i8, i8* %1321, align 1
  %1323 = sext i8 %1322 to i32
  %1324 = icmp ne i32 %1323, 0
  br i1 %1324, label %.lr.ph42.preheader.2, label %._crit_edge43.2

.lr.ph42.preheader.2:                             ; preds = %1318
  %1325 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1299, i32 0, i32 0
  br label %.lr.ph42.2

.lr.ph42.2:                                       ; preds = %1350, %.lr.ph42.preheader.2
  %lsr.iv.2 = phi i64 [ 0, %.lr.ph42.preheader.2 ], [ %lsr.iv.next.2, %1350 ]
  call void @unroll_loop(i32 4)
  %1326 = load i8*, i8** %1325, align 8
  %scevgep.2 = getelementptr i8, i8* %1326, i64 1
  %scevgep1.2 = getelementptr i8, i8* %scevgep.2, i64 %lsr.iv.2
  %1327 = load i8, i8* %scevgep1.2, align 1
  %1328 = sext i8 %1327 to i32
  switch i32 %1328, label %.loopexit5 [
    i32 99, label %1349
    i32 100, label %1348
    i32 122, label %1347
    i32 102, label %1346
    i32 116, label %1345
    i32 107, label %1344
    i32 115, label %1343
    i32 113, label %1342
    i32 49, label %1341
    i32 50, label %1340
    i32 51, label %1339
    i32 52, label %1338
    i32 53, label %1337
    i32 54, label %1336
    i32 55, label %1335
    i32 56, label %1334
    i32 57, label %1333
    i32 86, label %1332
    i32 76, label %1332
    i32 118, label %1329
    i32 104, label %.loopexit6
  ]

; <label>:1329:                                   ; preds = %.lr.ph42.2
  %1330 = load i32, i32* @verbosity, align 4
  %1331 = add nsw i32 %1330, 1
  store i32 %1331, i32* @verbosity, align 4
  br label %1350

; <label>:1332:                                   ; preds = %.lr.ph42.2, %.lr.ph42.2
  call void @license()
  br label %1350

; <label>:1333:                                   ; preds = %.lr.ph42.2
  store i32 9, i32* @blockSize100k, align 4
  br label %1350

; <label>:1334:                                   ; preds = %.lr.ph42.2
  store i32 8, i32* @blockSize100k, align 4
  br label %1350

; <label>:1335:                                   ; preds = %.lr.ph42.2
  store i32 7, i32* @blockSize100k, align 4
  br label %1350

; <label>:1336:                                   ; preds = %.lr.ph42.2
  store i32 6, i32* @blockSize100k, align 4
  br label %1350

; <label>:1337:                                   ; preds = %.lr.ph42.2
  store i32 5, i32* @blockSize100k, align 4
  br label %1350

; <label>:1338:                                   ; preds = %.lr.ph42.2
  store i32 4, i32* @blockSize100k, align 4
  br label %1350

; <label>:1339:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @blockSize100k, align 4
  br label %1350

; <label>:1340:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @blockSize100k, align 4
  br label %1350

; <label>:1341:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @blockSize100k, align 4
  br label %1350

; <label>:1342:                                   ; preds = %.lr.ph42.2
  store i8 0, i8* @noisy, align 1
  br label %1350

; <label>:1343:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @smallMode, align 1
  br label %1350

; <label>:1344:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @keepInputFiles, align 1
  br label %1350

; <label>:1345:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @opMode, align 4
  br label %1350

; <label>:1346:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @forceOverwrite, align 1
  br label %1350

; <label>:1347:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @opMode, align 4
  br label %1350

; <label>:1348:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @opMode, align 4
  br label %1350

; <label>:1349:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @srcMode, align 4
  br label %1350

; <label>:1350:                                   ; preds = %1349, %1348, %1347, %1346, %1345, %1344, %1343, %1342, %1341, %1340, %1339, %1338, %1337, %1336, %1335, %1334, %1333, %1332, %1329
  %1351 = load i8*, i8** %1319, align 8
  %scevgep2.2 = getelementptr i8, i8* %1351, i64 2
  %scevgep3.2 = getelementptr i8, i8* %scevgep2.2, i64 %lsr.iv.2
  %1352 = load i8, i8* %scevgep3.2, align 1
  %1353 = sext i8 %1352 to i32
  %1354 = icmp ne i32 %1353, 0
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %1354, label %.lr.ph42.2, label %._crit_edge43.loopexit.2

._crit_edge43.loopexit.2:                         ; preds = %1350
  br label %._crit_edge43.2

._crit_edge43.2:                                  ; preds = %._crit_edge43.loopexit.2, %1318, %1311, %1305
  call void @__loop_iteration_test___3()
  %1355 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1299, i32 0, i32 1
  %1356 = load %struct.zzzz*, %struct.zzzz** %1355, align 8
  %1357 = icmp ne %struct.zzzz* %1356, null
  br i1 %1357, label %.lr.ph48.3, label %.loopexit17.loopexit

.lr.ph48.3:                                       ; preds = %._crit_edge43.2
  call void @unroll_loop(i32 3)
  %1358 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1356, i32 0, i32 0
  %1359 = load i8*, i8** %1358, align 8
  %1360 = call i32 @strcmp(i8* %1359, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1361 = icmp eq i32 %1360, 0
  br i1 %1361, label %.loopexit17.loopexit, label %1362

; <label>:1362:                                   ; preds = %.lr.ph48.3
  %1363 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1356, i32 0, i32 0
  %1364 = load i8*, i8** %1363, align 8
  %1365 = load i8, i8* %1364, align 1
  %1366 = sext i8 %1365 to i32
  %1367 = icmp eq i32 %1366, 45
  br i1 %1367, label %1368, label %._crit_edge43.3

; <label>:1368:                                   ; preds = %1362
  %1369 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1356, i32 0, i32 0
  %1370 = load i8*, i8** %1369, align 8
  %1371 = getelementptr inbounds i8, i8* %1370, i64 1
  %1372 = load i8, i8* %1371, align 1
  %1373 = sext i8 %1372 to i32
  %1374 = icmp ne i32 %1373, 45
  br i1 %1374, label %1375, label %._crit_edge43.3

; <label>:1375:                                   ; preds = %1368
  %1376 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1356, i32 0, i32 0
  %1377 = load i8*, i8** %1376, align 8
  %1378 = getelementptr inbounds i8, i8* %1377, i64 1
  %1379 = load i8, i8* %1378, align 1
  %1380 = sext i8 %1379 to i32
  %1381 = icmp ne i32 %1380, 0
  br i1 %1381, label %.lr.ph42.preheader.3, label %._crit_edge43.3

.lr.ph42.preheader.3:                             ; preds = %1375
  %1382 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1356, i32 0, i32 0
  br label %.lr.ph42.3

.lr.ph42.3:                                       ; preds = %1407, %.lr.ph42.preheader.3
  %lsr.iv.3 = phi i64 [ 0, %.lr.ph42.preheader.3 ], [ %lsr.iv.next.3, %1407 ]
  call void @unroll_loop(i32 4)
  %1383 = load i8*, i8** %1382, align 8
  %scevgep.3 = getelementptr i8, i8* %1383, i64 1
  %scevgep1.3 = getelementptr i8, i8* %scevgep.3, i64 %lsr.iv.3
  %1384 = load i8, i8* %scevgep1.3, align 1
  %1385 = sext i8 %1384 to i32
  switch i32 %1385, label %.loopexit7 [
    i32 99, label %1406
    i32 100, label %1405
    i32 122, label %1404
    i32 102, label %1403
    i32 116, label %1402
    i32 107, label %1401
    i32 115, label %1400
    i32 113, label %1399
    i32 49, label %1398
    i32 50, label %1397
    i32 51, label %1396
    i32 52, label %1395
    i32 53, label %1394
    i32 54, label %1393
    i32 55, label %1392
    i32 56, label %1391
    i32 57, label %1390
    i32 86, label %1389
    i32 76, label %1389
    i32 118, label %1386
    i32 104, label %.loopexit8
  ]

; <label>:1386:                                   ; preds = %.lr.ph42.3
  %1387 = load i32, i32* @verbosity, align 4
  %1388 = add nsw i32 %1387, 1
  store i32 %1388, i32* @verbosity, align 4
  br label %1407

; <label>:1389:                                   ; preds = %.lr.ph42.3, %.lr.ph42.3
  call void @license()
  br label %1407

; <label>:1390:                                   ; preds = %.lr.ph42.3
  store i32 9, i32* @blockSize100k, align 4
  br label %1407

; <label>:1391:                                   ; preds = %.lr.ph42.3
  store i32 8, i32* @blockSize100k, align 4
  br label %1407

; <label>:1392:                                   ; preds = %.lr.ph42.3
  store i32 7, i32* @blockSize100k, align 4
  br label %1407

; <label>:1393:                                   ; preds = %.lr.ph42.3
  store i32 6, i32* @blockSize100k, align 4
  br label %1407

; <label>:1394:                                   ; preds = %.lr.ph42.3
  store i32 5, i32* @blockSize100k, align 4
  br label %1407

; <label>:1395:                                   ; preds = %.lr.ph42.3
  store i32 4, i32* @blockSize100k, align 4
  br label %1407

; <label>:1396:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @blockSize100k, align 4
  br label %1407

; <label>:1397:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @blockSize100k, align 4
  br label %1407

; <label>:1398:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @blockSize100k, align 4
  br label %1407

; <label>:1399:                                   ; preds = %.lr.ph42.3
  store i8 0, i8* @noisy, align 1
  br label %1407

; <label>:1400:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @smallMode, align 1
  br label %1407

; <label>:1401:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @keepInputFiles, align 1
  br label %1407

; <label>:1402:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @opMode, align 4
  br label %1407

; <label>:1403:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @forceOverwrite, align 1
  br label %1407

; <label>:1404:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @opMode, align 4
  br label %1407

; <label>:1405:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @opMode, align 4
  br label %1407

; <label>:1406:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @srcMode, align 4
  br label %1407

; <label>:1407:                                   ; preds = %1406, %1405, %1404, %1403, %1402, %1401, %1400, %1399, %1398, %1397, %1396, %1395, %1394, %1393, %1392, %1391, %1390, %1389, %1386
  %1408 = load i8*, i8** %1376, align 8
  %scevgep2.3 = getelementptr i8, i8* %1408, i64 2
  %scevgep3.3 = getelementptr i8, i8* %scevgep2.3, i64 %lsr.iv.3
  %1409 = load i8, i8* %scevgep3.3, align 1
  %1410 = sext i8 %1409 to i32
  %1411 = icmp ne i32 %1410, 0
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %1411, label %.lr.ph42.3, label %._crit_edge43.loopexit.3

._crit_edge43.loopexit.3:                         ; preds = %1407
  br label %._crit_edge43.3

._crit_edge43.3:                                  ; preds = %._crit_edge43.loopexit.3, %1375, %1368, %1362
  call void @__loop_iteration_test___3()
  %1412 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1356, i32 0, i32 1
  %1413 = load %struct.zzzz*, %struct.zzzz** %1412, align 8
  %1414 = icmp ne %struct.zzzz* %1413, null
  br i1 %1414, label %.lr.ph48.4, label %.loopexit17.loopexit

.lr.ph48.4:                                       ; preds = %._crit_edge43.3
  call void @unroll_loop(i32 3)
  %1415 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1413, i32 0, i32 0
  %1416 = load i8*, i8** %1415, align 8
  %1417 = call i32 @strcmp(i8* %1416, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %.loopexit17.loopexit, label %1419

; <label>:1419:                                   ; preds = %.lr.ph48.4
  %1420 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1413, i32 0, i32 0
  %1421 = load i8*, i8** %1420, align 8
  %1422 = load i8, i8* %1421, align 1
  %1423 = sext i8 %1422 to i32
  %1424 = icmp eq i32 %1423, 45
  br i1 %1424, label %1425, label %._crit_edge43.4

; <label>:1425:                                   ; preds = %1419
  %1426 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1413, i32 0, i32 0
  %1427 = load i8*, i8** %1426, align 8
  %1428 = getelementptr inbounds i8, i8* %1427, i64 1
  %1429 = load i8, i8* %1428, align 1
  %1430 = sext i8 %1429 to i32
  %1431 = icmp ne i32 %1430, 45
  br i1 %1431, label %1432, label %._crit_edge43.4

; <label>:1432:                                   ; preds = %1425
  %1433 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1413, i32 0, i32 0
  %1434 = load i8*, i8** %1433, align 8
  %1435 = getelementptr inbounds i8, i8* %1434, i64 1
  %1436 = load i8, i8* %1435, align 1
  %1437 = sext i8 %1436 to i32
  %1438 = icmp ne i32 %1437, 0
  br i1 %1438, label %.lr.ph42.preheader.4, label %._crit_edge43.4

.lr.ph42.preheader.4:                             ; preds = %1432
  %1439 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1413, i32 0, i32 0
  br label %.lr.ph42.4

.lr.ph42.4:                                       ; preds = %1464, %.lr.ph42.preheader.4
  %lsr.iv.4 = phi i64 [ 0, %.lr.ph42.preheader.4 ], [ %lsr.iv.next.4, %1464 ]
  call void @unroll_loop(i32 4)
  %1440 = load i8*, i8** %1439, align 8
  %scevgep.4 = getelementptr i8, i8* %1440, i64 1
  %scevgep1.4 = getelementptr i8, i8* %scevgep.4, i64 %lsr.iv.4
  %1441 = load i8, i8* %scevgep1.4, align 1
  %1442 = sext i8 %1441 to i32
  switch i32 %1442, label %.loopexit9 [
    i32 99, label %1463
    i32 100, label %1462
    i32 122, label %1461
    i32 102, label %1460
    i32 116, label %1459
    i32 107, label %1458
    i32 115, label %1457
    i32 113, label %1456
    i32 49, label %1455
    i32 50, label %1454
    i32 51, label %1453
    i32 52, label %1452
    i32 53, label %1451
    i32 54, label %1450
    i32 55, label %1449
    i32 56, label %1448
    i32 57, label %1447
    i32 86, label %1446
    i32 76, label %1446
    i32 118, label %1443
    i32 104, label %.loopexit10
  ]

; <label>:1443:                                   ; preds = %.lr.ph42.4
  %1444 = load i32, i32* @verbosity, align 4
  %1445 = add nsw i32 %1444, 1
  store i32 %1445, i32* @verbosity, align 4
  br label %1464

; <label>:1446:                                   ; preds = %.lr.ph42.4, %.lr.ph42.4
  call void @license()
  br label %1464

; <label>:1447:                                   ; preds = %.lr.ph42.4
  store i32 9, i32* @blockSize100k, align 4
  br label %1464

; <label>:1448:                                   ; preds = %.lr.ph42.4
  store i32 8, i32* @blockSize100k, align 4
  br label %1464

; <label>:1449:                                   ; preds = %.lr.ph42.4
  store i32 7, i32* @blockSize100k, align 4
  br label %1464

; <label>:1450:                                   ; preds = %.lr.ph42.4
  store i32 6, i32* @blockSize100k, align 4
  br label %1464

; <label>:1451:                                   ; preds = %.lr.ph42.4
  store i32 5, i32* @blockSize100k, align 4
  br label %1464

; <label>:1452:                                   ; preds = %.lr.ph42.4
  store i32 4, i32* @blockSize100k, align 4
  br label %1464

; <label>:1453:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @blockSize100k, align 4
  br label %1464

; <label>:1454:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @blockSize100k, align 4
  br label %1464

; <label>:1455:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @blockSize100k, align 4
  br label %1464

; <label>:1456:                                   ; preds = %.lr.ph42.4
  store i8 0, i8* @noisy, align 1
  br label %1464

; <label>:1457:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @smallMode, align 1
  br label %1464

; <label>:1458:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @keepInputFiles, align 1
  br label %1464

; <label>:1459:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @opMode, align 4
  br label %1464

; <label>:1460:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @forceOverwrite, align 1
  br label %1464

; <label>:1461:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @opMode, align 4
  br label %1464

; <label>:1462:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @opMode, align 4
  br label %1464

; <label>:1463:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @srcMode, align 4
  br label %1464

; <label>:1464:                                   ; preds = %1463, %1462, %1461, %1460, %1459, %1458, %1457, %1456, %1455, %1454, %1453, %1452, %1451, %1450, %1449, %1448, %1447, %1446, %1443
  %1465 = load i8*, i8** %1433, align 8
  %scevgep2.4 = getelementptr i8, i8* %1465, i64 2
  %scevgep3.4 = getelementptr i8, i8* %scevgep2.4, i64 %lsr.iv.4
  %1466 = load i8, i8* %scevgep3.4, align 1
  %1467 = sext i8 %1466 to i32
  %1468 = icmp ne i32 %1467, 0
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %1468, label %.lr.ph42.4, label %._crit_edge43.loopexit.4

._crit_edge43.loopexit.4:                         ; preds = %1464
  br label %._crit_edge43.4

._crit_edge43.4:                                  ; preds = %._crit_edge43.loopexit.4, %1432, %1425, %1419
  call void @__loop_iteration_test___3()
  %1469 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1413, i32 0, i32 1
  %1470 = load %struct.zzzz*, %struct.zzzz** %1469, align 8
  %1471 = icmp ne %struct.zzzz* %1470, null
  br i1 %1471, label %.lr.ph48.5, label %.loopexit17.loopexit

.lr.ph48.5:                                       ; preds = %._crit_edge43.4
  call void @unroll_loop(i32 3)
  %1472 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1470, i32 0, i32 0
  %1473 = load i8*, i8** %1472, align 8
  %1474 = call i32 @strcmp(i8* %1473, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1475 = icmp eq i32 %1474, 0
  br i1 %1475, label %.loopexit17.loopexit, label %1476

; <label>:1476:                                   ; preds = %.lr.ph48.5
  %1477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1470, i32 0, i32 0
  %1478 = load i8*, i8** %1477, align 8
  %1479 = load i8, i8* %1478, align 1
  %1480 = sext i8 %1479 to i32
  %1481 = icmp eq i32 %1480, 45
  br i1 %1481, label %1482, label %._crit_edge43.5

; <label>:1482:                                   ; preds = %1476
  %1483 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1470, i32 0, i32 0
  %1484 = load i8*, i8** %1483, align 8
  %1485 = getelementptr inbounds i8, i8* %1484, i64 1
  %1486 = load i8, i8* %1485, align 1
  %1487 = sext i8 %1486 to i32
  %1488 = icmp ne i32 %1487, 45
  br i1 %1488, label %1489, label %._crit_edge43.5

; <label>:1489:                                   ; preds = %1482
  %1490 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1470, i32 0, i32 0
  %1491 = load i8*, i8** %1490, align 8
  %1492 = getelementptr inbounds i8, i8* %1491, i64 1
  %1493 = load i8, i8* %1492, align 1
  %1494 = sext i8 %1493 to i32
  %1495 = icmp ne i32 %1494, 0
  br i1 %1495, label %.lr.ph42.preheader.5, label %._crit_edge43.5

.lr.ph42.preheader.5:                             ; preds = %1489
  %1496 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1470, i32 0, i32 0
  br label %.lr.ph42.5

.lr.ph42.5:                                       ; preds = %1521, %.lr.ph42.preheader.5
  %lsr.iv.5 = phi i64 [ 0, %.lr.ph42.preheader.5 ], [ %lsr.iv.next.5, %1521 ]
  call void @unroll_loop(i32 4)
  %1497 = load i8*, i8** %1496, align 8
  %scevgep.5 = getelementptr i8, i8* %1497, i64 1
  %scevgep1.5 = getelementptr i8, i8* %scevgep.5, i64 %lsr.iv.5
  %1498 = load i8, i8* %scevgep1.5, align 1
  %1499 = sext i8 %1498 to i32
  switch i32 %1499, label %.loopexit11 [
    i32 99, label %1520
    i32 100, label %1519
    i32 122, label %1518
    i32 102, label %1517
    i32 116, label %1516
    i32 107, label %1515
    i32 115, label %1514
    i32 113, label %1513
    i32 49, label %1512
    i32 50, label %1511
    i32 51, label %1510
    i32 52, label %1509
    i32 53, label %1508
    i32 54, label %1507
    i32 55, label %1506
    i32 56, label %1505
    i32 57, label %1504
    i32 86, label %1503
    i32 76, label %1503
    i32 118, label %1500
    i32 104, label %.loopexit12
  ]

; <label>:1500:                                   ; preds = %.lr.ph42.5
  %1501 = load i32, i32* @verbosity, align 4
  %1502 = add nsw i32 %1501, 1
  store i32 %1502, i32* @verbosity, align 4
  br label %1521

; <label>:1503:                                   ; preds = %.lr.ph42.5, %.lr.ph42.5
  call void @license()
  br label %1521

; <label>:1504:                                   ; preds = %.lr.ph42.5
  store i32 9, i32* @blockSize100k, align 4
  br label %1521

; <label>:1505:                                   ; preds = %.lr.ph42.5
  store i32 8, i32* @blockSize100k, align 4
  br label %1521

; <label>:1506:                                   ; preds = %.lr.ph42.5
  store i32 7, i32* @blockSize100k, align 4
  br label %1521

; <label>:1507:                                   ; preds = %.lr.ph42.5
  store i32 6, i32* @blockSize100k, align 4
  br label %1521

; <label>:1508:                                   ; preds = %.lr.ph42.5
  store i32 5, i32* @blockSize100k, align 4
  br label %1521

; <label>:1509:                                   ; preds = %.lr.ph42.5
  store i32 4, i32* @blockSize100k, align 4
  br label %1521

; <label>:1510:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @blockSize100k, align 4
  br label %1521

; <label>:1511:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @blockSize100k, align 4
  br label %1521

; <label>:1512:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @blockSize100k, align 4
  br label %1521

; <label>:1513:                                   ; preds = %.lr.ph42.5
  store i8 0, i8* @noisy, align 1
  br label %1521

; <label>:1514:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @smallMode, align 1
  br label %1521

; <label>:1515:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @keepInputFiles, align 1
  br label %1521

; <label>:1516:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @opMode, align 4
  br label %1521

; <label>:1517:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @forceOverwrite, align 1
  br label %1521

; <label>:1518:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @opMode, align 4
  br label %1521

; <label>:1519:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @opMode, align 4
  br label %1521

; <label>:1520:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @srcMode, align 4
  br label %1521

; <label>:1521:                                   ; preds = %1520, %1519, %1518, %1517, %1516, %1515, %1514, %1513, %1512, %1511, %1510, %1509, %1508, %1507, %1506, %1505, %1504, %1503, %1500
  %1522 = load i8*, i8** %1490, align 8
  %scevgep2.5 = getelementptr i8, i8* %1522, i64 2
  %scevgep3.5 = getelementptr i8, i8* %scevgep2.5, i64 %lsr.iv.5
  %1523 = load i8, i8* %scevgep3.5, align 1
  %1524 = sext i8 %1523 to i32
  %1525 = icmp ne i32 %1524, 0
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %1525, label %.lr.ph42.5, label %._crit_edge43.loopexit.5

._crit_edge43.loopexit.5:                         ; preds = %1521
  br label %._crit_edge43.5

._crit_edge43.5:                                  ; preds = %._crit_edge43.loopexit.5, %1489, %1482, %1476
  call void @__loop_iteration_test___3()
  %1526 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1470, i32 0, i32 1
  %1527 = load %struct.zzzz*, %struct.zzzz** %1526, align 8
  %1528 = icmp ne %struct.zzzz* %1527, null
  br i1 %1528, label %.lr.ph48.6, label %.loopexit17.loopexit

.lr.ph48.6:                                       ; preds = %._crit_edge43.5
  call void @unroll_loop(i32 3)
  %1529 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1527, i32 0, i32 0
  %1530 = load i8*, i8** %1529, align 8
  %1531 = call i32 @strcmp(i8* %1530, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1532 = icmp eq i32 %1531, 0
  br i1 %1532, label %.loopexit17.loopexit, label %1533

; <label>:1533:                                   ; preds = %.lr.ph48.6
  %1534 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1527, i32 0, i32 0
  %1535 = load i8*, i8** %1534, align 8
  %1536 = load i8, i8* %1535, align 1
  %1537 = sext i8 %1536 to i32
  %1538 = icmp eq i32 %1537, 45
  br i1 %1538, label %1539, label %._crit_edge43.6

; <label>:1539:                                   ; preds = %1533
  %1540 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1527, i32 0, i32 0
  %1541 = load i8*, i8** %1540, align 8
  %1542 = getelementptr inbounds i8, i8* %1541, i64 1
  %1543 = load i8, i8* %1542, align 1
  %1544 = sext i8 %1543 to i32
  %1545 = icmp ne i32 %1544, 45
  br i1 %1545, label %1546, label %._crit_edge43.6

; <label>:1546:                                   ; preds = %1539
  %1547 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1527, i32 0, i32 0
  %1548 = load i8*, i8** %1547, align 8
  %1549 = getelementptr inbounds i8, i8* %1548, i64 1
  %1550 = load i8, i8* %1549, align 1
  %1551 = sext i8 %1550 to i32
  %1552 = icmp ne i32 %1551, 0
  br i1 %1552, label %.lr.ph42.preheader.6, label %._crit_edge43.6

.lr.ph42.preheader.6:                             ; preds = %1546
  %1553 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1527, i32 0, i32 0
  br label %.lr.ph42.6

.lr.ph42.6:                                       ; preds = %1578, %.lr.ph42.preheader.6
  %lsr.iv.6 = phi i64 [ 0, %.lr.ph42.preheader.6 ], [ %lsr.iv.next.6, %1578 ]
  call void @unroll_loop(i32 4)
  %1554 = load i8*, i8** %1553, align 8
  %scevgep.6 = getelementptr i8, i8* %1554, i64 1
  %scevgep1.6 = getelementptr i8, i8* %scevgep.6, i64 %lsr.iv.6
  %1555 = load i8, i8* %scevgep1.6, align 1
  %1556 = sext i8 %1555 to i32
  switch i32 %1556, label %.loopexit13 [
    i32 99, label %1577
    i32 100, label %1576
    i32 122, label %1575
    i32 102, label %1574
    i32 116, label %1573
    i32 107, label %1572
    i32 115, label %1571
    i32 113, label %1570
    i32 49, label %1569
    i32 50, label %1568
    i32 51, label %1567
    i32 52, label %1566
    i32 53, label %1565
    i32 54, label %1564
    i32 55, label %1563
    i32 56, label %1562
    i32 57, label %1561
    i32 86, label %1560
    i32 76, label %1560
    i32 118, label %1557
    i32 104, label %.loopexit14
  ]

; <label>:1557:                                   ; preds = %.lr.ph42.6
  %1558 = load i32, i32* @verbosity, align 4
  %1559 = add nsw i32 %1558, 1
  store i32 %1559, i32* @verbosity, align 4
  br label %1578

; <label>:1560:                                   ; preds = %.lr.ph42.6, %.lr.ph42.6
  call void @license()
  br label %1578

; <label>:1561:                                   ; preds = %.lr.ph42.6
  store i32 9, i32* @blockSize100k, align 4
  br label %1578

; <label>:1562:                                   ; preds = %.lr.ph42.6
  store i32 8, i32* @blockSize100k, align 4
  br label %1578

; <label>:1563:                                   ; preds = %.lr.ph42.6
  store i32 7, i32* @blockSize100k, align 4
  br label %1578

; <label>:1564:                                   ; preds = %.lr.ph42.6
  store i32 6, i32* @blockSize100k, align 4
  br label %1578

; <label>:1565:                                   ; preds = %.lr.ph42.6
  store i32 5, i32* @blockSize100k, align 4
  br label %1578

; <label>:1566:                                   ; preds = %.lr.ph42.6
  store i32 4, i32* @blockSize100k, align 4
  br label %1578

; <label>:1567:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @blockSize100k, align 4
  br label %1578

; <label>:1568:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @blockSize100k, align 4
  br label %1578

; <label>:1569:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @blockSize100k, align 4
  br label %1578

; <label>:1570:                                   ; preds = %.lr.ph42.6
  store i8 0, i8* @noisy, align 1
  br label %1578

; <label>:1571:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @smallMode, align 1
  br label %1578

; <label>:1572:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @keepInputFiles, align 1
  br label %1578

; <label>:1573:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @opMode, align 4
  br label %1578

; <label>:1574:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @forceOverwrite, align 1
  br label %1578

; <label>:1575:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @opMode, align 4
  br label %1578

; <label>:1576:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @opMode, align 4
  br label %1578

; <label>:1577:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @srcMode, align 4
  br label %1578

; <label>:1578:                                   ; preds = %1577, %1576, %1575, %1574, %1573, %1572, %1571, %1570, %1569, %1568, %1567, %1566, %1565, %1564, %1563, %1562, %1561, %1560, %1557
  %1579 = load i8*, i8** %1547, align 8
  %scevgep2.6 = getelementptr i8, i8* %1579, i64 2
  %scevgep3.6 = getelementptr i8, i8* %scevgep2.6, i64 %lsr.iv.6
  %1580 = load i8, i8* %scevgep3.6, align 1
  %1581 = sext i8 %1580 to i32
  %1582 = icmp ne i32 %1581, 0
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %1582, label %.lr.ph42.6, label %._crit_edge43.loopexit.6

._crit_edge43.loopexit.6:                         ; preds = %1578
  br label %._crit_edge43.6

._crit_edge43.6:                                  ; preds = %._crit_edge43.loopexit.6, %1546, %1539, %1533
  call void @__loop_iteration_test___3()
  %1583 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1527, i32 0, i32 1
  %1584 = load %struct.zzzz*, %struct.zzzz** %1583, align 8
  %1585 = icmp ne %struct.zzzz* %1584, null
  br i1 %1585, label %.lr.ph48.7, label %.loopexit17.loopexit

.lr.ph48.7:                                       ; preds = %._crit_edge43.6
  call void @unroll_loop(i32 3)
  %1586 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1584, i32 0, i32 0
  %1587 = load i8*, i8** %1586, align 8
  %1588 = call i32 @strcmp(i8* %1587, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1589 = icmp eq i32 %1588, 0
  br i1 %1589, label %.loopexit17.loopexit, label %1590

; <label>:1590:                                   ; preds = %.lr.ph48.7
  %1591 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1584, i32 0, i32 0
  %1592 = load i8*, i8** %1591, align 8
  %1593 = load i8, i8* %1592, align 1
  %1594 = sext i8 %1593 to i32
  %1595 = icmp eq i32 %1594, 45
  br i1 %1595, label %1596, label %._crit_edge43.7

; <label>:1596:                                   ; preds = %1590
  %1597 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1584, i32 0, i32 0
  %1598 = load i8*, i8** %1597, align 8
  %1599 = getelementptr inbounds i8, i8* %1598, i64 1
  %1600 = load i8, i8* %1599, align 1
  %1601 = sext i8 %1600 to i32
  %1602 = icmp ne i32 %1601, 45
  br i1 %1602, label %1603, label %._crit_edge43.7

; <label>:1603:                                   ; preds = %1596
  %1604 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1584, i32 0, i32 0
  %1605 = load i8*, i8** %1604, align 8
  %1606 = getelementptr inbounds i8, i8* %1605, i64 1
  %1607 = load i8, i8* %1606, align 1
  %1608 = sext i8 %1607 to i32
  %1609 = icmp ne i32 %1608, 0
  br i1 %1609, label %.lr.ph42.preheader.7, label %._crit_edge43.7

.lr.ph42.preheader.7:                             ; preds = %1603
  %1610 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1584, i32 0, i32 0
  br label %.lr.ph42.7

.lr.ph42.7:                                       ; preds = %1635, %.lr.ph42.preheader.7
  %lsr.iv.7 = phi i64 [ 0, %.lr.ph42.preheader.7 ], [ %lsr.iv.next.7, %1635 ]
  call void @unroll_loop(i32 4)
  %1611 = load i8*, i8** %1610, align 8
  %scevgep.7 = getelementptr i8, i8* %1611, i64 1
  %scevgep1.7 = getelementptr i8, i8* %scevgep.7, i64 %lsr.iv.7
  %1612 = load i8, i8* %scevgep1.7, align 1
  %1613 = sext i8 %1612 to i32
  switch i32 %1613, label %.loopexit15 [
    i32 99, label %1634
    i32 100, label %1633
    i32 122, label %1632
    i32 102, label %1631
    i32 116, label %1630
    i32 107, label %1629
    i32 115, label %1628
    i32 113, label %1627
    i32 49, label %1626
    i32 50, label %1625
    i32 51, label %1624
    i32 52, label %1623
    i32 53, label %1622
    i32 54, label %1621
    i32 55, label %1620
    i32 56, label %1619
    i32 57, label %1618
    i32 86, label %1617
    i32 76, label %1617
    i32 118, label %1614
    i32 104, label %.loopexit16
  ]

; <label>:1614:                                   ; preds = %.lr.ph42.7
  %1615 = load i32, i32* @verbosity, align 4
  %1616 = add nsw i32 %1615, 1
  store i32 %1616, i32* @verbosity, align 4
  br label %1635

; <label>:1617:                                   ; preds = %.lr.ph42.7, %.lr.ph42.7
  call void @license()
  br label %1635

; <label>:1618:                                   ; preds = %.lr.ph42.7
  store i32 9, i32* @blockSize100k, align 4
  br label %1635

; <label>:1619:                                   ; preds = %.lr.ph42.7
  store i32 8, i32* @blockSize100k, align 4
  br label %1635

; <label>:1620:                                   ; preds = %.lr.ph42.7
  store i32 7, i32* @blockSize100k, align 4
  br label %1635

; <label>:1621:                                   ; preds = %.lr.ph42.7
  store i32 6, i32* @blockSize100k, align 4
  br label %1635

; <label>:1622:                                   ; preds = %.lr.ph42.7
  store i32 5, i32* @blockSize100k, align 4
  br label %1635

; <label>:1623:                                   ; preds = %.lr.ph42.7
  store i32 4, i32* @blockSize100k, align 4
  br label %1635

; <label>:1624:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @blockSize100k, align 4
  br label %1635

; <label>:1625:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @blockSize100k, align 4
  br label %1635

; <label>:1626:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @blockSize100k, align 4
  br label %1635

; <label>:1627:                                   ; preds = %.lr.ph42.7
  store i8 0, i8* @noisy, align 1
  br label %1635

; <label>:1628:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @smallMode, align 1
  br label %1635

; <label>:1629:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @keepInputFiles, align 1
  br label %1635

; <label>:1630:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @opMode, align 4
  br label %1635

; <label>:1631:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @forceOverwrite, align 1
  br label %1635

; <label>:1632:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @opMode, align 4
  br label %1635

; <label>:1633:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @opMode, align 4
  br label %1635

; <label>:1634:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @srcMode, align 4
  br label %1635

; <label>:1635:                                   ; preds = %1634, %1633, %1632, %1631, %1630, %1629, %1628, %1627, %1626, %1625, %1624, %1623, %1622, %1621, %1620, %1619, %1618, %1617, %1614
  %1636 = load i8*, i8** %1604, align 8
  %scevgep2.7 = getelementptr i8, i8* %1636, i64 2
  %scevgep3.7 = getelementptr i8, i8* %scevgep2.7, i64 %lsr.iv.7
  %1637 = load i8, i8* %scevgep3.7, align 1
  %1638 = sext i8 %1637 to i32
  %1639 = icmp ne i32 %1638, 0
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %1639, label %.lr.ph42.7, label %._crit_edge43.loopexit.7

._crit_edge43.loopexit.7:                         ; preds = %1635
  br label %._crit_edge43.7

._crit_edge43.7:                                  ; preds = %._crit_edge43.loopexit.7, %1603, %1596, %1590
  call void @__loop_iteration_test___3()
  %1640 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1584, i32 0, i32 1
  %1641 = load %struct.zzzz*, %struct.zzzz** %1640, align 8
  %1642 = icmp ne %struct.zzzz* %1641, null
  br i1 %1642, label %.lr.ph48.8, label %.loopexit17.loopexit

.lr.ph48.8:                                       ; preds = %._crit_edge43.7
  call void @unroll_loop(i32 3)
  %1643 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1641, i32 0, i32 0
  %1644 = load i8*, i8** %1643, align 8
  %1645 = call i32 @strcmp(i8* %1644, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1646 = icmp eq i32 %1645, 0
  br i1 %1646, label %.loopexit17.loopexit, label %1647

; <label>:1647:                                   ; preds = %.lr.ph48.8
  %1648 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1641, i32 0, i32 0
  %1649 = load i8*, i8** %1648, align 8
  %1650 = load i8, i8* %1649, align 1
  %1651 = sext i8 %1650 to i32
  %1652 = icmp eq i32 %1651, 45
  br i1 %1652, label %1653, label %._crit_edge43.8

; <label>:1653:                                   ; preds = %1647
  %1654 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1641, i32 0, i32 0
  %1655 = load i8*, i8** %1654, align 8
  %1656 = getelementptr inbounds i8, i8* %1655, i64 1
  %1657 = load i8, i8* %1656, align 1
  %1658 = sext i8 %1657 to i32
  %1659 = icmp ne i32 %1658, 45
  br i1 %1659, label %1660, label %._crit_edge43.8

; <label>:1660:                                   ; preds = %1653
  %1661 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1641, i32 0, i32 0
  %1662 = load i8*, i8** %1661, align 8
  %1663 = getelementptr inbounds i8, i8* %1662, i64 1
  %1664 = load i8, i8* %1663, align 1
  %1665 = sext i8 %1664 to i32
  %1666 = icmp ne i32 %1665, 0
  br i1 %1666, label %.lr.ph42.preheader.8, label %._crit_edge43.8

.lr.ph42.preheader.8:                             ; preds = %1660
  %1667 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1641, i32 0, i32 0
  br label %.lr.ph42.8

.lr.ph42.8:                                       ; preds = %1692, %.lr.ph42.preheader.8
  %lsr.iv.8 = phi i64 [ 0, %.lr.ph42.preheader.8 ], [ %lsr.iv.next.8, %1692 ]
  call void @unroll_loop(i32 4)
  %1668 = load i8*, i8** %1667, align 8
  %scevgep.8 = getelementptr i8, i8* %1668, i64 1
  %scevgep1.8 = getelementptr i8, i8* %scevgep.8, i64 %lsr.iv.8
  %1669 = load i8, i8* %scevgep1.8, align 1
  %1670 = sext i8 %1669 to i32
  switch i32 %1670, label %.loopexit18 [
    i32 99, label %1691
    i32 100, label %1690
    i32 122, label %1689
    i32 102, label %1688
    i32 116, label %1687
    i32 107, label %1686
    i32 115, label %1685
    i32 113, label %1684
    i32 49, label %1683
    i32 50, label %1682
    i32 51, label %1681
    i32 52, label %1680
    i32 53, label %1679
    i32 54, label %1678
    i32 55, label %1677
    i32 56, label %1676
    i32 57, label %1675
    i32 86, label %1674
    i32 76, label %1674
    i32 118, label %1671
    i32 104, label %.loopexit19
  ]

; <label>:1671:                                   ; preds = %.lr.ph42.8
  %1672 = load i32, i32* @verbosity, align 4
  %1673 = add nsw i32 %1672, 1
  store i32 %1673, i32* @verbosity, align 4
  br label %1692

; <label>:1674:                                   ; preds = %.lr.ph42.8, %.lr.ph42.8
  call void @license()
  br label %1692

; <label>:1675:                                   ; preds = %.lr.ph42.8
  store i32 9, i32* @blockSize100k, align 4
  br label %1692

; <label>:1676:                                   ; preds = %.lr.ph42.8
  store i32 8, i32* @blockSize100k, align 4
  br label %1692

; <label>:1677:                                   ; preds = %.lr.ph42.8
  store i32 7, i32* @blockSize100k, align 4
  br label %1692

; <label>:1678:                                   ; preds = %.lr.ph42.8
  store i32 6, i32* @blockSize100k, align 4
  br label %1692

; <label>:1679:                                   ; preds = %.lr.ph42.8
  store i32 5, i32* @blockSize100k, align 4
  br label %1692

; <label>:1680:                                   ; preds = %.lr.ph42.8
  store i32 4, i32* @blockSize100k, align 4
  br label %1692

; <label>:1681:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @blockSize100k, align 4
  br label %1692

; <label>:1682:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @blockSize100k, align 4
  br label %1692

; <label>:1683:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @blockSize100k, align 4
  br label %1692

; <label>:1684:                                   ; preds = %.lr.ph42.8
  store i8 0, i8* @noisy, align 1
  br label %1692

; <label>:1685:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @smallMode, align 1
  br label %1692

; <label>:1686:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @keepInputFiles, align 1
  br label %1692

; <label>:1687:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @opMode, align 4
  br label %1692

; <label>:1688:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @forceOverwrite, align 1
  br label %1692

; <label>:1689:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @opMode, align 4
  br label %1692

; <label>:1690:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @opMode, align 4
  br label %1692

; <label>:1691:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @srcMode, align 4
  br label %1692

; <label>:1692:                                   ; preds = %1691, %1690, %1689, %1688, %1687, %1686, %1685, %1684, %1683, %1682, %1681, %1680, %1679, %1678, %1677, %1676, %1675, %1674, %1671
  %1693 = load i8*, i8** %1661, align 8
  %scevgep2.8 = getelementptr i8, i8* %1693, i64 2
  %scevgep3.8 = getelementptr i8, i8* %scevgep2.8, i64 %lsr.iv.8
  %1694 = load i8, i8* %scevgep3.8, align 1
  %1695 = sext i8 %1694 to i32
  %1696 = icmp ne i32 %1695, 0
  %lsr.iv.next.8 = add i64 %lsr.iv.8, 1
  br i1 %1696, label %.lr.ph42.8, label %._crit_edge43.loopexit.8

._crit_edge43.loopexit.8:                         ; preds = %1692
  br label %._crit_edge43.8

._crit_edge43.8:                                  ; preds = %._crit_edge43.loopexit.8, %1660, %1653, %1647
  call void @__loop_iteration_test___3()
  %1697 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1641, i32 0, i32 1
  %1698 = load %struct.zzzz*, %struct.zzzz** %1697, align 8
  %1699 = icmp ne %struct.zzzz* %1698, null
  br i1 %1699, label %.lr.ph48.9, label %.loopexit17.loopexit

.lr.ph48.9:                                       ; preds = %._crit_edge43.8
  call void @unroll_loop(i32 3)
  %1700 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1698, i32 0, i32 0
  %1701 = load i8*, i8** %1700, align 8
  %1702 = call i32 @strcmp(i8* %1701, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1703 = icmp eq i32 %1702, 0
  br i1 %1703, label %.loopexit17.loopexit, label %1704

; <label>:1704:                                   ; preds = %.lr.ph48.9
  %1705 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1698, i32 0, i32 0
  %1706 = load i8*, i8** %1705, align 8
  %1707 = load i8, i8* %1706, align 1
  %1708 = sext i8 %1707 to i32
  %1709 = icmp eq i32 %1708, 45
  br i1 %1709, label %1710, label %._crit_edge43.9

; <label>:1710:                                   ; preds = %1704
  %1711 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1698, i32 0, i32 0
  %1712 = load i8*, i8** %1711, align 8
  %1713 = getelementptr inbounds i8, i8* %1712, i64 1
  %1714 = load i8, i8* %1713, align 1
  %1715 = sext i8 %1714 to i32
  %1716 = icmp ne i32 %1715, 45
  br i1 %1716, label %1717, label %._crit_edge43.9

; <label>:1717:                                   ; preds = %1710
  %1718 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1698, i32 0, i32 0
  %1719 = load i8*, i8** %1718, align 8
  %1720 = getelementptr inbounds i8, i8* %1719, i64 1
  %1721 = load i8, i8* %1720, align 1
  %1722 = sext i8 %1721 to i32
  %1723 = icmp ne i32 %1722, 0
  br i1 %1723, label %.lr.ph42.preheader.9, label %._crit_edge43.9

.lr.ph42.preheader.9:                             ; preds = %1717
  %1724 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1698, i32 0, i32 0
  br label %.lr.ph42.9

.lr.ph42.9:                                       ; preds = %1749, %.lr.ph42.preheader.9
  %lsr.iv.9 = phi i64 [ 0, %.lr.ph42.preheader.9 ], [ %lsr.iv.next.9, %1749 ]
  call void @unroll_loop(i32 4)
  %1725 = load i8*, i8** %1724, align 8
  %scevgep.9 = getelementptr i8, i8* %1725, i64 1
  %scevgep1.9 = getelementptr i8, i8* %scevgep.9, i64 %lsr.iv.9
  %1726 = load i8, i8* %scevgep1.9, align 1
  %1727 = sext i8 %1726 to i32
  switch i32 %1727, label %.loopexit20 [
    i32 99, label %1748
    i32 100, label %1747
    i32 122, label %1746
    i32 102, label %1745
    i32 116, label %1744
    i32 107, label %1743
    i32 115, label %1742
    i32 113, label %1741
    i32 49, label %1740
    i32 50, label %1739
    i32 51, label %1738
    i32 52, label %1737
    i32 53, label %1736
    i32 54, label %1735
    i32 55, label %1734
    i32 56, label %1733
    i32 57, label %1732
    i32 86, label %1731
    i32 76, label %1731
    i32 118, label %1728
    i32 104, label %.loopexit21
  ]

; <label>:1728:                                   ; preds = %.lr.ph42.9
  %1729 = load i32, i32* @verbosity, align 4
  %1730 = add nsw i32 %1729, 1
  store i32 %1730, i32* @verbosity, align 4
  br label %1749

; <label>:1731:                                   ; preds = %.lr.ph42.9, %.lr.ph42.9
  call void @license()
  br label %1749

; <label>:1732:                                   ; preds = %.lr.ph42.9
  store i32 9, i32* @blockSize100k, align 4
  br label %1749

; <label>:1733:                                   ; preds = %.lr.ph42.9
  store i32 8, i32* @blockSize100k, align 4
  br label %1749

; <label>:1734:                                   ; preds = %.lr.ph42.9
  store i32 7, i32* @blockSize100k, align 4
  br label %1749

; <label>:1735:                                   ; preds = %.lr.ph42.9
  store i32 6, i32* @blockSize100k, align 4
  br label %1749

; <label>:1736:                                   ; preds = %.lr.ph42.9
  store i32 5, i32* @blockSize100k, align 4
  br label %1749

; <label>:1737:                                   ; preds = %.lr.ph42.9
  store i32 4, i32* @blockSize100k, align 4
  br label %1749

; <label>:1738:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @blockSize100k, align 4
  br label %1749

; <label>:1739:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @blockSize100k, align 4
  br label %1749

; <label>:1740:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @blockSize100k, align 4
  br label %1749

; <label>:1741:                                   ; preds = %.lr.ph42.9
  store i8 0, i8* @noisy, align 1
  br label %1749

; <label>:1742:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @smallMode, align 1
  br label %1749

; <label>:1743:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @keepInputFiles, align 1
  br label %1749

; <label>:1744:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @opMode, align 4
  br label %1749

; <label>:1745:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @forceOverwrite, align 1
  br label %1749

; <label>:1746:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @opMode, align 4
  br label %1749

; <label>:1747:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @opMode, align 4
  br label %1749

; <label>:1748:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @srcMode, align 4
  br label %1749

; <label>:1749:                                   ; preds = %1748, %1747, %1746, %1745, %1744, %1743, %1742, %1741, %1740, %1739, %1738, %1737, %1736, %1735, %1734, %1733, %1732, %1731, %1728
  %1750 = load i8*, i8** %1718, align 8
  %scevgep2.9 = getelementptr i8, i8* %1750, i64 2
  %scevgep3.9 = getelementptr i8, i8* %scevgep2.9, i64 %lsr.iv.9
  %1751 = load i8, i8* %scevgep3.9, align 1
  %1752 = sext i8 %1751 to i32
  %1753 = icmp ne i32 %1752, 0
  %lsr.iv.next.9 = add i64 %lsr.iv.9, 1
  br i1 %1753, label %.lr.ph42.9, label %._crit_edge43.loopexit.9

._crit_edge43.loopexit.9:                         ; preds = %1749
  br label %._crit_edge43.9

._crit_edge43.9:                                  ; preds = %._crit_edge43.loopexit.9, %1717, %1710, %1704
  call void @__loop_iteration_test___3()
  %1754 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1698, i32 0, i32 1
  %1755 = load %struct.zzzz*, %struct.zzzz** %1754, align 8
  %1756 = icmp ne %struct.zzzz* %1755, null
  br i1 %1756, label %.lr.ph48.10, label %.loopexit17.loopexit

.lr.ph48.10:                                      ; preds = %._crit_edge43.9
  call void @unroll_loop(i32 3)
  %1757 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1755, i32 0, i32 0
  %1758 = load i8*, i8** %1757, align 8
  %1759 = call i32 @strcmp(i8* %1758, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1760 = icmp eq i32 %1759, 0
  br i1 %1760, label %.loopexit17.loopexit, label %1761

; <label>:1761:                                   ; preds = %.lr.ph48.10
  %1762 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1755, i32 0, i32 0
  %1763 = load i8*, i8** %1762, align 8
  %1764 = load i8, i8* %1763, align 1
  %1765 = sext i8 %1764 to i32
  %1766 = icmp eq i32 %1765, 45
  br i1 %1766, label %1767, label %._crit_edge43.10

; <label>:1767:                                   ; preds = %1761
  %1768 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1755, i32 0, i32 0
  %1769 = load i8*, i8** %1768, align 8
  %1770 = getelementptr inbounds i8, i8* %1769, i64 1
  %1771 = load i8, i8* %1770, align 1
  %1772 = sext i8 %1771 to i32
  %1773 = icmp ne i32 %1772, 45
  br i1 %1773, label %1774, label %._crit_edge43.10

; <label>:1774:                                   ; preds = %1767
  %1775 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1755, i32 0, i32 0
  %1776 = load i8*, i8** %1775, align 8
  %1777 = getelementptr inbounds i8, i8* %1776, i64 1
  %1778 = load i8, i8* %1777, align 1
  %1779 = sext i8 %1778 to i32
  %1780 = icmp ne i32 %1779, 0
  br i1 %1780, label %.lr.ph42.preheader.10, label %._crit_edge43.10

.lr.ph42.preheader.10:                            ; preds = %1774
  %1781 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1755, i32 0, i32 0
  br label %.lr.ph42.10

.lr.ph42.10:                                      ; preds = %1806, %.lr.ph42.preheader.10
  %lsr.iv.10 = phi i64 [ 0, %.lr.ph42.preheader.10 ], [ %lsr.iv.next.10, %1806 ]
  call void @unroll_loop(i32 4)
  %1782 = load i8*, i8** %1781, align 8
  %scevgep.10 = getelementptr i8, i8* %1782, i64 1
  %scevgep1.10 = getelementptr i8, i8* %scevgep.10, i64 %lsr.iv.10
  %1783 = load i8, i8* %scevgep1.10, align 1
  %1784 = sext i8 %1783 to i32
  switch i32 %1784, label %.loopexit22 [
    i32 99, label %1805
    i32 100, label %1804
    i32 122, label %1803
    i32 102, label %1802
    i32 116, label %1801
    i32 107, label %1800
    i32 115, label %1799
    i32 113, label %1798
    i32 49, label %1797
    i32 50, label %1796
    i32 51, label %1795
    i32 52, label %1794
    i32 53, label %1793
    i32 54, label %1792
    i32 55, label %1791
    i32 56, label %1790
    i32 57, label %1789
    i32 86, label %1788
    i32 76, label %1788
    i32 118, label %1785
    i32 104, label %.loopexit23
  ]

; <label>:1785:                                   ; preds = %.lr.ph42.10
  %1786 = load i32, i32* @verbosity, align 4
  %1787 = add nsw i32 %1786, 1
  store i32 %1787, i32* @verbosity, align 4
  br label %1806

; <label>:1788:                                   ; preds = %.lr.ph42.10, %.lr.ph42.10
  call void @license()
  br label %1806

; <label>:1789:                                   ; preds = %.lr.ph42.10
  store i32 9, i32* @blockSize100k, align 4
  br label %1806

; <label>:1790:                                   ; preds = %.lr.ph42.10
  store i32 8, i32* @blockSize100k, align 4
  br label %1806

; <label>:1791:                                   ; preds = %.lr.ph42.10
  store i32 7, i32* @blockSize100k, align 4
  br label %1806

; <label>:1792:                                   ; preds = %.lr.ph42.10
  store i32 6, i32* @blockSize100k, align 4
  br label %1806

; <label>:1793:                                   ; preds = %.lr.ph42.10
  store i32 5, i32* @blockSize100k, align 4
  br label %1806

; <label>:1794:                                   ; preds = %.lr.ph42.10
  store i32 4, i32* @blockSize100k, align 4
  br label %1806

; <label>:1795:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @blockSize100k, align 4
  br label %1806

; <label>:1796:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @blockSize100k, align 4
  br label %1806

; <label>:1797:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @blockSize100k, align 4
  br label %1806

; <label>:1798:                                   ; preds = %.lr.ph42.10
  store i8 0, i8* @noisy, align 1
  br label %1806

; <label>:1799:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @smallMode, align 1
  br label %1806

; <label>:1800:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @keepInputFiles, align 1
  br label %1806

; <label>:1801:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @opMode, align 4
  br label %1806

; <label>:1802:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @forceOverwrite, align 1
  br label %1806

; <label>:1803:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @opMode, align 4
  br label %1806

; <label>:1804:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @opMode, align 4
  br label %1806

; <label>:1805:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @srcMode, align 4
  br label %1806

; <label>:1806:                                   ; preds = %1805, %1804, %1803, %1802, %1801, %1800, %1799, %1798, %1797, %1796, %1795, %1794, %1793, %1792, %1791, %1790, %1789, %1788, %1785
  %1807 = load i8*, i8** %1775, align 8
  %scevgep2.10 = getelementptr i8, i8* %1807, i64 2
  %scevgep3.10 = getelementptr i8, i8* %scevgep2.10, i64 %lsr.iv.10
  %1808 = load i8, i8* %scevgep3.10, align 1
  %1809 = sext i8 %1808 to i32
  %1810 = icmp ne i32 %1809, 0
  %lsr.iv.next.10 = add i64 %lsr.iv.10, 1
  br i1 %1810, label %.lr.ph42.10, label %._crit_edge43.loopexit.10

._crit_edge43.loopexit.10:                        ; preds = %1806
  br label %._crit_edge43.10

._crit_edge43.10:                                 ; preds = %._crit_edge43.loopexit.10, %1774, %1767, %1761
  call void @__loop_iteration_test___3()
  %1811 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1755, i32 0, i32 1
  %1812 = load %struct.zzzz*, %struct.zzzz** %1811, align 8
  %1813 = icmp ne %struct.zzzz* %1812, null
  br i1 %1813, label %.lr.ph48.11, label %.loopexit17.loopexit

.lr.ph48.11:                                      ; preds = %._crit_edge43.10
  call void @unroll_loop(i32 3)
  %1814 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1812, i32 0, i32 0
  %1815 = load i8*, i8** %1814, align 8
  %1816 = call i32 @strcmp(i8* %1815, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1817 = icmp eq i32 %1816, 0
  br i1 %1817, label %.loopexit17.loopexit, label %1818

; <label>:1818:                                   ; preds = %.lr.ph48.11
  %1819 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1812, i32 0, i32 0
  %1820 = load i8*, i8** %1819, align 8
  %1821 = load i8, i8* %1820, align 1
  %1822 = sext i8 %1821 to i32
  %1823 = icmp eq i32 %1822, 45
  br i1 %1823, label %1824, label %._crit_edge43.11

; <label>:1824:                                   ; preds = %1818
  %1825 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1812, i32 0, i32 0
  %1826 = load i8*, i8** %1825, align 8
  %1827 = getelementptr inbounds i8, i8* %1826, i64 1
  %1828 = load i8, i8* %1827, align 1
  %1829 = sext i8 %1828 to i32
  %1830 = icmp ne i32 %1829, 45
  br i1 %1830, label %1831, label %._crit_edge43.11

; <label>:1831:                                   ; preds = %1824
  %1832 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1812, i32 0, i32 0
  %1833 = load i8*, i8** %1832, align 8
  %1834 = getelementptr inbounds i8, i8* %1833, i64 1
  %1835 = load i8, i8* %1834, align 1
  %1836 = sext i8 %1835 to i32
  %1837 = icmp ne i32 %1836, 0
  br i1 %1837, label %.lr.ph42.preheader.11, label %._crit_edge43.11

.lr.ph42.preheader.11:                            ; preds = %1831
  %1838 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1812, i32 0, i32 0
  br label %.lr.ph42.11

.lr.ph42.11:                                      ; preds = %1863, %.lr.ph42.preheader.11
  %lsr.iv.11 = phi i64 [ 0, %.lr.ph42.preheader.11 ], [ %lsr.iv.next.11, %1863 ]
  call void @unroll_loop(i32 4)
  %1839 = load i8*, i8** %1838, align 8
  %scevgep.11 = getelementptr i8, i8* %1839, i64 1
  %scevgep1.11 = getelementptr i8, i8* %scevgep.11, i64 %lsr.iv.11
  %1840 = load i8, i8* %scevgep1.11, align 1
  %1841 = sext i8 %1840 to i32
  switch i32 %1841, label %.loopexit24 [
    i32 99, label %1862
    i32 100, label %1861
    i32 122, label %1860
    i32 102, label %1859
    i32 116, label %1858
    i32 107, label %1857
    i32 115, label %1856
    i32 113, label %1855
    i32 49, label %1854
    i32 50, label %1853
    i32 51, label %1852
    i32 52, label %1851
    i32 53, label %1850
    i32 54, label %1849
    i32 55, label %1848
    i32 56, label %1847
    i32 57, label %1846
    i32 86, label %1845
    i32 76, label %1845
    i32 118, label %1842
    i32 104, label %.loopexit25
  ]

; <label>:1842:                                   ; preds = %.lr.ph42.11
  %1843 = load i32, i32* @verbosity, align 4
  %1844 = add nsw i32 %1843, 1
  store i32 %1844, i32* @verbosity, align 4
  br label %1863

; <label>:1845:                                   ; preds = %.lr.ph42.11, %.lr.ph42.11
  call void @license()
  br label %1863

; <label>:1846:                                   ; preds = %.lr.ph42.11
  store i32 9, i32* @blockSize100k, align 4
  br label %1863

; <label>:1847:                                   ; preds = %.lr.ph42.11
  store i32 8, i32* @blockSize100k, align 4
  br label %1863

; <label>:1848:                                   ; preds = %.lr.ph42.11
  store i32 7, i32* @blockSize100k, align 4
  br label %1863

; <label>:1849:                                   ; preds = %.lr.ph42.11
  store i32 6, i32* @blockSize100k, align 4
  br label %1863

; <label>:1850:                                   ; preds = %.lr.ph42.11
  store i32 5, i32* @blockSize100k, align 4
  br label %1863

; <label>:1851:                                   ; preds = %.lr.ph42.11
  store i32 4, i32* @blockSize100k, align 4
  br label %1863

; <label>:1852:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @blockSize100k, align 4
  br label %1863

; <label>:1853:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @blockSize100k, align 4
  br label %1863

; <label>:1854:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @blockSize100k, align 4
  br label %1863

; <label>:1855:                                   ; preds = %.lr.ph42.11
  store i8 0, i8* @noisy, align 1
  br label %1863

; <label>:1856:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @smallMode, align 1
  br label %1863

; <label>:1857:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @keepInputFiles, align 1
  br label %1863

; <label>:1858:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @opMode, align 4
  br label %1863

; <label>:1859:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @forceOverwrite, align 1
  br label %1863

; <label>:1860:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @opMode, align 4
  br label %1863

; <label>:1861:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @opMode, align 4
  br label %1863

; <label>:1862:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @srcMode, align 4
  br label %1863

; <label>:1863:                                   ; preds = %1862, %1861, %1860, %1859, %1858, %1857, %1856, %1855, %1854, %1853, %1852, %1851, %1850, %1849, %1848, %1847, %1846, %1845, %1842
  %1864 = load i8*, i8** %1832, align 8
  %scevgep2.11 = getelementptr i8, i8* %1864, i64 2
  %scevgep3.11 = getelementptr i8, i8* %scevgep2.11, i64 %lsr.iv.11
  %1865 = load i8, i8* %scevgep3.11, align 1
  %1866 = sext i8 %1865 to i32
  %1867 = icmp ne i32 %1866, 0
  %lsr.iv.next.11 = add i64 %lsr.iv.11, 1
  br i1 %1867, label %.lr.ph42.11, label %._crit_edge43.loopexit.11

._crit_edge43.loopexit.11:                        ; preds = %1863
  br label %._crit_edge43.11

._crit_edge43.11:                                 ; preds = %._crit_edge43.loopexit.11, %1831, %1824, %1818
  call void @__loop_iteration_test___3()
  %1868 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1812, i32 0, i32 1
  %1869 = load %struct.zzzz*, %struct.zzzz** %1868, align 8
  %1870 = icmp ne %struct.zzzz* %1869, null
  br i1 %1870, label %.lr.ph48.12, label %.loopexit17.loopexit

.lr.ph48.12:                                      ; preds = %._crit_edge43.11
  call void @unroll_loop(i32 3)
  %1871 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1869, i32 0, i32 0
  %1872 = load i8*, i8** %1871, align 8
  %1873 = call i32 @strcmp(i8* %1872, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1874 = icmp eq i32 %1873, 0
  br i1 %1874, label %.loopexit17.loopexit, label %1875

; <label>:1875:                                   ; preds = %.lr.ph48.12
  %1876 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1869, i32 0, i32 0
  %1877 = load i8*, i8** %1876, align 8
  %1878 = load i8, i8* %1877, align 1
  %1879 = sext i8 %1878 to i32
  %1880 = icmp eq i32 %1879, 45
  br i1 %1880, label %1881, label %._crit_edge43.12

; <label>:1881:                                   ; preds = %1875
  %1882 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1869, i32 0, i32 0
  %1883 = load i8*, i8** %1882, align 8
  %1884 = getelementptr inbounds i8, i8* %1883, i64 1
  %1885 = load i8, i8* %1884, align 1
  %1886 = sext i8 %1885 to i32
  %1887 = icmp ne i32 %1886, 45
  br i1 %1887, label %1888, label %._crit_edge43.12

; <label>:1888:                                   ; preds = %1881
  %1889 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1869, i32 0, i32 0
  %1890 = load i8*, i8** %1889, align 8
  %1891 = getelementptr inbounds i8, i8* %1890, i64 1
  %1892 = load i8, i8* %1891, align 1
  %1893 = sext i8 %1892 to i32
  %1894 = icmp ne i32 %1893, 0
  br i1 %1894, label %.lr.ph42.preheader.12, label %._crit_edge43.12

.lr.ph42.preheader.12:                            ; preds = %1888
  %1895 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1869, i32 0, i32 0
  br label %.lr.ph42.12

.lr.ph42.12:                                      ; preds = %1920, %.lr.ph42.preheader.12
  %lsr.iv.12 = phi i64 [ 0, %.lr.ph42.preheader.12 ], [ %lsr.iv.next.12, %1920 ]
  call void @unroll_loop(i32 4)
  %1896 = load i8*, i8** %1895, align 8
  %scevgep.12 = getelementptr i8, i8* %1896, i64 1
  %scevgep1.12 = getelementptr i8, i8* %scevgep.12, i64 %lsr.iv.12
  %1897 = load i8, i8* %scevgep1.12, align 1
  %1898 = sext i8 %1897 to i32
  switch i32 %1898, label %.loopexit26 [
    i32 99, label %1919
    i32 100, label %1918
    i32 122, label %1917
    i32 102, label %1916
    i32 116, label %1915
    i32 107, label %1914
    i32 115, label %1913
    i32 113, label %1912
    i32 49, label %1911
    i32 50, label %1910
    i32 51, label %1909
    i32 52, label %1908
    i32 53, label %1907
    i32 54, label %1906
    i32 55, label %1905
    i32 56, label %1904
    i32 57, label %1903
    i32 86, label %1902
    i32 76, label %1902
    i32 118, label %1899
    i32 104, label %.loopexit27
  ]

; <label>:1899:                                   ; preds = %.lr.ph42.12
  %1900 = load i32, i32* @verbosity, align 4
  %1901 = add nsw i32 %1900, 1
  store i32 %1901, i32* @verbosity, align 4
  br label %1920

; <label>:1902:                                   ; preds = %.lr.ph42.12, %.lr.ph42.12
  call void @license()
  br label %1920

; <label>:1903:                                   ; preds = %.lr.ph42.12
  store i32 9, i32* @blockSize100k, align 4
  br label %1920

; <label>:1904:                                   ; preds = %.lr.ph42.12
  store i32 8, i32* @blockSize100k, align 4
  br label %1920

; <label>:1905:                                   ; preds = %.lr.ph42.12
  store i32 7, i32* @blockSize100k, align 4
  br label %1920

; <label>:1906:                                   ; preds = %.lr.ph42.12
  store i32 6, i32* @blockSize100k, align 4
  br label %1920

; <label>:1907:                                   ; preds = %.lr.ph42.12
  store i32 5, i32* @blockSize100k, align 4
  br label %1920

; <label>:1908:                                   ; preds = %.lr.ph42.12
  store i32 4, i32* @blockSize100k, align 4
  br label %1920

; <label>:1909:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @blockSize100k, align 4
  br label %1920

; <label>:1910:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @blockSize100k, align 4
  br label %1920

; <label>:1911:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @blockSize100k, align 4
  br label %1920

; <label>:1912:                                   ; preds = %.lr.ph42.12
  store i8 0, i8* @noisy, align 1
  br label %1920

; <label>:1913:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @smallMode, align 1
  br label %1920

; <label>:1914:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @keepInputFiles, align 1
  br label %1920

; <label>:1915:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @opMode, align 4
  br label %1920

; <label>:1916:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @forceOverwrite, align 1
  br label %1920

; <label>:1917:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @opMode, align 4
  br label %1920

; <label>:1918:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @opMode, align 4
  br label %1920

; <label>:1919:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @srcMode, align 4
  br label %1920

; <label>:1920:                                   ; preds = %1919, %1918, %1917, %1916, %1915, %1914, %1913, %1912, %1911, %1910, %1909, %1908, %1907, %1906, %1905, %1904, %1903, %1902, %1899
  %1921 = load i8*, i8** %1889, align 8
  %scevgep2.12 = getelementptr i8, i8* %1921, i64 2
  %scevgep3.12 = getelementptr i8, i8* %scevgep2.12, i64 %lsr.iv.12
  %1922 = load i8, i8* %scevgep3.12, align 1
  %1923 = sext i8 %1922 to i32
  %1924 = icmp ne i32 %1923, 0
  %lsr.iv.next.12 = add i64 %lsr.iv.12, 1
  br i1 %1924, label %.lr.ph42.12, label %._crit_edge43.loopexit.12

._crit_edge43.loopexit.12:                        ; preds = %1920
  br label %._crit_edge43.12

._crit_edge43.12:                                 ; preds = %._crit_edge43.loopexit.12, %1888, %1881, %1875
  call void @__loop_iteration_test___3()
  %1925 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1869, i32 0, i32 1
  %1926 = load %struct.zzzz*, %struct.zzzz** %1925, align 8
  %1927 = icmp ne %struct.zzzz* %1926, null
  br i1 %1927, label %.lr.ph48.13, label %.loopexit17.loopexit

.lr.ph48.13:                                      ; preds = %._crit_edge43.12
  call void @unroll_loop(i32 3)
  %1928 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1926, i32 0, i32 0
  %1929 = load i8*, i8** %1928, align 8
  %1930 = call i32 @strcmp(i8* %1929, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1931 = icmp eq i32 %1930, 0
  br i1 %1931, label %.loopexit17.loopexit, label %1932

; <label>:1932:                                   ; preds = %.lr.ph48.13
  %1933 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1926, i32 0, i32 0
  %1934 = load i8*, i8** %1933, align 8
  %1935 = load i8, i8* %1934, align 1
  %1936 = sext i8 %1935 to i32
  %1937 = icmp eq i32 %1936, 45
  br i1 %1937, label %1938, label %._crit_edge43.13

; <label>:1938:                                   ; preds = %1932
  %1939 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1926, i32 0, i32 0
  %1940 = load i8*, i8** %1939, align 8
  %1941 = getelementptr inbounds i8, i8* %1940, i64 1
  %1942 = load i8, i8* %1941, align 1
  %1943 = sext i8 %1942 to i32
  %1944 = icmp ne i32 %1943, 45
  br i1 %1944, label %1945, label %._crit_edge43.13

; <label>:1945:                                   ; preds = %1938
  %1946 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1926, i32 0, i32 0
  %1947 = load i8*, i8** %1946, align 8
  %1948 = getelementptr inbounds i8, i8* %1947, i64 1
  %1949 = load i8, i8* %1948, align 1
  %1950 = sext i8 %1949 to i32
  %1951 = icmp ne i32 %1950, 0
  br i1 %1951, label %.lr.ph42.preheader.13, label %._crit_edge43.13

.lr.ph42.preheader.13:                            ; preds = %1945
  %1952 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1926, i32 0, i32 0
  br label %.lr.ph42.13

.lr.ph42.13:                                      ; preds = %1977, %.lr.ph42.preheader.13
  %lsr.iv.13 = phi i64 [ 0, %.lr.ph42.preheader.13 ], [ %lsr.iv.next.13, %1977 ]
  call void @unroll_loop(i32 4)
  %1953 = load i8*, i8** %1952, align 8
  %scevgep.13 = getelementptr i8, i8* %1953, i64 1
  %scevgep1.13 = getelementptr i8, i8* %scevgep.13, i64 %lsr.iv.13
  %1954 = load i8, i8* %scevgep1.13, align 1
  %1955 = sext i8 %1954 to i32
  switch i32 %1955, label %.loopexit28 [
    i32 99, label %1976
    i32 100, label %1975
    i32 122, label %1974
    i32 102, label %1973
    i32 116, label %1972
    i32 107, label %1971
    i32 115, label %1970
    i32 113, label %1969
    i32 49, label %1968
    i32 50, label %1967
    i32 51, label %1966
    i32 52, label %1965
    i32 53, label %1964
    i32 54, label %1963
    i32 55, label %1962
    i32 56, label %1961
    i32 57, label %1960
    i32 86, label %1959
    i32 76, label %1959
    i32 118, label %1956
    i32 104, label %.loopexit29
  ]

; <label>:1956:                                   ; preds = %.lr.ph42.13
  %1957 = load i32, i32* @verbosity, align 4
  %1958 = add nsw i32 %1957, 1
  store i32 %1958, i32* @verbosity, align 4
  br label %1977

; <label>:1959:                                   ; preds = %.lr.ph42.13, %.lr.ph42.13
  call void @license()
  br label %1977

; <label>:1960:                                   ; preds = %.lr.ph42.13
  store i32 9, i32* @blockSize100k, align 4
  br label %1977

; <label>:1961:                                   ; preds = %.lr.ph42.13
  store i32 8, i32* @blockSize100k, align 4
  br label %1977

; <label>:1962:                                   ; preds = %.lr.ph42.13
  store i32 7, i32* @blockSize100k, align 4
  br label %1977

; <label>:1963:                                   ; preds = %.lr.ph42.13
  store i32 6, i32* @blockSize100k, align 4
  br label %1977

; <label>:1964:                                   ; preds = %.lr.ph42.13
  store i32 5, i32* @blockSize100k, align 4
  br label %1977

; <label>:1965:                                   ; preds = %.lr.ph42.13
  store i32 4, i32* @blockSize100k, align 4
  br label %1977

; <label>:1966:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @blockSize100k, align 4
  br label %1977

; <label>:1967:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @blockSize100k, align 4
  br label %1977

; <label>:1968:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @blockSize100k, align 4
  br label %1977

; <label>:1969:                                   ; preds = %.lr.ph42.13
  store i8 0, i8* @noisy, align 1
  br label %1977

; <label>:1970:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @smallMode, align 1
  br label %1977

; <label>:1971:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @keepInputFiles, align 1
  br label %1977

; <label>:1972:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @opMode, align 4
  br label %1977

; <label>:1973:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @forceOverwrite, align 1
  br label %1977

; <label>:1974:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @opMode, align 4
  br label %1977

; <label>:1975:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @opMode, align 4
  br label %1977

; <label>:1976:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @srcMode, align 4
  br label %1977

; <label>:1977:                                   ; preds = %1976, %1975, %1974, %1973, %1972, %1971, %1970, %1969, %1968, %1967, %1966, %1965, %1964, %1963, %1962, %1961, %1960, %1959, %1956
  %1978 = load i8*, i8** %1946, align 8
  %scevgep2.13 = getelementptr i8, i8* %1978, i64 2
  %scevgep3.13 = getelementptr i8, i8* %scevgep2.13, i64 %lsr.iv.13
  %1979 = load i8, i8* %scevgep3.13, align 1
  %1980 = sext i8 %1979 to i32
  %1981 = icmp ne i32 %1980, 0
  %lsr.iv.next.13 = add i64 %lsr.iv.13, 1
  br i1 %1981, label %.lr.ph42.13, label %._crit_edge43.loopexit.13

._crit_edge43.loopexit.13:                        ; preds = %1977
  br label %._crit_edge43.13

._crit_edge43.13:                                 ; preds = %._crit_edge43.loopexit.13, %1945, %1938, %1932
  call void @__loop_iteration_test___3()
  %1982 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1926, i32 0, i32 1
  %1983 = load %struct.zzzz*, %struct.zzzz** %1982, align 8
  %1984 = icmp ne %struct.zzzz* %1983, null
  br i1 %1984, label %.lr.ph48.14, label %.loopexit17.loopexit

.lr.ph48.14:                                      ; preds = %._crit_edge43.13
  call void @unroll_loop(i32 3)
  %1985 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1983, i32 0, i32 0
  %1986 = load i8*, i8** %1985, align 8
  %1987 = call i32 @strcmp(i8* %1986, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1988 = icmp eq i32 %1987, 0
  br i1 %1988, label %.loopexit17.loopexit, label %1989

; <label>:1989:                                   ; preds = %.lr.ph48.14
  %1990 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1983, i32 0, i32 0
  %1991 = load i8*, i8** %1990, align 8
  %1992 = load i8, i8* %1991, align 1
  %1993 = sext i8 %1992 to i32
  %1994 = icmp eq i32 %1993, 45
  br i1 %1994, label %1995, label %._crit_edge43.14

; <label>:1995:                                   ; preds = %1989
  %1996 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1983, i32 0, i32 0
  %1997 = load i8*, i8** %1996, align 8
  %1998 = getelementptr inbounds i8, i8* %1997, i64 1
  %1999 = load i8, i8* %1998, align 1
  %2000 = sext i8 %1999 to i32
  %2001 = icmp ne i32 %2000, 45
  br i1 %2001, label %2002, label %._crit_edge43.14

; <label>:2002:                                   ; preds = %1995
  %2003 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1983, i32 0, i32 0
  %2004 = load i8*, i8** %2003, align 8
  %2005 = getelementptr inbounds i8, i8* %2004, i64 1
  %2006 = load i8, i8* %2005, align 1
  %2007 = sext i8 %2006 to i32
  %2008 = icmp ne i32 %2007, 0
  br i1 %2008, label %.lr.ph42.preheader.14, label %._crit_edge43.14

.lr.ph42.preheader.14:                            ; preds = %2002
  %2009 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1983, i32 0, i32 0
  br label %.lr.ph42.14

.lr.ph42.14:                                      ; preds = %2034, %.lr.ph42.preheader.14
  %lsr.iv.14 = phi i64 [ 0, %.lr.ph42.preheader.14 ], [ %lsr.iv.next.14, %2034 ]
  call void @unroll_loop(i32 4)
  %2010 = load i8*, i8** %2009, align 8
  %scevgep.14 = getelementptr i8, i8* %2010, i64 1
  %scevgep1.14 = getelementptr i8, i8* %scevgep.14, i64 %lsr.iv.14
  %2011 = load i8, i8* %scevgep1.14, align 1
  %2012 = sext i8 %2011 to i32
  switch i32 %2012, label %.loopexit30 [
    i32 99, label %2033
    i32 100, label %2032
    i32 122, label %2031
    i32 102, label %2030
    i32 116, label %2029
    i32 107, label %2028
    i32 115, label %2027
    i32 113, label %2026
    i32 49, label %2025
    i32 50, label %2024
    i32 51, label %2023
    i32 52, label %2022
    i32 53, label %2021
    i32 54, label %2020
    i32 55, label %2019
    i32 56, label %2018
    i32 57, label %2017
    i32 86, label %2016
    i32 76, label %2016
    i32 118, label %2013
    i32 104, label %.loopexit31
  ]

; <label>:2013:                                   ; preds = %.lr.ph42.14
  %2014 = load i32, i32* @verbosity, align 4
  %2015 = add nsw i32 %2014, 1
  store i32 %2015, i32* @verbosity, align 4
  br label %2034

; <label>:2016:                                   ; preds = %.lr.ph42.14, %.lr.ph42.14
  call void @license()
  br label %2034

; <label>:2017:                                   ; preds = %.lr.ph42.14
  store i32 9, i32* @blockSize100k, align 4
  br label %2034

; <label>:2018:                                   ; preds = %.lr.ph42.14
  store i32 8, i32* @blockSize100k, align 4
  br label %2034

; <label>:2019:                                   ; preds = %.lr.ph42.14
  store i32 7, i32* @blockSize100k, align 4
  br label %2034

; <label>:2020:                                   ; preds = %.lr.ph42.14
  store i32 6, i32* @blockSize100k, align 4
  br label %2034

; <label>:2021:                                   ; preds = %.lr.ph42.14
  store i32 5, i32* @blockSize100k, align 4
  br label %2034

; <label>:2022:                                   ; preds = %.lr.ph42.14
  store i32 4, i32* @blockSize100k, align 4
  br label %2034

; <label>:2023:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @blockSize100k, align 4
  br label %2034

; <label>:2024:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @blockSize100k, align 4
  br label %2034

; <label>:2025:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @blockSize100k, align 4
  br label %2034

; <label>:2026:                                   ; preds = %.lr.ph42.14
  store i8 0, i8* @noisy, align 1
  br label %2034

; <label>:2027:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @smallMode, align 1
  br label %2034

; <label>:2028:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @keepInputFiles, align 1
  br label %2034

; <label>:2029:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @opMode, align 4
  br label %2034

; <label>:2030:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @forceOverwrite, align 1
  br label %2034

; <label>:2031:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @opMode, align 4
  br label %2034

; <label>:2032:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @opMode, align 4
  br label %2034

; <label>:2033:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @srcMode, align 4
  br label %2034

; <label>:2034:                                   ; preds = %2033, %2032, %2031, %2030, %2029, %2028, %2027, %2026, %2025, %2024, %2023, %2022, %2021, %2020, %2019, %2018, %2017, %2016, %2013
  %2035 = load i8*, i8** %2003, align 8
  %scevgep2.14 = getelementptr i8, i8* %2035, i64 2
  %scevgep3.14 = getelementptr i8, i8* %scevgep2.14, i64 %lsr.iv.14
  %2036 = load i8, i8* %scevgep3.14, align 1
  %2037 = sext i8 %2036 to i32
  %2038 = icmp ne i32 %2037, 0
  %lsr.iv.next.14 = add i64 %lsr.iv.14, 1
  br i1 %2038, label %.lr.ph42.14, label %._crit_edge43.loopexit.14

._crit_edge43.loopexit.14:                        ; preds = %2034
  br label %._crit_edge43.14

._crit_edge43.14:                                 ; preds = %._crit_edge43.loopexit.14, %2002, %1995, %1989
  call void @__loop_iteration_test___3()
  %2039 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1983, i32 0, i32 1
  %2040 = load %struct.zzzz*, %struct.zzzz** %2039, align 8
  %2041 = icmp ne %struct.zzzz* %2040, null
  br i1 %2041, label %.lr.ph48.15, label %.loopexit17.loopexit

.lr.ph48.15:                                      ; preds = %._crit_edge43.14
  call void @unroll_loop(i32 3)
  %2042 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2040, i32 0, i32 0
  %2043 = load i8*, i8** %2042, align 8
  %2044 = call i32 @strcmp(i8* %2043, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2045 = icmp eq i32 %2044, 0
  br i1 %2045, label %.loopexit17.loopexit, label %2046

; <label>:2046:                                   ; preds = %.lr.ph48.15
  %2047 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2040, i32 0, i32 0
  %2048 = load i8*, i8** %2047, align 8
  %2049 = load i8, i8* %2048, align 1
  %2050 = sext i8 %2049 to i32
  %2051 = icmp eq i32 %2050, 45
  br i1 %2051, label %2052, label %._crit_edge43.15

; <label>:2052:                                   ; preds = %2046
  %2053 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2040, i32 0, i32 0
  %2054 = load i8*, i8** %2053, align 8
  %2055 = getelementptr inbounds i8, i8* %2054, i64 1
  %2056 = load i8, i8* %2055, align 1
  %2057 = sext i8 %2056 to i32
  %2058 = icmp ne i32 %2057, 45
  br i1 %2058, label %2059, label %._crit_edge43.15

; <label>:2059:                                   ; preds = %2052
  %2060 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2040, i32 0, i32 0
  %2061 = load i8*, i8** %2060, align 8
  %2062 = getelementptr inbounds i8, i8* %2061, i64 1
  %2063 = load i8, i8* %2062, align 1
  %2064 = sext i8 %2063 to i32
  %2065 = icmp ne i32 %2064, 0
  br i1 %2065, label %.lr.ph42.preheader.15, label %._crit_edge43.15

.lr.ph42.preheader.15:                            ; preds = %2059
  %2066 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2040, i32 0, i32 0
  br label %.lr.ph42.15

.lr.ph42.15:                                      ; preds = %2091, %.lr.ph42.preheader.15
  %lsr.iv.15 = phi i64 [ 0, %.lr.ph42.preheader.15 ], [ %lsr.iv.next.15, %2091 ]
  call void @unroll_loop(i32 4)
  %2067 = load i8*, i8** %2066, align 8
  %scevgep.15 = getelementptr i8, i8* %2067, i64 1
  %scevgep1.15 = getelementptr i8, i8* %scevgep.15, i64 %lsr.iv.15
  %2068 = load i8, i8* %scevgep1.15, align 1
  %2069 = sext i8 %2068 to i32
  switch i32 %2069, label %.loopexit32 [
    i32 99, label %2090
    i32 100, label %2089
    i32 122, label %2088
    i32 102, label %2087
    i32 116, label %2086
    i32 107, label %2085
    i32 115, label %2084
    i32 113, label %2083
    i32 49, label %2082
    i32 50, label %2081
    i32 51, label %2080
    i32 52, label %2079
    i32 53, label %2078
    i32 54, label %2077
    i32 55, label %2076
    i32 56, label %2075
    i32 57, label %2074
    i32 86, label %2073
    i32 76, label %2073
    i32 118, label %2070
    i32 104, label %.loopexit33
  ]

; <label>:2070:                                   ; preds = %.lr.ph42.15
  %2071 = load i32, i32* @verbosity, align 4
  %2072 = add nsw i32 %2071, 1
  store i32 %2072, i32* @verbosity, align 4
  br label %2091

; <label>:2073:                                   ; preds = %.lr.ph42.15, %.lr.ph42.15
  call void @license()
  br label %2091

; <label>:2074:                                   ; preds = %.lr.ph42.15
  store i32 9, i32* @blockSize100k, align 4
  br label %2091

; <label>:2075:                                   ; preds = %.lr.ph42.15
  store i32 8, i32* @blockSize100k, align 4
  br label %2091

; <label>:2076:                                   ; preds = %.lr.ph42.15
  store i32 7, i32* @blockSize100k, align 4
  br label %2091

; <label>:2077:                                   ; preds = %.lr.ph42.15
  store i32 6, i32* @blockSize100k, align 4
  br label %2091

; <label>:2078:                                   ; preds = %.lr.ph42.15
  store i32 5, i32* @blockSize100k, align 4
  br label %2091

; <label>:2079:                                   ; preds = %.lr.ph42.15
  store i32 4, i32* @blockSize100k, align 4
  br label %2091

; <label>:2080:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @blockSize100k, align 4
  br label %2091

; <label>:2081:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @blockSize100k, align 4
  br label %2091

; <label>:2082:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @blockSize100k, align 4
  br label %2091

; <label>:2083:                                   ; preds = %.lr.ph42.15
  store i8 0, i8* @noisy, align 1
  br label %2091

; <label>:2084:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @smallMode, align 1
  br label %2091

; <label>:2085:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @keepInputFiles, align 1
  br label %2091

; <label>:2086:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @opMode, align 4
  br label %2091

; <label>:2087:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @forceOverwrite, align 1
  br label %2091

; <label>:2088:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @opMode, align 4
  br label %2091

; <label>:2089:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @opMode, align 4
  br label %2091

; <label>:2090:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @srcMode, align 4
  br label %2091

; <label>:2091:                                   ; preds = %2090, %2089, %2088, %2087, %2086, %2085, %2084, %2083, %2082, %2081, %2080, %2079, %2078, %2077, %2076, %2075, %2074, %2073, %2070
  %2092 = load i8*, i8** %2060, align 8
  %scevgep2.15 = getelementptr i8, i8* %2092, i64 2
  %scevgep3.15 = getelementptr i8, i8* %scevgep2.15, i64 %lsr.iv.15
  %2093 = load i8, i8* %scevgep3.15, align 1
  %2094 = sext i8 %2093 to i32
  %2095 = icmp ne i32 %2094, 0
  %lsr.iv.next.15 = add i64 %lsr.iv.15, 1
  br i1 %2095, label %.lr.ph42.15, label %._crit_edge43.loopexit.15

._crit_edge43.loopexit.15:                        ; preds = %2091
  br label %._crit_edge43.15

._crit_edge43.15:                                 ; preds = %._crit_edge43.loopexit.15, %2059, %2052, %2046
  call void @__loop_iteration_test___3()
  %2096 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2040, i32 0, i32 1
  %2097 = load %struct.zzzz*, %struct.zzzz** %2096, align 8
  %2098 = icmp ne %struct.zzzz* %2097, null
  br i1 %2098, label %.lr.ph48.16, label %.loopexit17.loopexit

.lr.ph48.16:                                      ; preds = %._crit_edge43.15
  call void @unroll_loop(i32 3)
  %2099 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2097, i32 0, i32 0
  %2100 = load i8*, i8** %2099, align 8
  %2101 = call i32 @strcmp(i8* %2100, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2102 = icmp eq i32 %2101, 0
  br i1 %2102, label %.loopexit17.loopexit, label %2103

; <label>:2103:                                   ; preds = %.lr.ph48.16
  %2104 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2097, i32 0, i32 0
  %2105 = load i8*, i8** %2104, align 8
  %2106 = load i8, i8* %2105, align 1
  %2107 = sext i8 %2106 to i32
  %2108 = icmp eq i32 %2107, 45
  br i1 %2108, label %2109, label %._crit_edge43.16

; <label>:2109:                                   ; preds = %2103
  %2110 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2097, i32 0, i32 0
  %2111 = load i8*, i8** %2110, align 8
  %2112 = getelementptr inbounds i8, i8* %2111, i64 1
  %2113 = load i8, i8* %2112, align 1
  %2114 = sext i8 %2113 to i32
  %2115 = icmp ne i32 %2114, 45
  br i1 %2115, label %2116, label %._crit_edge43.16

; <label>:2116:                                   ; preds = %2109
  %2117 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2097, i32 0, i32 0
  %2118 = load i8*, i8** %2117, align 8
  %2119 = getelementptr inbounds i8, i8* %2118, i64 1
  %2120 = load i8, i8* %2119, align 1
  %2121 = sext i8 %2120 to i32
  %2122 = icmp ne i32 %2121, 0
  br i1 %2122, label %.lr.ph42.preheader.16, label %._crit_edge43.16

.lr.ph42.preheader.16:                            ; preds = %2116
  %2123 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2097, i32 0, i32 0
  br label %.lr.ph42.16

.lr.ph42.16:                                      ; preds = %2148, %.lr.ph42.preheader.16
  %lsr.iv.16 = phi i64 [ 0, %.lr.ph42.preheader.16 ], [ %lsr.iv.next.16, %2148 ]
  call void @unroll_loop(i32 4)
  %2124 = load i8*, i8** %2123, align 8
  %scevgep.16 = getelementptr i8, i8* %2124, i64 1
  %scevgep1.16 = getelementptr i8, i8* %scevgep.16, i64 %lsr.iv.16
  %2125 = load i8, i8* %scevgep1.16, align 1
  %2126 = sext i8 %2125 to i32
  switch i32 %2126, label %.loopexit34 [
    i32 99, label %2147
    i32 100, label %2146
    i32 122, label %2145
    i32 102, label %2144
    i32 116, label %2143
    i32 107, label %2142
    i32 115, label %2141
    i32 113, label %2140
    i32 49, label %2139
    i32 50, label %2138
    i32 51, label %2137
    i32 52, label %2136
    i32 53, label %2135
    i32 54, label %2134
    i32 55, label %2133
    i32 56, label %2132
    i32 57, label %2131
    i32 86, label %2130
    i32 76, label %2130
    i32 118, label %2127
    i32 104, label %.loopexit35
  ]

; <label>:2127:                                   ; preds = %.lr.ph42.16
  %2128 = load i32, i32* @verbosity, align 4
  %2129 = add nsw i32 %2128, 1
  store i32 %2129, i32* @verbosity, align 4
  br label %2148

; <label>:2130:                                   ; preds = %.lr.ph42.16, %.lr.ph42.16
  call void @license()
  br label %2148

; <label>:2131:                                   ; preds = %.lr.ph42.16
  store i32 9, i32* @blockSize100k, align 4
  br label %2148

; <label>:2132:                                   ; preds = %.lr.ph42.16
  store i32 8, i32* @blockSize100k, align 4
  br label %2148

; <label>:2133:                                   ; preds = %.lr.ph42.16
  store i32 7, i32* @blockSize100k, align 4
  br label %2148

; <label>:2134:                                   ; preds = %.lr.ph42.16
  store i32 6, i32* @blockSize100k, align 4
  br label %2148

; <label>:2135:                                   ; preds = %.lr.ph42.16
  store i32 5, i32* @blockSize100k, align 4
  br label %2148

; <label>:2136:                                   ; preds = %.lr.ph42.16
  store i32 4, i32* @blockSize100k, align 4
  br label %2148

; <label>:2137:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @blockSize100k, align 4
  br label %2148

; <label>:2138:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @blockSize100k, align 4
  br label %2148

; <label>:2139:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @blockSize100k, align 4
  br label %2148

; <label>:2140:                                   ; preds = %.lr.ph42.16
  store i8 0, i8* @noisy, align 1
  br label %2148

; <label>:2141:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @smallMode, align 1
  br label %2148

; <label>:2142:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @keepInputFiles, align 1
  br label %2148

; <label>:2143:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @opMode, align 4
  br label %2148

; <label>:2144:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @forceOverwrite, align 1
  br label %2148

; <label>:2145:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @opMode, align 4
  br label %2148

; <label>:2146:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @opMode, align 4
  br label %2148

; <label>:2147:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @srcMode, align 4
  br label %2148

; <label>:2148:                                   ; preds = %2147, %2146, %2145, %2144, %2143, %2142, %2141, %2140, %2139, %2138, %2137, %2136, %2135, %2134, %2133, %2132, %2131, %2130, %2127
  %2149 = load i8*, i8** %2117, align 8
  %scevgep2.16 = getelementptr i8, i8* %2149, i64 2
  %scevgep3.16 = getelementptr i8, i8* %scevgep2.16, i64 %lsr.iv.16
  %2150 = load i8, i8* %scevgep3.16, align 1
  %2151 = sext i8 %2150 to i32
  %2152 = icmp ne i32 %2151, 0
  %lsr.iv.next.16 = add i64 %lsr.iv.16, 1
  br i1 %2152, label %.lr.ph42.16, label %._crit_edge43.loopexit.16

._crit_edge43.loopexit.16:                        ; preds = %2148
  br label %._crit_edge43.16

._crit_edge43.16:                                 ; preds = %._crit_edge43.loopexit.16, %2116, %2109, %2103
  call void @__loop_iteration_test___3()
  %2153 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2097, i32 0, i32 1
  %2154 = load %struct.zzzz*, %struct.zzzz** %2153, align 8
  %2155 = icmp ne %struct.zzzz* %2154, null
  br i1 %2155, label %.lr.ph48.17, label %.loopexit17.loopexit

.lr.ph48.17:                                      ; preds = %._crit_edge43.16
  call void @unroll_loop(i32 3)
  %2156 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2154, i32 0, i32 0
  %2157 = load i8*, i8** %2156, align 8
  %2158 = call i32 @strcmp(i8* %2157, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2159 = icmp eq i32 %2158, 0
  br i1 %2159, label %.loopexit17.loopexit, label %2160

; <label>:2160:                                   ; preds = %.lr.ph48.17
  %2161 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2154, i32 0, i32 0
  %2162 = load i8*, i8** %2161, align 8
  %2163 = load i8, i8* %2162, align 1
  %2164 = sext i8 %2163 to i32
  %2165 = icmp eq i32 %2164, 45
  br i1 %2165, label %2166, label %._crit_edge43.17

; <label>:2166:                                   ; preds = %2160
  %2167 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2154, i32 0, i32 0
  %2168 = load i8*, i8** %2167, align 8
  %2169 = getelementptr inbounds i8, i8* %2168, i64 1
  %2170 = load i8, i8* %2169, align 1
  %2171 = sext i8 %2170 to i32
  %2172 = icmp ne i32 %2171, 45
  br i1 %2172, label %2173, label %._crit_edge43.17

; <label>:2173:                                   ; preds = %2166
  %2174 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2154, i32 0, i32 0
  %2175 = load i8*, i8** %2174, align 8
  %2176 = getelementptr inbounds i8, i8* %2175, i64 1
  %2177 = load i8, i8* %2176, align 1
  %2178 = sext i8 %2177 to i32
  %2179 = icmp ne i32 %2178, 0
  br i1 %2179, label %.lr.ph42.preheader.17, label %._crit_edge43.17

.lr.ph42.preheader.17:                            ; preds = %2173
  %2180 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2154, i32 0, i32 0
  br label %.lr.ph42.17

.lr.ph42.17:                                      ; preds = %2205, %.lr.ph42.preheader.17
  %lsr.iv.17 = phi i64 [ 0, %.lr.ph42.preheader.17 ], [ %lsr.iv.next.17, %2205 ]
  call void @unroll_loop(i32 4)
  %2181 = load i8*, i8** %2180, align 8
  %scevgep.17 = getelementptr i8, i8* %2181, i64 1
  %scevgep1.17 = getelementptr i8, i8* %scevgep.17, i64 %lsr.iv.17
  %2182 = load i8, i8* %scevgep1.17, align 1
  %2183 = sext i8 %2182 to i32
  switch i32 %2183, label %.loopexit36 [
    i32 99, label %2204
    i32 100, label %2203
    i32 122, label %2202
    i32 102, label %2201
    i32 116, label %2200
    i32 107, label %2199
    i32 115, label %2198
    i32 113, label %2197
    i32 49, label %2196
    i32 50, label %2195
    i32 51, label %2194
    i32 52, label %2193
    i32 53, label %2192
    i32 54, label %2191
    i32 55, label %2190
    i32 56, label %2189
    i32 57, label %2188
    i32 86, label %2187
    i32 76, label %2187
    i32 118, label %2184
    i32 104, label %.loopexit37
  ]

; <label>:2184:                                   ; preds = %.lr.ph42.17
  %2185 = load i32, i32* @verbosity, align 4
  %2186 = add nsw i32 %2185, 1
  store i32 %2186, i32* @verbosity, align 4
  br label %2205

; <label>:2187:                                   ; preds = %.lr.ph42.17, %.lr.ph42.17
  call void @license()
  br label %2205

; <label>:2188:                                   ; preds = %.lr.ph42.17
  store i32 9, i32* @blockSize100k, align 4
  br label %2205

; <label>:2189:                                   ; preds = %.lr.ph42.17
  store i32 8, i32* @blockSize100k, align 4
  br label %2205

; <label>:2190:                                   ; preds = %.lr.ph42.17
  store i32 7, i32* @blockSize100k, align 4
  br label %2205

; <label>:2191:                                   ; preds = %.lr.ph42.17
  store i32 6, i32* @blockSize100k, align 4
  br label %2205

; <label>:2192:                                   ; preds = %.lr.ph42.17
  store i32 5, i32* @blockSize100k, align 4
  br label %2205

; <label>:2193:                                   ; preds = %.lr.ph42.17
  store i32 4, i32* @blockSize100k, align 4
  br label %2205

; <label>:2194:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @blockSize100k, align 4
  br label %2205

; <label>:2195:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @blockSize100k, align 4
  br label %2205

; <label>:2196:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @blockSize100k, align 4
  br label %2205

; <label>:2197:                                   ; preds = %.lr.ph42.17
  store i8 0, i8* @noisy, align 1
  br label %2205

; <label>:2198:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @smallMode, align 1
  br label %2205

; <label>:2199:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @keepInputFiles, align 1
  br label %2205

; <label>:2200:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @opMode, align 4
  br label %2205

; <label>:2201:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @forceOverwrite, align 1
  br label %2205

; <label>:2202:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @opMode, align 4
  br label %2205

; <label>:2203:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @opMode, align 4
  br label %2205

; <label>:2204:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @srcMode, align 4
  br label %2205

; <label>:2205:                                   ; preds = %2204, %2203, %2202, %2201, %2200, %2199, %2198, %2197, %2196, %2195, %2194, %2193, %2192, %2191, %2190, %2189, %2188, %2187, %2184
  %2206 = load i8*, i8** %2174, align 8
  %scevgep2.17 = getelementptr i8, i8* %2206, i64 2
  %scevgep3.17 = getelementptr i8, i8* %scevgep2.17, i64 %lsr.iv.17
  %2207 = load i8, i8* %scevgep3.17, align 1
  %2208 = sext i8 %2207 to i32
  %2209 = icmp ne i32 %2208, 0
  %lsr.iv.next.17 = add i64 %lsr.iv.17, 1
  br i1 %2209, label %.lr.ph42.17, label %._crit_edge43.loopexit.17

._crit_edge43.loopexit.17:                        ; preds = %2205
  br label %._crit_edge43.17

._crit_edge43.17:                                 ; preds = %._crit_edge43.loopexit.17, %2173, %2166, %2160
  call void @__loop_iteration_test___3()
  %2210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2154, i32 0, i32 1
  %2211 = load %struct.zzzz*, %struct.zzzz** %2210, align 8
  %2212 = icmp ne %struct.zzzz* %2211, null
  br i1 %2212, label %.lr.ph48.18, label %.loopexit17.loopexit

.lr.ph48.18:                                      ; preds = %._crit_edge43.17
  call void @unroll_loop(i32 3)
  %2213 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2211, i32 0, i32 0
  %2214 = load i8*, i8** %2213, align 8
  %2215 = call i32 @strcmp(i8* %2214, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2216 = icmp eq i32 %2215, 0
  br i1 %2216, label %.loopexit17.loopexit, label %2217

; <label>:2217:                                   ; preds = %.lr.ph48.18
  %2218 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2211, i32 0, i32 0
  %2219 = load i8*, i8** %2218, align 8
  %2220 = load i8, i8* %2219, align 1
  %2221 = sext i8 %2220 to i32
  %2222 = icmp eq i32 %2221, 45
  br i1 %2222, label %2223, label %._crit_edge43.18

; <label>:2223:                                   ; preds = %2217
  %2224 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2211, i32 0, i32 0
  %2225 = load i8*, i8** %2224, align 8
  %2226 = getelementptr inbounds i8, i8* %2225, i64 1
  %2227 = load i8, i8* %2226, align 1
  %2228 = sext i8 %2227 to i32
  %2229 = icmp ne i32 %2228, 45
  br i1 %2229, label %2230, label %._crit_edge43.18

; <label>:2230:                                   ; preds = %2223
  %2231 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2211, i32 0, i32 0
  %2232 = load i8*, i8** %2231, align 8
  %2233 = getelementptr inbounds i8, i8* %2232, i64 1
  %2234 = load i8, i8* %2233, align 1
  %2235 = sext i8 %2234 to i32
  %2236 = icmp ne i32 %2235, 0
  br i1 %2236, label %.lr.ph42.preheader.18, label %._crit_edge43.18

.lr.ph42.preheader.18:                            ; preds = %2230
  %2237 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2211, i32 0, i32 0
  br label %.lr.ph42.18

.lr.ph42.18:                                      ; preds = %2262, %.lr.ph42.preheader.18
  %lsr.iv.18 = phi i64 [ 0, %.lr.ph42.preheader.18 ], [ %lsr.iv.next.18, %2262 ]
  call void @unroll_loop(i32 4)
  %2238 = load i8*, i8** %2237, align 8
  %scevgep.18 = getelementptr i8, i8* %2238, i64 1
  %scevgep1.18 = getelementptr i8, i8* %scevgep.18, i64 %lsr.iv.18
  %2239 = load i8, i8* %scevgep1.18, align 1
  %2240 = sext i8 %2239 to i32
  switch i32 %2240, label %.loopexit38 [
    i32 99, label %2261
    i32 100, label %2260
    i32 122, label %2259
    i32 102, label %2258
    i32 116, label %2257
    i32 107, label %2256
    i32 115, label %2255
    i32 113, label %2254
    i32 49, label %2253
    i32 50, label %2252
    i32 51, label %2251
    i32 52, label %2250
    i32 53, label %2249
    i32 54, label %2248
    i32 55, label %2247
    i32 56, label %2246
    i32 57, label %2245
    i32 86, label %2244
    i32 76, label %2244
    i32 118, label %2241
    i32 104, label %.loopexit39
  ]

; <label>:2241:                                   ; preds = %.lr.ph42.18
  %2242 = load i32, i32* @verbosity, align 4
  %2243 = add nsw i32 %2242, 1
  store i32 %2243, i32* @verbosity, align 4
  br label %2262

; <label>:2244:                                   ; preds = %.lr.ph42.18, %.lr.ph42.18
  call void @license()
  br label %2262

; <label>:2245:                                   ; preds = %.lr.ph42.18
  store i32 9, i32* @blockSize100k, align 4
  br label %2262

; <label>:2246:                                   ; preds = %.lr.ph42.18
  store i32 8, i32* @blockSize100k, align 4
  br label %2262

; <label>:2247:                                   ; preds = %.lr.ph42.18
  store i32 7, i32* @blockSize100k, align 4
  br label %2262

; <label>:2248:                                   ; preds = %.lr.ph42.18
  store i32 6, i32* @blockSize100k, align 4
  br label %2262

; <label>:2249:                                   ; preds = %.lr.ph42.18
  store i32 5, i32* @blockSize100k, align 4
  br label %2262

; <label>:2250:                                   ; preds = %.lr.ph42.18
  store i32 4, i32* @blockSize100k, align 4
  br label %2262

; <label>:2251:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @blockSize100k, align 4
  br label %2262

; <label>:2252:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @blockSize100k, align 4
  br label %2262

; <label>:2253:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @blockSize100k, align 4
  br label %2262

; <label>:2254:                                   ; preds = %.lr.ph42.18
  store i8 0, i8* @noisy, align 1
  br label %2262

; <label>:2255:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @smallMode, align 1
  br label %2262

; <label>:2256:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @keepInputFiles, align 1
  br label %2262

; <label>:2257:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @opMode, align 4
  br label %2262

; <label>:2258:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @forceOverwrite, align 1
  br label %2262

; <label>:2259:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @opMode, align 4
  br label %2262

; <label>:2260:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @opMode, align 4
  br label %2262

; <label>:2261:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @srcMode, align 4
  br label %2262

; <label>:2262:                                   ; preds = %2261, %2260, %2259, %2258, %2257, %2256, %2255, %2254, %2253, %2252, %2251, %2250, %2249, %2248, %2247, %2246, %2245, %2244, %2241
  %2263 = load i8*, i8** %2231, align 8
  %scevgep2.18 = getelementptr i8, i8* %2263, i64 2
  %scevgep3.18 = getelementptr i8, i8* %scevgep2.18, i64 %lsr.iv.18
  %2264 = load i8, i8* %scevgep3.18, align 1
  %2265 = sext i8 %2264 to i32
  %2266 = icmp ne i32 %2265, 0
  %lsr.iv.next.18 = add i64 %lsr.iv.18, 1
  br i1 %2266, label %.lr.ph42.18, label %._crit_edge43.loopexit.18

._crit_edge43.loopexit.18:                        ; preds = %2262
  br label %._crit_edge43.18

._crit_edge43.18:                                 ; preds = %._crit_edge43.loopexit.18, %2230, %2223, %2217
  call void @__loop_iteration_test___3()
  %2267 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2211, i32 0, i32 1
  %2268 = load %struct.zzzz*, %struct.zzzz** %2267, align 8
  %2269 = icmp ne %struct.zzzz* %2268, null
  br i1 %2269, label %.lr.ph48.19, label %.loopexit17.loopexit

.lr.ph48.19:                                      ; preds = %._crit_edge43.18
  call void @unroll_loop(i32 3)
  %2270 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2268, i32 0, i32 0
  %2271 = load i8*, i8** %2270, align 8
  %2272 = call i32 @strcmp(i8* %2271, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2273 = icmp eq i32 %2272, 0
  br i1 %2273, label %.loopexit17.loopexit, label %2274

; <label>:2274:                                   ; preds = %.lr.ph48.19
  %2275 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2268, i32 0, i32 0
  %2276 = load i8*, i8** %2275, align 8
  %2277 = load i8, i8* %2276, align 1
  %2278 = sext i8 %2277 to i32
  %2279 = icmp eq i32 %2278, 45
  br i1 %2279, label %2280, label %._crit_edge43.19

; <label>:2280:                                   ; preds = %2274
  %2281 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2268, i32 0, i32 0
  %2282 = load i8*, i8** %2281, align 8
  %2283 = getelementptr inbounds i8, i8* %2282, i64 1
  %2284 = load i8, i8* %2283, align 1
  %2285 = sext i8 %2284 to i32
  %2286 = icmp ne i32 %2285, 45
  br i1 %2286, label %2287, label %._crit_edge43.19

; <label>:2287:                                   ; preds = %2280
  %2288 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2268, i32 0, i32 0
  %2289 = load i8*, i8** %2288, align 8
  %2290 = getelementptr inbounds i8, i8* %2289, i64 1
  %2291 = load i8, i8* %2290, align 1
  %2292 = sext i8 %2291 to i32
  %2293 = icmp ne i32 %2292, 0
  br i1 %2293, label %.lr.ph42.preheader.19, label %._crit_edge43.19

.lr.ph42.preheader.19:                            ; preds = %2287
  %2294 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2268, i32 0, i32 0
  br label %.lr.ph42.19

.lr.ph42.19:                                      ; preds = %2319, %.lr.ph42.preheader.19
  %lsr.iv.19 = phi i64 [ 0, %.lr.ph42.preheader.19 ], [ %lsr.iv.next.19, %2319 ]
  call void @unroll_loop(i32 4)
  %2295 = load i8*, i8** %2294, align 8
  %scevgep.19 = getelementptr i8, i8* %2295, i64 1
  %scevgep1.19 = getelementptr i8, i8* %scevgep.19, i64 %lsr.iv.19
  %2296 = load i8, i8* %scevgep1.19, align 1
  %2297 = sext i8 %2296 to i32
  switch i32 %2297, label %.loopexit40 [
    i32 99, label %2318
    i32 100, label %2317
    i32 122, label %2316
    i32 102, label %2315
    i32 116, label %2314
    i32 107, label %2313
    i32 115, label %2312
    i32 113, label %2311
    i32 49, label %2310
    i32 50, label %2309
    i32 51, label %2308
    i32 52, label %2307
    i32 53, label %2306
    i32 54, label %2305
    i32 55, label %2304
    i32 56, label %2303
    i32 57, label %2302
    i32 86, label %2301
    i32 76, label %2301
    i32 118, label %2298
    i32 104, label %.loopexit41
  ]

; <label>:2298:                                   ; preds = %.lr.ph42.19
  %2299 = load i32, i32* @verbosity, align 4
  %2300 = add nsw i32 %2299, 1
  store i32 %2300, i32* @verbosity, align 4
  br label %2319

; <label>:2301:                                   ; preds = %.lr.ph42.19, %.lr.ph42.19
  call void @license()
  br label %2319

; <label>:2302:                                   ; preds = %.lr.ph42.19
  store i32 9, i32* @blockSize100k, align 4
  br label %2319

; <label>:2303:                                   ; preds = %.lr.ph42.19
  store i32 8, i32* @blockSize100k, align 4
  br label %2319

; <label>:2304:                                   ; preds = %.lr.ph42.19
  store i32 7, i32* @blockSize100k, align 4
  br label %2319

; <label>:2305:                                   ; preds = %.lr.ph42.19
  store i32 6, i32* @blockSize100k, align 4
  br label %2319

; <label>:2306:                                   ; preds = %.lr.ph42.19
  store i32 5, i32* @blockSize100k, align 4
  br label %2319

; <label>:2307:                                   ; preds = %.lr.ph42.19
  store i32 4, i32* @blockSize100k, align 4
  br label %2319

; <label>:2308:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @blockSize100k, align 4
  br label %2319

; <label>:2309:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @blockSize100k, align 4
  br label %2319

; <label>:2310:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @blockSize100k, align 4
  br label %2319

; <label>:2311:                                   ; preds = %.lr.ph42.19
  store i8 0, i8* @noisy, align 1
  br label %2319

; <label>:2312:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @smallMode, align 1
  br label %2319

; <label>:2313:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @keepInputFiles, align 1
  br label %2319

; <label>:2314:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @opMode, align 4
  br label %2319

; <label>:2315:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @forceOverwrite, align 1
  br label %2319

; <label>:2316:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @opMode, align 4
  br label %2319

; <label>:2317:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @opMode, align 4
  br label %2319

; <label>:2318:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @srcMode, align 4
  br label %2319

; <label>:2319:                                   ; preds = %2318, %2317, %2316, %2315, %2314, %2313, %2312, %2311, %2310, %2309, %2308, %2307, %2306, %2305, %2304, %2303, %2302, %2301, %2298
  %2320 = load i8*, i8** %2288, align 8
  %scevgep2.19 = getelementptr i8, i8* %2320, i64 2
  %scevgep3.19 = getelementptr i8, i8* %scevgep2.19, i64 %lsr.iv.19
  %2321 = load i8, i8* %scevgep3.19, align 1
  %2322 = sext i8 %2321 to i32
  %2323 = icmp ne i32 %2322, 0
  %lsr.iv.next.19 = add i64 %lsr.iv.19, 1
  br i1 %2323, label %.lr.ph42.19, label %._crit_edge43.loopexit.19

._crit_edge43.loopexit.19:                        ; preds = %2319
  br label %._crit_edge43.19

._crit_edge43.19:                                 ; preds = %._crit_edge43.loopexit.19, %2287, %2280, %2274
  call void @__loop_iteration_test___3()
  %2324 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2268, i32 0, i32 1
  %2325 = load %struct.zzzz*, %struct.zzzz** %2324, align 8
  br label %.loopexit17.loopexit
}

declare void @__loop_termination_test___3()

declare void @__loop_iteration_test___3()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old.34(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), align 1
  %39 = sext i8 98 to i32
  %40 = icmp eq i32 98, 47
  br i1 false, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %37
  call void @__loop_iteration_test___0()
  %43 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %44 = sext i8 122 to i32
  %45 = icmp ne i32 122, 0
  br i1 true, label %499, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %666, %657, %648, %639, %630, %621, %612, %603, %594, %585, %576, %567, %558, %549, %540, %531, %522, %513, %504, %42
  call void @__loop_termination_test___0()
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone(%struct.zzzz** %22, i8* %46)
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone.9(%struct.zzzz** %22, i8* %47)
  %48 = sub nsw i32 3, 1, !track_argc !10
  %49 = icmp sle i32 1, 2
  br i1 true, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %50 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %51 = load i8*, i8** %scevgep4, align 8
  %52 = call %struct.zzzz* @snocString_clone(%struct.zzzz* null, i8* %51)
  store %struct.zzzz* %52, %struct.zzzz** %22, align 8
  br i1 true, label %.lr.ph57.1, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57.1, %.lr.ph57
  call void @__loop_termination_test___1()
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %53 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %54 = icmp ne i64 10000562, 0
  %55 = icmp ne %struct.zzzz* %53, null
  br i1 true, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %.lr.ph53.preheader
  call void @unroll_loop(i32 2)
  %56 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr [6 x i8], [6 x i8]* @8, i64 0, i64 0
  %59 = getelementptr [3 x i8], [3 x i8]* @9, i64 0, i64 0
  %60 = call i32 @strcmp(i8* %58, i8* %59) #10
  %61 = icmp eq i32 1, 0
  br i1 false, label %82, label %62

; <label>:62:                                     ; preds = %.lr.ph53
  %63 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 45 to i32
  %67 = icmp eq i32 45, 45
  br i1 true, label %82, label %68

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @numFileNames, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* @numFileNames, align 4
  %71 = load i32, i32* @longestFileName, align 4
  %72 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i64 @strlen(i8* %73) #10
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %71, %75
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %68
  %78 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @strlen(i8* %79) #10
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* @longestFileName, align 4
  br label %82

; <label>:82:                                     ; preds = %77, %68, %62, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ 1, %62 ], [ 1, %77 ], [ 1, %68 ]
  call void @__loop_iteration_test___2()
  %83 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 1
  %84 = load %struct.zzzz*, %struct.zzzz** %83, align 8
  %85 = icmp ne i64 10000590, 0
  %86 = icmp ne %struct.zzzz* %84, null
  br i1 true, label %.lr.ph53.1, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %1243, %1213, %1183, %1153, %1123, %1093, %1063, %1033, %1003, %973, %943, %913, %883, %853, %823, %793, %763, %733, %702, %82
  call void @__loop_termination_test___2()
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %87 = load i32, i32* @numFileNames, align 4
  %88 = icmp eq i32 1, 0
  br i1 false, label %89, label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %91

; <label>:90:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %91

; <label>:91:                                     ; preds = %90, %89
  store i32 1, i32* @opMode, align 4
  %92 = load i8*, i8** @progName, align 8
  %93 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %94 = call i8* @strstr(i8* %92, i8* %93) #10, !track !11
  %95 = icmp ne i64 0, 0
  %96 = icmp ne i8* null, null
  br i1 false, label %103, label %97

; <label>:97:                                     ; preds = %91
  %98 = load i8*, i8** @progName, align 8
  %99 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %100 = call i8* @strstr(i8* %98, i8* %99) #10, !track !12
  %101 = icmp ne i64 0, 0
  %102 = icmp ne i8* null, null
  br i1 false, label %103, label %104

; <label>:103:                                    ; preds = %97, %91
  store i32 2, i32* @opMode, align 4
  br label %104

; <label>:104:                                    ; preds = %103, %97
  %105 = load i8*, i8** @progName, align 8
  %106 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %107 = call i8* @strstr(i8* %105, i8* %106) #10, !track !13
  %108 = icmp ne i64 0, 0
  %109 = icmp ne i8* null, null
  br i1 false, label %128, label %110

; <label>:110:                                    ; preds = %104
  %111 = load i8*, i8** @progName, align 8
  %112 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %113 = call i8* @strstr(i8* %111, i8* %112) #10, !track !14
  %114 = icmp ne i64 0, 0
  %115 = icmp ne i8* null, null
  br i1 false, label %128, label %116

; <label>:116:                                    ; preds = %110
  %117 = load i8*, i8** @progName, align 8
  %118 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %119 = call i8* @strstr(i8* %117, i8* %118) #10, !track !15
  %120 = icmp ne i64 0, 0
  %121 = icmp ne i8* null, null
  br i1 false, label %128, label %122

; <label>:122:                                    ; preds = %116
  %123 = load i8*, i8** @progName, align 8
  %124 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %125 = call i8* @strstr(i8* %123, i8* %124) #10, !track !16
  %126 = icmp ne i64 0, 0
  %127 = icmp ne i8* null, null
  br i1 false, label %128, label %133

; <label>:128:                                    ; preds = %122, %116, %110, %104
  store i32 2, i32* @opMode, align 4
  %129 = load i32, i32* @numFileNames, align 4
  %130 = icmp eq i32 %129, 0
  %131 = zext i1 %130 to i64
  %132 = select i1 %130, i32 1, i32 2
  store i32 %132, i32* @srcMode, align 4
  br label %133

; <label>:133:                                    ; preds = %128, %122
  %134 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %135 = icmp ne i64 10000562, 0
  %136 = icmp ne %struct.zzzz* %134, null
  br i1 true, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %133
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %.lr.ph48.preheader
  call void @unroll_loop(i32 3)
  %137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr [6 x i8], [6 x i8]* @14, i64 0, i64 0
  %140 = getelementptr [3 x i8], [3 x i8]* @15, i64 0, i64 0
  %141 = call i32 @strcmp(i8* %139, i8* %140) #10
  %142 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %143

; <label>:143:                                    ; preds = %.lr.ph48
  %144 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 45 to i32
  %148 = icmp eq i32 45, 45
  br i1 true, label %149, label %._crit_edge43

; <label>:149:                                    ; preds = %143
  %150 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 102 to i32
  %155 = icmp ne i32 102, 45
  br i1 true, label %156, label %._crit_edge43

; <label>:156:                                    ; preds = %149
  %157 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 102 to i32
  %162 = icmp ne i32 102, 0
  br i1 true, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %156
  %163 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %.lr.ph42.preheader
  call void @unroll_loop(i32 4)
  %164 = load i8*, i8** %163, align 8
  %scevgep = getelementptr i8, i8* %164, i64 1
  %165 = load i8, i8* %scevgep, align 1
  %166 = sext i8 102 to i32
  switch i32 102, label %.loopexit1 [
    i32 99, label %167
    i32 100, label %168
    i32 122, label %169
    i32 102, label %170
    i32 116, label %171
    i32 107, label %172
    i32 115, label %173
    i32 113, label %174
    i32 49, label %175
    i32 50, label %176
    i32 51, label %177
    i32 52, label %178
    i32 53, label %179
    i32 54, label %180
    i32 55, label %181
    i32 56, label %182
    i32 57, label %183
    i32 86, label %184
    i32 76, label %184
    i32 118, label %185
    i32 104, label %.loopexit2
  ]

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %198

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %198

; <label>:169:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %198

; <label>:170:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %198

; <label>:171:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %198

; <label>:172:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %198

; <label>:173:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %198

; <label>:174:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %198

; <label>:175:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %198

; <label>:176:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %198

; <label>:177:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %198

; <label>:178:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %198

; <label>:179:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %198

; <label>:180:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %198

; <label>:181:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %198

; <label>:182:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %198

; <label>:183:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %198

; <label>:184:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %198

; <label>:185:                                    ; preds = %.lr.ph42
  %186 = load i32, i32* @verbosity, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* @verbosity, align 4
  br label %198

.loopexit2:                                       ; preds = %.lr.ph42.19139, %.lr.ph42.18132, %.lr.ph42.17125, %.lr.ph42.16118, %.lr.ph42.15111, %.lr.ph42.14104, %.lr.ph42.1397, %.lr.ph42.1290, %.lr.ph42.1183, %.lr.ph42.1076, %.lr.ph42.969, %.lr.ph42.862, %.lr.ph42.755, %.lr.ph42.648, %.lr.ph42.541, %.lr.ph42.434, %.lr.ph42.327, %.lr.ph42.220, %.lr.ph42.113, %.lr.ph42
  call void @__loop_termination_test___4()
  br label %188

.loopexit4:                                       ; preds = %.lr.ph42.1
  br label %188

.loopexit6:                                       ; preds = %.lr.ph42.2
  br label %188

.loopexit8:                                       ; preds = %.lr.ph42.3
  br label %188

.loopexit10:                                      ; preds = %.lr.ph42.4
  br label %188

.loopexit12:                                      ; preds = %.lr.ph42.5
  br label %188

.loopexit14:                                      ; preds = %.lr.ph42.6
  br label %188

.loopexit16:                                      ; preds = %.lr.ph42.7
  br label %188

.loopexit19:                                      ; preds = %.lr.ph42.8
  br label %188

.loopexit21:                                      ; preds = %.lr.ph42.9
  br label %188

.loopexit23:                                      ; preds = %.lr.ph42.10
  br label %188

.loopexit25:                                      ; preds = %.lr.ph42.11
  br label %188

.loopexit27:                                      ; preds = %.lr.ph42.12
  br label %188

.loopexit29:                                      ; preds = %.lr.ph42.13
  br label %188

.loopexit31:                                      ; preds = %.lr.ph42.14
  br label %188

.loopexit33:                                      ; preds = %.lr.ph42.15
  br label %188

.loopexit35:                                      ; preds = %.lr.ph42.16
  br label %188

.loopexit37:                                      ; preds = %.lr.ph42.17
  br label %188

.loopexit39:                                      ; preds = %.lr.ph42.18
  br label %188

.loopexit41:                                      ; preds = %.lr.ph42.19
  br label %188

; <label>:188:                                    ; preds = %.loopexit41, %.loopexit39, %.loopexit37, %.loopexit35, %.loopexit33, %.loopexit31, %.loopexit29, %.loopexit27, %.loopexit25, %.loopexit23, %.loopexit21, %.loopexit19, %.loopexit16, %.loopexit14, %.loopexit12, %.loopexit10, %.loopexit8, %.loopexit6, %.loopexit4, %.loopexit2
  call void @__loop_termination_test___3()
  %189 = load i8*, i8** @progName, align 8
  call void @usage(i8* %189)
  call void @exit(i32 0) #11
  unreachable

.loopexit1:                                       ; preds = %.lr.ph42.19139, %.lr.ph42.18132, %.lr.ph42.17125, %.lr.ph42.16118, %.lr.ph42.15111, %.lr.ph42.14104, %.lr.ph42.1397, %.lr.ph42.1290, %.lr.ph42.1183, %.lr.ph42.1076, %.lr.ph42.969, %.lr.ph42.862, %.lr.ph42.755, %.lr.ph42.648, %.lr.ph42.541, %.lr.ph42.434, %.lr.ph42.327, %.lr.ph42.220, %.lr.ph42.113, %.lr.ph42
  call void @__loop_termination_test___4()
  br label %190

.loopexit3:                                       ; preds = %.lr.ph42.1
  br label %190

.loopexit5:                                       ; preds = %.lr.ph42.2
  br label %190

.loopexit7:                                       ; preds = %.lr.ph42.3
  br label %190

.loopexit9:                                       ; preds = %.lr.ph42.4
  br label %190

.loopexit11:                                      ; preds = %.lr.ph42.5
  br label %190

.loopexit13:                                      ; preds = %.lr.ph42.6
  br label %190

.loopexit15:                                      ; preds = %.lr.ph42.7
  br label %190

.loopexit18:                                      ; preds = %.lr.ph42.8
  br label %190

.loopexit20:                                      ; preds = %.lr.ph42.9
  br label %190

.loopexit22:                                      ; preds = %.lr.ph42.10
  br label %190

.loopexit24:                                      ; preds = %.lr.ph42.11
  br label %190

.loopexit26:                                      ; preds = %.lr.ph42.12
  br label %190

.loopexit28:                                      ; preds = %.lr.ph42.13
  br label %190

.loopexit30:                                      ; preds = %.lr.ph42.14
  br label %190

.loopexit32:                                      ; preds = %.lr.ph42.15
  br label %190

.loopexit34:                                      ; preds = %.lr.ph42.16
  br label %190

.loopexit36:                                      ; preds = %.lr.ph42.17
  br label %190

.loopexit38:                                      ; preds = %.lr.ph42.18
  br label %190

.loopexit40:                                      ; preds = %.lr.ph42.19
  br label %190

; <label>:190:                                    ; preds = %.loopexit40, %.loopexit38, %.loopexit36, %.loopexit34, %.loopexit32, %.loopexit30, %.loopexit28, %.loopexit26, %.loopexit24, %.loopexit22, %.loopexit20, %.loopexit18, %.loopexit15, %.loopexit13, %.loopexit11, %.loopexit9, %.loopexit7, %.loopexit5, %.loopexit3, %.loopexit1
  %.12.lcssa15 = phi %struct.zzzz* [ %134, %.loopexit1 ], [ %204, %.loopexit3 ], [ null, %.loopexit5 ], [ %1361, %.loopexit7 ], [ %1418, %.loopexit9 ], [ %1475, %.loopexit11 ], [ %1532, %.loopexit13 ], [ %1589, %.loopexit15 ], [ %1646, %.loopexit18 ], [ %1703, %.loopexit20 ], [ %1760, %.loopexit22 ], [ %1817, %.loopexit24 ], [ %1874, %.loopexit26 ], [ %1931, %.loopexit28 ], [ %1988, %.loopexit30 ], [ %2045, %.loopexit32 ], [ %2102, %.loopexit34 ], [ %2159, %.loopexit36 ], [ %2216, %.loopexit38 ], [ %2273, %.loopexit40 ]
  call void @__loop_termination_test___3()
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %192 = load i8*, i8** @progName, align 8
  %193 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* %195, i8* %192, i8* %194)
  %197 = load i8*, i8** @progName, align 8
  call void @usage(i8* %197)
  call void @exit(i32 1) #11
  unreachable

; <label>:198:                                    ; preds = %185, %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167
  call void @__loop_iteration_test___4()
  %199 = load i8*, i8** %157, align 8
  %scevgep2 = getelementptr i8, i8* %199, i64 2
  %200 = load i8, i8* %scevgep2, align 1
  %201 = sext i8 107 to i32
  %202 = icmp ne i32 107, 0
  br i1 true, label %.lr.ph42.113, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %2877, %2848, %2819, %2790, %2761, %2732, %2703, %2674, %2645, %2616, %2587, %2558, %2529, %2500, %2471, %2442, %2413, %2384, %2355, %198
  call void @__loop_termination_test___4()
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %156, %149, %143
  call void @__loop_iteration_test___3()
  %203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 1
  %204 = load %struct.zzzz*, %struct.zzzz** %203, align 8
  %205 = icmp ne i64 10000590, 0
  %206 = icmp ne %struct.zzzz* %204, null
  br i1 true, label %.lr.ph48.1, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %._crit_edge43.19, %.lr.ph48.19, %._crit_edge43.18, %.lr.ph48.18, %._crit_edge43.17, %.lr.ph48.17, %._crit_edge43.16, %.lr.ph48.16, %._crit_edge43.15, %.lr.ph48.15, %._crit_edge43.14, %.lr.ph48.14, %._crit_edge43.13, %.lr.ph48.13, %._crit_edge43.12, %.lr.ph48.12, %._crit_edge43.11, %.lr.ph48.11, %._crit_edge43.10, %.lr.ph48.10, %._crit_edge43.9, %.lr.ph48.9, %._crit_edge43.8, %.lr.ph48.8, %._crit_edge43.7, %.lr.ph48.7, %._crit_edge43.6, %.lr.ph48.6, %._crit_edge43.5, %.lr.ph48.5, %._crit_edge43.4, %.lr.ph48.4, %._crit_edge43.3, %.lr.ph48.3, %._crit_edge43.2, %.lr.ph48.2, %._crit_edge43.1, %.lr.ph48.1, %._crit_edge43, %.lr.ph48
  call void @__loop_termination_test___3()
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %133
  %207 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %208 = icmp ne i64 10000562, 0
  %209 = icmp ne %struct.zzzz* %207, null
  br i1 true, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %332, %.lr.ph39.preheader
  %.2337 = phi %struct.zzzz* [ %334, %332 ], [ %207, %.lr.ph39.preheader ]
  call void @unroll_loop(i32 5)
  %210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = call i32 @strcmp(i8* %211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %.loopexit.loopexit, label %214

; <label>:214:                                    ; preds = %.lr.ph39
  %215 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %216 = load i8*, i8** %215, align 8
  %217 = call i32 @strcmp(i8* %216, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

; <label>:219:                                    ; preds = %214
  store i32 2, i32* @srcMode, align 4
  br label %332

; <label>:220:                                    ; preds = %214
  %221 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = call i32 @strcmp(i8* %222, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

; <label>:225:                                    ; preds = %220
  store i32 2, i32* @opMode, align 4
  br label %332

; <label>:226:                                    ; preds = %220
  %227 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %228 = load i8*, i8** %227, align 8
  %229 = call i32 @strcmp(i8* %228, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

; <label>:231:                                    ; preds = %226
  store i32 1, i32* @opMode, align 4
  br label %332

; <label>:232:                                    ; preds = %226
  %233 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = call i32 @strcmp(i8* %234, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %238

; <label>:237:                                    ; preds = %232
  store i8 1, i8* @forceOverwrite, align 1
  br label %332

; <label>:238:                                    ; preds = %232
  %239 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %240 = load i8*, i8** %239, align 8
  %241 = call i32 @strcmp(i8* %240, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

; <label>:243:                                    ; preds = %238
  store i32 3, i32* @opMode, align 4
  br label %332

; <label>:244:                                    ; preds = %238
  %245 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = call i32 @strcmp(i8* %246, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

; <label>:249:                                    ; preds = %244
  store i8 1, i8* @keepInputFiles, align 1
  br label %332

; <label>:250:                                    ; preds = %244
  %251 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %252 = load i8*, i8** %251, align 8
  %253 = call i32 @strcmp(i8* %252, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

; <label>:255:                                    ; preds = %250
  store i8 1, i8* @smallMode, align 1
  br label %332

; <label>:256:                                    ; preds = %250
  %257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  %259 = call i32 @strcmp(i8* %258, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

; <label>:261:                                    ; preds = %256
  store i8 0, i8* @noisy, align 1
  br label %332

; <label>:262:                                    ; preds = %256
  %263 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %264 = load i8*, i8** %263, align 8
  %265 = call i32 @strcmp(i8* %264, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

; <label>:267:                                    ; preds = %262
  call void @license()
  br label %332

; <label>:268:                                    ; preds = %262
  %269 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %270 = load i8*, i8** %269, align 8
  %271 = call i32 @strcmp(i8* %270, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

; <label>:273:                                    ; preds = %268
  call void @license()
  br label %332

; <label>:274:                                    ; preds = %268
  %275 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  %277 = call i32 @strcmp(i8* %276, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

; <label>:279:                                    ; preds = %274
  store i32 1, i32* @workFactor, align 4
  br label %332

; <label>:280:                                    ; preds = %274
  %281 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = call i32 @strcmp(i8* %282, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %286 = load i8*, i8** %285, align 8
  br i1 %284, label %287, label %288

; <label>:287:                                    ; preds = %280
  call void @redundant(i8* %286)
  br label %332

; <label>:288:                                    ; preds = %280
  %289 = call i32 @strcmp(i8* %286, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %292 = load i8*, i8** %291, align 8
  br i1 %290, label %293, label %294

; <label>:293:                                    ; preds = %288
  call void @redundant(i8* %292)
  br label %332

; <label>:294:                                    ; preds = %288
  %295 = call i32 @strcmp(i8* %292, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %298

; <label>:297:                                    ; preds = %294
  store i32 1, i32* @blockSize100k, align 4
  br label %332

; <label>:298:                                    ; preds = %294
  %299 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = call i32 @strcmp(i8* %300, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

; <label>:303:                                    ; preds = %298
  store i32 9, i32* @blockSize100k, align 4
  br label %332

; <label>:304:                                    ; preds = %298
  %305 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = call i32 @strcmp(i8* %306, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %312

; <label>:309:                                    ; preds = %304
  %310 = load i32, i32* @verbosity, align 4
  %311 = add nsw i32 %310, 1
  store i32 %311, i32* @verbosity, align 4
  br label %332

; <label>:312:                                    ; preds = %304
  %313 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %314 = load i8*, i8** %313, align 8
  %315 = call i32 @strcmp(i8* %314, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %319

; <label>:317:                                    ; preds = %312
  %318 = load i8*, i8** @progName, align 8
  call void @usage(i8* %318)
  call void @exit(i32 0) #11
  unreachable

; <label>:319:                                    ; preds = %312
  %320 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 0
  %321 = load i8*, i8** %320, align 8
  %322 = call i32 @strncmp(i8* %321, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %332

; <label>:324:                                    ; preds = %319
  %.23.lcssa13 = phi %struct.zzzz* [ %.2337, %319 ]
  %325 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %326 = load i8*, i8** @progName, align 8
  %327 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %328 = load i8*, i8** %327, align 8
  %329 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %330 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %325, i8* %329, i8* %326, i8* %328)
  %331 = load i8*, i8** @progName, align 8
  call void @usage(i8* %331)
  call void @exit(i32 1) #11
  unreachable

; <label>:332:                                    ; preds = %319, %309, %303, %297, %293, %287, %279, %273, %267, %261, %255, %249, %243, %237, %231, %225, %219
  %333 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.2337, i32 0, i32 1
  %334 = load %struct.zzzz*, %struct.zzzz** %333, align 8
  %335 = icmp ne %struct.zzzz* %334, null
  br i1 %335, label %.lr.ph39, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %332, %.lr.ph39
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %336 = load i32, i32* @verbosity, align 4
  %337 = icmp sgt i32 %336, 4
  br i1 %337, label %338, label %339

; <label>:338:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %339

; <label>:339:                                    ; preds = %338, %.loopexit
  %340 = load i32, i32* @opMode, align 4
  %341 = icmp eq i32 %340, 1
  br i1 %341, label %342, label %349

; <label>:342:                                    ; preds = %339
  %343 = load i8, i8* @smallMode, align 1
  %344 = zext i8 %343 to i32
  %345 = icmp ne i32 %344, 0
  %346 = load i32, i32* @blockSize100k, align 4
  %347 = icmp sgt i32 %346, 2
  %or.cond3 = and i1 %345, %347
  br i1 %or.cond3, label %348, label %349

; <label>:348:                                    ; preds = %342
  store i32 2, i32* @blockSize100k, align 4
  br label %349

; <label>:349:                                    ; preds = %348, %342, %339
  %350 = load i32, i32* @opMode, align 4
  %351 = icmp eq i32 %350, 3
  %352 = load i32, i32* @srcMode, align 4
  %353 = icmp eq i32 %352, 2
  %or.cond5 = and i1 %351, %353
  br i1 %or.cond5, label %354, label %359

; <label>:354:                                    ; preds = %349
  %355 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %356 = load i8*, i8** @progName, align 8
  %357 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %358 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %355, i8* %357, i8* %356)
  call void @exit(i32 1) #11
  unreachable

; <label>:359:                                    ; preds = %349
  %360 = load i32, i32* @srcMode, align 4
  %361 = icmp eq i32 %360, 2
  %362 = load i32, i32* @numFileNames, align 4
  %363 = icmp eq i32 %362, 0
  %or.cond7 = and i1 %361, %363
  br i1 %or.cond7, label %364, label %365

; <label>:364:                                    ; preds = %359
  store i32 1, i32* @srcMode, align 4
  br label %365

; <label>:365:                                    ; preds = %364, %359
  %366 = load i32, i32* @opMode, align 4
  %367 = icmp ne i32 %366, 1
  br i1 %367, label %368, label %369

; <label>:368:                                    ; preds = %365
  store i32 0, i32* @blockSize100k, align 4
  br label %369

; <label>:369:                                    ; preds = %368, %365
  %370 = load i32, i32* @srcMode, align 4
  %371 = icmp eq i32 %370, 3
  br i1 %371, label %372, label %376

; <label>:372:                                    ; preds = %369
  %373 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %374 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %375 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %376

; <label>:376:                                    ; preds = %372, %369
  %377 = load i32, i32* @opMode, align 4
  %378 = icmp eq i32 %377, 1
  br i1 %378, label %379, label %408

; <label>:379:                                    ; preds = %376
  %380 = load i32, i32* @srcMode, align 4
  %381 = icmp eq i32 %380, 1
  br i1 %381, label %382, label %383

; <label>:382:                                    ; preds = %379
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:383:                                    ; preds = %379
  %384 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %385 = icmp ne %struct.zzzz* %384, null
  br i1 %385, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %383
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %404, %.lr.ph23.preheader
  %.221 = phi i8 [ %.3, %404 ], [ 1, %.lr.ph23.preheader ]
  %.3419 = phi %struct.zzzz* [ %406, %404 ], [ %384, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 6)
  %386 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %387 = load i8*, i8** %386, align 8
  %388 = call i32 @strcmp(i8* %387, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %389 = icmp eq i32 %388, 0
  br i1 %389, label %404, label %390

; <label>:390:                                    ; preds = %.lr.ph23
  %391 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %392 = load i8*, i8** %391, align 8
  %393 = getelementptr inbounds i8, i8* %392, i64 0
  %394 = load i8, i8* %393, align 1
  %395 = sext i8 %394 to i32
  %396 = icmp eq i32 %395, 45
  %397 = zext i8 %.221 to i32
  %398 = icmp ne i32 %397, 0
  %or.cond9 = and i1 %396, %398
  br i1 %or.cond9, label %404, label %399

; <label>:399:                                    ; preds = %390
  %400 = load i32, i32* @numFilesProcessed, align 4
  %401 = add nsw i32 %400, 1
  store i32 %401, i32* @numFilesProcessed, align 4
  %402 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %403 = load i8*, i8** %402, align 8
  call void @compress(i8* %403)
  br label %404

; <label>:404:                                    ; preds = %399, %390, %.lr.ph23
  %.3 = phi i8 [ %.221, %399 ], [ 0, %.lr.ph23 ], [ %.221, %390 ]
  %405 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 1
  %406 = load %struct.zzzz*, %struct.zzzz** %405, align 8
  %407 = icmp ne %struct.zzzz* %406, null
  br i1 %407, label %.lr.ph23, label %._crit_edge24.loopexit

; <label>:408:                                    ; preds = %376
  %409 = load i32, i32* @opMode, align 4
  %410 = icmp eq i32 %409, 2
  br i1 %410, label %411, label %444

; <label>:411:                                    ; preds = %408
  store i8 0, i8* @unzFailsExist, align 1
  %412 = load i32, i32* @srcMode, align 4
  %413 = icmp eq i32 %412, 1
  br i1 %413, label %414, label %415

; <label>:414:                                    ; preds = %411
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:415:                                    ; preds = %411
  %416 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %417 = icmp ne %struct.zzzz* %416, null
  br i1 %417, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %415
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %436, %.lr.ph29.preheader
  %.427 = phi i8 [ %.5, %436 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %438, %436 ], [ %416, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %418 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %419 = load i8*, i8** %418, align 8
  %420 = call i32 @strcmp(i8* %419, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %436, label %422

; <label>:422:                                    ; preds = %.lr.ph29
  %423 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %424 = load i8*, i8** %423, align 8
  %425 = getelementptr inbounds i8, i8* %424, i64 0
  %426 = load i8, i8* %425, align 1
  %427 = sext i8 %426 to i32
  %428 = icmp eq i32 %427, 45
  %429 = zext i8 %.427 to i32
  %430 = icmp ne i32 %429, 0
  %or.cond11 = and i1 %428, %430
  br i1 %or.cond11, label %436, label %431

; <label>:431:                                    ; preds = %422
  %432 = load i32, i32* @numFilesProcessed, align 4
  %433 = add nsw i32 %432, 1
  store i32 %433, i32* @numFilesProcessed, align 4
  %434 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %435 = load i8*, i8** %434, align 8
  call void @uncompress(i8* %435)
  br label %436

; <label>:436:                                    ; preds = %431, %422, %.lr.ph29
  %.5 = phi i8 [ %.427, %431 ], [ 0, %.lr.ph29 ], [ %.427, %422 ]
  %437 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %438 = load %struct.zzzz*, %struct.zzzz** %437, align 8
  %439 = icmp ne %struct.zzzz* %438, null
  br i1 %439, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %436
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %415, %414
  %440 = load i8, i8* @unzFailsExist, align 1
  %441 = icmp ne i8 %440, 0
  br i1 %441, label %442, label %._crit_edge24

; <label>:442:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %443 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %443) #11
  unreachable

; <label>:444:                                    ; preds = %408
  store i8 0, i8* @testFailsExist, align 1
  %445 = load i32, i32* @srcMode, align 4
  %446 = icmp eq i32 %445, 1
  br i1 %446, label %447, label %448

; <label>:447:                                    ; preds = %444
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:448:                                    ; preds = %444
  %449 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %450 = icmp ne %struct.zzzz* %449, null
  br i1 %450, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %448
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %469, %.lr.ph35.preheader
  %.633 = phi i8 [ %.7, %469 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %471, %469 ], [ %449, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %451 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %452 = load i8*, i8** %451, align 8
  %453 = call i32 @strcmp(i8* %452, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %469, label %455

; <label>:455:                                    ; preds = %.lr.ph35
  %456 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %457 = load i8*, i8** %456, align 8
  %458 = getelementptr inbounds i8, i8* %457, i64 0
  %459 = load i8, i8* %458, align 1
  %460 = sext i8 %459 to i32
  %461 = icmp eq i32 %460, 45
  %462 = zext i8 %.633 to i32
  %463 = icmp ne i32 %462, 0
  %or.cond13 = and i1 %461, %463
  br i1 %or.cond13, label %469, label %464

; <label>:464:                                    ; preds = %455
  %465 = load i32, i32* @numFilesProcessed, align 4
  %466 = add nsw i32 %465, 1
  store i32 %466, i32* @numFilesProcessed, align 4
  %467 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %468 = load i8*, i8** %467, align 8
  call void @testf(i8* %468)
  br label %469

; <label>:469:                                    ; preds = %464, %455, %.lr.ph35
  %.7 = phi i8 [ %.633, %464 ], [ 0, %.lr.ph35 ], [ %.633, %455 ]
  %470 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %471 = load %struct.zzzz*, %struct.zzzz** %470, align 8
  %472 = icmp ne %struct.zzzz* %471, null
  br i1 %472, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %469
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %448, %447
  %473 = load i8, i8* @testFailsExist, align 1
  %474 = zext i8 %473 to i32
  %475 = icmp ne i32 %474, 0
  br i1 %475, label %476, label %._crit_edge24

; <label>:476:                                    ; preds = %._crit_edge36
  %477 = load i8, i8* @noisy, align 1
  %478 = zext i8 %477 to i32
  %479 = icmp ne i32 %478, 0
  br i1 %479, label %480, label %._crit_edge24

; <label>:480:                                    ; preds = %476
  %481 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %482 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %483 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %481, i8* %482)
  call void @setExit(i32 2)
  %484 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %484) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %404
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %476, %._crit_edge36, %._crit_edge30, %383, %382
  %485 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %486 = icmp ne %struct.zzzz* %485, null
  br i1 %486, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %495, %.lr.ph.preheader
  %.6718 = phi %struct.zzzz* [ %488, %495 ], [ %485, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %487 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %488 = load %struct.zzzz*, %struct.zzzz** %487, align 8
  %489 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %490 = load i8*, i8** %489, align 8
  %491 = icmp ne i8* %490, null
  br i1 %491, label %492, label %495

; <label>:492:                                    ; preds = %.lr.ph
  %493 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %494 = load i8*, i8** %493, align 8
  call void @free(i8* %494) #9
  br label %495

; <label>:495:                                    ; preds = %492, %.lr.ph
  %496 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %496) #9
  %497 = icmp ne %struct.zzzz* %488, null
  br i1 %497, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %495
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %498 = load i32, i32* @exitValue, align 4
  ret i32 %498

; <label>:499:                                    ; preds = %42
  call void @unroll_loop(i32 0)
  %500 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %501 = sext i8 122 to i32
  %502 = icmp eq i32 122, 47
  br i1 false, label %503, label %504

; <label>:503:                                    ; preds = %499
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), i8** @progName, align 8
  br label %504

; <label>:504:                                    ; preds = %503, %499
  call void @__loop_iteration_test___0()
  %505 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %506 = sext i8 105 to i32
  %507 = icmp ne i32 105, 0
  br i1 true, label %508, label %._crit_edge64.loopexit

; <label>:508:                                    ; preds = %504
  call void @unroll_loop(i32 0)
  %509 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %510 = sext i8 105 to i32
  %511 = icmp eq i32 105, 47
  br i1 false, label %512, label %513

; <label>:512:                                    ; preds = %508
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), i8** @progName, align 8
  br label %513

; <label>:513:                                    ; preds = %512, %508
  call void @__loop_iteration_test___0()
  %514 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %515 = sext i8 112 to i32
  %516 = icmp ne i32 112, 0
  br i1 true, label %517, label %._crit_edge64.loopexit

; <label>:517:                                    ; preds = %513
  call void @unroll_loop(i32 0)
  %518 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %519 = sext i8 112 to i32
  %520 = icmp eq i32 112, 47
  br i1 false, label %521, label %522

; <label>:521:                                    ; preds = %517
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), i8** @progName, align 8
  br label %522

; <label>:522:                                    ; preds = %521, %517
  call void @__loop_iteration_test___0()
  %523 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %524 = sext i8 50 to i32
  %525 = icmp ne i32 50, 0
  br i1 true, label %526, label %._crit_edge64.loopexit

; <label>:526:                                    ; preds = %522
  call void @unroll_loop(i32 0)
  %527 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %528 = sext i8 50 to i32
  %529 = icmp eq i32 50, 47
  br i1 false, label %530, label %531

; <label>:530:                                    ; preds = %526
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), i8** @progName, align 8
  br label %531

; <label>:531:                                    ; preds = %530, %526
  call void @__loop_iteration_test___0()
  %532 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %533 = sext i8 0 to i32
  %534 = icmp ne i32 0, 0
  br i1 false, label %535, label %._crit_edge64.loopexit

; <label>:535:                                    ; preds = %531
  call void @unroll_loop(i32 0)
  %536 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %537 = sext i8 %536 to i32
  %538 = icmp eq i32 %537, 47
  br i1 %538, label %539, label %540

; <label>:539:                                    ; preds = %535
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), i8** @progName, align 8
  br label %540

; <label>:540:                                    ; preds = %539, %535
  call void @__loop_iteration_test___0()
  %541 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %542 = sext i8 %541 to i32
  %543 = icmp ne i32 %542, 0
  br i1 %543, label %544, label %._crit_edge64.loopexit

; <label>:544:                                    ; preds = %540
  call void @unroll_loop(i32 0)
  %545 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %546 = sext i8 %545 to i32
  %547 = icmp eq i32 %546, 47
  br i1 %547, label %548, label %549

; <label>:548:                                    ; preds = %544
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), i8** @progName, align 8
  br label %549

; <label>:549:                                    ; preds = %548, %544
  call void @__loop_iteration_test___0()
  %550 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %551 = sext i8 %550 to i32
  %552 = icmp ne i32 %551, 0
  br i1 %552, label %553, label %._crit_edge64.loopexit

; <label>:553:                                    ; preds = %549
  call void @unroll_loop(i32 0)
  %554 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %555 = sext i8 %554 to i32
  %556 = icmp eq i32 %555, 47
  br i1 %556, label %557, label %558

; <label>:557:                                    ; preds = %553
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), i8** @progName, align 8
  br label %558

; <label>:558:                                    ; preds = %557, %553
  call void @__loop_iteration_test___0()
  %559 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %560 = sext i8 %559 to i32
  %561 = icmp ne i32 %560, 0
  br i1 %561, label %562, label %._crit_edge64.loopexit

; <label>:562:                                    ; preds = %558
  call void @unroll_loop(i32 0)
  %563 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %564 = sext i8 %563 to i32
  %565 = icmp eq i32 %564, 47
  br i1 %565, label %566, label %567

; <label>:566:                                    ; preds = %562
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), i8** @progName, align 8
  br label %567

; <label>:567:                                    ; preds = %566, %562
  call void @__loop_iteration_test___0()
  %568 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %569 = sext i8 %568 to i32
  %570 = icmp ne i32 %569, 0
  br i1 %570, label %571, label %._crit_edge64.loopexit

; <label>:571:                                    ; preds = %567
  call void @unroll_loop(i32 0)
  %572 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %573 = sext i8 %572 to i32
  %574 = icmp eq i32 %573, 47
  br i1 %574, label %575, label %576

; <label>:575:                                    ; preds = %571
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), i8** @progName, align 8
  br label %576

; <label>:576:                                    ; preds = %575, %571
  call void @__loop_iteration_test___0()
  %577 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %578 = sext i8 %577 to i32
  %579 = icmp ne i32 %578, 0
  br i1 %579, label %580, label %._crit_edge64.loopexit

; <label>:580:                                    ; preds = %576
  call void @unroll_loop(i32 0)
  %581 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %582 = sext i8 %581 to i32
  %583 = icmp eq i32 %582, 47
  br i1 %583, label %584, label %585

; <label>:584:                                    ; preds = %580
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), i8** @progName, align 8
  br label %585

; <label>:585:                                    ; preds = %584, %580
  call void @__loop_iteration_test___0()
  %586 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %587 = sext i8 %586 to i32
  %588 = icmp ne i32 %587, 0
  br i1 %588, label %589, label %._crit_edge64.loopexit

; <label>:589:                                    ; preds = %585
  call void @unroll_loop(i32 0)
  %590 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %591 = sext i8 %590 to i32
  %592 = icmp eq i32 %591, 47
  br i1 %592, label %593, label %594

; <label>:593:                                    ; preds = %589
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), i8** @progName, align 8
  br label %594

; <label>:594:                                    ; preds = %593, %589
  call void @__loop_iteration_test___0()
  %595 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %596 = sext i8 %595 to i32
  %597 = icmp ne i32 %596, 0
  br i1 %597, label %598, label %._crit_edge64.loopexit

; <label>:598:                                    ; preds = %594
  call void @unroll_loop(i32 0)
  %599 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %600 = sext i8 %599 to i32
  %601 = icmp eq i32 %600, 47
  br i1 %601, label %602, label %603

; <label>:602:                                    ; preds = %598
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), i8** @progName, align 8
  br label %603

; <label>:603:                                    ; preds = %602, %598
  call void @__loop_iteration_test___0()
  %604 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %605 = sext i8 %604 to i32
  %606 = icmp ne i32 %605, 0
  br i1 %606, label %607, label %._crit_edge64.loopexit

; <label>:607:                                    ; preds = %603
  call void @unroll_loop(i32 0)
  %608 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %609 = sext i8 %608 to i32
  %610 = icmp eq i32 %609, 47
  br i1 %610, label %611, label %612

; <label>:611:                                    ; preds = %607
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), i8** @progName, align 8
  br label %612

; <label>:612:                                    ; preds = %611, %607
  call void @__loop_iteration_test___0()
  %613 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %614 = sext i8 %613 to i32
  %615 = icmp ne i32 %614, 0
  br i1 %615, label %616, label %._crit_edge64.loopexit

; <label>:616:                                    ; preds = %612
  call void @unroll_loop(i32 0)
  %617 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %618 = sext i8 %617 to i32
  %619 = icmp eq i32 %618, 47
  br i1 %619, label %620, label %621

; <label>:620:                                    ; preds = %616
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), i8** @progName, align 8
  br label %621

; <label>:621:                                    ; preds = %620, %616
  call void @__loop_iteration_test___0()
  %622 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %623 = sext i8 %622 to i32
  %624 = icmp ne i32 %623, 0
  br i1 %624, label %625, label %._crit_edge64.loopexit

; <label>:625:                                    ; preds = %621
  call void @unroll_loop(i32 0)
  %626 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %627 = sext i8 %626 to i32
  %628 = icmp eq i32 %627, 47
  br i1 %628, label %629, label %630

; <label>:629:                                    ; preds = %625
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), i8** @progName, align 8
  br label %630

; <label>:630:                                    ; preds = %629, %625
  call void @__loop_iteration_test___0()
  %631 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %632 = sext i8 %631 to i32
  %633 = icmp ne i32 %632, 0
  br i1 %633, label %634, label %._crit_edge64.loopexit

; <label>:634:                                    ; preds = %630
  call void @unroll_loop(i32 0)
  %635 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %636 = sext i8 %635 to i32
  %637 = icmp eq i32 %636, 47
  br i1 %637, label %638, label %639

; <label>:638:                                    ; preds = %634
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), i8** @progName, align 8
  br label %639

; <label>:639:                                    ; preds = %638, %634
  call void @__loop_iteration_test___0()
  %640 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %641 = sext i8 %640 to i32
  %642 = icmp ne i32 %641, 0
  br i1 %642, label %643, label %._crit_edge64.loopexit

; <label>:643:                                    ; preds = %639
  call void @unroll_loop(i32 0)
  %644 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %645 = sext i8 %644 to i32
  %646 = icmp eq i32 %645, 47
  br i1 %646, label %647, label %648

; <label>:647:                                    ; preds = %643
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), i8** @progName, align 8
  br label %648

; <label>:648:                                    ; preds = %647, %643
  call void @__loop_iteration_test___0()
  %649 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %650 = sext i8 %649 to i32
  %651 = icmp ne i32 %650, 0
  br i1 %651, label %652, label %._crit_edge64.loopexit

; <label>:652:                                    ; preds = %648
  call void @unroll_loop(i32 0)
  %653 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %654 = sext i8 %653 to i32
  %655 = icmp eq i32 %654, 47
  br i1 %655, label %656, label %657

; <label>:656:                                    ; preds = %652
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), i8** @progName, align 8
  br label %657

; <label>:657:                                    ; preds = %656, %652
  call void @__loop_iteration_test___0()
  %658 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %659 = sext i8 %658 to i32
  %660 = icmp ne i32 %659, 0
  br i1 %660, label %661, label %._crit_edge64.loopexit

; <label>:661:                                    ; preds = %657
  call void @unroll_loop(i32 0)
  %662 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %663 = sext i8 %662 to i32
  %664 = icmp eq i32 %663, 47
  br i1 %664, label %665, label %666

; <label>:665:                                    ; preds = %661
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), i8** @progName, align 8
  br label %666

; <label>:666:                                    ; preds = %665, %661
  call void @__loop_iteration_test___0()
  %667 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), align 1
  %668 = sext i8 %667 to i32
  br label %._crit_edge64.loopexit

.lr.ph57.1:                                       ; preds = %.lr.ph57
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %669 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4, i64 1
  %670 = load i8*, i8** %scevgep7.1, align 8
  %671 = call %struct.zzzz* @snocString_clone.17(%struct.zzzz* %669, i8* %670)
  store %struct.zzzz* %671, %struct.zzzz** %22, align 8
  br label %._crit_edge58.loopexit

.lr.ph53.1:                                       ; preds = %82
  call void @unroll_loop(i32 2)
  %672 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %673 = load i8*, i8** %672, align 8
  %674 = getelementptr [10 x i8], [10 x i8]* @10, i64 0, i64 0
  %675 = getelementptr [3 x i8], [3 x i8]* @11, i64 0, i64 0
  %676 = call i32 @strcmp(i8* %674, i8* %675) #10
  %677 = icmp eq i32 1, 0
  br i1 false, label %702, label %678

; <label>:678:                                    ; preds = %.lr.ph53.1
  %679 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %680 = load i8*, i8** %679, align 8
  %681 = load i8, i8* %680, align 1
  %682 = sext i8 104 to i32
  %683 = icmp eq i32 104, 45
  %684 = zext i8 1 to i32
  %685 = icmp ne i32 1, 0
  %or.cond.1 = and i1 false, true
  br i1 false, label %702, label %686

; <label>:686:                                    ; preds = %678
  %687 = load i32, i32* @numFileNames, align 4
  %688 = add nsw i32 0, 1
  store i32 1, i32* @numFileNames, align 4
  %689 = load i32, i32* @longestFileName, align 4
  %690 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %691 = load i8*, i8** %690, align 8
  %692 = getelementptr [10 x i8], [10 x i8]* @12, i64 0, i64 0
  %693 = call i64 @strlen(i8* %692) #10
  %694 = trunc i64 9 to i32
  %695 = icmp slt i32 7, 9
  br i1 true, label %696, label %702

; <label>:696:                                    ; preds = %686
  %697 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %698 = load i8*, i8** %697, align 8
  %699 = getelementptr [10 x i8], [10 x i8]* @13, i64 0, i64 0
  %700 = call i64 @strlen(i8* %699) #10
  %701 = trunc i64 9 to i32
  store i32 9, i32* @longestFileName, align 4
  br label %702

; <label>:702:                                    ; preds = %696, %686, %678, %.lr.ph53.1
  %.1.1 = phi i8 [ 0, %.lr.ph53.1 ], [ 1, %678 ], [ 1, %696 ], [ 1, %686 ]
  call void @__loop_iteration_test___2()
  %703 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 1
  %704 = load %struct.zzzz*, %struct.zzzz** %703, align 8
  %705 = icmp ne i64 0, 0
  %706 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph53.2, label %._crit_edge54.loopexit

.lr.ph53.2:                                       ; preds = %702
  call void @unroll_loop(i32 2)
  %707 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %708 = load i8*, i8** %707, align 8
  %709 = call i32 @strcmp(i8* %708, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %733, label %711

; <label>:711:                                    ; preds = %.lr.ph53.2
  %712 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %713 = load i8*, i8** %712, align 8
  %714 = load i8, i8* %713, align 1
  %715 = sext i8 %714 to i32
  %716 = icmp eq i32 %715, 45
  %717 = zext i8 1 to i32
  %718 = icmp ne i32 %717, 0
  %or.cond.2 = and i1 %716, %718
  br i1 %or.cond.2, label %733, label %719

; <label>:719:                                    ; preds = %711
  %720 = load i32, i32* @numFileNames, align 4
  %721 = add nsw i32 %720, 1
  store i32 %721, i32* @numFileNames, align 4
  %722 = load i32, i32* @longestFileName, align 4
  %723 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %724 = load i8*, i8** %723, align 8
  %725 = call i64 @strlen(i8* %724) #10
  %726 = trunc i64 %725 to i32
  %727 = icmp slt i32 %722, %726
  br i1 %727, label %728, label %733

; <label>:728:                                    ; preds = %719
  %729 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %730 = load i8*, i8** %729, align 8
  %731 = call i64 @strlen(i8* %730) #10
  %732 = trunc i64 %731 to i32
  store i32 %732, i32* @longestFileName, align 4
  br label %733

; <label>:733:                                    ; preds = %728, %719, %711, %.lr.ph53.2
  %.1.2 = phi i8 [ 0, %.lr.ph53.2 ], [ 1, %711 ], [ 1, %728 ], [ 1, %719 ]
  call void @__loop_iteration_test___2()
  %734 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %735 = load %struct.zzzz*, %struct.zzzz** %734, align 8
  %736 = icmp ne %struct.zzzz* %735, null
  br i1 %736, label %.lr.ph53.3, label %._crit_edge54.loopexit

.lr.ph53.3:                                       ; preds = %733
  call void @unroll_loop(i32 2)
  %737 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %735, i32 0, i32 0
  %738 = load i8*, i8** %737, align 8
  %739 = call i32 @strcmp(i8* %738, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %763, label %741

; <label>:741:                                    ; preds = %.lr.ph53.3
  %742 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %735, i32 0, i32 0
  %743 = load i8*, i8** %742, align 8
  %744 = load i8, i8* %743, align 1
  %745 = sext i8 %744 to i32
  %746 = icmp eq i32 %745, 45
  %747 = zext i8 %.1.2 to i32
  %748 = icmp ne i32 %747, 0
  %or.cond.3 = and i1 %746, %748
  br i1 %or.cond.3, label %763, label %749

; <label>:749:                                    ; preds = %741
  %750 = load i32, i32* @numFileNames, align 4
  %751 = add nsw i32 %750, 1
  store i32 %751, i32* @numFileNames, align 4
  %752 = load i32, i32* @longestFileName, align 4
  %753 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %735, i32 0, i32 0
  %754 = load i8*, i8** %753, align 8
  %755 = call i64 @strlen(i8* %754) #10
  %756 = trunc i64 %755 to i32
  %757 = icmp slt i32 %752, %756
  br i1 %757, label %758, label %763

; <label>:758:                                    ; preds = %749
  %759 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %735, i32 0, i32 0
  %760 = load i8*, i8** %759, align 8
  %761 = call i64 @strlen(i8* %760) #10
  %762 = trunc i64 %761 to i32
  store i32 %762, i32* @longestFileName, align 4
  br label %763

; <label>:763:                                    ; preds = %758, %749, %741, %.lr.ph53.3
  %.1.3 = phi i8 [ 0, %.lr.ph53.3 ], [ %.1.2, %741 ], [ %.1.2, %758 ], [ %.1.2, %749 ]
  call void @__loop_iteration_test___2()
  %764 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %735, i32 0, i32 1
  %765 = load %struct.zzzz*, %struct.zzzz** %764, align 8
  %766 = icmp ne %struct.zzzz* %765, null
  br i1 %766, label %.lr.ph53.4, label %._crit_edge54.loopexit

.lr.ph53.4:                                       ; preds = %763
  call void @unroll_loop(i32 2)
  %767 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %765, i32 0, i32 0
  %768 = load i8*, i8** %767, align 8
  %769 = call i32 @strcmp(i8* %768, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %770 = icmp eq i32 %769, 0
  br i1 %770, label %793, label %771

; <label>:771:                                    ; preds = %.lr.ph53.4
  %772 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %765, i32 0, i32 0
  %773 = load i8*, i8** %772, align 8
  %774 = load i8, i8* %773, align 1
  %775 = sext i8 %774 to i32
  %776 = icmp eq i32 %775, 45
  %777 = zext i8 %.1.3 to i32
  %778 = icmp ne i32 %777, 0
  %or.cond.4 = and i1 %776, %778
  br i1 %or.cond.4, label %793, label %779

; <label>:779:                                    ; preds = %771
  %780 = load i32, i32* @numFileNames, align 4
  %781 = add nsw i32 %780, 1
  store i32 %781, i32* @numFileNames, align 4
  %782 = load i32, i32* @longestFileName, align 4
  %783 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %765, i32 0, i32 0
  %784 = load i8*, i8** %783, align 8
  %785 = call i64 @strlen(i8* %784) #10
  %786 = trunc i64 %785 to i32
  %787 = icmp slt i32 %782, %786
  br i1 %787, label %788, label %793

; <label>:788:                                    ; preds = %779
  %789 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %765, i32 0, i32 0
  %790 = load i8*, i8** %789, align 8
  %791 = call i64 @strlen(i8* %790) #10
  %792 = trunc i64 %791 to i32
  store i32 %792, i32* @longestFileName, align 4
  br label %793

; <label>:793:                                    ; preds = %788, %779, %771, %.lr.ph53.4
  %.1.4 = phi i8 [ 0, %.lr.ph53.4 ], [ %.1.3, %771 ], [ %.1.3, %788 ], [ %.1.3, %779 ]
  call void @__loop_iteration_test___2()
  %794 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %765, i32 0, i32 1
  %795 = load %struct.zzzz*, %struct.zzzz** %794, align 8
  %796 = icmp ne %struct.zzzz* %795, null
  br i1 %796, label %.lr.ph53.5, label %._crit_edge54.loopexit

.lr.ph53.5:                                       ; preds = %793
  call void @unroll_loop(i32 2)
  %797 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %795, i32 0, i32 0
  %798 = load i8*, i8** %797, align 8
  %799 = call i32 @strcmp(i8* %798, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %800 = icmp eq i32 %799, 0
  br i1 %800, label %823, label %801

; <label>:801:                                    ; preds = %.lr.ph53.5
  %802 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %795, i32 0, i32 0
  %803 = load i8*, i8** %802, align 8
  %804 = load i8, i8* %803, align 1
  %805 = sext i8 %804 to i32
  %806 = icmp eq i32 %805, 45
  %807 = zext i8 %.1.4 to i32
  %808 = icmp ne i32 %807, 0
  %or.cond.5 = and i1 %806, %808
  br i1 %or.cond.5, label %823, label %809

; <label>:809:                                    ; preds = %801
  %810 = load i32, i32* @numFileNames, align 4
  %811 = add nsw i32 %810, 1
  store i32 %811, i32* @numFileNames, align 4
  %812 = load i32, i32* @longestFileName, align 4
  %813 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %795, i32 0, i32 0
  %814 = load i8*, i8** %813, align 8
  %815 = call i64 @strlen(i8* %814) #10
  %816 = trunc i64 %815 to i32
  %817 = icmp slt i32 %812, %816
  br i1 %817, label %818, label %823

; <label>:818:                                    ; preds = %809
  %819 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %795, i32 0, i32 0
  %820 = load i8*, i8** %819, align 8
  %821 = call i64 @strlen(i8* %820) #10
  %822 = trunc i64 %821 to i32
  store i32 %822, i32* @longestFileName, align 4
  br label %823

; <label>:823:                                    ; preds = %818, %809, %801, %.lr.ph53.5
  %.1.5 = phi i8 [ 0, %.lr.ph53.5 ], [ %.1.4, %801 ], [ %.1.4, %818 ], [ %.1.4, %809 ]
  call void @__loop_iteration_test___2()
  %824 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %795, i32 0, i32 1
  %825 = load %struct.zzzz*, %struct.zzzz** %824, align 8
  %826 = icmp ne %struct.zzzz* %825, null
  br i1 %826, label %.lr.ph53.6, label %._crit_edge54.loopexit

.lr.ph53.6:                                       ; preds = %823
  call void @unroll_loop(i32 2)
  %827 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %825, i32 0, i32 0
  %828 = load i8*, i8** %827, align 8
  %829 = call i32 @strcmp(i8* %828, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %853, label %831

; <label>:831:                                    ; preds = %.lr.ph53.6
  %832 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %825, i32 0, i32 0
  %833 = load i8*, i8** %832, align 8
  %834 = load i8, i8* %833, align 1
  %835 = sext i8 %834 to i32
  %836 = icmp eq i32 %835, 45
  %837 = zext i8 %.1.5 to i32
  %838 = icmp ne i32 %837, 0
  %or.cond.6 = and i1 %836, %838
  br i1 %or.cond.6, label %853, label %839

; <label>:839:                                    ; preds = %831
  %840 = load i32, i32* @numFileNames, align 4
  %841 = add nsw i32 %840, 1
  store i32 %841, i32* @numFileNames, align 4
  %842 = load i32, i32* @longestFileName, align 4
  %843 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %825, i32 0, i32 0
  %844 = load i8*, i8** %843, align 8
  %845 = call i64 @strlen(i8* %844) #10
  %846 = trunc i64 %845 to i32
  %847 = icmp slt i32 %842, %846
  br i1 %847, label %848, label %853

; <label>:848:                                    ; preds = %839
  %849 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %825, i32 0, i32 0
  %850 = load i8*, i8** %849, align 8
  %851 = call i64 @strlen(i8* %850) #10
  %852 = trunc i64 %851 to i32
  store i32 %852, i32* @longestFileName, align 4
  br label %853

; <label>:853:                                    ; preds = %848, %839, %831, %.lr.ph53.6
  %.1.6 = phi i8 [ 0, %.lr.ph53.6 ], [ %.1.5, %831 ], [ %.1.5, %848 ], [ %.1.5, %839 ]
  call void @__loop_iteration_test___2()
  %854 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %825, i32 0, i32 1
  %855 = load %struct.zzzz*, %struct.zzzz** %854, align 8
  %856 = icmp ne %struct.zzzz* %855, null
  br i1 %856, label %.lr.ph53.7, label %._crit_edge54.loopexit

.lr.ph53.7:                                       ; preds = %853
  call void @unroll_loop(i32 2)
  %857 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %855, i32 0, i32 0
  %858 = load i8*, i8** %857, align 8
  %859 = call i32 @strcmp(i8* %858, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %860 = icmp eq i32 %859, 0
  br i1 %860, label %883, label %861

; <label>:861:                                    ; preds = %.lr.ph53.7
  %862 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %855, i32 0, i32 0
  %863 = load i8*, i8** %862, align 8
  %864 = load i8, i8* %863, align 1
  %865 = sext i8 %864 to i32
  %866 = icmp eq i32 %865, 45
  %867 = zext i8 %.1.6 to i32
  %868 = icmp ne i32 %867, 0
  %or.cond.7 = and i1 %866, %868
  br i1 %or.cond.7, label %883, label %869

; <label>:869:                                    ; preds = %861
  %870 = load i32, i32* @numFileNames, align 4
  %871 = add nsw i32 %870, 1
  store i32 %871, i32* @numFileNames, align 4
  %872 = load i32, i32* @longestFileName, align 4
  %873 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %855, i32 0, i32 0
  %874 = load i8*, i8** %873, align 8
  %875 = call i64 @strlen(i8* %874) #10
  %876 = trunc i64 %875 to i32
  %877 = icmp slt i32 %872, %876
  br i1 %877, label %878, label %883

; <label>:878:                                    ; preds = %869
  %879 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %855, i32 0, i32 0
  %880 = load i8*, i8** %879, align 8
  %881 = call i64 @strlen(i8* %880) #10
  %882 = trunc i64 %881 to i32
  store i32 %882, i32* @longestFileName, align 4
  br label %883

; <label>:883:                                    ; preds = %878, %869, %861, %.lr.ph53.7
  %.1.7 = phi i8 [ 0, %.lr.ph53.7 ], [ %.1.6, %861 ], [ %.1.6, %878 ], [ %.1.6, %869 ]
  call void @__loop_iteration_test___2()
  %884 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %855, i32 0, i32 1
  %885 = load %struct.zzzz*, %struct.zzzz** %884, align 8
  %886 = icmp ne %struct.zzzz* %885, null
  br i1 %886, label %.lr.ph53.8, label %._crit_edge54.loopexit

.lr.ph53.8:                                       ; preds = %883
  call void @unroll_loop(i32 2)
  %887 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %885, i32 0, i32 0
  %888 = load i8*, i8** %887, align 8
  %889 = call i32 @strcmp(i8* %888, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %913, label %891

; <label>:891:                                    ; preds = %.lr.ph53.8
  %892 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %885, i32 0, i32 0
  %893 = load i8*, i8** %892, align 8
  %894 = load i8, i8* %893, align 1
  %895 = sext i8 %894 to i32
  %896 = icmp eq i32 %895, 45
  %897 = zext i8 %.1.7 to i32
  %898 = icmp ne i32 %897, 0
  %or.cond.8 = and i1 %896, %898
  br i1 %or.cond.8, label %913, label %899

; <label>:899:                                    ; preds = %891
  %900 = load i32, i32* @numFileNames, align 4
  %901 = add nsw i32 %900, 1
  store i32 %901, i32* @numFileNames, align 4
  %902 = load i32, i32* @longestFileName, align 4
  %903 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %885, i32 0, i32 0
  %904 = load i8*, i8** %903, align 8
  %905 = call i64 @strlen(i8* %904) #10
  %906 = trunc i64 %905 to i32
  %907 = icmp slt i32 %902, %906
  br i1 %907, label %908, label %913

; <label>:908:                                    ; preds = %899
  %909 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %885, i32 0, i32 0
  %910 = load i8*, i8** %909, align 8
  %911 = call i64 @strlen(i8* %910) #10
  %912 = trunc i64 %911 to i32
  store i32 %912, i32* @longestFileName, align 4
  br label %913

; <label>:913:                                    ; preds = %908, %899, %891, %.lr.ph53.8
  %.1.8 = phi i8 [ 0, %.lr.ph53.8 ], [ %.1.7, %891 ], [ %.1.7, %908 ], [ %.1.7, %899 ]
  call void @__loop_iteration_test___2()
  %914 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %885, i32 0, i32 1
  %915 = load %struct.zzzz*, %struct.zzzz** %914, align 8
  %916 = icmp ne %struct.zzzz* %915, null
  br i1 %916, label %.lr.ph53.9, label %._crit_edge54.loopexit

.lr.ph53.9:                                       ; preds = %913
  call void @unroll_loop(i32 2)
  %917 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %915, i32 0, i32 0
  %918 = load i8*, i8** %917, align 8
  %919 = call i32 @strcmp(i8* %918, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %943, label %921

; <label>:921:                                    ; preds = %.lr.ph53.9
  %922 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %915, i32 0, i32 0
  %923 = load i8*, i8** %922, align 8
  %924 = load i8, i8* %923, align 1
  %925 = sext i8 %924 to i32
  %926 = icmp eq i32 %925, 45
  %927 = zext i8 %.1.8 to i32
  %928 = icmp ne i32 %927, 0
  %or.cond.9 = and i1 %926, %928
  br i1 %or.cond.9, label %943, label %929

; <label>:929:                                    ; preds = %921
  %930 = load i32, i32* @numFileNames, align 4
  %931 = add nsw i32 %930, 1
  store i32 %931, i32* @numFileNames, align 4
  %932 = load i32, i32* @longestFileName, align 4
  %933 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %915, i32 0, i32 0
  %934 = load i8*, i8** %933, align 8
  %935 = call i64 @strlen(i8* %934) #10
  %936 = trunc i64 %935 to i32
  %937 = icmp slt i32 %932, %936
  br i1 %937, label %938, label %943

; <label>:938:                                    ; preds = %929
  %939 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %915, i32 0, i32 0
  %940 = load i8*, i8** %939, align 8
  %941 = call i64 @strlen(i8* %940) #10
  %942 = trunc i64 %941 to i32
  store i32 %942, i32* @longestFileName, align 4
  br label %943

; <label>:943:                                    ; preds = %938, %929, %921, %.lr.ph53.9
  %.1.9 = phi i8 [ 0, %.lr.ph53.9 ], [ %.1.8, %921 ], [ %.1.8, %938 ], [ %.1.8, %929 ]
  call void @__loop_iteration_test___2()
  %944 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %915, i32 0, i32 1
  %945 = load %struct.zzzz*, %struct.zzzz** %944, align 8
  %946 = icmp ne %struct.zzzz* %945, null
  br i1 %946, label %.lr.ph53.10, label %._crit_edge54.loopexit

.lr.ph53.10:                                      ; preds = %943
  call void @unroll_loop(i32 2)
  %947 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %945, i32 0, i32 0
  %948 = load i8*, i8** %947, align 8
  %949 = call i32 @strcmp(i8* %948, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %950 = icmp eq i32 %949, 0
  br i1 %950, label %973, label %951

; <label>:951:                                    ; preds = %.lr.ph53.10
  %952 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %945, i32 0, i32 0
  %953 = load i8*, i8** %952, align 8
  %954 = load i8, i8* %953, align 1
  %955 = sext i8 %954 to i32
  %956 = icmp eq i32 %955, 45
  %957 = zext i8 %.1.9 to i32
  %958 = icmp ne i32 %957, 0
  %or.cond.10 = and i1 %956, %958
  br i1 %or.cond.10, label %973, label %959

; <label>:959:                                    ; preds = %951
  %960 = load i32, i32* @numFileNames, align 4
  %961 = add nsw i32 %960, 1
  store i32 %961, i32* @numFileNames, align 4
  %962 = load i32, i32* @longestFileName, align 4
  %963 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %945, i32 0, i32 0
  %964 = load i8*, i8** %963, align 8
  %965 = call i64 @strlen(i8* %964) #10
  %966 = trunc i64 %965 to i32
  %967 = icmp slt i32 %962, %966
  br i1 %967, label %968, label %973

; <label>:968:                                    ; preds = %959
  %969 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %945, i32 0, i32 0
  %970 = load i8*, i8** %969, align 8
  %971 = call i64 @strlen(i8* %970) #10
  %972 = trunc i64 %971 to i32
  store i32 %972, i32* @longestFileName, align 4
  br label %973

; <label>:973:                                    ; preds = %968, %959, %951, %.lr.ph53.10
  %.1.10 = phi i8 [ 0, %.lr.ph53.10 ], [ %.1.9, %951 ], [ %.1.9, %968 ], [ %.1.9, %959 ]
  call void @__loop_iteration_test___2()
  %974 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %945, i32 0, i32 1
  %975 = load %struct.zzzz*, %struct.zzzz** %974, align 8
  %976 = icmp ne %struct.zzzz* %975, null
  br i1 %976, label %.lr.ph53.11, label %._crit_edge54.loopexit

.lr.ph53.11:                                      ; preds = %973
  call void @unroll_loop(i32 2)
  %977 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %975, i32 0, i32 0
  %978 = load i8*, i8** %977, align 8
  %979 = call i32 @strcmp(i8* %978, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %980 = icmp eq i32 %979, 0
  br i1 %980, label %1003, label %981

; <label>:981:                                    ; preds = %.lr.ph53.11
  %982 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %975, i32 0, i32 0
  %983 = load i8*, i8** %982, align 8
  %984 = load i8, i8* %983, align 1
  %985 = sext i8 %984 to i32
  %986 = icmp eq i32 %985, 45
  %987 = zext i8 %.1.10 to i32
  %988 = icmp ne i32 %987, 0
  %or.cond.11 = and i1 %986, %988
  br i1 %or.cond.11, label %1003, label %989

; <label>:989:                                    ; preds = %981
  %990 = load i32, i32* @numFileNames, align 4
  %991 = add nsw i32 %990, 1
  store i32 %991, i32* @numFileNames, align 4
  %992 = load i32, i32* @longestFileName, align 4
  %993 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %975, i32 0, i32 0
  %994 = load i8*, i8** %993, align 8
  %995 = call i64 @strlen(i8* %994) #10
  %996 = trunc i64 %995 to i32
  %997 = icmp slt i32 %992, %996
  br i1 %997, label %998, label %1003

; <label>:998:                                    ; preds = %989
  %999 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %975, i32 0, i32 0
  %1000 = load i8*, i8** %999, align 8
  %1001 = call i64 @strlen(i8* %1000) #10
  %1002 = trunc i64 %1001 to i32
  store i32 %1002, i32* @longestFileName, align 4
  br label %1003

; <label>:1003:                                   ; preds = %998, %989, %981, %.lr.ph53.11
  %.1.11 = phi i8 [ 0, %.lr.ph53.11 ], [ %.1.10, %981 ], [ %.1.10, %998 ], [ %.1.10, %989 ]
  call void @__loop_iteration_test___2()
  %1004 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %975, i32 0, i32 1
  %1005 = load %struct.zzzz*, %struct.zzzz** %1004, align 8
  %1006 = icmp ne %struct.zzzz* %1005, null
  br i1 %1006, label %.lr.ph53.12, label %._crit_edge54.loopexit

.lr.ph53.12:                                      ; preds = %1003
  call void @unroll_loop(i32 2)
  %1007 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1005, i32 0, i32 0
  %1008 = load i8*, i8** %1007, align 8
  %1009 = call i32 @strcmp(i8* %1008, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1010 = icmp eq i32 %1009, 0
  br i1 %1010, label %1033, label %1011

; <label>:1011:                                   ; preds = %.lr.ph53.12
  %1012 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1005, i32 0, i32 0
  %1013 = load i8*, i8** %1012, align 8
  %1014 = load i8, i8* %1013, align 1
  %1015 = sext i8 %1014 to i32
  %1016 = icmp eq i32 %1015, 45
  %1017 = zext i8 %.1.11 to i32
  %1018 = icmp ne i32 %1017, 0
  %or.cond.12 = and i1 %1016, %1018
  br i1 %or.cond.12, label %1033, label %1019

; <label>:1019:                                   ; preds = %1011
  %1020 = load i32, i32* @numFileNames, align 4
  %1021 = add nsw i32 %1020, 1
  store i32 %1021, i32* @numFileNames, align 4
  %1022 = load i32, i32* @longestFileName, align 4
  %1023 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1005, i32 0, i32 0
  %1024 = load i8*, i8** %1023, align 8
  %1025 = call i64 @strlen(i8* %1024) #10
  %1026 = trunc i64 %1025 to i32
  %1027 = icmp slt i32 %1022, %1026
  br i1 %1027, label %1028, label %1033

; <label>:1028:                                   ; preds = %1019
  %1029 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1005, i32 0, i32 0
  %1030 = load i8*, i8** %1029, align 8
  %1031 = call i64 @strlen(i8* %1030) #10
  %1032 = trunc i64 %1031 to i32
  store i32 %1032, i32* @longestFileName, align 4
  br label %1033

; <label>:1033:                                   ; preds = %1028, %1019, %1011, %.lr.ph53.12
  %.1.12 = phi i8 [ 0, %.lr.ph53.12 ], [ %.1.11, %1011 ], [ %.1.11, %1028 ], [ %.1.11, %1019 ]
  call void @__loop_iteration_test___2()
  %1034 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1005, i32 0, i32 1
  %1035 = load %struct.zzzz*, %struct.zzzz** %1034, align 8
  %1036 = icmp ne %struct.zzzz* %1035, null
  br i1 %1036, label %.lr.ph53.13, label %._crit_edge54.loopexit

.lr.ph53.13:                                      ; preds = %1033
  call void @unroll_loop(i32 2)
  %1037 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1035, i32 0, i32 0
  %1038 = load i8*, i8** %1037, align 8
  %1039 = call i32 @strcmp(i8* %1038, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1063, label %1041

; <label>:1041:                                   ; preds = %.lr.ph53.13
  %1042 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1035, i32 0, i32 0
  %1043 = load i8*, i8** %1042, align 8
  %1044 = load i8, i8* %1043, align 1
  %1045 = sext i8 %1044 to i32
  %1046 = icmp eq i32 %1045, 45
  %1047 = zext i8 %.1.12 to i32
  %1048 = icmp ne i32 %1047, 0
  %or.cond.13 = and i1 %1046, %1048
  br i1 %or.cond.13, label %1063, label %1049

; <label>:1049:                                   ; preds = %1041
  %1050 = load i32, i32* @numFileNames, align 4
  %1051 = add nsw i32 %1050, 1
  store i32 %1051, i32* @numFileNames, align 4
  %1052 = load i32, i32* @longestFileName, align 4
  %1053 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1035, i32 0, i32 0
  %1054 = load i8*, i8** %1053, align 8
  %1055 = call i64 @strlen(i8* %1054) #10
  %1056 = trunc i64 %1055 to i32
  %1057 = icmp slt i32 %1052, %1056
  br i1 %1057, label %1058, label %1063

; <label>:1058:                                   ; preds = %1049
  %1059 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1035, i32 0, i32 0
  %1060 = load i8*, i8** %1059, align 8
  %1061 = call i64 @strlen(i8* %1060) #10
  %1062 = trunc i64 %1061 to i32
  store i32 %1062, i32* @longestFileName, align 4
  br label %1063

; <label>:1063:                                   ; preds = %1058, %1049, %1041, %.lr.ph53.13
  %.1.13 = phi i8 [ 0, %.lr.ph53.13 ], [ %.1.12, %1041 ], [ %.1.12, %1058 ], [ %.1.12, %1049 ]
  call void @__loop_iteration_test___2()
  %1064 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1035, i32 0, i32 1
  %1065 = load %struct.zzzz*, %struct.zzzz** %1064, align 8
  %1066 = icmp ne %struct.zzzz* %1065, null
  br i1 %1066, label %.lr.ph53.14, label %._crit_edge54.loopexit

.lr.ph53.14:                                      ; preds = %1063
  call void @unroll_loop(i32 2)
  %1067 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1065, i32 0, i32 0
  %1068 = load i8*, i8** %1067, align 8
  %1069 = call i32 @strcmp(i8* %1068, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1093, label %1071

; <label>:1071:                                   ; preds = %.lr.ph53.14
  %1072 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1065, i32 0, i32 0
  %1073 = load i8*, i8** %1072, align 8
  %1074 = load i8, i8* %1073, align 1
  %1075 = sext i8 %1074 to i32
  %1076 = icmp eq i32 %1075, 45
  %1077 = zext i8 %.1.13 to i32
  %1078 = icmp ne i32 %1077, 0
  %or.cond.14 = and i1 %1076, %1078
  br i1 %or.cond.14, label %1093, label %1079

; <label>:1079:                                   ; preds = %1071
  %1080 = load i32, i32* @numFileNames, align 4
  %1081 = add nsw i32 %1080, 1
  store i32 %1081, i32* @numFileNames, align 4
  %1082 = load i32, i32* @longestFileName, align 4
  %1083 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1065, i32 0, i32 0
  %1084 = load i8*, i8** %1083, align 8
  %1085 = call i64 @strlen(i8* %1084) #10
  %1086 = trunc i64 %1085 to i32
  %1087 = icmp slt i32 %1082, %1086
  br i1 %1087, label %1088, label %1093

; <label>:1088:                                   ; preds = %1079
  %1089 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1065, i32 0, i32 0
  %1090 = load i8*, i8** %1089, align 8
  %1091 = call i64 @strlen(i8* %1090) #10
  %1092 = trunc i64 %1091 to i32
  store i32 %1092, i32* @longestFileName, align 4
  br label %1093

; <label>:1093:                                   ; preds = %1088, %1079, %1071, %.lr.ph53.14
  %.1.14 = phi i8 [ 0, %.lr.ph53.14 ], [ %.1.13, %1071 ], [ %.1.13, %1088 ], [ %.1.13, %1079 ]
  call void @__loop_iteration_test___2()
  %1094 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1065, i32 0, i32 1
  %1095 = load %struct.zzzz*, %struct.zzzz** %1094, align 8
  %1096 = icmp ne %struct.zzzz* %1095, null
  br i1 %1096, label %.lr.ph53.15, label %._crit_edge54.loopexit

.lr.ph53.15:                                      ; preds = %1093
  call void @unroll_loop(i32 2)
  %1097 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1095, i32 0, i32 0
  %1098 = load i8*, i8** %1097, align 8
  %1099 = call i32 @strcmp(i8* %1098, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1100 = icmp eq i32 %1099, 0
  br i1 %1100, label %1123, label %1101

; <label>:1101:                                   ; preds = %.lr.ph53.15
  %1102 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1095, i32 0, i32 0
  %1103 = load i8*, i8** %1102, align 8
  %1104 = load i8, i8* %1103, align 1
  %1105 = sext i8 %1104 to i32
  %1106 = icmp eq i32 %1105, 45
  %1107 = zext i8 %.1.14 to i32
  %1108 = icmp ne i32 %1107, 0
  %or.cond.15 = and i1 %1106, %1108
  br i1 %or.cond.15, label %1123, label %1109

; <label>:1109:                                   ; preds = %1101
  %1110 = load i32, i32* @numFileNames, align 4
  %1111 = add nsw i32 %1110, 1
  store i32 %1111, i32* @numFileNames, align 4
  %1112 = load i32, i32* @longestFileName, align 4
  %1113 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1095, i32 0, i32 0
  %1114 = load i8*, i8** %1113, align 8
  %1115 = call i64 @strlen(i8* %1114) #10
  %1116 = trunc i64 %1115 to i32
  %1117 = icmp slt i32 %1112, %1116
  br i1 %1117, label %1118, label %1123

; <label>:1118:                                   ; preds = %1109
  %1119 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1095, i32 0, i32 0
  %1120 = load i8*, i8** %1119, align 8
  %1121 = call i64 @strlen(i8* %1120) #10
  %1122 = trunc i64 %1121 to i32
  store i32 %1122, i32* @longestFileName, align 4
  br label %1123

; <label>:1123:                                   ; preds = %1118, %1109, %1101, %.lr.ph53.15
  %.1.15 = phi i8 [ 0, %.lr.ph53.15 ], [ %.1.14, %1101 ], [ %.1.14, %1118 ], [ %.1.14, %1109 ]
  call void @__loop_iteration_test___2()
  %1124 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1095, i32 0, i32 1
  %1125 = load %struct.zzzz*, %struct.zzzz** %1124, align 8
  %1126 = icmp ne %struct.zzzz* %1125, null
  br i1 %1126, label %.lr.ph53.16, label %._crit_edge54.loopexit

.lr.ph53.16:                                      ; preds = %1123
  call void @unroll_loop(i32 2)
  %1127 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1125, i32 0, i32 0
  %1128 = load i8*, i8** %1127, align 8
  %1129 = call i32 @strcmp(i8* %1128, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1130 = icmp eq i32 %1129, 0
  br i1 %1130, label %1153, label %1131

; <label>:1131:                                   ; preds = %.lr.ph53.16
  %1132 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1125, i32 0, i32 0
  %1133 = load i8*, i8** %1132, align 8
  %1134 = load i8, i8* %1133, align 1
  %1135 = sext i8 %1134 to i32
  %1136 = icmp eq i32 %1135, 45
  %1137 = zext i8 %.1.15 to i32
  %1138 = icmp ne i32 %1137, 0
  %or.cond.16 = and i1 %1136, %1138
  br i1 %or.cond.16, label %1153, label %1139

; <label>:1139:                                   ; preds = %1131
  %1140 = load i32, i32* @numFileNames, align 4
  %1141 = add nsw i32 %1140, 1
  store i32 %1141, i32* @numFileNames, align 4
  %1142 = load i32, i32* @longestFileName, align 4
  %1143 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1125, i32 0, i32 0
  %1144 = load i8*, i8** %1143, align 8
  %1145 = call i64 @strlen(i8* %1144) #10
  %1146 = trunc i64 %1145 to i32
  %1147 = icmp slt i32 %1142, %1146
  br i1 %1147, label %1148, label %1153

; <label>:1148:                                   ; preds = %1139
  %1149 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1125, i32 0, i32 0
  %1150 = load i8*, i8** %1149, align 8
  %1151 = call i64 @strlen(i8* %1150) #10
  %1152 = trunc i64 %1151 to i32
  store i32 %1152, i32* @longestFileName, align 4
  br label %1153

; <label>:1153:                                   ; preds = %1148, %1139, %1131, %.lr.ph53.16
  %.1.16 = phi i8 [ 0, %.lr.ph53.16 ], [ %.1.15, %1131 ], [ %.1.15, %1148 ], [ %.1.15, %1139 ]
  call void @__loop_iteration_test___2()
  %1154 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1125, i32 0, i32 1
  %1155 = load %struct.zzzz*, %struct.zzzz** %1154, align 8
  %1156 = icmp ne %struct.zzzz* %1155, null
  br i1 %1156, label %.lr.ph53.17, label %._crit_edge54.loopexit

.lr.ph53.17:                                      ; preds = %1153
  call void @unroll_loop(i32 2)
  %1157 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1155, i32 0, i32 0
  %1158 = load i8*, i8** %1157, align 8
  %1159 = call i32 @strcmp(i8* %1158, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1160 = icmp eq i32 %1159, 0
  br i1 %1160, label %1183, label %1161

; <label>:1161:                                   ; preds = %.lr.ph53.17
  %1162 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1155, i32 0, i32 0
  %1163 = load i8*, i8** %1162, align 8
  %1164 = load i8, i8* %1163, align 1
  %1165 = sext i8 %1164 to i32
  %1166 = icmp eq i32 %1165, 45
  %1167 = zext i8 %.1.16 to i32
  %1168 = icmp ne i32 %1167, 0
  %or.cond.17 = and i1 %1166, %1168
  br i1 %or.cond.17, label %1183, label %1169

; <label>:1169:                                   ; preds = %1161
  %1170 = load i32, i32* @numFileNames, align 4
  %1171 = add nsw i32 %1170, 1
  store i32 %1171, i32* @numFileNames, align 4
  %1172 = load i32, i32* @longestFileName, align 4
  %1173 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1155, i32 0, i32 0
  %1174 = load i8*, i8** %1173, align 8
  %1175 = call i64 @strlen(i8* %1174) #10
  %1176 = trunc i64 %1175 to i32
  %1177 = icmp slt i32 %1172, %1176
  br i1 %1177, label %1178, label %1183

; <label>:1178:                                   ; preds = %1169
  %1179 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1155, i32 0, i32 0
  %1180 = load i8*, i8** %1179, align 8
  %1181 = call i64 @strlen(i8* %1180) #10
  %1182 = trunc i64 %1181 to i32
  store i32 %1182, i32* @longestFileName, align 4
  br label %1183

; <label>:1183:                                   ; preds = %1178, %1169, %1161, %.lr.ph53.17
  %.1.17 = phi i8 [ 0, %.lr.ph53.17 ], [ %.1.16, %1161 ], [ %.1.16, %1178 ], [ %.1.16, %1169 ]
  call void @__loop_iteration_test___2()
  %1184 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1155, i32 0, i32 1
  %1185 = load %struct.zzzz*, %struct.zzzz** %1184, align 8
  %1186 = icmp ne %struct.zzzz* %1185, null
  br i1 %1186, label %.lr.ph53.18, label %._crit_edge54.loopexit

.lr.ph53.18:                                      ; preds = %1183
  call void @unroll_loop(i32 2)
  %1187 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1185, i32 0, i32 0
  %1188 = load i8*, i8** %1187, align 8
  %1189 = call i32 @strcmp(i8* %1188, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1190 = icmp eq i32 %1189, 0
  br i1 %1190, label %1213, label %1191

; <label>:1191:                                   ; preds = %.lr.ph53.18
  %1192 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1185, i32 0, i32 0
  %1193 = load i8*, i8** %1192, align 8
  %1194 = load i8, i8* %1193, align 1
  %1195 = sext i8 %1194 to i32
  %1196 = icmp eq i32 %1195, 45
  %1197 = zext i8 %.1.17 to i32
  %1198 = icmp ne i32 %1197, 0
  %or.cond.18 = and i1 %1196, %1198
  br i1 %or.cond.18, label %1213, label %1199

; <label>:1199:                                   ; preds = %1191
  %1200 = load i32, i32* @numFileNames, align 4
  %1201 = add nsw i32 %1200, 1
  store i32 %1201, i32* @numFileNames, align 4
  %1202 = load i32, i32* @longestFileName, align 4
  %1203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1185, i32 0, i32 0
  %1204 = load i8*, i8** %1203, align 8
  %1205 = call i64 @strlen(i8* %1204) #10
  %1206 = trunc i64 %1205 to i32
  %1207 = icmp slt i32 %1202, %1206
  br i1 %1207, label %1208, label %1213

; <label>:1208:                                   ; preds = %1199
  %1209 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1185, i32 0, i32 0
  %1210 = load i8*, i8** %1209, align 8
  %1211 = call i64 @strlen(i8* %1210) #10
  %1212 = trunc i64 %1211 to i32
  store i32 %1212, i32* @longestFileName, align 4
  br label %1213

; <label>:1213:                                   ; preds = %1208, %1199, %1191, %.lr.ph53.18
  %.1.18 = phi i8 [ 0, %.lr.ph53.18 ], [ %.1.17, %1191 ], [ %.1.17, %1208 ], [ %.1.17, %1199 ]
  call void @__loop_iteration_test___2()
  %1214 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1185, i32 0, i32 1
  %1215 = load %struct.zzzz*, %struct.zzzz** %1214, align 8
  %1216 = icmp ne %struct.zzzz* %1215, null
  br i1 %1216, label %.lr.ph53.19, label %._crit_edge54.loopexit

.lr.ph53.19:                                      ; preds = %1213
  call void @unroll_loop(i32 2)
  %1217 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1215, i32 0, i32 0
  %1218 = load i8*, i8** %1217, align 8
  %1219 = call i32 @strcmp(i8* %1218, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1220 = icmp eq i32 %1219, 0
  br i1 %1220, label %1243, label %1221

; <label>:1221:                                   ; preds = %.lr.ph53.19
  %1222 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1215, i32 0, i32 0
  %1223 = load i8*, i8** %1222, align 8
  %1224 = load i8, i8* %1223, align 1
  %1225 = sext i8 %1224 to i32
  %1226 = icmp eq i32 %1225, 45
  %1227 = zext i8 %.1.18 to i32
  %1228 = icmp ne i32 %1227, 0
  %or.cond.19 = and i1 %1226, %1228
  br i1 %or.cond.19, label %1243, label %1229

; <label>:1229:                                   ; preds = %1221
  %1230 = load i32, i32* @numFileNames, align 4
  %1231 = add nsw i32 %1230, 1
  store i32 %1231, i32* @numFileNames, align 4
  %1232 = load i32, i32* @longestFileName, align 4
  %1233 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1215, i32 0, i32 0
  %1234 = load i8*, i8** %1233, align 8
  %1235 = call i64 @strlen(i8* %1234) #10
  %1236 = trunc i64 %1235 to i32
  %1237 = icmp slt i32 %1232, %1236
  br i1 %1237, label %1238, label %1243

; <label>:1238:                                   ; preds = %1229
  %1239 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1215, i32 0, i32 0
  %1240 = load i8*, i8** %1239, align 8
  %1241 = call i64 @strlen(i8* %1240) #10
  %1242 = trunc i64 %1241 to i32
  store i32 %1242, i32* @longestFileName, align 4
  br label %1243

; <label>:1243:                                   ; preds = %1238, %1229, %1221, %.lr.ph53.19
  call void @__loop_iteration_test___2()
  %1244 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1215, i32 0, i32 1
  %1245 = load %struct.zzzz*, %struct.zzzz** %1244, align 8
  br label %._crit_edge54.loopexit

.lr.ph48.1:                                       ; preds = %._crit_edge43
  call void @unroll_loop(i32 3)
  %1246 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1247 = load i8*, i8** %1246, align 8
  %1248 = getelementptr [10 x i8], [10 x i8]* @16, i64 0, i64 0
  %1249 = getelementptr [3 x i8], [3 x i8]* @17, i64 0, i64 0
  %1250 = call i32 @strcmp(i8* %1248, i8* %1249) #10
  %1251 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %1252

; <label>:1252:                                   ; preds = %.lr.ph48.1
  %1253 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1254 = load i8*, i8** %1253, align 8
  %1255 = load i8, i8* %1254, align 1
  %1256 = sext i8 104 to i32
  %1257 = icmp eq i32 104, 45
  br i1 false, label %1258, label %._crit_edge43.1

; <label>:1258:                                   ; preds = %1252
  %1259 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1260 = load i8*, i8** %1259, align 8
  %1261 = getelementptr inbounds i8, i8* %1260, i64 1
  %1262 = load i8, i8* %1261, align 1
  %1263 = sext i8 %1262 to i32
  %1264 = icmp ne i32 %1263, 45
  br i1 %1264, label %1265, label %._crit_edge43.1

; <label>:1265:                                   ; preds = %1258
  %1266 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1267 = load i8*, i8** %1266, align 8
  %1268 = getelementptr inbounds i8, i8* %1267, i64 1
  %1269 = load i8, i8* %1268, align 1
  %1270 = sext i8 %1269 to i32
  %1271 = icmp ne i32 %1270, 0
  br i1 %1271, label %.lr.ph42.preheader.1, label %._crit_edge43.1

.lr.ph42.preheader.1:                             ; preds = %1265
  %1272 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  br label %.lr.ph42.1

.lr.ph42.1:                                       ; preds = %1297, %.lr.ph42.preheader.1
  %lsr.iv.1 = phi i64 [ 0, %.lr.ph42.preheader.1 ], [ %lsr.iv.next.1, %1297 ]
  call void @unroll_loop(i32 4)
  %1273 = load i8*, i8** %1272, align 8
  %scevgep.1 = getelementptr i8, i8* %1273, i64 1
  %scevgep1.1 = getelementptr i8, i8* %scevgep.1, i64 %lsr.iv.1
  %1274 = load i8, i8* %scevgep1.1, align 1
  %1275 = sext i8 %1274 to i32
  switch i32 %1275, label %.loopexit3 [
    i32 99, label %1296
    i32 100, label %1295
    i32 122, label %1294
    i32 102, label %1293
    i32 116, label %1292
    i32 107, label %1291
    i32 115, label %1290
    i32 113, label %1289
    i32 49, label %1288
    i32 50, label %1287
    i32 51, label %1286
    i32 52, label %1285
    i32 53, label %1284
    i32 54, label %1283
    i32 55, label %1282
    i32 56, label %1281
    i32 57, label %1280
    i32 86, label %1279
    i32 76, label %1279
    i32 118, label %1276
    i32 104, label %.loopexit4
  ]

; <label>:1276:                                   ; preds = %.lr.ph42.1
  %1277 = load i32, i32* @verbosity, align 4
  %1278 = add nsw i32 %1277, 1
  store i32 %1278, i32* @verbosity, align 4
  br label %1297

; <label>:1279:                                   ; preds = %.lr.ph42.1, %.lr.ph42.1
  call void @license()
  br label %1297

; <label>:1280:                                   ; preds = %.lr.ph42.1
  store i32 9, i32* @blockSize100k, align 4
  br label %1297

; <label>:1281:                                   ; preds = %.lr.ph42.1
  store i32 8, i32* @blockSize100k, align 4
  br label %1297

; <label>:1282:                                   ; preds = %.lr.ph42.1
  store i32 7, i32* @blockSize100k, align 4
  br label %1297

; <label>:1283:                                   ; preds = %.lr.ph42.1
  store i32 6, i32* @blockSize100k, align 4
  br label %1297

; <label>:1284:                                   ; preds = %.lr.ph42.1
  store i32 5, i32* @blockSize100k, align 4
  br label %1297

; <label>:1285:                                   ; preds = %.lr.ph42.1
  store i32 4, i32* @blockSize100k, align 4
  br label %1297

; <label>:1286:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @blockSize100k, align 4
  br label %1297

; <label>:1287:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @blockSize100k, align 4
  br label %1297

; <label>:1288:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @blockSize100k, align 4
  br label %1297

; <label>:1289:                                   ; preds = %.lr.ph42.1
  store i8 0, i8* @noisy, align 1
  br label %1297

; <label>:1290:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @smallMode, align 1
  br label %1297

; <label>:1291:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @keepInputFiles, align 1
  br label %1297

; <label>:1292:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @opMode, align 4
  br label %1297

; <label>:1293:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @forceOverwrite, align 1
  br label %1297

; <label>:1294:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @opMode, align 4
  br label %1297

; <label>:1295:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @opMode, align 4
  br label %1297

; <label>:1296:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @srcMode, align 4
  br label %1297

; <label>:1297:                                   ; preds = %1296, %1295, %1294, %1293, %1292, %1291, %1290, %1289, %1288, %1287, %1286, %1285, %1284, %1283, %1282, %1281, %1280, %1279, %1276
  %1298 = load i8*, i8** %1266, align 8
  %scevgep2.1 = getelementptr i8, i8* %1298, i64 2
  %scevgep3.1 = getelementptr i8, i8* %scevgep2.1, i64 %lsr.iv.1
  %1299 = load i8, i8* %scevgep3.1, align 1
  %1300 = sext i8 %1299 to i32
  %1301 = icmp ne i32 %1300, 0
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %1301, label %.lr.ph42.1, label %._crit_edge43.loopexit.1

._crit_edge43.loopexit.1:                         ; preds = %1297
  br label %._crit_edge43.1

._crit_edge43.1:                                  ; preds = %._crit_edge43.loopexit.1, %1265, %1258, %1252
  call void @__loop_iteration_test___3()
  %1302 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 1
  %1303 = load %struct.zzzz*, %struct.zzzz** %1302, align 8
  %1304 = icmp ne i64 0, 0
  %1305 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph48.2, label %.loopexit17.loopexit

.lr.ph48.2:                                       ; preds = %._crit_edge43.1
  call void @unroll_loop(i32 3)
  %1306 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1307 = load i8*, i8** %1306, align 8
  %1308 = call i32 @strcmp(i8* %1307, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1309 = icmp eq i32 %1308, 0
  br i1 %1309, label %.loopexit17.loopexit, label %1310

; <label>:1310:                                   ; preds = %.lr.ph48.2
  %1311 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1312 = load i8*, i8** %1311, align 8
  %1313 = load i8, i8* %1312, align 1
  %1314 = sext i8 %1313 to i32
  %1315 = icmp eq i32 %1314, 45
  br i1 %1315, label %1316, label %._crit_edge43.2

; <label>:1316:                                   ; preds = %1310
  %1317 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1318 = load i8*, i8** %1317, align 8
  %1319 = getelementptr inbounds i8, i8* %1318, i64 1
  %1320 = load i8, i8* %1319, align 1
  %1321 = sext i8 %1320 to i32
  %1322 = icmp ne i32 %1321, 45
  br i1 %1322, label %1323, label %._crit_edge43.2

; <label>:1323:                                   ; preds = %1316
  %1324 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1325 = load i8*, i8** %1324, align 8
  %1326 = getelementptr inbounds i8, i8* %1325, i64 1
  %1327 = load i8, i8* %1326, align 1
  %1328 = sext i8 %1327 to i32
  %1329 = icmp ne i32 %1328, 0
  br i1 %1329, label %.lr.ph42.preheader.2, label %._crit_edge43.2

.lr.ph42.preheader.2:                             ; preds = %1323
  %1330 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  br label %.lr.ph42.2

.lr.ph42.2:                                       ; preds = %1355, %.lr.ph42.preheader.2
  %lsr.iv.2 = phi i64 [ 0, %.lr.ph42.preheader.2 ], [ %lsr.iv.next.2, %1355 ]
  call void @unroll_loop(i32 4)
  %1331 = load i8*, i8** %1330, align 8
  %scevgep.2 = getelementptr i8, i8* %1331, i64 1
  %scevgep1.2 = getelementptr i8, i8* %scevgep.2, i64 %lsr.iv.2
  %1332 = load i8, i8* %scevgep1.2, align 1
  %1333 = sext i8 %1332 to i32
  switch i32 %1333, label %.loopexit5 [
    i32 99, label %1354
    i32 100, label %1353
    i32 122, label %1352
    i32 102, label %1351
    i32 116, label %1350
    i32 107, label %1349
    i32 115, label %1348
    i32 113, label %1347
    i32 49, label %1346
    i32 50, label %1345
    i32 51, label %1344
    i32 52, label %1343
    i32 53, label %1342
    i32 54, label %1341
    i32 55, label %1340
    i32 56, label %1339
    i32 57, label %1338
    i32 86, label %1337
    i32 76, label %1337
    i32 118, label %1334
    i32 104, label %.loopexit6
  ]

; <label>:1334:                                   ; preds = %.lr.ph42.2
  %1335 = load i32, i32* @verbosity, align 4
  %1336 = add nsw i32 %1335, 1
  store i32 %1336, i32* @verbosity, align 4
  br label %1355

; <label>:1337:                                   ; preds = %.lr.ph42.2, %.lr.ph42.2
  call void @license()
  br label %1355

; <label>:1338:                                   ; preds = %.lr.ph42.2
  store i32 9, i32* @blockSize100k, align 4
  br label %1355

; <label>:1339:                                   ; preds = %.lr.ph42.2
  store i32 8, i32* @blockSize100k, align 4
  br label %1355

; <label>:1340:                                   ; preds = %.lr.ph42.2
  store i32 7, i32* @blockSize100k, align 4
  br label %1355

; <label>:1341:                                   ; preds = %.lr.ph42.2
  store i32 6, i32* @blockSize100k, align 4
  br label %1355

; <label>:1342:                                   ; preds = %.lr.ph42.2
  store i32 5, i32* @blockSize100k, align 4
  br label %1355

; <label>:1343:                                   ; preds = %.lr.ph42.2
  store i32 4, i32* @blockSize100k, align 4
  br label %1355

; <label>:1344:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @blockSize100k, align 4
  br label %1355

; <label>:1345:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @blockSize100k, align 4
  br label %1355

; <label>:1346:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @blockSize100k, align 4
  br label %1355

; <label>:1347:                                   ; preds = %.lr.ph42.2
  store i8 0, i8* @noisy, align 1
  br label %1355

; <label>:1348:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @smallMode, align 1
  br label %1355

; <label>:1349:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @keepInputFiles, align 1
  br label %1355

; <label>:1350:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @opMode, align 4
  br label %1355

; <label>:1351:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @forceOverwrite, align 1
  br label %1355

; <label>:1352:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @opMode, align 4
  br label %1355

; <label>:1353:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @opMode, align 4
  br label %1355

; <label>:1354:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @srcMode, align 4
  br label %1355

; <label>:1355:                                   ; preds = %1354, %1353, %1352, %1351, %1350, %1349, %1348, %1347, %1346, %1345, %1344, %1343, %1342, %1341, %1340, %1339, %1338, %1337, %1334
  %1356 = load i8*, i8** %1324, align 8
  %scevgep2.2 = getelementptr i8, i8* %1356, i64 2
  %scevgep3.2 = getelementptr i8, i8* %scevgep2.2, i64 %lsr.iv.2
  %1357 = load i8, i8* %scevgep3.2, align 1
  %1358 = sext i8 %1357 to i32
  %1359 = icmp ne i32 %1358, 0
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %1359, label %.lr.ph42.2, label %._crit_edge43.loopexit.2

._crit_edge43.loopexit.2:                         ; preds = %1355
  br label %._crit_edge43.2

._crit_edge43.2:                                  ; preds = %._crit_edge43.loopexit.2, %1323, %1316, %1310
  call void @__loop_iteration_test___3()
  %1360 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %1361 = load %struct.zzzz*, %struct.zzzz** %1360, align 8
  %1362 = icmp ne %struct.zzzz* %1361, null
  br i1 %1362, label %.lr.ph48.3, label %.loopexit17.loopexit

.lr.ph48.3:                                       ; preds = %._crit_edge43.2
  call void @unroll_loop(i32 3)
  %1363 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1361, i32 0, i32 0
  %1364 = load i8*, i8** %1363, align 8
  %1365 = call i32 @strcmp(i8* %1364, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1366 = icmp eq i32 %1365, 0
  br i1 %1366, label %.loopexit17.loopexit, label %1367

; <label>:1367:                                   ; preds = %.lr.ph48.3
  %1368 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1361, i32 0, i32 0
  %1369 = load i8*, i8** %1368, align 8
  %1370 = load i8, i8* %1369, align 1
  %1371 = sext i8 %1370 to i32
  %1372 = icmp eq i32 %1371, 45
  br i1 %1372, label %1373, label %._crit_edge43.3

; <label>:1373:                                   ; preds = %1367
  %1374 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1361, i32 0, i32 0
  %1375 = load i8*, i8** %1374, align 8
  %1376 = getelementptr inbounds i8, i8* %1375, i64 1
  %1377 = load i8, i8* %1376, align 1
  %1378 = sext i8 %1377 to i32
  %1379 = icmp ne i32 %1378, 45
  br i1 %1379, label %1380, label %._crit_edge43.3

; <label>:1380:                                   ; preds = %1373
  %1381 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1361, i32 0, i32 0
  %1382 = load i8*, i8** %1381, align 8
  %1383 = getelementptr inbounds i8, i8* %1382, i64 1
  %1384 = load i8, i8* %1383, align 1
  %1385 = sext i8 %1384 to i32
  %1386 = icmp ne i32 %1385, 0
  br i1 %1386, label %.lr.ph42.preheader.3, label %._crit_edge43.3

.lr.ph42.preheader.3:                             ; preds = %1380
  %1387 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1361, i32 0, i32 0
  br label %.lr.ph42.3

.lr.ph42.3:                                       ; preds = %1412, %.lr.ph42.preheader.3
  %lsr.iv.3 = phi i64 [ 0, %.lr.ph42.preheader.3 ], [ %lsr.iv.next.3, %1412 ]
  call void @unroll_loop(i32 4)
  %1388 = load i8*, i8** %1387, align 8
  %scevgep.3 = getelementptr i8, i8* %1388, i64 1
  %scevgep1.3 = getelementptr i8, i8* %scevgep.3, i64 %lsr.iv.3
  %1389 = load i8, i8* %scevgep1.3, align 1
  %1390 = sext i8 %1389 to i32
  switch i32 %1390, label %.loopexit7 [
    i32 99, label %1411
    i32 100, label %1410
    i32 122, label %1409
    i32 102, label %1408
    i32 116, label %1407
    i32 107, label %1406
    i32 115, label %1405
    i32 113, label %1404
    i32 49, label %1403
    i32 50, label %1402
    i32 51, label %1401
    i32 52, label %1400
    i32 53, label %1399
    i32 54, label %1398
    i32 55, label %1397
    i32 56, label %1396
    i32 57, label %1395
    i32 86, label %1394
    i32 76, label %1394
    i32 118, label %1391
    i32 104, label %.loopexit8
  ]

; <label>:1391:                                   ; preds = %.lr.ph42.3
  %1392 = load i32, i32* @verbosity, align 4
  %1393 = add nsw i32 %1392, 1
  store i32 %1393, i32* @verbosity, align 4
  br label %1412

; <label>:1394:                                   ; preds = %.lr.ph42.3, %.lr.ph42.3
  call void @license()
  br label %1412

; <label>:1395:                                   ; preds = %.lr.ph42.3
  store i32 9, i32* @blockSize100k, align 4
  br label %1412

; <label>:1396:                                   ; preds = %.lr.ph42.3
  store i32 8, i32* @blockSize100k, align 4
  br label %1412

; <label>:1397:                                   ; preds = %.lr.ph42.3
  store i32 7, i32* @blockSize100k, align 4
  br label %1412

; <label>:1398:                                   ; preds = %.lr.ph42.3
  store i32 6, i32* @blockSize100k, align 4
  br label %1412

; <label>:1399:                                   ; preds = %.lr.ph42.3
  store i32 5, i32* @blockSize100k, align 4
  br label %1412

; <label>:1400:                                   ; preds = %.lr.ph42.3
  store i32 4, i32* @blockSize100k, align 4
  br label %1412

; <label>:1401:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @blockSize100k, align 4
  br label %1412

; <label>:1402:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @blockSize100k, align 4
  br label %1412

; <label>:1403:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @blockSize100k, align 4
  br label %1412

; <label>:1404:                                   ; preds = %.lr.ph42.3
  store i8 0, i8* @noisy, align 1
  br label %1412

; <label>:1405:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @smallMode, align 1
  br label %1412

; <label>:1406:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @keepInputFiles, align 1
  br label %1412

; <label>:1407:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @opMode, align 4
  br label %1412

; <label>:1408:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @forceOverwrite, align 1
  br label %1412

; <label>:1409:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @opMode, align 4
  br label %1412

; <label>:1410:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @opMode, align 4
  br label %1412

; <label>:1411:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @srcMode, align 4
  br label %1412

; <label>:1412:                                   ; preds = %1411, %1410, %1409, %1408, %1407, %1406, %1405, %1404, %1403, %1402, %1401, %1400, %1399, %1398, %1397, %1396, %1395, %1394, %1391
  %1413 = load i8*, i8** %1381, align 8
  %scevgep2.3 = getelementptr i8, i8* %1413, i64 2
  %scevgep3.3 = getelementptr i8, i8* %scevgep2.3, i64 %lsr.iv.3
  %1414 = load i8, i8* %scevgep3.3, align 1
  %1415 = sext i8 %1414 to i32
  %1416 = icmp ne i32 %1415, 0
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %1416, label %.lr.ph42.3, label %._crit_edge43.loopexit.3

._crit_edge43.loopexit.3:                         ; preds = %1412
  br label %._crit_edge43.3

._crit_edge43.3:                                  ; preds = %._crit_edge43.loopexit.3, %1380, %1373, %1367
  call void @__loop_iteration_test___3()
  %1417 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1361, i32 0, i32 1
  %1418 = load %struct.zzzz*, %struct.zzzz** %1417, align 8
  %1419 = icmp ne %struct.zzzz* %1418, null
  br i1 %1419, label %.lr.ph48.4, label %.loopexit17.loopexit

.lr.ph48.4:                                       ; preds = %._crit_edge43.3
  call void @unroll_loop(i32 3)
  %1420 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1418, i32 0, i32 0
  %1421 = load i8*, i8** %1420, align 8
  %1422 = call i32 @strcmp(i8* %1421, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %.loopexit17.loopexit, label %1424

; <label>:1424:                                   ; preds = %.lr.ph48.4
  %1425 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1418, i32 0, i32 0
  %1426 = load i8*, i8** %1425, align 8
  %1427 = load i8, i8* %1426, align 1
  %1428 = sext i8 %1427 to i32
  %1429 = icmp eq i32 %1428, 45
  br i1 %1429, label %1430, label %._crit_edge43.4

; <label>:1430:                                   ; preds = %1424
  %1431 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1418, i32 0, i32 0
  %1432 = load i8*, i8** %1431, align 8
  %1433 = getelementptr inbounds i8, i8* %1432, i64 1
  %1434 = load i8, i8* %1433, align 1
  %1435 = sext i8 %1434 to i32
  %1436 = icmp ne i32 %1435, 45
  br i1 %1436, label %1437, label %._crit_edge43.4

; <label>:1437:                                   ; preds = %1430
  %1438 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1418, i32 0, i32 0
  %1439 = load i8*, i8** %1438, align 8
  %1440 = getelementptr inbounds i8, i8* %1439, i64 1
  %1441 = load i8, i8* %1440, align 1
  %1442 = sext i8 %1441 to i32
  %1443 = icmp ne i32 %1442, 0
  br i1 %1443, label %.lr.ph42.preheader.4, label %._crit_edge43.4

.lr.ph42.preheader.4:                             ; preds = %1437
  %1444 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1418, i32 0, i32 0
  br label %.lr.ph42.4

.lr.ph42.4:                                       ; preds = %1469, %.lr.ph42.preheader.4
  %lsr.iv.4 = phi i64 [ 0, %.lr.ph42.preheader.4 ], [ %lsr.iv.next.4, %1469 ]
  call void @unroll_loop(i32 4)
  %1445 = load i8*, i8** %1444, align 8
  %scevgep.4 = getelementptr i8, i8* %1445, i64 1
  %scevgep1.4 = getelementptr i8, i8* %scevgep.4, i64 %lsr.iv.4
  %1446 = load i8, i8* %scevgep1.4, align 1
  %1447 = sext i8 %1446 to i32
  switch i32 %1447, label %.loopexit9 [
    i32 99, label %1468
    i32 100, label %1467
    i32 122, label %1466
    i32 102, label %1465
    i32 116, label %1464
    i32 107, label %1463
    i32 115, label %1462
    i32 113, label %1461
    i32 49, label %1460
    i32 50, label %1459
    i32 51, label %1458
    i32 52, label %1457
    i32 53, label %1456
    i32 54, label %1455
    i32 55, label %1454
    i32 56, label %1453
    i32 57, label %1452
    i32 86, label %1451
    i32 76, label %1451
    i32 118, label %1448
    i32 104, label %.loopexit10
  ]

; <label>:1448:                                   ; preds = %.lr.ph42.4
  %1449 = load i32, i32* @verbosity, align 4
  %1450 = add nsw i32 %1449, 1
  store i32 %1450, i32* @verbosity, align 4
  br label %1469

; <label>:1451:                                   ; preds = %.lr.ph42.4, %.lr.ph42.4
  call void @license()
  br label %1469

; <label>:1452:                                   ; preds = %.lr.ph42.4
  store i32 9, i32* @blockSize100k, align 4
  br label %1469

; <label>:1453:                                   ; preds = %.lr.ph42.4
  store i32 8, i32* @blockSize100k, align 4
  br label %1469

; <label>:1454:                                   ; preds = %.lr.ph42.4
  store i32 7, i32* @blockSize100k, align 4
  br label %1469

; <label>:1455:                                   ; preds = %.lr.ph42.4
  store i32 6, i32* @blockSize100k, align 4
  br label %1469

; <label>:1456:                                   ; preds = %.lr.ph42.4
  store i32 5, i32* @blockSize100k, align 4
  br label %1469

; <label>:1457:                                   ; preds = %.lr.ph42.4
  store i32 4, i32* @blockSize100k, align 4
  br label %1469

; <label>:1458:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @blockSize100k, align 4
  br label %1469

; <label>:1459:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @blockSize100k, align 4
  br label %1469

; <label>:1460:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @blockSize100k, align 4
  br label %1469

; <label>:1461:                                   ; preds = %.lr.ph42.4
  store i8 0, i8* @noisy, align 1
  br label %1469

; <label>:1462:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @smallMode, align 1
  br label %1469

; <label>:1463:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @keepInputFiles, align 1
  br label %1469

; <label>:1464:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @opMode, align 4
  br label %1469

; <label>:1465:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @forceOverwrite, align 1
  br label %1469

; <label>:1466:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @opMode, align 4
  br label %1469

; <label>:1467:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @opMode, align 4
  br label %1469

; <label>:1468:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @srcMode, align 4
  br label %1469

; <label>:1469:                                   ; preds = %1468, %1467, %1466, %1465, %1464, %1463, %1462, %1461, %1460, %1459, %1458, %1457, %1456, %1455, %1454, %1453, %1452, %1451, %1448
  %1470 = load i8*, i8** %1438, align 8
  %scevgep2.4 = getelementptr i8, i8* %1470, i64 2
  %scevgep3.4 = getelementptr i8, i8* %scevgep2.4, i64 %lsr.iv.4
  %1471 = load i8, i8* %scevgep3.4, align 1
  %1472 = sext i8 %1471 to i32
  %1473 = icmp ne i32 %1472, 0
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %1473, label %.lr.ph42.4, label %._crit_edge43.loopexit.4

._crit_edge43.loopexit.4:                         ; preds = %1469
  br label %._crit_edge43.4

._crit_edge43.4:                                  ; preds = %._crit_edge43.loopexit.4, %1437, %1430, %1424
  call void @__loop_iteration_test___3()
  %1474 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1418, i32 0, i32 1
  %1475 = load %struct.zzzz*, %struct.zzzz** %1474, align 8
  %1476 = icmp ne %struct.zzzz* %1475, null
  br i1 %1476, label %.lr.ph48.5, label %.loopexit17.loopexit

.lr.ph48.5:                                       ; preds = %._crit_edge43.4
  call void @unroll_loop(i32 3)
  %1477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1475, i32 0, i32 0
  %1478 = load i8*, i8** %1477, align 8
  %1479 = call i32 @strcmp(i8* %1478, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1480 = icmp eq i32 %1479, 0
  br i1 %1480, label %.loopexit17.loopexit, label %1481

; <label>:1481:                                   ; preds = %.lr.ph48.5
  %1482 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1475, i32 0, i32 0
  %1483 = load i8*, i8** %1482, align 8
  %1484 = load i8, i8* %1483, align 1
  %1485 = sext i8 %1484 to i32
  %1486 = icmp eq i32 %1485, 45
  br i1 %1486, label %1487, label %._crit_edge43.5

; <label>:1487:                                   ; preds = %1481
  %1488 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1475, i32 0, i32 0
  %1489 = load i8*, i8** %1488, align 8
  %1490 = getelementptr inbounds i8, i8* %1489, i64 1
  %1491 = load i8, i8* %1490, align 1
  %1492 = sext i8 %1491 to i32
  %1493 = icmp ne i32 %1492, 45
  br i1 %1493, label %1494, label %._crit_edge43.5

; <label>:1494:                                   ; preds = %1487
  %1495 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1475, i32 0, i32 0
  %1496 = load i8*, i8** %1495, align 8
  %1497 = getelementptr inbounds i8, i8* %1496, i64 1
  %1498 = load i8, i8* %1497, align 1
  %1499 = sext i8 %1498 to i32
  %1500 = icmp ne i32 %1499, 0
  br i1 %1500, label %.lr.ph42.preheader.5, label %._crit_edge43.5

.lr.ph42.preheader.5:                             ; preds = %1494
  %1501 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1475, i32 0, i32 0
  br label %.lr.ph42.5

.lr.ph42.5:                                       ; preds = %1526, %.lr.ph42.preheader.5
  %lsr.iv.5 = phi i64 [ 0, %.lr.ph42.preheader.5 ], [ %lsr.iv.next.5, %1526 ]
  call void @unroll_loop(i32 4)
  %1502 = load i8*, i8** %1501, align 8
  %scevgep.5 = getelementptr i8, i8* %1502, i64 1
  %scevgep1.5 = getelementptr i8, i8* %scevgep.5, i64 %lsr.iv.5
  %1503 = load i8, i8* %scevgep1.5, align 1
  %1504 = sext i8 %1503 to i32
  switch i32 %1504, label %.loopexit11 [
    i32 99, label %1525
    i32 100, label %1524
    i32 122, label %1523
    i32 102, label %1522
    i32 116, label %1521
    i32 107, label %1520
    i32 115, label %1519
    i32 113, label %1518
    i32 49, label %1517
    i32 50, label %1516
    i32 51, label %1515
    i32 52, label %1514
    i32 53, label %1513
    i32 54, label %1512
    i32 55, label %1511
    i32 56, label %1510
    i32 57, label %1509
    i32 86, label %1508
    i32 76, label %1508
    i32 118, label %1505
    i32 104, label %.loopexit12
  ]

; <label>:1505:                                   ; preds = %.lr.ph42.5
  %1506 = load i32, i32* @verbosity, align 4
  %1507 = add nsw i32 %1506, 1
  store i32 %1507, i32* @verbosity, align 4
  br label %1526

; <label>:1508:                                   ; preds = %.lr.ph42.5, %.lr.ph42.5
  call void @license()
  br label %1526

; <label>:1509:                                   ; preds = %.lr.ph42.5
  store i32 9, i32* @blockSize100k, align 4
  br label %1526

; <label>:1510:                                   ; preds = %.lr.ph42.5
  store i32 8, i32* @blockSize100k, align 4
  br label %1526

; <label>:1511:                                   ; preds = %.lr.ph42.5
  store i32 7, i32* @blockSize100k, align 4
  br label %1526

; <label>:1512:                                   ; preds = %.lr.ph42.5
  store i32 6, i32* @blockSize100k, align 4
  br label %1526

; <label>:1513:                                   ; preds = %.lr.ph42.5
  store i32 5, i32* @blockSize100k, align 4
  br label %1526

; <label>:1514:                                   ; preds = %.lr.ph42.5
  store i32 4, i32* @blockSize100k, align 4
  br label %1526

; <label>:1515:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @blockSize100k, align 4
  br label %1526

; <label>:1516:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @blockSize100k, align 4
  br label %1526

; <label>:1517:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @blockSize100k, align 4
  br label %1526

; <label>:1518:                                   ; preds = %.lr.ph42.5
  store i8 0, i8* @noisy, align 1
  br label %1526

; <label>:1519:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @smallMode, align 1
  br label %1526

; <label>:1520:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @keepInputFiles, align 1
  br label %1526

; <label>:1521:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @opMode, align 4
  br label %1526

; <label>:1522:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @forceOverwrite, align 1
  br label %1526

; <label>:1523:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @opMode, align 4
  br label %1526

; <label>:1524:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @opMode, align 4
  br label %1526

; <label>:1525:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @srcMode, align 4
  br label %1526

; <label>:1526:                                   ; preds = %1525, %1524, %1523, %1522, %1521, %1520, %1519, %1518, %1517, %1516, %1515, %1514, %1513, %1512, %1511, %1510, %1509, %1508, %1505
  %1527 = load i8*, i8** %1495, align 8
  %scevgep2.5 = getelementptr i8, i8* %1527, i64 2
  %scevgep3.5 = getelementptr i8, i8* %scevgep2.5, i64 %lsr.iv.5
  %1528 = load i8, i8* %scevgep3.5, align 1
  %1529 = sext i8 %1528 to i32
  %1530 = icmp ne i32 %1529, 0
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %1530, label %.lr.ph42.5, label %._crit_edge43.loopexit.5

._crit_edge43.loopexit.5:                         ; preds = %1526
  br label %._crit_edge43.5

._crit_edge43.5:                                  ; preds = %._crit_edge43.loopexit.5, %1494, %1487, %1481
  call void @__loop_iteration_test___3()
  %1531 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1475, i32 0, i32 1
  %1532 = load %struct.zzzz*, %struct.zzzz** %1531, align 8
  %1533 = icmp ne %struct.zzzz* %1532, null
  br i1 %1533, label %.lr.ph48.6, label %.loopexit17.loopexit

.lr.ph48.6:                                       ; preds = %._crit_edge43.5
  call void @unroll_loop(i32 3)
  %1534 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1532, i32 0, i32 0
  %1535 = load i8*, i8** %1534, align 8
  %1536 = call i32 @strcmp(i8* %1535, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1537 = icmp eq i32 %1536, 0
  br i1 %1537, label %.loopexit17.loopexit, label %1538

; <label>:1538:                                   ; preds = %.lr.ph48.6
  %1539 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1532, i32 0, i32 0
  %1540 = load i8*, i8** %1539, align 8
  %1541 = load i8, i8* %1540, align 1
  %1542 = sext i8 %1541 to i32
  %1543 = icmp eq i32 %1542, 45
  br i1 %1543, label %1544, label %._crit_edge43.6

; <label>:1544:                                   ; preds = %1538
  %1545 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1532, i32 0, i32 0
  %1546 = load i8*, i8** %1545, align 8
  %1547 = getelementptr inbounds i8, i8* %1546, i64 1
  %1548 = load i8, i8* %1547, align 1
  %1549 = sext i8 %1548 to i32
  %1550 = icmp ne i32 %1549, 45
  br i1 %1550, label %1551, label %._crit_edge43.6

; <label>:1551:                                   ; preds = %1544
  %1552 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1532, i32 0, i32 0
  %1553 = load i8*, i8** %1552, align 8
  %1554 = getelementptr inbounds i8, i8* %1553, i64 1
  %1555 = load i8, i8* %1554, align 1
  %1556 = sext i8 %1555 to i32
  %1557 = icmp ne i32 %1556, 0
  br i1 %1557, label %.lr.ph42.preheader.6, label %._crit_edge43.6

.lr.ph42.preheader.6:                             ; preds = %1551
  %1558 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1532, i32 0, i32 0
  br label %.lr.ph42.6

.lr.ph42.6:                                       ; preds = %1583, %.lr.ph42.preheader.6
  %lsr.iv.6 = phi i64 [ 0, %.lr.ph42.preheader.6 ], [ %lsr.iv.next.6, %1583 ]
  call void @unroll_loop(i32 4)
  %1559 = load i8*, i8** %1558, align 8
  %scevgep.6 = getelementptr i8, i8* %1559, i64 1
  %scevgep1.6 = getelementptr i8, i8* %scevgep.6, i64 %lsr.iv.6
  %1560 = load i8, i8* %scevgep1.6, align 1
  %1561 = sext i8 %1560 to i32
  switch i32 %1561, label %.loopexit13 [
    i32 99, label %1582
    i32 100, label %1581
    i32 122, label %1580
    i32 102, label %1579
    i32 116, label %1578
    i32 107, label %1577
    i32 115, label %1576
    i32 113, label %1575
    i32 49, label %1574
    i32 50, label %1573
    i32 51, label %1572
    i32 52, label %1571
    i32 53, label %1570
    i32 54, label %1569
    i32 55, label %1568
    i32 56, label %1567
    i32 57, label %1566
    i32 86, label %1565
    i32 76, label %1565
    i32 118, label %1562
    i32 104, label %.loopexit14
  ]

; <label>:1562:                                   ; preds = %.lr.ph42.6
  %1563 = load i32, i32* @verbosity, align 4
  %1564 = add nsw i32 %1563, 1
  store i32 %1564, i32* @verbosity, align 4
  br label %1583

; <label>:1565:                                   ; preds = %.lr.ph42.6, %.lr.ph42.6
  call void @license()
  br label %1583

; <label>:1566:                                   ; preds = %.lr.ph42.6
  store i32 9, i32* @blockSize100k, align 4
  br label %1583

; <label>:1567:                                   ; preds = %.lr.ph42.6
  store i32 8, i32* @blockSize100k, align 4
  br label %1583

; <label>:1568:                                   ; preds = %.lr.ph42.6
  store i32 7, i32* @blockSize100k, align 4
  br label %1583

; <label>:1569:                                   ; preds = %.lr.ph42.6
  store i32 6, i32* @blockSize100k, align 4
  br label %1583

; <label>:1570:                                   ; preds = %.lr.ph42.6
  store i32 5, i32* @blockSize100k, align 4
  br label %1583

; <label>:1571:                                   ; preds = %.lr.ph42.6
  store i32 4, i32* @blockSize100k, align 4
  br label %1583

; <label>:1572:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @blockSize100k, align 4
  br label %1583

; <label>:1573:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @blockSize100k, align 4
  br label %1583

; <label>:1574:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @blockSize100k, align 4
  br label %1583

; <label>:1575:                                   ; preds = %.lr.ph42.6
  store i8 0, i8* @noisy, align 1
  br label %1583

; <label>:1576:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @smallMode, align 1
  br label %1583

; <label>:1577:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @keepInputFiles, align 1
  br label %1583

; <label>:1578:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @opMode, align 4
  br label %1583

; <label>:1579:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @forceOverwrite, align 1
  br label %1583

; <label>:1580:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @opMode, align 4
  br label %1583

; <label>:1581:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @opMode, align 4
  br label %1583

; <label>:1582:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @srcMode, align 4
  br label %1583

; <label>:1583:                                   ; preds = %1582, %1581, %1580, %1579, %1578, %1577, %1576, %1575, %1574, %1573, %1572, %1571, %1570, %1569, %1568, %1567, %1566, %1565, %1562
  %1584 = load i8*, i8** %1552, align 8
  %scevgep2.6 = getelementptr i8, i8* %1584, i64 2
  %scevgep3.6 = getelementptr i8, i8* %scevgep2.6, i64 %lsr.iv.6
  %1585 = load i8, i8* %scevgep3.6, align 1
  %1586 = sext i8 %1585 to i32
  %1587 = icmp ne i32 %1586, 0
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %1587, label %.lr.ph42.6, label %._crit_edge43.loopexit.6

._crit_edge43.loopexit.6:                         ; preds = %1583
  br label %._crit_edge43.6

._crit_edge43.6:                                  ; preds = %._crit_edge43.loopexit.6, %1551, %1544, %1538
  call void @__loop_iteration_test___3()
  %1588 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1532, i32 0, i32 1
  %1589 = load %struct.zzzz*, %struct.zzzz** %1588, align 8
  %1590 = icmp ne %struct.zzzz* %1589, null
  br i1 %1590, label %.lr.ph48.7, label %.loopexit17.loopexit

.lr.ph48.7:                                       ; preds = %._crit_edge43.6
  call void @unroll_loop(i32 3)
  %1591 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1589, i32 0, i32 0
  %1592 = load i8*, i8** %1591, align 8
  %1593 = call i32 @strcmp(i8* %1592, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1594 = icmp eq i32 %1593, 0
  br i1 %1594, label %.loopexit17.loopexit, label %1595

; <label>:1595:                                   ; preds = %.lr.ph48.7
  %1596 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1589, i32 0, i32 0
  %1597 = load i8*, i8** %1596, align 8
  %1598 = load i8, i8* %1597, align 1
  %1599 = sext i8 %1598 to i32
  %1600 = icmp eq i32 %1599, 45
  br i1 %1600, label %1601, label %._crit_edge43.7

; <label>:1601:                                   ; preds = %1595
  %1602 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1589, i32 0, i32 0
  %1603 = load i8*, i8** %1602, align 8
  %1604 = getelementptr inbounds i8, i8* %1603, i64 1
  %1605 = load i8, i8* %1604, align 1
  %1606 = sext i8 %1605 to i32
  %1607 = icmp ne i32 %1606, 45
  br i1 %1607, label %1608, label %._crit_edge43.7

; <label>:1608:                                   ; preds = %1601
  %1609 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1589, i32 0, i32 0
  %1610 = load i8*, i8** %1609, align 8
  %1611 = getelementptr inbounds i8, i8* %1610, i64 1
  %1612 = load i8, i8* %1611, align 1
  %1613 = sext i8 %1612 to i32
  %1614 = icmp ne i32 %1613, 0
  br i1 %1614, label %.lr.ph42.preheader.7, label %._crit_edge43.7

.lr.ph42.preheader.7:                             ; preds = %1608
  %1615 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1589, i32 0, i32 0
  br label %.lr.ph42.7

.lr.ph42.7:                                       ; preds = %1640, %.lr.ph42.preheader.7
  %lsr.iv.7 = phi i64 [ 0, %.lr.ph42.preheader.7 ], [ %lsr.iv.next.7, %1640 ]
  call void @unroll_loop(i32 4)
  %1616 = load i8*, i8** %1615, align 8
  %scevgep.7 = getelementptr i8, i8* %1616, i64 1
  %scevgep1.7 = getelementptr i8, i8* %scevgep.7, i64 %lsr.iv.7
  %1617 = load i8, i8* %scevgep1.7, align 1
  %1618 = sext i8 %1617 to i32
  switch i32 %1618, label %.loopexit15 [
    i32 99, label %1639
    i32 100, label %1638
    i32 122, label %1637
    i32 102, label %1636
    i32 116, label %1635
    i32 107, label %1634
    i32 115, label %1633
    i32 113, label %1632
    i32 49, label %1631
    i32 50, label %1630
    i32 51, label %1629
    i32 52, label %1628
    i32 53, label %1627
    i32 54, label %1626
    i32 55, label %1625
    i32 56, label %1624
    i32 57, label %1623
    i32 86, label %1622
    i32 76, label %1622
    i32 118, label %1619
    i32 104, label %.loopexit16
  ]

; <label>:1619:                                   ; preds = %.lr.ph42.7
  %1620 = load i32, i32* @verbosity, align 4
  %1621 = add nsw i32 %1620, 1
  store i32 %1621, i32* @verbosity, align 4
  br label %1640

; <label>:1622:                                   ; preds = %.lr.ph42.7, %.lr.ph42.7
  call void @license()
  br label %1640

; <label>:1623:                                   ; preds = %.lr.ph42.7
  store i32 9, i32* @blockSize100k, align 4
  br label %1640

; <label>:1624:                                   ; preds = %.lr.ph42.7
  store i32 8, i32* @blockSize100k, align 4
  br label %1640

; <label>:1625:                                   ; preds = %.lr.ph42.7
  store i32 7, i32* @blockSize100k, align 4
  br label %1640

; <label>:1626:                                   ; preds = %.lr.ph42.7
  store i32 6, i32* @blockSize100k, align 4
  br label %1640

; <label>:1627:                                   ; preds = %.lr.ph42.7
  store i32 5, i32* @blockSize100k, align 4
  br label %1640

; <label>:1628:                                   ; preds = %.lr.ph42.7
  store i32 4, i32* @blockSize100k, align 4
  br label %1640

; <label>:1629:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @blockSize100k, align 4
  br label %1640

; <label>:1630:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @blockSize100k, align 4
  br label %1640

; <label>:1631:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @blockSize100k, align 4
  br label %1640

; <label>:1632:                                   ; preds = %.lr.ph42.7
  store i8 0, i8* @noisy, align 1
  br label %1640

; <label>:1633:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @smallMode, align 1
  br label %1640

; <label>:1634:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @keepInputFiles, align 1
  br label %1640

; <label>:1635:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @opMode, align 4
  br label %1640

; <label>:1636:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @forceOverwrite, align 1
  br label %1640

; <label>:1637:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @opMode, align 4
  br label %1640

; <label>:1638:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @opMode, align 4
  br label %1640

; <label>:1639:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @srcMode, align 4
  br label %1640

; <label>:1640:                                   ; preds = %1639, %1638, %1637, %1636, %1635, %1634, %1633, %1632, %1631, %1630, %1629, %1628, %1627, %1626, %1625, %1624, %1623, %1622, %1619
  %1641 = load i8*, i8** %1609, align 8
  %scevgep2.7 = getelementptr i8, i8* %1641, i64 2
  %scevgep3.7 = getelementptr i8, i8* %scevgep2.7, i64 %lsr.iv.7
  %1642 = load i8, i8* %scevgep3.7, align 1
  %1643 = sext i8 %1642 to i32
  %1644 = icmp ne i32 %1643, 0
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %1644, label %.lr.ph42.7, label %._crit_edge43.loopexit.7

._crit_edge43.loopexit.7:                         ; preds = %1640
  br label %._crit_edge43.7

._crit_edge43.7:                                  ; preds = %._crit_edge43.loopexit.7, %1608, %1601, %1595
  call void @__loop_iteration_test___3()
  %1645 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1589, i32 0, i32 1
  %1646 = load %struct.zzzz*, %struct.zzzz** %1645, align 8
  %1647 = icmp ne %struct.zzzz* %1646, null
  br i1 %1647, label %.lr.ph48.8, label %.loopexit17.loopexit

.lr.ph48.8:                                       ; preds = %._crit_edge43.7
  call void @unroll_loop(i32 3)
  %1648 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1646, i32 0, i32 0
  %1649 = load i8*, i8** %1648, align 8
  %1650 = call i32 @strcmp(i8* %1649, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1651 = icmp eq i32 %1650, 0
  br i1 %1651, label %.loopexit17.loopexit, label %1652

; <label>:1652:                                   ; preds = %.lr.ph48.8
  %1653 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1646, i32 0, i32 0
  %1654 = load i8*, i8** %1653, align 8
  %1655 = load i8, i8* %1654, align 1
  %1656 = sext i8 %1655 to i32
  %1657 = icmp eq i32 %1656, 45
  br i1 %1657, label %1658, label %._crit_edge43.8

; <label>:1658:                                   ; preds = %1652
  %1659 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1646, i32 0, i32 0
  %1660 = load i8*, i8** %1659, align 8
  %1661 = getelementptr inbounds i8, i8* %1660, i64 1
  %1662 = load i8, i8* %1661, align 1
  %1663 = sext i8 %1662 to i32
  %1664 = icmp ne i32 %1663, 45
  br i1 %1664, label %1665, label %._crit_edge43.8

; <label>:1665:                                   ; preds = %1658
  %1666 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1646, i32 0, i32 0
  %1667 = load i8*, i8** %1666, align 8
  %1668 = getelementptr inbounds i8, i8* %1667, i64 1
  %1669 = load i8, i8* %1668, align 1
  %1670 = sext i8 %1669 to i32
  %1671 = icmp ne i32 %1670, 0
  br i1 %1671, label %.lr.ph42.preheader.8, label %._crit_edge43.8

.lr.ph42.preheader.8:                             ; preds = %1665
  %1672 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1646, i32 0, i32 0
  br label %.lr.ph42.8

.lr.ph42.8:                                       ; preds = %1697, %.lr.ph42.preheader.8
  %lsr.iv.8 = phi i64 [ 0, %.lr.ph42.preheader.8 ], [ %lsr.iv.next.8, %1697 ]
  call void @unroll_loop(i32 4)
  %1673 = load i8*, i8** %1672, align 8
  %scevgep.8 = getelementptr i8, i8* %1673, i64 1
  %scevgep1.8 = getelementptr i8, i8* %scevgep.8, i64 %lsr.iv.8
  %1674 = load i8, i8* %scevgep1.8, align 1
  %1675 = sext i8 %1674 to i32
  switch i32 %1675, label %.loopexit18 [
    i32 99, label %1696
    i32 100, label %1695
    i32 122, label %1694
    i32 102, label %1693
    i32 116, label %1692
    i32 107, label %1691
    i32 115, label %1690
    i32 113, label %1689
    i32 49, label %1688
    i32 50, label %1687
    i32 51, label %1686
    i32 52, label %1685
    i32 53, label %1684
    i32 54, label %1683
    i32 55, label %1682
    i32 56, label %1681
    i32 57, label %1680
    i32 86, label %1679
    i32 76, label %1679
    i32 118, label %1676
    i32 104, label %.loopexit19
  ]

; <label>:1676:                                   ; preds = %.lr.ph42.8
  %1677 = load i32, i32* @verbosity, align 4
  %1678 = add nsw i32 %1677, 1
  store i32 %1678, i32* @verbosity, align 4
  br label %1697

; <label>:1679:                                   ; preds = %.lr.ph42.8, %.lr.ph42.8
  call void @license()
  br label %1697

; <label>:1680:                                   ; preds = %.lr.ph42.8
  store i32 9, i32* @blockSize100k, align 4
  br label %1697

; <label>:1681:                                   ; preds = %.lr.ph42.8
  store i32 8, i32* @blockSize100k, align 4
  br label %1697

; <label>:1682:                                   ; preds = %.lr.ph42.8
  store i32 7, i32* @blockSize100k, align 4
  br label %1697

; <label>:1683:                                   ; preds = %.lr.ph42.8
  store i32 6, i32* @blockSize100k, align 4
  br label %1697

; <label>:1684:                                   ; preds = %.lr.ph42.8
  store i32 5, i32* @blockSize100k, align 4
  br label %1697

; <label>:1685:                                   ; preds = %.lr.ph42.8
  store i32 4, i32* @blockSize100k, align 4
  br label %1697

; <label>:1686:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @blockSize100k, align 4
  br label %1697

; <label>:1687:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @blockSize100k, align 4
  br label %1697

; <label>:1688:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @blockSize100k, align 4
  br label %1697

; <label>:1689:                                   ; preds = %.lr.ph42.8
  store i8 0, i8* @noisy, align 1
  br label %1697

; <label>:1690:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @smallMode, align 1
  br label %1697

; <label>:1691:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @keepInputFiles, align 1
  br label %1697

; <label>:1692:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @opMode, align 4
  br label %1697

; <label>:1693:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @forceOverwrite, align 1
  br label %1697

; <label>:1694:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @opMode, align 4
  br label %1697

; <label>:1695:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @opMode, align 4
  br label %1697

; <label>:1696:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @srcMode, align 4
  br label %1697

; <label>:1697:                                   ; preds = %1696, %1695, %1694, %1693, %1692, %1691, %1690, %1689, %1688, %1687, %1686, %1685, %1684, %1683, %1682, %1681, %1680, %1679, %1676
  %1698 = load i8*, i8** %1666, align 8
  %scevgep2.8 = getelementptr i8, i8* %1698, i64 2
  %scevgep3.8 = getelementptr i8, i8* %scevgep2.8, i64 %lsr.iv.8
  %1699 = load i8, i8* %scevgep3.8, align 1
  %1700 = sext i8 %1699 to i32
  %1701 = icmp ne i32 %1700, 0
  %lsr.iv.next.8 = add i64 %lsr.iv.8, 1
  br i1 %1701, label %.lr.ph42.8, label %._crit_edge43.loopexit.8

._crit_edge43.loopexit.8:                         ; preds = %1697
  br label %._crit_edge43.8

._crit_edge43.8:                                  ; preds = %._crit_edge43.loopexit.8, %1665, %1658, %1652
  call void @__loop_iteration_test___3()
  %1702 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1646, i32 0, i32 1
  %1703 = load %struct.zzzz*, %struct.zzzz** %1702, align 8
  %1704 = icmp ne %struct.zzzz* %1703, null
  br i1 %1704, label %.lr.ph48.9, label %.loopexit17.loopexit

.lr.ph48.9:                                       ; preds = %._crit_edge43.8
  call void @unroll_loop(i32 3)
  %1705 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1703, i32 0, i32 0
  %1706 = load i8*, i8** %1705, align 8
  %1707 = call i32 @strcmp(i8* %1706, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1708 = icmp eq i32 %1707, 0
  br i1 %1708, label %.loopexit17.loopexit, label %1709

; <label>:1709:                                   ; preds = %.lr.ph48.9
  %1710 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1703, i32 0, i32 0
  %1711 = load i8*, i8** %1710, align 8
  %1712 = load i8, i8* %1711, align 1
  %1713 = sext i8 %1712 to i32
  %1714 = icmp eq i32 %1713, 45
  br i1 %1714, label %1715, label %._crit_edge43.9

; <label>:1715:                                   ; preds = %1709
  %1716 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1703, i32 0, i32 0
  %1717 = load i8*, i8** %1716, align 8
  %1718 = getelementptr inbounds i8, i8* %1717, i64 1
  %1719 = load i8, i8* %1718, align 1
  %1720 = sext i8 %1719 to i32
  %1721 = icmp ne i32 %1720, 45
  br i1 %1721, label %1722, label %._crit_edge43.9

; <label>:1722:                                   ; preds = %1715
  %1723 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1703, i32 0, i32 0
  %1724 = load i8*, i8** %1723, align 8
  %1725 = getelementptr inbounds i8, i8* %1724, i64 1
  %1726 = load i8, i8* %1725, align 1
  %1727 = sext i8 %1726 to i32
  %1728 = icmp ne i32 %1727, 0
  br i1 %1728, label %.lr.ph42.preheader.9, label %._crit_edge43.9

.lr.ph42.preheader.9:                             ; preds = %1722
  %1729 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1703, i32 0, i32 0
  br label %.lr.ph42.9

.lr.ph42.9:                                       ; preds = %1754, %.lr.ph42.preheader.9
  %lsr.iv.9 = phi i64 [ 0, %.lr.ph42.preheader.9 ], [ %lsr.iv.next.9, %1754 ]
  call void @unroll_loop(i32 4)
  %1730 = load i8*, i8** %1729, align 8
  %scevgep.9 = getelementptr i8, i8* %1730, i64 1
  %scevgep1.9 = getelementptr i8, i8* %scevgep.9, i64 %lsr.iv.9
  %1731 = load i8, i8* %scevgep1.9, align 1
  %1732 = sext i8 %1731 to i32
  switch i32 %1732, label %.loopexit20 [
    i32 99, label %1753
    i32 100, label %1752
    i32 122, label %1751
    i32 102, label %1750
    i32 116, label %1749
    i32 107, label %1748
    i32 115, label %1747
    i32 113, label %1746
    i32 49, label %1745
    i32 50, label %1744
    i32 51, label %1743
    i32 52, label %1742
    i32 53, label %1741
    i32 54, label %1740
    i32 55, label %1739
    i32 56, label %1738
    i32 57, label %1737
    i32 86, label %1736
    i32 76, label %1736
    i32 118, label %1733
    i32 104, label %.loopexit21
  ]

; <label>:1733:                                   ; preds = %.lr.ph42.9
  %1734 = load i32, i32* @verbosity, align 4
  %1735 = add nsw i32 %1734, 1
  store i32 %1735, i32* @verbosity, align 4
  br label %1754

; <label>:1736:                                   ; preds = %.lr.ph42.9, %.lr.ph42.9
  call void @license()
  br label %1754

; <label>:1737:                                   ; preds = %.lr.ph42.9
  store i32 9, i32* @blockSize100k, align 4
  br label %1754

; <label>:1738:                                   ; preds = %.lr.ph42.9
  store i32 8, i32* @blockSize100k, align 4
  br label %1754

; <label>:1739:                                   ; preds = %.lr.ph42.9
  store i32 7, i32* @blockSize100k, align 4
  br label %1754

; <label>:1740:                                   ; preds = %.lr.ph42.9
  store i32 6, i32* @blockSize100k, align 4
  br label %1754

; <label>:1741:                                   ; preds = %.lr.ph42.9
  store i32 5, i32* @blockSize100k, align 4
  br label %1754

; <label>:1742:                                   ; preds = %.lr.ph42.9
  store i32 4, i32* @blockSize100k, align 4
  br label %1754

; <label>:1743:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @blockSize100k, align 4
  br label %1754

; <label>:1744:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @blockSize100k, align 4
  br label %1754

; <label>:1745:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @blockSize100k, align 4
  br label %1754

; <label>:1746:                                   ; preds = %.lr.ph42.9
  store i8 0, i8* @noisy, align 1
  br label %1754

; <label>:1747:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @smallMode, align 1
  br label %1754

; <label>:1748:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @keepInputFiles, align 1
  br label %1754

; <label>:1749:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @opMode, align 4
  br label %1754

; <label>:1750:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @forceOverwrite, align 1
  br label %1754

; <label>:1751:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @opMode, align 4
  br label %1754

; <label>:1752:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @opMode, align 4
  br label %1754

; <label>:1753:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @srcMode, align 4
  br label %1754

; <label>:1754:                                   ; preds = %1753, %1752, %1751, %1750, %1749, %1748, %1747, %1746, %1745, %1744, %1743, %1742, %1741, %1740, %1739, %1738, %1737, %1736, %1733
  %1755 = load i8*, i8** %1723, align 8
  %scevgep2.9 = getelementptr i8, i8* %1755, i64 2
  %scevgep3.9 = getelementptr i8, i8* %scevgep2.9, i64 %lsr.iv.9
  %1756 = load i8, i8* %scevgep3.9, align 1
  %1757 = sext i8 %1756 to i32
  %1758 = icmp ne i32 %1757, 0
  %lsr.iv.next.9 = add i64 %lsr.iv.9, 1
  br i1 %1758, label %.lr.ph42.9, label %._crit_edge43.loopexit.9

._crit_edge43.loopexit.9:                         ; preds = %1754
  br label %._crit_edge43.9

._crit_edge43.9:                                  ; preds = %._crit_edge43.loopexit.9, %1722, %1715, %1709
  call void @__loop_iteration_test___3()
  %1759 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1703, i32 0, i32 1
  %1760 = load %struct.zzzz*, %struct.zzzz** %1759, align 8
  %1761 = icmp ne %struct.zzzz* %1760, null
  br i1 %1761, label %.lr.ph48.10, label %.loopexit17.loopexit

.lr.ph48.10:                                      ; preds = %._crit_edge43.9
  call void @unroll_loop(i32 3)
  %1762 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1760, i32 0, i32 0
  %1763 = load i8*, i8** %1762, align 8
  %1764 = call i32 @strcmp(i8* %1763, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1765 = icmp eq i32 %1764, 0
  br i1 %1765, label %.loopexit17.loopexit, label %1766

; <label>:1766:                                   ; preds = %.lr.ph48.10
  %1767 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1760, i32 0, i32 0
  %1768 = load i8*, i8** %1767, align 8
  %1769 = load i8, i8* %1768, align 1
  %1770 = sext i8 %1769 to i32
  %1771 = icmp eq i32 %1770, 45
  br i1 %1771, label %1772, label %._crit_edge43.10

; <label>:1772:                                   ; preds = %1766
  %1773 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1760, i32 0, i32 0
  %1774 = load i8*, i8** %1773, align 8
  %1775 = getelementptr inbounds i8, i8* %1774, i64 1
  %1776 = load i8, i8* %1775, align 1
  %1777 = sext i8 %1776 to i32
  %1778 = icmp ne i32 %1777, 45
  br i1 %1778, label %1779, label %._crit_edge43.10

; <label>:1779:                                   ; preds = %1772
  %1780 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1760, i32 0, i32 0
  %1781 = load i8*, i8** %1780, align 8
  %1782 = getelementptr inbounds i8, i8* %1781, i64 1
  %1783 = load i8, i8* %1782, align 1
  %1784 = sext i8 %1783 to i32
  %1785 = icmp ne i32 %1784, 0
  br i1 %1785, label %.lr.ph42.preheader.10, label %._crit_edge43.10

.lr.ph42.preheader.10:                            ; preds = %1779
  %1786 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1760, i32 0, i32 0
  br label %.lr.ph42.10

.lr.ph42.10:                                      ; preds = %1811, %.lr.ph42.preheader.10
  %lsr.iv.10 = phi i64 [ 0, %.lr.ph42.preheader.10 ], [ %lsr.iv.next.10, %1811 ]
  call void @unroll_loop(i32 4)
  %1787 = load i8*, i8** %1786, align 8
  %scevgep.10 = getelementptr i8, i8* %1787, i64 1
  %scevgep1.10 = getelementptr i8, i8* %scevgep.10, i64 %lsr.iv.10
  %1788 = load i8, i8* %scevgep1.10, align 1
  %1789 = sext i8 %1788 to i32
  switch i32 %1789, label %.loopexit22 [
    i32 99, label %1810
    i32 100, label %1809
    i32 122, label %1808
    i32 102, label %1807
    i32 116, label %1806
    i32 107, label %1805
    i32 115, label %1804
    i32 113, label %1803
    i32 49, label %1802
    i32 50, label %1801
    i32 51, label %1800
    i32 52, label %1799
    i32 53, label %1798
    i32 54, label %1797
    i32 55, label %1796
    i32 56, label %1795
    i32 57, label %1794
    i32 86, label %1793
    i32 76, label %1793
    i32 118, label %1790
    i32 104, label %.loopexit23
  ]

; <label>:1790:                                   ; preds = %.lr.ph42.10
  %1791 = load i32, i32* @verbosity, align 4
  %1792 = add nsw i32 %1791, 1
  store i32 %1792, i32* @verbosity, align 4
  br label %1811

; <label>:1793:                                   ; preds = %.lr.ph42.10, %.lr.ph42.10
  call void @license()
  br label %1811

; <label>:1794:                                   ; preds = %.lr.ph42.10
  store i32 9, i32* @blockSize100k, align 4
  br label %1811

; <label>:1795:                                   ; preds = %.lr.ph42.10
  store i32 8, i32* @blockSize100k, align 4
  br label %1811

; <label>:1796:                                   ; preds = %.lr.ph42.10
  store i32 7, i32* @blockSize100k, align 4
  br label %1811

; <label>:1797:                                   ; preds = %.lr.ph42.10
  store i32 6, i32* @blockSize100k, align 4
  br label %1811

; <label>:1798:                                   ; preds = %.lr.ph42.10
  store i32 5, i32* @blockSize100k, align 4
  br label %1811

; <label>:1799:                                   ; preds = %.lr.ph42.10
  store i32 4, i32* @blockSize100k, align 4
  br label %1811

; <label>:1800:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @blockSize100k, align 4
  br label %1811

; <label>:1801:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @blockSize100k, align 4
  br label %1811

; <label>:1802:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @blockSize100k, align 4
  br label %1811

; <label>:1803:                                   ; preds = %.lr.ph42.10
  store i8 0, i8* @noisy, align 1
  br label %1811

; <label>:1804:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @smallMode, align 1
  br label %1811

; <label>:1805:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @keepInputFiles, align 1
  br label %1811

; <label>:1806:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @opMode, align 4
  br label %1811

; <label>:1807:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @forceOverwrite, align 1
  br label %1811

; <label>:1808:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @opMode, align 4
  br label %1811

; <label>:1809:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @opMode, align 4
  br label %1811

; <label>:1810:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @srcMode, align 4
  br label %1811

; <label>:1811:                                   ; preds = %1810, %1809, %1808, %1807, %1806, %1805, %1804, %1803, %1802, %1801, %1800, %1799, %1798, %1797, %1796, %1795, %1794, %1793, %1790
  %1812 = load i8*, i8** %1780, align 8
  %scevgep2.10 = getelementptr i8, i8* %1812, i64 2
  %scevgep3.10 = getelementptr i8, i8* %scevgep2.10, i64 %lsr.iv.10
  %1813 = load i8, i8* %scevgep3.10, align 1
  %1814 = sext i8 %1813 to i32
  %1815 = icmp ne i32 %1814, 0
  %lsr.iv.next.10 = add i64 %lsr.iv.10, 1
  br i1 %1815, label %.lr.ph42.10, label %._crit_edge43.loopexit.10

._crit_edge43.loopexit.10:                        ; preds = %1811
  br label %._crit_edge43.10

._crit_edge43.10:                                 ; preds = %._crit_edge43.loopexit.10, %1779, %1772, %1766
  call void @__loop_iteration_test___3()
  %1816 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1760, i32 0, i32 1
  %1817 = load %struct.zzzz*, %struct.zzzz** %1816, align 8
  %1818 = icmp ne %struct.zzzz* %1817, null
  br i1 %1818, label %.lr.ph48.11, label %.loopexit17.loopexit

.lr.ph48.11:                                      ; preds = %._crit_edge43.10
  call void @unroll_loop(i32 3)
  %1819 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1817, i32 0, i32 0
  %1820 = load i8*, i8** %1819, align 8
  %1821 = call i32 @strcmp(i8* %1820, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1822 = icmp eq i32 %1821, 0
  br i1 %1822, label %.loopexit17.loopexit, label %1823

; <label>:1823:                                   ; preds = %.lr.ph48.11
  %1824 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1817, i32 0, i32 0
  %1825 = load i8*, i8** %1824, align 8
  %1826 = load i8, i8* %1825, align 1
  %1827 = sext i8 %1826 to i32
  %1828 = icmp eq i32 %1827, 45
  br i1 %1828, label %1829, label %._crit_edge43.11

; <label>:1829:                                   ; preds = %1823
  %1830 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1817, i32 0, i32 0
  %1831 = load i8*, i8** %1830, align 8
  %1832 = getelementptr inbounds i8, i8* %1831, i64 1
  %1833 = load i8, i8* %1832, align 1
  %1834 = sext i8 %1833 to i32
  %1835 = icmp ne i32 %1834, 45
  br i1 %1835, label %1836, label %._crit_edge43.11

; <label>:1836:                                   ; preds = %1829
  %1837 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1817, i32 0, i32 0
  %1838 = load i8*, i8** %1837, align 8
  %1839 = getelementptr inbounds i8, i8* %1838, i64 1
  %1840 = load i8, i8* %1839, align 1
  %1841 = sext i8 %1840 to i32
  %1842 = icmp ne i32 %1841, 0
  br i1 %1842, label %.lr.ph42.preheader.11, label %._crit_edge43.11

.lr.ph42.preheader.11:                            ; preds = %1836
  %1843 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1817, i32 0, i32 0
  br label %.lr.ph42.11

.lr.ph42.11:                                      ; preds = %1868, %.lr.ph42.preheader.11
  %lsr.iv.11 = phi i64 [ 0, %.lr.ph42.preheader.11 ], [ %lsr.iv.next.11, %1868 ]
  call void @unroll_loop(i32 4)
  %1844 = load i8*, i8** %1843, align 8
  %scevgep.11 = getelementptr i8, i8* %1844, i64 1
  %scevgep1.11 = getelementptr i8, i8* %scevgep.11, i64 %lsr.iv.11
  %1845 = load i8, i8* %scevgep1.11, align 1
  %1846 = sext i8 %1845 to i32
  switch i32 %1846, label %.loopexit24 [
    i32 99, label %1867
    i32 100, label %1866
    i32 122, label %1865
    i32 102, label %1864
    i32 116, label %1863
    i32 107, label %1862
    i32 115, label %1861
    i32 113, label %1860
    i32 49, label %1859
    i32 50, label %1858
    i32 51, label %1857
    i32 52, label %1856
    i32 53, label %1855
    i32 54, label %1854
    i32 55, label %1853
    i32 56, label %1852
    i32 57, label %1851
    i32 86, label %1850
    i32 76, label %1850
    i32 118, label %1847
    i32 104, label %.loopexit25
  ]

; <label>:1847:                                   ; preds = %.lr.ph42.11
  %1848 = load i32, i32* @verbosity, align 4
  %1849 = add nsw i32 %1848, 1
  store i32 %1849, i32* @verbosity, align 4
  br label %1868

; <label>:1850:                                   ; preds = %.lr.ph42.11, %.lr.ph42.11
  call void @license()
  br label %1868

; <label>:1851:                                   ; preds = %.lr.ph42.11
  store i32 9, i32* @blockSize100k, align 4
  br label %1868

; <label>:1852:                                   ; preds = %.lr.ph42.11
  store i32 8, i32* @blockSize100k, align 4
  br label %1868

; <label>:1853:                                   ; preds = %.lr.ph42.11
  store i32 7, i32* @blockSize100k, align 4
  br label %1868

; <label>:1854:                                   ; preds = %.lr.ph42.11
  store i32 6, i32* @blockSize100k, align 4
  br label %1868

; <label>:1855:                                   ; preds = %.lr.ph42.11
  store i32 5, i32* @blockSize100k, align 4
  br label %1868

; <label>:1856:                                   ; preds = %.lr.ph42.11
  store i32 4, i32* @blockSize100k, align 4
  br label %1868

; <label>:1857:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @blockSize100k, align 4
  br label %1868

; <label>:1858:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @blockSize100k, align 4
  br label %1868

; <label>:1859:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @blockSize100k, align 4
  br label %1868

; <label>:1860:                                   ; preds = %.lr.ph42.11
  store i8 0, i8* @noisy, align 1
  br label %1868

; <label>:1861:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @smallMode, align 1
  br label %1868

; <label>:1862:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @keepInputFiles, align 1
  br label %1868

; <label>:1863:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @opMode, align 4
  br label %1868

; <label>:1864:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @forceOverwrite, align 1
  br label %1868

; <label>:1865:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @opMode, align 4
  br label %1868

; <label>:1866:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @opMode, align 4
  br label %1868

; <label>:1867:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @srcMode, align 4
  br label %1868

; <label>:1868:                                   ; preds = %1867, %1866, %1865, %1864, %1863, %1862, %1861, %1860, %1859, %1858, %1857, %1856, %1855, %1854, %1853, %1852, %1851, %1850, %1847
  %1869 = load i8*, i8** %1837, align 8
  %scevgep2.11 = getelementptr i8, i8* %1869, i64 2
  %scevgep3.11 = getelementptr i8, i8* %scevgep2.11, i64 %lsr.iv.11
  %1870 = load i8, i8* %scevgep3.11, align 1
  %1871 = sext i8 %1870 to i32
  %1872 = icmp ne i32 %1871, 0
  %lsr.iv.next.11 = add i64 %lsr.iv.11, 1
  br i1 %1872, label %.lr.ph42.11, label %._crit_edge43.loopexit.11

._crit_edge43.loopexit.11:                        ; preds = %1868
  br label %._crit_edge43.11

._crit_edge43.11:                                 ; preds = %._crit_edge43.loopexit.11, %1836, %1829, %1823
  call void @__loop_iteration_test___3()
  %1873 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1817, i32 0, i32 1
  %1874 = load %struct.zzzz*, %struct.zzzz** %1873, align 8
  %1875 = icmp ne %struct.zzzz* %1874, null
  br i1 %1875, label %.lr.ph48.12, label %.loopexit17.loopexit

.lr.ph48.12:                                      ; preds = %._crit_edge43.11
  call void @unroll_loop(i32 3)
  %1876 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1874, i32 0, i32 0
  %1877 = load i8*, i8** %1876, align 8
  %1878 = call i32 @strcmp(i8* %1877, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1879 = icmp eq i32 %1878, 0
  br i1 %1879, label %.loopexit17.loopexit, label %1880

; <label>:1880:                                   ; preds = %.lr.ph48.12
  %1881 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1874, i32 0, i32 0
  %1882 = load i8*, i8** %1881, align 8
  %1883 = load i8, i8* %1882, align 1
  %1884 = sext i8 %1883 to i32
  %1885 = icmp eq i32 %1884, 45
  br i1 %1885, label %1886, label %._crit_edge43.12

; <label>:1886:                                   ; preds = %1880
  %1887 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1874, i32 0, i32 0
  %1888 = load i8*, i8** %1887, align 8
  %1889 = getelementptr inbounds i8, i8* %1888, i64 1
  %1890 = load i8, i8* %1889, align 1
  %1891 = sext i8 %1890 to i32
  %1892 = icmp ne i32 %1891, 45
  br i1 %1892, label %1893, label %._crit_edge43.12

; <label>:1893:                                   ; preds = %1886
  %1894 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1874, i32 0, i32 0
  %1895 = load i8*, i8** %1894, align 8
  %1896 = getelementptr inbounds i8, i8* %1895, i64 1
  %1897 = load i8, i8* %1896, align 1
  %1898 = sext i8 %1897 to i32
  %1899 = icmp ne i32 %1898, 0
  br i1 %1899, label %.lr.ph42.preheader.12, label %._crit_edge43.12

.lr.ph42.preheader.12:                            ; preds = %1893
  %1900 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1874, i32 0, i32 0
  br label %.lr.ph42.12

.lr.ph42.12:                                      ; preds = %1925, %.lr.ph42.preheader.12
  %lsr.iv.12 = phi i64 [ 0, %.lr.ph42.preheader.12 ], [ %lsr.iv.next.12, %1925 ]
  call void @unroll_loop(i32 4)
  %1901 = load i8*, i8** %1900, align 8
  %scevgep.12 = getelementptr i8, i8* %1901, i64 1
  %scevgep1.12 = getelementptr i8, i8* %scevgep.12, i64 %lsr.iv.12
  %1902 = load i8, i8* %scevgep1.12, align 1
  %1903 = sext i8 %1902 to i32
  switch i32 %1903, label %.loopexit26 [
    i32 99, label %1924
    i32 100, label %1923
    i32 122, label %1922
    i32 102, label %1921
    i32 116, label %1920
    i32 107, label %1919
    i32 115, label %1918
    i32 113, label %1917
    i32 49, label %1916
    i32 50, label %1915
    i32 51, label %1914
    i32 52, label %1913
    i32 53, label %1912
    i32 54, label %1911
    i32 55, label %1910
    i32 56, label %1909
    i32 57, label %1908
    i32 86, label %1907
    i32 76, label %1907
    i32 118, label %1904
    i32 104, label %.loopexit27
  ]

; <label>:1904:                                   ; preds = %.lr.ph42.12
  %1905 = load i32, i32* @verbosity, align 4
  %1906 = add nsw i32 %1905, 1
  store i32 %1906, i32* @verbosity, align 4
  br label %1925

; <label>:1907:                                   ; preds = %.lr.ph42.12, %.lr.ph42.12
  call void @license()
  br label %1925

; <label>:1908:                                   ; preds = %.lr.ph42.12
  store i32 9, i32* @blockSize100k, align 4
  br label %1925

; <label>:1909:                                   ; preds = %.lr.ph42.12
  store i32 8, i32* @blockSize100k, align 4
  br label %1925

; <label>:1910:                                   ; preds = %.lr.ph42.12
  store i32 7, i32* @blockSize100k, align 4
  br label %1925

; <label>:1911:                                   ; preds = %.lr.ph42.12
  store i32 6, i32* @blockSize100k, align 4
  br label %1925

; <label>:1912:                                   ; preds = %.lr.ph42.12
  store i32 5, i32* @blockSize100k, align 4
  br label %1925

; <label>:1913:                                   ; preds = %.lr.ph42.12
  store i32 4, i32* @blockSize100k, align 4
  br label %1925

; <label>:1914:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @blockSize100k, align 4
  br label %1925

; <label>:1915:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @blockSize100k, align 4
  br label %1925

; <label>:1916:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @blockSize100k, align 4
  br label %1925

; <label>:1917:                                   ; preds = %.lr.ph42.12
  store i8 0, i8* @noisy, align 1
  br label %1925

; <label>:1918:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @smallMode, align 1
  br label %1925

; <label>:1919:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @keepInputFiles, align 1
  br label %1925

; <label>:1920:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @opMode, align 4
  br label %1925

; <label>:1921:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @forceOverwrite, align 1
  br label %1925

; <label>:1922:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @opMode, align 4
  br label %1925

; <label>:1923:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @opMode, align 4
  br label %1925

; <label>:1924:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @srcMode, align 4
  br label %1925

; <label>:1925:                                   ; preds = %1924, %1923, %1922, %1921, %1920, %1919, %1918, %1917, %1916, %1915, %1914, %1913, %1912, %1911, %1910, %1909, %1908, %1907, %1904
  %1926 = load i8*, i8** %1894, align 8
  %scevgep2.12 = getelementptr i8, i8* %1926, i64 2
  %scevgep3.12 = getelementptr i8, i8* %scevgep2.12, i64 %lsr.iv.12
  %1927 = load i8, i8* %scevgep3.12, align 1
  %1928 = sext i8 %1927 to i32
  %1929 = icmp ne i32 %1928, 0
  %lsr.iv.next.12 = add i64 %lsr.iv.12, 1
  br i1 %1929, label %.lr.ph42.12, label %._crit_edge43.loopexit.12

._crit_edge43.loopexit.12:                        ; preds = %1925
  br label %._crit_edge43.12

._crit_edge43.12:                                 ; preds = %._crit_edge43.loopexit.12, %1893, %1886, %1880
  call void @__loop_iteration_test___3()
  %1930 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1874, i32 0, i32 1
  %1931 = load %struct.zzzz*, %struct.zzzz** %1930, align 8
  %1932 = icmp ne %struct.zzzz* %1931, null
  br i1 %1932, label %.lr.ph48.13, label %.loopexit17.loopexit

.lr.ph48.13:                                      ; preds = %._crit_edge43.12
  call void @unroll_loop(i32 3)
  %1933 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1931, i32 0, i32 0
  %1934 = load i8*, i8** %1933, align 8
  %1935 = call i32 @strcmp(i8* %1934, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1936 = icmp eq i32 %1935, 0
  br i1 %1936, label %.loopexit17.loopexit, label %1937

; <label>:1937:                                   ; preds = %.lr.ph48.13
  %1938 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1931, i32 0, i32 0
  %1939 = load i8*, i8** %1938, align 8
  %1940 = load i8, i8* %1939, align 1
  %1941 = sext i8 %1940 to i32
  %1942 = icmp eq i32 %1941, 45
  br i1 %1942, label %1943, label %._crit_edge43.13

; <label>:1943:                                   ; preds = %1937
  %1944 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1931, i32 0, i32 0
  %1945 = load i8*, i8** %1944, align 8
  %1946 = getelementptr inbounds i8, i8* %1945, i64 1
  %1947 = load i8, i8* %1946, align 1
  %1948 = sext i8 %1947 to i32
  %1949 = icmp ne i32 %1948, 45
  br i1 %1949, label %1950, label %._crit_edge43.13

; <label>:1950:                                   ; preds = %1943
  %1951 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1931, i32 0, i32 0
  %1952 = load i8*, i8** %1951, align 8
  %1953 = getelementptr inbounds i8, i8* %1952, i64 1
  %1954 = load i8, i8* %1953, align 1
  %1955 = sext i8 %1954 to i32
  %1956 = icmp ne i32 %1955, 0
  br i1 %1956, label %.lr.ph42.preheader.13, label %._crit_edge43.13

.lr.ph42.preheader.13:                            ; preds = %1950
  %1957 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1931, i32 0, i32 0
  br label %.lr.ph42.13

.lr.ph42.13:                                      ; preds = %1982, %.lr.ph42.preheader.13
  %lsr.iv.13 = phi i64 [ 0, %.lr.ph42.preheader.13 ], [ %lsr.iv.next.13, %1982 ]
  call void @unroll_loop(i32 4)
  %1958 = load i8*, i8** %1957, align 8
  %scevgep.13 = getelementptr i8, i8* %1958, i64 1
  %scevgep1.13 = getelementptr i8, i8* %scevgep.13, i64 %lsr.iv.13
  %1959 = load i8, i8* %scevgep1.13, align 1
  %1960 = sext i8 %1959 to i32
  switch i32 %1960, label %.loopexit28 [
    i32 99, label %1981
    i32 100, label %1980
    i32 122, label %1979
    i32 102, label %1978
    i32 116, label %1977
    i32 107, label %1976
    i32 115, label %1975
    i32 113, label %1974
    i32 49, label %1973
    i32 50, label %1972
    i32 51, label %1971
    i32 52, label %1970
    i32 53, label %1969
    i32 54, label %1968
    i32 55, label %1967
    i32 56, label %1966
    i32 57, label %1965
    i32 86, label %1964
    i32 76, label %1964
    i32 118, label %1961
    i32 104, label %.loopexit29
  ]

; <label>:1961:                                   ; preds = %.lr.ph42.13
  %1962 = load i32, i32* @verbosity, align 4
  %1963 = add nsw i32 %1962, 1
  store i32 %1963, i32* @verbosity, align 4
  br label %1982

; <label>:1964:                                   ; preds = %.lr.ph42.13, %.lr.ph42.13
  call void @license()
  br label %1982

; <label>:1965:                                   ; preds = %.lr.ph42.13
  store i32 9, i32* @blockSize100k, align 4
  br label %1982

; <label>:1966:                                   ; preds = %.lr.ph42.13
  store i32 8, i32* @blockSize100k, align 4
  br label %1982

; <label>:1967:                                   ; preds = %.lr.ph42.13
  store i32 7, i32* @blockSize100k, align 4
  br label %1982

; <label>:1968:                                   ; preds = %.lr.ph42.13
  store i32 6, i32* @blockSize100k, align 4
  br label %1982

; <label>:1969:                                   ; preds = %.lr.ph42.13
  store i32 5, i32* @blockSize100k, align 4
  br label %1982

; <label>:1970:                                   ; preds = %.lr.ph42.13
  store i32 4, i32* @blockSize100k, align 4
  br label %1982

; <label>:1971:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @blockSize100k, align 4
  br label %1982

; <label>:1972:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @blockSize100k, align 4
  br label %1982

; <label>:1973:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @blockSize100k, align 4
  br label %1982

; <label>:1974:                                   ; preds = %.lr.ph42.13
  store i8 0, i8* @noisy, align 1
  br label %1982

; <label>:1975:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @smallMode, align 1
  br label %1982

; <label>:1976:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @keepInputFiles, align 1
  br label %1982

; <label>:1977:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @opMode, align 4
  br label %1982

; <label>:1978:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @forceOverwrite, align 1
  br label %1982

; <label>:1979:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @opMode, align 4
  br label %1982

; <label>:1980:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @opMode, align 4
  br label %1982

; <label>:1981:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @srcMode, align 4
  br label %1982

; <label>:1982:                                   ; preds = %1981, %1980, %1979, %1978, %1977, %1976, %1975, %1974, %1973, %1972, %1971, %1970, %1969, %1968, %1967, %1966, %1965, %1964, %1961
  %1983 = load i8*, i8** %1951, align 8
  %scevgep2.13 = getelementptr i8, i8* %1983, i64 2
  %scevgep3.13 = getelementptr i8, i8* %scevgep2.13, i64 %lsr.iv.13
  %1984 = load i8, i8* %scevgep3.13, align 1
  %1985 = sext i8 %1984 to i32
  %1986 = icmp ne i32 %1985, 0
  %lsr.iv.next.13 = add i64 %lsr.iv.13, 1
  br i1 %1986, label %.lr.ph42.13, label %._crit_edge43.loopexit.13

._crit_edge43.loopexit.13:                        ; preds = %1982
  br label %._crit_edge43.13

._crit_edge43.13:                                 ; preds = %._crit_edge43.loopexit.13, %1950, %1943, %1937
  call void @__loop_iteration_test___3()
  %1987 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1931, i32 0, i32 1
  %1988 = load %struct.zzzz*, %struct.zzzz** %1987, align 8
  %1989 = icmp ne %struct.zzzz* %1988, null
  br i1 %1989, label %.lr.ph48.14, label %.loopexit17.loopexit

.lr.ph48.14:                                      ; preds = %._crit_edge43.13
  call void @unroll_loop(i32 3)
  %1990 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1988, i32 0, i32 0
  %1991 = load i8*, i8** %1990, align 8
  %1992 = call i32 @strcmp(i8* %1991, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1993 = icmp eq i32 %1992, 0
  br i1 %1993, label %.loopexit17.loopexit, label %1994

; <label>:1994:                                   ; preds = %.lr.ph48.14
  %1995 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1988, i32 0, i32 0
  %1996 = load i8*, i8** %1995, align 8
  %1997 = load i8, i8* %1996, align 1
  %1998 = sext i8 %1997 to i32
  %1999 = icmp eq i32 %1998, 45
  br i1 %1999, label %2000, label %._crit_edge43.14

; <label>:2000:                                   ; preds = %1994
  %2001 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1988, i32 0, i32 0
  %2002 = load i8*, i8** %2001, align 8
  %2003 = getelementptr inbounds i8, i8* %2002, i64 1
  %2004 = load i8, i8* %2003, align 1
  %2005 = sext i8 %2004 to i32
  %2006 = icmp ne i32 %2005, 45
  br i1 %2006, label %2007, label %._crit_edge43.14

; <label>:2007:                                   ; preds = %2000
  %2008 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1988, i32 0, i32 0
  %2009 = load i8*, i8** %2008, align 8
  %2010 = getelementptr inbounds i8, i8* %2009, i64 1
  %2011 = load i8, i8* %2010, align 1
  %2012 = sext i8 %2011 to i32
  %2013 = icmp ne i32 %2012, 0
  br i1 %2013, label %.lr.ph42.preheader.14, label %._crit_edge43.14

.lr.ph42.preheader.14:                            ; preds = %2007
  %2014 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1988, i32 0, i32 0
  br label %.lr.ph42.14

.lr.ph42.14:                                      ; preds = %2039, %.lr.ph42.preheader.14
  %lsr.iv.14 = phi i64 [ 0, %.lr.ph42.preheader.14 ], [ %lsr.iv.next.14, %2039 ]
  call void @unroll_loop(i32 4)
  %2015 = load i8*, i8** %2014, align 8
  %scevgep.14 = getelementptr i8, i8* %2015, i64 1
  %scevgep1.14 = getelementptr i8, i8* %scevgep.14, i64 %lsr.iv.14
  %2016 = load i8, i8* %scevgep1.14, align 1
  %2017 = sext i8 %2016 to i32
  switch i32 %2017, label %.loopexit30 [
    i32 99, label %2038
    i32 100, label %2037
    i32 122, label %2036
    i32 102, label %2035
    i32 116, label %2034
    i32 107, label %2033
    i32 115, label %2032
    i32 113, label %2031
    i32 49, label %2030
    i32 50, label %2029
    i32 51, label %2028
    i32 52, label %2027
    i32 53, label %2026
    i32 54, label %2025
    i32 55, label %2024
    i32 56, label %2023
    i32 57, label %2022
    i32 86, label %2021
    i32 76, label %2021
    i32 118, label %2018
    i32 104, label %.loopexit31
  ]

; <label>:2018:                                   ; preds = %.lr.ph42.14
  %2019 = load i32, i32* @verbosity, align 4
  %2020 = add nsw i32 %2019, 1
  store i32 %2020, i32* @verbosity, align 4
  br label %2039

; <label>:2021:                                   ; preds = %.lr.ph42.14, %.lr.ph42.14
  call void @license()
  br label %2039

; <label>:2022:                                   ; preds = %.lr.ph42.14
  store i32 9, i32* @blockSize100k, align 4
  br label %2039

; <label>:2023:                                   ; preds = %.lr.ph42.14
  store i32 8, i32* @blockSize100k, align 4
  br label %2039

; <label>:2024:                                   ; preds = %.lr.ph42.14
  store i32 7, i32* @blockSize100k, align 4
  br label %2039

; <label>:2025:                                   ; preds = %.lr.ph42.14
  store i32 6, i32* @blockSize100k, align 4
  br label %2039

; <label>:2026:                                   ; preds = %.lr.ph42.14
  store i32 5, i32* @blockSize100k, align 4
  br label %2039

; <label>:2027:                                   ; preds = %.lr.ph42.14
  store i32 4, i32* @blockSize100k, align 4
  br label %2039

; <label>:2028:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @blockSize100k, align 4
  br label %2039

; <label>:2029:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @blockSize100k, align 4
  br label %2039

; <label>:2030:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @blockSize100k, align 4
  br label %2039

; <label>:2031:                                   ; preds = %.lr.ph42.14
  store i8 0, i8* @noisy, align 1
  br label %2039

; <label>:2032:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @smallMode, align 1
  br label %2039

; <label>:2033:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @keepInputFiles, align 1
  br label %2039

; <label>:2034:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @opMode, align 4
  br label %2039

; <label>:2035:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @forceOverwrite, align 1
  br label %2039

; <label>:2036:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @opMode, align 4
  br label %2039

; <label>:2037:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @opMode, align 4
  br label %2039

; <label>:2038:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @srcMode, align 4
  br label %2039

; <label>:2039:                                   ; preds = %2038, %2037, %2036, %2035, %2034, %2033, %2032, %2031, %2030, %2029, %2028, %2027, %2026, %2025, %2024, %2023, %2022, %2021, %2018
  %2040 = load i8*, i8** %2008, align 8
  %scevgep2.14 = getelementptr i8, i8* %2040, i64 2
  %scevgep3.14 = getelementptr i8, i8* %scevgep2.14, i64 %lsr.iv.14
  %2041 = load i8, i8* %scevgep3.14, align 1
  %2042 = sext i8 %2041 to i32
  %2043 = icmp ne i32 %2042, 0
  %lsr.iv.next.14 = add i64 %lsr.iv.14, 1
  br i1 %2043, label %.lr.ph42.14, label %._crit_edge43.loopexit.14

._crit_edge43.loopexit.14:                        ; preds = %2039
  br label %._crit_edge43.14

._crit_edge43.14:                                 ; preds = %._crit_edge43.loopexit.14, %2007, %2000, %1994
  call void @__loop_iteration_test___3()
  %2044 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1988, i32 0, i32 1
  %2045 = load %struct.zzzz*, %struct.zzzz** %2044, align 8
  %2046 = icmp ne %struct.zzzz* %2045, null
  br i1 %2046, label %.lr.ph48.15, label %.loopexit17.loopexit

.lr.ph48.15:                                      ; preds = %._crit_edge43.14
  call void @unroll_loop(i32 3)
  %2047 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2045, i32 0, i32 0
  %2048 = load i8*, i8** %2047, align 8
  %2049 = call i32 @strcmp(i8* %2048, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2050 = icmp eq i32 %2049, 0
  br i1 %2050, label %.loopexit17.loopexit, label %2051

; <label>:2051:                                   ; preds = %.lr.ph48.15
  %2052 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2045, i32 0, i32 0
  %2053 = load i8*, i8** %2052, align 8
  %2054 = load i8, i8* %2053, align 1
  %2055 = sext i8 %2054 to i32
  %2056 = icmp eq i32 %2055, 45
  br i1 %2056, label %2057, label %._crit_edge43.15

; <label>:2057:                                   ; preds = %2051
  %2058 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2045, i32 0, i32 0
  %2059 = load i8*, i8** %2058, align 8
  %2060 = getelementptr inbounds i8, i8* %2059, i64 1
  %2061 = load i8, i8* %2060, align 1
  %2062 = sext i8 %2061 to i32
  %2063 = icmp ne i32 %2062, 45
  br i1 %2063, label %2064, label %._crit_edge43.15

; <label>:2064:                                   ; preds = %2057
  %2065 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2045, i32 0, i32 0
  %2066 = load i8*, i8** %2065, align 8
  %2067 = getelementptr inbounds i8, i8* %2066, i64 1
  %2068 = load i8, i8* %2067, align 1
  %2069 = sext i8 %2068 to i32
  %2070 = icmp ne i32 %2069, 0
  br i1 %2070, label %.lr.ph42.preheader.15, label %._crit_edge43.15

.lr.ph42.preheader.15:                            ; preds = %2064
  %2071 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2045, i32 0, i32 0
  br label %.lr.ph42.15

.lr.ph42.15:                                      ; preds = %2096, %.lr.ph42.preheader.15
  %lsr.iv.15 = phi i64 [ 0, %.lr.ph42.preheader.15 ], [ %lsr.iv.next.15, %2096 ]
  call void @unroll_loop(i32 4)
  %2072 = load i8*, i8** %2071, align 8
  %scevgep.15 = getelementptr i8, i8* %2072, i64 1
  %scevgep1.15 = getelementptr i8, i8* %scevgep.15, i64 %lsr.iv.15
  %2073 = load i8, i8* %scevgep1.15, align 1
  %2074 = sext i8 %2073 to i32
  switch i32 %2074, label %.loopexit32 [
    i32 99, label %2095
    i32 100, label %2094
    i32 122, label %2093
    i32 102, label %2092
    i32 116, label %2091
    i32 107, label %2090
    i32 115, label %2089
    i32 113, label %2088
    i32 49, label %2087
    i32 50, label %2086
    i32 51, label %2085
    i32 52, label %2084
    i32 53, label %2083
    i32 54, label %2082
    i32 55, label %2081
    i32 56, label %2080
    i32 57, label %2079
    i32 86, label %2078
    i32 76, label %2078
    i32 118, label %2075
    i32 104, label %.loopexit33
  ]

; <label>:2075:                                   ; preds = %.lr.ph42.15
  %2076 = load i32, i32* @verbosity, align 4
  %2077 = add nsw i32 %2076, 1
  store i32 %2077, i32* @verbosity, align 4
  br label %2096

; <label>:2078:                                   ; preds = %.lr.ph42.15, %.lr.ph42.15
  call void @license()
  br label %2096

; <label>:2079:                                   ; preds = %.lr.ph42.15
  store i32 9, i32* @blockSize100k, align 4
  br label %2096

; <label>:2080:                                   ; preds = %.lr.ph42.15
  store i32 8, i32* @blockSize100k, align 4
  br label %2096

; <label>:2081:                                   ; preds = %.lr.ph42.15
  store i32 7, i32* @blockSize100k, align 4
  br label %2096

; <label>:2082:                                   ; preds = %.lr.ph42.15
  store i32 6, i32* @blockSize100k, align 4
  br label %2096

; <label>:2083:                                   ; preds = %.lr.ph42.15
  store i32 5, i32* @blockSize100k, align 4
  br label %2096

; <label>:2084:                                   ; preds = %.lr.ph42.15
  store i32 4, i32* @blockSize100k, align 4
  br label %2096

; <label>:2085:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @blockSize100k, align 4
  br label %2096

; <label>:2086:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @blockSize100k, align 4
  br label %2096

; <label>:2087:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @blockSize100k, align 4
  br label %2096

; <label>:2088:                                   ; preds = %.lr.ph42.15
  store i8 0, i8* @noisy, align 1
  br label %2096

; <label>:2089:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @smallMode, align 1
  br label %2096

; <label>:2090:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @keepInputFiles, align 1
  br label %2096

; <label>:2091:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @opMode, align 4
  br label %2096

; <label>:2092:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @forceOverwrite, align 1
  br label %2096

; <label>:2093:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @opMode, align 4
  br label %2096

; <label>:2094:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @opMode, align 4
  br label %2096

; <label>:2095:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @srcMode, align 4
  br label %2096

; <label>:2096:                                   ; preds = %2095, %2094, %2093, %2092, %2091, %2090, %2089, %2088, %2087, %2086, %2085, %2084, %2083, %2082, %2081, %2080, %2079, %2078, %2075
  %2097 = load i8*, i8** %2065, align 8
  %scevgep2.15 = getelementptr i8, i8* %2097, i64 2
  %scevgep3.15 = getelementptr i8, i8* %scevgep2.15, i64 %lsr.iv.15
  %2098 = load i8, i8* %scevgep3.15, align 1
  %2099 = sext i8 %2098 to i32
  %2100 = icmp ne i32 %2099, 0
  %lsr.iv.next.15 = add i64 %lsr.iv.15, 1
  br i1 %2100, label %.lr.ph42.15, label %._crit_edge43.loopexit.15

._crit_edge43.loopexit.15:                        ; preds = %2096
  br label %._crit_edge43.15

._crit_edge43.15:                                 ; preds = %._crit_edge43.loopexit.15, %2064, %2057, %2051
  call void @__loop_iteration_test___3()
  %2101 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2045, i32 0, i32 1
  %2102 = load %struct.zzzz*, %struct.zzzz** %2101, align 8
  %2103 = icmp ne %struct.zzzz* %2102, null
  br i1 %2103, label %.lr.ph48.16, label %.loopexit17.loopexit

.lr.ph48.16:                                      ; preds = %._crit_edge43.15
  call void @unroll_loop(i32 3)
  %2104 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2102, i32 0, i32 0
  %2105 = load i8*, i8** %2104, align 8
  %2106 = call i32 @strcmp(i8* %2105, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2107 = icmp eq i32 %2106, 0
  br i1 %2107, label %.loopexit17.loopexit, label %2108

; <label>:2108:                                   ; preds = %.lr.ph48.16
  %2109 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2102, i32 0, i32 0
  %2110 = load i8*, i8** %2109, align 8
  %2111 = load i8, i8* %2110, align 1
  %2112 = sext i8 %2111 to i32
  %2113 = icmp eq i32 %2112, 45
  br i1 %2113, label %2114, label %._crit_edge43.16

; <label>:2114:                                   ; preds = %2108
  %2115 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2102, i32 0, i32 0
  %2116 = load i8*, i8** %2115, align 8
  %2117 = getelementptr inbounds i8, i8* %2116, i64 1
  %2118 = load i8, i8* %2117, align 1
  %2119 = sext i8 %2118 to i32
  %2120 = icmp ne i32 %2119, 45
  br i1 %2120, label %2121, label %._crit_edge43.16

; <label>:2121:                                   ; preds = %2114
  %2122 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2102, i32 0, i32 0
  %2123 = load i8*, i8** %2122, align 8
  %2124 = getelementptr inbounds i8, i8* %2123, i64 1
  %2125 = load i8, i8* %2124, align 1
  %2126 = sext i8 %2125 to i32
  %2127 = icmp ne i32 %2126, 0
  br i1 %2127, label %.lr.ph42.preheader.16, label %._crit_edge43.16

.lr.ph42.preheader.16:                            ; preds = %2121
  %2128 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2102, i32 0, i32 0
  br label %.lr.ph42.16

.lr.ph42.16:                                      ; preds = %2153, %.lr.ph42.preheader.16
  %lsr.iv.16 = phi i64 [ 0, %.lr.ph42.preheader.16 ], [ %lsr.iv.next.16, %2153 ]
  call void @unroll_loop(i32 4)
  %2129 = load i8*, i8** %2128, align 8
  %scevgep.16 = getelementptr i8, i8* %2129, i64 1
  %scevgep1.16 = getelementptr i8, i8* %scevgep.16, i64 %lsr.iv.16
  %2130 = load i8, i8* %scevgep1.16, align 1
  %2131 = sext i8 %2130 to i32
  switch i32 %2131, label %.loopexit34 [
    i32 99, label %2152
    i32 100, label %2151
    i32 122, label %2150
    i32 102, label %2149
    i32 116, label %2148
    i32 107, label %2147
    i32 115, label %2146
    i32 113, label %2145
    i32 49, label %2144
    i32 50, label %2143
    i32 51, label %2142
    i32 52, label %2141
    i32 53, label %2140
    i32 54, label %2139
    i32 55, label %2138
    i32 56, label %2137
    i32 57, label %2136
    i32 86, label %2135
    i32 76, label %2135
    i32 118, label %2132
    i32 104, label %.loopexit35
  ]

; <label>:2132:                                   ; preds = %.lr.ph42.16
  %2133 = load i32, i32* @verbosity, align 4
  %2134 = add nsw i32 %2133, 1
  store i32 %2134, i32* @verbosity, align 4
  br label %2153

; <label>:2135:                                   ; preds = %.lr.ph42.16, %.lr.ph42.16
  call void @license()
  br label %2153

; <label>:2136:                                   ; preds = %.lr.ph42.16
  store i32 9, i32* @blockSize100k, align 4
  br label %2153

; <label>:2137:                                   ; preds = %.lr.ph42.16
  store i32 8, i32* @blockSize100k, align 4
  br label %2153

; <label>:2138:                                   ; preds = %.lr.ph42.16
  store i32 7, i32* @blockSize100k, align 4
  br label %2153

; <label>:2139:                                   ; preds = %.lr.ph42.16
  store i32 6, i32* @blockSize100k, align 4
  br label %2153

; <label>:2140:                                   ; preds = %.lr.ph42.16
  store i32 5, i32* @blockSize100k, align 4
  br label %2153

; <label>:2141:                                   ; preds = %.lr.ph42.16
  store i32 4, i32* @blockSize100k, align 4
  br label %2153

; <label>:2142:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @blockSize100k, align 4
  br label %2153

; <label>:2143:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @blockSize100k, align 4
  br label %2153

; <label>:2144:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @blockSize100k, align 4
  br label %2153

; <label>:2145:                                   ; preds = %.lr.ph42.16
  store i8 0, i8* @noisy, align 1
  br label %2153

; <label>:2146:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @smallMode, align 1
  br label %2153

; <label>:2147:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @keepInputFiles, align 1
  br label %2153

; <label>:2148:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @opMode, align 4
  br label %2153

; <label>:2149:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @forceOverwrite, align 1
  br label %2153

; <label>:2150:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @opMode, align 4
  br label %2153

; <label>:2151:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @opMode, align 4
  br label %2153

; <label>:2152:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @srcMode, align 4
  br label %2153

; <label>:2153:                                   ; preds = %2152, %2151, %2150, %2149, %2148, %2147, %2146, %2145, %2144, %2143, %2142, %2141, %2140, %2139, %2138, %2137, %2136, %2135, %2132
  %2154 = load i8*, i8** %2122, align 8
  %scevgep2.16 = getelementptr i8, i8* %2154, i64 2
  %scevgep3.16 = getelementptr i8, i8* %scevgep2.16, i64 %lsr.iv.16
  %2155 = load i8, i8* %scevgep3.16, align 1
  %2156 = sext i8 %2155 to i32
  %2157 = icmp ne i32 %2156, 0
  %lsr.iv.next.16 = add i64 %lsr.iv.16, 1
  br i1 %2157, label %.lr.ph42.16, label %._crit_edge43.loopexit.16

._crit_edge43.loopexit.16:                        ; preds = %2153
  br label %._crit_edge43.16

._crit_edge43.16:                                 ; preds = %._crit_edge43.loopexit.16, %2121, %2114, %2108
  call void @__loop_iteration_test___3()
  %2158 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2102, i32 0, i32 1
  %2159 = load %struct.zzzz*, %struct.zzzz** %2158, align 8
  %2160 = icmp ne %struct.zzzz* %2159, null
  br i1 %2160, label %.lr.ph48.17, label %.loopexit17.loopexit

.lr.ph48.17:                                      ; preds = %._crit_edge43.16
  call void @unroll_loop(i32 3)
  %2161 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2159, i32 0, i32 0
  %2162 = load i8*, i8** %2161, align 8
  %2163 = call i32 @strcmp(i8* %2162, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2164 = icmp eq i32 %2163, 0
  br i1 %2164, label %.loopexit17.loopexit, label %2165

; <label>:2165:                                   ; preds = %.lr.ph48.17
  %2166 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2159, i32 0, i32 0
  %2167 = load i8*, i8** %2166, align 8
  %2168 = load i8, i8* %2167, align 1
  %2169 = sext i8 %2168 to i32
  %2170 = icmp eq i32 %2169, 45
  br i1 %2170, label %2171, label %._crit_edge43.17

; <label>:2171:                                   ; preds = %2165
  %2172 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2159, i32 0, i32 0
  %2173 = load i8*, i8** %2172, align 8
  %2174 = getelementptr inbounds i8, i8* %2173, i64 1
  %2175 = load i8, i8* %2174, align 1
  %2176 = sext i8 %2175 to i32
  %2177 = icmp ne i32 %2176, 45
  br i1 %2177, label %2178, label %._crit_edge43.17

; <label>:2178:                                   ; preds = %2171
  %2179 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2159, i32 0, i32 0
  %2180 = load i8*, i8** %2179, align 8
  %2181 = getelementptr inbounds i8, i8* %2180, i64 1
  %2182 = load i8, i8* %2181, align 1
  %2183 = sext i8 %2182 to i32
  %2184 = icmp ne i32 %2183, 0
  br i1 %2184, label %.lr.ph42.preheader.17, label %._crit_edge43.17

.lr.ph42.preheader.17:                            ; preds = %2178
  %2185 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2159, i32 0, i32 0
  br label %.lr.ph42.17

.lr.ph42.17:                                      ; preds = %2210, %.lr.ph42.preheader.17
  %lsr.iv.17 = phi i64 [ 0, %.lr.ph42.preheader.17 ], [ %lsr.iv.next.17, %2210 ]
  call void @unroll_loop(i32 4)
  %2186 = load i8*, i8** %2185, align 8
  %scevgep.17 = getelementptr i8, i8* %2186, i64 1
  %scevgep1.17 = getelementptr i8, i8* %scevgep.17, i64 %lsr.iv.17
  %2187 = load i8, i8* %scevgep1.17, align 1
  %2188 = sext i8 %2187 to i32
  switch i32 %2188, label %.loopexit36 [
    i32 99, label %2209
    i32 100, label %2208
    i32 122, label %2207
    i32 102, label %2206
    i32 116, label %2205
    i32 107, label %2204
    i32 115, label %2203
    i32 113, label %2202
    i32 49, label %2201
    i32 50, label %2200
    i32 51, label %2199
    i32 52, label %2198
    i32 53, label %2197
    i32 54, label %2196
    i32 55, label %2195
    i32 56, label %2194
    i32 57, label %2193
    i32 86, label %2192
    i32 76, label %2192
    i32 118, label %2189
    i32 104, label %.loopexit37
  ]

; <label>:2189:                                   ; preds = %.lr.ph42.17
  %2190 = load i32, i32* @verbosity, align 4
  %2191 = add nsw i32 %2190, 1
  store i32 %2191, i32* @verbosity, align 4
  br label %2210

; <label>:2192:                                   ; preds = %.lr.ph42.17, %.lr.ph42.17
  call void @license()
  br label %2210

; <label>:2193:                                   ; preds = %.lr.ph42.17
  store i32 9, i32* @blockSize100k, align 4
  br label %2210

; <label>:2194:                                   ; preds = %.lr.ph42.17
  store i32 8, i32* @blockSize100k, align 4
  br label %2210

; <label>:2195:                                   ; preds = %.lr.ph42.17
  store i32 7, i32* @blockSize100k, align 4
  br label %2210

; <label>:2196:                                   ; preds = %.lr.ph42.17
  store i32 6, i32* @blockSize100k, align 4
  br label %2210

; <label>:2197:                                   ; preds = %.lr.ph42.17
  store i32 5, i32* @blockSize100k, align 4
  br label %2210

; <label>:2198:                                   ; preds = %.lr.ph42.17
  store i32 4, i32* @blockSize100k, align 4
  br label %2210

; <label>:2199:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @blockSize100k, align 4
  br label %2210

; <label>:2200:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @blockSize100k, align 4
  br label %2210

; <label>:2201:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @blockSize100k, align 4
  br label %2210

; <label>:2202:                                   ; preds = %.lr.ph42.17
  store i8 0, i8* @noisy, align 1
  br label %2210

; <label>:2203:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @smallMode, align 1
  br label %2210

; <label>:2204:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @keepInputFiles, align 1
  br label %2210

; <label>:2205:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @opMode, align 4
  br label %2210

; <label>:2206:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @forceOverwrite, align 1
  br label %2210

; <label>:2207:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @opMode, align 4
  br label %2210

; <label>:2208:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @opMode, align 4
  br label %2210

; <label>:2209:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @srcMode, align 4
  br label %2210

; <label>:2210:                                   ; preds = %2209, %2208, %2207, %2206, %2205, %2204, %2203, %2202, %2201, %2200, %2199, %2198, %2197, %2196, %2195, %2194, %2193, %2192, %2189
  %2211 = load i8*, i8** %2179, align 8
  %scevgep2.17 = getelementptr i8, i8* %2211, i64 2
  %scevgep3.17 = getelementptr i8, i8* %scevgep2.17, i64 %lsr.iv.17
  %2212 = load i8, i8* %scevgep3.17, align 1
  %2213 = sext i8 %2212 to i32
  %2214 = icmp ne i32 %2213, 0
  %lsr.iv.next.17 = add i64 %lsr.iv.17, 1
  br i1 %2214, label %.lr.ph42.17, label %._crit_edge43.loopexit.17

._crit_edge43.loopexit.17:                        ; preds = %2210
  br label %._crit_edge43.17

._crit_edge43.17:                                 ; preds = %._crit_edge43.loopexit.17, %2178, %2171, %2165
  call void @__loop_iteration_test___3()
  %2215 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2159, i32 0, i32 1
  %2216 = load %struct.zzzz*, %struct.zzzz** %2215, align 8
  %2217 = icmp ne %struct.zzzz* %2216, null
  br i1 %2217, label %.lr.ph48.18, label %.loopexit17.loopexit

.lr.ph48.18:                                      ; preds = %._crit_edge43.17
  call void @unroll_loop(i32 3)
  %2218 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2216, i32 0, i32 0
  %2219 = load i8*, i8** %2218, align 8
  %2220 = call i32 @strcmp(i8* %2219, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2221 = icmp eq i32 %2220, 0
  br i1 %2221, label %.loopexit17.loopexit, label %2222

; <label>:2222:                                   ; preds = %.lr.ph48.18
  %2223 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2216, i32 0, i32 0
  %2224 = load i8*, i8** %2223, align 8
  %2225 = load i8, i8* %2224, align 1
  %2226 = sext i8 %2225 to i32
  %2227 = icmp eq i32 %2226, 45
  br i1 %2227, label %2228, label %._crit_edge43.18

; <label>:2228:                                   ; preds = %2222
  %2229 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2216, i32 0, i32 0
  %2230 = load i8*, i8** %2229, align 8
  %2231 = getelementptr inbounds i8, i8* %2230, i64 1
  %2232 = load i8, i8* %2231, align 1
  %2233 = sext i8 %2232 to i32
  %2234 = icmp ne i32 %2233, 45
  br i1 %2234, label %2235, label %._crit_edge43.18

; <label>:2235:                                   ; preds = %2228
  %2236 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2216, i32 0, i32 0
  %2237 = load i8*, i8** %2236, align 8
  %2238 = getelementptr inbounds i8, i8* %2237, i64 1
  %2239 = load i8, i8* %2238, align 1
  %2240 = sext i8 %2239 to i32
  %2241 = icmp ne i32 %2240, 0
  br i1 %2241, label %.lr.ph42.preheader.18, label %._crit_edge43.18

.lr.ph42.preheader.18:                            ; preds = %2235
  %2242 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2216, i32 0, i32 0
  br label %.lr.ph42.18

.lr.ph42.18:                                      ; preds = %2267, %.lr.ph42.preheader.18
  %lsr.iv.18 = phi i64 [ 0, %.lr.ph42.preheader.18 ], [ %lsr.iv.next.18, %2267 ]
  call void @unroll_loop(i32 4)
  %2243 = load i8*, i8** %2242, align 8
  %scevgep.18 = getelementptr i8, i8* %2243, i64 1
  %scevgep1.18 = getelementptr i8, i8* %scevgep.18, i64 %lsr.iv.18
  %2244 = load i8, i8* %scevgep1.18, align 1
  %2245 = sext i8 %2244 to i32
  switch i32 %2245, label %.loopexit38 [
    i32 99, label %2266
    i32 100, label %2265
    i32 122, label %2264
    i32 102, label %2263
    i32 116, label %2262
    i32 107, label %2261
    i32 115, label %2260
    i32 113, label %2259
    i32 49, label %2258
    i32 50, label %2257
    i32 51, label %2256
    i32 52, label %2255
    i32 53, label %2254
    i32 54, label %2253
    i32 55, label %2252
    i32 56, label %2251
    i32 57, label %2250
    i32 86, label %2249
    i32 76, label %2249
    i32 118, label %2246
    i32 104, label %.loopexit39
  ]

; <label>:2246:                                   ; preds = %.lr.ph42.18
  %2247 = load i32, i32* @verbosity, align 4
  %2248 = add nsw i32 %2247, 1
  store i32 %2248, i32* @verbosity, align 4
  br label %2267

; <label>:2249:                                   ; preds = %.lr.ph42.18, %.lr.ph42.18
  call void @license()
  br label %2267

; <label>:2250:                                   ; preds = %.lr.ph42.18
  store i32 9, i32* @blockSize100k, align 4
  br label %2267

; <label>:2251:                                   ; preds = %.lr.ph42.18
  store i32 8, i32* @blockSize100k, align 4
  br label %2267

; <label>:2252:                                   ; preds = %.lr.ph42.18
  store i32 7, i32* @blockSize100k, align 4
  br label %2267

; <label>:2253:                                   ; preds = %.lr.ph42.18
  store i32 6, i32* @blockSize100k, align 4
  br label %2267

; <label>:2254:                                   ; preds = %.lr.ph42.18
  store i32 5, i32* @blockSize100k, align 4
  br label %2267

; <label>:2255:                                   ; preds = %.lr.ph42.18
  store i32 4, i32* @blockSize100k, align 4
  br label %2267

; <label>:2256:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @blockSize100k, align 4
  br label %2267

; <label>:2257:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @blockSize100k, align 4
  br label %2267

; <label>:2258:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @blockSize100k, align 4
  br label %2267

; <label>:2259:                                   ; preds = %.lr.ph42.18
  store i8 0, i8* @noisy, align 1
  br label %2267

; <label>:2260:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @smallMode, align 1
  br label %2267

; <label>:2261:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @keepInputFiles, align 1
  br label %2267

; <label>:2262:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @opMode, align 4
  br label %2267

; <label>:2263:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @forceOverwrite, align 1
  br label %2267

; <label>:2264:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @opMode, align 4
  br label %2267

; <label>:2265:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @opMode, align 4
  br label %2267

; <label>:2266:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @srcMode, align 4
  br label %2267

; <label>:2267:                                   ; preds = %2266, %2265, %2264, %2263, %2262, %2261, %2260, %2259, %2258, %2257, %2256, %2255, %2254, %2253, %2252, %2251, %2250, %2249, %2246
  %2268 = load i8*, i8** %2236, align 8
  %scevgep2.18 = getelementptr i8, i8* %2268, i64 2
  %scevgep3.18 = getelementptr i8, i8* %scevgep2.18, i64 %lsr.iv.18
  %2269 = load i8, i8* %scevgep3.18, align 1
  %2270 = sext i8 %2269 to i32
  %2271 = icmp ne i32 %2270, 0
  %lsr.iv.next.18 = add i64 %lsr.iv.18, 1
  br i1 %2271, label %.lr.ph42.18, label %._crit_edge43.loopexit.18

._crit_edge43.loopexit.18:                        ; preds = %2267
  br label %._crit_edge43.18

._crit_edge43.18:                                 ; preds = %._crit_edge43.loopexit.18, %2235, %2228, %2222
  call void @__loop_iteration_test___3()
  %2272 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2216, i32 0, i32 1
  %2273 = load %struct.zzzz*, %struct.zzzz** %2272, align 8
  %2274 = icmp ne %struct.zzzz* %2273, null
  br i1 %2274, label %.lr.ph48.19, label %.loopexit17.loopexit

.lr.ph48.19:                                      ; preds = %._crit_edge43.18
  call void @unroll_loop(i32 3)
  %2275 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2273, i32 0, i32 0
  %2276 = load i8*, i8** %2275, align 8
  %2277 = call i32 @strcmp(i8* %2276, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2278 = icmp eq i32 %2277, 0
  br i1 %2278, label %.loopexit17.loopexit, label %2279

; <label>:2279:                                   ; preds = %.lr.ph48.19
  %2280 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2273, i32 0, i32 0
  %2281 = load i8*, i8** %2280, align 8
  %2282 = load i8, i8* %2281, align 1
  %2283 = sext i8 %2282 to i32
  %2284 = icmp eq i32 %2283, 45
  br i1 %2284, label %2285, label %._crit_edge43.19

; <label>:2285:                                   ; preds = %2279
  %2286 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2273, i32 0, i32 0
  %2287 = load i8*, i8** %2286, align 8
  %2288 = getelementptr inbounds i8, i8* %2287, i64 1
  %2289 = load i8, i8* %2288, align 1
  %2290 = sext i8 %2289 to i32
  %2291 = icmp ne i32 %2290, 45
  br i1 %2291, label %2292, label %._crit_edge43.19

; <label>:2292:                                   ; preds = %2285
  %2293 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2273, i32 0, i32 0
  %2294 = load i8*, i8** %2293, align 8
  %2295 = getelementptr inbounds i8, i8* %2294, i64 1
  %2296 = load i8, i8* %2295, align 1
  %2297 = sext i8 %2296 to i32
  %2298 = icmp ne i32 %2297, 0
  br i1 %2298, label %.lr.ph42.preheader.19, label %._crit_edge43.19

.lr.ph42.preheader.19:                            ; preds = %2292
  %2299 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2273, i32 0, i32 0
  br label %.lr.ph42.19

.lr.ph42.19:                                      ; preds = %2324, %.lr.ph42.preheader.19
  %lsr.iv.19 = phi i64 [ 0, %.lr.ph42.preheader.19 ], [ %lsr.iv.next.19, %2324 ]
  call void @unroll_loop(i32 4)
  %2300 = load i8*, i8** %2299, align 8
  %scevgep.19 = getelementptr i8, i8* %2300, i64 1
  %scevgep1.19 = getelementptr i8, i8* %scevgep.19, i64 %lsr.iv.19
  %2301 = load i8, i8* %scevgep1.19, align 1
  %2302 = sext i8 %2301 to i32
  switch i32 %2302, label %.loopexit40 [
    i32 99, label %2323
    i32 100, label %2322
    i32 122, label %2321
    i32 102, label %2320
    i32 116, label %2319
    i32 107, label %2318
    i32 115, label %2317
    i32 113, label %2316
    i32 49, label %2315
    i32 50, label %2314
    i32 51, label %2313
    i32 52, label %2312
    i32 53, label %2311
    i32 54, label %2310
    i32 55, label %2309
    i32 56, label %2308
    i32 57, label %2307
    i32 86, label %2306
    i32 76, label %2306
    i32 118, label %2303
    i32 104, label %.loopexit41
  ]

; <label>:2303:                                   ; preds = %.lr.ph42.19
  %2304 = load i32, i32* @verbosity, align 4
  %2305 = add nsw i32 %2304, 1
  store i32 %2305, i32* @verbosity, align 4
  br label %2324

; <label>:2306:                                   ; preds = %.lr.ph42.19, %.lr.ph42.19
  call void @license()
  br label %2324

; <label>:2307:                                   ; preds = %.lr.ph42.19
  store i32 9, i32* @blockSize100k, align 4
  br label %2324

; <label>:2308:                                   ; preds = %.lr.ph42.19
  store i32 8, i32* @blockSize100k, align 4
  br label %2324

; <label>:2309:                                   ; preds = %.lr.ph42.19
  store i32 7, i32* @blockSize100k, align 4
  br label %2324

; <label>:2310:                                   ; preds = %.lr.ph42.19
  store i32 6, i32* @blockSize100k, align 4
  br label %2324

; <label>:2311:                                   ; preds = %.lr.ph42.19
  store i32 5, i32* @blockSize100k, align 4
  br label %2324

; <label>:2312:                                   ; preds = %.lr.ph42.19
  store i32 4, i32* @blockSize100k, align 4
  br label %2324

; <label>:2313:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @blockSize100k, align 4
  br label %2324

; <label>:2314:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @blockSize100k, align 4
  br label %2324

; <label>:2315:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @blockSize100k, align 4
  br label %2324

; <label>:2316:                                   ; preds = %.lr.ph42.19
  store i8 0, i8* @noisy, align 1
  br label %2324

; <label>:2317:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @smallMode, align 1
  br label %2324

; <label>:2318:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @keepInputFiles, align 1
  br label %2324

; <label>:2319:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @opMode, align 4
  br label %2324

; <label>:2320:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @forceOverwrite, align 1
  br label %2324

; <label>:2321:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @opMode, align 4
  br label %2324

; <label>:2322:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @opMode, align 4
  br label %2324

; <label>:2323:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @srcMode, align 4
  br label %2324

; <label>:2324:                                   ; preds = %2323, %2322, %2321, %2320, %2319, %2318, %2317, %2316, %2315, %2314, %2313, %2312, %2311, %2310, %2309, %2308, %2307, %2306, %2303
  %2325 = load i8*, i8** %2293, align 8
  %scevgep2.19 = getelementptr i8, i8* %2325, i64 2
  %scevgep3.19 = getelementptr i8, i8* %scevgep2.19, i64 %lsr.iv.19
  %2326 = load i8, i8* %scevgep3.19, align 1
  %2327 = sext i8 %2326 to i32
  %2328 = icmp ne i32 %2327, 0
  %lsr.iv.next.19 = add i64 %lsr.iv.19, 1
  br i1 %2328, label %.lr.ph42.19, label %._crit_edge43.loopexit.19

._crit_edge43.loopexit.19:                        ; preds = %2324
  br label %._crit_edge43.19

._crit_edge43.19:                                 ; preds = %._crit_edge43.loopexit.19, %2292, %2285, %2279
  call void @__loop_iteration_test___3()
  %2329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2273, i32 0, i32 1
  %2330 = load %struct.zzzz*, %struct.zzzz** %2329, align 8
  br label %.loopexit17.loopexit

.lr.ph42.113:                                     ; preds = %198
  call void @unroll_loop(i32 4)
  %2331 = load i8*, i8** %163, align 8
  %scevgep.111 = getelementptr i8, i8* %2331, i64 1
  %scevgep1.112 = getelementptr i8, i8* %scevgep.111, i64 1
  %2332 = load i8, i8* %scevgep1.112, align 1
  %2333 = sext i8 107 to i32
  switch i32 107, label %.loopexit1 [
    i32 99, label %2354
    i32 100, label %2353
    i32 122, label %2352
    i32 102, label %2351
    i32 116, label %2350
    i32 107, label %2349
    i32 115, label %2348
    i32 113, label %2347
    i32 49, label %2346
    i32 50, label %2345
    i32 51, label %2344
    i32 52, label %2343
    i32 53, label %2342
    i32 54, label %2341
    i32 55, label %2340
    i32 56, label %2339
    i32 57, label %2338
    i32 86, label %2337
    i32 76, label %2337
    i32 118, label %2334
    i32 104, label %.loopexit2
  ]

; <label>:2334:                                   ; preds = %.lr.ph42.113
  %2335 = load i32, i32* @verbosity, align 4
  %2336 = add nsw i32 %2335, 1
  store i32 %2336, i32* @verbosity, align 4
  br label %2355

; <label>:2337:                                   ; preds = %.lr.ph42.113, %.lr.ph42.113
  call void @license()
  br label %2355

; <label>:2338:                                   ; preds = %.lr.ph42.113
  store i32 9, i32* @blockSize100k, align 4
  br label %2355

; <label>:2339:                                   ; preds = %.lr.ph42.113
  store i32 8, i32* @blockSize100k, align 4
  br label %2355

; <label>:2340:                                   ; preds = %.lr.ph42.113
  store i32 7, i32* @blockSize100k, align 4
  br label %2355

; <label>:2341:                                   ; preds = %.lr.ph42.113
  store i32 6, i32* @blockSize100k, align 4
  br label %2355

; <label>:2342:                                   ; preds = %.lr.ph42.113
  store i32 5, i32* @blockSize100k, align 4
  br label %2355

; <label>:2343:                                   ; preds = %.lr.ph42.113
  store i32 4, i32* @blockSize100k, align 4
  br label %2355

; <label>:2344:                                   ; preds = %.lr.ph42.113
  store i32 3, i32* @blockSize100k, align 4
  br label %2355

; <label>:2345:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @blockSize100k, align 4
  br label %2355

; <label>:2346:                                   ; preds = %.lr.ph42.113
  store i32 1, i32* @blockSize100k, align 4
  br label %2355

; <label>:2347:                                   ; preds = %.lr.ph42.113
  store i8 0, i8* @noisy, align 1
  br label %2355

; <label>:2348:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @smallMode, align 1
  br label %2355

; <label>:2349:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @keepInputFiles, align 1
  br label %2355

; <label>:2350:                                   ; preds = %.lr.ph42.113
  store i32 3, i32* @opMode, align 4
  br label %2355

; <label>:2351:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @forceOverwrite, align 1
  br label %2355

; <label>:2352:                                   ; preds = %.lr.ph42.113
  store i32 1, i32* @opMode, align 4
  br label %2355

; <label>:2353:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @opMode, align 4
  br label %2355

; <label>:2354:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @srcMode, align 4
  br label %2355

; <label>:2355:                                   ; preds = %2354, %2353, %2352, %2351, %2350, %2349, %2348, %2347, %2346, %2345, %2344, %2343, %2342, %2341, %2340, %2339, %2338, %2337, %2334
  call void @__loop_iteration_test___4()
  %2356 = load i8*, i8** %157, align 8
  %scevgep2.114 = getelementptr i8, i8* %2356, i64 2
  %scevgep3.115 = getelementptr i8, i8* %scevgep2.114, i64 1
  %2357 = load i8, i8* %scevgep3.115, align 1
  %2358 = sext i8 113 to i32
  %2359 = icmp ne i32 113, 0
  br i1 true, label %.lr.ph42.220, label %._crit_edge43.loopexit

.lr.ph42.220:                                     ; preds = %2355
  call void @unroll_loop(i32 4)
  %2360 = load i8*, i8** %163, align 8
  %scevgep.218 = getelementptr i8, i8* %2360, i64 1
  %scevgep1.219 = getelementptr i8, i8* %scevgep.218, i64 2
  %2361 = load i8, i8* %scevgep1.219, align 1
  %2362 = sext i8 113 to i32
  switch i32 113, label %.loopexit1 [
    i32 99, label %2383
    i32 100, label %2382
    i32 122, label %2381
    i32 102, label %2380
    i32 116, label %2379
    i32 107, label %2378
    i32 115, label %2377
    i32 113, label %2376
    i32 49, label %2375
    i32 50, label %2374
    i32 51, label %2373
    i32 52, label %2372
    i32 53, label %2371
    i32 54, label %2370
    i32 55, label %2369
    i32 56, label %2368
    i32 57, label %2367
    i32 86, label %2366
    i32 76, label %2366
    i32 118, label %2363
    i32 104, label %.loopexit2
  ]

; <label>:2363:                                   ; preds = %.lr.ph42.220
  %2364 = load i32, i32* @verbosity, align 4
  %2365 = add nsw i32 %2364, 1
  store i32 %2365, i32* @verbosity, align 4
  br label %2384

; <label>:2366:                                   ; preds = %.lr.ph42.220, %.lr.ph42.220
  call void @license()
  br label %2384

; <label>:2367:                                   ; preds = %.lr.ph42.220
  store i32 9, i32* @blockSize100k, align 4
  br label %2384

; <label>:2368:                                   ; preds = %.lr.ph42.220
  store i32 8, i32* @blockSize100k, align 4
  br label %2384

; <label>:2369:                                   ; preds = %.lr.ph42.220
  store i32 7, i32* @blockSize100k, align 4
  br label %2384

; <label>:2370:                                   ; preds = %.lr.ph42.220
  store i32 6, i32* @blockSize100k, align 4
  br label %2384

; <label>:2371:                                   ; preds = %.lr.ph42.220
  store i32 5, i32* @blockSize100k, align 4
  br label %2384

; <label>:2372:                                   ; preds = %.lr.ph42.220
  store i32 4, i32* @blockSize100k, align 4
  br label %2384

; <label>:2373:                                   ; preds = %.lr.ph42.220
  store i32 3, i32* @blockSize100k, align 4
  br label %2384

; <label>:2374:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @blockSize100k, align 4
  br label %2384

; <label>:2375:                                   ; preds = %.lr.ph42.220
  store i32 1, i32* @blockSize100k, align 4
  br label %2384

; <label>:2376:                                   ; preds = %.lr.ph42.220
  store i8 0, i8* @noisy, align 1
  br label %2384

; <label>:2377:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @smallMode, align 1
  br label %2384

; <label>:2378:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @keepInputFiles, align 1
  br label %2384

; <label>:2379:                                   ; preds = %.lr.ph42.220
  store i32 3, i32* @opMode, align 4
  br label %2384

; <label>:2380:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @forceOverwrite, align 1
  br label %2384

; <label>:2381:                                   ; preds = %.lr.ph42.220
  store i32 1, i32* @opMode, align 4
  br label %2384

; <label>:2382:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @opMode, align 4
  br label %2384

; <label>:2383:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @srcMode, align 4
  br label %2384

; <label>:2384:                                   ; preds = %2383, %2382, %2381, %2380, %2379, %2378, %2377, %2376, %2375, %2374, %2373, %2372, %2371, %2370, %2369, %2368, %2367, %2366, %2363
  call void @__loop_iteration_test___4()
  %2385 = load i8*, i8** %157, align 8
  %scevgep2.221 = getelementptr i8, i8* %2385, i64 2
  %scevgep3.222 = getelementptr i8, i8* %scevgep2.221, i64 2
  %2386 = load i8, i8* %scevgep3.222, align 1
  %2387 = sext i8 115 to i32
  %2388 = icmp ne i32 115, 0
  br i1 true, label %.lr.ph42.327, label %._crit_edge43.loopexit

.lr.ph42.327:                                     ; preds = %2384
  call void @unroll_loop(i32 4)
  %2389 = load i8*, i8** %163, align 8
  %scevgep.325 = getelementptr i8, i8* %2389, i64 1
  %scevgep1.326 = getelementptr i8, i8* %scevgep.325, i64 3
  %2390 = load i8, i8* %scevgep1.326, align 1
  %2391 = sext i8 115 to i32
  switch i32 115, label %.loopexit1 [
    i32 99, label %2412
    i32 100, label %2411
    i32 122, label %2410
    i32 102, label %2409
    i32 116, label %2408
    i32 107, label %2407
    i32 115, label %2406
    i32 113, label %2405
    i32 49, label %2404
    i32 50, label %2403
    i32 51, label %2402
    i32 52, label %2401
    i32 53, label %2400
    i32 54, label %2399
    i32 55, label %2398
    i32 56, label %2397
    i32 57, label %2396
    i32 86, label %2395
    i32 76, label %2395
    i32 118, label %2392
    i32 104, label %.loopexit2
  ]

; <label>:2392:                                   ; preds = %.lr.ph42.327
  %2393 = load i32, i32* @verbosity, align 4
  %2394 = add nsw i32 %2393, 1
  store i32 %2394, i32* @verbosity, align 4
  br label %2413

; <label>:2395:                                   ; preds = %.lr.ph42.327, %.lr.ph42.327
  call void @license()
  br label %2413

; <label>:2396:                                   ; preds = %.lr.ph42.327
  store i32 9, i32* @blockSize100k, align 4
  br label %2413

; <label>:2397:                                   ; preds = %.lr.ph42.327
  store i32 8, i32* @blockSize100k, align 4
  br label %2413

; <label>:2398:                                   ; preds = %.lr.ph42.327
  store i32 7, i32* @blockSize100k, align 4
  br label %2413

; <label>:2399:                                   ; preds = %.lr.ph42.327
  store i32 6, i32* @blockSize100k, align 4
  br label %2413

; <label>:2400:                                   ; preds = %.lr.ph42.327
  store i32 5, i32* @blockSize100k, align 4
  br label %2413

; <label>:2401:                                   ; preds = %.lr.ph42.327
  store i32 4, i32* @blockSize100k, align 4
  br label %2413

; <label>:2402:                                   ; preds = %.lr.ph42.327
  store i32 3, i32* @blockSize100k, align 4
  br label %2413

; <label>:2403:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @blockSize100k, align 4
  br label %2413

; <label>:2404:                                   ; preds = %.lr.ph42.327
  store i32 1, i32* @blockSize100k, align 4
  br label %2413

; <label>:2405:                                   ; preds = %.lr.ph42.327
  store i8 0, i8* @noisy, align 1
  br label %2413

; <label>:2406:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @smallMode, align 1
  br label %2413

; <label>:2407:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @keepInputFiles, align 1
  br label %2413

; <label>:2408:                                   ; preds = %.lr.ph42.327
  store i32 3, i32* @opMode, align 4
  br label %2413

; <label>:2409:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @forceOverwrite, align 1
  br label %2413

; <label>:2410:                                   ; preds = %.lr.ph42.327
  store i32 1, i32* @opMode, align 4
  br label %2413

; <label>:2411:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @opMode, align 4
  br label %2413

; <label>:2412:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @srcMode, align 4
  br label %2413

; <label>:2413:                                   ; preds = %2412, %2411, %2410, %2409, %2408, %2407, %2406, %2405, %2404, %2403, %2402, %2401, %2400, %2399, %2398, %2397, %2396, %2395, %2392
  call void @__loop_iteration_test___4()
  %2414 = load i8*, i8** %157, align 8
  %scevgep2.328 = getelementptr i8, i8* %2414, i64 2
  %scevgep3.329 = getelementptr i8, i8* %scevgep2.328, i64 3
  %2415 = load i8, i8* %scevgep3.329, align 1
  %2416 = sext i8 0 to i32
  %2417 = icmp ne i32 0, 0
  br i1 false, label %.lr.ph42.434, label %._crit_edge43.loopexit

.lr.ph42.434:                                     ; preds = %2413
  call void @unroll_loop(i32 4)
  %2418 = load i8*, i8** %163, align 8
  %scevgep.432 = getelementptr i8, i8* %2418, i64 1
  %scevgep1.433 = getelementptr i8, i8* %scevgep.432, i64 4
  %2419 = load i8, i8* %scevgep1.433, align 1
  %2420 = sext i8 %2419 to i32
  switch i32 %2420, label %.loopexit1 [
    i32 99, label %2441
    i32 100, label %2440
    i32 122, label %2439
    i32 102, label %2438
    i32 116, label %2437
    i32 107, label %2436
    i32 115, label %2435
    i32 113, label %2434
    i32 49, label %2433
    i32 50, label %2432
    i32 51, label %2431
    i32 52, label %2430
    i32 53, label %2429
    i32 54, label %2428
    i32 55, label %2427
    i32 56, label %2426
    i32 57, label %2425
    i32 86, label %2424
    i32 76, label %2424
    i32 118, label %2421
    i32 104, label %.loopexit2
  ]

; <label>:2421:                                   ; preds = %.lr.ph42.434
  %2422 = load i32, i32* @verbosity, align 4
  %2423 = add nsw i32 %2422, 1
  store i32 %2423, i32* @verbosity, align 4
  br label %2442

; <label>:2424:                                   ; preds = %.lr.ph42.434, %.lr.ph42.434
  call void @license()
  br label %2442

; <label>:2425:                                   ; preds = %.lr.ph42.434
  store i32 9, i32* @blockSize100k, align 4
  br label %2442

; <label>:2426:                                   ; preds = %.lr.ph42.434
  store i32 8, i32* @blockSize100k, align 4
  br label %2442

; <label>:2427:                                   ; preds = %.lr.ph42.434
  store i32 7, i32* @blockSize100k, align 4
  br label %2442

; <label>:2428:                                   ; preds = %.lr.ph42.434
  store i32 6, i32* @blockSize100k, align 4
  br label %2442

; <label>:2429:                                   ; preds = %.lr.ph42.434
  store i32 5, i32* @blockSize100k, align 4
  br label %2442

; <label>:2430:                                   ; preds = %.lr.ph42.434
  store i32 4, i32* @blockSize100k, align 4
  br label %2442

; <label>:2431:                                   ; preds = %.lr.ph42.434
  store i32 3, i32* @blockSize100k, align 4
  br label %2442

; <label>:2432:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @blockSize100k, align 4
  br label %2442

; <label>:2433:                                   ; preds = %.lr.ph42.434
  store i32 1, i32* @blockSize100k, align 4
  br label %2442

; <label>:2434:                                   ; preds = %.lr.ph42.434
  store i8 0, i8* @noisy, align 1
  br label %2442

; <label>:2435:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @smallMode, align 1
  br label %2442

; <label>:2436:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @keepInputFiles, align 1
  br label %2442

; <label>:2437:                                   ; preds = %.lr.ph42.434
  store i32 3, i32* @opMode, align 4
  br label %2442

; <label>:2438:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @forceOverwrite, align 1
  br label %2442

; <label>:2439:                                   ; preds = %.lr.ph42.434
  store i32 1, i32* @opMode, align 4
  br label %2442

; <label>:2440:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @opMode, align 4
  br label %2442

; <label>:2441:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @srcMode, align 4
  br label %2442

; <label>:2442:                                   ; preds = %2441, %2440, %2439, %2438, %2437, %2436, %2435, %2434, %2433, %2432, %2431, %2430, %2429, %2428, %2427, %2426, %2425, %2424, %2421
  call void @__loop_iteration_test___4()
  %2443 = load i8*, i8** %157, align 8
  %scevgep2.435 = getelementptr i8, i8* %2443, i64 2
  %scevgep3.436 = getelementptr i8, i8* %scevgep2.435, i64 4
  %2444 = load i8, i8* %scevgep3.436, align 1
  %2445 = sext i8 %2444 to i32
  %2446 = icmp ne i32 %2445, 0
  br i1 %2446, label %.lr.ph42.541, label %._crit_edge43.loopexit

.lr.ph42.541:                                     ; preds = %2442
  call void @unroll_loop(i32 4)
  %2447 = load i8*, i8** %163, align 8
  %scevgep.539 = getelementptr i8, i8* %2447, i64 1
  %scevgep1.540 = getelementptr i8, i8* %scevgep.539, i64 5
  %2448 = load i8, i8* %scevgep1.540, align 1
  %2449 = sext i8 %2448 to i32
  switch i32 %2449, label %.loopexit1 [
    i32 99, label %2470
    i32 100, label %2469
    i32 122, label %2468
    i32 102, label %2467
    i32 116, label %2466
    i32 107, label %2465
    i32 115, label %2464
    i32 113, label %2463
    i32 49, label %2462
    i32 50, label %2461
    i32 51, label %2460
    i32 52, label %2459
    i32 53, label %2458
    i32 54, label %2457
    i32 55, label %2456
    i32 56, label %2455
    i32 57, label %2454
    i32 86, label %2453
    i32 76, label %2453
    i32 118, label %2450
    i32 104, label %.loopexit2
  ]

; <label>:2450:                                   ; preds = %.lr.ph42.541
  %2451 = load i32, i32* @verbosity, align 4
  %2452 = add nsw i32 %2451, 1
  store i32 %2452, i32* @verbosity, align 4
  br label %2471

; <label>:2453:                                   ; preds = %.lr.ph42.541, %.lr.ph42.541
  call void @license()
  br label %2471

; <label>:2454:                                   ; preds = %.lr.ph42.541
  store i32 9, i32* @blockSize100k, align 4
  br label %2471

; <label>:2455:                                   ; preds = %.lr.ph42.541
  store i32 8, i32* @blockSize100k, align 4
  br label %2471

; <label>:2456:                                   ; preds = %.lr.ph42.541
  store i32 7, i32* @blockSize100k, align 4
  br label %2471

; <label>:2457:                                   ; preds = %.lr.ph42.541
  store i32 6, i32* @blockSize100k, align 4
  br label %2471

; <label>:2458:                                   ; preds = %.lr.ph42.541
  store i32 5, i32* @blockSize100k, align 4
  br label %2471

; <label>:2459:                                   ; preds = %.lr.ph42.541
  store i32 4, i32* @blockSize100k, align 4
  br label %2471

; <label>:2460:                                   ; preds = %.lr.ph42.541
  store i32 3, i32* @blockSize100k, align 4
  br label %2471

; <label>:2461:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @blockSize100k, align 4
  br label %2471

; <label>:2462:                                   ; preds = %.lr.ph42.541
  store i32 1, i32* @blockSize100k, align 4
  br label %2471

; <label>:2463:                                   ; preds = %.lr.ph42.541
  store i8 0, i8* @noisy, align 1
  br label %2471

; <label>:2464:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @smallMode, align 1
  br label %2471

; <label>:2465:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @keepInputFiles, align 1
  br label %2471

; <label>:2466:                                   ; preds = %.lr.ph42.541
  store i32 3, i32* @opMode, align 4
  br label %2471

; <label>:2467:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @forceOverwrite, align 1
  br label %2471

; <label>:2468:                                   ; preds = %.lr.ph42.541
  store i32 1, i32* @opMode, align 4
  br label %2471

; <label>:2469:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @opMode, align 4
  br label %2471

; <label>:2470:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @srcMode, align 4
  br label %2471

; <label>:2471:                                   ; preds = %2470, %2469, %2468, %2467, %2466, %2465, %2464, %2463, %2462, %2461, %2460, %2459, %2458, %2457, %2456, %2455, %2454, %2453, %2450
  call void @__loop_iteration_test___4()
  %2472 = load i8*, i8** %157, align 8
  %scevgep2.542 = getelementptr i8, i8* %2472, i64 2
  %scevgep3.543 = getelementptr i8, i8* %scevgep2.542, i64 5
  %2473 = load i8, i8* %scevgep3.543, align 1
  %2474 = sext i8 %2473 to i32
  %2475 = icmp ne i32 %2474, 0
  br i1 %2475, label %.lr.ph42.648, label %._crit_edge43.loopexit

.lr.ph42.648:                                     ; preds = %2471
  call void @unroll_loop(i32 4)
  %2476 = load i8*, i8** %163, align 8
  %scevgep.646 = getelementptr i8, i8* %2476, i64 1
  %scevgep1.647 = getelementptr i8, i8* %scevgep.646, i64 6
  %2477 = load i8, i8* %scevgep1.647, align 1
  %2478 = sext i8 %2477 to i32
  switch i32 %2478, label %.loopexit1 [
    i32 99, label %2499
    i32 100, label %2498
    i32 122, label %2497
    i32 102, label %2496
    i32 116, label %2495
    i32 107, label %2494
    i32 115, label %2493
    i32 113, label %2492
    i32 49, label %2491
    i32 50, label %2490
    i32 51, label %2489
    i32 52, label %2488
    i32 53, label %2487
    i32 54, label %2486
    i32 55, label %2485
    i32 56, label %2484
    i32 57, label %2483
    i32 86, label %2482
    i32 76, label %2482
    i32 118, label %2479
    i32 104, label %.loopexit2
  ]

; <label>:2479:                                   ; preds = %.lr.ph42.648
  %2480 = load i32, i32* @verbosity, align 4
  %2481 = add nsw i32 %2480, 1
  store i32 %2481, i32* @verbosity, align 4
  br label %2500

; <label>:2482:                                   ; preds = %.lr.ph42.648, %.lr.ph42.648
  call void @license()
  br label %2500

; <label>:2483:                                   ; preds = %.lr.ph42.648
  store i32 9, i32* @blockSize100k, align 4
  br label %2500

; <label>:2484:                                   ; preds = %.lr.ph42.648
  store i32 8, i32* @blockSize100k, align 4
  br label %2500

; <label>:2485:                                   ; preds = %.lr.ph42.648
  store i32 7, i32* @blockSize100k, align 4
  br label %2500

; <label>:2486:                                   ; preds = %.lr.ph42.648
  store i32 6, i32* @blockSize100k, align 4
  br label %2500

; <label>:2487:                                   ; preds = %.lr.ph42.648
  store i32 5, i32* @blockSize100k, align 4
  br label %2500

; <label>:2488:                                   ; preds = %.lr.ph42.648
  store i32 4, i32* @blockSize100k, align 4
  br label %2500

; <label>:2489:                                   ; preds = %.lr.ph42.648
  store i32 3, i32* @blockSize100k, align 4
  br label %2500

; <label>:2490:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @blockSize100k, align 4
  br label %2500

; <label>:2491:                                   ; preds = %.lr.ph42.648
  store i32 1, i32* @blockSize100k, align 4
  br label %2500

; <label>:2492:                                   ; preds = %.lr.ph42.648
  store i8 0, i8* @noisy, align 1
  br label %2500

; <label>:2493:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @smallMode, align 1
  br label %2500

; <label>:2494:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @keepInputFiles, align 1
  br label %2500

; <label>:2495:                                   ; preds = %.lr.ph42.648
  store i32 3, i32* @opMode, align 4
  br label %2500

; <label>:2496:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @forceOverwrite, align 1
  br label %2500

; <label>:2497:                                   ; preds = %.lr.ph42.648
  store i32 1, i32* @opMode, align 4
  br label %2500

; <label>:2498:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @opMode, align 4
  br label %2500

; <label>:2499:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @srcMode, align 4
  br label %2500

; <label>:2500:                                   ; preds = %2499, %2498, %2497, %2496, %2495, %2494, %2493, %2492, %2491, %2490, %2489, %2488, %2487, %2486, %2485, %2484, %2483, %2482, %2479
  call void @__loop_iteration_test___4()
  %2501 = load i8*, i8** %157, align 8
  %scevgep2.649 = getelementptr i8, i8* %2501, i64 2
  %scevgep3.650 = getelementptr i8, i8* %scevgep2.649, i64 6
  %2502 = load i8, i8* %scevgep3.650, align 1
  %2503 = sext i8 %2502 to i32
  %2504 = icmp ne i32 %2503, 0
  br i1 %2504, label %.lr.ph42.755, label %._crit_edge43.loopexit

.lr.ph42.755:                                     ; preds = %2500
  call void @unroll_loop(i32 4)
  %2505 = load i8*, i8** %163, align 8
  %scevgep.753 = getelementptr i8, i8* %2505, i64 1
  %scevgep1.754 = getelementptr i8, i8* %scevgep.753, i64 7
  %2506 = load i8, i8* %scevgep1.754, align 1
  %2507 = sext i8 %2506 to i32
  switch i32 %2507, label %.loopexit1 [
    i32 99, label %2528
    i32 100, label %2527
    i32 122, label %2526
    i32 102, label %2525
    i32 116, label %2524
    i32 107, label %2523
    i32 115, label %2522
    i32 113, label %2521
    i32 49, label %2520
    i32 50, label %2519
    i32 51, label %2518
    i32 52, label %2517
    i32 53, label %2516
    i32 54, label %2515
    i32 55, label %2514
    i32 56, label %2513
    i32 57, label %2512
    i32 86, label %2511
    i32 76, label %2511
    i32 118, label %2508
    i32 104, label %.loopexit2
  ]

; <label>:2508:                                   ; preds = %.lr.ph42.755
  %2509 = load i32, i32* @verbosity, align 4
  %2510 = add nsw i32 %2509, 1
  store i32 %2510, i32* @verbosity, align 4
  br label %2529

; <label>:2511:                                   ; preds = %.lr.ph42.755, %.lr.ph42.755
  call void @license()
  br label %2529

; <label>:2512:                                   ; preds = %.lr.ph42.755
  store i32 9, i32* @blockSize100k, align 4
  br label %2529

; <label>:2513:                                   ; preds = %.lr.ph42.755
  store i32 8, i32* @blockSize100k, align 4
  br label %2529

; <label>:2514:                                   ; preds = %.lr.ph42.755
  store i32 7, i32* @blockSize100k, align 4
  br label %2529

; <label>:2515:                                   ; preds = %.lr.ph42.755
  store i32 6, i32* @blockSize100k, align 4
  br label %2529

; <label>:2516:                                   ; preds = %.lr.ph42.755
  store i32 5, i32* @blockSize100k, align 4
  br label %2529

; <label>:2517:                                   ; preds = %.lr.ph42.755
  store i32 4, i32* @blockSize100k, align 4
  br label %2529

; <label>:2518:                                   ; preds = %.lr.ph42.755
  store i32 3, i32* @blockSize100k, align 4
  br label %2529

; <label>:2519:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @blockSize100k, align 4
  br label %2529

; <label>:2520:                                   ; preds = %.lr.ph42.755
  store i32 1, i32* @blockSize100k, align 4
  br label %2529

; <label>:2521:                                   ; preds = %.lr.ph42.755
  store i8 0, i8* @noisy, align 1
  br label %2529

; <label>:2522:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @smallMode, align 1
  br label %2529

; <label>:2523:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @keepInputFiles, align 1
  br label %2529

; <label>:2524:                                   ; preds = %.lr.ph42.755
  store i32 3, i32* @opMode, align 4
  br label %2529

; <label>:2525:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @forceOverwrite, align 1
  br label %2529

; <label>:2526:                                   ; preds = %.lr.ph42.755
  store i32 1, i32* @opMode, align 4
  br label %2529

; <label>:2527:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @opMode, align 4
  br label %2529

; <label>:2528:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @srcMode, align 4
  br label %2529

; <label>:2529:                                   ; preds = %2528, %2527, %2526, %2525, %2524, %2523, %2522, %2521, %2520, %2519, %2518, %2517, %2516, %2515, %2514, %2513, %2512, %2511, %2508
  call void @__loop_iteration_test___4()
  %2530 = load i8*, i8** %157, align 8
  %scevgep2.756 = getelementptr i8, i8* %2530, i64 2
  %scevgep3.757 = getelementptr i8, i8* %scevgep2.756, i64 7
  %2531 = load i8, i8* %scevgep3.757, align 1
  %2532 = sext i8 %2531 to i32
  %2533 = icmp ne i32 %2532, 0
  br i1 %2533, label %.lr.ph42.862, label %._crit_edge43.loopexit

.lr.ph42.862:                                     ; preds = %2529
  call void @unroll_loop(i32 4)
  %2534 = load i8*, i8** %163, align 8
  %scevgep.860 = getelementptr i8, i8* %2534, i64 1
  %scevgep1.861 = getelementptr i8, i8* %scevgep.860, i64 8
  %2535 = load i8, i8* %scevgep1.861, align 1
  %2536 = sext i8 %2535 to i32
  switch i32 %2536, label %.loopexit1 [
    i32 99, label %2557
    i32 100, label %2556
    i32 122, label %2555
    i32 102, label %2554
    i32 116, label %2553
    i32 107, label %2552
    i32 115, label %2551
    i32 113, label %2550
    i32 49, label %2549
    i32 50, label %2548
    i32 51, label %2547
    i32 52, label %2546
    i32 53, label %2545
    i32 54, label %2544
    i32 55, label %2543
    i32 56, label %2542
    i32 57, label %2541
    i32 86, label %2540
    i32 76, label %2540
    i32 118, label %2537
    i32 104, label %.loopexit2
  ]

; <label>:2537:                                   ; preds = %.lr.ph42.862
  %2538 = load i32, i32* @verbosity, align 4
  %2539 = add nsw i32 %2538, 1
  store i32 %2539, i32* @verbosity, align 4
  br label %2558

; <label>:2540:                                   ; preds = %.lr.ph42.862, %.lr.ph42.862
  call void @license()
  br label %2558

; <label>:2541:                                   ; preds = %.lr.ph42.862
  store i32 9, i32* @blockSize100k, align 4
  br label %2558

; <label>:2542:                                   ; preds = %.lr.ph42.862
  store i32 8, i32* @blockSize100k, align 4
  br label %2558

; <label>:2543:                                   ; preds = %.lr.ph42.862
  store i32 7, i32* @blockSize100k, align 4
  br label %2558

; <label>:2544:                                   ; preds = %.lr.ph42.862
  store i32 6, i32* @blockSize100k, align 4
  br label %2558

; <label>:2545:                                   ; preds = %.lr.ph42.862
  store i32 5, i32* @blockSize100k, align 4
  br label %2558

; <label>:2546:                                   ; preds = %.lr.ph42.862
  store i32 4, i32* @blockSize100k, align 4
  br label %2558

; <label>:2547:                                   ; preds = %.lr.ph42.862
  store i32 3, i32* @blockSize100k, align 4
  br label %2558

; <label>:2548:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @blockSize100k, align 4
  br label %2558

; <label>:2549:                                   ; preds = %.lr.ph42.862
  store i32 1, i32* @blockSize100k, align 4
  br label %2558

; <label>:2550:                                   ; preds = %.lr.ph42.862
  store i8 0, i8* @noisy, align 1
  br label %2558

; <label>:2551:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @smallMode, align 1
  br label %2558

; <label>:2552:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @keepInputFiles, align 1
  br label %2558

; <label>:2553:                                   ; preds = %.lr.ph42.862
  store i32 3, i32* @opMode, align 4
  br label %2558

; <label>:2554:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @forceOverwrite, align 1
  br label %2558

; <label>:2555:                                   ; preds = %.lr.ph42.862
  store i32 1, i32* @opMode, align 4
  br label %2558

; <label>:2556:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @opMode, align 4
  br label %2558

; <label>:2557:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @srcMode, align 4
  br label %2558

; <label>:2558:                                   ; preds = %2557, %2556, %2555, %2554, %2553, %2552, %2551, %2550, %2549, %2548, %2547, %2546, %2545, %2544, %2543, %2542, %2541, %2540, %2537
  call void @__loop_iteration_test___4()
  %2559 = load i8*, i8** %157, align 8
  %scevgep2.863 = getelementptr i8, i8* %2559, i64 2
  %scevgep3.864 = getelementptr i8, i8* %scevgep2.863, i64 8
  %2560 = load i8, i8* %scevgep3.864, align 1
  %2561 = sext i8 %2560 to i32
  %2562 = icmp ne i32 %2561, 0
  br i1 %2562, label %.lr.ph42.969, label %._crit_edge43.loopexit

.lr.ph42.969:                                     ; preds = %2558
  call void @unroll_loop(i32 4)
  %2563 = load i8*, i8** %163, align 8
  %scevgep.967 = getelementptr i8, i8* %2563, i64 1
  %scevgep1.968 = getelementptr i8, i8* %scevgep.967, i64 9
  %2564 = load i8, i8* %scevgep1.968, align 1
  %2565 = sext i8 %2564 to i32
  switch i32 %2565, label %.loopexit1 [
    i32 99, label %2586
    i32 100, label %2585
    i32 122, label %2584
    i32 102, label %2583
    i32 116, label %2582
    i32 107, label %2581
    i32 115, label %2580
    i32 113, label %2579
    i32 49, label %2578
    i32 50, label %2577
    i32 51, label %2576
    i32 52, label %2575
    i32 53, label %2574
    i32 54, label %2573
    i32 55, label %2572
    i32 56, label %2571
    i32 57, label %2570
    i32 86, label %2569
    i32 76, label %2569
    i32 118, label %2566
    i32 104, label %.loopexit2
  ]

; <label>:2566:                                   ; preds = %.lr.ph42.969
  %2567 = load i32, i32* @verbosity, align 4
  %2568 = add nsw i32 %2567, 1
  store i32 %2568, i32* @verbosity, align 4
  br label %2587

; <label>:2569:                                   ; preds = %.lr.ph42.969, %.lr.ph42.969
  call void @license()
  br label %2587

; <label>:2570:                                   ; preds = %.lr.ph42.969
  store i32 9, i32* @blockSize100k, align 4
  br label %2587

; <label>:2571:                                   ; preds = %.lr.ph42.969
  store i32 8, i32* @blockSize100k, align 4
  br label %2587

; <label>:2572:                                   ; preds = %.lr.ph42.969
  store i32 7, i32* @blockSize100k, align 4
  br label %2587

; <label>:2573:                                   ; preds = %.lr.ph42.969
  store i32 6, i32* @blockSize100k, align 4
  br label %2587

; <label>:2574:                                   ; preds = %.lr.ph42.969
  store i32 5, i32* @blockSize100k, align 4
  br label %2587

; <label>:2575:                                   ; preds = %.lr.ph42.969
  store i32 4, i32* @blockSize100k, align 4
  br label %2587

; <label>:2576:                                   ; preds = %.lr.ph42.969
  store i32 3, i32* @blockSize100k, align 4
  br label %2587

; <label>:2577:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @blockSize100k, align 4
  br label %2587

; <label>:2578:                                   ; preds = %.lr.ph42.969
  store i32 1, i32* @blockSize100k, align 4
  br label %2587

; <label>:2579:                                   ; preds = %.lr.ph42.969
  store i8 0, i8* @noisy, align 1
  br label %2587

; <label>:2580:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @smallMode, align 1
  br label %2587

; <label>:2581:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @keepInputFiles, align 1
  br label %2587

; <label>:2582:                                   ; preds = %.lr.ph42.969
  store i32 3, i32* @opMode, align 4
  br label %2587

; <label>:2583:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @forceOverwrite, align 1
  br label %2587

; <label>:2584:                                   ; preds = %.lr.ph42.969
  store i32 1, i32* @opMode, align 4
  br label %2587

; <label>:2585:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @opMode, align 4
  br label %2587

; <label>:2586:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @srcMode, align 4
  br label %2587

; <label>:2587:                                   ; preds = %2586, %2585, %2584, %2583, %2582, %2581, %2580, %2579, %2578, %2577, %2576, %2575, %2574, %2573, %2572, %2571, %2570, %2569, %2566
  call void @__loop_iteration_test___4()
  %2588 = load i8*, i8** %157, align 8
  %scevgep2.970 = getelementptr i8, i8* %2588, i64 2
  %scevgep3.971 = getelementptr i8, i8* %scevgep2.970, i64 9
  %2589 = load i8, i8* %scevgep3.971, align 1
  %2590 = sext i8 %2589 to i32
  %2591 = icmp ne i32 %2590, 0
  br i1 %2591, label %.lr.ph42.1076, label %._crit_edge43.loopexit

.lr.ph42.1076:                                    ; preds = %2587
  call void @unroll_loop(i32 4)
  %2592 = load i8*, i8** %163, align 8
  %scevgep.1074 = getelementptr i8, i8* %2592, i64 1
  %scevgep1.1075 = getelementptr i8, i8* %scevgep.1074, i64 10
  %2593 = load i8, i8* %scevgep1.1075, align 1
  %2594 = sext i8 %2593 to i32
  switch i32 %2594, label %.loopexit1 [
    i32 99, label %2615
    i32 100, label %2614
    i32 122, label %2613
    i32 102, label %2612
    i32 116, label %2611
    i32 107, label %2610
    i32 115, label %2609
    i32 113, label %2608
    i32 49, label %2607
    i32 50, label %2606
    i32 51, label %2605
    i32 52, label %2604
    i32 53, label %2603
    i32 54, label %2602
    i32 55, label %2601
    i32 56, label %2600
    i32 57, label %2599
    i32 86, label %2598
    i32 76, label %2598
    i32 118, label %2595
    i32 104, label %.loopexit2
  ]

; <label>:2595:                                   ; preds = %.lr.ph42.1076
  %2596 = load i32, i32* @verbosity, align 4
  %2597 = add nsw i32 %2596, 1
  store i32 %2597, i32* @verbosity, align 4
  br label %2616

; <label>:2598:                                   ; preds = %.lr.ph42.1076, %.lr.ph42.1076
  call void @license()
  br label %2616

; <label>:2599:                                   ; preds = %.lr.ph42.1076
  store i32 9, i32* @blockSize100k, align 4
  br label %2616

; <label>:2600:                                   ; preds = %.lr.ph42.1076
  store i32 8, i32* @blockSize100k, align 4
  br label %2616

; <label>:2601:                                   ; preds = %.lr.ph42.1076
  store i32 7, i32* @blockSize100k, align 4
  br label %2616

; <label>:2602:                                   ; preds = %.lr.ph42.1076
  store i32 6, i32* @blockSize100k, align 4
  br label %2616

; <label>:2603:                                   ; preds = %.lr.ph42.1076
  store i32 5, i32* @blockSize100k, align 4
  br label %2616

; <label>:2604:                                   ; preds = %.lr.ph42.1076
  store i32 4, i32* @blockSize100k, align 4
  br label %2616

; <label>:2605:                                   ; preds = %.lr.ph42.1076
  store i32 3, i32* @blockSize100k, align 4
  br label %2616

; <label>:2606:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @blockSize100k, align 4
  br label %2616

; <label>:2607:                                   ; preds = %.lr.ph42.1076
  store i32 1, i32* @blockSize100k, align 4
  br label %2616

; <label>:2608:                                   ; preds = %.lr.ph42.1076
  store i8 0, i8* @noisy, align 1
  br label %2616

; <label>:2609:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @smallMode, align 1
  br label %2616

; <label>:2610:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @keepInputFiles, align 1
  br label %2616

; <label>:2611:                                   ; preds = %.lr.ph42.1076
  store i32 3, i32* @opMode, align 4
  br label %2616

; <label>:2612:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @forceOverwrite, align 1
  br label %2616

; <label>:2613:                                   ; preds = %.lr.ph42.1076
  store i32 1, i32* @opMode, align 4
  br label %2616

; <label>:2614:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @opMode, align 4
  br label %2616

; <label>:2615:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @srcMode, align 4
  br label %2616

; <label>:2616:                                   ; preds = %2615, %2614, %2613, %2612, %2611, %2610, %2609, %2608, %2607, %2606, %2605, %2604, %2603, %2602, %2601, %2600, %2599, %2598, %2595
  call void @__loop_iteration_test___4()
  %2617 = load i8*, i8** %157, align 8
  %scevgep2.1077 = getelementptr i8, i8* %2617, i64 2
  %scevgep3.1078 = getelementptr i8, i8* %scevgep2.1077, i64 10
  %2618 = load i8, i8* %scevgep3.1078, align 1
  %2619 = sext i8 %2618 to i32
  %2620 = icmp ne i32 %2619, 0
  br i1 %2620, label %.lr.ph42.1183, label %._crit_edge43.loopexit

.lr.ph42.1183:                                    ; preds = %2616
  call void @unroll_loop(i32 4)
  %2621 = load i8*, i8** %163, align 8
  %scevgep.1181 = getelementptr i8, i8* %2621, i64 1
  %scevgep1.1182 = getelementptr i8, i8* %scevgep.1181, i64 11
  %2622 = load i8, i8* %scevgep1.1182, align 1
  %2623 = sext i8 %2622 to i32
  switch i32 %2623, label %.loopexit1 [
    i32 99, label %2644
    i32 100, label %2643
    i32 122, label %2642
    i32 102, label %2641
    i32 116, label %2640
    i32 107, label %2639
    i32 115, label %2638
    i32 113, label %2637
    i32 49, label %2636
    i32 50, label %2635
    i32 51, label %2634
    i32 52, label %2633
    i32 53, label %2632
    i32 54, label %2631
    i32 55, label %2630
    i32 56, label %2629
    i32 57, label %2628
    i32 86, label %2627
    i32 76, label %2627
    i32 118, label %2624
    i32 104, label %.loopexit2
  ]

; <label>:2624:                                   ; preds = %.lr.ph42.1183
  %2625 = load i32, i32* @verbosity, align 4
  %2626 = add nsw i32 %2625, 1
  store i32 %2626, i32* @verbosity, align 4
  br label %2645

; <label>:2627:                                   ; preds = %.lr.ph42.1183, %.lr.ph42.1183
  call void @license()
  br label %2645

; <label>:2628:                                   ; preds = %.lr.ph42.1183
  store i32 9, i32* @blockSize100k, align 4
  br label %2645

; <label>:2629:                                   ; preds = %.lr.ph42.1183
  store i32 8, i32* @blockSize100k, align 4
  br label %2645

; <label>:2630:                                   ; preds = %.lr.ph42.1183
  store i32 7, i32* @blockSize100k, align 4
  br label %2645

; <label>:2631:                                   ; preds = %.lr.ph42.1183
  store i32 6, i32* @blockSize100k, align 4
  br label %2645

; <label>:2632:                                   ; preds = %.lr.ph42.1183
  store i32 5, i32* @blockSize100k, align 4
  br label %2645

; <label>:2633:                                   ; preds = %.lr.ph42.1183
  store i32 4, i32* @blockSize100k, align 4
  br label %2645

; <label>:2634:                                   ; preds = %.lr.ph42.1183
  store i32 3, i32* @blockSize100k, align 4
  br label %2645

; <label>:2635:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @blockSize100k, align 4
  br label %2645

; <label>:2636:                                   ; preds = %.lr.ph42.1183
  store i32 1, i32* @blockSize100k, align 4
  br label %2645

; <label>:2637:                                   ; preds = %.lr.ph42.1183
  store i8 0, i8* @noisy, align 1
  br label %2645

; <label>:2638:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @smallMode, align 1
  br label %2645

; <label>:2639:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @keepInputFiles, align 1
  br label %2645

; <label>:2640:                                   ; preds = %.lr.ph42.1183
  store i32 3, i32* @opMode, align 4
  br label %2645

; <label>:2641:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @forceOverwrite, align 1
  br label %2645

; <label>:2642:                                   ; preds = %.lr.ph42.1183
  store i32 1, i32* @opMode, align 4
  br label %2645

; <label>:2643:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @opMode, align 4
  br label %2645

; <label>:2644:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @srcMode, align 4
  br label %2645

; <label>:2645:                                   ; preds = %2644, %2643, %2642, %2641, %2640, %2639, %2638, %2637, %2636, %2635, %2634, %2633, %2632, %2631, %2630, %2629, %2628, %2627, %2624
  call void @__loop_iteration_test___4()
  %2646 = load i8*, i8** %157, align 8
  %scevgep2.1184 = getelementptr i8, i8* %2646, i64 2
  %scevgep3.1185 = getelementptr i8, i8* %scevgep2.1184, i64 11
  %2647 = load i8, i8* %scevgep3.1185, align 1
  %2648 = sext i8 %2647 to i32
  %2649 = icmp ne i32 %2648, 0
  br i1 %2649, label %.lr.ph42.1290, label %._crit_edge43.loopexit

.lr.ph42.1290:                                    ; preds = %2645
  call void @unroll_loop(i32 4)
  %2650 = load i8*, i8** %163, align 8
  %scevgep.1288 = getelementptr i8, i8* %2650, i64 1
  %scevgep1.1289 = getelementptr i8, i8* %scevgep.1288, i64 12
  %2651 = load i8, i8* %scevgep1.1289, align 1
  %2652 = sext i8 %2651 to i32
  switch i32 %2652, label %.loopexit1 [
    i32 99, label %2673
    i32 100, label %2672
    i32 122, label %2671
    i32 102, label %2670
    i32 116, label %2669
    i32 107, label %2668
    i32 115, label %2667
    i32 113, label %2666
    i32 49, label %2665
    i32 50, label %2664
    i32 51, label %2663
    i32 52, label %2662
    i32 53, label %2661
    i32 54, label %2660
    i32 55, label %2659
    i32 56, label %2658
    i32 57, label %2657
    i32 86, label %2656
    i32 76, label %2656
    i32 118, label %2653
    i32 104, label %.loopexit2
  ]

; <label>:2653:                                   ; preds = %.lr.ph42.1290
  %2654 = load i32, i32* @verbosity, align 4
  %2655 = add nsw i32 %2654, 1
  store i32 %2655, i32* @verbosity, align 4
  br label %2674

; <label>:2656:                                   ; preds = %.lr.ph42.1290, %.lr.ph42.1290
  call void @license()
  br label %2674

; <label>:2657:                                   ; preds = %.lr.ph42.1290
  store i32 9, i32* @blockSize100k, align 4
  br label %2674

; <label>:2658:                                   ; preds = %.lr.ph42.1290
  store i32 8, i32* @blockSize100k, align 4
  br label %2674

; <label>:2659:                                   ; preds = %.lr.ph42.1290
  store i32 7, i32* @blockSize100k, align 4
  br label %2674

; <label>:2660:                                   ; preds = %.lr.ph42.1290
  store i32 6, i32* @blockSize100k, align 4
  br label %2674

; <label>:2661:                                   ; preds = %.lr.ph42.1290
  store i32 5, i32* @blockSize100k, align 4
  br label %2674

; <label>:2662:                                   ; preds = %.lr.ph42.1290
  store i32 4, i32* @blockSize100k, align 4
  br label %2674

; <label>:2663:                                   ; preds = %.lr.ph42.1290
  store i32 3, i32* @blockSize100k, align 4
  br label %2674

; <label>:2664:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @blockSize100k, align 4
  br label %2674

; <label>:2665:                                   ; preds = %.lr.ph42.1290
  store i32 1, i32* @blockSize100k, align 4
  br label %2674

; <label>:2666:                                   ; preds = %.lr.ph42.1290
  store i8 0, i8* @noisy, align 1
  br label %2674

; <label>:2667:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @smallMode, align 1
  br label %2674

; <label>:2668:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @keepInputFiles, align 1
  br label %2674

; <label>:2669:                                   ; preds = %.lr.ph42.1290
  store i32 3, i32* @opMode, align 4
  br label %2674

; <label>:2670:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @forceOverwrite, align 1
  br label %2674

; <label>:2671:                                   ; preds = %.lr.ph42.1290
  store i32 1, i32* @opMode, align 4
  br label %2674

; <label>:2672:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @opMode, align 4
  br label %2674

; <label>:2673:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @srcMode, align 4
  br label %2674

; <label>:2674:                                   ; preds = %2673, %2672, %2671, %2670, %2669, %2668, %2667, %2666, %2665, %2664, %2663, %2662, %2661, %2660, %2659, %2658, %2657, %2656, %2653
  call void @__loop_iteration_test___4()
  %2675 = load i8*, i8** %157, align 8
  %scevgep2.1291 = getelementptr i8, i8* %2675, i64 2
  %scevgep3.1292 = getelementptr i8, i8* %scevgep2.1291, i64 12
  %2676 = load i8, i8* %scevgep3.1292, align 1
  %2677 = sext i8 %2676 to i32
  %2678 = icmp ne i32 %2677, 0
  br i1 %2678, label %.lr.ph42.1397, label %._crit_edge43.loopexit

.lr.ph42.1397:                                    ; preds = %2674
  call void @unroll_loop(i32 4)
  %2679 = load i8*, i8** %163, align 8
  %scevgep.1395 = getelementptr i8, i8* %2679, i64 1
  %scevgep1.1396 = getelementptr i8, i8* %scevgep.1395, i64 13
  %2680 = load i8, i8* %scevgep1.1396, align 1
  %2681 = sext i8 %2680 to i32
  switch i32 %2681, label %.loopexit1 [
    i32 99, label %2702
    i32 100, label %2701
    i32 122, label %2700
    i32 102, label %2699
    i32 116, label %2698
    i32 107, label %2697
    i32 115, label %2696
    i32 113, label %2695
    i32 49, label %2694
    i32 50, label %2693
    i32 51, label %2692
    i32 52, label %2691
    i32 53, label %2690
    i32 54, label %2689
    i32 55, label %2688
    i32 56, label %2687
    i32 57, label %2686
    i32 86, label %2685
    i32 76, label %2685
    i32 118, label %2682
    i32 104, label %.loopexit2
  ]

; <label>:2682:                                   ; preds = %.lr.ph42.1397
  %2683 = load i32, i32* @verbosity, align 4
  %2684 = add nsw i32 %2683, 1
  store i32 %2684, i32* @verbosity, align 4
  br label %2703

; <label>:2685:                                   ; preds = %.lr.ph42.1397, %.lr.ph42.1397
  call void @license()
  br label %2703

; <label>:2686:                                   ; preds = %.lr.ph42.1397
  store i32 9, i32* @blockSize100k, align 4
  br label %2703

; <label>:2687:                                   ; preds = %.lr.ph42.1397
  store i32 8, i32* @blockSize100k, align 4
  br label %2703

; <label>:2688:                                   ; preds = %.lr.ph42.1397
  store i32 7, i32* @blockSize100k, align 4
  br label %2703

; <label>:2689:                                   ; preds = %.lr.ph42.1397
  store i32 6, i32* @blockSize100k, align 4
  br label %2703

; <label>:2690:                                   ; preds = %.lr.ph42.1397
  store i32 5, i32* @blockSize100k, align 4
  br label %2703

; <label>:2691:                                   ; preds = %.lr.ph42.1397
  store i32 4, i32* @blockSize100k, align 4
  br label %2703

; <label>:2692:                                   ; preds = %.lr.ph42.1397
  store i32 3, i32* @blockSize100k, align 4
  br label %2703

; <label>:2693:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @blockSize100k, align 4
  br label %2703

; <label>:2694:                                   ; preds = %.lr.ph42.1397
  store i32 1, i32* @blockSize100k, align 4
  br label %2703

; <label>:2695:                                   ; preds = %.lr.ph42.1397
  store i8 0, i8* @noisy, align 1
  br label %2703

; <label>:2696:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @smallMode, align 1
  br label %2703

; <label>:2697:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @keepInputFiles, align 1
  br label %2703

; <label>:2698:                                   ; preds = %.lr.ph42.1397
  store i32 3, i32* @opMode, align 4
  br label %2703

; <label>:2699:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @forceOverwrite, align 1
  br label %2703

; <label>:2700:                                   ; preds = %.lr.ph42.1397
  store i32 1, i32* @opMode, align 4
  br label %2703

; <label>:2701:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @opMode, align 4
  br label %2703

; <label>:2702:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @srcMode, align 4
  br label %2703

; <label>:2703:                                   ; preds = %2702, %2701, %2700, %2699, %2698, %2697, %2696, %2695, %2694, %2693, %2692, %2691, %2690, %2689, %2688, %2687, %2686, %2685, %2682
  call void @__loop_iteration_test___4()
  %2704 = load i8*, i8** %157, align 8
  %scevgep2.1398 = getelementptr i8, i8* %2704, i64 2
  %scevgep3.1399 = getelementptr i8, i8* %scevgep2.1398, i64 13
  %2705 = load i8, i8* %scevgep3.1399, align 1
  %2706 = sext i8 %2705 to i32
  %2707 = icmp ne i32 %2706, 0
  br i1 %2707, label %.lr.ph42.14104, label %._crit_edge43.loopexit

.lr.ph42.14104:                                   ; preds = %2703
  call void @unroll_loop(i32 4)
  %2708 = load i8*, i8** %163, align 8
  %scevgep.14102 = getelementptr i8, i8* %2708, i64 1
  %scevgep1.14103 = getelementptr i8, i8* %scevgep.14102, i64 14
  %2709 = load i8, i8* %scevgep1.14103, align 1
  %2710 = sext i8 %2709 to i32
  switch i32 %2710, label %.loopexit1 [
    i32 99, label %2731
    i32 100, label %2730
    i32 122, label %2729
    i32 102, label %2728
    i32 116, label %2727
    i32 107, label %2726
    i32 115, label %2725
    i32 113, label %2724
    i32 49, label %2723
    i32 50, label %2722
    i32 51, label %2721
    i32 52, label %2720
    i32 53, label %2719
    i32 54, label %2718
    i32 55, label %2717
    i32 56, label %2716
    i32 57, label %2715
    i32 86, label %2714
    i32 76, label %2714
    i32 118, label %2711
    i32 104, label %.loopexit2
  ]

; <label>:2711:                                   ; preds = %.lr.ph42.14104
  %2712 = load i32, i32* @verbosity, align 4
  %2713 = add nsw i32 %2712, 1
  store i32 %2713, i32* @verbosity, align 4
  br label %2732

; <label>:2714:                                   ; preds = %.lr.ph42.14104, %.lr.ph42.14104
  call void @license()
  br label %2732

; <label>:2715:                                   ; preds = %.lr.ph42.14104
  store i32 9, i32* @blockSize100k, align 4
  br label %2732

; <label>:2716:                                   ; preds = %.lr.ph42.14104
  store i32 8, i32* @blockSize100k, align 4
  br label %2732

; <label>:2717:                                   ; preds = %.lr.ph42.14104
  store i32 7, i32* @blockSize100k, align 4
  br label %2732

; <label>:2718:                                   ; preds = %.lr.ph42.14104
  store i32 6, i32* @blockSize100k, align 4
  br label %2732

; <label>:2719:                                   ; preds = %.lr.ph42.14104
  store i32 5, i32* @blockSize100k, align 4
  br label %2732

; <label>:2720:                                   ; preds = %.lr.ph42.14104
  store i32 4, i32* @blockSize100k, align 4
  br label %2732

; <label>:2721:                                   ; preds = %.lr.ph42.14104
  store i32 3, i32* @blockSize100k, align 4
  br label %2732

; <label>:2722:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @blockSize100k, align 4
  br label %2732

; <label>:2723:                                   ; preds = %.lr.ph42.14104
  store i32 1, i32* @blockSize100k, align 4
  br label %2732

; <label>:2724:                                   ; preds = %.lr.ph42.14104
  store i8 0, i8* @noisy, align 1
  br label %2732

; <label>:2725:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @smallMode, align 1
  br label %2732

; <label>:2726:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @keepInputFiles, align 1
  br label %2732

; <label>:2727:                                   ; preds = %.lr.ph42.14104
  store i32 3, i32* @opMode, align 4
  br label %2732

; <label>:2728:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @forceOverwrite, align 1
  br label %2732

; <label>:2729:                                   ; preds = %.lr.ph42.14104
  store i32 1, i32* @opMode, align 4
  br label %2732

; <label>:2730:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @opMode, align 4
  br label %2732

; <label>:2731:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @srcMode, align 4
  br label %2732

; <label>:2732:                                   ; preds = %2731, %2730, %2729, %2728, %2727, %2726, %2725, %2724, %2723, %2722, %2721, %2720, %2719, %2718, %2717, %2716, %2715, %2714, %2711
  call void @__loop_iteration_test___4()
  %2733 = load i8*, i8** %157, align 8
  %scevgep2.14105 = getelementptr i8, i8* %2733, i64 2
  %scevgep3.14106 = getelementptr i8, i8* %scevgep2.14105, i64 14
  %2734 = load i8, i8* %scevgep3.14106, align 1
  %2735 = sext i8 %2734 to i32
  %2736 = icmp ne i32 %2735, 0
  br i1 %2736, label %.lr.ph42.15111, label %._crit_edge43.loopexit

.lr.ph42.15111:                                   ; preds = %2732
  call void @unroll_loop(i32 4)
  %2737 = load i8*, i8** %163, align 8
  %scevgep.15109 = getelementptr i8, i8* %2737, i64 1
  %scevgep1.15110 = getelementptr i8, i8* %scevgep.15109, i64 15
  %2738 = load i8, i8* %scevgep1.15110, align 1
  %2739 = sext i8 %2738 to i32
  switch i32 %2739, label %.loopexit1 [
    i32 99, label %2760
    i32 100, label %2759
    i32 122, label %2758
    i32 102, label %2757
    i32 116, label %2756
    i32 107, label %2755
    i32 115, label %2754
    i32 113, label %2753
    i32 49, label %2752
    i32 50, label %2751
    i32 51, label %2750
    i32 52, label %2749
    i32 53, label %2748
    i32 54, label %2747
    i32 55, label %2746
    i32 56, label %2745
    i32 57, label %2744
    i32 86, label %2743
    i32 76, label %2743
    i32 118, label %2740
    i32 104, label %.loopexit2
  ]

; <label>:2740:                                   ; preds = %.lr.ph42.15111
  %2741 = load i32, i32* @verbosity, align 4
  %2742 = add nsw i32 %2741, 1
  store i32 %2742, i32* @verbosity, align 4
  br label %2761

; <label>:2743:                                   ; preds = %.lr.ph42.15111, %.lr.ph42.15111
  call void @license()
  br label %2761

; <label>:2744:                                   ; preds = %.lr.ph42.15111
  store i32 9, i32* @blockSize100k, align 4
  br label %2761

; <label>:2745:                                   ; preds = %.lr.ph42.15111
  store i32 8, i32* @blockSize100k, align 4
  br label %2761

; <label>:2746:                                   ; preds = %.lr.ph42.15111
  store i32 7, i32* @blockSize100k, align 4
  br label %2761

; <label>:2747:                                   ; preds = %.lr.ph42.15111
  store i32 6, i32* @blockSize100k, align 4
  br label %2761

; <label>:2748:                                   ; preds = %.lr.ph42.15111
  store i32 5, i32* @blockSize100k, align 4
  br label %2761

; <label>:2749:                                   ; preds = %.lr.ph42.15111
  store i32 4, i32* @blockSize100k, align 4
  br label %2761

; <label>:2750:                                   ; preds = %.lr.ph42.15111
  store i32 3, i32* @blockSize100k, align 4
  br label %2761

; <label>:2751:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @blockSize100k, align 4
  br label %2761

; <label>:2752:                                   ; preds = %.lr.ph42.15111
  store i32 1, i32* @blockSize100k, align 4
  br label %2761

; <label>:2753:                                   ; preds = %.lr.ph42.15111
  store i8 0, i8* @noisy, align 1
  br label %2761

; <label>:2754:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @smallMode, align 1
  br label %2761

; <label>:2755:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @keepInputFiles, align 1
  br label %2761

; <label>:2756:                                   ; preds = %.lr.ph42.15111
  store i32 3, i32* @opMode, align 4
  br label %2761

; <label>:2757:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @forceOverwrite, align 1
  br label %2761

; <label>:2758:                                   ; preds = %.lr.ph42.15111
  store i32 1, i32* @opMode, align 4
  br label %2761

; <label>:2759:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @opMode, align 4
  br label %2761

; <label>:2760:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @srcMode, align 4
  br label %2761

; <label>:2761:                                   ; preds = %2760, %2759, %2758, %2757, %2756, %2755, %2754, %2753, %2752, %2751, %2750, %2749, %2748, %2747, %2746, %2745, %2744, %2743, %2740
  call void @__loop_iteration_test___4()
  %2762 = load i8*, i8** %157, align 8
  %scevgep2.15112 = getelementptr i8, i8* %2762, i64 2
  %scevgep3.15113 = getelementptr i8, i8* %scevgep2.15112, i64 15
  %2763 = load i8, i8* %scevgep3.15113, align 1
  %2764 = sext i8 %2763 to i32
  %2765 = icmp ne i32 %2764, 0
  br i1 %2765, label %.lr.ph42.16118, label %._crit_edge43.loopexit

.lr.ph42.16118:                                   ; preds = %2761
  call void @unroll_loop(i32 4)
  %2766 = load i8*, i8** %163, align 8
  %scevgep.16116 = getelementptr i8, i8* %2766, i64 1
  %scevgep1.16117 = getelementptr i8, i8* %scevgep.16116, i64 16
  %2767 = load i8, i8* %scevgep1.16117, align 1
  %2768 = sext i8 %2767 to i32
  switch i32 %2768, label %.loopexit1 [
    i32 99, label %2789
    i32 100, label %2788
    i32 122, label %2787
    i32 102, label %2786
    i32 116, label %2785
    i32 107, label %2784
    i32 115, label %2783
    i32 113, label %2782
    i32 49, label %2781
    i32 50, label %2780
    i32 51, label %2779
    i32 52, label %2778
    i32 53, label %2777
    i32 54, label %2776
    i32 55, label %2775
    i32 56, label %2774
    i32 57, label %2773
    i32 86, label %2772
    i32 76, label %2772
    i32 118, label %2769
    i32 104, label %.loopexit2
  ]

; <label>:2769:                                   ; preds = %.lr.ph42.16118
  %2770 = load i32, i32* @verbosity, align 4
  %2771 = add nsw i32 %2770, 1
  store i32 %2771, i32* @verbosity, align 4
  br label %2790

; <label>:2772:                                   ; preds = %.lr.ph42.16118, %.lr.ph42.16118
  call void @license()
  br label %2790

; <label>:2773:                                   ; preds = %.lr.ph42.16118
  store i32 9, i32* @blockSize100k, align 4
  br label %2790

; <label>:2774:                                   ; preds = %.lr.ph42.16118
  store i32 8, i32* @blockSize100k, align 4
  br label %2790

; <label>:2775:                                   ; preds = %.lr.ph42.16118
  store i32 7, i32* @blockSize100k, align 4
  br label %2790

; <label>:2776:                                   ; preds = %.lr.ph42.16118
  store i32 6, i32* @blockSize100k, align 4
  br label %2790

; <label>:2777:                                   ; preds = %.lr.ph42.16118
  store i32 5, i32* @blockSize100k, align 4
  br label %2790

; <label>:2778:                                   ; preds = %.lr.ph42.16118
  store i32 4, i32* @blockSize100k, align 4
  br label %2790

; <label>:2779:                                   ; preds = %.lr.ph42.16118
  store i32 3, i32* @blockSize100k, align 4
  br label %2790

; <label>:2780:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @blockSize100k, align 4
  br label %2790

; <label>:2781:                                   ; preds = %.lr.ph42.16118
  store i32 1, i32* @blockSize100k, align 4
  br label %2790

; <label>:2782:                                   ; preds = %.lr.ph42.16118
  store i8 0, i8* @noisy, align 1
  br label %2790

; <label>:2783:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @smallMode, align 1
  br label %2790

; <label>:2784:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @keepInputFiles, align 1
  br label %2790

; <label>:2785:                                   ; preds = %.lr.ph42.16118
  store i32 3, i32* @opMode, align 4
  br label %2790

; <label>:2786:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @forceOverwrite, align 1
  br label %2790

; <label>:2787:                                   ; preds = %.lr.ph42.16118
  store i32 1, i32* @opMode, align 4
  br label %2790

; <label>:2788:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @opMode, align 4
  br label %2790

; <label>:2789:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @srcMode, align 4
  br label %2790

; <label>:2790:                                   ; preds = %2789, %2788, %2787, %2786, %2785, %2784, %2783, %2782, %2781, %2780, %2779, %2778, %2777, %2776, %2775, %2774, %2773, %2772, %2769
  call void @__loop_iteration_test___4()
  %2791 = load i8*, i8** %157, align 8
  %scevgep2.16119 = getelementptr i8, i8* %2791, i64 2
  %scevgep3.16120 = getelementptr i8, i8* %scevgep2.16119, i64 16
  %2792 = load i8, i8* %scevgep3.16120, align 1
  %2793 = sext i8 %2792 to i32
  %2794 = icmp ne i32 %2793, 0
  br i1 %2794, label %.lr.ph42.17125, label %._crit_edge43.loopexit

.lr.ph42.17125:                                   ; preds = %2790
  call void @unroll_loop(i32 4)
  %2795 = load i8*, i8** %163, align 8
  %scevgep.17123 = getelementptr i8, i8* %2795, i64 1
  %scevgep1.17124 = getelementptr i8, i8* %scevgep.17123, i64 17
  %2796 = load i8, i8* %scevgep1.17124, align 1
  %2797 = sext i8 %2796 to i32
  switch i32 %2797, label %.loopexit1 [
    i32 99, label %2818
    i32 100, label %2817
    i32 122, label %2816
    i32 102, label %2815
    i32 116, label %2814
    i32 107, label %2813
    i32 115, label %2812
    i32 113, label %2811
    i32 49, label %2810
    i32 50, label %2809
    i32 51, label %2808
    i32 52, label %2807
    i32 53, label %2806
    i32 54, label %2805
    i32 55, label %2804
    i32 56, label %2803
    i32 57, label %2802
    i32 86, label %2801
    i32 76, label %2801
    i32 118, label %2798
    i32 104, label %.loopexit2
  ]

; <label>:2798:                                   ; preds = %.lr.ph42.17125
  %2799 = load i32, i32* @verbosity, align 4
  %2800 = add nsw i32 %2799, 1
  store i32 %2800, i32* @verbosity, align 4
  br label %2819

; <label>:2801:                                   ; preds = %.lr.ph42.17125, %.lr.ph42.17125
  call void @license()
  br label %2819

; <label>:2802:                                   ; preds = %.lr.ph42.17125
  store i32 9, i32* @blockSize100k, align 4
  br label %2819

; <label>:2803:                                   ; preds = %.lr.ph42.17125
  store i32 8, i32* @blockSize100k, align 4
  br label %2819

; <label>:2804:                                   ; preds = %.lr.ph42.17125
  store i32 7, i32* @blockSize100k, align 4
  br label %2819

; <label>:2805:                                   ; preds = %.lr.ph42.17125
  store i32 6, i32* @blockSize100k, align 4
  br label %2819

; <label>:2806:                                   ; preds = %.lr.ph42.17125
  store i32 5, i32* @blockSize100k, align 4
  br label %2819

; <label>:2807:                                   ; preds = %.lr.ph42.17125
  store i32 4, i32* @blockSize100k, align 4
  br label %2819

; <label>:2808:                                   ; preds = %.lr.ph42.17125
  store i32 3, i32* @blockSize100k, align 4
  br label %2819

; <label>:2809:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @blockSize100k, align 4
  br label %2819

; <label>:2810:                                   ; preds = %.lr.ph42.17125
  store i32 1, i32* @blockSize100k, align 4
  br label %2819

; <label>:2811:                                   ; preds = %.lr.ph42.17125
  store i8 0, i8* @noisy, align 1
  br label %2819

; <label>:2812:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @smallMode, align 1
  br label %2819

; <label>:2813:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @keepInputFiles, align 1
  br label %2819

; <label>:2814:                                   ; preds = %.lr.ph42.17125
  store i32 3, i32* @opMode, align 4
  br label %2819

; <label>:2815:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @forceOverwrite, align 1
  br label %2819

; <label>:2816:                                   ; preds = %.lr.ph42.17125
  store i32 1, i32* @opMode, align 4
  br label %2819

; <label>:2817:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @opMode, align 4
  br label %2819

; <label>:2818:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @srcMode, align 4
  br label %2819

; <label>:2819:                                   ; preds = %2818, %2817, %2816, %2815, %2814, %2813, %2812, %2811, %2810, %2809, %2808, %2807, %2806, %2805, %2804, %2803, %2802, %2801, %2798
  call void @__loop_iteration_test___4()
  %2820 = load i8*, i8** %157, align 8
  %scevgep2.17126 = getelementptr i8, i8* %2820, i64 2
  %scevgep3.17127 = getelementptr i8, i8* %scevgep2.17126, i64 17
  %2821 = load i8, i8* %scevgep3.17127, align 1
  %2822 = sext i8 %2821 to i32
  %2823 = icmp ne i32 %2822, 0
  br i1 %2823, label %.lr.ph42.18132, label %._crit_edge43.loopexit

.lr.ph42.18132:                                   ; preds = %2819
  call void @unroll_loop(i32 4)
  %2824 = load i8*, i8** %163, align 8
  %scevgep.18130 = getelementptr i8, i8* %2824, i64 1
  %scevgep1.18131 = getelementptr i8, i8* %scevgep.18130, i64 18
  %2825 = load i8, i8* %scevgep1.18131, align 1
  %2826 = sext i8 %2825 to i32
  switch i32 %2826, label %.loopexit1 [
    i32 99, label %2847
    i32 100, label %2846
    i32 122, label %2845
    i32 102, label %2844
    i32 116, label %2843
    i32 107, label %2842
    i32 115, label %2841
    i32 113, label %2840
    i32 49, label %2839
    i32 50, label %2838
    i32 51, label %2837
    i32 52, label %2836
    i32 53, label %2835
    i32 54, label %2834
    i32 55, label %2833
    i32 56, label %2832
    i32 57, label %2831
    i32 86, label %2830
    i32 76, label %2830
    i32 118, label %2827
    i32 104, label %.loopexit2
  ]

; <label>:2827:                                   ; preds = %.lr.ph42.18132
  %2828 = load i32, i32* @verbosity, align 4
  %2829 = add nsw i32 %2828, 1
  store i32 %2829, i32* @verbosity, align 4
  br label %2848

; <label>:2830:                                   ; preds = %.lr.ph42.18132, %.lr.ph42.18132
  call void @license()
  br label %2848

; <label>:2831:                                   ; preds = %.lr.ph42.18132
  store i32 9, i32* @blockSize100k, align 4
  br label %2848

; <label>:2832:                                   ; preds = %.lr.ph42.18132
  store i32 8, i32* @blockSize100k, align 4
  br label %2848

; <label>:2833:                                   ; preds = %.lr.ph42.18132
  store i32 7, i32* @blockSize100k, align 4
  br label %2848

; <label>:2834:                                   ; preds = %.lr.ph42.18132
  store i32 6, i32* @blockSize100k, align 4
  br label %2848

; <label>:2835:                                   ; preds = %.lr.ph42.18132
  store i32 5, i32* @blockSize100k, align 4
  br label %2848

; <label>:2836:                                   ; preds = %.lr.ph42.18132
  store i32 4, i32* @blockSize100k, align 4
  br label %2848

; <label>:2837:                                   ; preds = %.lr.ph42.18132
  store i32 3, i32* @blockSize100k, align 4
  br label %2848

; <label>:2838:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @blockSize100k, align 4
  br label %2848

; <label>:2839:                                   ; preds = %.lr.ph42.18132
  store i32 1, i32* @blockSize100k, align 4
  br label %2848

; <label>:2840:                                   ; preds = %.lr.ph42.18132
  store i8 0, i8* @noisy, align 1
  br label %2848

; <label>:2841:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @smallMode, align 1
  br label %2848

; <label>:2842:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @keepInputFiles, align 1
  br label %2848

; <label>:2843:                                   ; preds = %.lr.ph42.18132
  store i32 3, i32* @opMode, align 4
  br label %2848

; <label>:2844:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @forceOverwrite, align 1
  br label %2848

; <label>:2845:                                   ; preds = %.lr.ph42.18132
  store i32 1, i32* @opMode, align 4
  br label %2848

; <label>:2846:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @opMode, align 4
  br label %2848

; <label>:2847:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @srcMode, align 4
  br label %2848

; <label>:2848:                                   ; preds = %2847, %2846, %2845, %2844, %2843, %2842, %2841, %2840, %2839, %2838, %2837, %2836, %2835, %2834, %2833, %2832, %2831, %2830, %2827
  call void @__loop_iteration_test___4()
  %2849 = load i8*, i8** %157, align 8
  %scevgep2.18133 = getelementptr i8, i8* %2849, i64 2
  %scevgep3.18134 = getelementptr i8, i8* %scevgep2.18133, i64 18
  %2850 = load i8, i8* %scevgep3.18134, align 1
  %2851 = sext i8 %2850 to i32
  %2852 = icmp ne i32 %2851, 0
  br i1 %2852, label %.lr.ph42.19139, label %._crit_edge43.loopexit

.lr.ph42.19139:                                   ; preds = %2848
  call void @unroll_loop(i32 4)
  %2853 = load i8*, i8** %163, align 8
  %scevgep.19137 = getelementptr i8, i8* %2853, i64 1
  %scevgep1.19138 = getelementptr i8, i8* %scevgep.19137, i64 19
  %2854 = load i8, i8* %scevgep1.19138, align 1
  %2855 = sext i8 %2854 to i32
  switch i32 %2855, label %.loopexit1 [
    i32 99, label %2876
    i32 100, label %2875
    i32 122, label %2874
    i32 102, label %2873
    i32 116, label %2872
    i32 107, label %2871
    i32 115, label %2870
    i32 113, label %2869
    i32 49, label %2868
    i32 50, label %2867
    i32 51, label %2866
    i32 52, label %2865
    i32 53, label %2864
    i32 54, label %2863
    i32 55, label %2862
    i32 56, label %2861
    i32 57, label %2860
    i32 86, label %2859
    i32 76, label %2859
    i32 118, label %2856
    i32 104, label %.loopexit2
  ]

; <label>:2856:                                   ; preds = %.lr.ph42.19139
  %2857 = load i32, i32* @verbosity, align 4
  %2858 = add nsw i32 %2857, 1
  store i32 %2858, i32* @verbosity, align 4
  br label %2877

; <label>:2859:                                   ; preds = %.lr.ph42.19139, %.lr.ph42.19139
  call void @license()
  br label %2877

; <label>:2860:                                   ; preds = %.lr.ph42.19139
  store i32 9, i32* @blockSize100k, align 4
  br label %2877

; <label>:2861:                                   ; preds = %.lr.ph42.19139
  store i32 8, i32* @blockSize100k, align 4
  br label %2877

; <label>:2862:                                   ; preds = %.lr.ph42.19139
  store i32 7, i32* @blockSize100k, align 4
  br label %2877

; <label>:2863:                                   ; preds = %.lr.ph42.19139
  store i32 6, i32* @blockSize100k, align 4
  br label %2877

; <label>:2864:                                   ; preds = %.lr.ph42.19139
  store i32 5, i32* @blockSize100k, align 4
  br label %2877

; <label>:2865:                                   ; preds = %.lr.ph42.19139
  store i32 4, i32* @blockSize100k, align 4
  br label %2877

; <label>:2866:                                   ; preds = %.lr.ph42.19139
  store i32 3, i32* @blockSize100k, align 4
  br label %2877

; <label>:2867:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @blockSize100k, align 4
  br label %2877

; <label>:2868:                                   ; preds = %.lr.ph42.19139
  store i32 1, i32* @blockSize100k, align 4
  br label %2877

; <label>:2869:                                   ; preds = %.lr.ph42.19139
  store i8 0, i8* @noisy, align 1
  br label %2877

; <label>:2870:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @smallMode, align 1
  br label %2877

; <label>:2871:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @keepInputFiles, align 1
  br label %2877

; <label>:2872:                                   ; preds = %.lr.ph42.19139
  store i32 3, i32* @opMode, align 4
  br label %2877

; <label>:2873:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @forceOverwrite, align 1
  br label %2877

; <label>:2874:                                   ; preds = %.lr.ph42.19139
  store i32 1, i32* @opMode, align 4
  br label %2877

; <label>:2875:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @opMode, align 4
  br label %2877

; <label>:2876:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @srcMode, align 4
  br label %2877

; <label>:2877:                                   ; preds = %2876, %2875, %2874, %2873, %2872, %2871, %2870, %2869, %2868, %2867, %2866, %2865, %2864, %2863, %2862, %2861, %2860, %2859, %2856
  call void @__loop_iteration_test___4()
  %2878 = load i8*, i8** %157, align 8
  %scevgep2.19140 = getelementptr i8, i8* %2878, i64 2
  %scevgep3.19141 = getelementptr i8, i8* %scevgep2.19140, i64 19
  %2879 = load i8, i8* %scevgep3.19141, align 1
  %2880 = sext i8 %2879 to i32
  br label %._crit_edge43.loopexit
}

declare void @__loop_termination_test___4()

declare void @__loop_iteration_test___4()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old.48(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), align 1
  %39 = sext i8 98 to i32
  %40 = icmp eq i32 98, 47
  br i1 false, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %37
  call void @__loop_iteration_test___0()
  %43 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %44 = sext i8 122 to i32
  %45 = icmp ne i32 122, 0
  br i1 true, label %539, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %706, %697, %688, %679, %670, %661, %652, %643, %634, %625, %616, %607, %598, %589, %580, %571, %562, %553, %544, %42
  call void @__loop_termination_test___0()
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone(%struct.zzzz** %22, i8* %46)
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone.9(%struct.zzzz** %22, i8* %47)
  %48 = sub nsw i32 3, 1, !track_argc !10
  %49 = icmp sle i32 1, 2
  br i1 true, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %50 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %51 = load i8*, i8** %scevgep4, align 8
  %52 = call %struct.zzzz* @snocString_clone(%struct.zzzz* null, i8* %51)
  store %struct.zzzz* %52, %struct.zzzz** %22, align 8
  br i1 true, label %.lr.ph57.1, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57.1, %.lr.ph57
  call void @__loop_termination_test___1()
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %53 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %54 = icmp ne i64 10000562, 0
  %55 = icmp ne %struct.zzzz* %53, null
  br i1 true, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %.lr.ph53.preheader
  call void @unroll_loop(i32 2)
  %56 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr [6 x i8], [6 x i8]* @8, i64 0, i64 0
  %59 = getelementptr [3 x i8], [3 x i8]* @9, i64 0, i64 0
  %60 = call i32 @strcmp(i8* %58, i8* %59) #10
  %61 = icmp eq i32 1, 0
  br i1 false, label %82, label %62

; <label>:62:                                     ; preds = %.lr.ph53
  %63 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 45 to i32
  %67 = icmp eq i32 45, 45
  br i1 true, label %82, label %68

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @numFileNames, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* @numFileNames, align 4
  %71 = load i32, i32* @longestFileName, align 4
  %72 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i64 @strlen(i8* %73) #10
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %71, %75
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %68
  %78 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @strlen(i8* %79) #10
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* @longestFileName, align 4
  br label %82

; <label>:82:                                     ; preds = %77, %68, %62, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ 1, %62 ], [ 1, %77 ], [ 1, %68 ]
  call void @__loop_iteration_test___2()
  %83 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 1
  %84 = load %struct.zzzz*, %struct.zzzz** %83, align 8
  %85 = icmp ne i64 10000590, 0
  %86 = icmp ne %struct.zzzz* %84, null
  br i1 true, label %.lr.ph53.1, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %1283, %1253, %1223, %1193, %1163, %1133, %1103, %1073, %1043, %1013, %983, %953, %923, %893, %863, %833, %803, %773, %742, %82
  call void @__loop_termination_test___2()
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %87 = load i32, i32* @numFileNames, align 4
  %88 = icmp eq i32 1, 0
  br i1 false, label %89, label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %91

; <label>:90:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %91

; <label>:91:                                     ; preds = %90, %89
  store i32 1, i32* @opMode, align 4
  %92 = load i8*, i8** @progName, align 8
  %93 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %94 = call i8* @strstr(i8* %92, i8* %93) #10, !track !11
  %95 = icmp ne i64 0, 0
  %96 = icmp ne i8* null, null
  br i1 false, label %103, label %97

; <label>:97:                                     ; preds = %91
  %98 = load i8*, i8** @progName, align 8
  %99 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %100 = call i8* @strstr(i8* %98, i8* %99) #10, !track !12
  %101 = icmp ne i64 0, 0
  %102 = icmp ne i8* null, null
  br i1 false, label %103, label %104

; <label>:103:                                    ; preds = %97, %91
  store i32 2, i32* @opMode, align 4
  br label %104

; <label>:104:                                    ; preds = %103, %97
  %105 = load i8*, i8** @progName, align 8
  %106 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %107 = call i8* @strstr(i8* %105, i8* %106) #10, !track !13
  %108 = icmp ne i64 0, 0
  %109 = icmp ne i8* null, null
  br i1 false, label %128, label %110

; <label>:110:                                    ; preds = %104
  %111 = load i8*, i8** @progName, align 8
  %112 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %113 = call i8* @strstr(i8* %111, i8* %112) #10, !track !14
  %114 = icmp ne i64 0, 0
  %115 = icmp ne i8* null, null
  br i1 false, label %128, label %116

; <label>:116:                                    ; preds = %110
  %117 = load i8*, i8** @progName, align 8
  %118 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %119 = call i8* @strstr(i8* %117, i8* %118) #10, !track !15
  %120 = icmp ne i64 0, 0
  %121 = icmp ne i8* null, null
  br i1 false, label %128, label %122

; <label>:122:                                    ; preds = %116
  %123 = load i8*, i8** @progName, align 8
  %124 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %125 = call i8* @strstr(i8* %123, i8* %124) #10, !track !16
  %126 = icmp ne i64 0, 0
  %127 = icmp ne i8* null, null
  br i1 false, label %128, label %133

; <label>:128:                                    ; preds = %122, %116, %110, %104
  store i32 2, i32* @opMode, align 4
  %129 = load i32, i32* @numFileNames, align 4
  %130 = icmp eq i32 %129, 0
  %131 = zext i1 %130 to i64
  %132 = select i1 %130, i32 1, i32 2
  store i32 %132, i32* @srcMode, align 4
  br label %133

; <label>:133:                                    ; preds = %128, %122
  %134 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %135 = icmp ne i64 10000562, 0
  %136 = icmp ne %struct.zzzz* %134, null
  br i1 true, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %133
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %.lr.ph48.preheader
  call void @unroll_loop(i32 3)
  %137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr [6 x i8], [6 x i8]* @14, i64 0, i64 0
  %140 = getelementptr [3 x i8], [3 x i8]* @15, i64 0, i64 0
  %141 = call i32 @strcmp(i8* %139, i8* %140) #10
  %142 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %143

; <label>:143:                                    ; preds = %.lr.ph48
  %144 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 45 to i32
  %148 = icmp eq i32 45, 45
  br i1 true, label %149, label %._crit_edge43

; <label>:149:                                    ; preds = %143
  %150 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 102 to i32
  %155 = icmp ne i32 102, 45
  br i1 true, label %156, label %._crit_edge43

; <label>:156:                                    ; preds = %149
  %157 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 102 to i32
  %162 = icmp ne i32 102, 0
  br i1 true, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %156
  %163 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %.lr.ph42.preheader
  call void @unroll_loop(i32 4)
  %164 = load i8*, i8** %163, align 8
  %scevgep = getelementptr i8, i8* %164, i64 1
  %165 = load i8, i8* %scevgep, align 1
  %166 = sext i8 102 to i32
  switch i32 102, label %.loopexit1 [
    i32 99, label %167
    i32 100, label %168
    i32 122, label %169
    i32 102, label %170
    i32 116, label %171
    i32 107, label %172
    i32 115, label %173
    i32 113, label %174
    i32 49, label %175
    i32 50, label %176
    i32 51, label %177
    i32 52, label %178
    i32 53, label %179
    i32 54, label %180
    i32 55, label %181
    i32 56, label %182
    i32 57, label %183
    i32 86, label %184
    i32 76, label %184
    i32 118, label %185
    i32 104, label %.loopexit2
  ]

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %198

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %198

; <label>:169:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %198

; <label>:170:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %198

; <label>:171:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %198

; <label>:172:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %198

; <label>:173:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %198

; <label>:174:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %198

; <label>:175:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %198

; <label>:176:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %198

; <label>:177:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %198

; <label>:178:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %198

; <label>:179:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %198

; <label>:180:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %198

; <label>:181:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %198

; <label>:182:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %198

; <label>:183:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %198

; <label>:184:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %198

; <label>:185:                                    ; preds = %.lr.ph42
  %186 = load i32, i32* @verbosity, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* @verbosity, align 4
  br label %198

.loopexit2:                                       ; preds = %.lr.ph42.19139, %.lr.ph42.18132, %.lr.ph42.17125, %.lr.ph42.16118, %.lr.ph42.15111, %.lr.ph42.14104, %.lr.ph42.1397, %.lr.ph42.1290, %.lr.ph42.1183, %.lr.ph42.1076, %.lr.ph42.969, %.lr.ph42.862, %.lr.ph42.755, %.lr.ph42.648, %.lr.ph42.541, %.lr.ph42.434, %.lr.ph42.327, %.lr.ph42.220, %.lr.ph42.113, %.lr.ph42
  call void @__loop_termination_test___4()
  br label %188

.loopexit4:                                       ; preds = %.lr.ph42.1
  br label %188

.loopexit6:                                       ; preds = %.lr.ph42.2
  br label %188

.loopexit8:                                       ; preds = %.lr.ph42.3
  br label %188

.loopexit10:                                      ; preds = %.lr.ph42.4
  br label %188

.loopexit12:                                      ; preds = %.lr.ph42.5
  br label %188

.loopexit14:                                      ; preds = %.lr.ph42.6
  br label %188

.loopexit16:                                      ; preds = %.lr.ph42.7
  br label %188

.loopexit19:                                      ; preds = %.lr.ph42.8
  br label %188

.loopexit21:                                      ; preds = %.lr.ph42.9
  br label %188

.loopexit23:                                      ; preds = %.lr.ph42.10
  br label %188

.loopexit25:                                      ; preds = %.lr.ph42.11
  br label %188

.loopexit27:                                      ; preds = %.lr.ph42.12
  br label %188

.loopexit29:                                      ; preds = %.lr.ph42.13
  br label %188

.loopexit31:                                      ; preds = %.lr.ph42.14
  br label %188

.loopexit33:                                      ; preds = %.lr.ph42.15
  br label %188

.loopexit35:                                      ; preds = %.lr.ph42.16
  br label %188

.loopexit37:                                      ; preds = %.lr.ph42.17
  br label %188

.loopexit39:                                      ; preds = %.lr.ph42.18
  br label %188

.loopexit41:                                      ; preds = %.lr.ph42.19
  br label %188

; <label>:188:                                    ; preds = %.loopexit41, %.loopexit39, %.loopexit37, %.loopexit35, %.loopexit33, %.loopexit31, %.loopexit29, %.loopexit27, %.loopexit25, %.loopexit23, %.loopexit21, %.loopexit19, %.loopexit16, %.loopexit14, %.loopexit12, %.loopexit10, %.loopexit8, %.loopexit6, %.loopexit4, %.loopexit2
  call void @__loop_termination_test___3()
  %189 = load i8*, i8** @progName, align 8
  call void @usage(i8* %189)
  call void @exit(i32 0) #11
  unreachable

.loopexit1:                                       ; preds = %.lr.ph42.19139, %.lr.ph42.18132, %.lr.ph42.17125, %.lr.ph42.16118, %.lr.ph42.15111, %.lr.ph42.14104, %.lr.ph42.1397, %.lr.ph42.1290, %.lr.ph42.1183, %.lr.ph42.1076, %.lr.ph42.969, %.lr.ph42.862, %.lr.ph42.755, %.lr.ph42.648, %.lr.ph42.541, %.lr.ph42.434, %.lr.ph42.327, %.lr.ph42.220, %.lr.ph42.113, %.lr.ph42
  call void @__loop_termination_test___4()
  br label %190

.loopexit3:                                       ; preds = %.lr.ph42.1
  br label %190

.loopexit5:                                       ; preds = %.lr.ph42.2
  br label %190

.loopexit7:                                       ; preds = %.lr.ph42.3
  br label %190

.loopexit9:                                       ; preds = %.lr.ph42.4
  br label %190

.loopexit11:                                      ; preds = %.lr.ph42.5
  br label %190

.loopexit13:                                      ; preds = %.lr.ph42.6
  br label %190

.loopexit15:                                      ; preds = %.lr.ph42.7
  br label %190

.loopexit18:                                      ; preds = %.lr.ph42.8
  br label %190

.loopexit20:                                      ; preds = %.lr.ph42.9
  br label %190

.loopexit22:                                      ; preds = %.lr.ph42.10
  br label %190

.loopexit24:                                      ; preds = %.lr.ph42.11
  br label %190

.loopexit26:                                      ; preds = %.lr.ph42.12
  br label %190

.loopexit28:                                      ; preds = %.lr.ph42.13
  br label %190

.loopexit30:                                      ; preds = %.lr.ph42.14
  br label %190

.loopexit32:                                      ; preds = %.lr.ph42.15
  br label %190

.loopexit34:                                      ; preds = %.lr.ph42.16
  br label %190

.loopexit36:                                      ; preds = %.lr.ph42.17
  br label %190

.loopexit38:                                      ; preds = %.lr.ph42.18
  br label %190

.loopexit40:                                      ; preds = %.lr.ph42.19
  br label %190

; <label>:190:                                    ; preds = %.loopexit40, %.loopexit38, %.loopexit36, %.loopexit34, %.loopexit32, %.loopexit30, %.loopexit28, %.loopexit26, %.loopexit24, %.loopexit22, %.loopexit20, %.loopexit18, %.loopexit15, %.loopexit13, %.loopexit11, %.loopexit9, %.loopexit7, %.loopexit5, %.loopexit3, %.loopexit1
  %.12.lcssa15 = phi %struct.zzzz* [ %134, %.loopexit1 ], [ %204, %.loopexit3 ], [ null, %.loopexit5 ], [ %1401, %.loopexit7 ], [ %1458, %.loopexit9 ], [ %1515, %.loopexit11 ], [ %1572, %.loopexit13 ], [ %1629, %.loopexit15 ], [ %1686, %.loopexit18 ], [ %1743, %.loopexit20 ], [ %1800, %.loopexit22 ], [ %1857, %.loopexit24 ], [ %1914, %.loopexit26 ], [ %1971, %.loopexit28 ], [ %2028, %.loopexit30 ], [ %2085, %.loopexit32 ], [ %2142, %.loopexit34 ], [ %2199, %.loopexit36 ], [ %2256, %.loopexit38 ], [ %2313, %.loopexit40 ]
  call void @__loop_termination_test___3()
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %192 = load i8*, i8** @progName, align 8
  %193 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* %195, i8* %192, i8* %194)
  %197 = load i8*, i8** @progName, align 8
  call void @usage(i8* %197)
  call void @exit(i32 1) #11
  unreachable

; <label>:198:                                    ; preds = %185, %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167
  call void @__loop_iteration_test___4()
  %199 = load i8*, i8** %157, align 8
  %scevgep2 = getelementptr i8, i8* %199, i64 2
  %200 = load i8, i8* %scevgep2, align 1
  %201 = sext i8 107 to i32
  %202 = icmp ne i32 107, 0
  br i1 true, label %.lr.ph42.113, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %2917, %2888, %2859, %2830, %2801, %2772, %2743, %2714, %2685, %2656, %2627, %2598, %2569, %2540, %2511, %2482, %2453, %2424, %2395, %198
  call void @__loop_termination_test___4()
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %156, %149, %143
  call void @__loop_iteration_test___3()
  %203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 1
  %204 = load %struct.zzzz*, %struct.zzzz** %203, align 8
  %205 = icmp ne i64 10000590, 0
  %206 = icmp ne %struct.zzzz* %204, null
  br i1 true, label %.lr.ph48.1, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %._crit_edge43.19, %.lr.ph48.19, %._crit_edge43.18, %.lr.ph48.18, %._crit_edge43.17, %.lr.ph48.17, %._crit_edge43.16, %.lr.ph48.16, %._crit_edge43.15, %.lr.ph48.15, %._crit_edge43.14, %.lr.ph48.14, %._crit_edge43.13, %.lr.ph48.13, %._crit_edge43.12, %.lr.ph48.12, %._crit_edge43.11, %.lr.ph48.11, %._crit_edge43.10, %.lr.ph48.10, %._crit_edge43.9, %.lr.ph48.9, %._crit_edge43.8, %.lr.ph48.8, %._crit_edge43.7, %.lr.ph48.7, %._crit_edge43.6, %.lr.ph48.6, %._crit_edge43.5, %.lr.ph48.5, %._crit_edge43.4, %.lr.ph48.4, %._crit_edge43.3, %.lr.ph48.3, %._crit_edge43.2, %.lr.ph48.2, %._crit_edge43.1, %.lr.ph48.1, %._crit_edge43, %.lr.ph48
  call void @__loop_termination_test___3()
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %133
  %207 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %208 = icmp ne i64 10000562, 0
  %209 = icmp ne %struct.zzzz* %207, null
  br i1 true, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %.lr.ph39.preheader
  call void @unroll_loop(i32 5)
  %210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr [6 x i8], [6 x i8]* @18, i64 0, i64 0
  %213 = getelementptr [3 x i8], [3 x i8]* @19, i64 0, i64 0
  %214 = call i32 @strcmp(i8* %212, i8* %213) #10
  %215 = icmp eq i32 1, 0
  br i1 false, label %.loopexit.loopexit, label %216

; <label>:216:                                    ; preds = %.lr.ph39
  %217 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr [6 x i8], [6 x i8]* @20, i64 0, i64 0
  %220 = getelementptr [9 x i8], [9 x i8]* @21, i64 0, i64 0
  %221 = call i32 @strcmp(i8* %219, i8* %220) #10
  %222 = icmp eq i32 1, 0
  br i1 false, label %223, label %224

; <label>:223:                                    ; preds = %216
  store i32 2, i32* @srcMode, align 4
  br label %370

; <label>:224:                                    ; preds = %216
  %225 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = getelementptr [6 x i8], [6 x i8]* @22, i64 0, i64 0
  %228 = getelementptr [13 x i8], [13 x i8]* @23, i64 0, i64 0
  %229 = call i32 @strcmp(i8* %227, i8* %228) #10
  %230 = icmp eq i32 1, 0
  br i1 false, label %231, label %232

; <label>:231:                                    ; preds = %224
  store i32 2, i32* @opMode, align 4
  br label %370

; <label>:232:                                    ; preds = %224
  %233 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr [6 x i8], [6 x i8]* @24, i64 0, i64 0
  %236 = getelementptr [11 x i8], [11 x i8]* @25, i64 0, i64 0
  %237 = call i32 @strcmp(i8* %235, i8* %236) #10
  %238 = icmp eq i32 1, 0
  br i1 false, label %239, label %240

; <label>:239:                                    ; preds = %232
  store i32 1, i32* @opMode, align 4
  br label %370

; <label>:240:                                    ; preds = %232
  %241 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = getelementptr [6 x i8], [6 x i8]* @26, i64 0, i64 0
  %244 = getelementptr [8 x i8], [8 x i8]* @27, i64 0, i64 0
  %245 = call i32 @strcmp(i8* %243, i8* %244) #10
  %246 = icmp eq i32 1, 0
  br i1 false, label %247, label %248

; <label>:247:                                    ; preds = %240
  store i8 1, i8* @forceOverwrite, align 1
  br label %370

; <label>:248:                                    ; preds = %240
  %249 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = getelementptr [6 x i8], [6 x i8]* @28, i64 0, i64 0
  %252 = getelementptr [7 x i8], [7 x i8]* @29, i64 0, i64 0
  %253 = call i32 @strcmp(i8* %251, i8* %252) #10
  %254 = icmp eq i32 1, 0
  br i1 false, label %255, label %256

; <label>:255:                                    ; preds = %248
  store i32 3, i32* @opMode, align 4
  br label %370

; <label>:256:                                    ; preds = %248
  %257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  %259 = getelementptr [6 x i8], [6 x i8]* @30, i64 0, i64 0
  %260 = getelementptr [7 x i8], [7 x i8]* @31, i64 0, i64 0
  %261 = call i32 @strcmp(i8* %259, i8* %260) #10
  %262 = icmp eq i32 1, 0
  br i1 false, label %263, label %264

; <label>:263:                                    ; preds = %256
  store i8 1, i8* @keepInputFiles, align 1
  br label %370

; <label>:264:                                    ; preds = %256
  %265 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8
  %267 = getelementptr [6 x i8], [6 x i8]* @32, i64 0, i64 0
  %268 = getelementptr [8 x i8], [8 x i8]* @33, i64 0, i64 0
  %269 = call i32 @strcmp(i8* %267, i8* %268) #10
  %270 = icmp eq i32 1, 0
  br i1 false, label %271, label %272

; <label>:271:                                    ; preds = %264
  store i8 1, i8* @smallMode, align 1
  br label %370

; <label>:272:                                    ; preds = %264
  %273 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr [6 x i8], [6 x i8]* @34, i64 0, i64 0
  %276 = getelementptr [8 x i8], [8 x i8]* @35, i64 0, i64 0
  %277 = call i32 @strcmp(i8* %275, i8* %276) #10
  %278 = icmp eq i32 1, 0
  br i1 false, label %279, label %280

; <label>:279:                                    ; preds = %272
  store i8 0, i8* @noisy, align 1
  br label %370

; <label>:280:                                    ; preds = %272
  %281 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = getelementptr [6 x i8], [6 x i8]* @36, i64 0, i64 0
  %284 = getelementptr [10 x i8], [10 x i8]* @37, i64 0, i64 0
  %285 = call i32 @strcmp(i8* %283, i8* %284) #10
  %286 = icmp eq i32 1, 0
  br i1 false, label %287, label %288

; <label>:287:                                    ; preds = %280
  call void @license()
  br label %370

; <label>:288:                                    ; preds = %280
  %289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = getelementptr [6 x i8], [6 x i8]* @38, i64 0, i64 0
  %292 = getelementptr [10 x i8], [10 x i8]* @39, i64 0, i64 0
  %293 = call i32 @strcmp(i8* %291, i8* %292) #10
  %294 = icmp eq i32 1, 0
  br i1 false, label %295, label %296

; <label>:295:                                    ; preds = %288
  call void @license()
  br label %370

; <label>:296:                                    ; preds = %288
  %297 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = getelementptr [6 x i8], [6 x i8]* @40, i64 0, i64 0
  %300 = getelementptr [14 x i8], [14 x i8]* @41, i64 0, i64 0
  %301 = call i32 @strcmp(i8* %299, i8* %300) #10
  %302 = icmp eq i32 1, 0
  br i1 false, label %303, label %304

; <label>:303:                                    ; preds = %296
  store i32 1, i32* @workFactor, align 4
  br label %370

; <label>:304:                                    ; preds = %296
  %305 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = getelementptr [6 x i8], [6 x i8]* @42, i64 0, i64 0
  %308 = getelementptr [18 x i8], [18 x i8]* @43, i64 0, i64 0
  %309 = call i32 @strcmp(i8* %307, i8* %308) #10
  %310 = icmp eq i32 1, 0
  %311 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  br i1 false, label %313, label %314

; <label>:313:                                    ; preds = %304
  call void @redundant(i8* %312)
  br label %370

; <label>:314:                                    ; preds = %304
  %315 = getelementptr [6 x i8], [6 x i8]* @44, i64 0, i64 0
  %316 = getelementptr [18 x i8], [18 x i8]* @45, i64 0, i64 0
  %317 = call i32 @strcmp(i8* %315, i8* %316) #10
  %318 = icmp eq i32 1, 0
  %319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  br i1 false, label %321, label %322

; <label>:321:                                    ; preds = %314
  call void @redundant(i8* %320)
  br label %370

; <label>:322:                                    ; preds = %314
  %323 = getelementptr [6 x i8], [6 x i8]* @46, i64 0, i64 0
  %324 = getelementptr [7 x i8], [7 x i8]* @47, i64 0, i64 0
  %325 = call i32 @strcmp(i8* %323, i8* %324) #10
  %326 = icmp eq i32 1, 0
  br i1 false, label %327, label %328

; <label>:327:                                    ; preds = %322
  store i32 1, i32* @blockSize100k, align 4
  br label %370

; <label>:328:                                    ; preds = %322
  %329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = getelementptr [6 x i8], [6 x i8]* @48, i64 0, i64 0
  %332 = getelementptr [7 x i8], [7 x i8]* @49, i64 0, i64 0
  %333 = call i32 @strcmp(i8* %331, i8* %332) #10
  %334 = icmp eq i32 1, 0
  br i1 false, label %335, label %336

; <label>:335:                                    ; preds = %328
  store i32 9, i32* @blockSize100k, align 4
  br label %370

; <label>:336:                                    ; preds = %328
  %337 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = getelementptr [6 x i8], [6 x i8]* @50, i64 0, i64 0
  %340 = getelementptr [10 x i8], [10 x i8]* @51, i64 0, i64 0
  %341 = call i32 @strcmp(i8* %339, i8* %340) #10
  %342 = icmp eq i32 1, 0
  br i1 false, label %343, label %346

; <label>:343:                                    ; preds = %336
  %344 = load i32, i32* @verbosity, align 4
  %345 = add nsw i32 %344, 1
  store i32 %345, i32* @verbosity, align 4
  br label %370

; <label>:346:                                    ; preds = %336
  %347 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = getelementptr [6 x i8], [6 x i8]* @52, i64 0, i64 0
  %350 = getelementptr [7 x i8], [7 x i8]* @53, i64 0, i64 0
  %351 = call i32 @strcmp(i8* %349, i8* %350) #10
  %352 = icmp eq i32 1, 0
  br i1 false, label %353, label %355

; <label>:353:                                    ; preds = %5132, %5016, %4900, %4784, %4668, %4552, %4436, %4320, %4204, %4088, %3972, %3856, %3740, %3624, %3508, %3392, %3276, %3160, %3039, %346
  call void @__loop_termination_test___5()
  %354 = load i8*, i8** @progName, align 8
  call void @usage(i8* %354)
  call void @exit(i32 0) #11
  unreachable

; <label>:355:                                    ; preds = %346
  %356 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = getelementptr [6 x i8], [6 x i8]* @54, i64 0, i64 0
  %359 = getelementptr [3 x i8], [3 x i8]* @55, i64 0, i64 0
  %360 = call i32 @strncmp(i8* %358, i8* %359, i64 2) #10
  %361 = icmp eq i32 1, 0
  br i1 false, label %362, label %370

; <label>:362:                                    ; preds = %5137, %5021, %4905, %4789, %4673, %4557, %4441, %4325, %4209, %4093, %3977, %3861, %3745, %3629, %3513, %3397, %3281, %3165, %3046, %355
  %.23.lcssa13 = phi %struct.zzzz* [ %207, %355 ], [ %372, %3046 ], [ null, %3165 ], [ %3190, %3281 ], [ %3306, %3397 ], [ %3422, %3513 ], [ %3538, %3629 ], [ %3654, %3745 ], [ %3770, %3861 ], [ %3886, %3977 ], [ %4002, %4093 ], [ %4118, %4209 ], [ %4234, %4325 ], [ %4350, %4441 ], [ %4466, %4557 ], [ %4582, %4673 ], [ %4698, %4789 ], [ %4814, %4905 ], [ %4930, %5021 ], [ %5046, %5137 ]
  call void @__loop_termination_test___5()
  %363 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %364 = load i8*, i8** @progName, align 8
  %365 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  %367 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %368 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %363, i8* %367, i8* %364, i8* %366)
  %369 = load i8*, i8** @progName, align 8
  call void @usage(i8* %369)
  call void @exit(i32 1) #11
  unreachable

; <label>:370:                                    ; preds = %355, %343, %335, %327, %321, %313, %303, %295, %287, %279, %271, %263, %255, %247, %239, %231, %223
  call void @__loop_iteration_test___5()
  %371 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 1
  %372 = load %struct.zzzz*, %struct.zzzz** %371, align 8
  %373 = icmp ne i64 10000590, 0
  %374 = icmp ne %struct.zzzz* %372, null
  br i1 true, label %.lr.ph39.1, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %5160, %.lr.ph39.19, %5044, %.lr.ph39.18, %4928, %.lr.ph39.17, %4812, %.lr.ph39.16, %4696, %.lr.ph39.15, %4580, %.lr.ph39.14, %4464, %.lr.ph39.13, %4348, %.lr.ph39.12, %4232, %.lr.ph39.11, %4116, %.lr.ph39.10, %4000, %.lr.ph39.9, %3884, %.lr.ph39.8, %3768, %.lr.ph39.7, %3652, %.lr.ph39.6, %3536, %.lr.ph39.5, %3420, %.lr.ph39.4, %3304, %.lr.ph39.3, %3188, %.lr.ph39.2, %3071, %.lr.ph39.1, %370, %.lr.ph39
  call void @__loop_termination_test___5()
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %375 = load i32, i32* @verbosity, align 4
  %376 = icmp sgt i32 0, 4
  br i1 false, label %377, label %378

; <label>:377:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %378

; <label>:378:                                    ; preds = %377, %.loopexit
  %379 = load i32, i32* @opMode, align 4
  %380 = icmp eq i32 1, 1
  br i1 true, label %381, label %388

; <label>:381:                                    ; preds = %378
  %382 = load i8, i8* @smallMode, align 1
  %383 = zext i8 1 to i32
  %384 = icmp ne i32 1, 0
  %385 = load i32, i32* @blockSize100k, align 4
  %386 = icmp sgt i32 9, 2
  %or.cond3 = and i1 true, true
  br i1 true, label %387, label %388

; <label>:387:                                    ; preds = %381
  store i32 2, i32* @blockSize100k, align 4
  br label %388

; <label>:388:                                    ; preds = %387, %381, %378
  %389 = load i32, i32* @opMode, align 4
  %390 = icmp eq i32 1, 3
  %391 = load i32, i32* @srcMode, align 4
  %392 = icmp eq i32 3, 2
  %or.cond5 = and i1 false, false
  br i1 false, label %393, label %398

; <label>:393:                                    ; preds = %388
  %394 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %395 = load i8*, i8** @progName, align 8
  %396 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %397 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %394, i8* %396, i8* %395)
  call void @exit(i32 1) #11
  unreachable

; <label>:398:                                    ; preds = %388
  %399 = load i32, i32* @srcMode, align 4
  %400 = icmp eq i32 3, 2
  %401 = load i32, i32* @numFileNames, align 4
  %402 = icmp eq i32 1, 0
  %or.cond7 = and i1 false, false
  br i1 false, label %403, label %404

; <label>:403:                                    ; preds = %398
  store i32 1, i32* @srcMode, align 4
  br label %404

; <label>:404:                                    ; preds = %403, %398
  %405 = load i32, i32* @opMode, align 4
  %406 = icmp ne i32 1, 1
  br i1 false, label %407, label %408

; <label>:407:                                    ; preds = %404
  store i32 0, i32* @blockSize100k, align 4
  br label %408

; <label>:408:                                    ; preds = %407, %404
  %409 = load i32, i32* @srcMode, align 4
  %410 = icmp eq i32 3, 3
  br i1 true, label %411, label %415

; <label>:411:                                    ; preds = %408
  %412 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %413 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %414 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %415

; <label>:415:                                    ; preds = %411, %408
  %416 = load i32, i32* @opMode, align 4
  %417 = icmp eq i32 1, 1
  br i1 true, label %418, label %448

; <label>:418:                                    ; preds = %415
  %419 = load i32, i32* @srcMode, align 4
  %420 = icmp eq i32 3, 1
  br i1 false, label %421, label %422

; <label>:421:                                    ; preds = %418
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:422:                                    ; preds = %418
  %423 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %424 = icmp ne i64 10000562, 0
  %425 = icmp ne %struct.zzzz* %423, null
  br i1 true, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %422
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %444, %.lr.ph23.preheader
  %.221 = phi i8 [ %.3, %444 ], [ 1, %.lr.ph23.preheader ]
  %.3419 = phi %struct.zzzz* [ %446, %444 ], [ %423, %.lr.ph23.preheader ]
  call void @unroll_loop(i32 6)
  %426 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %427 = load i8*, i8** %426, align 8
  %428 = call i32 @strcmp(i8* %427, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %444, label %430

; <label>:430:                                    ; preds = %.lr.ph23
  %431 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %432 = load i8*, i8** %431, align 8
  %433 = getelementptr inbounds i8, i8* %432, i64 0
  %434 = load i8, i8* %433, align 1
  %435 = sext i8 %434 to i32
  %436 = icmp eq i32 %435, 45
  %437 = zext i8 %.221 to i32
  %438 = icmp ne i32 %437, 0
  %or.cond9 = and i1 %436, %438
  br i1 %or.cond9, label %444, label %439

; <label>:439:                                    ; preds = %430
  %440 = load i32, i32* @numFilesProcessed, align 4
  %441 = add nsw i32 %440, 1
  store i32 %441, i32* @numFilesProcessed, align 4
  %442 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 0
  %443 = load i8*, i8** %442, align 8
  call void @compress(i8* %443)
  br label %444

; <label>:444:                                    ; preds = %439, %430, %.lr.ph23
  %.3 = phi i8 [ %.221, %439 ], [ 0, %.lr.ph23 ], [ %.221, %430 ]
  %445 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.3419, i32 0, i32 1
  %446 = load %struct.zzzz*, %struct.zzzz** %445, align 8
  %447 = icmp ne %struct.zzzz* %446, null
  br i1 %447, label %.lr.ph23, label %._crit_edge24.loopexit

; <label>:448:                                    ; preds = %415
  %449 = load i32, i32* @opMode, align 4
  %450 = icmp eq i32 %449, 2
  br i1 %450, label %451, label %484

; <label>:451:                                    ; preds = %448
  store i8 0, i8* @unzFailsExist, align 1
  %452 = load i32, i32* @srcMode, align 4
  %453 = icmp eq i32 %452, 1
  br i1 %453, label %454, label %455

; <label>:454:                                    ; preds = %451
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:455:                                    ; preds = %451
  %456 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %457 = icmp ne %struct.zzzz* %456, null
  br i1 %457, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %455
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %476, %.lr.ph29.preheader
  %.427 = phi i8 [ %.5, %476 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %478, %476 ], [ %456, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %458 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %459 = load i8*, i8** %458, align 8
  %460 = call i32 @strcmp(i8* %459, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %476, label %462

; <label>:462:                                    ; preds = %.lr.ph29
  %463 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %464 = load i8*, i8** %463, align 8
  %465 = getelementptr inbounds i8, i8* %464, i64 0
  %466 = load i8, i8* %465, align 1
  %467 = sext i8 %466 to i32
  %468 = icmp eq i32 %467, 45
  %469 = zext i8 %.427 to i32
  %470 = icmp ne i32 %469, 0
  %or.cond11 = and i1 %468, %470
  br i1 %or.cond11, label %476, label %471

; <label>:471:                                    ; preds = %462
  %472 = load i32, i32* @numFilesProcessed, align 4
  %473 = add nsw i32 %472, 1
  store i32 %473, i32* @numFilesProcessed, align 4
  %474 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %475 = load i8*, i8** %474, align 8
  call void @uncompress(i8* %475)
  br label %476

; <label>:476:                                    ; preds = %471, %462, %.lr.ph29
  %.5 = phi i8 [ %.427, %471 ], [ 0, %.lr.ph29 ], [ %.427, %462 ]
  %477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %478 = load %struct.zzzz*, %struct.zzzz** %477, align 8
  %479 = icmp ne %struct.zzzz* %478, null
  br i1 %479, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %476
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %455, %454
  %480 = load i8, i8* @unzFailsExist, align 1
  %481 = icmp ne i8 %480, 0
  br i1 %481, label %482, label %._crit_edge24

; <label>:482:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %483 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %483) #11
  unreachable

; <label>:484:                                    ; preds = %448
  store i8 0, i8* @testFailsExist, align 1
  %485 = load i32, i32* @srcMode, align 4
  %486 = icmp eq i32 %485, 1
  br i1 %486, label %487, label %488

; <label>:487:                                    ; preds = %484
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:488:                                    ; preds = %484
  %489 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %490 = icmp ne %struct.zzzz* %489, null
  br i1 %490, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %488
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %509, %.lr.ph35.preheader
  %.633 = phi i8 [ %.7, %509 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %511, %509 ], [ %489, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %491 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %492 = load i8*, i8** %491, align 8
  %493 = call i32 @strcmp(i8* %492, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %509, label %495

; <label>:495:                                    ; preds = %.lr.ph35
  %496 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %497 = load i8*, i8** %496, align 8
  %498 = getelementptr inbounds i8, i8* %497, i64 0
  %499 = load i8, i8* %498, align 1
  %500 = sext i8 %499 to i32
  %501 = icmp eq i32 %500, 45
  %502 = zext i8 %.633 to i32
  %503 = icmp ne i32 %502, 0
  %or.cond13 = and i1 %501, %503
  br i1 %or.cond13, label %509, label %504

; <label>:504:                                    ; preds = %495
  %505 = load i32, i32* @numFilesProcessed, align 4
  %506 = add nsw i32 %505, 1
  store i32 %506, i32* @numFilesProcessed, align 4
  %507 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %508 = load i8*, i8** %507, align 8
  call void @testf(i8* %508)
  br label %509

; <label>:509:                                    ; preds = %504, %495, %.lr.ph35
  %.7 = phi i8 [ %.633, %504 ], [ 0, %.lr.ph35 ], [ %.633, %495 ]
  %510 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %511 = load %struct.zzzz*, %struct.zzzz** %510, align 8
  %512 = icmp ne %struct.zzzz* %511, null
  br i1 %512, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %509
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %488, %487
  %513 = load i8, i8* @testFailsExist, align 1
  %514 = zext i8 %513 to i32
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %516, label %._crit_edge24

; <label>:516:                                    ; preds = %._crit_edge36
  %517 = load i8, i8* @noisy, align 1
  %518 = zext i8 %517 to i32
  %519 = icmp ne i32 %518, 0
  br i1 %519, label %520, label %._crit_edge24

; <label>:520:                                    ; preds = %516
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %522 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %523 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %521, i8* %522)
  call void @setExit(i32 2)
  %524 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %524) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %444
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %516, %._crit_edge36, %._crit_edge30, %422, %421
  %525 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %526 = icmp ne %struct.zzzz* %525, null
  br i1 %526, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %535, %.lr.ph.preheader
  %.6718 = phi %struct.zzzz* [ %528, %535 ], [ %525, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %527 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %528 = load %struct.zzzz*, %struct.zzzz** %527, align 8
  %529 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %530 = load i8*, i8** %529, align 8
  %531 = icmp ne i8* %530, null
  br i1 %531, label %532, label %535

; <label>:532:                                    ; preds = %.lr.ph
  %533 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %534 = load i8*, i8** %533, align 8
  call void @free(i8* %534) #9
  br label %535

; <label>:535:                                    ; preds = %532, %.lr.ph
  %536 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %536) #9
  %537 = icmp ne %struct.zzzz* %528, null
  br i1 %537, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %535
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %538 = load i32, i32* @exitValue, align 4
  ret i32 %538

; <label>:539:                                    ; preds = %42
  call void @unroll_loop(i32 0)
  %540 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %541 = sext i8 122 to i32
  %542 = icmp eq i32 122, 47
  br i1 false, label %543, label %544

; <label>:543:                                    ; preds = %539
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), i8** @progName, align 8
  br label %544

; <label>:544:                                    ; preds = %543, %539
  call void @__loop_iteration_test___0()
  %545 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %546 = sext i8 105 to i32
  %547 = icmp ne i32 105, 0
  br i1 true, label %548, label %._crit_edge64.loopexit

; <label>:548:                                    ; preds = %544
  call void @unroll_loop(i32 0)
  %549 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %550 = sext i8 105 to i32
  %551 = icmp eq i32 105, 47
  br i1 false, label %552, label %553

; <label>:552:                                    ; preds = %548
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), i8** @progName, align 8
  br label %553

; <label>:553:                                    ; preds = %552, %548
  call void @__loop_iteration_test___0()
  %554 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %555 = sext i8 112 to i32
  %556 = icmp ne i32 112, 0
  br i1 true, label %557, label %._crit_edge64.loopexit

; <label>:557:                                    ; preds = %553
  call void @unroll_loop(i32 0)
  %558 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %559 = sext i8 112 to i32
  %560 = icmp eq i32 112, 47
  br i1 false, label %561, label %562

; <label>:561:                                    ; preds = %557
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), i8** @progName, align 8
  br label %562

; <label>:562:                                    ; preds = %561, %557
  call void @__loop_iteration_test___0()
  %563 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %564 = sext i8 50 to i32
  %565 = icmp ne i32 50, 0
  br i1 true, label %566, label %._crit_edge64.loopexit

; <label>:566:                                    ; preds = %562
  call void @unroll_loop(i32 0)
  %567 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %568 = sext i8 50 to i32
  %569 = icmp eq i32 50, 47
  br i1 false, label %570, label %571

; <label>:570:                                    ; preds = %566
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), i8** @progName, align 8
  br label %571

; <label>:571:                                    ; preds = %570, %566
  call void @__loop_iteration_test___0()
  %572 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %573 = sext i8 0 to i32
  %574 = icmp ne i32 0, 0
  br i1 false, label %575, label %._crit_edge64.loopexit

; <label>:575:                                    ; preds = %571
  call void @unroll_loop(i32 0)
  %576 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %577 = sext i8 %576 to i32
  %578 = icmp eq i32 %577, 47
  br i1 %578, label %579, label %580

; <label>:579:                                    ; preds = %575
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), i8** @progName, align 8
  br label %580

; <label>:580:                                    ; preds = %579, %575
  call void @__loop_iteration_test___0()
  %581 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %582 = sext i8 %581 to i32
  %583 = icmp ne i32 %582, 0
  br i1 %583, label %584, label %._crit_edge64.loopexit

; <label>:584:                                    ; preds = %580
  call void @unroll_loop(i32 0)
  %585 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %586 = sext i8 %585 to i32
  %587 = icmp eq i32 %586, 47
  br i1 %587, label %588, label %589

; <label>:588:                                    ; preds = %584
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), i8** @progName, align 8
  br label %589

; <label>:589:                                    ; preds = %588, %584
  call void @__loop_iteration_test___0()
  %590 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %591 = sext i8 %590 to i32
  %592 = icmp ne i32 %591, 0
  br i1 %592, label %593, label %._crit_edge64.loopexit

; <label>:593:                                    ; preds = %589
  call void @unroll_loop(i32 0)
  %594 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %595 = sext i8 %594 to i32
  %596 = icmp eq i32 %595, 47
  br i1 %596, label %597, label %598

; <label>:597:                                    ; preds = %593
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), i8** @progName, align 8
  br label %598

; <label>:598:                                    ; preds = %597, %593
  call void @__loop_iteration_test___0()
  %599 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %600 = sext i8 %599 to i32
  %601 = icmp ne i32 %600, 0
  br i1 %601, label %602, label %._crit_edge64.loopexit

; <label>:602:                                    ; preds = %598
  call void @unroll_loop(i32 0)
  %603 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %604 = sext i8 %603 to i32
  %605 = icmp eq i32 %604, 47
  br i1 %605, label %606, label %607

; <label>:606:                                    ; preds = %602
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), i8** @progName, align 8
  br label %607

; <label>:607:                                    ; preds = %606, %602
  call void @__loop_iteration_test___0()
  %608 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %609 = sext i8 %608 to i32
  %610 = icmp ne i32 %609, 0
  br i1 %610, label %611, label %._crit_edge64.loopexit

; <label>:611:                                    ; preds = %607
  call void @unroll_loop(i32 0)
  %612 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %613 = sext i8 %612 to i32
  %614 = icmp eq i32 %613, 47
  br i1 %614, label %615, label %616

; <label>:615:                                    ; preds = %611
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), i8** @progName, align 8
  br label %616

; <label>:616:                                    ; preds = %615, %611
  call void @__loop_iteration_test___0()
  %617 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %618 = sext i8 %617 to i32
  %619 = icmp ne i32 %618, 0
  br i1 %619, label %620, label %._crit_edge64.loopexit

; <label>:620:                                    ; preds = %616
  call void @unroll_loop(i32 0)
  %621 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %622 = sext i8 %621 to i32
  %623 = icmp eq i32 %622, 47
  br i1 %623, label %624, label %625

; <label>:624:                                    ; preds = %620
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), i8** @progName, align 8
  br label %625

; <label>:625:                                    ; preds = %624, %620
  call void @__loop_iteration_test___0()
  %626 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %627 = sext i8 %626 to i32
  %628 = icmp ne i32 %627, 0
  br i1 %628, label %629, label %._crit_edge64.loopexit

; <label>:629:                                    ; preds = %625
  call void @unroll_loop(i32 0)
  %630 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %631 = sext i8 %630 to i32
  %632 = icmp eq i32 %631, 47
  br i1 %632, label %633, label %634

; <label>:633:                                    ; preds = %629
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), i8** @progName, align 8
  br label %634

; <label>:634:                                    ; preds = %633, %629
  call void @__loop_iteration_test___0()
  %635 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %636 = sext i8 %635 to i32
  %637 = icmp ne i32 %636, 0
  br i1 %637, label %638, label %._crit_edge64.loopexit

; <label>:638:                                    ; preds = %634
  call void @unroll_loop(i32 0)
  %639 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %640 = sext i8 %639 to i32
  %641 = icmp eq i32 %640, 47
  br i1 %641, label %642, label %643

; <label>:642:                                    ; preds = %638
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), i8** @progName, align 8
  br label %643

; <label>:643:                                    ; preds = %642, %638
  call void @__loop_iteration_test___0()
  %644 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %645 = sext i8 %644 to i32
  %646 = icmp ne i32 %645, 0
  br i1 %646, label %647, label %._crit_edge64.loopexit

; <label>:647:                                    ; preds = %643
  call void @unroll_loop(i32 0)
  %648 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %649 = sext i8 %648 to i32
  %650 = icmp eq i32 %649, 47
  br i1 %650, label %651, label %652

; <label>:651:                                    ; preds = %647
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), i8** @progName, align 8
  br label %652

; <label>:652:                                    ; preds = %651, %647
  call void @__loop_iteration_test___0()
  %653 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %654 = sext i8 %653 to i32
  %655 = icmp ne i32 %654, 0
  br i1 %655, label %656, label %._crit_edge64.loopexit

; <label>:656:                                    ; preds = %652
  call void @unroll_loop(i32 0)
  %657 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %658 = sext i8 %657 to i32
  %659 = icmp eq i32 %658, 47
  br i1 %659, label %660, label %661

; <label>:660:                                    ; preds = %656
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), i8** @progName, align 8
  br label %661

; <label>:661:                                    ; preds = %660, %656
  call void @__loop_iteration_test___0()
  %662 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %663 = sext i8 %662 to i32
  %664 = icmp ne i32 %663, 0
  br i1 %664, label %665, label %._crit_edge64.loopexit

; <label>:665:                                    ; preds = %661
  call void @unroll_loop(i32 0)
  %666 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %667 = sext i8 %666 to i32
  %668 = icmp eq i32 %667, 47
  br i1 %668, label %669, label %670

; <label>:669:                                    ; preds = %665
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), i8** @progName, align 8
  br label %670

; <label>:670:                                    ; preds = %669, %665
  call void @__loop_iteration_test___0()
  %671 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %672 = sext i8 %671 to i32
  %673 = icmp ne i32 %672, 0
  br i1 %673, label %674, label %._crit_edge64.loopexit

; <label>:674:                                    ; preds = %670
  call void @unroll_loop(i32 0)
  %675 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %676 = sext i8 %675 to i32
  %677 = icmp eq i32 %676, 47
  br i1 %677, label %678, label %679

; <label>:678:                                    ; preds = %674
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), i8** @progName, align 8
  br label %679

; <label>:679:                                    ; preds = %678, %674
  call void @__loop_iteration_test___0()
  %680 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %681 = sext i8 %680 to i32
  %682 = icmp ne i32 %681, 0
  br i1 %682, label %683, label %._crit_edge64.loopexit

; <label>:683:                                    ; preds = %679
  call void @unroll_loop(i32 0)
  %684 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %685 = sext i8 %684 to i32
  %686 = icmp eq i32 %685, 47
  br i1 %686, label %687, label %688

; <label>:687:                                    ; preds = %683
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), i8** @progName, align 8
  br label %688

; <label>:688:                                    ; preds = %687, %683
  call void @__loop_iteration_test___0()
  %689 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %690 = sext i8 %689 to i32
  %691 = icmp ne i32 %690, 0
  br i1 %691, label %692, label %._crit_edge64.loopexit

; <label>:692:                                    ; preds = %688
  call void @unroll_loop(i32 0)
  %693 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %694 = sext i8 %693 to i32
  %695 = icmp eq i32 %694, 47
  br i1 %695, label %696, label %697

; <label>:696:                                    ; preds = %692
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), i8** @progName, align 8
  br label %697

; <label>:697:                                    ; preds = %696, %692
  call void @__loop_iteration_test___0()
  %698 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %699 = sext i8 %698 to i32
  %700 = icmp ne i32 %699, 0
  br i1 %700, label %701, label %._crit_edge64.loopexit

; <label>:701:                                    ; preds = %697
  call void @unroll_loop(i32 0)
  %702 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %703 = sext i8 %702 to i32
  %704 = icmp eq i32 %703, 47
  br i1 %704, label %705, label %706

; <label>:705:                                    ; preds = %701
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), i8** @progName, align 8
  br label %706

; <label>:706:                                    ; preds = %705, %701
  call void @__loop_iteration_test___0()
  %707 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), align 1
  %708 = sext i8 %707 to i32
  br label %._crit_edge64.loopexit

.lr.ph57.1:                                       ; preds = %.lr.ph57
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %709 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4, i64 1
  %710 = load i8*, i8** %scevgep7.1, align 8
  %711 = call %struct.zzzz* @snocString_clone.17(%struct.zzzz* %709, i8* %710)
  store %struct.zzzz* %711, %struct.zzzz** %22, align 8
  br label %._crit_edge58.loopexit

.lr.ph53.1:                                       ; preds = %82
  call void @unroll_loop(i32 2)
  %712 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %713 = load i8*, i8** %712, align 8
  %714 = getelementptr [10 x i8], [10 x i8]* @10, i64 0, i64 0
  %715 = getelementptr [3 x i8], [3 x i8]* @11, i64 0, i64 0
  %716 = call i32 @strcmp(i8* %714, i8* %715) #10
  %717 = icmp eq i32 1, 0
  br i1 false, label %742, label %718

; <label>:718:                                    ; preds = %.lr.ph53.1
  %719 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %720 = load i8*, i8** %719, align 8
  %721 = load i8, i8* %720, align 1
  %722 = sext i8 104 to i32
  %723 = icmp eq i32 104, 45
  %724 = zext i8 1 to i32
  %725 = icmp ne i32 1, 0
  %or.cond.1 = and i1 false, true
  br i1 false, label %742, label %726

; <label>:726:                                    ; preds = %718
  %727 = load i32, i32* @numFileNames, align 4
  %728 = add nsw i32 0, 1
  store i32 1, i32* @numFileNames, align 4
  %729 = load i32, i32* @longestFileName, align 4
  %730 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %731 = load i8*, i8** %730, align 8
  %732 = getelementptr [10 x i8], [10 x i8]* @12, i64 0, i64 0
  %733 = call i64 @strlen(i8* %732) #10
  %734 = trunc i64 9 to i32
  %735 = icmp slt i32 7, 9
  br i1 true, label %736, label %742

; <label>:736:                                    ; preds = %726
  %737 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %738 = load i8*, i8** %737, align 8
  %739 = getelementptr [10 x i8], [10 x i8]* @13, i64 0, i64 0
  %740 = call i64 @strlen(i8* %739) #10
  %741 = trunc i64 9 to i32
  store i32 9, i32* @longestFileName, align 4
  br label %742

; <label>:742:                                    ; preds = %736, %726, %718, %.lr.ph53.1
  %.1.1 = phi i8 [ 0, %.lr.ph53.1 ], [ 1, %718 ], [ 1, %736 ], [ 1, %726 ]
  call void @__loop_iteration_test___2()
  %743 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 1
  %744 = load %struct.zzzz*, %struct.zzzz** %743, align 8
  %745 = icmp ne i64 0, 0
  %746 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph53.2, label %._crit_edge54.loopexit

.lr.ph53.2:                                       ; preds = %742
  call void @unroll_loop(i32 2)
  %747 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %748 = load i8*, i8** %747, align 8
  %749 = call i32 @strcmp(i8* %748, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %773, label %751

; <label>:751:                                    ; preds = %.lr.ph53.2
  %752 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %753 = load i8*, i8** %752, align 8
  %754 = load i8, i8* %753, align 1
  %755 = sext i8 %754 to i32
  %756 = icmp eq i32 %755, 45
  %757 = zext i8 1 to i32
  %758 = icmp ne i32 %757, 0
  %or.cond.2 = and i1 %756, %758
  br i1 %or.cond.2, label %773, label %759

; <label>:759:                                    ; preds = %751
  %760 = load i32, i32* @numFileNames, align 4
  %761 = add nsw i32 %760, 1
  store i32 %761, i32* @numFileNames, align 4
  %762 = load i32, i32* @longestFileName, align 4
  %763 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %764 = load i8*, i8** %763, align 8
  %765 = call i64 @strlen(i8* %764) #10
  %766 = trunc i64 %765 to i32
  %767 = icmp slt i32 %762, %766
  br i1 %767, label %768, label %773

; <label>:768:                                    ; preds = %759
  %769 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %770 = load i8*, i8** %769, align 8
  %771 = call i64 @strlen(i8* %770) #10
  %772 = trunc i64 %771 to i32
  store i32 %772, i32* @longestFileName, align 4
  br label %773

; <label>:773:                                    ; preds = %768, %759, %751, %.lr.ph53.2
  %.1.2 = phi i8 [ 0, %.lr.ph53.2 ], [ 1, %751 ], [ 1, %768 ], [ 1, %759 ]
  call void @__loop_iteration_test___2()
  %774 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %775 = load %struct.zzzz*, %struct.zzzz** %774, align 8
  %776 = icmp ne %struct.zzzz* %775, null
  br i1 %776, label %.lr.ph53.3, label %._crit_edge54.loopexit

.lr.ph53.3:                                       ; preds = %773
  call void @unroll_loop(i32 2)
  %777 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %775, i32 0, i32 0
  %778 = load i8*, i8** %777, align 8
  %779 = call i32 @strcmp(i8* %778, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %780 = icmp eq i32 %779, 0
  br i1 %780, label %803, label %781

; <label>:781:                                    ; preds = %.lr.ph53.3
  %782 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %775, i32 0, i32 0
  %783 = load i8*, i8** %782, align 8
  %784 = load i8, i8* %783, align 1
  %785 = sext i8 %784 to i32
  %786 = icmp eq i32 %785, 45
  %787 = zext i8 %.1.2 to i32
  %788 = icmp ne i32 %787, 0
  %or.cond.3 = and i1 %786, %788
  br i1 %or.cond.3, label %803, label %789

; <label>:789:                                    ; preds = %781
  %790 = load i32, i32* @numFileNames, align 4
  %791 = add nsw i32 %790, 1
  store i32 %791, i32* @numFileNames, align 4
  %792 = load i32, i32* @longestFileName, align 4
  %793 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %775, i32 0, i32 0
  %794 = load i8*, i8** %793, align 8
  %795 = call i64 @strlen(i8* %794) #10
  %796 = trunc i64 %795 to i32
  %797 = icmp slt i32 %792, %796
  br i1 %797, label %798, label %803

; <label>:798:                                    ; preds = %789
  %799 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %775, i32 0, i32 0
  %800 = load i8*, i8** %799, align 8
  %801 = call i64 @strlen(i8* %800) #10
  %802 = trunc i64 %801 to i32
  store i32 %802, i32* @longestFileName, align 4
  br label %803

; <label>:803:                                    ; preds = %798, %789, %781, %.lr.ph53.3
  %.1.3 = phi i8 [ 0, %.lr.ph53.3 ], [ %.1.2, %781 ], [ %.1.2, %798 ], [ %.1.2, %789 ]
  call void @__loop_iteration_test___2()
  %804 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %775, i32 0, i32 1
  %805 = load %struct.zzzz*, %struct.zzzz** %804, align 8
  %806 = icmp ne %struct.zzzz* %805, null
  br i1 %806, label %.lr.ph53.4, label %._crit_edge54.loopexit

.lr.ph53.4:                                       ; preds = %803
  call void @unroll_loop(i32 2)
  %807 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %805, i32 0, i32 0
  %808 = load i8*, i8** %807, align 8
  %809 = call i32 @strcmp(i8* %808, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %833, label %811

; <label>:811:                                    ; preds = %.lr.ph53.4
  %812 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %805, i32 0, i32 0
  %813 = load i8*, i8** %812, align 8
  %814 = load i8, i8* %813, align 1
  %815 = sext i8 %814 to i32
  %816 = icmp eq i32 %815, 45
  %817 = zext i8 %.1.3 to i32
  %818 = icmp ne i32 %817, 0
  %or.cond.4 = and i1 %816, %818
  br i1 %or.cond.4, label %833, label %819

; <label>:819:                                    ; preds = %811
  %820 = load i32, i32* @numFileNames, align 4
  %821 = add nsw i32 %820, 1
  store i32 %821, i32* @numFileNames, align 4
  %822 = load i32, i32* @longestFileName, align 4
  %823 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %805, i32 0, i32 0
  %824 = load i8*, i8** %823, align 8
  %825 = call i64 @strlen(i8* %824) #10
  %826 = trunc i64 %825 to i32
  %827 = icmp slt i32 %822, %826
  br i1 %827, label %828, label %833

; <label>:828:                                    ; preds = %819
  %829 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %805, i32 0, i32 0
  %830 = load i8*, i8** %829, align 8
  %831 = call i64 @strlen(i8* %830) #10
  %832 = trunc i64 %831 to i32
  store i32 %832, i32* @longestFileName, align 4
  br label %833

; <label>:833:                                    ; preds = %828, %819, %811, %.lr.ph53.4
  %.1.4 = phi i8 [ 0, %.lr.ph53.4 ], [ %.1.3, %811 ], [ %.1.3, %828 ], [ %.1.3, %819 ]
  call void @__loop_iteration_test___2()
  %834 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %805, i32 0, i32 1
  %835 = load %struct.zzzz*, %struct.zzzz** %834, align 8
  %836 = icmp ne %struct.zzzz* %835, null
  br i1 %836, label %.lr.ph53.5, label %._crit_edge54.loopexit

.lr.ph53.5:                                       ; preds = %833
  call void @unroll_loop(i32 2)
  %837 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %835, i32 0, i32 0
  %838 = load i8*, i8** %837, align 8
  %839 = call i32 @strcmp(i8* %838, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %840 = icmp eq i32 %839, 0
  br i1 %840, label %863, label %841

; <label>:841:                                    ; preds = %.lr.ph53.5
  %842 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %835, i32 0, i32 0
  %843 = load i8*, i8** %842, align 8
  %844 = load i8, i8* %843, align 1
  %845 = sext i8 %844 to i32
  %846 = icmp eq i32 %845, 45
  %847 = zext i8 %.1.4 to i32
  %848 = icmp ne i32 %847, 0
  %or.cond.5 = and i1 %846, %848
  br i1 %or.cond.5, label %863, label %849

; <label>:849:                                    ; preds = %841
  %850 = load i32, i32* @numFileNames, align 4
  %851 = add nsw i32 %850, 1
  store i32 %851, i32* @numFileNames, align 4
  %852 = load i32, i32* @longestFileName, align 4
  %853 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %835, i32 0, i32 0
  %854 = load i8*, i8** %853, align 8
  %855 = call i64 @strlen(i8* %854) #10
  %856 = trunc i64 %855 to i32
  %857 = icmp slt i32 %852, %856
  br i1 %857, label %858, label %863

; <label>:858:                                    ; preds = %849
  %859 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %835, i32 0, i32 0
  %860 = load i8*, i8** %859, align 8
  %861 = call i64 @strlen(i8* %860) #10
  %862 = trunc i64 %861 to i32
  store i32 %862, i32* @longestFileName, align 4
  br label %863

; <label>:863:                                    ; preds = %858, %849, %841, %.lr.ph53.5
  %.1.5 = phi i8 [ 0, %.lr.ph53.5 ], [ %.1.4, %841 ], [ %.1.4, %858 ], [ %.1.4, %849 ]
  call void @__loop_iteration_test___2()
  %864 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %835, i32 0, i32 1
  %865 = load %struct.zzzz*, %struct.zzzz** %864, align 8
  %866 = icmp ne %struct.zzzz* %865, null
  br i1 %866, label %.lr.ph53.6, label %._crit_edge54.loopexit

.lr.ph53.6:                                       ; preds = %863
  call void @unroll_loop(i32 2)
  %867 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %865, i32 0, i32 0
  %868 = load i8*, i8** %867, align 8
  %869 = call i32 @strcmp(i8* %868, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %870 = icmp eq i32 %869, 0
  br i1 %870, label %893, label %871

; <label>:871:                                    ; preds = %.lr.ph53.6
  %872 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %865, i32 0, i32 0
  %873 = load i8*, i8** %872, align 8
  %874 = load i8, i8* %873, align 1
  %875 = sext i8 %874 to i32
  %876 = icmp eq i32 %875, 45
  %877 = zext i8 %.1.5 to i32
  %878 = icmp ne i32 %877, 0
  %or.cond.6 = and i1 %876, %878
  br i1 %or.cond.6, label %893, label %879

; <label>:879:                                    ; preds = %871
  %880 = load i32, i32* @numFileNames, align 4
  %881 = add nsw i32 %880, 1
  store i32 %881, i32* @numFileNames, align 4
  %882 = load i32, i32* @longestFileName, align 4
  %883 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %865, i32 0, i32 0
  %884 = load i8*, i8** %883, align 8
  %885 = call i64 @strlen(i8* %884) #10
  %886 = trunc i64 %885 to i32
  %887 = icmp slt i32 %882, %886
  br i1 %887, label %888, label %893

; <label>:888:                                    ; preds = %879
  %889 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %865, i32 0, i32 0
  %890 = load i8*, i8** %889, align 8
  %891 = call i64 @strlen(i8* %890) #10
  %892 = trunc i64 %891 to i32
  store i32 %892, i32* @longestFileName, align 4
  br label %893

; <label>:893:                                    ; preds = %888, %879, %871, %.lr.ph53.6
  %.1.6 = phi i8 [ 0, %.lr.ph53.6 ], [ %.1.5, %871 ], [ %.1.5, %888 ], [ %.1.5, %879 ]
  call void @__loop_iteration_test___2()
  %894 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %865, i32 0, i32 1
  %895 = load %struct.zzzz*, %struct.zzzz** %894, align 8
  %896 = icmp ne %struct.zzzz* %895, null
  br i1 %896, label %.lr.ph53.7, label %._crit_edge54.loopexit

.lr.ph53.7:                                       ; preds = %893
  call void @unroll_loop(i32 2)
  %897 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %895, i32 0, i32 0
  %898 = load i8*, i8** %897, align 8
  %899 = call i32 @strcmp(i8* %898, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %900 = icmp eq i32 %899, 0
  br i1 %900, label %923, label %901

; <label>:901:                                    ; preds = %.lr.ph53.7
  %902 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %895, i32 0, i32 0
  %903 = load i8*, i8** %902, align 8
  %904 = load i8, i8* %903, align 1
  %905 = sext i8 %904 to i32
  %906 = icmp eq i32 %905, 45
  %907 = zext i8 %.1.6 to i32
  %908 = icmp ne i32 %907, 0
  %or.cond.7 = and i1 %906, %908
  br i1 %or.cond.7, label %923, label %909

; <label>:909:                                    ; preds = %901
  %910 = load i32, i32* @numFileNames, align 4
  %911 = add nsw i32 %910, 1
  store i32 %911, i32* @numFileNames, align 4
  %912 = load i32, i32* @longestFileName, align 4
  %913 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %895, i32 0, i32 0
  %914 = load i8*, i8** %913, align 8
  %915 = call i64 @strlen(i8* %914) #10
  %916 = trunc i64 %915 to i32
  %917 = icmp slt i32 %912, %916
  br i1 %917, label %918, label %923

; <label>:918:                                    ; preds = %909
  %919 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %895, i32 0, i32 0
  %920 = load i8*, i8** %919, align 8
  %921 = call i64 @strlen(i8* %920) #10
  %922 = trunc i64 %921 to i32
  store i32 %922, i32* @longestFileName, align 4
  br label %923

; <label>:923:                                    ; preds = %918, %909, %901, %.lr.ph53.7
  %.1.7 = phi i8 [ 0, %.lr.ph53.7 ], [ %.1.6, %901 ], [ %.1.6, %918 ], [ %.1.6, %909 ]
  call void @__loop_iteration_test___2()
  %924 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %895, i32 0, i32 1
  %925 = load %struct.zzzz*, %struct.zzzz** %924, align 8
  %926 = icmp ne %struct.zzzz* %925, null
  br i1 %926, label %.lr.ph53.8, label %._crit_edge54.loopexit

.lr.ph53.8:                                       ; preds = %923
  call void @unroll_loop(i32 2)
  %927 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %925, i32 0, i32 0
  %928 = load i8*, i8** %927, align 8
  %929 = call i32 @strcmp(i8* %928, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %953, label %931

; <label>:931:                                    ; preds = %.lr.ph53.8
  %932 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %925, i32 0, i32 0
  %933 = load i8*, i8** %932, align 8
  %934 = load i8, i8* %933, align 1
  %935 = sext i8 %934 to i32
  %936 = icmp eq i32 %935, 45
  %937 = zext i8 %.1.7 to i32
  %938 = icmp ne i32 %937, 0
  %or.cond.8 = and i1 %936, %938
  br i1 %or.cond.8, label %953, label %939

; <label>:939:                                    ; preds = %931
  %940 = load i32, i32* @numFileNames, align 4
  %941 = add nsw i32 %940, 1
  store i32 %941, i32* @numFileNames, align 4
  %942 = load i32, i32* @longestFileName, align 4
  %943 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %925, i32 0, i32 0
  %944 = load i8*, i8** %943, align 8
  %945 = call i64 @strlen(i8* %944) #10
  %946 = trunc i64 %945 to i32
  %947 = icmp slt i32 %942, %946
  br i1 %947, label %948, label %953

; <label>:948:                                    ; preds = %939
  %949 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %925, i32 0, i32 0
  %950 = load i8*, i8** %949, align 8
  %951 = call i64 @strlen(i8* %950) #10
  %952 = trunc i64 %951 to i32
  store i32 %952, i32* @longestFileName, align 4
  br label %953

; <label>:953:                                    ; preds = %948, %939, %931, %.lr.ph53.8
  %.1.8 = phi i8 [ 0, %.lr.ph53.8 ], [ %.1.7, %931 ], [ %.1.7, %948 ], [ %.1.7, %939 ]
  call void @__loop_iteration_test___2()
  %954 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %925, i32 0, i32 1
  %955 = load %struct.zzzz*, %struct.zzzz** %954, align 8
  %956 = icmp ne %struct.zzzz* %955, null
  br i1 %956, label %.lr.ph53.9, label %._crit_edge54.loopexit

.lr.ph53.9:                                       ; preds = %953
  call void @unroll_loop(i32 2)
  %957 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %955, i32 0, i32 0
  %958 = load i8*, i8** %957, align 8
  %959 = call i32 @strcmp(i8* %958, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %960 = icmp eq i32 %959, 0
  br i1 %960, label %983, label %961

; <label>:961:                                    ; preds = %.lr.ph53.9
  %962 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %955, i32 0, i32 0
  %963 = load i8*, i8** %962, align 8
  %964 = load i8, i8* %963, align 1
  %965 = sext i8 %964 to i32
  %966 = icmp eq i32 %965, 45
  %967 = zext i8 %.1.8 to i32
  %968 = icmp ne i32 %967, 0
  %or.cond.9 = and i1 %966, %968
  br i1 %or.cond.9, label %983, label %969

; <label>:969:                                    ; preds = %961
  %970 = load i32, i32* @numFileNames, align 4
  %971 = add nsw i32 %970, 1
  store i32 %971, i32* @numFileNames, align 4
  %972 = load i32, i32* @longestFileName, align 4
  %973 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %955, i32 0, i32 0
  %974 = load i8*, i8** %973, align 8
  %975 = call i64 @strlen(i8* %974) #10
  %976 = trunc i64 %975 to i32
  %977 = icmp slt i32 %972, %976
  br i1 %977, label %978, label %983

; <label>:978:                                    ; preds = %969
  %979 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %955, i32 0, i32 0
  %980 = load i8*, i8** %979, align 8
  %981 = call i64 @strlen(i8* %980) #10
  %982 = trunc i64 %981 to i32
  store i32 %982, i32* @longestFileName, align 4
  br label %983

; <label>:983:                                    ; preds = %978, %969, %961, %.lr.ph53.9
  %.1.9 = phi i8 [ 0, %.lr.ph53.9 ], [ %.1.8, %961 ], [ %.1.8, %978 ], [ %.1.8, %969 ]
  call void @__loop_iteration_test___2()
  %984 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %955, i32 0, i32 1
  %985 = load %struct.zzzz*, %struct.zzzz** %984, align 8
  %986 = icmp ne %struct.zzzz* %985, null
  br i1 %986, label %.lr.ph53.10, label %._crit_edge54.loopexit

.lr.ph53.10:                                      ; preds = %983
  call void @unroll_loop(i32 2)
  %987 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %985, i32 0, i32 0
  %988 = load i8*, i8** %987, align 8
  %989 = call i32 @strcmp(i8* %988, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %990 = icmp eq i32 %989, 0
  br i1 %990, label %1013, label %991

; <label>:991:                                    ; preds = %.lr.ph53.10
  %992 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %985, i32 0, i32 0
  %993 = load i8*, i8** %992, align 8
  %994 = load i8, i8* %993, align 1
  %995 = sext i8 %994 to i32
  %996 = icmp eq i32 %995, 45
  %997 = zext i8 %.1.9 to i32
  %998 = icmp ne i32 %997, 0
  %or.cond.10 = and i1 %996, %998
  br i1 %or.cond.10, label %1013, label %999

; <label>:999:                                    ; preds = %991
  %1000 = load i32, i32* @numFileNames, align 4
  %1001 = add nsw i32 %1000, 1
  store i32 %1001, i32* @numFileNames, align 4
  %1002 = load i32, i32* @longestFileName, align 4
  %1003 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %985, i32 0, i32 0
  %1004 = load i8*, i8** %1003, align 8
  %1005 = call i64 @strlen(i8* %1004) #10
  %1006 = trunc i64 %1005 to i32
  %1007 = icmp slt i32 %1002, %1006
  br i1 %1007, label %1008, label %1013

; <label>:1008:                                   ; preds = %999
  %1009 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %985, i32 0, i32 0
  %1010 = load i8*, i8** %1009, align 8
  %1011 = call i64 @strlen(i8* %1010) #10
  %1012 = trunc i64 %1011 to i32
  store i32 %1012, i32* @longestFileName, align 4
  br label %1013

; <label>:1013:                                   ; preds = %1008, %999, %991, %.lr.ph53.10
  %.1.10 = phi i8 [ 0, %.lr.ph53.10 ], [ %.1.9, %991 ], [ %.1.9, %1008 ], [ %.1.9, %999 ]
  call void @__loop_iteration_test___2()
  %1014 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %985, i32 0, i32 1
  %1015 = load %struct.zzzz*, %struct.zzzz** %1014, align 8
  %1016 = icmp ne %struct.zzzz* %1015, null
  br i1 %1016, label %.lr.ph53.11, label %._crit_edge54.loopexit

.lr.ph53.11:                                      ; preds = %1013
  call void @unroll_loop(i32 2)
  %1017 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1015, i32 0, i32 0
  %1018 = load i8*, i8** %1017, align 8
  %1019 = call i32 @strcmp(i8* %1018, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1020 = icmp eq i32 %1019, 0
  br i1 %1020, label %1043, label %1021

; <label>:1021:                                   ; preds = %.lr.ph53.11
  %1022 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1015, i32 0, i32 0
  %1023 = load i8*, i8** %1022, align 8
  %1024 = load i8, i8* %1023, align 1
  %1025 = sext i8 %1024 to i32
  %1026 = icmp eq i32 %1025, 45
  %1027 = zext i8 %.1.10 to i32
  %1028 = icmp ne i32 %1027, 0
  %or.cond.11 = and i1 %1026, %1028
  br i1 %or.cond.11, label %1043, label %1029

; <label>:1029:                                   ; preds = %1021
  %1030 = load i32, i32* @numFileNames, align 4
  %1031 = add nsw i32 %1030, 1
  store i32 %1031, i32* @numFileNames, align 4
  %1032 = load i32, i32* @longestFileName, align 4
  %1033 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1015, i32 0, i32 0
  %1034 = load i8*, i8** %1033, align 8
  %1035 = call i64 @strlen(i8* %1034) #10
  %1036 = trunc i64 %1035 to i32
  %1037 = icmp slt i32 %1032, %1036
  br i1 %1037, label %1038, label %1043

; <label>:1038:                                   ; preds = %1029
  %1039 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1015, i32 0, i32 0
  %1040 = load i8*, i8** %1039, align 8
  %1041 = call i64 @strlen(i8* %1040) #10
  %1042 = trunc i64 %1041 to i32
  store i32 %1042, i32* @longestFileName, align 4
  br label %1043

; <label>:1043:                                   ; preds = %1038, %1029, %1021, %.lr.ph53.11
  %.1.11 = phi i8 [ 0, %.lr.ph53.11 ], [ %.1.10, %1021 ], [ %.1.10, %1038 ], [ %.1.10, %1029 ]
  call void @__loop_iteration_test___2()
  %1044 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1015, i32 0, i32 1
  %1045 = load %struct.zzzz*, %struct.zzzz** %1044, align 8
  %1046 = icmp ne %struct.zzzz* %1045, null
  br i1 %1046, label %.lr.ph53.12, label %._crit_edge54.loopexit

.lr.ph53.12:                                      ; preds = %1043
  call void @unroll_loop(i32 2)
  %1047 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1045, i32 0, i32 0
  %1048 = load i8*, i8** %1047, align 8
  %1049 = call i32 @strcmp(i8* %1048, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1050 = icmp eq i32 %1049, 0
  br i1 %1050, label %1073, label %1051

; <label>:1051:                                   ; preds = %.lr.ph53.12
  %1052 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1045, i32 0, i32 0
  %1053 = load i8*, i8** %1052, align 8
  %1054 = load i8, i8* %1053, align 1
  %1055 = sext i8 %1054 to i32
  %1056 = icmp eq i32 %1055, 45
  %1057 = zext i8 %.1.11 to i32
  %1058 = icmp ne i32 %1057, 0
  %or.cond.12 = and i1 %1056, %1058
  br i1 %or.cond.12, label %1073, label %1059

; <label>:1059:                                   ; preds = %1051
  %1060 = load i32, i32* @numFileNames, align 4
  %1061 = add nsw i32 %1060, 1
  store i32 %1061, i32* @numFileNames, align 4
  %1062 = load i32, i32* @longestFileName, align 4
  %1063 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1045, i32 0, i32 0
  %1064 = load i8*, i8** %1063, align 8
  %1065 = call i64 @strlen(i8* %1064) #10
  %1066 = trunc i64 %1065 to i32
  %1067 = icmp slt i32 %1062, %1066
  br i1 %1067, label %1068, label %1073

; <label>:1068:                                   ; preds = %1059
  %1069 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1045, i32 0, i32 0
  %1070 = load i8*, i8** %1069, align 8
  %1071 = call i64 @strlen(i8* %1070) #10
  %1072 = trunc i64 %1071 to i32
  store i32 %1072, i32* @longestFileName, align 4
  br label %1073

; <label>:1073:                                   ; preds = %1068, %1059, %1051, %.lr.ph53.12
  %.1.12 = phi i8 [ 0, %.lr.ph53.12 ], [ %.1.11, %1051 ], [ %.1.11, %1068 ], [ %.1.11, %1059 ]
  call void @__loop_iteration_test___2()
  %1074 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1045, i32 0, i32 1
  %1075 = load %struct.zzzz*, %struct.zzzz** %1074, align 8
  %1076 = icmp ne %struct.zzzz* %1075, null
  br i1 %1076, label %.lr.ph53.13, label %._crit_edge54.loopexit

.lr.ph53.13:                                      ; preds = %1073
  call void @unroll_loop(i32 2)
  %1077 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1075, i32 0, i32 0
  %1078 = load i8*, i8** %1077, align 8
  %1079 = call i32 @strcmp(i8* %1078, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1080 = icmp eq i32 %1079, 0
  br i1 %1080, label %1103, label %1081

; <label>:1081:                                   ; preds = %.lr.ph53.13
  %1082 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1075, i32 0, i32 0
  %1083 = load i8*, i8** %1082, align 8
  %1084 = load i8, i8* %1083, align 1
  %1085 = sext i8 %1084 to i32
  %1086 = icmp eq i32 %1085, 45
  %1087 = zext i8 %.1.12 to i32
  %1088 = icmp ne i32 %1087, 0
  %or.cond.13 = and i1 %1086, %1088
  br i1 %or.cond.13, label %1103, label %1089

; <label>:1089:                                   ; preds = %1081
  %1090 = load i32, i32* @numFileNames, align 4
  %1091 = add nsw i32 %1090, 1
  store i32 %1091, i32* @numFileNames, align 4
  %1092 = load i32, i32* @longestFileName, align 4
  %1093 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1075, i32 0, i32 0
  %1094 = load i8*, i8** %1093, align 8
  %1095 = call i64 @strlen(i8* %1094) #10
  %1096 = trunc i64 %1095 to i32
  %1097 = icmp slt i32 %1092, %1096
  br i1 %1097, label %1098, label %1103

; <label>:1098:                                   ; preds = %1089
  %1099 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1075, i32 0, i32 0
  %1100 = load i8*, i8** %1099, align 8
  %1101 = call i64 @strlen(i8* %1100) #10
  %1102 = trunc i64 %1101 to i32
  store i32 %1102, i32* @longestFileName, align 4
  br label %1103

; <label>:1103:                                   ; preds = %1098, %1089, %1081, %.lr.ph53.13
  %.1.13 = phi i8 [ 0, %.lr.ph53.13 ], [ %.1.12, %1081 ], [ %.1.12, %1098 ], [ %.1.12, %1089 ]
  call void @__loop_iteration_test___2()
  %1104 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1075, i32 0, i32 1
  %1105 = load %struct.zzzz*, %struct.zzzz** %1104, align 8
  %1106 = icmp ne %struct.zzzz* %1105, null
  br i1 %1106, label %.lr.ph53.14, label %._crit_edge54.loopexit

.lr.ph53.14:                                      ; preds = %1103
  call void @unroll_loop(i32 2)
  %1107 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1105, i32 0, i32 0
  %1108 = load i8*, i8** %1107, align 8
  %1109 = call i32 @strcmp(i8* %1108, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1133, label %1111

; <label>:1111:                                   ; preds = %.lr.ph53.14
  %1112 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1105, i32 0, i32 0
  %1113 = load i8*, i8** %1112, align 8
  %1114 = load i8, i8* %1113, align 1
  %1115 = sext i8 %1114 to i32
  %1116 = icmp eq i32 %1115, 45
  %1117 = zext i8 %.1.13 to i32
  %1118 = icmp ne i32 %1117, 0
  %or.cond.14 = and i1 %1116, %1118
  br i1 %or.cond.14, label %1133, label %1119

; <label>:1119:                                   ; preds = %1111
  %1120 = load i32, i32* @numFileNames, align 4
  %1121 = add nsw i32 %1120, 1
  store i32 %1121, i32* @numFileNames, align 4
  %1122 = load i32, i32* @longestFileName, align 4
  %1123 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1105, i32 0, i32 0
  %1124 = load i8*, i8** %1123, align 8
  %1125 = call i64 @strlen(i8* %1124) #10
  %1126 = trunc i64 %1125 to i32
  %1127 = icmp slt i32 %1122, %1126
  br i1 %1127, label %1128, label %1133

; <label>:1128:                                   ; preds = %1119
  %1129 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1105, i32 0, i32 0
  %1130 = load i8*, i8** %1129, align 8
  %1131 = call i64 @strlen(i8* %1130) #10
  %1132 = trunc i64 %1131 to i32
  store i32 %1132, i32* @longestFileName, align 4
  br label %1133

; <label>:1133:                                   ; preds = %1128, %1119, %1111, %.lr.ph53.14
  %.1.14 = phi i8 [ 0, %.lr.ph53.14 ], [ %.1.13, %1111 ], [ %.1.13, %1128 ], [ %.1.13, %1119 ]
  call void @__loop_iteration_test___2()
  %1134 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1105, i32 0, i32 1
  %1135 = load %struct.zzzz*, %struct.zzzz** %1134, align 8
  %1136 = icmp ne %struct.zzzz* %1135, null
  br i1 %1136, label %.lr.ph53.15, label %._crit_edge54.loopexit

.lr.ph53.15:                                      ; preds = %1133
  call void @unroll_loop(i32 2)
  %1137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1135, i32 0, i32 0
  %1138 = load i8*, i8** %1137, align 8
  %1139 = call i32 @strcmp(i8* %1138, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1140 = icmp eq i32 %1139, 0
  br i1 %1140, label %1163, label %1141

; <label>:1141:                                   ; preds = %.lr.ph53.15
  %1142 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1135, i32 0, i32 0
  %1143 = load i8*, i8** %1142, align 8
  %1144 = load i8, i8* %1143, align 1
  %1145 = sext i8 %1144 to i32
  %1146 = icmp eq i32 %1145, 45
  %1147 = zext i8 %.1.14 to i32
  %1148 = icmp ne i32 %1147, 0
  %or.cond.15 = and i1 %1146, %1148
  br i1 %or.cond.15, label %1163, label %1149

; <label>:1149:                                   ; preds = %1141
  %1150 = load i32, i32* @numFileNames, align 4
  %1151 = add nsw i32 %1150, 1
  store i32 %1151, i32* @numFileNames, align 4
  %1152 = load i32, i32* @longestFileName, align 4
  %1153 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1135, i32 0, i32 0
  %1154 = load i8*, i8** %1153, align 8
  %1155 = call i64 @strlen(i8* %1154) #10
  %1156 = trunc i64 %1155 to i32
  %1157 = icmp slt i32 %1152, %1156
  br i1 %1157, label %1158, label %1163

; <label>:1158:                                   ; preds = %1149
  %1159 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1135, i32 0, i32 0
  %1160 = load i8*, i8** %1159, align 8
  %1161 = call i64 @strlen(i8* %1160) #10
  %1162 = trunc i64 %1161 to i32
  store i32 %1162, i32* @longestFileName, align 4
  br label %1163

; <label>:1163:                                   ; preds = %1158, %1149, %1141, %.lr.ph53.15
  %.1.15 = phi i8 [ 0, %.lr.ph53.15 ], [ %.1.14, %1141 ], [ %.1.14, %1158 ], [ %.1.14, %1149 ]
  call void @__loop_iteration_test___2()
  %1164 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1135, i32 0, i32 1
  %1165 = load %struct.zzzz*, %struct.zzzz** %1164, align 8
  %1166 = icmp ne %struct.zzzz* %1165, null
  br i1 %1166, label %.lr.ph53.16, label %._crit_edge54.loopexit

.lr.ph53.16:                                      ; preds = %1163
  call void @unroll_loop(i32 2)
  %1167 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1165, i32 0, i32 0
  %1168 = load i8*, i8** %1167, align 8
  %1169 = call i32 @strcmp(i8* %1168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1170 = icmp eq i32 %1169, 0
  br i1 %1170, label %1193, label %1171

; <label>:1171:                                   ; preds = %.lr.ph53.16
  %1172 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1165, i32 0, i32 0
  %1173 = load i8*, i8** %1172, align 8
  %1174 = load i8, i8* %1173, align 1
  %1175 = sext i8 %1174 to i32
  %1176 = icmp eq i32 %1175, 45
  %1177 = zext i8 %.1.15 to i32
  %1178 = icmp ne i32 %1177, 0
  %or.cond.16 = and i1 %1176, %1178
  br i1 %or.cond.16, label %1193, label %1179

; <label>:1179:                                   ; preds = %1171
  %1180 = load i32, i32* @numFileNames, align 4
  %1181 = add nsw i32 %1180, 1
  store i32 %1181, i32* @numFileNames, align 4
  %1182 = load i32, i32* @longestFileName, align 4
  %1183 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1165, i32 0, i32 0
  %1184 = load i8*, i8** %1183, align 8
  %1185 = call i64 @strlen(i8* %1184) #10
  %1186 = trunc i64 %1185 to i32
  %1187 = icmp slt i32 %1182, %1186
  br i1 %1187, label %1188, label %1193

; <label>:1188:                                   ; preds = %1179
  %1189 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1165, i32 0, i32 0
  %1190 = load i8*, i8** %1189, align 8
  %1191 = call i64 @strlen(i8* %1190) #10
  %1192 = trunc i64 %1191 to i32
  store i32 %1192, i32* @longestFileName, align 4
  br label %1193

; <label>:1193:                                   ; preds = %1188, %1179, %1171, %.lr.ph53.16
  %.1.16 = phi i8 [ 0, %.lr.ph53.16 ], [ %.1.15, %1171 ], [ %.1.15, %1188 ], [ %.1.15, %1179 ]
  call void @__loop_iteration_test___2()
  %1194 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1165, i32 0, i32 1
  %1195 = load %struct.zzzz*, %struct.zzzz** %1194, align 8
  %1196 = icmp ne %struct.zzzz* %1195, null
  br i1 %1196, label %.lr.ph53.17, label %._crit_edge54.loopexit

.lr.ph53.17:                                      ; preds = %1193
  call void @unroll_loop(i32 2)
  %1197 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1195, i32 0, i32 0
  %1198 = load i8*, i8** %1197, align 8
  %1199 = call i32 @strcmp(i8* %1198, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1200 = icmp eq i32 %1199, 0
  br i1 %1200, label %1223, label %1201

; <label>:1201:                                   ; preds = %.lr.ph53.17
  %1202 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1195, i32 0, i32 0
  %1203 = load i8*, i8** %1202, align 8
  %1204 = load i8, i8* %1203, align 1
  %1205 = sext i8 %1204 to i32
  %1206 = icmp eq i32 %1205, 45
  %1207 = zext i8 %.1.16 to i32
  %1208 = icmp ne i32 %1207, 0
  %or.cond.17 = and i1 %1206, %1208
  br i1 %or.cond.17, label %1223, label %1209

; <label>:1209:                                   ; preds = %1201
  %1210 = load i32, i32* @numFileNames, align 4
  %1211 = add nsw i32 %1210, 1
  store i32 %1211, i32* @numFileNames, align 4
  %1212 = load i32, i32* @longestFileName, align 4
  %1213 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1195, i32 0, i32 0
  %1214 = load i8*, i8** %1213, align 8
  %1215 = call i64 @strlen(i8* %1214) #10
  %1216 = trunc i64 %1215 to i32
  %1217 = icmp slt i32 %1212, %1216
  br i1 %1217, label %1218, label %1223

; <label>:1218:                                   ; preds = %1209
  %1219 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1195, i32 0, i32 0
  %1220 = load i8*, i8** %1219, align 8
  %1221 = call i64 @strlen(i8* %1220) #10
  %1222 = trunc i64 %1221 to i32
  store i32 %1222, i32* @longestFileName, align 4
  br label %1223

; <label>:1223:                                   ; preds = %1218, %1209, %1201, %.lr.ph53.17
  %.1.17 = phi i8 [ 0, %.lr.ph53.17 ], [ %.1.16, %1201 ], [ %.1.16, %1218 ], [ %.1.16, %1209 ]
  call void @__loop_iteration_test___2()
  %1224 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1195, i32 0, i32 1
  %1225 = load %struct.zzzz*, %struct.zzzz** %1224, align 8
  %1226 = icmp ne %struct.zzzz* %1225, null
  br i1 %1226, label %.lr.ph53.18, label %._crit_edge54.loopexit

.lr.ph53.18:                                      ; preds = %1223
  call void @unroll_loop(i32 2)
  %1227 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1225, i32 0, i32 0
  %1228 = load i8*, i8** %1227, align 8
  %1229 = call i32 @strcmp(i8* %1228, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1230 = icmp eq i32 %1229, 0
  br i1 %1230, label %1253, label %1231

; <label>:1231:                                   ; preds = %.lr.ph53.18
  %1232 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1225, i32 0, i32 0
  %1233 = load i8*, i8** %1232, align 8
  %1234 = load i8, i8* %1233, align 1
  %1235 = sext i8 %1234 to i32
  %1236 = icmp eq i32 %1235, 45
  %1237 = zext i8 %.1.17 to i32
  %1238 = icmp ne i32 %1237, 0
  %or.cond.18 = and i1 %1236, %1238
  br i1 %or.cond.18, label %1253, label %1239

; <label>:1239:                                   ; preds = %1231
  %1240 = load i32, i32* @numFileNames, align 4
  %1241 = add nsw i32 %1240, 1
  store i32 %1241, i32* @numFileNames, align 4
  %1242 = load i32, i32* @longestFileName, align 4
  %1243 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1225, i32 0, i32 0
  %1244 = load i8*, i8** %1243, align 8
  %1245 = call i64 @strlen(i8* %1244) #10
  %1246 = trunc i64 %1245 to i32
  %1247 = icmp slt i32 %1242, %1246
  br i1 %1247, label %1248, label %1253

; <label>:1248:                                   ; preds = %1239
  %1249 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1225, i32 0, i32 0
  %1250 = load i8*, i8** %1249, align 8
  %1251 = call i64 @strlen(i8* %1250) #10
  %1252 = trunc i64 %1251 to i32
  store i32 %1252, i32* @longestFileName, align 4
  br label %1253

; <label>:1253:                                   ; preds = %1248, %1239, %1231, %.lr.ph53.18
  %.1.18 = phi i8 [ 0, %.lr.ph53.18 ], [ %.1.17, %1231 ], [ %.1.17, %1248 ], [ %.1.17, %1239 ]
  call void @__loop_iteration_test___2()
  %1254 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1225, i32 0, i32 1
  %1255 = load %struct.zzzz*, %struct.zzzz** %1254, align 8
  %1256 = icmp ne %struct.zzzz* %1255, null
  br i1 %1256, label %.lr.ph53.19, label %._crit_edge54.loopexit

.lr.ph53.19:                                      ; preds = %1253
  call void @unroll_loop(i32 2)
  %1257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1255, i32 0, i32 0
  %1258 = load i8*, i8** %1257, align 8
  %1259 = call i32 @strcmp(i8* %1258, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1260 = icmp eq i32 %1259, 0
  br i1 %1260, label %1283, label %1261

; <label>:1261:                                   ; preds = %.lr.ph53.19
  %1262 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1255, i32 0, i32 0
  %1263 = load i8*, i8** %1262, align 8
  %1264 = load i8, i8* %1263, align 1
  %1265 = sext i8 %1264 to i32
  %1266 = icmp eq i32 %1265, 45
  %1267 = zext i8 %.1.18 to i32
  %1268 = icmp ne i32 %1267, 0
  %or.cond.19 = and i1 %1266, %1268
  br i1 %or.cond.19, label %1283, label %1269

; <label>:1269:                                   ; preds = %1261
  %1270 = load i32, i32* @numFileNames, align 4
  %1271 = add nsw i32 %1270, 1
  store i32 %1271, i32* @numFileNames, align 4
  %1272 = load i32, i32* @longestFileName, align 4
  %1273 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1255, i32 0, i32 0
  %1274 = load i8*, i8** %1273, align 8
  %1275 = call i64 @strlen(i8* %1274) #10
  %1276 = trunc i64 %1275 to i32
  %1277 = icmp slt i32 %1272, %1276
  br i1 %1277, label %1278, label %1283

; <label>:1278:                                   ; preds = %1269
  %1279 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1255, i32 0, i32 0
  %1280 = load i8*, i8** %1279, align 8
  %1281 = call i64 @strlen(i8* %1280) #10
  %1282 = trunc i64 %1281 to i32
  store i32 %1282, i32* @longestFileName, align 4
  br label %1283

; <label>:1283:                                   ; preds = %1278, %1269, %1261, %.lr.ph53.19
  call void @__loop_iteration_test___2()
  %1284 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1255, i32 0, i32 1
  %1285 = load %struct.zzzz*, %struct.zzzz** %1284, align 8
  br label %._crit_edge54.loopexit

.lr.ph48.1:                                       ; preds = %._crit_edge43
  call void @unroll_loop(i32 3)
  %1286 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1287 = load i8*, i8** %1286, align 8
  %1288 = getelementptr [10 x i8], [10 x i8]* @16, i64 0, i64 0
  %1289 = getelementptr [3 x i8], [3 x i8]* @17, i64 0, i64 0
  %1290 = call i32 @strcmp(i8* %1288, i8* %1289) #10
  %1291 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %1292

; <label>:1292:                                   ; preds = %.lr.ph48.1
  %1293 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1294 = load i8*, i8** %1293, align 8
  %1295 = load i8, i8* %1294, align 1
  %1296 = sext i8 104 to i32
  %1297 = icmp eq i32 104, 45
  br i1 false, label %1298, label %._crit_edge43.1

; <label>:1298:                                   ; preds = %1292
  %1299 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1300 = load i8*, i8** %1299, align 8
  %1301 = getelementptr inbounds i8, i8* %1300, i64 1
  %1302 = load i8, i8* %1301, align 1
  %1303 = sext i8 %1302 to i32
  %1304 = icmp ne i32 %1303, 45
  br i1 %1304, label %1305, label %._crit_edge43.1

; <label>:1305:                                   ; preds = %1298
  %1306 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1307 = load i8*, i8** %1306, align 8
  %1308 = getelementptr inbounds i8, i8* %1307, i64 1
  %1309 = load i8, i8* %1308, align 1
  %1310 = sext i8 %1309 to i32
  %1311 = icmp ne i32 %1310, 0
  br i1 %1311, label %.lr.ph42.preheader.1, label %._crit_edge43.1

.lr.ph42.preheader.1:                             ; preds = %1305
  %1312 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  br label %.lr.ph42.1

.lr.ph42.1:                                       ; preds = %1337, %.lr.ph42.preheader.1
  %lsr.iv.1 = phi i64 [ 0, %.lr.ph42.preheader.1 ], [ %lsr.iv.next.1, %1337 ]
  call void @unroll_loop(i32 4)
  %1313 = load i8*, i8** %1312, align 8
  %scevgep.1 = getelementptr i8, i8* %1313, i64 1
  %scevgep1.1 = getelementptr i8, i8* %scevgep.1, i64 %lsr.iv.1
  %1314 = load i8, i8* %scevgep1.1, align 1
  %1315 = sext i8 %1314 to i32
  switch i32 %1315, label %.loopexit3 [
    i32 99, label %1336
    i32 100, label %1335
    i32 122, label %1334
    i32 102, label %1333
    i32 116, label %1332
    i32 107, label %1331
    i32 115, label %1330
    i32 113, label %1329
    i32 49, label %1328
    i32 50, label %1327
    i32 51, label %1326
    i32 52, label %1325
    i32 53, label %1324
    i32 54, label %1323
    i32 55, label %1322
    i32 56, label %1321
    i32 57, label %1320
    i32 86, label %1319
    i32 76, label %1319
    i32 118, label %1316
    i32 104, label %.loopexit4
  ]

; <label>:1316:                                   ; preds = %.lr.ph42.1
  %1317 = load i32, i32* @verbosity, align 4
  %1318 = add nsw i32 %1317, 1
  store i32 %1318, i32* @verbosity, align 4
  br label %1337

; <label>:1319:                                   ; preds = %.lr.ph42.1, %.lr.ph42.1
  call void @license()
  br label %1337

; <label>:1320:                                   ; preds = %.lr.ph42.1
  store i32 9, i32* @blockSize100k, align 4
  br label %1337

; <label>:1321:                                   ; preds = %.lr.ph42.1
  store i32 8, i32* @blockSize100k, align 4
  br label %1337

; <label>:1322:                                   ; preds = %.lr.ph42.1
  store i32 7, i32* @blockSize100k, align 4
  br label %1337

; <label>:1323:                                   ; preds = %.lr.ph42.1
  store i32 6, i32* @blockSize100k, align 4
  br label %1337

; <label>:1324:                                   ; preds = %.lr.ph42.1
  store i32 5, i32* @blockSize100k, align 4
  br label %1337

; <label>:1325:                                   ; preds = %.lr.ph42.1
  store i32 4, i32* @blockSize100k, align 4
  br label %1337

; <label>:1326:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @blockSize100k, align 4
  br label %1337

; <label>:1327:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @blockSize100k, align 4
  br label %1337

; <label>:1328:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @blockSize100k, align 4
  br label %1337

; <label>:1329:                                   ; preds = %.lr.ph42.1
  store i8 0, i8* @noisy, align 1
  br label %1337

; <label>:1330:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @smallMode, align 1
  br label %1337

; <label>:1331:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @keepInputFiles, align 1
  br label %1337

; <label>:1332:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @opMode, align 4
  br label %1337

; <label>:1333:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @forceOverwrite, align 1
  br label %1337

; <label>:1334:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @opMode, align 4
  br label %1337

; <label>:1335:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @opMode, align 4
  br label %1337

; <label>:1336:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @srcMode, align 4
  br label %1337

; <label>:1337:                                   ; preds = %1336, %1335, %1334, %1333, %1332, %1331, %1330, %1329, %1328, %1327, %1326, %1325, %1324, %1323, %1322, %1321, %1320, %1319, %1316
  %1338 = load i8*, i8** %1306, align 8
  %scevgep2.1 = getelementptr i8, i8* %1338, i64 2
  %scevgep3.1 = getelementptr i8, i8* %scevgep2.1, i64 %lsr.iv.1
  %1339 = load i8, i8* %scevgep3.1, align 1
  %1340 = sext i8 %1339 to i32
  %1341 = icmp ne i32 %1340, 0
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %1341, label %.lr.ph42.1, label %._crit_edge43.loopexit.1

._crit_edge43.loopexit.1:                         ; preds = %1337
  br label %._crit_edge43.1

._crit_edge43.1:                                  ; preds = %._crit_edge43.loopexit.1, %1305, %1298, %1292
  call void @__loop_iteration_test___3()
  %1342 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 1
  %1343 = load %struct.zzzz*, %struct.zzzz** %1342, align 8
  %1344 = icmp ne i64 0, 0
  %1345 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph48.2, label %.loopexit17.loopexit

.lr.ph48.2:                                       ; preds = %._crit_edge43.1
  call void @unroll_loop(i32 3)
  %1346 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1347 = load i8*, i8** %1346, align 8
  %1348 = call i32 @strcmp(i8* %1347, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1349 = icmp eq i32 %1348, 0
  br i1 %1349, label %.loopexit17.loopexit, label %1350

; <label>:1350:                                   ; preds = %.lr.ph48.2
  %1351 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1352 = load i8*, i8** %1351, align 8
  %1353 = load i8, i8* %1352, align 1
  %1354 = sext i8 %1353 to i32
  %1355 = icmp eq i32 %1354, 45
  br i1 %1355, label %1356, label %._crit_edge43.2

; <label>:1356:                                   ; preds = %1350
  %1357 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1358 = load i8*, i8** %1357, align 8
  %1359 = getelementptr inbounds i8, i8* %1358, i64 1
  %1360 = load i8, i8* %1359, align 1
  %1361 = sext i8 %1360 to i32
  %1362 = icmp ne i32 %1361, 45
  br i1 %1362, label %1363, label %._crit_edge43.2

; <label>:1363:                                   ; preds = %1356
  %1364 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1365 = load i8*, i8** %1364, align 8
  %1366 = getelementptr inbounds i8, i8* %1365, i64 1
  %1367 = load i8, i8* %1366, align 1
  %1368 = sext i8 %1367 to i32
  %1369 = icmp ne i32 %1368, 0
  br i1 %1369, label %.lr.ph42.preheader.2, label %._crit_edge43.2

.lr.ph42.preheader.2:                             ; preds = %1363
  %1370 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  br label %.lr.ph42.2

.lr.ph42.2:                                       ; preds = %1395, %.lr.ph42.preheader.2
  %lsr.iv.2 = phi i64 [ 0, %.lr.ph42.preheader.2 ], [ %lsr.iv.next.2, %1395 ]
  call void @unroll_loop(i32 4)
  %1371 = load i8*, i8** %1370, align 8
  %scevgep.2 = getelementptr i8, i8* %1371, i64 1
  %scevgep1.2 = getelementptr i8, i8* %scevgep.2, i64 %lsr.iv.2
  %1372 = load i8, i8* %scevgep1.2, align 1
  %1373 = sext i8 %1372 to i32
  switch i32 %1373, label %.loopexit5 [
    i32 99, label %1394
    i32 100, label %1393
    i32 122, label %1392
    i32 102, label %1391
    i32 116, label %1390
    i32 107, label %1389
    i32 115, label %1388
    i32 113, label %1387
    i32 49, label %1386
    i32 50, label %1385
    i32 51, label %1384
    i32 52, label %1383
    i32 53, label %1382
    i32 54, label %1381
    i32 55, label %1380
    i32 56, label %1379
    i32 57, label %1378
    i32 86, label %1377
    i32 76, label %1377
    i32 118, label %1374
    i32 104, label %.loopexit6
  ]

; <label>:1374:                                   ; preds = %.lr.ph42.2
  %1375 = load i32, i32* @verbosity, align 4
  %1376 = add nsw i32 %1375, 1
  store i32 %1376, i32* @verbosity, align 4
  br label %1395

; <label>:1377:                                   ; preds = %.lr.ph42.2, %.lr.ph42.2
  call void @license()
  br label %1395

; <label>:1378:                                   ; preds = %.lr.ph42.2
  store i32 9, i32* @blockSize100k, align 4
  br label %1395

; <label>:1379:                                   ; preds = %.lr.ph42.2
  store i32 8, i32* @blockSize100k, align 4
  br label %1395

; <label>:1380:                                   ; preds = %.lr.ph42.2
  store i32 7, i32* @blockSize100k, align 4
  br label %1395

; <label>:1381:                                   ; preds = %.lr.ph42.2
  store i32 6, i32* @blockSize100k, align 4
  br label %1395

; <label>:1382:                                   ; preds = %.lr.ph42.2
  store i32 5, i32* @blockSize100k, align 4
  br label %1395

; <label>:1383:                                   ; preds = %.lr.ph42.2
  store i32 4, i32* @blockSize100k, align 4
  br label %1395

; <label>:1384:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @blockSize100k, align 4
  br label %1395

; <label>:1385:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @blockSize100k, align 4
  br label %1395

; <label>:1386:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @blockSize100k, align 4
  br label %1395

; <label>:1387:                                   ; preds = %.lr.ph42.2
  store i8 0, i8* @noisy, align 1
  br label %1395

; <label>:1388:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @smallMode, align 1
  br label %1395

; <label>:1389:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @keepInputFiles, align 1
  br label %1395

; <label>:1390:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @opMode, align 4
  br label %1395

; <label>:1391:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @forceOverwrite, align 1
  br label %1395

; <label>:1392:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @opMode, align 4
  br label %1395

; <label>:1393:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @opMode, align 4
  br label %1395

; <label>:1394:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @srcMode, align 4
  br label %1395

; <label>:1395:                                   ; preds = %1394, %1393, %1392, %1391, %1390, %1389, %1388, %1387, %1386, %1385, %1384, %1383, %1382, %1381, %1380, %1379, %1378, %1377, %1374
  %1396 = load i8*, i8** %1364, align 8
  %scevgep2.2 = getelementptr i8, i8* %1396, i64 2
  %scevgep3.2 = getelementptr i8, i8* %scevgep2.2, i64 %lsr.iv.2
  %1397 = load i8, i8* %scevgep3.2, align 1
  %1398 = sext i8 %1397 to i32
  %1399 = icmp ne i32 %1398, 0
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %1399, label %.lr.ph42.2, label %._crit_edge43.loopexit.2

._crit_edge43.loopexit.2:                         ; preds = %1395
  br label %._crit_edge43.2

._crit_edge43.2:                                  ; preds = %._crit_edge43.loopexit.2, %1363, %1356, %1350
  call void @__loop_iteration_test___3()
  %1400 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %1401 = load %struct.zzzz*, %struct.zzzz** %1400, align 8
  %1402 = icmp ne %struct.zzzz* %1401, null
  br i1 %1402, label %.lr.ph48.3, label %.loopexit17.loopexit

.lr.ph48.3:                                       ; preds = %._crit_edge43.2
  call void @unroll_loop(i32 3)
  %1403 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1401, i32 0, i32 0
  %1404 = load i8*, i8** %1403, align 8
  %1405 = call i32 @strcmp(i8* %1404, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1406 = icmp eq i32 %1405, 0
  br i1 %1406, label %.loopexit17.loopexit, label %1407

; <label>:1407:                                   ; preds = %.lr.ph48.3
  %1408 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1401, i32 0, i32 0
  %1409 = load i8*, i8** %1408, align 8
  %1410 = load i8, i8* %1409, align 1
  %1411 = sext i8 %1410 to i32
  %1412 = icmp eq i32 %1411, 45
  br i1 %1412, label %1413, label %._crit_edge43.3

; <label>:1413:                                   ; preds = %1407
  %1414 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1401, i32 0, i32 0
  %1415 = load i8*, i8** %1414, align 8
  %1416 = getelementptr inbounds i8, i8* %1415, i64 1
  %1417 = load i8, i8* %1416, align 1
  %1418 = sext i8 %1417 to i32
  %1419 = icmp ne i32 %1418, 45
  br i1 %1419, label %1420, label %._crit_edge43.3

; <label>:1420:                                   ; preds = %1413
  %1421 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1401, i32 0, i32 0
  %1422 = load i8*, i8** %1421, align 8
  %1423 = getelementptr inbounds i8, i8* %1422, i64 1
  %1424 = load i8, i8* %1423, align 1
  %1425 = sext i8 %1424 to i32
  %1426 = icmp ne i32 %1425, 0
  br i1 %1426, label %.lr.ph42.preheader.3, label %._crit_edge43.3

.lr.ph42.preheader.3:                             ; preds = %1420
  %1427 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1401, i32 0, i32 0
  br label %.lr.ph42.3

.lr.ph42.3:                                       ; preds = %1452, %.lr.ph42.preheader.3
  %lsr.iv.3 = phi i64 [ 0, %.lr.ph42.preheader.3 ], [ %lsr.iv.next.3, %1452 ]
  call void @unroll_loop(i32 4)
  %1428 = load i8*, i8** %1427, align 8
  %scevgep.3 = getelementptr i8, i8* %1428, i64 1
  %scevgep1.3 = getelementptr i8, i8* %scevgep.3, i64 %lsr.iv.3
  %1429 = load i8, i8* %scevgep1.3, align 1
  %1430 = sext i8 %1429 to i32
  switch i32 %1430, label %.loopexit7 [
    i32 99, label %1451
    i32 100, label %1450
    i32 122, label %1449
    i32 102, label %1448
    i32 116, label %1447
    i32 107, label %1446
    i32 115, label %1445
    i32 113, label %1444
    i32 49, label %1443
    i32 50, label %1442
    i32 51, label %1441
    i32 52, label %1440
    i32 53, label %1439
    i32 54, label %1438
    i32 55, label %1437
    i32 56, label %1436
    i32 57, label %1435
    i32 86, label %1434
    i32 76, label %1434
    i32 118, label %1431
    i32 104, label %.loopexit8
  ]

; <label>:1431:                                   ; preds = %.lr.ph42.3
  %1432 = load i32, i32* @verbosity, align 4
  %1433 = add nsw i32 %1432, 1
  store i32 %1433, i32* @verbosity, align 4
  br label %1452

; <label>:1434:                                   ; preds = %.lr.ph42.3, %.lr.ph42.3
  call void @license()
  br label %1452

; <label>:1435:                                   ; preds = %.lr.ph42.3
  store i32 9, i32* @blockSize100k, align 4
  br label %1452

; <label>:1436:                                   ; preds = %.lr.ph42.3
  store i32 8, i32* @blockSize100k, align 4
  br label %1452

; <label>:1437:                                   ; preds = %.lr.ph42.3
  store i32 7, i32* @blockSize100k, align 4
  br label %1452

; <label>:1438:                                   ; preds = %.lr.ph42.3
  store i32 6, i32* @blockSize100k, align 4
  br label %1452

; <label>:1439:                                   ; preds = %.lr.ph42.3
  store i32 5, i32* @blockSize100k, align 4
  br label %1452

; <label>:1440:                                   ; preds = %.lr.ph42.3
  store i32 4, i32* @blockSize100k, align 4
  br label %1452

; <label>:1441:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @blockSize100k, align 4
  br label %1452

; <label>:1442:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @blockSize100k, align 4
  br label %1452

; <label>:1443:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @blockSize100k, align 4
  br label %1452

; <label>:1444:                                   ; preds = %.lr.ph42.3
  store i8 0, i8* @noisy, align 1
  br label %1452

; <label>:1445:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @smallMode, align 1
  br label %1452

; <label>:1446:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @keepInputFiles, align 1
  br label %1452

; <label>:1447:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @opMode, align 4
  br label %1452

; <label>:1448:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @forceOverwrite, align 1
  br label %1452

; <label>:1449:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @opMode, align 4
  br label %1452

; <label>:1450:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @opMode, align 4
  br label %1452

; <label>:1451:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @srcMode, align 4
  br label %1452

; <label>:1452:                                   ; preds = %1451, %1450, %1449, %1448, %1447, %1446, %1445, %1444, %1443, %1442, %1441, %1440, %1439, %1438, %1437, %1436, %1435, %1434, %1431
  %1453 = load i8*, i8** %1421, align 8
  %scevgep2.3 = getelementptr i8, i8* %1453, i64 2
  %scevgep3.3 = getelementptr i8, i8* %scevgep2.3, i64 %lsr.iv.3
  %1454 = load i8, i8* %scevgep3.3, align 1
  %1455 = sext i8 %1454 to i32
  %1456 = icmp ne i32 %1455, 0
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %1456, label %.lr.ph42.3, label %._crit_edge43.loopexit.3

._crit_edge43.loopexit.3:                         ; preds = %1452
  br label %._crit_edge43.3

._crit_edge43.3:                                  ; preds = %._crit_edge43.loopexit.3, %1420, %1413, %1407
  call void @__loop_iteration_test___3()
  %1457 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1401, i32 0, i32 1
  %1458 = load %struct.zzzz*, %struct.zzzz** %1457, align 8
  %1459 = icmp ne %struct.zzzz* %1458, null
  br i1 %1459, label %.lr.ph48.4, label %.loopexit17.loopexit

.lr.ph48.4:                                       ; preds = %._crit_edge43.3
  call void @unroll_loop(i32 3)
  %1460 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1458, i32 0, i32 0
  %1461 = load i8*, i8** %1460, align 8
  %1462 = call i32 @strcmp(i8* %1461, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1463 = icmp eq i32 %1462, 0
  br i1 %1463, label %.loopexit17.loopexit, label %1464

; <label>:1464:                                   ; preds = %.lr.ph48.4
  %1465 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1458, i32 0, i32 0
  %1466 = load i8*, i8** %1465, align 8
  %1467 = load i8, i8* %1466, align 1
  %1468 = sext i8 %1467 to i32
  %1469 = icmp eq i32 %1468, 45
  br i1 %1469, label %1470, label %._crit_edge43.4

; <label>:1470:                                   ; preds = %1464
  %1471 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1458, i32 0, i32 0
  %1472 = load i8*, i8** %1471, align 8
  %1473 = getelementptr inbounds i8, i8* %1472, i64 1
  %1474 = load i8, i8* %1473, align 1
  %1475 = sext i8 %1474 to i32
  %1476 = icmp ne i32 %1475, 45
  br i1 %1476, label %1477, label %._crit_edge43.4

; <label>:1477:                                   ; preds = %1470
  %1478 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1458, i32 0, i32 0
  %1479 = load i8*, i8** %1478, align 8
  %1480 = getelementptr inbounds i8, i8* %1479, i64 1
  %1481 = load i8, i8* %1480, align 1
  %1482 = sext i8 %1481 to i32
  %1483 = icmp ne i32 %1482, 0
  br i1 %1483, label %.lr.ph42.preheader.4, label %._crit_edge43.4

.lr.ph42.preheader.4:                             ; preds = %1477
  %1484 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1458, i32 0, i32 0
  br label %.lr.ph42.4

.lr.ph42.4:                                       ; preds = %1509, %.lr.ph42.preheader.4
  %lsr.iv.4 = phi i64 [ 0, %.lr.ph42.preheader.4 ], [ %lsr.iv.next.4, %1509 ]
  call void @unroll_loop(i32 4)
  %1485 = load i8*, i8** %1484, align 8
  %scevgep.4 = getelementptr i8, i8* %1485, i64 1
  %scevgep1.4 = getelementptr i8, i8* %scevgep.4, i64 %lsr.iv.4
  %1486 = load i8, i8* %scevgep1.4, align 1
  %1487 = sext i8 %1486 to i32
  switch i32 %1487, label %.loopexit9 [
    i32 99, label %1508
    i32 100, label %1507
    i32 122, label %1506
    i32 102, label %1505
    i32 116, label %1504
    i32 107, label %1503
    i32 115, label %1502
    i32 113, label %1501
    i32 49, label %1500
    i32 50, label %1499
    i32 51, label %1498
    i32 52, label %1497
    i32 53, label %1496
    i32 54, label %1495
    i32 55, label %1494
    i32 56, label %1493
    i32 57, label %1492
    i32 86, label %1491
    i32 76, label %1491
    i32 118, label %1488
    i32 104, label %.loopexit10
  ]

; <label>:1488:                                   ; preds = %.lr.ph42.4
  %1489 = load i32, i32* @verbosity, align 4
  %1490 = add nsw i32 %1489, 1
  store i32 %1490, i32* @verbosity, align 4
  br label %1509

; <label>:1491:                                   ; preds = %.lr.ph42.4, %.lr.ph42.4
  call void @license()
  br label %1509

; <label>:1492:                                   ; preds = %.lr.ph42.4
  store i32 9, i32* @blockSize100k, align 4
  br label %1509

; <label>:1493:                                   ; preds = %.lr.ph42.4
  store i32 8, i32* @blockSize100k, align 4
  br label %1509

; <label>:1494:                                   ; preds = %.lr.ph42.4
  store i32 7, i32* @blockSize100k, align 4
  br label %1509

; <label>:1495:                                   ; preds = %.lr.ph42.4
  store i32 6, i32* @blockSize100k, align 4
  br label %1509

; <label>:1496:                                   ; preds = %.lr.ph42.4
  store i32 5, i32* @blockSize100k, align 4
  br label %1509

; <label>:1497:                                   ; preds = %.lr.ph42.4
  store i32 4, i32* @blockSize100k, align 4
  br label %1509

; <label>:1498:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @blockSize100k, align 4
  br label %1509

; <label>:1499:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @blockSize100k, align 4
  br label %1509

; <label>:1500:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @blockSize100k, align 4
  br label %1509

; <label>:1501:                                   ; preds = %.lr.ph42.4
  store i8 0, i8* @noisy, align 1
  br label %1509

; <label>:1502:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @smallMode, align 1
  br label %1509

; <label>:1503:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @keepInputFiles, align 1
  br label %1509

; <label>:1504:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @opMode, align 4
  br label %1509

; <label>:1505:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @forceOverwrite, align 1
  br label %1509

; <label>:1506:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @opMode, align 4
  br label %1509

; <label>:1507:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @opMode, align 4
  br label %1509

; <label>:1508:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @srcMode, align 4
  br label %1509

; <label>:1509:                                   ; preds = %1508, %1507, %1506, %1505, %1504, %1503, %1502, %1501, %1500, %1499, %1498, %1497, %1496, %1495, %1494, %1493, %1492, %1491, %1488
  %1510 = load i8*, i8** %1478, align 8
  %scevgep2.4 = getelementptr i8, i8* %1510, i64 2
  %scevgep3.4 = getelementptr i8, i8* %scevgep2.4, i64 %lsr.iv.4
  %1511 = load i8, i8* %scevgep3.4, align 1
  %1512 = sext i8 %1511 to i32
  %1513 = icmp ne i32 %1512, 0
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %1513, label %.lr.ph42.4, label %._crit_edge43.loopexit.4

._crit_edge43.loopexit.4:                         ; preds = %1509
  br label %._crit_edge43.4

._crit_edge43.4:                                  ; preds = %._crit_edge43.loopexit.4, %1477, %1470, %1464
  call void @__loop_iteration_test___3()
  %1514 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1458, i32 0, i32 1
  %1515 = load %struct.zzzz*, %struct.zzzz** %1514, align 8
  %1516 = icmp ne %struct.zzzz* %1515, null
  br i1 %1516, label %.lr.ph48.5, label %.loopexit17.loopexit

.lr.ph48.5:                                       ; preds = %._crit_edge43.4
  call void @unroll_loop(i32 3)
  %1517 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1515, i32 0, i32 0
  %1518 = load i8*, i8** %1517, align 8
  %1519 = call i32 @strcmp(i8* %1518, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1520 = icmp eq i32 %1519, 0
  br i1 %1520, label %.loopexit17.loopexit, label %1521

; <label>:1521:                                   ; preds = %.lr.ph48.5
  %1522 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1515, i32 0, i32 0
  %1523 = load i8*, i8** %1522, align 8
  %1524 = load i8, i8* %1523, align 1
  %1525 = sext i8 %1524 to i32
  %1526 = icmp eq i32 %1525, 45
  br i1 %1526, label %1527, label %._crit_edge43.5

; <label>:1527:                                   ; preds = %1521
  %1528 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1515, i32 0, i32 0
  %1529 = load i8*, i8** %1528, align 8
  %1530 = getelementptr inbounds i8, i8* %1529, i64 1
  %1531 = load i8, i8* %1530, align 1
  %1532 = sext i8 %1531 to i32
  %1533 = icmp ne i32 %1532, 45
  br i1 %1533, label %1534, label %._crit_edge43.5

; <label>:1534:                                   ; preds = %1527
  %1535 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1515, i32 0, i32 0
  %1536 = load i8*, i8** %1535, align 8
  %1537 = getelementptr inbounds i8, i8* %1536, i64 1
  %1538 = load i8, i8* %1537, align 1
  %1539 = sext i8 %1538 to i32
  %1540 = icmp ne i32 %1539, 0
  br i1 %1540, label %.lr.ph42.preheader.5, label %._crit_edge43.5

.lr.ph42.preheader.5:                             ; preds = %1534
  %1541 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1515, i32 0, i32 0
  br label %.lr.ph42.5

.lr.ph42.5:                                       ; preds = %1566, %.lr.ph42.preheader.5
  %lsr.iv.5 = phi i64 [ 0, %.lr.ph42.preheader.5 ], [ %lsr.iv.next.5, %1566 ]
  call void @unroll_loop(i32 4)
  %1542 = load i8*, i8** %1541, align 8
  %scevgep.5 = getelementptr i8, i8* %1542, i64 1
  %scevgep1.5 = getelementptr i8, i8* %scevgep.5, i64 %lsr.iv.5
  %1543 = load i8, i8* %scevgep1.5, align 1
  %1544 = sext i8 %1543 to i32
  switch i32 %1544, label %.loopexit11 [
    i32 99, label %1565
    i32 100, label %1564
    i32 122, label %1563
    i32 102, label %1562
    i32 116, label %1561
    i32 107, label %1560
    i32 115, label %1559
    i32 113, label %1558
    i32 49, label %1557
    i32 50, label %1556
    i32 51, label %1555
    i32 52, label %1554
    i32 53, label %1553
    i32 54, label %1552
    i32 55, label %1551
    i32 56, label %1550
    i32 57, label %1549
    i32 86, label %1548
    i32 76, label %1548
    i32 118, label %1545
    i32 104, label %.loopexit12
  ]

; <label>:1545:                                   ; preds = %.lr.ph42.5
  %1546 = load i32, i32* @verbosity, align 4
  %1547 = add nsw i32 %1546, 1
  store i32 %1547, i32* @verbosity, align 4
  br label %1566

; <label>:1548:                                   ; preds = %.lr.ph42.5, %.lr.ph42.5
  call void @license()
  br label %1566

; <label>:1549:                                   ; preds = %.lr.ph42.5
  store i32 9, i32* @blockSize100k, align 4
  br label %1566

; <label>:1550:                                   ; preds = %.lr.ph42.5
  store i32 8, i32* @blockSize100k, align 4
  br label %1566

; <label>:1551:                                   ; preds = %.lr.ph42.5
  store i32 7, i32* @blockSize100k, align 4
  br label %1566

; <label>:1552:                                   ; preds = %.lr.ph42.5
  store i32 6, i32* @blockSize100k, align 4
  br label %1566

; <label>:1553:                                   ; preds = %.lr.ph42.5
  store i32 5, i32* @blockSize100k, align 4
  br label %1566

; <label>:1554:                                   ; preds = %.lr.ph42.5
  store i32 4, i32* @blockSize100k, align 4
  br label %1566

; <label>:1555:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @blockSize100k, align 4
  br label %1566

; <label>:1556:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @blockSize100k, align 4
  br label %1566

; <label>:1557:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @blockSize100k, align 4
  br label %1566

; <label>:1558:                                   ; preds = %.lr.ph42.5
  store i8 0, i8* @noisy, align 1
  br label %1566

; <label>:1559:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @smallMode, align 1
  br label %1566

; <label>:1560:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @keepInputFiles, align 1
  br label %1566

; <label>:1561:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @opMode, align 4
  br label %1566

; <label>:1562:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @forceOverwrite, align 1
  br label %1566

; <label>:1563:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @opMode, align 4
  br label %1566

; <label>:1564:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @opMode, align 4
  br label %1566

; <label>:1565:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @srcMode, align 4
  br label %1566

; <label>:1566:                                   ; preds = %1565, %1564, %1563, %1562, %1561, %1560, %1559, %1558, %1557, %1556, %1555, %1554, %1553, %1552, %1551, %1550, %1549, %1548, %1545
  %1567 = load i8*, i8** %1535, align 8
  %scevgep2.5 = getelementptr i8, i8* %1567, i64 2
  %scevgep3.5 = getelementptr i8, i8* %scevgep2.5, i64 %lsr.iv.5
  %1568 = load i8, i8* %scevgep3.5, align 1
  %1569 = sext i8 %1568 to i32
  %1570 = icmp ne i32 %1569, 0
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %1570, label %.lr.ph42.5, label %._crit_edge43.loopexit.5

._crit_edge43.loopexit.5:                         ; preds = %1566
  br label %._crit_edge43.5

._crit_edge43.5:                                  ; preds = %._crit_edge43.loopexit.5, %1534, %1527, %1521
  call void @__loop_iteration_test___3()
  %1571 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1515, i32 0, i32 1
  %1572 = load %struct.zzzz*, %struct.zzzz** %1571, align 8
  %1573 = icmp ne %struct.zzzz* %1572, null
  br i1 %1573, label %.lr.ph48.6, label %.loopexit17.loopexit

.lr.ph48.6:                                       ; preds = %._crit_edge43.5
  call void @unroll_loop(i32 3)
  %1574 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1572, i32 0, i32 0
  %1575 = load i8*, i8** %1574, align 8
  %1576 = call i32 @strcmp(i8* %1575, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1577 = icmp eq i32 %1576, 0
  br i1 %1577, label %.loopexit17.loopexit, label %1578

; <label>:1578:                                   ; preds = %.lr.ph48.6
  %1579 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1572, i32 0, i32 0
  %1580 = load i8*, i8** %1579, align 8
  %1581 = load i8, i8* %1580, align 1
  %1582 = sext i8 %1581 to i32
  %1583 = icmp eq i32 %1582, 45
  br i1 %1583, label %1584, label %._crit_edge43.6

; <label>:1584:                                   ; preds = %1578
  %1585 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1572, i32 0, i32 0
  %1586 = load i8*, i8** %1585, align 8
  %1587 = getelementptr inbounds i8, i8* %1586, i64 1
  %1588 = load i8, i8* %1587, align 1
  %1589 = sext i8 %1588 to i32
  %1590 = icmp ne i32 %1589, 45
  br i1 %1590, label %1591, label %._crit_edge43.6

; <label>:1591:                                   ; preds = %1584
  %1592 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1572, i32 0, i32 0
  %1593 = load i8*, i8** %1592, align 8
  %1594 = getelementptr inbounds i8, i8* %1593, i64 1
  %1595 = load i8, i8* %1594, align 1
  %1596 = sext i8 %1595 to i32
  %1597 = icmp ne i32 %1596, 0
  br i1 %1597, label %.lr.ph42.preheader.6, label %._crit_edge43.6

.lr.ph42.preheader.6:                             ; preds = %1591
  %1598 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1572, i32 0, i32 0
  br label %.lr.ph42.6

.lr.ph42.6:                                       ; preds = %1623, %.lr.ph42.preheader.6
  %lsr.iv.6 = phi i64 [ 0, %.lr.ph42.preheader.6 ], [ %lsr.iv.next.6, %1623 ]
  call void @unroll_loop(i32 4)
  %1599 = load i8*, i8** %1598, align 8
  %scevgep.6 = getelementptr i8, i8* %1599, i64 1
  %scevgep1.6 = getelementptr i8, i8* %scevgep.6, i64 %lsr.iv.6
  %1600 = load i8, i8* %scevgep1.6, align 1
  %1601 = sext i8 %1600 to i32
  switch i32 %1601, label %.loopexit13 [
    i32 99, label %1622
    i32 100, label %1621
    i32 122, label %1620
    i32 102, label %1619
    i32 116, label %1618
    i32 107, label %1617
    i32 115, label %1616
    i32 113, label %1615
    i32 49, label %1614
    i32 50, label %1613
    i32 51, label %1612
    i32 52, label %1611
    i32 53, label %1610
    i32 54, label %1609
    i32 55, label %1608
    i32 56, label %1607
    i32 57, label %1606
    i32 86, label %1605
    i32 76, label %1605
    i32 118, label %1602
    i32 104, label %.loopexit14
  ]

; <label>:1602:                                   ; preds = %.lr.ph42.6
  %1603 = load i32, i32* @verbosity, align 4
  %1604 = add nsw i32 %1603, 1
  store i32 %1604, i32* @verbosity, align 4
  br label %1623

; <label>:1605:                                   ; preds = %.lr.ph42.6, %.lr.ph42.6
  call void @license()
  br label %1623

; <label>:1606:                                   ; preds = %.lr.ph42.6
  store i32 9, i32* @blockSize100k, align 4
  br label %1623

; <label>:1607:                                   ; preds = %.lr.ph42.6
  store i32 8, i32* @blockSize100k, align 4
  br label %1623

; <label>:1608:                                   ; preds = %.lr.ph42.6
  store i32 7, i32* @blockSize100k, align 4
  br label %1623

; <label>:1609:                                   ; preds = %.lr.ph42.6
  store i32 6, i32* @blockSize100k, align 4
  br label %1623

; <label>:1610:                                   ; preds = %.lr.ph42.6
  store i32 5, i32* @blockSize100k, align 4
  br label %1623

; <label>:1611:                                   ; preds = %.lr.ph42.6
  store i32 4, i32* @blockSize100k, align 4
  br label %1623

; <label>:1612:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @blockSize100k, align 4
  br label %1623

; <label>:1613:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @blockSize100k, align 4
  br label %1623

; <label>:1614:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @blockSize100k, align 4
  br label %1623

; <label>:1615:                                   ; preds = %.lr.ph42.6
  store i8 0, i8* @noisy, align 1
  br label %1623

; <label>:1616:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @smallMode, align 1
  br label %1623

; <label>:1617:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @keepInputFiles, align 1
  br label %1623

; <label>:1618:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @opMode, align 4
  br label %1623

; <label>:1619:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @forceOverwrite, align 1
  br label %1623

; <label>:1620:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @opMode, align 4
  br label %1623

; <label>:1621:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @opMode, align 4
  br label %1623

; <label>:1622:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @srcMode, align 4
  br label %1623

; <label>:1623:                                   ; preds = %1622, %1621, %1620, %1619, %1618, %1617, %1616, %1615, %1614, %1613, %1612, %1611, %1610, %1609, %1608, %1607, %1606, %1605, %1602
  %1624 = load i8*, i8** %1592, align 8
  %scevgep2.6 = getelementptr i8, i8* %1624, i64 2
  %scevgep3.6 = getelementptr i8, i8* %scevgep2.6, i64 %lsr.iv.6
  %1625 = load i8, i8* %scevgep3.6, align 1
  %1626 = sext i8 %1625 to i32
  %1627 = icmp ne i32 %1626, 0
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %1627, label %.lr.ph42.6, label %._crit_edge43.loopexit.6

._crit_edge43.loopexit.6:                         ; preds = %1623
  br label %._crit_edge43.6

._crit_edge43.6:                                  ; preds = %._crit_edge43.loopexit.6, %1591, %1584, %1578
  call void @__loop_iteration_test___3()
  %1628 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1572, i32 0, i32 1
  %1629 = load %struct.zzzz*, %struct.zzzz** %1628, align 8
  %1630 = icmp ne %struct.zzzz* %1629, null
  br i1 %1630, label %.lr.ph48.7, label %.loopexit17.loopexit

.lr.ph48.7:                                       ; preds = %._crit_edge43.6
  call void @unroll_loop(i32 3)
  %1631 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1629, i32 0, i32 0
  %1632 = load i8*, i8** %1631, align 8
  %1633 = call i32 @strcmp(i8* %1632, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1634 = icmp eq i32 %1633, 0
  br i1 %1634, label %.loopexit17.loopexit, label %1635

; <label>:1635:                                   ; preds = %.lr.ph48.7
  %1636 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1629, i32 0, i32 0
  %1637 = load i8*, i8** %1636, align 8
  %1638 = load i8, i8* %1637, align 1
  %1639 = sext i8 %1638 to i32
  %1640 = icmp eq i32 %1639, 45
  br i1 %1640, label %1641, label %._crit_edge43.7

; <label>:1641:                                   ; preds = %1635
  %1642 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1629, i32 0, i32 0
  %1643 = load i8*, i8** %1642, align 8
  %1644 = getelementptr inbounds i8, i8* %1643, i64 1
  %1645 = load i8, i8* %1644, align 1
  %1646 = sext i8 %1645 to i32
  %1647 = icmp ne i32 %1646, 45
  br i1 %1647, label %1648, label %._crit_edge43.7

; <label>:1648:                                   ; preds = %1641
  %1649 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1629, i32 0, i32 0
  %1650 = load i8*, i8** %1649, align 8
  %1651 = getelementptr inbounds i8, i8* %1650, i64 1
  %1652 = load i8, i8* %1651, align 1
  %1653 = sext i8 %1652 to i32
  %1654 = icmp ne i32 %1653, 0
  br i1 %1654, label %.lr.ph42.preheader.7, label %._crit_edge43.7

.lr.ph42.preheader.7:                             ; preds = %1648
  %1655 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1629, i32 0, i32 0
  br label %.lr.ph42.7

.lr.ph42.7:                                       ; preds = %1680, %.lr.ph42.preheader.7
  %lsr.iv.7 = phi i64 [ 0, %.lr.ph42.preheader.7 ], [ %lsr.iv.next.7, %1680 ]
  call void @unroll_loop(i32 4)
  %1656 = load i8*, i8** %1655, align 8
  %scevgep.7 = getelementptr i8, i8* %1656, i64 1
  %scevgep1.7 = getelementptr i8, i8* %scevgep.7, i64 %lsr.iv.7
  %1657 = load i8, i8* %scevgep1.7, align 1
  %1658 = sext i8 %1657 to i32
  switch i32 %1658, label %.loopexit15 [
    i32 99, label %1679
    i32 100, label %1678
    i32 122, label %1677
    i32 102, label %1676
    i32 116, label %1675
    i32 107, label %1674
    i32 115, label %1673
    i32 113, label %1672
    i32 49, label %1671
    i32 50, label %1670
    i32 51, label %1669
    i32 52, label %1668
    i32 53, label %1667
    i32 54, label %1666
    i32 55, label %1665
    i32 56, label %1664
    i32 57, label %1663
    i32 86, label %1662
    i32 76, label %1662
    i32 118, label %1659
    i32 104, label %.loopexit16
  ]

; <label>:1659:                                   ; preds = %.lr.ph42.7
  %1660 = load i32, i32* @verbosity, align 4
  %1661 = add nsw i32 %1660, 1
  store i32 %1661, i32* @verbosity, align 4
  br label %1680

; <label>:1662:                                   ; preds = %.lr.ph42.7, %.lr.ph42.7
  call void @license()
  br label %1680

; <label>:1663:                                   ; preds = %.lr.ph42.7
  store i32 9, i32* @blockSize100k, align 4
  br label %1680

; <label>:1664:                                   ; preds = %.lr.ph42.7
  store i32 8, i32* @blockSize100k, align 4
  br label %1680

; <label>:1665:                                   ; preds = %.lr.ph42.7
  store i32 7, i32* @blockSize100k, align 4
  br label %1680

; <label>:1666:                                   ; preds = %.lr.ph42.7
  store i32 6, i32* @blockSize100k, align 4
  br label %1680

; <label>:1667:                                   ; preds = %.lr.ph42.7
  store i32 5, i32* @blockSize100k, align 4
  br label %1680

; <label>:1668:                                   ; preds = %.lr.ph42.7
  store i32 4, i32* @blockSize100k, align 4
  br label %1680

; <label>:1669:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @blockSize100k, align 4
  br label %1680

; <label>:1670:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @blockSize100k, align 4
  br label %1680

; <label>:1671:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @blockSize100k, align 4
  br label %1680

; <label>:1672:                                   ; preds = %.lr.ph42.7
  store i8 0, i8* @noisy, align 1
  br label %1680

; <label>:1673:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @smallMode, align 1
  br label %1680

; <label>:1674:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @keepInputFiles, align 1
  br label %1680

; <label>:1675:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @opMode, align 4
  br label %1680

; <label>:1676:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @forceOverwrite, align 1
  br label %1680

; <label>:1677:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @opMode, align 4
  br label %1680

; <label>:1678:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @opMode, align 4
  br label %1680

; <label>:1679:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @srcMode, align 4
  br label %1680

; <label>:1680:                                   ; preds = %1679, %1678, %1677, %1676, %1675, %1674, %1673, %1672, %1671, %1670, %1669, %1668, %1667, %1666, %1665, %1664, %1663, %1662, %1659
  %1681 = load i8*, i8** %1649, align 8
  %scevgep2.7 = getelementptr i8, i8* %1681, i64 2
  %scevgep3.7 = getelementptr i8, i8* %scevgep2.7, i64 %lsr.iv.7
  %1682 = load i8, i8* %scevgep3.7, align 1
  %1683 = sext i8 %1682 to i32
  %1684 = icmp ne i32 %1683, 0
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %1684, label %.lr.ph42.7, label %._crit_edge43.loopexit.7

._crit_edge43.loopexit.7:                         ; preds = %1680
  br label %._crit_edge43.7

._crit_edge43.7:                                  ; preds = %._crit_edge43.loopexit.7, %1648, %1641, %1635
  call void @__loop_iteration_test___3()
  %1685 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1629, i32 0, i32 1
  %1686 = load %struct.zzzz*, %struct.zzzz** %1685, align 8
  %1687 = icmp ne %struct.zzzz* %1686, null
  br i1 %1687, label %.lr.ph48.8, label %.loopexit17.loopexit

.lr.ph48.8:                                       ; preds = %._crit_edge43.7
  call void @unroll_loop(i32 3)
  %1688 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1686, i32 0, i32 0
  %1689 = load i8*, i8** %1688, align 8
  %1690 = call i32 @strcmp(i8* %1689, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1691 = icmp eq i32 %1690, 0
  br i1 %1691, label %.loopexit17.loopexit, label %1692

; <label>:1692:                                   ; preds = %.lr.ph48.8
  %1693 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1686, i32 0, i32 0
  %1694 = load i8*, i8** %1693, align 8
  %1695 = load i8, i8* %1694, align 1
  %1696 = sext i8 %1695 to i32
  %1697 = icmp eq i32 %1696, 45
  br i1 %1697, label %1698, label %._crit_edge43.8

; <label>:1698:                                   ; preds = %1692
  %1699 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1686, i32 0, i32 0
  %1700 = load i8*, i8** %1699, align 8
  %1701 = getelementptr inbounds i8, i8* %1700, i64 1
  %1702 = load i8, i8* %1701, align 1
  %1703 = sext i8 %1702 to i32
  %1704 = icmp ne i32 %1703, 45
  br i1 %1704, label %1705, label %._crit_edge43.8

; <label>:1705:                                   ; preds = %1698
  %1706 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1686, i32 0, i32 0
  %1707 = load i8*, i8** %1706, align 8
  %1708 = getelementptr inbounds i8, i8* %1707, i64 1
  %1709 = load i8, i8* %1708, align 1
  %1710 = sext i8 %1709 to i32
  %1711 = icmp ne i32 %1710, 0
  br i1 %1711, label %.lr.ph42.preheader.8, label %._crit_edge43.8

.lr.ph42.preheader.8:                             ; preds = %1705
  %1712 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1686, i32 0, i32 0
  br label %.lr.ph42.8

.lr.ph42.8:                                       ; preds = %1737, %.lr.ph42.preheader.8
  %lsr.iv.8 = phi i64 [ 0, %.lr.ph42.preheader.8 ], [ %lsr.iv.next.8, %1737 ]
  call void @unroll_loop(i32 4)
  %1713 = load i8*, i8** %1712, align 8
  %scevgep.8 = getelementptr i8, i8* %1713, i64 1
  %scevgep1.8 = getelementptr i8, i8* %scevgep.8, i64 %lsr.iv.8
  %1714 = load i8, i8* %scevgep1.8, align 1
  %1715 = sext i8 %1714 to i32
  switch i32 %1715, label %.loopexit18 [
    i32 99, label %1736
    i32 100, label %1735
    i32 122, label %1734
    i32 102, label %1733
    i32 116, label %1732
    i32 107, label %1731
    i32 115, label %1730
    i32 113, label %1729
    i32 49, label %1728
    i32 50, label %1727
    i32 51, label %1726
    i32 52, label %1725
    i32 53, label %1724
    i32 54, label %1723
    i32 55, label %1722
    i32 56, label %1721
    i32 57, label %1720
    i32 86, label %1719
    i32 76, label %1719
    i32 118, label %1716
    i32 104, label %.loopexit19
  ]

; <label>:1716:                                   ; preds = %.lr.ph42.8
  %1717 = load i32, i32* @verbosity, align 4
  %1718 = add nsw i32 %1717, 1
  store i32 %1718, i32* @verbosity, align 4
  br label %1737

; <label>:1719:                                   ; preds = %.lr.ph42.8, %.lr.ph42.8
  call void @license()
  br label %1737

; <label>:1720:                                   ; preds = %.lr.ph42.8
  store i32 9, i32* @blockSize100k, align 4
  br label %1737

; <label>:1721:                                   ; preds = %.lr.ph42.8
  store i32 8, i32* @blockSize100k, align 4
  br label %1737

; <label>:1722:                                   ; preds = %.lr.ph42.8
  store i32 7, i32* @blockSize100k, align 4
  br label %1737

; <label>:1723:                                   ; preds = %.lr.ph42.8
  store i32 6, i32* @blockSize100k, align 4
  br label %1737

; <label>:1724:                                   ; preds = %.lr.ph42.8
  store i32 5, i32* @blockSize100k, align 4
  br label %1737

; <label>:1725:                                   ; preds = %.lr.ph42.8
  store i32 4, i32* @blockSize100k, align 4
  br label %1737

; <label>:1726:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @blockSize100k, align 4
  br label %1737

; <label>:1727:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @blockSize100k, align 4
  br label %1737

; <label>:1728:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @blockSize100k, align 4
  br label %1737

; <label>:1729:                                   ; preds = %.lr.ph42.8
  store i8 0, i8* @noisy, align 1
  br label %1737

; <label>:1730:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @smallMode, align 1
  br label %1737

; <label>:1731:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @keepInputFiles, align 1
  br label %1737

; <label>:1732:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @opMode, align 4
  br label %1737

; <label>:1733:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @forceOverwrite, align 1
  br label %1737

; <label>:1734:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @opMode, align 4
  br label %1737

; <label>:1735:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @opMode, align 4
  br label %1737

; <label>:1736:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @srcMode, align 4
  br label %1737

; <label>:1737:                                   ; preds = %1736, %1735, %1734, %1733, %1732, %1731, %1730, %1729, %1728, %1727, %1726, %1725, %1724, %1723, %1722, %1721, %1720, %1719, %1716
  %1738 = load i8*, i8** %1706, align 8
  %scevgep2.8 = getelementptr i8, i8* %1738, i64 2
  %scevgep3.8 = getelementptr i8, i8* %scevgep2.8, i64 %lsr.iv.8
  %1739 = load i8, i8* %scevgep3.8, align 1
  %1740 = sext i8 %1739 to i32
  %1741 = icmp ne i32 %1740, 0
  %lsr.iv.next.8 = add i64 %lsr.iv.8, 1
  br i1 %1741, label %.lr.ph42.8, label %._crit_edge43.loopexit.8

._crit_edge43.loopexit.8:                         ; preds = %1737
  br label %._crit_edge43.8

._crit_edge43.8:                                  ; preds = %._crit_edge43.loopexit.8, %1705, %1698, %1692
  call void @__loop_iteration_test___3()
  %1742 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1686, i32 0, i32 1
  %1743 = load %struct.zzzz*, %struct.zzzz** %1742, align 8
  %1744 = icmp ne %struct.zzzz* %1743, null
  br i1 %1744, label %.lr.ph48.9, label %.loopexit17.loopexit

.lr.ph48.9:                                       ; preds = %._crit_edge43.8
  call void @unroll_loop(i32 3)
  %1745 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1743, i32 0, i32 0
  %1746 = load i8*, i8** %1745, align 8
  %1747 = call i32 @strcmp(i8* %1746, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1748 = icmp eq i32 %1747, 0
  br i1 %1748, label %.loopexit17.loopexit, label %1749

; <label>:1749:                                   ; preds = %.lr.ph48.9
  %1750 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1743, i32 0, i32 0
  %1751 = load i8*, i8** %1750, align 8
  %1752 = load i8, i8* %1751, align 1
  %1753 = sext i8 %1752 to i32
  %1754 = icmp eq i32 %1753, 45
  br i1 %1754, label %1755, label %._crit_edge43.9

; <label>:1755:                                   ; preds = %1749
  %1756 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1743, i32 0, i32 0
  %1757 = load i8*, i8** %1756, align 8
  %1758 = getelementptr inbounds i8, i8* %1757, i64 1
  %1759 = load i8, i8* %1758, align 1
  %1760 = sext i8 %1759 to i32
  %1761 = icmp ne i32 %1760, 45
  br i1 %1761, label %1762, label %._crit_edge43.9

; <label>:1762:                                   ; preds = %1755
  %1763 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1743, i32 0, i32 0
  %1764 = load i8*, i8** %1763, align 8
  %1765 = getelementptr inbounds i8, i8* %1764, i64 1
  %1766 = load i8, i8* %1765, align 1
  %1767 = sext i8 %1766 to i32
  %1768 = icmp ne i32 %1767, 0
  br i1 %1768, label %.lr.ph42.preheader.9, label %._crit_edge43.9

.lr.ph42.preheader.9:                             ; preds = %1762
  %1769 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1743, i32 0, i32 0
  br label %.lr.ph42.9

.lr.ph42.9:                                       ; preds = %1794, %.lr.ph42.preheader.9
  %lsr.iv.9 = phi i64 [ 0, %.lr.ph42.preheader.9 ], [ %lsr.iv.next.9, %1794 ]
  call void @unroll_loop(i32 4)
  %1770 = load i8*, i8** %1769, align 8
  %scevgep.9 = getelementptr i8, i8* %1770, i64 1
  %scevgep1.9 = getelementptr i8, i8* %scevgep.9, i64 %lsr.iv.9
  %1771 = load i8, i8* %scevgep1.9, align 1
  %1772 = sext i8 %1771 to i32
  switch i32 %1772, label %.loopexit20 [
    i32 99, label %1793
    i32 100, label %1792
    i32 122, label %1791
    i32 102, label %1790
    i32 116, label %1789
    i32 107, label %1788
    i32 115, label %1787
    i32 113, label %1786
    i32 49, label %1785
    i32 50, label %1784
    i32 51, label %1783
    i32 52, label %1782
    i32 53, label %1781
    i32 54, label %1780
    i32 55, label %1779
    i32 56, label %1778
    i32 57, label %1777
    i32 86, label %1776
    i32 76, label %1776
    i32 118, label %1773
    i32 104, label %.loopexit21
  ]

; <label>:1773:                                   ; preds = %.lr.ph42.9
  %1774 = load i32, i32* @verbosity, align 4
  %1775 = add nsw i32 %1774, 1
  store i32 %1775, i32* @verbosity, align 4
  br label %1794

; <label>:1776:                                   ; preds = %.lr.ph42.9, %.lr.ph42.9
  call void @license()
  br label %1794

; <label>:1777:                                   ; preds = %.lr.ph42.9
  store i32 9, i32* @blockSize100k, align 4
  br label %1794

; <label>:1778:                                   ; preds = %.lr.ph42.9
  store i32 8, i32* @blockSize100k, align 4
  br label %1794

; <label>:1779:                                   ; preds = %.lr.ph42.9
  store i32 7, i32* @blockSize100k, align 4
  br label %1794

; <label>:1780:                                   ; preds = %.lr.ph42.9
  store i32 6, i32* @blockSize100k, align 4
  br label %1794

; <label>:1781:                                   ; preds = %.lr.ph42.9
  store i32 5, i32* @blockSize100k, align 4
  br label %1794

; <label>:1782:                                   ; preds = %.lr.ph42.9
  store i32 4, i32* @blockSize100k, align 4
  br label %1794

; <label>:1783:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @blockSize100k, align 4
  br label %1794

; <label>:1784:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @blockSize100k, align 4
  br label %1794

; <label>:1785:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @blockSize100k, align 4
  br label %1794

; <label>:1786:                                   ; preds = %.lr.ph42.9
  store i8 0, i8* @noisy, align 1
  br label %1794

; <label>:1787:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @smallMode, align 1
  br label %1794

; <label>:1788:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @keepInputFiles, align 1
  br label %1794

; <label>:1789:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @opMode, align 4
  br label %1794

; <label>:1790:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @forceOverwrite, align 1
  br label %1794

; <label>:1791:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @opMode, align 4
  br label %1794

; <label>:1792:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @opMode, align 4
  br label %1794

; <label>:1793:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @srcMode, align 4
  br label %1794

; <label>:1794:                                   ; preds = %1793, %1792, %1791, %1790, %1789, %1788, %1787, %1786, %1785, %1784, %1783, %1782, %1781, %1780, %1779, %1778, %1777, %1776, %1773
  %1795 = load i8*, i8** %1763, align 8
  %scevgep2.9 = getelementptr i8, i8* %1795, i64 2
  %scevgep3.9 = getelementptr i8, i8* %scevgep2.9, i64 %lsr.iv.9
  %1796 = load i8, i8* %scevgep3.9, align 1
  %1797 = sext i8 %1796 to i32
  %1798 = icmp ne i32 %1797, 0
  %lsr.iv.next.9 = add i64 %lsr.iv.9, 1
  br i1 %1798, label %.lr.ph42.9, label %._crit_edge43.loopexit.9

._crit_edge43.loopexit.9:                         ; preds = %1794
  br label %._crit_edge43.9

._crit_edge43.9:                                  ; preds = %._crit_edge43.loopexit.9, %1762, %1755, %1749
  call void @__loop_iteration_test___3()
  %1799 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1743, i32 0, i32 1
  %1800 = load %struct.zzzz*, %struct.zzzz** %1799, align 8
  %1801 = icmp ne %struct.zzzz* %1800, null
  br i1 %1801, label %.lr.ph48.10, label %.loopexit17.loopexit

.lr.ph48.10:                                      ; preds = %._crit_edge43.9
  call void @unroll_loop(i32 3)
  %1802 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1800, i32 0, i32 0
  %1803 = load i8*, i8** %1802, align 8
  %1804 = call i32 @strcmp(i8* %1803, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1805 = icmp eq i32 %1804, 0
  br i1 %1805, label %.loopexit17.loopexit, label %1806

; <label>:1806:                                   ; preds = %.lr.ph48.10
  %1807 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1800, i32 0, i32 0
  %1808 = load i8*, i8** %1807, align 8
  %1809 = load i8, i8* %1808, align 1
  %1810 = sext i8 %1809 to i32
  %1811 = icmp eq i32 %1810, 45
  br i1 %1811, label %1812, label %._crit_edge43.10

; <label>:1812:                                   ; preds = %1806
  %1813 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1800, i32 0, i32 0
  %1814 = load i8*, i8** %1813, align 8
  %1815 = getelementptr inbounds i8, i8* %1814, i64 1
  %1816 = load i8, i8* %1815, align 1
  %1817 = sext i8 %1816 to i32
  %1818 = icmp ne i32 %1817, 45
  br i1 %1818, label %1819, label %._crit_edge43.10

; <label>:1819:                                   ; preds = %1812
  %1820 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1800, i32 0, i32 0
  %1821 = load i8*, i8** %1820, align 8
  %1822 = getelementptr inbounds i8, i8* %1821, i64 1
  %1823 = load i8, i8* %1822, align 1
  %1824 = sext i8 %1823 to i32
  %1825 = icmp ne i32 %1824, 0
  br i1 %1825, label %.lr.ph42.preheader.10, label %._crit_edge43.10

.lr.ph42.preheader.10:                            ; preds = %1819
  %1826 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1800, i32 0, i32 0
  br label %.lr.ph42.10

.lr.ph42.10:                                      ; preds = %1851, %.lr.ph42.preheader.10
  %lsr.iv.10 = phi i64 [ 0, %.lr.ph42.preheader.10 ], [ %lsr.iv.next.10, %1851 ]
  call void @unroll_loop(i32 4)
  %1827 = load i8*, i8** %1826, align 8
  %scevgep.10 = getelementptr i8, i8* %1827, i64 1
  %scevgep1.10 = getelementptr i8, i8* %scevgep.10, i64 %lsr.iv.10
  %1828 = load i8, i8* %scevgep1.10, align 1
  %1829 = sext i8 %1828 to i32
  switch i32 %1829, label %.loopexit22 [
    i32 99, label %1850
    i32 100, label %1849
    i32 122, label %1848
    i32 102, label %1847
    i32 116, label %1846
    i32 107, label %1845
    i32 115, label %1844
    i32 113, label %1843
    i32 49, label %1842
    i32 50, label %1841
    i32 51, label %1840
    i32 52, label %1839
    i32 53, label %1838
    i32 54, label %1837
    i32 55, label %1836
    i32 56, label %1835
    i32 57, label %1834
    i32 86, label %1833
    i32 76, label %1833
    i32 118, label %1830
    i32 104, label %.loopexit23
  ]

; <label>:1830:                                   ; preds = %.lr.ph42.10
  %1831 = load i32, i32* @verbosity, align 4
  %1832 = add nsw i32 %1831, 1
  store i32 %1832, i32* @verbosity, align 4
  br label %1851

; <label>:1833:                                   ; preds = %.lr.ph42.10, %.lr.ph42.10
  call void @license()
  br label %1851

; <label>:1834:                                   ; preds = %.lr.ph42.10
  store i32 9, i32* @blockSize100k, align 4
  br label %1851

; <label>:1835:                                   ; preds = %.lr.ph42.10
  store i32 8, i32* @blockSize100k, align 4
  br label %1851

; <label>:1836:                                   ; preds = %.lr.ph42.10
  store i32 7, i32* @blockSize100k, align 4
  br label %1851

; <label>:1837:                                   ; preds = %.lr.ph42.10
  store i32 6, i32* @blockSize100k, align 4
  br label %1851

; <label>:1838:                                   ; preds = %.lr.ph42.10
  store i32 5, i32* @blockSize100k, align 4
  br label %1851

; <label>:1839:                                   ; preds = %.lr.ph42.10
  store i32 4, i32* @blockSize100k, align 4
  br label %1851

; <label>:1840:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @blockSize100k, align 4
  br label %1851

; <label>:1841:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @blockSize100k, align 4
  br label %1851

; <label>:1842:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @blockSize100k, align 4
  br label %1851

; <label>:1843:                                   ; preds = %.lr.ph42.10
  store i8 0, i8* @noisy, align 1
  br label %1851

; <label>:1844:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @smallMode, align 1
  br label %1851

; <label>:1845:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @keepInputFiles, align 1
  br label %1851

; <label>:1846:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @opMode, align 4
  br label %1851

; <label>:1847:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @forceOverwrite, align 1
  br label %1851

; <label>:1848:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @opMode, align 4
  br label %1851

; <label>:1849:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @opMode, align 4
  br label %1851

; <label>:1850:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @srcMode, align 4
  br label %1851

; <label>:1851:                                   ; preds = %1850, %1849, %1848, %1847, %1846, %1845, %1844, %1843, %1842, %1841, %1840, %1839, %1838, %1837, %1836, %1835, %1834, %1833, %1830
  %1852 = load i8*, i8** %1820, align 8
  %scevgep2.10 = getelementptr i8, i8* %1852, i64 2
  %scevgep3.10 = getelementptr i8, i8* %scevgep2.10, i64 %lsr.iv.10
  %1853 = load i8, i8* %scevgep3.10, align 1
  %1854 = sext i8 %1853 to i32
  %1855 = icmp ne i32 %1854, 0
  %lsr.iv.next.10 = add i64 %lsr.iv.10, 1
  br i1 %1855, label %.lr.ph42.10, label %._crit_edge43.loopexit.10

._crit_edge43.loopexit.10:                        ; preds = %1851
  br label %._crit_edge43.10

._crit_edge43.10:                                 ; preds = %._crit_edge43.loopexit.10, %1819, %1812, %1806
  call void @__loop_iteration_test___3()
  %1856 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1800, i32 0, i32 1
  %1857 = load %struct.zzzz*, %struct.zzzz** %1856, align 8
  %1858 = icmp ne %struct.zzzz* %1857, null
  br i1 %1858, label %.lr.ph48.11, label %.loopexit17.loopexit

.lr.ph48.11:                                      ; preds = %._crit_edge43.10
  call void @unroll_loop(i32 3)
  %1859 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1857, i32 0, i32 0
  %1860 = load i8*, i8** %1859, align 8
  %1861 = call i32 @strcmp(i8* %1860, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1862 = icmp eq i32 %1861, 0
  br i1 %1862, label %.loopexit17.loopexit, label %1863

; <label>:1863:                                   ; preds = %.lr.ph48.11
  %1864 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1857, i32 0, i32 0
  %1865 = load i8*, i8** %1864, align 8
  %1866 = load i8, i8* %1865, align 1
  %1867 = sext i8 %1866 to i32
  %1868 = icmp eq i32 %1867, 45
  br i1 %1868, label %1869, label %._crit_edge43.11

; <label>:1869:                                   ; preds = %1863
  %1870 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1857, i32 0, i32 0
  %1871 = load i8*, i8** %1870, align 8
  %1872 = getelementptr inbounds i8, i8* %1871, i64 1
  %1873 = load i8, i8* %1872, align 1
  %1874 = sext i8 %1873 to i32
  %1875 = icmp ne i32 %1874, 45
  br i1 %1875, label %1876, label %._crit_edge43.11

; <label>:1876:                                   ; preds = %1869
  %1877 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1857, i32 0, i32 0
  %1878 = load i8*, i8** %1877, align 8
  %1879 = getelementptr inbounds i8, i8* %1878, i64 1
  %1880 = load i8, i8* %1879, align 1
  %1881 = sext i8 %1880 to i32
  %1882 = icmp ne i32 %1881, 0
  br i1 %1882, label %.lr.ph42.preheader.11, label %._crit_edge43.11

.lr.ph42.preheader.11:                            ; preds = %1876
  %1883 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1857, i32 0, i32 0
  br label %.lr.ph42.11

.lr.ph42.11:                                      ; preds = %1908, %.lr.ph42.preheader.11
  %lsr.iv.11 = phi i64 [ 0, %.lr.ph42.preheader.11 ], [ %lsr.iv.next.11, %1908 ]
  call void @unroll_loop(i32 4)
  %1884 = load i8*, i8** %1883, align 8
  %scevgep.11 = getelementptr i8, i8* %1884, i64 1
  %scevgep1.11 = getelementptr i8, i8* %scevgep.11, i64 %lsr.iv.11
  %1885 = load i8, i8* %scevgep1.11, align 1
  %1886 = sext i8 %1885 to i32
  switch i32 %1886, label %.loopexit24 [
    i32 99, label %1907
    i32 100, label %1906
    i32 122, label %1905
    i32 102, label %1904
    i32 116, label %1903
    i32 107, label %1902
    i32 115, label %1901
    i32 113, label %1900
    i32 49, label %1899
    i32 50, label %1898
    i32 51, label %1897
    i32 52, label %1896
    i32 53, label %1895
    i32 54, label %1894
    i32 55, label %1893
    i32 56, label %1892
    i32 57, label %1891
    i32 86, label %1890
    i32 76, label %1890
    i32 118, label %1887
    i32 104, label %.loopexit25
  ]

; <label>:1887:                                   ; preds = %.lr.ph42.11
  %1888 = load i32, i32* @verbosity, align 4
  %1889 = add nsw i32 %1888, 1
  store i32 %1889, i32* @verbosity, align 4
  br label %1908

; <label>:1890:                                   ; preds = %.lr.ph42.11, %.lr.ph42.11
  call void @license()
  br label %1908

; <label>:1891:                                   ; preds = %.lr.ph42.11
  store i32 9, i32* @blockSize100k, align 4
  br label %1908

; <label>:1892:                                   ; preds = %.lr.ph42.11
  store i32 8, i32* @blockSize100k, align 4
  br label %1908

; <label>:1893:                                   ; preds = %.lr.ph42.11
  store i32 7, i32* @blockSize100k, align 4
  br label %1908

; <label>:1894:                                   ; preds = %.lr.ph42.11
  store i32 6, i32* @blockSize100k, align 4
  br label %1908

; <label>:1895:                                   ; preds = %.lr.ph42.11
  store i32 5, i32* @blockSize100k, align 4
  br label %1908

; <label>:1896:                                   ; preds = %.lr.ph42.11
  store i32 4, i32* @blockSize100k, align 4
  br label %1908

; <label>:1897:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @blockSize100k, align 4
  br label %1908

; <label>:1898:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @blockSize100k, align 4
  br label %1908

; <label>:1899:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @blockSize100k, align 4
  br label %1908

; <label>:1900:                                   ; preds = %.lr.ph42.11
  store i8 0, i8* @noisy, align 1
  br label %1908

; <label>:1901:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @smallMode, align 1
  br label %1908

; <label>:1902:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @keepInputFiles, align 1
  br label %1908

; <label>:1903:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @opMode, align 4
  br label %1908

; <label>:1904:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @forceOverwrite, align 1
  br label %1908

; <label>:1905:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @opMode, align 4
  br label %1908

; <label>:1906:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @opMode, align 4
  br label %1908

; <label>:1907:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @srcMode, align 4
  br label %1908

; <label>:1908:                                   ; preds = %1907, %1906, %1905, %1904, %1903, %1902, %1901, %1900, %1899, %1898, %1897, %1896, %1895, %1894, %1893, %1892, %1891, %1890, %1887
  %1909 = load i8*, i8** %1877, align 8
  %scevgep2.11 = getelementptr i8, i8* %1909, i64 2
  %scevgep3.11 = getelementptr i8, i8* %scevgep2.11, i64 %lsr.iv.11
  %1910 = load i8, i8* %scevgep3.11, align 1
  %1911 = sext i8 %1910 to i32
  %1912 = icmp ne i32 %1911, 0
  %lsr.iv.next.11 = add i64 %lsr.iv.11, 1
  br i1 %1912, label %.lr.ph42.11, label %._crit_edge43.loopexit.11

._crit_edge43.loopexit.11:                        ; preds = %1908
  br label %._crit_edge43.11

._crit_edge43.11:                                 ; preds = %._crit_edge43.loopexit.11, %1876, %1869, %1863
  call void @__loop_iteration_test___3()
  %1913 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1857, i32 0, i32 1
  %1914 = load %struct.zzzz*, %struct.zzzz** %1913, align 8
  %1915 = icmp ne %struct.zzzz* %1914, null
  br i1 %1915, label %.lr.ph48.12, label %.loopexit17.loopexit

.lr.ph48.12:                                      ; preds = %._crit_edge43.11
  call void @unroll_loop(i32 3)
  %1916 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1914, i32 0, i32 0
  %1917 = load i8*, i8** %1916, align 8
  %1918 = call i32 @strcmp(i8* %1917, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1919 = icmp eq i32 %1918, 0
  br i1 %1919, label %.loopexit17.loopexit, label %1920

; <label>:1920:                                   ; preds = %.lr.ph48.12
  %1921 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1914, i32 0, i32 0
  %1922 = load i8*, i8** %1921, align 8
  %1923 = load i8, i8* %1922, align 1
  %1924 = sext i8 %1923 to i32
  %1925 = icmp eq i32 %1924, 45
  br i1 %1925, label %1926, label %._crit_edge43.12

; <label>:1926:                                   ; preds = %1920
  %1927 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1914, i32 0, i32 0
  %1928 = load i8*, i8** %1927, align 8
  %1929 = getelementptr inbounds i8, i8* %1928, i64 1
  %1930 = load i8, i8* %1929, align 1
  %1931 = sext i8 %1930 to i32
  %1932 = icmp ne i32 %1931, 45
  br i1 %1932, label %1933, label %._crit_edge43.12

; <label>:1933:                                   ; preds = %1926
  %1934 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1914, i32 0, i32 0
  %1935 = load i8*, i8** %1934, align 8
  %1936 = getelementptr inbounds i8, i8* %1935, i64 1
  %1937 = load i8, i8* %1936, align 1
  %1938 = sext i8 %1937 to i32
  %1939 = icmp ne i32 %1938, 0
  br i1 %1939, label %.lr.ph42.preheader.12, label %._crit_edge43.12

.lr.ph42.preheader.12:                            ; preds = %1933
  %1940 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1914, i32 0, i32 0
  br label %.lr.ph42.12

.lr.ph42.12:                                      ; preds = %1965, %.lr.ph42.preheader.12
  %lsr.iv.12 = phi i64 [ 0, %.lr.ph42.preheader.12 ], [ %lsr.iv.next.12, %1965 ]
  call void @unroll_loop(i32 4)
  %1941 = load i8*, i8** %1940, align 8
  %scevgep.12 = getelementptr i8, i8* %1941, i64 1
  %scevgep1.12 = getelementptr i8, i8* %scevgep.12, i64 %lsr.iv.12
  %1942 = load i8, i8* %scevgep1.12, align 1
  %1943 = sext i8 %1942 to i32
  switch i32 %1943, label %.loopexit26 [
    i32 99, label %1964
    i32 100, label %1963
    i32 122, label %1962
    i32 102, label %1961
    i32 116, label %1960
    i32 107, label %1959
    i32 115, label %1958
    i32 113, label %1957
    i32 49, label %1956
    i32 50, label %1955
    i32 51, label %1954
    i32 52, label %1953
    i32 53, label %1952
    i32 54, label %1951
    i32 55, label %1950
    i32 56, label %1949
    i32 57, label %1948
    i32 86, label %1947
    i32 76, label %1947
    i32 118, label %1944
    i32 104, label %.loopexit27
  ]

; <label>:1944:                                   ; preds = %.lr.ph42.12
  %1945 = load i32, i32* @verbosity, align 4
  %1946 = add nsw i32 %1945, 1
  store i32 %1946, i32* @verbosity, align 4
  br label %1965

; <label>:1947:                                   ; preds = %.lr.ph42.12, %.lr.ph42.12
  call void @license()
  br label %1965

; <label>:1948:                                   ; preds = %.lr.ph42.12
  store i32 9, i32* @blockSize100k, align 4
  br label %1965

; <label>:1949:                                   ; preds = %.lr.ph42.12
  store i32 8, i32* @blockSize100k, align 4
  br label %1965

; <label>:1950:                                   ; preds = %.lr.ph42.12
  store i32 7, i32* @blockSize100k, align 4
  br label %1965

; <label>:1951:                                   ; preds = %.lr.ph42.12
  store i32 6, i32* @blockSize100k, align 4
  br label %1965

; <label>:1952:                                   ; preds = %.lr.ph42.12
  store i32 5, i32* @blockSize100k, align 4
  br label %1965

; <label>:1953:                                   ; preds = %.lr.ph42.12
  store i32 4, i32* @blockSize100k, align 4
  br label %1965

; <label>:1954:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @blockSize100k, align 4
  br label %1965

; <label>:1955:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @blockSize100k, align 4
  br label %1965

; <label>:1956:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @blockSize100k, align 4
  br label %1965

; <label>:1957:                                   ; preds = %.lr.ph42.12
  store i8 0, i8* @noisy, align 1
  br label %1965

; <label>:1958:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @smallMode, align 1
  br label %1965

; <label>:1959:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @keepInputFiles, align 1
  br label %1965

; <label>:1960:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @opMode, align 4
  br label %1965

; <label>:1961:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @forceOverwrite, align 1
  br label %1965

; <label>:1962:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @opMode, align 4
  br label %1965

; <label>:1963:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @opMode, align 4
  br label %1965

; <label>:1964:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @srcMode, align 4
  br label %1965

; <label>:1965:                                   ; preds = %1964, %1963, %1962, %1961, %1960, %1959, %1958, %1957, %1956, %1955, %1954, %1953, %1952, %1951, %1950, %1949, %1948, %1947, %1944
  %1966 = load i8*, i8** %1934, align 8
  %scevgep2.12 = getelementptr i8, i8* %1966, i64 2
  %scevgep3.12 = getelementptr i8, i8* %scevgep2.12, i64 %lsr.iv.12
  %1967 = load i8, i8* %scevgep3.12, align 1
  %1968 = sext i8 %1967 to i32
  %1969 = icmp ne i32 %1968, 0
  %lsr.iv.next.12 = add i64 %lsr.iv.12, 1
  br i1 %1969, label %.lr.ph42.12, label %._crit_edge43.loopexit.12

._crit_edge43.loopexit.12:                        ; preds = %1965
  br label %._crit_edge43.12

._crit_edge43.12:                                 ; preds = %._crit_edge43.loopexit.12, %1933, %1926, %1920
  call void @__loop_iteration_test___3()
  %1970 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1914, i32 0, i32 1
  %1971 = load %struct.zzzz*, %struct.zzzz** %1970, align 8
  %1972 = icmp ne %struct.zzzz* %1971, null
  br i1 %1972, label %.lr.ph48.13, label %.loopexit17.loopexit

.lr.ph48.13:                                      ; preds = %._crit_edge43.12
  call void @unroll_loop(i32 3)
  %1973 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1971, i32 0, i32 0
  %1974 = load i8*, i8** %1973, align 8
  %1975 = call i32 @strcmp(i8* %1974, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1976 = icmp eq i32 %1975, 0
  br i1 %1976, label %.loopexit17.loopexit, label %1977

; <label>:1977:                                   ; preds = %.lr.ph48.13
  %1978 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1971, i32 0, i32 0
  %1979 = load i8*, i8** %1978, align 8
  %1980 = load i8, i8* %1979, align 1
  %1981 = sext i8 %1980 to i32
  %1982 = icmp eq i32 %1981, 45
  br i1 %1982, label %1983, label %._crit_edge43.13

; <label>:1983:                                   ; preds = %1977
  %1984 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1971, i32 0, i32 0
  %1985 = load i8*, i8** %1984, align 8
  %1986 = getelementptr inbounds i8, i8* %1985, i64 1
  %1987 = load i8, i8* %1986, align 1
  %1988 = sext i8 %1987 to i32
  %1989 = icmp ne i32 %1988, 45
  br i1 %1989, label %1990, label %._crit_edge43.13

; <label>:1990:                                   ; preds = %1983
  %1991 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1971, i32 0, i32 0
  %1992 = load i8*, i8** %1991, align 8
  %1993 = getelementptr inbounds i8, i8* %1992, i64 1
  %1994 = load i8, i8* %1993, align 1
  %1995 = sext i8 %1994 to i32
  %1996 = icmp ne i32 %1995, 0
  br i1 %1996, label %.lr.ph42.preheader.13, label %._crit_edge43.13

.lr.ph42.preheader.13:                            ; preds = %1990
  %1997 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1971, i32 0, i32 0
  br label %.lr.ph42.13

.lr.ph42.13:                                      ; preds = %2022, %.lr.ph42.preheader.13
  %lsr.iv.13 = phi i64 [ 0, %.lr.ph42.preheader.13 ], [ %lsr.iv.next.13, %2022 ]
  call void @unroll_loop(i32 4)
  %1998 = load i8*, i8** %1997, align 8
  %scevgep.13 = getelementptr i8, i8* %1998, i64 1
  %scevgep1.13 = getelementptr i8, i8* %scevgep.13, i64 %lsr.iv.13
  %1999 = load i8, i8* %scevgep1.13, align 1
  %2000 = sext i8 %1999 to i32
  switch i32 %2000, label %.loopexit28 [
    i32 99, label %2021
    i32 100, label %2020
    i32 122, label %2019
    i32 102, label %2018
    i32 116, label %2017
    i32 107, label %2016
    i32 115, label %2015
    i32 113, label %2014
    i32 49, label %2013
    i32 50, label %2012
    i32 51, label %2011
    i32 52, label %2010
    i32 53, label %2009
    i32 54, label %2008
    i32 55, label %2007
    i32 56, label %2006
    i32 57, label %2005
    i32 86, label %2004
    i32 76, label %2004
    i32 118, label %2001
    i32 104, label %.loopexit29
  ]

; <label>:2001:                                   ; preds = %.lr.ph42.13
  %2002 = load i32, i32* @verbosity, align 4
  %2003 = add nsw i32 %2002, 1
  store i32 %2003, i32* @verbosity, align 4
  br label %2022

; <label>:2004:                                   ; preds = %.lr.ph42.13, %.lr.ph42.13
  call void @license()
  br label %2022

; <label>:2005:                                   ; preds = %.lr.ph42.13
  store i32 9, i32* @blockSize100k, align 4
  br label %2022

; <label>:2006:                                   ; preds = %.lr.ph42.13
  store i32 8, i32* @blockSize100k, align 4
  br label %2022

; <label>:2007:                                   ; preds = %.lr.ph42.13
  store i32 7, i32* @blockSize100k, align 4
  br label %2022

; <label>:2008:                                   ; preds = %.lr.ph42.13
  store i32 6, i32* @blockSize100k, align 4
  br label %2022

; <label>:2009:                                   ; preds = %.lr.ph42.13
  store i32 5, i32* @blockSize100k, align 4
  br label %2022

; <label>:2010:                                   ; preds = %.lr.ph42.13
  store i32 4, i32* @blockSize100k, align 4
  br label %2022

; <label>:2011:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @blockSize100k, align 4
  br label %2022

; <label>:2012:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @blockSize100k, align 4
  br label %2022

; <label>:2013:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @blockSize100k, align 4
  br label %2022

; <label>:2014:                                   ; preds = %.lr.ph42.13
  store i8 0, i8* @noisy, align 1
  br label %2022

; <label>:2015:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @smallMode, align 1
  br label %2022

; <label>:2016:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @keepInputFiles, align 1
  br label %2022

; <label>:2017:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @opMode, align 4
  br label %2022

; <label>:2018:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @forceOverwrite, align 1
  br label %2022

; <label>:2019:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @opMode, align 4
  br label %2022

; <label>:2020:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @opMode, align 4
  br label %2022

; <label>:2021:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @srcMode, align 4
  br label %2022

; <label>:2022:                                   ; preds = %2021, %2020, %2019, %2018, %2017, %2016, %2015, %2014, %2013, %2012, %2011, %2010, %2009, %2008, %2007, %2006, %2005, %2004, %2001
  %2023 = load i8*, i8** %1991, align 8
  %scevgep2.13 = getelementptr i8, i8* %2023, i64 2
  %scevgep3.13 = getelementptr i8, i8* %scevgep2.13, i64 %lsr.iv.13
  %2024 = load i8, i8* %scevgep3.13, align 1
  %2025 = sext i8 %2024 to i32
  %2026 = icmp ne i32 %2025, 0
  %lsr.iv.next.13 = add i64 %lsr.iv.13, 1
  br i1 %2026, label %.lr.ph42.13, label %._crit_edge43.loopexit.13

._crit_edge43.loopexit.13:                        ; preds = %2022
  br label %._crit_edge43.13

._crit_edge43.13:                                 ; preds = %._crit_edge43.loopexit.13, %1990, %1983, %1977
  call void @__loop_iteration_test___3()
  %2027 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1971, i32 0, i32 1
  %2028 = load %struct.zzzz*, %struct.zzzz** %2027, align 8
  %2029 = icmp ne %struct.zzzz* %2028, null
  br i1 %2029, label %.lr.ph48.14, label %.loopexit17.loopexit

.lr.ph48.14:                                      ; preds = %._crit_edge43.13
  call void @unroll_loop(i32 3)
  %2030 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2028, i32 0, i32 0
  %2031 = load i8*, i8** %2030, align 8
  %2032 = call i32 @strcmp(i8* %2031, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2033 = icmp eq i32 %2032, 0
  br i1 %2033, label %.loopexit17.loopexit, label %2034

; <label>:2034:                                   ; preds = %.lr.ph48.14
  %2035 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2028, i32 0, i32 0
  %2036 = load i8*, i8** %2035, align 8
  %2037 = load i8, i8* %2036, align 1
  %2038 = sext i8 %2037 to i32
  %2039 = icmp eq i32 %2038, 45
  br i1 %2039, label %2040, label %._crit_edge43.14

; <label>:2040:                                   ; preds = %2034
  %2041 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2028, i32 0, i32 0
  %2042 = load i8*, i8** %2041, align 8
  %2043 = getelementptr inbounds i8, i8* %2042, i64 1
  %2044 = load i8, i8* %2043, align 1
  %2045 = sext i8 %2044 to i32
  %2046 = icmp ne i32 %2045, 45
  br i1 %2046, label %2047, label %._crit_edge43.14

; <label>:2047:                                   ; preds = %2040
  %2048 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2028, i32 0, i32 0
  %2049 = load i8*, i8** %2048, align 8
  %2050 = getelementptr inbounds i8, i8* %2049, i64 1
  %2051 = load i8, i8* %2050, align 1
  %2052 = sext i8 %2051 to i32
  %2053 = icmp ne i32 %2052, 0
  br i1 %2053, label %.lr.ph42.preheader.14, label %._crit_edge43.14

.lr.ph42.preheader.14:                            ; preds = %2047
  %2054 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2028, i32 0, i32 0
  br label %.lr.ph42.14

.lr.ph42.14:                                      ; preds = %2079, %.lr.ph42.preheader.14
  %lsr.iv.14 = phi i64 [ 0, %.lr.ph42.preheader.14 ], [ %lsr.iv.next.14, %2079 ]
  call void @unroll_loop(i32 4)
  %2055 = load i8*, i8** %2054, align 8
  %scevgep.14 = getelementptr i8, i8* %2055, i64 1
  %scevgep1.14 = getelementptr i8, i8* %scevgep.14, i64 %lsr.iv.14
  %2056 = load i8, i8* %scevgep1.14, align 1
  %2057 = sext i8 %2056 to i32
  switch i32 %2057, label %.loopexit30 [
    i32 99, label %2078
    i32 100, label %2077
    i32 122, label %2076
    i32 102, label %2075
    i32 116, label %2074
    i32 107, label %2073
    i32 115, label %2072
    i32 113, label %2071
    i32 49, label %2070
    i32 50, label %2069
    i32 51, label %2068
    i32 52, label %2067
    i32 53, label %2066
    i32 54, label %2065
    i32 55, label %2064
    i32 56, label %2063
    i32 57, label %2062
    i32 86, label %2061
    i32 76, label %2061
    i32 118, label %2058
    i32 104, label %.loopexit31
  ]

; <label>:2058:                                   ; preds = %.lr.ph42.14
  %2059 = load i32, i32* @verbosity, align 4
  %2060 = add nsw i32 %2059, 1
  store i32 %2060, i32* @verbosity, align 4
  br label %2079

; <label>:2061:                                   ; preds = %.lr.ph42.14, %.lr.ph42.14
  call void @license()
  br label %2079

; <label>:2062:                                   ; preds = %.lr.ph42.14
  store i32 9, i32* @blockSize100k, align 4
  br label %2079

; <label>:2063:                                   ; preds = %.lr.ph42.14
  store i32 8, i32* @blockSize100k, align 4
  br label %2079

; <label>:2064:                                   ; preds = %.lr.ph42.14
  store i32 7, i32* @blockSize100k, align 4
  br label %2079

; <label>:2065:                                   ; preds = %.lr.ph42.14
  store i32 6, i32* @blockSize100k, align 4
  br label %2079

; <label>:2066:                                   ; preds = %.lr.ph42.14
  store i32 5, i32* @blockSize100k, align 4
  br label %2079

; <label>:2067:                                   ; preds = %.lr.ph42.14
  store i32 4, i32* @blockSize100k, align 4
  br label %2079

; <label>:2068:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @blockSize100k, align 4
  br label %2079

; <label>:2069:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @blockSize100k, align 4
  br label %2079

; <label>:2070:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @blockSize100k, align 4
  br label %2079

; <label>:2071:                                   ; preds = %.lr.ph42.14
  store i8 0, i8* @noisy, align 1
  br label %2079

; <label>:2072:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @smallMode, align 1
  br label %2079

; <label>:2073:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @keepInputFiles, align 1
  br label %2079

; <label>:2074:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @opMode, align 4
  br label %2079

; <label>:2075:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @forceOverwrite, align 1
  br label %2079

; <label>:2076:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @opMode, align 4
  br label %2079

; <label>:2077:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @opMode, align 4
  br label %2079

; <label>:2078:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @srcMode, align 4
  br label %2079

; <label>:2079:                                   ; preds = %2078, %2077, %2076, %2075, %2074, %2073, %2072, %2071, %2070, %2069, %2068, %2067, %2066, %2065, %2064, %2063, %2062, %2061, %2058
  %2080 = load i8*, i8** %2048, align 8
  %scevgep2.14 = getelementptr i8, i8* %2080, i64 2
  %scevgep3.14 = getelementptr i8, i8* %scevgep2.14, i64 %lsr.iv.14
  %2081 = load i8, i8* %scevgep3.14, align 1
  %2082 = sext i8 %2081 to i32
  %2083 = icmp ne i32 %2082, 0
  %lsr.iv.next.14 = add i64 %lsr.iv.14, 1
  br i1 %2083, label %.lr.ph42.14, label %._crit_edge43.loopexit.14

._crit_edge43.loopexit.14:                        ; preds = %2079
  br label %._crit_edge43.14

._crit_edge43.14:                                 ; preds = %._crit_edge43.loopexit.14, %2047, %2040, %2034
  call void @__loop_iteration_test___3()
  %2084 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2028, i32 0, i32 1
  %2085 = load %struct.zzzz*, %struct.zzzz** %2084, align 8
  %2086 = icmp ne %struct.zzzz* %2085, null
  br i1 %2086, label %.lr.ph48.15, label %.loopexit17.loopexit

.lr.ph48.15:                                      ; preds = %._crit_edge43.14
  call void @unroll_loop(i32 3)
  %2087 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2085, i32 0, i32 0
  %2088 = load i8*, i8** %2087, align 8
  %2089 = call i32 @strcmp(i8* %2088, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2090 = icmp eq i32 %2089, 0
  br i1 %2090, label %.loopexit17.loopexit, label %2091

; <label>:2091:                                   ; preds = %.lr.ph48.15
  %2092 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2085, i32 0, i32 0
  %2093 = load i8*, i8** %2092, align 8
  %2094 = load i8, i8* %2093, align 1
  %2095 = sext i8 %2094 to i32
  %2096 = icmp eq i32 %2095, 45
  br i1 %2096, label %2097, label %._crit_edge43.15

; <label>:2097:                                   ; preds = %2091
  %2098 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2085, i32 0, i32 0
  %2099 = load i8*, i8** %2098, align 8
  %2100 = getelementptr inbounds i8, i8* %2099, i64 1
  %2101 = load i8, i8* %2100, align 1
  %2102 = sext i8 %2101 to i32
  %2103 = icmp ne i32 %2102, 45
  br i1 %2103, label %2104, label %._crit_edge43.15

; <label>:2104:                                   ; preds = %2097
  %2105 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2085, i32 0, i32 0
  %2106 = load i8*, i8** %2105, align 8
  %2107 = getelementptr inbounds i8, i8* %2106, i64 1
  %2108 = load i8, i8* %2107, align 1
  %2109 = sext i8 %2108 to i32
  %2110 = icmp ne i32 %2109, 0
  br i1 %2110, label %.lr.ph42.preheader.15, label %._crit_edge43.15

.lr.ph42.preheader.15:                            ; preds = %2104
  %2111 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2085, i32 0, i32 0
  br label %.lr.ph42.15

.lr.ph42.15:                                      ; preds = %2136, %.lr.ph42.preheader.15
  %lsr.iv.15 = phi i64 [ 0, %.lr.ph42.preheader.15 ], [ %lsr.iv.next.15, %2136 ]
  call void @unroll_loop(i32 4)
  %2112 = load i8*, i8** %2111, align 8
  %scevgep.15 = getelementptr i8, i8* %2112, i64 1
  %scevgep1.15 = getelementptr i8, i8* %scevgep.15, i64 %lsr.iv.15
  %2113 = load i8, i8* %scevgep1.15, align 1
  %2114 = sext i8 %2113 to i32
  switch i32 %2114, label %.loopexit32 [
    i32 99, label %2135
    i32 100, label %2134
    i32 122, label %2133
    i32 102, label %2132
    i32 116, label %2131
    i32 107, label %2130
    i32 115, label %2129
    i32 113, label %2128
    i32 49, label %2127
    i32 50, label %2126
    i32 51, label %2125
    i32 52, label %2124
    i32 53, label %2123
    i32 54, label %2122
    i32 55, label %2121
    i32 56, label %2120
    i32 57, label %2119
    i32 86, label %2118
    i32 76, label %2118
    i32 118, label %2115
    i32 104, label %.loopexit33
  ]

; <label>:2115:                                   ; preds = %.lr.ph42.15
  %2116 = load i32, i32* @verbosity, align 4
  %2117 = add nsw i32 %2116, 1
  store i32 %2117, i32* @verbosity, align 4
  br label %2136

; <label>:2118:                                   ; preds = %.lr.ph42.15, %.lr.ph42.15
  call void @license()
  br label %2136

; <label>:2119:                                   ; preds = %.lr.ph42.15
  store i32 9, i32* @blockSize100k, align 4
  br label %2136

; <label>:2120:                                   ; preds = %.lr.ph42.15
  store i32 8, i32* @blockSize100k, align 4
  br label %2136

; <label>:2121:                                   ; preds = %.lr.ph42.15
  store i32 7, i32* @blockSize100k, align 4
  br label %2136

; <label>:2122:                                   ; preds = %.lr.ph42.15
  store i32 6, i32* @blockSize100k, align 4
  br label %2136

; <label>:2123:                                   ; preds = %.lr.ph42.15
  store i32 5, i32* @blockSize100k, align 4
  br label %2136

; <label>:2124:                                   ; preds = %.lr.ph42.15
  store i32 4, i32* @blockSize100k, align 4
  br label %2136

; <label>:2125:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @blockSize100k, align 4
  br label %2136

; <label>:2126:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @blockSize100k, align 4
  br label %2136

; <label>:2127:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @blockSize100k, align 4
  br label %2136

; <label>:2128:                                   ; preds = %.lr.ph42.15
  store i8 0, i8* @noisy, align 1
  br label %2136

; <label>:2129:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @smallMode, align 1
  br label %2136

; <label>:2130:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @keepInputFiles, align 1
  br label %2136

; <label>:2131:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @opMode, align 4
  br label %2136

; <label>:2132:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @forceOverwrite, align 1
  br label %2136

; <label>:2133:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @opMode, align 4
  br label %2136

; <label>:2134:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @opMode, align 4
  br label %2136

; <label>:2135:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @srcMode, align 4
  br label %2136

; <label>:2136:                                   ; preds = %2135, %2134, %2133, %2132, %2131, %2130, %2129, %2128, %2127, %2126, %2125, %2124, %2123, %2122, %2121, %2120, %2119, %2118, %2115
  %2137 = load i8*, i8** %2105, align 8
  %scevgep2.15 = getelementptr i8, i8* %2137, i64 2
  %scevgep3.15 = getelementptr i8, i8* %scevgep2.15, i64 %lsr.iv.15
  %2138 = load i8, i8* %scevgep3.15, align 1
  %2139 = sext i8 %2138 to i32
  %2140 = icmp ne i32 %2139, 0
  %lsr.iv.next.15 = add i64 %lsr.iv.15, 1
  br i1 %2140, label %.lr.ph42.15, label %._crit_edge43.loopexit.15

._crit_edge43.loopexit.15:                        ; preds = %2136
  br label %._crit_edge43.15

._crit_edge43.15:                                 ; preds = %._crit_edge43.loopexit.15, %2104, %2097, %2091
  call void @__loop_iteration_test___3()
  %2141 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2085, i32 0, i32 1
  %2142 = load %struct.zzzz*, %struct.zzzz** %2141, align 8
  %2143 = icmp ne %struct.zzzz* %2142, null
  br i1 %2143, label %.lr.ph48.16, label %.loopexit17.loopexit

.lr.ph48.16:                                      ; preds = %._crit_edge43.15
  call void @unroll_loop(i32 3)
  %2144 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2142, i32 0, i32 0
  %2145 = load i8*, i8** %2144, align 8
  %2146 = call i32 @strcmp(i8* %2145, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2147 = icmp eq i32 %2146, 0
  br i1 %2147, label %.loopexit17.loopexit, label %2148

; <label>:2148:                                   ; preds = %.lr.ph48.16
  %2149 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2142, i32 0, i32 0
  %2150 = load i8*, i8** %2149, align 8
  %2151 = load i8, i8* %2150, align 1
  %2152 = sext i8 %2151 to i32
  %2153 = icmp eq i32 %2152, 45
  br i1 %2153, label %2154, label %._crit_edge43.16

; <label>:2154:                                   ; preds = %2148
  %2155 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2142, i32 0, i32 0
  %2156 = load i8*, i8** %2155, align 8
  %2157 = getelementptr inbounds i8, i8* %2156, i64 1
  %2158 = load i8, i8* %2157, align 1
  %2159 = sext i8 %2158 to i32
  %2160 = icmp ne i32 %2159, 45
  br i1 %2160, label %2161, label %._crit_edge43.16

; <label>:2161:                                   ; preds = %2154
  %2162 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2142, i32 0, i32 0
  %2163 = load i8*, i8** %2162, align 8
  %2164 = getelementptr inbounds i8, i8* %2163, i64 1
  %2165 = load i8, i8* %2164, align 1
  %2166 = sext i8 %2165 to i32
  %2167 = icmp ne i32 %2166, 0
  br i1 %2167, label %.lr.ph42.preheader.16, label %._crit_edge43.16

.lr.ph42.preheader.16:                            ; preds = %2161
  %2168 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2142, i32 0, i32 0
  br label %.lr.ph42.16

.lr.ph42.16:                                      ; preds = %2193, %.lr.ph42.preheader.16
  %lsr.iv.16 = phi i64 [ 0, %.lr.ph42.preheader.16 ], [ %lsr.iv.next.16, %2193 ]
  call void @unroll_loop(i32 4)
  %2169 = load i8*, i8** %2168, align 8
  %scevgep.16 = getelementptr i8, i8* %2169, i64 1
  %scevgep1.16 = getelementptr i8, i8* %scevgep.16, i64 %lsr.iv.16
  %2170 = load i8, i8* %scevgep1.16, align 1
  %2171 = sext i8 %2170 to i32
  switch i32 %2171, label %.loopexit34 [
    i32 99, label %2192
    i32 100, label %2191
    i32 122, label %2190
    i32 102, label %2189
    i32 116, label %2188
    i32 107, label %2187
    i32 115, label %2186
    i32 113, label %2185
    i32 49, label %2184
    i32 50, label %2183
    i32 51, label %2182
    i32 52, label %2181
    i32 53, label %2180
    i32 54, label %2179
    i32 55, label %2178
    i32 56, label %2177
    i32 57, label %2176
    i32 86, label %2175
    i32 76, label %2175
    i32 118, label %2172
    i32 104, label %.loopexit35
  ]

; <label>:2172:                                   ; preds = %.lr.ph42.16
  %2173 = load i32, i32* @verbosity, align 4
  %2174 = add nsw i32 %2173, 1
  store i32 %2174, i32* @verbosity, align 4
  br label %2193

; <label>:2175:                                   ; preds = %.lr.ph42.16, %.lr.ph42.16
  call void @license()
  br label %2193

; <label>:2176:                                   ; preds = %.lr.ph42.16
  store i32 9, i32* @blockSize100k, align 4
  br label %2193

; <label>:2177:                                   ; preds = %.lr.ph42.16
  store i32 8, i32* @blockSize100k, align 4
  br label %2193

; <label>:2178:                                   ; preds = %.lr.ph42.16
  store i32 7, i32* @blockSize100k, align 4
  br label %2193

; <label>:2179:                                   ; preds = %.lr.ph42.16
  store i32 6, i32* @blockSize100k, align 4
  br label %2193

; <label>:2180:                                   ; preds = %.lr.ph42.16
  store i32 5, i32* @blockSize100k, align 4
  br label %2193

; <label>:2181:                                   ; preds = %.lr.ph42.16
  store i32 4, i32* @blockSize100k, align 4
  br label %2193

; <label>:2182:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @blockSize100k, align 4
  br label %2193

; <label>:2183:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @blockSize100k, align 4
  br label %2193

; <label>:2184:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @blockSize100k, align 4
  br label %2193

; <label>:2185:                                   ; preds = %.lr.ph42.16
  store i8 0, i8* @noisy, align 1
  br label %2193

; <label>:2186:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @smallMode, align 1
  br label %2193

; <label>:2187:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @keepInputFiles, align 1
  br label %2193

; <label>:2188:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @opMode, align 4
  br label %2193

; <label>:2189:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @forceOverwrite, align 1
  br label %2193

; <label>:2190:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @opMode, align 4
  br label %2193

; <label>:2191:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @opMode, align 4
  br label %2193

; <label>:2192:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @srcMode, align 4
  br label %2193

; <label>:2193:                                   ; preds = %2192, %2191, %2190, %2189, %2188, %2187, %2186, %2185, %2184, %2183, %2182, %2181, %2180, %2179, %2178, %2177, %2176, %2175, %2172
  %2194 = load i8*, i8** %2162, align 8
  %scevgep2.16 = getelementptr i8, i8* %2194, i64 2
  %scevgep3.16 = getelementptr i8, i8* %scevgep2.16, i64 %lsr.iv.16
  %2195 = load i8, i8* %scevgep3.16, align 1
  %2196 = sext i8 %2195 to i32
  %2197 = icmp ne i32 %2196, 0
  %lsr.iv.next.16 = add i64 %lsr.iv.16, 1
  br i1 %2197, label %.lr.ph42.16, label %._crit_edge43.loopexit.16

._crit_edge43.loopexit.16:                        ; preds = %2193
  br label %._crit_edge43.16

._crit_edge43.16:                                 ; preds = %._crit_edge43.loopexit.16, %2161, %2154, %2148
  call void @__loop_iteration_test___3()
  %2198 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2142, i32 0, i32 1
  %2199 = load %struct.zzzz*, %struct.zzzz** %2198, align 8
  %2200 = icmp ne %struct.zzzz* %2199, null
  br i1 %2200, label %.lr.ph48.17, label %.loopexit17.loopexit

.lr.ph48.17:                                      ; preds = %._crit_edge43.16
  call void @unroll_loop(i32 3)
  %2201 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2199, i32 0, i32 0
  %2202 = load i8*, i8** %2201, align 8
  %2203 = call i32 @strcmp(i8* %2202, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2204 = icmp eq i32 %2203, 0
  br i1 %2204, label %.loopexit17.loopexit, label %2205

; <label>:2205:                                   ; preds = %.lr.ph48.17
  %2206 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2199, i32 0, i32 0
  %2207 = load i8*, i8** %2206, align 8
  %2208 = load i8, i8* %2207, align 1
  %2209 = sext i8 %2208 to i32
  %2210 = icmp eq i32 %2209, 45
  br i1 %2210, label %2211, label %._crit_edge43.17

; <label>:2211:                                   ; preds = %2205
  %2212 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2199, i32 0, i32 0
  %2213 = load i8*, i8** %2212, align 8
  %2214 = getelementptr inbounds i8, i8* %2213, i64 1
  %2215 = load i8, i8* %2214, align 1
  %2216 = sext i8 %2215 to i32
  %2217 = icmp ne i32 %2216, 45
  br i1 %2217, label %2218, label %._crit_edge43.17

; <label>:2218:                                   ; preds = %2211
  %2219 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2199, i32 0, i32 0
  %2220 = load i8*, i8** %2219, align 8
  %2221 = getelementptr inbounds i8, i8* %2220, i64 1
  %2222 = load i8, i8* %2221, align 1
  %2223 = sext i8 %2222 to i32
  %2224 = icmp ne i32 %2223, 0
  br i1 %2224, label %.lr.ph42.preheader.17, label %._crit_edge43.17

.lr.ph42.preheader.17:                            ; preds = %2218
  %2225 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2199, i32 0, i32 0
  br label %.lr.ph42.17

.lr.ph42.17:                                      ; preds = %2250, %.lr.ph42.preheader.17
  %lsr.iv.17 = phi i64 [ 0, %.lr.ph42.preheader.17 ], [ %lsr.iv.next.17, %2250 ]
  call void @unroll_loop(i32 4)
  %2226 = load i8*, i8** %2225, align 8
  %scevgep.17 = getelementptr i8, i8* %2226, i64 1
  %scevgep1.17 = getelementptr i8, i8* %scevgep.17, i64 %lsr.iv.17
  %2227 = load i8, i8* %scevgep1.17, align 1
  %2228 = sext i8 %2227 to i32
  switch i32 %2228, label %.loopexit36 [
    i32 99, label %2249
    i32 100, label %2248
    i32 122, label %2247
    i32 102, label %2246
    i32 116, label %2245
    i32 107, label %2244
    i32 115, label %2243
    i32 113, label %2242
    i32 49, label %2241
    i32 50, label %2240
    i32 51, label %2239
    i32 52, label %2238
    i32 53, label %2237
    i32 54, label %2236
    i32 55, label %2235
    i32 56, label %2234
    i32 57, label %2233
    i32 86, label %2232
    i32 76, label %2232
    i32 118, label %2229
    i32 104, label %.loopexit37
  ]

; <label>:2229:                                   ; preds = %.lr.ph42.17
  %2230 = load i32, i32* @verbosity, align 4
  %2231 = add nsw i32 %2230, 1
  store i32 %2231, i32* @verbosity, align 4
  br label %2250

; <label>:2232:                                   ; preds = %.lr.ph42.17, %.lr.ph42.17
  call void @license()
  br label %2250

; <label>:2233:                                   ; preds = %.lr.ph42.17
  store i32 9, i32* @blockSize100k, align 4
  br label %2250

; <label>:2234:                                   ; preds = %.lr.ph42.17
  store i32 8, i32* @blockSize100k, align 4
  br label %2250

; <label>:2235:                                   ; preds = %.lr.ph42.17
  store i32 7, i32* @blockSize100k, align 4
  br label %2250

; <label>:2236:                                   ; preds = %.lr.ph42.17
  store i32 6, i32* @blockSize100k, align 4
  br label %2250

; <label>:2237:                                   ; preds = %.lr.ph42.17
  store i32 5, i32* @blockSize100k, align 4
  br label %2250

; <label>:2238:                                   ; preds = %.lr.ph42.17
  store i32 4, i32* @blockSize100k, align 4
  br label %2250

; <label>:2239:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @blockSize100k, align 4
  br label %2250

; <label>:2240:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @blockSize100k, align 4
  br label %2250

; <label>:2241:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @blockSize100k, align 4
  br label %2250

; <label>:2242:                                   ; preds = %.lr.ph42.17
  store i8 0, i8* @noisy, align 1
  br label %2250

; <label>:2243:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @smallMode, align 1
  br label %2250

; <label>:2244:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @keepInputFiles, align 1
  br label %2250

; <label>:2245:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @opMode, align 4
  br label %2250

; <label>:2246:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @forceOverwrite, align 1
  br label %2250

; <label>:2247:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @opMode, align 4
  br label %2250

; <label>:2248:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @opMode, align 4
  br label %2250

; <label>:2249:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @srcMode, align 4
  br label %2250

; <label>:2250:                                   ; preds = %2249, %2248, %2247, %2246, %2245, %2244, %2243, %2242, %2241, %2240, %2239, %2238, %2237, %2236, %2235, %2234, %2233, %2232, %2229
  %2251 = load i8*, i8** %2219, align 8
  %scevgep2.17 = getelementptr i8, i8* %2251, i64 2
  %scevgep3.17 = getelementptr i8, i8* %scevgep2.17, i64 %lsr.iv.17
  %2252 = load i8, i8* %scevgep3.17, align 1
  %2253 = sext i8 %2252 to i32
  %2254 = icmp ne i32 %2253, 0
  %lsr.iv.next.17 = add i64 %lsr.iv.17, 1
  br i1 %2254, label %.lr.ph42.17, label %._crit_edge43.loopexit.17

._crit_edge43.loopexit.17:                        ; preds = %2250
  br label %._crit_edge43.17

._crit_edge43.17:                                 ; preds = %._crit_edge43.loopexit.17, %2218, %2211, %2205
  call void @__loop_iteration_test___3()
  %2255 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2199, i32 0, i32 1
  %2256 = load %struct.zzzz*, %struct.zzzz** %2255, align 8
  %2257 = icmp ne %struct.zzzz* %2256, null
  br i1 %2257, label %.lr.ph48.18, label %.loopexit17.loopexit

.lr.ph48.18:                                      ; preds = %._crit_edge43.17
  call void @unroll_loop(i32 3)
  %2258 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2256, i32 0, i32 0
  %2259 = load i8*, i8** %2258, align 8
  %2260 = call i32 @strcmp(i8* %2259, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2261 = icmp eq i32 %2260, 0
  br i1 %2261, label %.loopexit17.loopexit, label %2262

; <label>:2262:                                   ; preds = %.lr.ph48.18
  %2263 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2256, i32 0, i32 0
  %2264 = load i8*, i8** %2263, align 8
  %2265 = load i8, i8* %2264, align 1
  %2266 = sext i8 %2265 to i32
  %2267 = icmp eq i32 %2266, 45
  br i1 %2267, label %2268, label %._crit_edge43.18

; <label>:2268:                                   ; preds = %2262
  %2269 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2256, i32 0, i32 0
  %2270 = load i8*, i8** %2269, align 8
  %2271 = getelementptr inbounds i8, i8* %2270, i64 1
  %2272 = load i8, i8* %2271, align 1
  %2273 = sext i8 %2272 to i32
  %2274 = icmp ne i32 %2273, 45
  br i1 %2274, label %2275, label %._crit_edge43.18

; <label>:2275:                                   ; preds = %2268
  %2276 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2256, i32 0, i32 0
  %2277 = load i8*, i8** %2276, align 8
  %2278 = getelementptr inbounds i8, i8* %2277, i64 1
  %2279 = load i8, i8* %2278, align 1
  %2280 = sext i8 %2279 to i32
  %2281 = icmp ne i32 %2280, 0
  br i1 %2281, label %.lr.ph42.preheader.18, label %._crit_edge43.18

.lr.ph42.preheader.18:                            ; preds = %2275
  %2282 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2256, i32 0, i32 0
  br label %.lr.ph42.18

.lr.ph42.18:                                      ; preds = %2307, %.lr.ph42.preheader.18
  %lsr.iv.18 = phi i64 [ 0, %.lr.ph42.preheader.18 ], [ %lsr.iv.next.18, %2307 ]
  call void @unroll_loop(i32 4)
  %2283 = load i8*, i8** %2282, align 8
  %scevgep.18 = getelementptr i8, i8* %2283, i64 1
  %scevgep1.18 = getelementptr i8, i8* %scevgep.18, i64 %lsr.iv.18
  %2284 = load i8, i8* %scevgep1.18, align 1
  %2285 = sext i8 %2284 to i32
  switch i32 %2285, label %.loopexit38 [
    i32 99, label %2306
    i32 100, label %2305
    i32 122, label %2304
    i32 102, label %2303
    i32 116, label %2302
    i32 107, label %2301
    i32 115, label %2300
    i32 113, label %2299
    i32 49, label %2298
    i32 50, label %2297
    i32 51, label %2296
    i32 52, label %2295
    i32 53, label %2294
    i32 54, label %2293
    i32 55, label %2292
    i32 56, label %2291
    i32 57, label %2290
    i32 86, label %2289
    i32 76, label %2289
    i32 118, label %2286
    i32 104, label %.loopexit39
  ]

; <label>:2286:                                   ; preds = %.lr.ph42.18
  %2287 = load i32, i32* @verbosity, align 4
  %2288 = add nsw i32 %2287, 1
  store i32 %2288, i32* @verbosity, align 4
  br label %2307

; <label>:2289:                                   ; preds = %.lr.ph42.18, %.lr.ph42.18
  call void @license()
  br label %2307

; <label>:2290:                                   ; preds = %.lr.ph42.18
  store i32 9, i32* @blockSize100k, align 4
  br label %2307

; <label>:2291:                                   ; preds = %.lr.ph42.18
  store i32 8, i32* @blockSize100k, align 4
  br label %2307

; <label>:2292:                                   ; preds = %.lr.ph42.18
  store i32 7, i32* @blockSize100k, align 4
  br label %2307

; <label>:2293:                                   ; preds = %.lr.ph42.18
  store i32 6, i32* @blockSize100k, align 4
  br label %2307

; <label>:2294:                                   ; preds = %.lr.ph42.18
  store i32 5, i32* @blockSize100k, align 4
  br label %2307

; <label>:2295:                                   ; preds = %.lr.ph42.18
  store i32 4, i32* @blockSize100k, align 4
  br label %2307

; <label>:2296:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @blockSize100k, align 4
  br label %2307

; <label>:2297:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @blockSize100k, align 4
  br label %2307

; <label>:2298:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @blockSize100k, align 4
  br label %2307

; <label>:2299:                                   ; preds = %.lr.ph42.18
  store i8 0, i8* @noisy, align 1
  br label %2307

; <label>:2300:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @smallMode, align 1
  br label %2307

; <label>:2301:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @keepInputFiles, align 1
  br label %2307

; <label>:2302:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @opMode, align 4
  br label %2307

; <label>:2303:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @forceOverwrite, align 1
  br label %2307

; <label>:2304:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @opMode, align 4
  br label %2307

; <label>:2305:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @opMode, align 4
  br label %2307

; <label>:2306:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @srcMode, align 4
  br label %2307

; <label>:2307:                                   ; preds = %2306, %2305, %2304, %2303, %2302, %2301, %2300, %2299, %2298, %2297, %2296, %2295, %2294, %2293, %2292, %2291, %2290, %2289, %2286
  %2308 = load i8*, i8** %2276, align 8
  %scevgep2.18 = getelementptr i8, i8* %2308, i64 2
  %scevgep3.18 = getelementptr i8, i8* %scevgep2.18, i64 %lsr.iv.18
  %2309 = load i8, i8* %scevgep3.18, align 1
  %2310 = sext i8 %2309 to i32
  %2311 = icmp ne i32 %2310, 0
  %lsr.iv.next.18 = add i64 %lsr.iv.18, 1
  br i1 %2311, label %.lr.ph42.18, label %._crit_edge43.loopexit.18

._crit_edge43.loopexit.18:                        ; preds = %2307
  br label %._crit_edge43.18

._crit_edge43.18:                                 ; preds = %._crit_edge43.loopexit.18, %2275, %2268, %2262
  call void @__loop_iteration_test___3()
  %2312 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2256, i32 0, i32 1
  %2313 = load %struct.zzzz*, %struct.zzzz** %2312, align 8
  %2314 = icmp ne %struct.zzzz* %2313, null
  br i1 %2314, label %.lr.ph48.19, label %.loopexit17.loopexit

.lr.ph48.19:                                      ; preds = %._crit_edge43.18
  call void @unroll_loop(i32 3)
  %2315 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2313, i32 0, i32 0
  %2316 = load i8*, i8** %2315, align 8
  %2317 = call i32 @strcmp(i8* %2316, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2318 = icmp eq i32 %2317, 0
  br i1 %2318, label %.loopexit17.loopexit, label %2319

; <label>:2319:                                   ; preds = %.lr.ph48.19
  %2320 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2313, i32 0, i32 0
  %2321 = load i8*, i8** %2320, align 8
  %2322 = load i8, i8* %2321, align 1
  %2323 = sext i8 %2322 to i32
  %2324 = icmp eq i32 %2323, 45
  br i1 %2324, label %2325, label %._crit_edge43.19

; <label>:2325:                                   ; preds = %2319
  %2326 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2313, i32 0, i32 0
  %2327 = load i8*, i8** %2326, align 8
  %2328 = getelementptr inbounds i8, i8* %2327, i64 1
  %2329 = load i8, i8* %2328, align 1
  %2330 = sext i8 %2329 to i32
  %2331 = icmp ne i32 %2330, 45
  br i1 %2331, label %2332, label %._crit_edge43.19

; <label>:2332:                                   ; preds = %2325
  %2333 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2313, i32 0, i32 0
  %2334 = load i8*, i8** %2333, align 8
  %2335 = getelementptr inbounds i8, i8* %2334, i64 1
  %2336 = load i8, i8* %2335, align 1
  %2337 = sext i8 %2336 to i32
  %2338 = icmp ne i32 %2337, 0
  br i1 %2338, label %.lr.ph42.preheader.19, label %._crit_edge43.19

.lr.ph42.preheader.19:                            ; preds = %2332
  %2339 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2313, i32 0, i32 0
  br label %.lr.ph42.19

.lr.ph42.19:                                      ; preds = %2364, %.lr.ph42.preheader.19
  %lsr.iv.19 = phi i64 [ 0, %.lr.ph42.preheader.19 ], [ %lsr.iv.next.19, %2364 ]
  call void @unroll_loop(i32 4)
  %2340 = load i8*, i8** %2339, align 8
  %scevgep.19 = getelementptr i8, i8* %2340, i64 1
  %scevgep1.19 = getelementptr i8, i8* %scevgep.19, i64 %lsr.iv.19
  %2341 = load i8, i8* %scevgep1.19, align 1
  %2342 = sext i8 %2341 to i32
  switch i32 %2342, label %.loopexit40 [
    i32 99, label %2363
    i32 100, label %2362
    i32 122, label %2361
    i32 102, label %2360
    i32 116, label %2359
    i32 107, label %2358
    i32 115, label %2357
    i32 113, label %2356
    i32 49, label %2355
    i32 50, label %2354
    i32 51, label %2353
    i32 52, label %2352
    i32 53, label %2351
    i32 54, label %2350
    i32 55, label %2349
    i32 56, label %2348
    i32 57, label %2347
    i32 86, label %2346
    i32 76, label %2346
    i32 118, label %2343
    i32 104, label %.loopexit41
  ]

; <label>:2343:                                   ; preds = %.lr.ph42.19
  %2344 = load i32, i32* @verbosity, align 4
  %2345 = add nsw i32 %2344, 1
  store i32 %2345, i32* @verbosity, align 4
  br label %2364

; <label>:2346:                                   ; preds = %.lr.ph42.19, %.lr.ph42.19
  call void @license()
  br label %2364

; <label>:2347:                                   ; preds = %.lr.ph42.19
  store i32 9, i32* @blockSize100k, align 4
  br label %2364

; <label>:2348:                                   ; preds = %.lr.ph42.19
  store i32 8, i32* @blockSize100k, align 4
  br label %2364

; <label>:2349:                                   ; preds = %.lr.ph42.19
  store i32 7, i32* @blockSize100k, align 4
  br label %2364

; <label>:2350:                                   ; preds = %.lr.ph42.19
  store i32 6, i32* @blockSize100k, align 4
  br label %2364

; <label>:2351:                                   ; preds = %.lr.ph42.19
  store i32 5, i32* @blockSize100k, align 4
  br label %2364

; <label>:2352:                                   ; preds = %.lr.ph42.19
  store i32 4, i32* @blockSize100k, align 4
  br label %2364

; <label>:2353:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @blockSize100k, align 4
  br label %2364

; <label>:2354:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @blockSize100k, align 4
  br label %2364

; <label>:2355:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @blockSize100k, align 4
  br label %2364

; <label>:2356:                                   ; preds = %.lr.ph42.19
  store i8 0, i8* @noisy, align 1
  br label %2364

; <label>:2357:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @smallMode, align 1
  br label %2364

; <label>:2358:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @keepInputFiles, align 1
  br label %2364

; <label>:2359:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @opMode, align 4
  br label %2364

; <label>:2360:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @forceOverwrite, align 1
  br label %2364

; <label>:2361:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @opMode, align 4
  br label %2364

; <label>:2362:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @opMode, align 4
  br label %2364

; <label>:2363:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @srcMode, align 4
  br label %2364

; <label>:2364:                                   ; preds = %2363, %2362, %2361, %2360, %2359, %2358, %2357, %2356, %2355, %2354, %2353, %2352, %2351, %2350, %2349, %2348, %2347, %2346, %2343
  %2365 = load i8*, i8** %2333, align 8
  %scevgep2.19 = getelementptr i8, i8* %2365, i64 2
  %scevgep3.19 = getelementptr i8, i8* %scevgep2.19, i64 %lsr.iv.19
  %2366 = load i8, i8* %scevgep3.19, align 1
  %2367 = sext i8 %2366 to i32
  %2368 = icmp ne i32 %2367, 0
  %lsr.iv.next.19 = add i64 %lsr.iv.19, 1
  br i1 %2368, label %.lr.ph42.19, label %._crit_edge43.loopexit.19

._crit_edge43.loopexit.19:                        ; preds = %2364
  br label %._crit_edge43.19

._crit_edge43.19:                                 ; preds = %._crit_edge43.loopexit.19, %2332, %2325, %2319
  call void @__loop_iteration_test___3()
  %2369 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2313, i32 0, i32 1
  %2370 = load %struct.zzzz*, %struct.zzzz** %2369, align 8
  br label %.loopexit17.loopexit

.lr.ph42.113:                                     ; preds = %198
  call void @unroll_loop(i32 4)
  %2371 = load i8*, i8** %163, align 8
  %scevgep.111 = getelementptr i8, i8* %2371, i64 1
  %scevgep1.112 = getelementptr i8, i8* %scevgep.111, i64 1
  %2372 = load i8, i8* %scevgep1.112, align 1
  %2373 = sext i8 107 to i32
  switch i32 107, label %.loopexit1 [
    i32 99, label %2394
    i32 100, label %2393
    i32 122, label %2392
    i32 102, label %2391
    i32 116, label %2390
    i32 107, label %2389
    i32 115, label %2388
    i32 113, label %2387
    i32 49, label %2386
    i32 50, label %2385
    i32 51, label %2384
    i32 52, label %2383
    i32 53, label %2382
    i32 54, label %2381
    i32 55, label %2380
    i32 56, label %2379
    i32 57, label %2378
    i32 86, label %2377
    i32 76, label %2377
    i32 118, label %2374
    i32 104, label %.loopexit2
  ]

; <label>:2374:                                   ; preds = %.lr.ph42.113
  %2375 = load i32, i32* @verbosity, align 4
  %2376 = add nsw i32 %2375, 1
  store i32 %2376, i32* @verbosity, align 4
  br label %2395

; <label>:2377:                                   ; preds = %.lr.ph42.113, %.lr.ph42.113
  call void @license()
  br label %2395

; <label>:2378:                                   ; preds = %.lr.ph42.113
  store i32 9, i32* @blockSize100k, align 4
  br label %2395

; <label>:2379:                                   ; preds = %.lr.ph42.113
  store i32 8, i32* @blockSize100k, align 4
  br label %2395

; <label>:2380:                                   ; preds = %.lr.ph42.113
  store i32 7, i32* @blockSize100k, align 4
  br label %2395

; <label>:2381:                                   ; preds = %.lr.ph42.113
  store i32 6, i32* @blockSize100k, align 4
  br label %2395

; <label>:2382:                                   ; preds = %.lr.ph42.113
  store i32 5, i32* @blockSize100k, align 4
  br label %2395

; <label>:2383:                                   ; preds = %.lr.ph42.113
  store i32 4, i32* @blockSize100k, align 4
  br label %2395

; <label>:2384:                                   ; preds = %.lr.ph42.113
  store i32 3, i32* @blockSize100k, align 4
  br label %2395

; <label>:2385:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @blockSize100k, align 4
  br label %2395

; <label>:2386:                                   ; preds = %.lr.ph42.113
  store i32 1, i32* @blockSize100k, align 4
  br label %2395

; <label>:2387:                                   ; preds = %.lr.ph42.113
  store i8 0, i8* @noisy, align 1
  br label %2395

; <label>:2388:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @smallMode, align 1
  br label %2395

; <label>:2389:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @keepInputFiles, align 1
  br label %2395

; <label>:2390:                                   ; preds = %.lr.ph42.113
  store i32 3, i32* @opMode, align 4
  br label %2395

; <label>:2391:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @forceOverwrite, align 1
  br label %2395

; <label>:2392:                                   ; preds = %.lr.ph42.113
  store i32 1, i32* @opMode, align 4
  br label %2395

; <label>:2393:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @opMode, align 4
  br label %2395

; <label>:2394:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @srcMode, align 4
  br label %2395

; <label>:2395:                                   ; preds = %2394, %2393, %2392, %2391, %2390, %2389, %2388, %2387, %2386, %2385, %2384, %2383, %2382, %2381, %2380, %2379, %2378, %2377, %2374
  call void @__loop_iteration_test___4()
  %2396 = load i8*, i8** %157, align 8
  %scevgep2.114 = getelementptr i8, i8* %2396, i64 2
  %scevgep3.115 = getelementptr i8, i8* %scevgep2.114, i64 1
  %2397 = load i8, i8* %scevgep3.115, align 1
  %2398 = sext i8 113 to i32
  %2399 = icmp ne i32 113, 0
  br i1 true, label %.lr.ph42.220, label %._crit_edge43.loopexit

.lr.ph42.220:                                     ; preds = %2395
  call void @unroll_loop(i32 4)
  %2400 = load i8*, i8** %163, align 8
  %scevgep.218 = getelementptr i8, i8* %2400, i64 1
  %scevgep1.219 = getelementptr i8, i8* %scevgep.218, i64 2
  %2401 = load i8, i8* %scevgep1.219, align 1
  %2402 = sext i8 113 to i32
  switch i32 113, label %.loopexit1 [
    i32 99, label %2423
    i32 100, label %2422
    i32 122, label %2421
    i32 102, label %2420
    i32 116, label %2419
    i32 107, label %2418
    i32 115, label %2417
    i32 113, label %2416
    i32 49, label %2415
    i32 50, label %2414
    i32 51, label %2413
    i32 52, label %2412
    i32 53, label %2411
    i32 54, label %2410
    i32 55, label %2409
    i32 56, label %2408
    i32 57, label %2407
    i32 86, label %2406
    i32 76, label %2406
    i32 118, label %2403
    i32 104, label %.loopexit2
  ]

; <label>:2403:                                   ; preds = %.lr.ph42.220
  %2404 = load i32, i32* @verbosity, align 4
  %2405 = add nsw i32 %2404, 1
  store i32 %2405, i32* @verbosity, align 4
  br label %2424

; <label>:2406:                                   ; preds = %.lr.ph42.220, %.lr.ph42.220
  call void @license()
  br label %2424

; <label>:2407:                                   ; preds = %.lr.ph42.220
  store i32 9, i32* @blockSize100k, align 4
  br label %2424

; <label>:2408:                                   ; preds = %.lr.ph42.220
  store i32 8, i32* @blockSize100k, align 4
  br label %2424

; <label>:2409:                                   ; preds = %.lr.ph42.220
  store i32 7, i32* @blockSize100k, align 4
  br label %2424

; <label>:2410:                                   ; preds = %.lr.ph42.220
  store i32 6, i32* @blockSize100k, align 4
  br label %2424

; <label>:2411:                                   ; preds = %.lr.ph42.220
  store i32 5, i32* @blockSize100k, align 4
  br label %2424

; <label>:2412:                                   ; preds = %.lr.ph42.220
  store i32 4, i32* @blockSize100k, align 4
  br label %2424

; <label>:2413:                                   ; preds = %.lr.ph42.220
  store i32 3, i32* @blockSize100k, align 4
  br label %2424

; <label>:2414:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @blockSize100k, align 4
  br label %2424

; <label>:2415:                                   ; preds = %.lr.ph42.220
  store i32 1, i32* @blockSize100k, align 4
  br label %2424

; <label>:2416:                                   ; preds = %.lr.ph42.220
  store i8 0, i8* @noisy, align 1
  br label %2424

; <label>:2417:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @smallMode, align 1
  br label %2424

; <label>:2418:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @keepInputFiles, align 1
  br label %2424

; <label>:2419:                                   ; preds = %.lr.ph42.220
  store i32 3, i32* @opMode, align 4
  br label %2424

; <label>:2420:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @forceOverwrite, align 1
  br label %2424

; <label>:2421:                                   ; preds = %.lr.ph42.220
  store i32 1, i32* @opMode, align 4
  br label %2424

; <label>:2422:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @opMode, align 4
  br label %2424

; <label>:2423:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @srcMode, align 4
  br label %2424

; <label>:2424:                                   ; preds = %2423, %2422, %2421, %2420, %2419, %2418, %2417, %2416, %2415, %2414, %2413, %2412, %2411, %2410, %2409, %2408, %2407, %2406, %2403
  call void @__loop_iteration_test___4()
  %2425 = load i8*, i8** %157, align 8
  %scevgep2.221 = getelementptr i8, i8* %2425, i64 2
  %scevgep3.222 = getelementptr i8, i8* %scevgep2.221, i64 2
  %2426 = load i8, i8* %scevgep3.222, align 1
  %2427 = sext i8 115 to i32
  %2428 = icmp ne i32 115, 0
  br i1 true, label %.lr.ph42.327, label %._crit_edge43.loopexit

.lr.ph42.327:                                     ; preds = %2424
  call void @unroll_loop(i32 4)
  %2429 = load i8*, i8** %163, align 8
  %scevgep.325 = getelementptr i8, i8* %2429, i64 1
  %scevgep1.326 = getelementptr i8, i8* %scevgep.325, i64 3
  %2430 = load i8, i8* %scevgep1.326, align 1
  %2431 = sext i8 115 to i32
  switch i32 115, label %.loopexit1 [
    i32 99, label %2452
    i32 100, label %2451
    i32 122, label %2450
    i32 102, label %2449
    i32 116, label %2448
    i32 107, label %2447
    i32 115, label %2446
    i32 113, label %2445
    i32 49, label %2444
    i32 50, label %2443
    i32 51, label %2442
    i32 52, label %2441
    i32 53, label %2440
    i32 54, label %2439
    i32 55, label %2438
    i32 56, label %2437
    i32 57, label %2436
    i32 86, label %2435
    i32 76, label %2435
    i32 118, label %2432
    i32 104, label %.loopexit2
  ]

; <label>:2432:                                   ; preds = %.lr.ph42.327
  %2433 = load i32, i32* @verbosity, align 4
  %2434 = add nsw i32 %2433, 1
  store i32 %2434, i32* @verbosity, align 4
  br label %2453

; <label>:2435:                                   ; preds = %.lr.ph42.327, %.lr.ph42.327
  call void @license()
  br label %2453

; <label>:2436:                                   ; preds = %.lr.ph42.327
  store i32 9, i32* @blockSize100k, align 4
  br label %2453

; <label>:2437:                                   ; preds = %.lr.ph42.327
  store i32 8, i32* @blockSize100k, align 4
  br label %2453

; <label>:2438:                                   ; preds = %.lr.ph42.327
  store i32 7, i32* @blockSize100k, align 4
  br label %2453

; <label>:2439:                                   ; preds = %.lr.ph42.327
  store i32 6, i32* @blockSize100k, align 4
  br label %2453

; <label>:2440:                                   ; preds = %.lr.ph42.327
  store i32 5, i32* @blockSize100k, align 4
  br label %2453

; <label>:2441:                                   ; preds = %.lr.ph42.327
  store i32 4, i32* @blockSize100k, align 4
  br label %2453

; <label>:2442:                                   ; preds = %.lr.ph42.327
  store i32 3, i32* @blockSize100k, align 4
  br label %2453

; <label>:2443:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @blockSize100k, align 4
  br label %2453

; <label>:2444:                                   ; preds = %.lr.ph42.327
  store i32 1, i32* @blockSize100k, align 4
  br label %2453

; <label>:2445:                                   ; preds = %.lr.ph42.327
  store i8 0, i8* @noisy, align 1
  br label %2453

; <label>:2446:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @smallMode, align 1
  br label %2453

; <label>:2447:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @keepInputFiles, align 1
  br label %2453

; <label>:2448:                                   ; preds = %.lr.ph42.327
  store i32 3, i32* @opMode, align 4
  br label %2453

; <label>:2449:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @forceOverwrite, align 1
  br label %2453

; <label>:2450:                                   ; preds = %.lr.ph42.327
  store i32 1, i32* @opMode, align 4
  br label %2453

; <label>:2451:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @opMode, align 4
  br label %2453

; <label>:2452:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @srcMode, align 4
  br label %2453

; <label>:2453:                                   ; preds = %2452, %2451, %2450, %2449, %2448, %2447, %2446, %2445, %2444, %2443, %2442, %2441, %2440, %2439, %2438, %2437, %2436, %2435, %2432
  call void @__loop_iteration_test___4()
  %2454 = load i8*, i8** %157, align 8
  %scevgep2.328 = getelementptr i8, i8* %2454, i64 2
  %scevgep3.329 = getelementptr i8, i8* %scevgep2.328, i64 3
  %2455 = load i8, i8* %scevgep3.329, align 1
  %2456 = sext i8 0 to i32
  %2457 = icmp ne i32 0, 0
  br i1 false, label %.lr.ph42.434, label %._crit_edge43.loopexit

.lr.ph42.434:                                     ; preds = %2453
  call void @unroll_loop(i32 4)
  %2458 = load i8*, i8** %163, align 8
  %scevgep.432 = getelementptr i8, i8* %2458, i64 1
  %scevgep1.433 = getelementptr i8, i8* %scevgep.432, i64 4
  %2459 = load i8, i8* %scevgep1.433, align 1
  %2460 = sext i8 %2459 to i32
  switch i32 %2460, label %.loopexit1 [
    i32 99, label %2481
    i32 100, label %2480
    i32 122, label %2479
    i32 102, label %2478
    i32 116, label %2477
    i32 107, label %2476
    i32 115, label %2475
    i32 113, label %2474
    i32 49, label %2473
    i32 50, label %2472
    i32 51, label %2471
    i32 52, label %2470
    i32 53, label %2469
    i32 54, label %2468
    i32 55, label %2467
    i32 56, label %2466
    i32 57, label %2465
    i32 86, label %2464
    i32 76, label %2464
    i32 118, label %2461
    i32 104, label %.loopexit2
  ]

; <label>:2461:                                   ; preds = %.lr.ph42.434
  %2462 = load i32, i32* @verbosity, align 4
  %2463 = add nsw i32 %2462, 1
  store i32 %2463, i32* @verbosity, align 4
  br label %2482

; <label>:2464:                                   ; preds = %.lr.ph42.434, %.lr.ph42.434
  call void @license()
  br label %2482

; <label>:2465:                                   ; preds = %.lr.ph42.434
  store i32 9, i32* @blockSize100k, align 4
  br label %2482

; <label>:2466:                                   ; preds = %.lr.ph42.434
  store i32 8, i32* @blockSize100k, align 4
  br label %2482

; <label>:2467:                                   ; preds = %.lr.ph42.434
  store i32 7, i32* @blockSize100k, align 4
  br label %2482

; <label>:2468:                                   ; preds = %.lr.ph42.434
  store i32 6, i32* @blockSize100k, align 4
  br label %2482

; <label>:2469:                                   ; preds = %.lr.ph42.434
  store i32 5, i32* @blockSize100k, align 4
  br label %2482

; <label>:2470:                                   ; preds = %.lr.ph42.434
  store i32 4, i32* @blockSize100k, align 4
  br label %2482

; <label>:2471:                                   ; preds = %.lr.ph42.434
  store i32 3, i32* @blockSize100k, align 4
  br label %2482

; <label>:2472:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @blockSize100k, align 4
  br label %2482

; <label>:2473:                                   ; preds = %.lr.ph42.434
  store i32 1, i32* @blockSize100k, align 4
  br label %2482

; <label>:2474:                                   ; preds = %.lr.ph42.434
  store i8 0, i8* @noisy, align 1
  br label %2482

; <label>:2475:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @smallMode, align 1
  br label %2482

; <label>:2476:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @keepInputFiles, align 1
  br label %2482

; <label>:2477:                                   ; preds = %.lr.ph42.434
  store i32 3, i32* @opMode, align 4
  br label %2482

; <label>:2478:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @forceOverwrite, align 1
  br label %2482

; <label>:2479:                                   ; preds = %.lr.ph42.434
  store i32 1, i32* @opMode, align 4
  br label %2482

; <label>:2480:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @opMode, align 4
  br label %2482

; <label>:2481:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @srcMode, align 4
  br label %2482

; <label>:2482:                                   ; preds = %2481, %2480, %2479, %2478, %2477, %2476, %2475, %2474, %2473, %2472, %2471, %2470, %2469, %2468, %2467, %2466, %2465, %2464, %2461
  call void @__loop_iteration_test___4()
  %2483 = load i8*, i8** %157, align 8
  %scevgep2.435 = getelementptr i8, i8* %2483, i64 2
  %scevgep3.436 = getelementptr i8, i8* %scevgep2.435, i64 4
  %2484 = load i8, i8* %scevgep3.436, align 1
  %2485 = sext i8 %2484 to i32
  %2486 = icmp ne i32 %2485, 0
  br i1 %2486, label %.lr.ph42.541, label %._crit_edge43.loopexit

.lr.ph42.541:                                     ; preds = %2482
  call void @unroll_loop(i32 4)
  %2487 = load i8*, i8** %163, align 8
  %scevgep.539 = getelementptr i8, i8* %2487, i64 1
  %scevgep1.540 = getelementptr i8, i8* %scevgep.539, i64 5
  %2488 = load i8, i8* %scevgep1.540, align 1
  %2489 = sext i8 %2488 to i32
  switch i32 %2489, label %.loopexit1 [
    i32 99, label %2510
    i32 100, label %2509
    i32 122, label %2508
    i32 102, label %2507
    i32 116, label %2506
    i32 107, label %2505
    i32 115, label %2504
    i32 113, label %2503
    i32 49, label %2502
    i32 50, label %2501
    i32 51, label %2500
    i32 52, label %2499
    i32 53, label %2498
    i32 54, label %2497
    i32 55, label %2496
    i32 56, label %2495
    i32 57, label %2494
    i32 86, label %2493
    i32 76, label %2493
    i32 118, label %2490
    i32 104, label %.loopexit2
  ]

; <label>:2490:                                   ; preds = %.lr.ph42.541
  %2491 = load i32, i32* @verbosity, align 4
  %2492 = add nsw i32 %2491, 1
  store i32 %2492, i32* @verbosity, align 4
  br label %2511

; <label>:2493:                                   ; preds = %.lr.ph42.541, %.lr.ph42.541
  call void @license()
  br label %2511

; <label>:2494:                                   ; preds = %.lr.ph42.541
  store i32 9, i32* @blockSize100k, align 4
  br label %2511

; <label>:2495:                                   ; preds = %.lr.ph42.541
  store i32 8, i32* @blockSize100k, align 4
  br label %2511

; <label>:2496:                                   ; preds = %.lr.ph42.541
  store i32 7, i32* @blockSize100k, align 4
  br label %2511

; <label>:2497:                                   ; preds = %.lr.ph42.541
  store i32 6, i32* @blockSize100k, align 4
  br label %2511

; <label>:2498:                                   ; preds = %.lr.ph42.541
  store i32 5, i32* @blockSize100k, align 4
  br label %2511

; <label>:2499:                                   ; preds = %.lr.ph42.541
  store i32 4, i32* @blockSize100k, align 4
  br label %2511

; <label>:2500:                                   ; preds = %.lr.ph42.541
  store i32 3, i32* @blockSize100k, align 4
  br label %2511

; <label>:2501:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @blockSize100k, align 4
  br label %2511

; <label>:2502:                                   ; preds = %.lr.ph42.541
  store i32 1, i32* @blockSize100k, align 4
  br label %2511

; <label>:2503:                                   ; preds = %.lr.ph42.541
  store i8 0, i8* @noisy, align 1
  br label %2511

; <label>:2504:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @smallMode, align 1
  br label %2511

; <label>:2505:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @keepInputFiles, align 1
  br label %2511

; <label>:2506:                                   ; preds = %.lr.ph42.541
  store i32 3, i32* @opMode, align 4
  br label %2511

; <label>:2507:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @forceOverwrite, align 1
  br label %2511

; <label>:2508:                                   ; preds = %.lr.ph42.541
  store i32 1, i32* @opMode, align 4
  br label %2511

; <label>:2509:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @opMode, align 4
  br label %2511

; <label>:2510:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @srcMode, align 4
  br label %2511

; <label>:2511:                                   ; preds = %2510, %2509, %2508, %2507, %2506, %2505, %2504, %2503, %2502, %2501, %2500, %2499, %2498, %2497, %2496, %2495, %2494, %2493, %2490
  call void @__loop_iteration_test___4()
  %2512 = load i8*, i8** %157, align 8
  %scevgep2.542 = getelementptr i8, i8* %2512, i64 2
  %scevgep3.543 = getelementptr i8, i8* %scevgep2.542, i64 5
  %2513 = load i8, i8* %scevgep3.543, align 1
  %2514 = sext i8 %2513 to i32
  %2515 = icmp ne i32 %2514, 0
  br i1 %2515, label %.lr.ph42.648, label %._crit_edge43.loopexit

.lr.ph42.648:                                     ; preds = %2511
  call void @unroll_loop(i32 4)
  %2516 = load i8*, i8** %163, align 8
  %scevgep.646 = getelementptr i8, i8* %2516, i64 1
  %scevgep1.647 = getelementptr i8, i8* %scevgep.646, i64 6
  %2517 = load i8, i8* %scevgep1.647, align 1
  %2518 = sext i8 %2517 to i32
  switch i32 %2518, label %.loopexit1 [
    i32 99, label %2539
    i32 100, label %2538
    i32 122, label %2537
    i32 102, label %2536
    i32 116, label %2535
    i32 107, label %2534
    i32 115, label %2533
    i32 113, label %2532
    i32 49, label %2531
    i32 50, label %2530
    i32 51, label %2529
    i32 52, label %2528
    i32 53, label %2527
    i32 54, label %2526
    i32 55, label %2525
    i32 56, label %2524
    i32 57, label %2523
    i32 86, label %2522
    i32 76, label %2522
    i32 118, label %2519
    i32 104, label %.loopexit2
  ]

; <label>:2519:                                   ; preds = %.lr.ph42.648
  %2520 = load i32, i32* @verbosity, align 4
  %2521 = add nsw i32 %2520, 1
  store i32 %2521, i32* @verbosity, align 4
  br label %2540

; <label>:2522:                                   ; preds = %.lr.ph42.648, %.lr.ph42.648
  call void @license()
  br label %2540

; <label>:2523:                                   ; preds = %.lr.ph42.648
  store i32 9, i32* @blockSize100k, align 4
  br label %2540

; <label>:2524:                                   ; preds = %.lr.ph42.648
  store i32 8, i32* @blockSize100k, align 4
  br label %2540

; <label>:2525:                                   ; preds = %.lr.ph42.648
  store i32 7, i32* @blockSize100k, align 4
  br label %2540

; <label>:2526:                                   ; preds = %.lr.ph42.648
  store i32 6, i32* @blockSize100k, align 4
  br label %2540

; <label>:2527:                                   ; preds = %.lr.ph42.648
  store i32 5, i32* @blockSize100k, align 4
  br label %2540

; <label>:2528:                                   ; preds = %.lr.ph42.648
  store i32 4, i32* @blockSize100k, align 4
  br label %2540

; <label>:2529:                                   ; preds = %.lr.ph42.648
  store i32 3, i32* @blockSize100k, align 4
  br label %2540

; <label>:2530:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @blockSize100k, align 4
  br label %2540

; <label>:2531:                                   ; preds = %.lr.ph42.648
  store i32 1, i32* @blockSize100k, align 4
  br label %2540

; <label>:2532:                                   ; preds = %.lr.ph42.648
  store i8 0, i8* @noisy, align 1
  br label %2540

; <label>:2533:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @smallMode, align 1
  br label %2540

; <label>:2534:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @keepInputFiles, align 1
  br label %2540

; <label>:2535:                                   ; preds = %.lr.ph42.648
  store i32 3, i32* @opMode, align 4
  br label %2540

; <label>:2536:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @forceOverwrite, align 1
  br label %2540

; <label>:2537:                                   ; preds = %.lr.ph42.648
  store i32 1, i32* @opMode, align 4
  br label %2540

; <label>:2538:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @opMode, align 4
  br label %2540

; <label>:2539:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @srcMode, align 4
  br label %2540

; <label>:2540:                                   ; preds = %2539, %2538, %2537, %2536, %2535, %2534, %2533, %2532, %2531, %2530, %2529, %2528, %2527, %2526, %2525, %2524, %2523, %2522, %2519
  call void @__loop_iteration_test___4()
  %2541 = load i8*, i8** %157, align 8
  %scevgep2.649 = getelementptr i8, i8* %2541, i64 2
  %scevgep3.650 = getelementptr i8, i8* %scevgep2.649, i64 6
  %2542 = load i8, i8* %scevgep3.650, align 1
  %2543 = sext i8 %2542 to i32
  %2544 = icmp ne i32 %2543, 0
  br i1 %2544, label %.lr.ph42.755, label %._crit_edge43.loopexit

.lr.ph42.755:                                     ; preds = %2540
  call void @unroll_loop(i32 4)
  %2545 = load i8*, i8** %163, align 8
  %scevgep.753 = getelementptr i8, i8* %2545, i64 1
  %scevgep1.754 = getelementptr i8, i8* %scevgep.753, i64 7
  %2546 = load i8, i8* %scevgep1.754, align 1
  %2547 = sext i8 %2546 to i32
  switch i32 %2547, label %.loopexit1 [
    i32 99, label %2568
    i32 100, label %2567
    i32 122, label %2566
    i32 102, label %2565
    i32 116, label %2564
    i32 107, label %2563
    i32 115, label %2562
    i32 113, label %2561
    i32 49, label %2560
    i32 50, label %2559
    i32 51, label %2558
    i32 52, label %2557
    i32 53, label %2556
    i32 54, label %2555
    i32 55, label %2554
    i32 56, label %2553
    i32 57, label %2552
    i32 86, label %2551
    i32 76, label %2551
    i32 118, label %2548
    i32 104, label %.loopexit2
  ]

; <label>:2548:                                   ; preds = %.lr.ph42.755
  %2549 = load i32, i32* @verbosity, align 4
  %2550 = add nsw i32 %2549, 1
  store i32 %2550, i32* @verbosity, align 4
  br label %2569

; <label>:2551:                                   ; preds = %.lr.ph42.755, %.lr.ph42.755
  call void @license()
  br label %2569

; <label>:2552:                                   ; preds = %.lr.ph42.755
  store i32 9, i32* @blockSize100k, align 4
  br label %2569

; <label>:2553:                                   ; preds = %.lr.ph42.755
  store i32 8, i32* @blockSize100k, align 4
  br label %2569

; <label>:2554:                                   ; preds = %.lr.ph42.755
  store i32 7, i32* @blockSize100k, align 4
  br label %2569

; <label>:2555:                                   ; preds = %.lr.ph42.755
  store i32 6, i32* @blockSize100k, align 4
  br label %2569

; <label>:2556:                                   ; preds = %.lr.ph42.755
  store i32 5, i32* @blockSize100k, align 4
  br label %2569

; <label>:2557:                                   ; preds = %.lr.ph42.755
  store i32 4, i32* @blockSize100k, align 4
  br label %2569

; <label>:2558:                                   ; preds = %.lr.ph42.755
  store i32 3, i32* @blockSize100k, align 4
  br label %2569

; <label>:2559:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @blockSize100k, align 4
  br label %2569

; <label>:2560:                                   ; preds = %.lr.ph42.755
  store i32 1, i32* @blockSize100k, align 4
  br label %2569

; <label>:2561:                                   ; preds = %.lr.ph42.755
  store i8 0, i8* @noisy, align 1
  br label %2569

; <label>:2562:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @smallMode, align 1
  br label %2569

; <label>:2563:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @keepInputFiles, align 1
  br label %2569

; <label>:2564:                                   ; preds = %.lr.ph42.755
  store i32 3, i32* @opMode, align 4
  br label %2569

; <label>:2565:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @forceOverwrite, align 1
  br label %2569

; <label>:2566:                                   ; preds = %.lr.ph42.755
  store i32 1, i32* @opMode, align 4
  br label %2569

; <label>:2567:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @opMode, align 4
  br label %2569

; <label>:2568:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @srcMode, align 4
  br label %2569

; <label>:2569:                                   ; preds = %2568, %2567, %2566, %2565, %2564, %2563, %2562, %2561, %2560, %2559, %2558, %2557, %2556, %2555, %2554, %2553, %2552, %2551, %2548
  call void @__loop_iteration_test___4()
  %2570 = load i8*, i8** %157, align 8
  %scevgep2.756 = getelementptr i8, i8* %2570, i64 2
  %scevgep3.757 = getelementptr i8, i8* %scevgep2.756, i64 7
  %2571 = load i8, i8* %scevgep3.757, align 1
  %2572 = sext i8 %2571 to i32
  %2573 = icmp ne i32 %2572, 0
  br i1 %2573, label %.lr.ph42.862, label %._crit_edge43.loopexit

.lr.ph42.862:                                     ; preds = %2569
  call void @unroll_loop(i32 4)
  %2574 = load i8*, i8** %163, align 8
  %scevgep.860 = getelementptr i8, i8* %2574, i64 1
  %scevgep1.861 = getelementptr i8, i8* %scevgep.860, i64 8
  %2575 = load i8, i8* %scevgep1.861, align 1
  %2576 = sext i8 %2575 to i32
  switch i32 %2576, label %.loopexit1 [
    i32 99, label %2597
    i32 100, label %2596
    i32 122, label %2595
    i32 102, label %2594
    i32 116, label %2593
    i32 107, label %2592
    i32 115, label %2591
    i32 113, label %2590
    i32 49, label %2589
    i32 50, label %2588
    i32 51, label %2587
    i32 52, label %2586
    i32 53, label %2585
    i32 54, label %2584
    i32 55, label %2583
    i32 56, label %2582
    i32 57, label %2581
    i32 86, label %2580
    i32 76, label %2580
    i32 118, label %2577
    i32 104, label %.loopexit2
  ]

; <label>:2577:                                   ; preds = %.lr.ph42.862
  %2578 = load i32, i32* @verbosity, align 4
  %2579 = add nsw i32 %2578, 1
  store i32 %2579, i32* @verbosity, align 4
  br label %2598

; <label>:2580:                                   ; preds = %.lr.ph42.862, %.lr.ph42.862
  call void @license()
  br label %2598

; <label>:2581:                                   ; preds = %.lr.ph42.862
  store i32 9, i32* @blockSize100k, align 4
  br label %2598

; <label>:2582:                                   ; preds = %.lr.ph42.862
  store i32 8, i32* @blockSize100k, align 4
  br label %2598

; <label>:2583:                                   ; preds = %.lr.ph42.862
  store i32 7, i32* @blockSize100k, align 4
  br label %2598

; <label>:2584:                                   ; preds = %.lr.ph42.862
  store i32 6, i32* @blockSize100k, align 4
  br label %2598

; <label>:2585:                                   ; preds = %.lr.ph42.862
  store i32 5, i32* @blockSize100k, align 4
  br label %2598

; <label>:2586:                                   ; preds = %.lr.ph42.862
  store i32 4, i32* @blockSize100k, align 4
  br label %2598

; <label>:2587:                                   ; preds = %.lr.ph42.862
  store i32 3, i32* @blockSize100k, align 4
  br label %2598

; <label>:2588:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @blockSize100k, align 4
  br label %2598

; <label>:2589:                                   ; preds = %.lr.ph42.862
  store i32 1, i32* @blockSize100k, align 4
  br label %2598

; <label>:2590:                                   ; preds = %.lr.ph42.862
  store i8 0, i8* @noisy, align 1
  br label %2598

; <label>:2591:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @smallMode, align 1
  br label %2598

; <label>:2592:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @keepInputFiles, align 1
  br label %2598

; <label>:2593:                                   ; preds = %.lr.ph42.862
  store i32 3, i32* @opMode, align 4
  br label %2598

; <label>:2594:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @forceOverwrite, align 1
  br label %2598

; <label>:2595:                                   ; preds = %.lr.ph42.862
  store i32 1, i32* @opMode, align 4
  br label %2598

; <label>:2596:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @opMode, align 4
  br label %2598

; <label>:2597:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @srcMode, align 4
  br label %2598

; <label>:2598:                                   ; preds = %2597, %2596, %2595, %2594, %2593, %2592, %2591, %2590, %2589, %2588, %2587, %2586, %2585, %2584, %2583, %2582, %2581, %2580, %2577
  call void @__loop_iteration_test___4()
  %2599 = load i8*, i8** %157, align 8
  %scevgep2.863 = getelementptr i8, i8* %2599, i64 2
  %scevgep3.864 = getelementptr i8, i8* %scevgep2.863, i64 8
  %2600 = load i8, i8* %scevgep3.864, align 1
  %2601 = sext i8 %2600 to i32
  %2602 = icmp ne i32 %2601, 0
  br i1 %2602, label %.lr.ph42.969, label %._crit_edge43.loopexit

.lr.ph42.969:                                     ; preds = %2598
  call void @unroll_loop(i32 4)
  %2603 = load i8*, i8** %163, align 8
  %scevgep.967 = getelementptr i8, i8* %2603, i64 1
  %scevgep1.968 = getelementptr i8, i8* %scevgep.967, i64 9
  %2604 = load i8, i8* %scevgep1.968, align 1
  %2605 = sext i8 %2604 to i32
  switch i32 %2605, label %.loopexit1 [
    i32 99, label %2626
    i32 100, label %2625
    i32 122, label %2624
    i32 102, label %2623
    i32 116, label %2622
    i32 107, label %2621
    i32 115, label %2620
    i32 113, label %2619
    i32 49, label %2618
    i32 50, label %2617
    i32 51, label %2616
    i32 52, label %2615
    i32 53, label %2614
    i32 54, label %2613
    i32 55, label %2612
    i32 56, label %2611
    i32 57, label %2610
    i32 86, label %2609
    i32 76, label %2609
    i32 118, label %2606
    i32 104, label %.loopexit2
  ]

; <label>:2606:                                   ; preds = %.lr.ph42.969
  %2607 = load i32, i32* @verbosity, align 4
  %2608 = add nsw i32 %2607, 1
  store i32 %2608, i32* @verbosity, align 4
  br label %2627

; <label>:2609:                                   ; preds = %.lr.ph42.969, %.lr.ph42.969
  call void @license()
  br label %2627

; <label>:2610:                                   ; preds = %.lr.ph42.969
  store i32 9, i32* @blockSize100k, align 4
  br label %2627

; <label>:2611:                                   ; preds = %.lr.ph42.969
  store i32 8, i32* @blockSize100k, align 4
  br label %2627

; <label>:2612:                                   ; preds = %.lr.ph42.969
  store i32 7, i32* @blockSize100k, align 4
  br label %2627

; <label>:2613:                                   ; preds = %.lr.ph42.969
  store i32 6, i32* @blockSize100k, align 4
  br label %2627

; <label>:2614:                                   ; preds = %.lr.ph42.969
  store i32 5, i32* @blockSize100k, align 4
  br label %2627

; <label>:2615:                                   ; preds = %.lr.ph42.969
  store i32 4, i32* @blockSize100k, align 4
  br label %2627

; <label>:2616:                                   ; preds = %.lr.ph42.969
  store i32 3, i32* @blockSize100k, align 4
  br label %2627

; <label>:2617:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @blockSize100k, align 4
  br label %2627

; <label>:2618:                                   ; preds = %.lr.ph42.969
  store i32 1, i32* @blockSize100k, align 4
  br label %2627

; <label>:2619:                                   ; preds = %.lr.ph42.969
  store i8 0, i8* @noisy, align 1
  br label %2627

; <label>:2620:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @smallMode, align 1
  br label %2627

; <label>:2621:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @keepInputFiles, align 1
  br label %2627

; <label>:2622:                                   ; preds = %.lr.ph42.969
  store i32 3, i32* @opMode, align 4
  br label %2627

; <label>:2623:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @forceOverwrite, align 1
  br label %2627

; <label>:2624:                                   ; preds = %.lr.ph42.969
  store i32 1, i32* @opMode, align 4
  br label %2627

; <label>:2625:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @opMode, align 4
  br label %2627

; <label>:2626:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @srcMode, align 4
  br label %2627

; <label>:2627:                                   ; preds = %2626, %2625, %2624, %2623, %2622, %2621, %2620, %2619, %2618, %2617, %2616, %2615, %2614, %2613, %2612, %2611, %2610, %2609, %2606
  call void @__loop_iteration_test___4()
  %2628 = load i8*, i8** %157, align 8
  %scevgep2.970 = getelementptr i8, i8* %2628, i64 2
  %scevgep3.971 = getelementptr i8, i8* %scevgep2.970, i64 9
  %2629 = load i8, i8* %scevgep3.971, align 1
  %2630 = sext i8 %2629 to i32
  %2631 = icmp ne i32 %2630, 0
  br i1 %2631, label %.lr.ph42.1076, label %._crit_edge43.loopexit

.lr.ph42.1076:                                    ; preds = %2627
  call void @unroll_loop(i32 4)
  %2632 = load i8*, i8** %163, align 8
  %scevgep.1074 = getelementptr i8, i8* %2632, i64 1
  %scevgep1.1075 = getelementptr i8, i8* %scevgep.1074, i64 10
  %2633 = load i8, i8* %scevgep1.1075, align 1
  %2634 = sext i8 %2633 to i32
  switch i32 %2634, label %.loopexit1 [
    i32 99, label %2655
    i32 100, label %2654
    i32 122, label %2653
    i32 102, label %2652
    i32 116, label %2651
    i32 107, label %2650
    i32 115, label %2649
    i32 113, label %2648
    i32 49, label %2647
    i32 50, label %2646
    i32 51, label %2645
    i32 52, label %2644
    i32 53, label %2643
    i32 54, label %2642
    i32 55, label %2641
    i32 56, label %2640
    i32 57, label %2639
    i32 86, label %2638
    i32 76, label %2638
    i32 118, label %2635
    i32 104, label %.loopexit2
  ]

; <label>:2635:                                   ; preds = %.lr.ph42.1076
  %2636 = load i32, i32* @verbosity, align 4
  %2637 = add nsw i32 %2636, 1
  store i32 %2637, i32* @verbosity, align 4
  br label %2656

; <label>:2638:                                   ; preds = %.lr.ph42.1076, %.lr.ph42.1076
  call void @license()
  br label %2656

; <label>:2639:                                   ; preds = %.lr.ph42.1076
  store i32 9, i32* @blockSize100k, align 4
  br label %2656

; <label>:2640:                                   ; preds = %.lr.ph42.1076
  store i32 8, i32* @blockSize100k, align 4
  br label %2656

; <label>:2641:                                   ; preds = %.lr.ph42.1076
  store i32 7, i32* @blockSize100k, align 4
  br label %2656

; <label>:2642:                                   ; preds = %.lr.ph42.1076
  store i32 6, i32* @blockSize100k, align 4
  br label %2656

; <label>:2643:                                   ; preds = %.lr.ph42.1076
  store i32 5, i32* @blockSize100k, align 4
  br label %2656

; <label>:2644:                                   ; preds = %.lr.ph42.1076
  store i32 4, i32* @blockSize100k, align 4
  br label %2656

; <label>:2645:                                   ; preds = %.lr.ph42.1076
  store i32 3, i32* @blockSize100k, align 4
  br label %2656

; <label>:2646:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @blockSize100k, align 4
  br label %2656

; <label>:2647:                                   ; preds = %.lr.ph42.1076
  store i32 1, i32* @blockSize100k, align 4
  br label %2656

; <label>:2648:                                   ; preds = %.lr.ph42.1076
  store i8 0, i8* @noisy, align 1
  br label %2656

; <label>:2649:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @smallMode, align 1
  br label %2656

; <label>:2650:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @keepInputFiles, align 1
  br label %2656

; <label>:2651:                                   ; preds = %.lr.ph42.1076
  store i32 3, i32* @opMode, align 4
  br label %2656

; <label>:2652:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @forceOverwrite, align 1
  br label %2656

; <label>:2653:                                   ; preds = %.lr.ph42.1076
  store i32 1, i32* @opMode, align 4
  br label %2656

; <label>:2654:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @opMode, align 4
  br label %2656

; <label>:2655:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @srcMode, align 4
  br label %2656

; <label>:2656:                                   ; preds = %2655, %2654, %2653, %2652, %2651, %2650, %2649, %2648, %2647, %2646, %2645, %2644, %2643, %2642, %2641, %2640, %2639, %2638, %2635
  call void @__loop_iteration_test___4()
  %2657 = load i8*, i8** %157, align 8
  %scevgep2.1077 = getelementptr i8, i8* %2657, i64 2
  %scevgep3.1078 = getelementptr i8, i8* %scevgep2.1077, i64 10
  %2658 = load i8, i8* %scevgep3.1078, align 1
  %2659 = sext i8 %2658 to i32
  %2660 = icmp ne i32 %2659, 0
  br i1 %2660, label %.lr.ph42.1183, label %._crit_edge43.loopexit

.lr.ph42.1183:                                    ; preds = %2656
  call void @unroll_loop(i32 4)
  %2661 = load i8*, i8** %163, align 8
  %scevgep.1181 = getelementptr i8, i8* %2661, i64 1
  %scevgep1.1182 = getelementptr i8, i8* %scevgep.1181, i64 11
  %2662 = load i8, i8* %scevgep1.1182, align 1
  %2663 = sext i8 %2662 to i32
  switch i32 %2663, label %.loopexit1 [
    i32 99, label %2684
    i32 100, label %2683
    i32 122, label %2682
    i32 102, label %2681
    i32 116, label %2680
    i32 107, label %2679
    i32 115, label %2678
    i32 113, label %2677
    i32 49, label %2676
    i32 50, label %2675
    i32 51, label %2674
    i32 52, label %2673
    i32 53, label %2672
    i32 54, label %2671
    i32 55, label %2670
    i32 56, label %2669
    i32 57, label %2668
    i32 86, label %2667
    i32 76, label %2667
    i32 118, label %2664
    i32 104, label %.loopexit2
  ]

; <label>:2664:                                   ; preds = %.lr.ph42.1183
  %2665 = load i32, i32* @verbosity, align 4
  %2666 = add nsw i32 %2665, 1
  store i32 %2666, i32* @verbosity, align 4
  br label %2685

; <label>:2667:                                   ; preds = %.lr.ph42.1183, %.lr.ph42.1183
  call void @license()
  br label %2685

; <label>:2668:                                   ; preds = %.lr.ph42.1183
  store i32 9, i32* @blockSize100k, align 4
  br label %2685

; <label>:2669:                                   ; preds = %.lr.ph42.1183
  store i32 8, i32* @blockSize100k, align 4
  br label %2685

; <label>:2670:                                   ; preds = %.lr.ph42.1183
  store i32 7, i32* @blockSize100k, align 4
  br label %2685

; <label>:2671:                                   ; preds = %.lr.ph42.1183
  store i32 6, i32* @blockSize100k, align 4
  br label %2685

; <label>:2672:                                   ; preds = %.lr.ph42.1183
  store i32 5, i32* @blockSize100k, align 4
  br label %2685

; <label>:2673:                                   ; preds = %.lr.ph42.1183
  store i32 4, i32* @blockSize100k, align 4
  br label %2685

; <label>:2674:                                   ; preds = %.lr.ph42.1183
  store i32 3, i32* @blockSize100k, align 4
  br label %2685

; <label>:2675:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @blockSize100k, align 4
  br label %2685

; <label>:2676:                                   ; preds = %.lr.ph42.1183
  store i32 1, i32* @blockSize100k, align 4
  br label %2685

; <label>:2677:                                   ; preds = %.lr.ph42.1183
  store i8 0, i8* @noisy, align 1
  br label %2685

; <label>:2678:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @smallMode, align 1
  br label %2685

; <label>:2679:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @keepInputFiles, align 1
  br label %2685

; <label>:2680:                                   ; preds = %.lr.ph42.1183
  store i32 3, i32* @opMode, align 4
  br label %2685

; <label>:2681:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @forceOverwrite, align 1
  br label %2685

; <label>:2682:                                   ; preds = %.lr.ph42.1183
  store i32 1, i32* @opMode, align 4
  br label %2685

; <label>:2683:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @opMode, align 4
  br label %2685

; <label>:2684:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @srcMode, align 4
  br label %2685

; <label>:2685:                                   ; preds = %2684, %2683, %2682, %2681, %2680, %2679, %2678, %2677, %2676, %2675, %2674, %2673, %2672, %2671, %2670, %2669, %2668, %2667, %2664
  call void @__loop_iteration_test___4()
  %2686 = load i8*, i8** %157, align 8
  %scevgep2.1184 = getelementptr i8, i8* %2686, i64 2
  %scevgep3.1185 = getelementptr i8, i8* %scevgep2.1184, i64 11
  %2687 = load i8, i8* %scevgep3.1185, align 1
  %2688 = sext i8 %2687 to i32
  %2689 = icmp ne i32 %2688, 0
  br i1 %2689, label %.lr.ph42.1290, label %._crit_edge43.loopexit

.lr.ph42.1290:                                    ; preds = %2685
  call void @unroll_loop(i32 4)
  %2690 = load i8*, i8** %163, align 8
  %scevgep.1288 = getelementptr i8, i8* %2690, i64 1
  %scevgep1.1289 = getelementptr i8, i8* %scevgep.1288, i64 12
  %2691 = load i8, i8* %scevgep1.1289, align 1
  %2692 = sext i8 %2691 to i32
  switch i32 %2692, label %.loopexit1 [
    i32 99, label %2713
    i32 100, label %2712
    i32 122, label %2711
    i32 102, label %2710
    i32 116, label %2709
    i32 107, label %2708
    i32 115, label %2707
    i32 113, label %2706
    i32 49, label %2705
    i32 50, label %2704
    i32 51, label %2703
    i32 52, label %2702
    i32 53, label %2701
    i32 54, label %2700
    i32 55, label %2699
    i32 56, label %2698
    i32 57, label %2697
    i32 86, label %2696
    i32 76, label %2696
    i32 118, label %2693
    i32 104, label %.loopexit2
  ]

; <label>:2693:                                   ; preds = %.lr.ph42.1290
  %2694 = load i32, i32* @verbosity, align 4
  %2695 = add nsw i32 %2694, 1
  store i32 %2695, i32* @verbosity, align 4
  br label %2714

; <label>:2696:                                   ; preds = %.lr.ph42.1290, %.lr.ph42.1290
  call void @license()
  br label %2714

; <label>:2697:                                   ; preds = %.lr.ph42.1290
  store i32 9, i32* @blockSize100k, align 4
  br label %2714

; <label>:2698:                                   ; preds = %.lr.ph42.1290
  store i32 8, i32* @blockSize100k, align 4
  br label %2714

; <label>:2699:                                   ; preds = %.lr.ph42.1290
  store i32 7, i32* @blockSize100k, align 4
  br label %2714

; <label>:2700:                                   ; preds = %.lr.ph42.1290
  store i32 6, i32* @blockSize100k, align 4
  br label %2714

; <label>:2701:                                   ; preds = %.lr.ph42.1290
  store i32 5, i32* @blockSize100k, align 4
  br label %2714

; <label>:2702:                                   ; preds = %.lr.ph42.1290
  store i32 4, i32* @blockSize100k, align 4
  br label %2714

; <label>:2703:                                   ; preds = %.lr.ph42.1290
  store i32 3, i32* @blockSize100k, align 4
  br label %2714

; <label>:2704:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @blockSize100k, align 4
  br label %2714

; <label>:2705:                                   ; preds = %.lr.ph42.1290
  store i32 1, i32* @blockSize100k, align 4
  br label %2714

; <label>:2706:                                   ; preds = %.lr.ph42.1290
  store i8 0, i8* @noisy, align 1
  br label %2714

; <label>:2707:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @smallMode, align 1
  br label %2714

; <label>:2708:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @keepInputFiles, align 1
  br label %2714

; <label>:2709:                                   ; preds = %.lr.ph42.1290
  store i32 3, i32* @opMode, align 4
  br label %2714

; <label>:2710:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @forceOverwrite, align 1
  br label %2714

; <label>:2711:                                   ; preds = %.lr.ph42.1290
  store i32 1, i32* @opMode, align 4
  br label %2714

; <label>:2712:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @opMode, align 4
  br label %2714

; <label>:2713:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @srcMode, align 4
  br label %2714

; <label>:2714:                                   ; preds = %2713, %2712, %2711, %2710, %2709, %2708, %2707, %2706, %2705, %2704, %2703, %2702, %2701, %2700, %2699, %2698, %2697, %2696, %2693
  call void @__loop_iteration_test___4()
  %2715 = load i8*, i8** %157, align 8
  %scevgep2.1291 = getelementptr i8, i8* %2715, i64 2
  %scevgep3.1292 = getelementptr i8, i8* %scevgep2.1291, i64 12
  %2716 = load i8, i8* %scevgep3.1292, align 1
  %2717 = sext i8 %2716 to i32
  %2718 = icmp ne i32 %2717, 0
  br i1 %2718, label %.lr.ph42.1397, label %._crit_edge43.loopexit

.lr.ph42.1397:                                    ; preds = %2714
  call void @unroll_loop(i32 4)
  %2719 = load i8*, i8** %163, align 8
  %scevgep.1395 = getelementptr i8, i8* %2719, i64 1
  %scevgep1.1396 = getelementptr i8, i8* %scevgep.1395, i64 13
  %2720 = load i8, i8* %scevgep1.1396, align 1
  %2721 = sext i8 %2720 to i32
  switch i32 %2721, label %.loopexit1 [
    i32 99, label %2742
    i32 100, label %2741
    i32 122, label %2740
    i32 102, label %2739
    i32 116, label %2738
    i32 107, label %2737
    i32 115, label %2736
    i32 113, label %2735
    i32 49, label %2734
    i32 50, label %2733
    i32 51, label %2732
    i32 52, label %2731
    i32 53, label %2730
    i32 54, label %2729
    i32 55, label %2728
    i32 56, label %2727
    i32 57, label %2726
    i32 86, label %2725
    i32 76, label %2725
    i32 118, label %2722
    i32 104, label %.loopexit2
  ]

; <label>:2722:                                   ; preds = %.lr.ph42.1397
  %2723 = load i32, i32* @verbosity, align 4
  %2724 = add nsw i32 %2723, 1
  store i32 %2724, i32* @verbosity, align 4
  br label %2743

; <label>:2725:                                   ; preds = %.lr.ph42.1397, %.lr.ph42.1397
  call void @license()
  br label %2743

; <label>:2726:                                   ; preds = %.lr.ph42.1397
  store i32 9, i32* @blockSize100k, align 4
  br label %2743

; <label>:2727:                                   ; preds = %.lr.ph42.1397
  store i32 8, i32* @blockSize100k, align 4
  br label %2743

; <label>:2728:                                   ; preds = %.lr.ph42.1397
  store i32 7, i32* @blockSize100k, align 4
  br label %2743

; <label>:2729:                                   ; preds = %.lr.ph42.1397
  store i32 6, i32* @blockSize100k, align 4
  br label %2743

; <label>:2730:                                   ; preds = %.lr.ph42.1397
  store i32 5, i32* @blockSize100k, align 4
  br label %2743

; <label>:2731:                                   ; preds = %.lr.ph42.1397
  store i32 4, i32* @blockSize100k, align 4
  br label %2743

; <label>:2732:                                   ; preds = %.lr.ph42.1397
  store i32 3, i32* @blockSize100k, align 4
  br label %2743

; <label>:2733:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @blockSize100k, align 4
  br label %2743

; <label>:2734:                                   ; preds = %.lr.ph42.1397
  store i32 1, i32* @blockSize100k, align 4
  br label %2743

; <label>:2735:                                   ; preds = %.lr.ph42.1397
  store i8 0, i8* @noisy, align 1
  br label %2743

; <label>:2736:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @smallMode, align 1
  br label %2743

; <label>:2737:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @keepInputFiles, align 1
  br label %2743

; <label>:2738:                                   ; preds = %.lr.ph42.1397
  store i32 3, i32* @opMode, align 4
  br label %2743

; <label>:2739:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @forceOverwrite, align 1
  br label %2743

; <label>:2740:                                   ; preds = %.lr.ph42.1397
  store i32 1, i32* @opMode, align 4
  br label %2743

; <label>:2741:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @opMode, align 4
  br label %2743

; <label>:2742:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @srcMode, align 4
  br label %2743

; <label>:2743:                                   ; preds = %2742, %2741, %2740, %2739, %2738, %2737, %2736, %2735, %2734, %2733, %2732, %2731, %2730, %2729, %2728, %2727, %2726, %2725, %2722
  call void @__loop_iteration_test___4()
  %2744 = load i8*, i8** %157, align 8
  %scevgep2.1398 = getelementptr i8, i8* %2744, i64 2
  %scevgep3.1399 = getelementptr i8, i8* %scevgep2.1398, i64 13
  %2745 = load i8, i8* %scevgep3.1399, align 1
  %2746 = sext i8 %2745 to i32
  %2747 = icmp ne i32 %2746, 0
  br i1 %2747, label %.lr.ph42.14104, label %._crit_edge43.loopexit

.lr.ph42.14104:                                   ; preds = %2743
  call void @unroll_loop(i32 4)
  %2748 = load i8*, i8** %163, align 8
  %scevgep.14102 = getelementptr i8, i8* %2748, i64 1
  %scevgep1.14103 = getelementptr i8, i8* %scevgep.14102, i64 14
  %2749 = load i8, i8* %scevgep1.14103, align 1
  %2750 = sext i8 %2749 to i32
  switch i32 %2750, label %.loopexit1 [
    i32 99, label %2771
    i32 100, label %2770
    i32 122, label %2769
    i32 102, label %2768
    i32 116, label %2767
    i32 107, label %2766
    i32 115, label %2765
    i32 113, label %2764
    i32 49, label %2763
    i32 50, label %2762
    i32 51, label %2761
    i32 52, label %2760
    i32 53, label %2759
    i32 54, label %2758
    i32 55, label %2757
    i32 56, label %2756
    i32 57, label %2755
    i32 86, label %2754
    i32 76, label %2754
    i32 118, label %2751
    i32 104, label %.loopexit2
  ]

; <label>:2751:                                   ; preds = %.lr.ph42.14104
  %2752 = load i32, i32* @verbosity, align 4
  %2753 = add nsw i32 %2752, 1
  store i32 %2753, i32* @verbosity, align 4
  br label %2772

; <label>:2754:                                   ; preds = %.lr.ph42.14104, %.lr.ph42.14104
  call void @license()
  br label %2772

; <label>:2755:                                   ; preds = %.lr.ph42.14104
  store i32 9, i32* @blockSize100k, align 4
  br label %2772

; <label>:2756:                                   ; preds = %.lr.ph42.14104
  store i32 8, i32* @blockSize100k, align 4
  br label %2772

; <label>:2757:                                   ; preds = %.lr.ph42.14104
  store i32 7, i32* @blockSize100k, align 4
  br label %2772

; <label>:2758:                                   ; preds = %.lr.ph42.14104
  store i32 6, i32* @blockSize100k, align 4
  br label %2772

; <label>:2759:                                   ; preds = %.lr.ph42.14104
  store i32 5, i32* @blockSize100k, align 4
  br label %2772

; <label>:2760:                                   ; preds = %.lr.ph42.14104
  store i32 4, i32* @blockSize100k, align 4
  br label %2772

; <label>:2761:                                   ; preds = %.lr.ph42.14104
  store i32 3, i32* @blockSize100k, align 4
  br label %2772

; <label>:2762:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @blockSize100k, align 4
  br label %2772

; <label>:2763:                                   ; preds = %.lr.ph42.14104
  store i32 1, i32* @blockSize100k, align 4
  br label %2772

; <label>:2764:                                   ; preds = %.lr.ph42.14104
  store i8 0, i8* @noisy, align 1
  br label %2772

; <label>:2765:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @smallMode, align 1
  br label %2772

; <label>:2766:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @keepInputFiles, align 1
  br label %2772

; <label>:2767:                                   ; preds = %.lr.ph42.14104
  store i32 3, i32* @opMode, align 4
  br label %2772

; <label>:2768:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @forceOverwrite, align 1
  br label %2772

; <label>:2769:                                   ; preds = %.lr.ph42.14104
  store i32 1, i32* @opMode, align 4
  br label %2772

; <label>:2770:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @opMode, align 4
  br label %2772

; <label>:2771:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @srcMode, align 4
  br label %2772

; <label>:2772:                                   ; preds = %2771, %2770, %2769, %2768, %2767, %2766, %2765, %2764, %2763, %2762, %2761, %2760, %2759, %2758, %2757, %2756, %2755, %2754, %2751
  call void @__loop_iteration_test___4()
  %2773 = load i8*, i8** %157, align 8
  %scevgep2.14105 = getelementptr i8, i8* %2773, i64 2
  %scevgep3.14106 = getelementptr i8, i8* %scevgep2.14105, i64 14
  %2774 = load i8, i8* %scevgep3.14106, align 1
  %2775 = sext i8 %2774 to i32
  %2776 = icmp ne i32 %2775, 0
  br i1 %2776, label %.lr.ph42.15111, label %._crit_edge43.loopexit

.lr.ph42.15111:                                   ; preds = %2772
  call void @unroll_loop(i32 4)
  %2777 = load i8*, i8** %163, align 8
  %scevgep.15109 = getelementptr i8, i8* %2777, i64 1
  %scevgep1.15110 = getelementptr i8, i8* %scevgep.15109, i64 15
  %2778 = load i8, i8* %scevgep1.15110, align 1
  %2779 = sext i8 %2778 to i32
  switch i32 %2779, label %.loopexit1 [
    i32 99, label %2800
    i32 100, label %2799
    i32 122, label %2798
    i32 102, label %2797
    i32 116, label %2796
    i32 107, label %2795
    i32 115, label %2794
    i32 113, label %2793
    i32 49, label %2792
    i32 50, label %2791
    i32 51, label %2790
    i32 52, label %2789
    i32 53, label %2788
    i32 54, label %2787
    i32 55, label %2786
    i32 56, label %2785
    i32 57, label %2784
    i32 86, label %2783
    i32 76, label %2783
    i32 118, label %2780
    i32 104, label %.loopexit2
  ]

; <label>:2780:                                   ; preds = %.lr.ph42.15111
  %2781 = load i32, i32* @verbosity, align 4
  %2782 = add nsw i32 %2781, 1
  store i32 %2782, i32* @verbosity, align 4
  br label %2801

; <label>:2783:                                   ; preds = %.lr.ph42.15111, %.lr.ph42.15111
  call void @license()
  br label %2801

; <label>:2784:                                   ; preds = %.lr.ph42.15111
  store i32 9, i32* @blockSize100k, align 4
  br label %2801

; <label>:2785:                                   ; preds = %.lr.ph42.15111
  store i32 8, i32* @blockSize100k, align 4
  br label %2801

; <label>:2786:                                   ; preds = %.lr.ph42.15111
  store i32 7, i32* @blockSize100k, align 4
  br label %2801

; <label>:2787:                                   ; preds = %.lr.ph42.15111
  store i32 6, i32* @blockSize100k, align 4
  br label %2801

; <label>:2788:                                   ; preds = %.lr.ph42.15111
  store i32 5, i32* @blockSize100k, align 4
  br label %2801

; <label>:2789:                                   ; preds = %.lr.ph42.15111
  store i32 4, i32* @blockSize100k, align 4
  br label %2801

; <label>:2790:                                   ; preds = %.lr.ph42.15111
  store i32 3, i32* @blockSize100k, align 4
  br label %2801

; <label>:2791:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @blockSize100k, align 4
  br label %2801

; <label>:2792:                                   ; preds = %.lr.ph42.15111
  store i32 1, i32* @blockSize100k, align 4
  br label %2801

; <label>:2793:                                   ; preds = %.lr.ph42.15111
  store i8 0, i8* @noisy, align 1
  br label %2801

; <label>:2794:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @smallMode, align 1
  br label %2801

; <label>:2795:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @keepInputFiles, align 1
  br label %2801

; <label>:2796:                                   ; preds = %.lr.ph42.15111
  store i32 3, i32* @opMode, align 4
  br label %2801

; <label>:2797:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @forceOverwrite, align 1
  br label %2801

; <label>:2798:                                   ; preds = %.lr.ph42.15111
  store i32 1, i32* @opMode, align 4
  br label %2801

; <label>:2799:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @opMode, align 4
  br label %2801

; <label>:2800:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @srcMode, align 4
  br label %2801

; <label>:2801:                                   ; preds = %2800, %2799, %2798, %2797, %2796, %2795, %2794, %2793, %2792, %2791, %2790, %2789, %2788, %2787, %2786, %2785, %2784, %2783, %2780
  call void @__loop_iteration_test___4()
  %2802 = load i8*, i8** %157, align 8
  %scevgep2.15112 = getelementptr i8, i8* %2802, i64 2
  %scevgep3.15113 = getelementptr i8, i8* %scevgep2.15112, i64 15
  %2803 = load i8, i8* %scevgep3.15113, align 1
  %2804 = sext i8 %2803 to i32
  %2805 = icmp ne i32 %2804, 0
  br i1 %2805, label %.lr.ph42.16118, label %._crit_edge43.loopexit

.lr.ph42.16118:                                   ; preds = %2801
  call void @unroll_loop(i32 4)
  %2806 = load i8*, i8** %163, align 8
  %scevgep.16116 = getelementptr i8, i8* %2806, i64 1
  %scevgep1.16117 = getelementptr i8, i8* %scevgep.16116, i64 16
  %2807 = load i8, i8* %scevgep1.16117, align 1
  %2808 = sext i8 %2807 to i32
  switch i32 %2808, label %.loopexit1 [
    i32 99, label %2829
    i32 100, label %2828
    i32 122, label %2827
    i32 102, label %2826
    i32 116, label %2825
    i32 107, label %2824
    i32 115, label %2823
    i32 113, label %2822
    i32 49, label %2821
    i32 50, label %2820
    i32 51, label %2819
    i32 52, label %2818
    i32 53, label %2817
    i32 54, label %2816
    i32 55, label %2815
    i32 56, label %2814
    i32 57, label %2813
    i32 86, label %2812
    i32 76, label %2812
    i32 118, label %2809
    i32 104, label %.loopexit2
  ]

; <label>:2809:                                   ; preds = %.lr.ph42.16118
  %2810 = load i32, i32* @verbosity, align 4
  %2811 = add nsw i32 %2810, 1
  store i32 %2811, i32* @verbosity, align 4
  br label %2830

; <label>:2812:                                   ; preds = %.lr.ph42.16118, %.lr.ph42.16118
  call void @license()
  br label %2830

; <label>:2813:                                   ; preds = %.lr.ph42.16118
  store i32 9, i32* @blockSize100k, align 4
  br label %2830

; <label>:2814:                                   ; preds = %.lr.ph42.16118
  store i32 8, i32* @blockSize100k, align 4
  br label %2830

; <label>:2815:                                   ; preds = %.lr.ph42.16118
  store i32 7, i32* @blockSize100k, align 4
  br label %2830

; <label>:2816:                                   ; preds = %.lr.ph42.16118
  store i32 6, i32* @blockSize100k, align 4
  br label %2830

; <label>:2817:                                   ; preds = %.lr.ph42.16118
  store i32 5, i32* @blockSize100k, align 4
  br label %2830

; <label>:2818:                                   ; preds = %.lr.ph42.16118
  store i32 4, i32* @blockSize100k, align 4
  br label %2830

; <label>:2819:                                   ; preds = %.lr.ph42.16118
  store i32 3, i32* @blockSize100k, align 4
  br label %2830

; <label>:2820:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @blockSize100k, align 4
  br label %2830

; <label>:2821:                                   ; preds = %.lr.ph42.16118
  store i32 1, i32* @blockSize100k, align 4
  br label %2830

; <label>:2822:                                   ; preds = %.lr.ph42.16118
  store i8 0, i8* @noisy, align 1
  br label %2830

; <label>:2823:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @smallMode, align 1
  br label %2830

; <label>:2824:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @keepInputFiles, align 1
  br label %2830

; <label>:2825:                                   ; preds = %.lr.ph42.16118
  store i32 3, i32* @opMode, align 4
  br label %2830

; <label>:2826:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @forceOverwrite, align 1
  br label %2830

; <label>:2827:                                   ; preds = %.lr.ph42.16118
  store i32 1, i32* @opMode, align 4
  br label %2830

; <label>:2828:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @opMode, align 4
  br label %2830

; <label>:2829:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @srcMode, align 4
  br label %2830

; <label>:2830:                                   ; preds = %2829, %2828, %2827, %2826, %2825, %2824, %2823, %2822, %2821, %2820, %2819, %2818, %2817, %2816, %2815, %2814, %2813, %2812, %2809
  call void @__loop_iteration_test___4()
  %2831 = load i8*, i8** %157, align 8
  %scevgep2.16119 = getelementptr i8, i8* %2831, i64 2
  %scevgep3.16120 = getelementptr i8, i8* %scevgep2.16119, i64 16
  %2832 = load i8, i8* %scevgep3.16120, align 1
  %2833 = sext i8 %2832 to i32
  %2834 = icmp ne i32 %2833, 0
  br i1 %2834, label %.lr.ph42.17125, label %._crit_edge43.loopexit

.lr.ph42.17125:                                   ; preds = %2830
  call void @unroll_loop(i32 4)
  %2835 = load i8*, i8** %163, align 8
  %scevgep.17123 = getelementptr i8, i8* %2835, i64 1
  %scevgep1.17124 = getelementptr i8, i8* %scevgep.17123, i64 17
  %2836 = load i8, i8* %scevgep1.17124, align 1
  %2837 = sext i8 %2836 to i32
  switch i32 %2837, label %.loopexit1 [
    i32 99, label %2858
    i32 100, label %2857
    i32 122, label %2856
    i32 102, label %2855
    i32 116, label %2854
    i32 107, label %2853
    i32 115, label %2852
    i32 113, label %2851
    i32 49, label %2850
    i32 50, label %2849
    i32 51, label %2848
    i32 52, label %2847
    i32 53, label %2846
    i32 54, label %2845
    i32 55, label %2844
    i32 56, label %2843
    i32 57, label %2842
    i32 86, label %2841
    i32 76, label %2841
    i32 118, label %2838
    i32 104, label %.loopexit2
  ]

; <label>:2838:                                   ; preds = %.lr.ph42.17125
  %2839 = load i32, i32* @verbosity, align 4
  %2840 = add nsw i32 %2839, 1
  store i32 %2840, i32* @verbosity, align 4
  br label %2859

; <label>:2841:                                   ; preds = %.lr.ph42.17125, %.lr.ph42.17125
  call void @license()
  br label %2859

; <label>:2842:                                   ; preds = %.lr.ph42.17125
  store i32 9, i32* @blockSize100k, align 4
  br label %2859

; <label>:2843:                                   ; preds = %.lr.ph42.17125
  store i32 8, i32* @blockSize100k, align 4
  br label %2859

; <label>:2844:                                   ; preds = %.lr.ph42.17125
  store i32 7, i32* @blockSize100k, align 4
  br label %2859

; <label>:2845:                                   ; preds = %.lr.ph42.17125
  store i32 6, i32* @blockSize100k, align 4
  br label %2859

; <label>:2846:                                   ; preds = %.lr.ph42.17125
  store i32 5, i32* @blockSize100k, align 4
  br label %2859

; <label>:2847:                                   ; preds = %.lr.ph42.17125
  store i32 4, i32* @blockSize100k, align 4
  br label %2859

; <label>:2848:                                   ; preds = %.lr.ph42.17125
  store i32 3, i32* @blockSize100k, align 4
  br label %2859

; <label>:2849:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @blockSize100k, align 4
  br label %2859

; <label>:2850:                                   ; preds = %.lr.ph42.17125
  store i32 1, i32* @blockSize100k, align 4
  br label %2859

; <label>:2851:                                   ; preds = %.lr.ph42.17125
  store i8 0, i8* @noisy, align 1
  br label %2859

; <label>:2852:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @smallMode, align 1
  br label %2859

; <label>:2853:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @keepInputFiles, align 1
  br label %2859

; <label>:2854:                                   ; preds = %.lr.ph42.17125
  store i32 3, i32* @opMode, align 4
  br label %2859

; <label>:2855:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @forceOverwrite, align 1
  br label %2859

; <label>:2856:                                   ; preds = %.lr.ph42.17125
  store i32 1, i32* @opMode, align 4
  br label %2859

; <label>:2857:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @opMode, align 4
  br label %2859

; <label>:2858:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @srcMode, align 4
  br label %2859

; <label>:2859:                                   ; preds = %2858, %2857, %2856, %2855, %2854, %2853, %2852, %2851, %2850, %2849, %2848, %2847, %2846, %2845, %2844, %2843, %2842, %2841, %2838
  call void @__loop_iteration_test___4()
  %2860 = load i8*, i8** %157, align 8
  %scevgep2.17126 = getelementptr i8, i8* %2860, i64 2
  %scevgep3.17127 = getelementptr i8, i8* %scevgep2.17126, i64 17
  %2861 = load i8, i8* %scevgep3.17127, align 1
  %2862 = sext i8 %2861 to i32
  %2863 = icmp ne i32 %2862, 0
  br i1 %2863, label %.lr.ph42.18132, label %._crit_edge43.loopexit

.lr.ph42.18132:                                   ; preds = %2859
  call void @unroll_loop(i32 4)
  %2864 = load i8*, i8** %163, align 8
  %scevgep.18130 = getelementptr i8, i8* %2864, i64 1
  %scevgep1.18131 = getelementptr i8, i8* %scevgep.18130, i64 18
  %2865 = load i8, i8* %scevgep1.18131, align 1
  %2866 = sext i8 %2865 to i32
  switch i32 %2866, label %.loopexit1 [
    i32 99, label %2887
    i32 100, label %2886
    i32 122, label %2885
    i32 102, label %2884
    i32 116, label %2883
    i32 107, label %2882
    i32 115, label %2881
    i32 113, label %2880
    i32 49, label %2879
    i32 50, label %2878
    i32 51, label %2877
    i32 52, label %2876
    i32 53, label %2875
    i32 54, label %2874
    i32 55, label %2873
    i32 56, label %2872
    i32 57, label %2871
    i32 86, label %2870
    i32 76, label %2870
    i32 118, label %2867
    i32 104, label %.loopexit2
  ]

; <label>:2867:                                   ; preds = %.lr.ph42.18132
  %2868 = load i32, i32* @verbosity, align 4
  %2869 = add nsw i32 %2868, 1
  store i32 %2869, i32* @verbosity, align 4
  br label %2888

; <label>:2870:                                   ; preds = %.lr.ph42.18132, %.lr.ph42.18132
  call void @license()
  br label %2888

; <label>:2871:                                   ; preds = %.lr.ph42.18132
  store i32 9, i32* @blockSize100k, align 4
  br label %2888

; <label>:2872:                                   ; preds = %.lr.ph42.18132
  store i32 8, i32* @blockSize100k, align 4
  br label %2888

; <label>:2873:                                   ; preds = %.lr.ph42.18132
  store i32 7, i32* @blockSize100k, align 4
  br label %2888

; <label>:2874:                                   ; preds = %.lr.ph42.18132
  store i32 6, i32* @blockSize100k, align 4
  br label %2888

; <label>:2875:                                   ; preds = %.lr.ph42.18132
  store i32 5, i32* @blockSize100k, align 4
  br label %2888

; <label>:2876:                                   ; preds = %.lr.ph42.18132
  store i32 4, i32* @blockSize100k, align 4
  br label %2888

; <label>:2877:                                   ; preds = %.lr.ph42.18132
  store i32 3, i32* @blockSize100k, align 4
  br label %2888

; <label>:2878:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @blockSize100k, align 4
  br label %2888

; <label>:2879:                                   ; preds = %.lr.ph42.18132
  store i32 1, i32* @blockSize100k, align 4
  br label %2888

; <label>:2880:                                   ; preds = %.lr.ph42.18132
  store i8 0, i8* @noisy, align 1
  br label %2888

; <label>:2881:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @smallMode, align 1
  br label %2888

; <label>:2882:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @keepInputFiles, align 1
  br label %2888

; <label>:2883:                                   ; preds = %.lr.ph42.18132
  store i32 3, i32* @opMode, align 4
  br label %2888

; <label>:2884:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @forceOverwrite, align 1
  br label %2888

; <label>:2885:                                   ; preds = %.lr.ph42.18132
  store i32 1, i32* @opMode, align 4
  br label %2888

; <label>:2886:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @opMode, align 4
  br label %2888

; <label>:2887:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @srcMode, align 4
  br label %2888

; <label>:2888:                                   ; preds = %2887, %2886, %2885, %2884, %2883, %2882, %2881, %2880, %2879, %2878, %2877, %2876, %2875, %2874, %2873, %2872, %2871, %2870, %2867
  call void @__loop_iteration_test___4()
  %2889 = load i8*, i8** %157, align 8
  %scevgep2.18133 = getelementptr i8, i8* %2889, i64 2
  %scevgep3.18134 = getelementptr i8, i8* %scevgep2.18133, i64 18
  %2890 = load i8, i8* %scevgep3.18134, align 1
  %2891 = sext i8 %2890 to i32
  %2892 = icmp ne i32 %2891, 0
  br i1 %2892, label %.lr.ph42.19139, label %._crit_edge43.loopexit

.lr.ph42.19139:                                   ; preds = %2888
  call void @unroll_loop(i32 4)
  %2893 = load i8*, i8** %163, align 8
  %scevgep.19137 = getelementptr i8, i8* %2893, i64 1
  %scevgep1.19138 = getelementptr i8, i8* %scevgep.19137, i64 19
  %2894 = load i8, i8* %scevgep1.19138, align 1
  %2895 = sext i8 %2894 to i32
  switch i32 %2895, label %.loopexit1 [
    i32 99, label %2916
    i32 100, label %2915
    i32 122, label %2914
    i32 102, label %2913
    i32 116, label %2912
    i32 107, label %2911
    i32 115, label %2910
    i32 113, label %2909
    i32 49, label %2908
    i32 50, label %2907
    i32 51, label %2906
    i32 52, label %2905
    i32 53, label %2904
    i32 54, label %2903
    i32 55, label %2902
    i32 56, label %2901
    i32 57, label %2900
    i32 86, label %2899
    i32 76, label %2899
    i32 118, label %2896
    i32 104, label %.loopexit2
  ]

; <label>:2896:                                   ; preds = %.lr.ph42.19139
  %2897 = load i32, i32* @verbosity, align 4
  %2898 = add nsw i32 %2897, 1
  store i32 %2898, i32* @verbosity, align 4
  br label %2917

; <label>:2899:                                   ; preds = %.lr.ph42.19139, %.lr.ph42.19139
  call void @license()
  br label %2917

; <label>:2900:                                   ; preds = %.lr.ph42.19139
  store i32 9, i32* @blockSize100k, align 4
  br label %2917

; <label>:2901:                                   ; preds = %.lr.ph42.19139
  store i32 8, i32* @blockSize100k, align 4
  br label %2917

; <label>:2902:                                   ; preds = %.lr.ph42.19139
  store i32 7, i32* @blockSize100k, align 4
  br label %2917

; <label>:2903:                                   ; preds = %.lr.ph42.19139
  store i32 6, i32* @blockSize100k, align 4
  br label %2917

; <label>:2904:                                   ; preds = %.lr.ph42.19139
  store i32 5, i32* @blockSize100k, align 4
  br label %2917

; <label>:2905:                                   ; preds = %.lr.ph42.19139
  store i32 4, i32* @blockSize100k, align 4
  br label %2917

; <label>:2906:                                   ; preds = %.lr.ph42.19139
  store i32 3, i32* @blockSize100k, align 4
  br label %2917

; <label>:2907:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @blockSize100k, align 4
  br label %2917

; <label>:2908:                                   ; preds = %.lr.ph42.19139
  store i32 1, i32* @blockSize100k, align 4
  br label %2917

; <label>:2909:                                   ; preds = %.lr.ph42.19139
  store i8 0, i8* @noisy, align 1
  br label %2917

; <label>:2910:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @smallMode, align 1
  br label %2917

; <label>:2911:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @keepInputFiles, align 1
  br label %2917

; <label>:2912:                                   ; preds = %.lr.ph42.19139
  store i32 3, i32* @opMode, align 4
  br label %2917

; <label>:2913:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @forceOverwrite, align 1
  br label %2917

; <label>:2914:                                   ; preds = %.lr.ph42.19139
  store i32 1, i32* @opMode, align 4
  br label %2917

; <label>:2915:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @opMode, align 4
  br label %2917

; <label>:2916:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @srcMode, align 4
  br label %2917

; <label>:2917:                                   ; preds = %2916, %2915, %2914, %2913, %2912, %2911, %2910, %2909, %2908, %2907, %2906, %2905, %2904, %2903, %2902, %2901, %2900, %2899, %2896
  call void @__loop_iteration_test___4()
  %2918 = load i8*, i8** %157, align 8
  %scevgep2.19140 = getelementptr i8, i8* %2918, i64 2
  %scevgep3.19141 = getelementptr i8, i8* %scevgep2.19140, i64 19
  %2919 = load i8, i8* %scevgep3.19141, align 1
  %2920 = sext i8 %2919 to i32
  br label %._crit_edge43.loopexit

.lr.ph39.1:                                       ; preds = %370
  call void @unroll_loop(i32 5)
  %2921 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2922 = load i8*, i8** %2921, align 8
  %2923 = getelementptr [10 x i8], [10 x i8]* @56, i64 0, i64 0
  %2924 = getelementptr [3 x i8], [3 x i8]* @57, i64 0, i64 0
  %2925 = call i32 @strcmp(i8* %2923, i8* %2924) #10
  %2926 = icmp eq i32 1, 0
  br i1 false, label %.loopexit.loopexit, label %2927

; <label>:2927:                                   ; preds = %.lr.ph39.1
  %2928 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2929 = load i8*, i8** %2928, align 8
  %2930 = getelementptr [10 x i8], [10 x i8]* @58, i64 0, i64 0
  %2931 = getelementptr [9 x i8], [9 x i8]* @59, i64 0, i64 0
  %2932 = call i32 @strcmp(i8* %2930, i8* %2931) #10
  %2933 = icmp eq i32 1, 0
  br i1 false, label %3070, label %2934

; <label>:2934:                                   ; preds = %2927
  %2935 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2936 = load i8*, i8** %2935, align 8
  %2937 = getelementptr [10 x i8], [10 x i8]* @60, i64 0, i64 0
  %2938 = getelementptr [13 x i8], [13 x i8]* @61, i64 0, i64 0
  %2939 = call i32 @strcmp(i8* %2937, i8* %2938) #10
  %2940 = icmp eq i32 1, 0
  br i1 false, label %3069, label %2941

; <label>:2941:                                   ; preds = %2934
  %2942 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2943 = load i8*, i8** %2942, align 8
  %2944 = getelementptr [10 x i8], [10 x i8]* @62, i64 0, i64 0
  %2945 = getelementptr [11 x i8], [11 x i8]* @63, i64 0, i64 0
  %2946 = call i32 @strcmp(i8* %2944, i8* %2945) #10
  %2947 = icmp eq i32 1, 0
  br i1 false, label %3068, label %2948

; <label>:2948:                                   ; preds = %2941
  %2949 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2950 = load i8*, i8** %2949, align 8
  %2951 = getelementptr [10 x i8], [10 x i8]* @64, i64 0, i64 0
  %2952 = getelementptr [8 x i8], [8 x i8]* @65, i64 0, i64 0
  %2953 = call i32 @strcmp(i8* %2951, i8* %2952) #10
  %2954 = icmp eq i32 1, 0
  br i1 false, label %3067, label %2955

; <label>:2955:                                   ; preds = %2948
  %2956 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2957 = load i8*, i8** %2956, align 8
  %2958 = getelementptr [10 x i8], [10 x i8]* @66, i64 0, i64 0
  %2959 = getelementptr [7 x i8], [7 x i8]* @67, i64 0, i64 0
  %2960 = call i32 @strcmp(i8* %2958, i8* %2959) #10
  %2961 = icmp eq i32 1, 0
  br i1 false, label %3066, label %2962

; <label>:2962:                                   ; preds = %2955
  %2963 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2964 = load i8*, i8** %2963, align 8
  %2965 = getelementptr [10 x i8], [10 x i8]* @68, i64 0, i64 0
  %2966 = getelementptr [7 x i8], [7 x i8]* @69, i64 0, i64 0
  %2967 = call i32 @strcmp(i8* %2965, i8* %2966) #10
  %2968 = icmp eq i32 1, 0
  br i1 false, label %3065, label %2969

; <label>:2969:                                   ; preds = %2962
  %2970 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2971 = load i8*, i8** %2970, align 8
  %2972 = getelementptr [10 x i8], [10 x i8]* @70, i64 0, i64 0
  %2973 = getelementptr [8 x i8], [8 x i8]* @71, i64 0, i64 0
  %2974 = call i32 @strcmp(i8* %2972, i8* %2973) #10
  %2975 = icmp eq i32 1, 0
  br i1 false, label %3064, label %2976

; <label>:2976:                                   ; preds = %2969
  %2977 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2978 = load i8*, i8** %2977, align 8
  %2979 = getelementptr [10 x i8], [10 x i8]* @72, i64 0, i64 0
  %2980 = getelementptr [8 x i8], [8 x i8]* @73, i64 0, i64 0
  %2981 = call i32 @strcmp(i8* %2979, i8* %2980) #10
  %2982 = icmp eq i32 1, 0
  br i1 false, label %3063, label %2983

; <label>:2983:                                   ; preds = %2976
  %2984 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2985 = load i8*, i8** %2984, align 8
  %2986 = getelementptr [10 x i8], [10 x i8]* @74, i64 0, i64 0
  %2987 = getelementptr [10 x i8], [10 x i8]* @75, i64 0, i64 0
  %2988 = call i32 @strcmp(i8* %2986, i8* %2987) #10
  %2989 = icmp eq i32 1, 0
  br i1 false, label %3062, label %2990

; <label>:2990:                                   ; preds = %2983
  %2991 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2992 = load i8*, i8** %2991, align 8
  %2993 = getelementptr [10 x i8], [10 x i8]* @76, i64 0, i64 0
  %2994 = getelementptr [10 x i8], [10 x i8]* @77, i64 0, i64 0
  %2995 = call i32 @strcmp(i8* %2993, i8* %2994) #10
  %2996 = icmp eq i32 1, 0
  br i1 false, label %3061, label %2997

; <label>:2997:                                   ; preds = %2990
  %2998 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2999 = load i8*, i8** %2998, align 8
  %3000 = getelementptr [10 x i8], [10 x i8]* @78, i64 0, i64 0
  %3001 = getelementptr [14 x i8], [14 x i8]* @79, i64 0, i64 0
  %3002 = call i32 @strcmp(i8* %3000, i8* %3001) #10
  %3003 = icmp eq i32 1, 0
  br i1 false, label %3060, label %3004

; <label>:3004:                                   ; preds = %2997
  %3005 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3006 = load i8*, i8** %3005, align 8
  %3007 = getelementptr [10 x i8], [10 x i8]* @80, i64 0, i64 0
  %3008 = getelementptr [18 x i8], [18 x i8]* @81, i64 0, i64 0
  %3009 = call i32 @strcmp(i8* %3007, i8* %3008) #10
  %3010 = icmp eq i32 1, 0
  %3011 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3012 = load i8*, i8** %3011, align 8
  br i1 false, label %3059, label %3013

; <label>:3013:                                   ; preds = %3004
  %3014 = getelementptr [10 x i8], [10 x i8]* @82, i64 0, i64 0
  %3015 = getelementptr [18 x i8], [18 x i8]* @83, i64 0, i64 0
  %3016 = call i32 @strcmp(i8* %3014, i8* %3015) #10
  %3017 = icmp eq i32 1, 0
  %3018 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3019 = load i8*, i8** %3018, align 8
  br i1 false, label %3058, label %3020

; <label>:3020:                                   ; preds = %3013
  %3021 = getelementptr [10 x i8], [10 x i8]* @84, i64 0, i64 0
  %3022 = getelementptr [7 x i8], [7 x i8]* @85, i64 0, i64 0
  %3023 = call i32 @strcmp(i8* %3021, i8* %3022) #10
  %3024 = icmp eq i32 1, 0
  br i1 false, label %3057, label %3025

; <label>:3025:                                   ; preds = %3020
  %3026 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3027 = load i8*, i8** %3026, align 8
  %3028 = getelementptr [10 x i8], [10 x i8]* @86, i64 0, i64 0
  %3029 = getelementptr [7 x i8], [7 x i8]* @87, i64 0, i64 0
  %3030 = call i32 @strcmp(i8* %3028, i8* %3029) #10
  %3031 = icmp eq i32 1, 0
  br i1 false, label %3056, label %3032

; <label>:3032:                                   ; preds = %3025
  %3033 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3034 = load i8*, i8** %3033, align 8
  %3035 = getelementptr [10 x i8], [10 x i8]* @88, i64 0, i64 0
  %3036 = getelementptr [10 x i8], [10 x i8]* @89, i64 0, i64 0
  %3037 = call i32 @strcmp(i8* %3035, i8* %3036) #10
  %3038 = icmp eq i32 1, 0
  br i1 false, label %3053, label %3039

; <label>:3039:                                   ; preds = %3032
  %3040 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3041 = load i8*, i8** %3040, align 8
  %3042 = getelementptr [10 x i8], [10 x i8]* @90, i64 0, i64 0
  %3043 = getelementptr [7 x i8], [7 x i8]* @91, i64 0, i64 0
  %3044 = call i32 @strcmp(i8* %3042, i8* %3043) #10
  %3045 = icmp eq i32 1, 0
  br i1 false, label %353, label %3046

; <label>:3046:                                   ; preds = %3039
  %3047 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3048 = load i8*, i8** %3047, align 8
  %3049 = getelementptr [10 x i8], [10 x i8]* @92, i64 0, i64 0
  %3050 = getelementptr [3 x i8], [3 x i8]* @93, i64 0, i64 0
  %3051 = call i32 @strncmp(i8* %3049, i8* %3050, i64 2) #10
  %3052 = icmp eq i32 1, 0
  br i1 false, label %362, label %3071

; <label>:3053:                                   ; preds = %3032
  %3054 = load i32, i32* @verbosity, align 4
  %3055 = add nsw i32 %3054, 1
  store i32 %3055, i32* @verbosity, align 4
  br label %3071

; <label>:3056:                                   ; preds = %3025
  store i32 9, i32* @blockSize100k, align 4
  br label %3071

; <label>:3057:                                   ; preds = %3020
  store i32 1, i32* @blockSize100k, align 4
  br label %3071

; <label>:3058:                                   ; preds = %3013
  call void @redundant(i8* %3019)
  br label %3071

; <label>:3059:                                   ; preds = %3004
  call void @redundant(i8* %3012)
  br label %3071

; <label>:3060:                                   ; preds = %2997
  store i32 1, i32* @workFactor, align 4
  br label %3071

; <label>:3061:                                   ; preds = %2990
  call void @license()
  br label %3071

; <label>:3062:                                   ; preds = %2983
  call void @license()
  br label %3071

; <label>:3063:                                   ; preds = %2976
  store i8 0, i8* @noisy, align 1
  br label %3071

; <label>:3064:                                   ; preds = %2969
  store i8 1, i8* @smallMode, align 1
  br label %3071

; <label>:3065:                                   ; preds = %2962
  store i8 1, i8* @keepInputFiles, align 1
  br label %3071

; <label>:3066:                                   ; preds = %2955
  store i32 3, i32* @opMode, align 4
  br label %3071

; <label>:3067:                                   ; preds = %2948
  store i8 1, i8* @forceOverwrite, align 1
  br label %3071

; <label>:3068:                                   ; preds = %2941
  store i32 1, i32* @opMode, align 4
  br label %3071

; <label>:3069:                                   ; preds = %2934
  store i32 2, i32* @opMode, align 4
  br label %3071

; <label>:3070:                                   ; preds = %2927
  store i32 2, i32* @srcMode, align 4
  br label %3071

; <label>:3071:                                   ; preds = %3070, %3069, %3068, %3067, %3066, %3065, %3064, %3063, %3062, %3061, %3060, %3059, %3058, %3057, %3056, %3053, %3046
  call void @__loop_iteration_test___5()
  %3072 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 1
  %3073 = load %struct.zzzz*, %struct.zzzz** %3072, align 8
  %3074 = icmp ne i64 0, 0
  %3075 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph39.2, label %.loopexit.loopexit

.lr.ph39.2:                                       ; preds = %3071
  call void @unroll_loop(i32 5)
  %3076 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3077 = load i8*, i8** %3076, align 8
  %3078 = call i32 @strcmp(i8* %3077, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3079 = icmp eq i32 %3078, 0
  br i1 %3079, label %.loopexit.loopexit, label %3080

; <label>:3080:                                   ; preds = %.lr.ph39.2
  %3081 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3082 = load i8*, i8** %3081, align 8
  %3083 = call i32 @strcmp(i8* %3082, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3084 = icmp eq i32 %3083, 0
  br i1 %3084, label %3187, label %3085

; <label>:3085:                                   ; preds = %3080
  %3086 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3087 = load i8*, i8** %3086, align 8
  %3088 = call i32 @strcmp(i8* %3087, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3089 = icmp eq i32 %3088, 0
  br i1 %3089, label %3186, label %3090

; <label>:3090:                                   ; preds = %3085
  %3091 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3092 = load i8*, i8** %3091, align 8
  %3093 = call i32 @strcmp(i8* %3092, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3094 = icmp eq i32 %3093, 0
  br i1 %3094, label %3185, label %3095

; <label>:3095:                                   ; preds = %3090
  %3096 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3097 = load i8*, i8** %3096, align 8
  %3098 = call i32 @strcmp(i8* %3097, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3099 = icmp eq i32 %3098, 0
  br i1 %3099, label %3184, label %3100

; <label>:3100:                                   ; preds = %3095
  %3101 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3102 = load i8*, i8** %3101, align 8
  %3103 = call i32 @strcmp(i8* %3102, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3104 = icmp eq i32 %3103, 0
  br i1 %3104, label %3183, label %3105

; <label>:3105:                                   ; preds = %3100
  %3106 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3107 = load i8*, i8** %3106, align 8
  %3108 = call i32 @strcmp(i8* %3107, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3109 = icmp eq i32 %3108, 0
  br i1 %3109, label %3182, label %3110

; <label>:3110:                                   ; preds = %3105
  %3111 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3112 = load i8*, i8** %3111, align 8
  %3113 = call i32 @strcmp(i8* %3112, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3114 = icmp eq i32 %3113, 0
  br i1 %3114, label %3181, label %3115

; <label>:3115:                                   ; preds = %3110
  %3116 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3117 = load i8*, i8** %3116, align 8
  %3118 = call i32 @strcmp(i8* %3117, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3119 = icmp eq i32 %3118, 0
  br i1 %3119, label %3180, label %3120

; <label>:3120:                                   ; preds = %3115
  %3121 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3122 = load i8*, i8** %3121, align 8
  %3123 = call i32 @strcmp(i8* %3122, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3124 = icmp eq i32 %3123, 0
  br i1 %3124, label %3179, label %3125

; <label>:3125:                                   ; preds = %3120
  %3126 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3127 = load i8*, i8** %3126, align 8
  %3128 = call i32 @strcmp(i8* %3127, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3129 = icmp eq i32 %3128, 0
  br i1 %3129, label %3178, label %3130

; <label>:3130:                                   ; preds = %3125
  %3131 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3132 = load i8*, i8** %3131, align 8
  %3133 = call i32 @strcmp(i8* %3132, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3134 = icmp eq i32 %3133, 0
  br i1 %3134, label %3177, label %3135

; <label>:3135:                                   ; preds = %3130
  %3136 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3137 = load i8*, i8** %3136, align 8
  %3138 = call i32 @strcmp(i8* %3137, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3139 = icmp eq i32 %3138, 0
  %3140 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3141 = load i8*, i8** %3140, align 8
  br i1 %3139, label %3176, label %3142

; <label>:3142:                                   ; preds = %3135
  %3143 = call i32 @strcmp(i8* %3141, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3144 = icmp eq i32 %3143, 0
  %3145 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3146 = load i8*, i8** %3145, align 8
  br i1 %3144, label %3175, label %3147

; <label>:3147:                                   ; preds = %3142
  %3148 = call i32 @strcmp(i8* %3146, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3149 = icmp eq i32 %3148, 0
  br i1 %3149, label %3174, label %3150

; <label>:3150:                                   ; preds = %3147
  %3151 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3152 = load i8*, i8** %3151, align 8
  %3153 = call i32 @strcmp(i8* %3152, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3154 = icmp eq i32 %3153, 0
  br i1 %3154, label %3173, label %3155

; <label>:3155:                                   ; preds = %3150
  %3156 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3157 = load i8*, i8** %3156, align 8
  %3158 = call i32 @strcmp(i8* %3157, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3159 = icmp eq i32 %3158, 0
  br i1 %3159, label %3170, label %3160

; <label>:3160:                                   ; preds = %3155
  %3161 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3162 = load i8*, i8** %3161, align 8
  %3163 = call i32 @strcmp(i8* %3162, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3164 = icmp eq i32 %3163, 0
  br i1 %3164, label %353, label %3165

; <label>:3165:                                   ; preds = %3160
  %3166 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3167 = load i8*, i8** %3166, align 8
  %3168 = call i32 @strncmp(i8* %3167, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3169 = icmp eq i32 %3168, 0
  br i1 %3169, label %362, label %3188

; <label>:3170:                                   ; preds = %3155
  %3171 = load i32, i32* @verbosity, align 4
  %3172 = add nsw i32 %3171, 1
  store i32 %3172, i32* @verbosity, align 4
  br label %3188

; <label>:3173:                                   ; preds = %3150
  store i32 9, i32* @blockSize100k, align 4
  br label %3188

; <label>:3174:                                   ; preds = %3147
  store i32 1, i32* @blockSize100k, align 4
  br label %3188

; <label>:3175:                                   ; preds = %3142
  call void @redundant(i8* %3146)
  br label %3188

; <label>:3176:                                   ; preds = %3135
  call void @redundant(i8* %3141)
  br label %3188

; <label>:3177:                                   ; preds = %3130
  store i32 1, i32* @workFactor, align 4
  br label %3188

; <label>:3178:                                   ; preds = %3125
  call void @license()
  br label %3188

; <label>:3179:                                   ; preds = %3120
  call void @license()
  br label %3188

; <label>:3180:                                   ; preds = %3115
  store i8 0, i8* @noisy, align 1
  br label %3188

; <label>:3181:                                   ; preds = %3110
  store i8 1, i8* @smallMode, align 1
  br label %3188

; <label>:3182:                                   ; preds = %3105
  store i8 1, i8* @keepInputFiles, align 1
  br label %3188

; <label>:3183:                                   ; preds = %3100
  store i32 3, i32* @opMode, align 4
  br label %3188

; <label>:3184:                                   ; preds = %3095
  store i8 1, i8* @forceOverwrite, align 1
  br label %3188

; <label>:3185:                                   ; preds = %3090
  store i32 1, i32* @opMode, align 4
  br label %3188

; <label>:3186:                                   ; preds = %3085
  store i32 2, i32* @opMode, align 4
  br label %3188

; <label>:3187:                                   ; preds = %3080
  store i32 2, i32* @srcMode, align 4
  br label %3188

; <label>:3188:                                   ; preds = %3187, %3186, %3185, %3184, %3183, %3182, %3181, %3180, %3179, %3178, %3177, %3176, %3175, %3174, %3173, %3170, %3165
  call void @__loop_iteration_test___5()
  %3189 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %3190 = load %struct.zzzz*, %struct.zzzz** %3189, align 8
  %3191 = icmp ne %struct.zzzz* %3190, null
  br i1 %3191, label %.lr.ph39.3, label %.loopexit.loopexit

.lr.ph39.3:                                       ; preds = %3188
  call void @unroll_loop(i32 5)
  %3192 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3193 = load i8*, i8** %3192, align 8
  %3194 = call i32 @strcmp(i8* %3193, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3195 = icmp eq i32 %3194, 0
  br i1 %3195, label %.loopexit.loopexit, label %3196

; <label>:3196:                                   ; preds = %.lr.ph39.3
  %3197 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3198 = load i8*, i8** %3197, align 8
  %3199 = call i32 @strcmp(i8* %3198, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3200 = icmp eq i32 %3199, 0
  br i1 %3200, label %3303, label %3201

; <label>:3201:                                   ; preds = %3196
  %3202 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3203 = load i8*, i8** %3202, align 8
  %3204 = call i32 @strcmp(i8* %3203, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3205 = icmp eq i32 %3204, 0
  br i1 %3205, label %3302, label %3206

; <label>:3206:                                   ; preds = %3201
  %3207 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3208 = load i8*, i8** %3207, align 8
  %3209 = call i32 @strcmp(i8* %3208, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3210 = icmp eq i32 %3209, 0
  br i1 %3210, label %3301, label %3211

; <label>:3211:                                   ; preds = %3206
  %3212 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3213 = load i8*, i8** %3212, align 8
  %3214 = call i32 @strcmp(i8* %3213, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3215 = icmp eq i32 %3214, 0
  br i1 %3215, label %3300, label %3216

; <label>:3216:                                   ; preds = %3211
  %3217 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3218 = load i8*, i8** %3217, align 8
  %3219 = call i32 @strcmp(i8* %3218, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3220 = icmp eq i32 %3219, 0
  br i1 %3220, label %3299, label %3221

; <label>:3221:                                   ; preds = %3216
  %3222 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3223 = load i8*, i8** %3222, align 8
  %3224 = call i32 @strcmp(i8* %3223, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3225 = icmp eq i32 %3224, 0
  br i1 %3225, label %3298, label %3226

; <label>:3226:                                   ; preds = %3221
  %3227 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3228 = load i8*, i8** %3227, align 8
  %3229 = call i32 @strcmp(i8* %3228, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3230 = icmp eq i32 %3229, 0
  br i1 %3230, label %3297, label %3231

; <label>:3231:                                   ; preds = %3226
  %3232 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3233 = load i8*, i8** %3232, align 8
  %3234 = call i32 @strcmp(i8* %3233, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3235 = icmp eq i32 %3234, 0
  br i1 %3235, label %3296, label %3236

; <label>:3236:                                   ; preds = %3231
  %3237 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3238 = load i8*, i8** %3237, align 8
  %3239 = call i32 @strcmp(i8* %3238, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3240 = icmp eq i32 %3239, 0
  br i1 %3240, label %3295, label %3241

; <label>:3241:                                   ; preds = %3236
  %3242 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3243 = load i8*, i8** %3242, align 8
  %3244 = call i32 @strcmp(i8* %3243, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3245 = icmp eq i32 %3244, 0
  br i1 %3245, label %3294, label %3246

; <label>:3246:                                   ; preds = %3241
  %3247 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3248 = load i8*, i8** %3247, align 8
  %3249 = call i32 @strcmp(i8* %3248, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3250 = icmp eq i32 %3249, 0
  br i1 %3250, label %3293, label %3251

; <label>:3251:                                   ; preds = %3246
  %3252 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3253 = load i8*, i8** %3252, align 8
  %3254 = call i32 @strcmp(i8* %3253, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3255 = icmp eq i32 %3254, 0
  %3256 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3257 = load i8*, i8** %3256, align 8
  br i1 %3255, label %3292, label %3258

; <label>:3258:                                   ; preds = %3251
  %3259 = call i32 @strcmp(i8* %3257, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3260 = icmp eq i32 %3259, 0
  %3261 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3262 = load i8*, i8** %3261, align 8
  br i1 %3260, label %3291, label %3263

; <label>:3263:                                   ; preds = %3258
  %3264 = call i32 @strcmp(i8* %3262, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3265 = icmp eq i32 %3264, 0
  br i1 %3265, label %3290, label %3266

; <label>:3266:                                   ; preds = %3263
  %3267 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3268 = load i8*, i8** %3267, align 8
  %3269 = call i32 @strcmp(i8* %3268, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3270 = icmp eq i32 %3269, 0
  br i1 %3270, label %3289, label %3271

; <label>:3271:                                   ; preds = %3266
  %3272 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3273 = load i8*, i8** %3272, align 8
  %3274 = call i32 @strcmp(i8* %3273, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3275 = icmp eq i32 %3274, 0
  br i1 %3275, label %3286, label %3276

; <label>:3276:                                   ; preds = %3271
  %3277 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3278 = load i8*, i8** %3277, align 8
  %3279 = call i32 @strcmp(i8* %3278, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3280 = icmp eq i32 %3279, 0
  br i1 %3280, label %353, label %3281

; <label>:3281:                                   ; preds = %3276
  %3282 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 0
  %3283 = load i8*, i8** %3282, align 8
  %3284 = call i32 @strncmp(i8* %3283, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3285 = icmp eq i32 %3284, 0
  br i1 %3285, label %362, label %3304

; <label>:3286:                                   ; preds = %3271
  %3287 = load i32, i32* @verbosity, align 4
  %3288 = add nsw i32 %3287, 1
  store i32 %3288, i32* @verbosity, align 4
  br label %3304

; <label>:3289:                                   ; preds = %3266
  store i32 9, i32* @blockSize100k, align 4
  br label %3304

; <label>:3290:                                   ; preds = %3263
  store i32 1, i32* @blockSize100k, align 4
  br label %3304

; <label>:3291:                                   ; preds = %3258
  call void @redundant(i8* %3262)
  br label %3304

; <label>:3292:                                   ; preds = %3251
  call void @redundant(i8* %3257)
  br label %3304

; <label>:3293:                                   ; preds = %3246
  store i32 1, i32* @workFactor, align 4
  br label %3304

; <label>:3294:                                   ; preds = %3241
  call void @license()
  br label %3304

; <label>:3295:                                   ; preds = %3236
  call void @license()
  br label %3304

; <label>:3296:                                   ; preds = %3231
  store i8 0, i8* @noisy, align 1
  br label %3304

; <label>:3297:                                   ; preds = %3226
  store i8 1, i8* @smallMode, align 1
  br label %3304

; <label>:3298:                                   ; preds = %3221
  store i8 1, i8* @keepInputFiles, align 1
  br label %3304

; <label>:3299:                                   ; preds = %3216
  store i32 3, i32* @opMode, align 4
  br label %3304

; <label>:3300:                                   ; preds = %3211
  store i8 1, i8* @forceOverwrite, align 1
  br label %3304

; <label>:3301:                                   ; preds = %3206
  store i32 1, i32* @opMode, align 4
  br label %3304

; <label>:3302:                                   ; preds = %3201
  store i32 2, i32* @opMode, align 4
  br label %3304

; <label>:3303:                                   ; preds = %3196
  store i32 2, i32* @srcMode, align 4
  br label %3304

; <label>:3304:                                   ; preds = %3303, %3302, %3301, %3300, %3299, %3298, %3297, %3296, %3295, %3294, %3293, %3292, %3291, %3290, %3289, %3286, %3281
  call void @__loop_iteration_test___5()
  %3305 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3190, i32 0, i32 1
  %3306 = load %struct.zzzz*, %struct.zzzz** %3305, align 8
  %3307 = icmp ne %struct.zzzz* %3306, null
  br i1 %3307, label %.lr.ph39.4, label %.loopexit.loopexit

.lr.ph39.4:                                       ; preds = %3304
  call void @unroll_loop(i32 5)
  %3308 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3309 = load i8*, i8** %3308, align 8
  %3310 = call i32 @strcmp(i8* %3309, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3311 = icmp eq i32 %3310, 0
  br i1 %3311, label %.loopexit.loopexit, label %3312

; <label>:3312:                                   ; preds = %.lr.ph39.4
  %3313 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3314 = load i8*, i8** %3313, align 8
  %3315 = call i32 @strcmp(i8* %3314, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3316 = icmp eq i32 %3315, 0
  br i1 %3316, label %3419, label %3317

; <label>:3317:                                   ; preds = %3312
  %3318 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3319 = load i8*, i8** %3318, align 8
  %3320 = call i32 @strcmp(i8* %3319, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3321 = icmp eq i32 %3320, 0
  br i1 %3321, label %3418, label %3322

; <label>:3322:                                   ; preds = %3317
  %3323 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3324 = load i8*, i8** %3323, align 8
  %3325 = call i32 @strcmp(i8* %3324, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3326 = icmp eq i32 %3325, 0
  br i1 %3326, label %3417, label %3327

; <label>:3327:                                   ; preds = %3322
  %3328 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3329 = load i8*, i8** %3328, align 8
  %3330 = call i32 @strcmp(i8* %3329, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3331 = icmp eq i32 %3330, 0
  br i1 %3331, label %3416, label %3332

; <label>:3332:                                   ; preds = %3327
  %3333 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3334 = load i8*, i8** %3333, align 8
  %3335 = call i32 @strcmp(i8* %3334, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3336 = icmp eq i32 %3335, 0
  br i1 %3336, label %3415, label %3337

; <label>:3337:                                   ; preds = %3332
  %3338 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3339 = load i8*, i8** %3338, align 8
  %3340 = call i32 @strcmp(i8* %3339, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3341 = icmp eq i32 %3340, 0
  br i1 %3341, label %3414, label %3342

; <label>:3342:                                   ; preds = %3337
  %3343 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3344 = load i8*, i8** %3343, align 8
  %3345 = call i32 @strcmp(i8* %3344, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3346 = icmp eq i32 %3345, 0
  br i1 %3346, label %3413, label %3347

; <label>:3347:                                   ; preds = %3342
  %3348 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3349 = load i8*, i8** %3348, align 8
  %3350 = call i32 @strcmp(i8* %3349, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3351 = icmp eq i32 %3350, 0
  br i1 %3351, label %3412, label %3352

; <label>:3352:                                   ; preds = %3347
  %3353 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3354 = load i8*, i8** %3353, align 8
  %3355 = call i32 @strcmp(i8* %3354, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3356 = icmp eq i32 %3355, 0
  br i1 %3356, label %3411, label %3357

; <label>:3357:                                   ; preds = %3352
  %3358 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3359 = load i8*, i8** %3358, align 8
  %3360 = call i32 @strcmp(i8* %3359, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3361 = icmp eq i32 %3360, 0
  br i1 %3361, label %3410, label %3362

; <label>:3362:                                   ; preds = %3357
  %3363 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3364 = load i8*, i8** %3363, align 8
  %3365 = call i32 @strcmp(i8* %3364, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3366 = icmp eq i32 %3365, 0
  br i1 %3366, label %3409, label %3367

; <label>:3367:                                   ; preds = %3362
  %3368 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3369 = load i8*, i8** %3368, align 8
  %3370 = call i32 @strcmp(i8* %3369, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3371 = icmp eq i32 %3370, 0
  %3372 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3373 = load i8*, i8** %3372, align 8
  br i1 %3371, label %3408, label %3374

; <label>:3374:                                   ; preds = %3367
  %3375 = call i32 @strcmp(i8* %3373, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3376 = icmp eq i32 %3375, 0
  %3377 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3378 = load i8*, i8** %3377, align 8
  br i1 %3376, label %3407, label %3379

; <label>:3379:                                   ; preds = %3374
  %3380 = call i32 @strcmp(i8* %3378, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3381 = icmp eq i32 %3380, 0
  br i1 %3381, label %3406, label %3382

; <label>:3382:                                   ; preds = %3379
  %3383 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3384 = load i8*, i8** %3383, align 8
  %3385 = call i32 @strcmp(i8* %3384, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3386 = icmp eq i32 %3385, 0
  br i1 %3386, label %3405, label %3387

; <label>:3387:                                   ; preds = %3382
  %3388 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3389 = load i8*, i8** %3388, align 8
  %3390 = call i32 @strcmp(i8* %3389, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3391 = icmp eq i32 %3390, 0
  br i1 %3391, label %3402, label %3392

; <label>:3392:                                   ; preds = %3387
  %3393 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3394 = load i8*, i8** %3393, align 8
  %3395 = call i32 @strcmp(i8* %3394, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3396 = icmp eq i32 %3395, 0
  br i1 %3396, label %353, label %3397

; <label>:3397:                                   ; preds = %3392
  %3398 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 0
  %3399 = load i8*, i8** %3398, align 8
  %3400 = call i32 @strncmp(i8* %3399, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3401 = icmp eq i32 %3400, 0
  br i1 %3401, label %362, label %3420

; <label>:3402:                                   ; preds = %3387
  %3403 = load i32, i32* @verbosity, align 4
  %3404 = add nsw i32 %3403, 1
  store i32 %3404, i32* @verbosity, align 4
  br label %3420

; <label>:3405:                                   ; preds = %3382
  store i32 9, i32* @blockSize100k, align 4
  br label %3420

; <label>:3406:                                   ; preds = %3379
  store i32 1, i32* @blockSize100k, align 4
  br label %3420

; <label>:3407:                                   ; preds = %3374
  call void @redundant(i8* %3378)
  br label %3420

; <label>:3408:                                   ; preds = %3367
  call void @redundant(i8* %3373)
  br label %3420

; <label>:3409:                                   ; preds = %3362
  store i32 1, i32* @workFactor, align 4
  br label %3420

; <label>:3410:                                   ; preds = %3357
  call void @license()
  br label %3420

; <label>:3411:                                   ; preds = %3352
  call void @license()
  br label %3420

; <label>:3412:                                   ; preds = %3347
  store i8 0, i8* @noisy, align 1
  br label %3420

; <label>:3413:                                   ; preds = %3342
  store i8 1, i8* @smallMode, align 1
  br label %3420

; <label>:3414:                                   ; preds = %3337
  store i8 1, i8* @keepInputFiles, align 1
  br label %3420

; <label>:3415:                                   ; preds = %3332
  store i32 3, i32* @opMode, align 4
  br label %3420

; <label>:3416:                                   ; preds = %3327
  store i8 1, i8* @forceOverwrite, align 1
  br label %3420

; <label>:3417:                                   ; preds = %3322
  store i32 1, i32* @opMode, align 4
  br label %3420

; <label>:3418:                                   ; preds = %3317
  store i32 2, i32* @opMode, align 4
  br label %3420

; <label>:3419:                                   ; preds = %3312
  store i32 2, i32* @srcMode, align 4
  br label %3420

; <label>:3420:                                   ; preds = %3419, %3418, %3417, %3416, %3415, %3414, %3413, %3412, %3411, %3410, %3409, %3408, %3407, %3406, %3405, %3402, %3397
  call void @__loop_iteration_test___5()
  %3421 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3306, i32 0, i32 1
  %3422 = load %struct.zzzz*, %struct.zzzz** %3421, align 8
  %3423 = icmp ne %struct.zzzz* %3422, null
  br i1 %3423, label %.lr.ph39.5, label %.loopexit.loopexit

.lr.ph39.5:                                       ; preds = %3420
  call void @unroll_loop(i32 5)
  %3424 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3425 = load i8*, i8** %3424, align 8
  %3426 = call i32 @strcmp(i8* %3425, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3427 = icmp eq i32 %3426, 0
  br i1 %3427, label %.loopexit.loopexit, label %3428

; <label>:3428:                                   ; preds = %.lr.ph39.5
  %3429 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3430 = load i8*, i8** %3429, align 8
  %3431 = call i32 @strcmp(i8* %3430, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3432 = icmp eq i32 %3431, 0
  br i1 %3432, label %3535, label %3433

; <label>:3433:                                   ; preds = %3428
  %3434 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3435 = load i8*, i8** %3434, align 8
  %3436 = call i32 @strcmp(i8* %3435, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3437 = icmp eq i32 %3436, 0
  br i1 %3437, label %3534, label %3438

; <label>:3438:                                   ; preds = %3433
  %3439 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3440 = load i8*, i8** %3439, align 8
  %3441 = call i32 @strcmp(i8* %3440, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3442 = icmp eq i32 %3441, 0
  br i1 %3442, label %3533, label %3443

; <label>:3443:                                   ; preds = %3438
  %3444 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3445 = load i8*, i8** %3444, align 8
  %3446 = call i32 @strcmp(i8* %3445, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3447 = icmp eq i32 %3446, 0
  br i1 %3447, label %3532, label %3448

; <label>:3448:                                   ; preds = %3443
  %3449 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3450 = load i8*, i8** %3449, align 8
  %3451 = call i32 @strcmp(i8* %3450, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3452 = icmp eq i32 %3451, 0
  br i1 %3452, label %3531, label %3453

; <label>:3453:                                   ; preds = %3448
  %3454 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3455 = load i8*, i8** %3454, align 8
  %3456 = call i32 @strcmp(i8* %3455, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3457 = icmp eq i32 %3456, 0
  br i1 %3457, label %3530, label %3458

; <label>:3458:                                   ; preds = %3453
  %3459 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3460 = load i8*, i8** %3459, align 8
  %3461 = call i32 @strcmp(i8* %3460, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3462 = icmp eq i32 %3461, 0
  br i1 %3462, label %3529, label %3463

; <label>:3463:                                   ; preds = %3458
  %3464 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3465 = load i8*, i8** %3464, align 8
  %3466 = call i32 @strcmp(i8* %3465, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3467 = icmp eq i32 %3466, 0
  br i1 %3467, label %3528, label %3468

; <label>:3468:                                   ; preds = %3463
  %3469 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3470 = load i8*, i8** %3469, align 8
  %3471 = call i32 @strcmp(i8* %3470, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3472 = icmp eq i32 %3471, 0
  br i1 %3472, label %3527, label %3473

; <label>:3473:                                   ; preds = %3468
  %3474 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3475 = load i8*, i8** %3474, align 8
  %3476 = call i32 @strcmp(i8* %3475, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3477 = icmp eq i32 %3476, 0
  br i1 %3477, label %3526, label %3478

; <label>:3478:                                   ; preds = %3473
  %3479 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3480 = load i8*, i8** %3479, align 8
  %3481 = call i32 @strcmp(i8* %3480, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3482 = icmp eq i32 %3481, 0
  br i1 %3482, label %3525, label %3483

; <label>:3483:                                   ; preds = %3478
  %3484 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3485 = load i8*, i8** %3484, align 8
  %3486 = call i32 @strcmp(i8* %3485, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3487 = icmp eq i32 %3486, 0
  %3488 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3489 = load i8*, i8** %3488, align 8
  br i1 %3487, label %3524, label %3490

; <label>:3490:                                   ; preds = %3483
  %3491 = call i32 @strcmp(i8* %3489, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3492 = icmp eq i32 %3491, 0
  %3493 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3494 = load i8*, i8** %3493, align 8
  br i1 %3492, label %3523, label %3495

; <label>:3495:                                   ; preds = %3490
  %3496 = call i32 @strcmp(i8* %3494, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3497 = icmp eq i32 %3496, 0
  br i1 %3497, label %3522, label %3498

; <label>:3498:                                   ; preds = %3495
  %3499 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3500 = load i8*, i8** %3499, align 8
  %3501 = call i32 @strcmp(i8* %3500, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3502 = icmp eq i32 %3501, 0
  br i1 %3502, label %3521, label %3503

; <label>:3503:                                   ; preds = %3498
  %3504 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3505 = load i8*, i8** %3504, align 8
  %3506 = call i32 @strcmp(i8* %3505, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3507 = icmp eq i32 %3506, 0
  br i1 %3507, label %3518, label %3508

; <label>:3508:                                   ; preds = %3503
  %3509 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3510 = load i8*, i8** %3509, align 8
  %3511 = call i32 @strcmp(i8* %3510, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3512 = icmp eq i32 %3511, 0
  br i1 %3512, label %353, label %3513

; <label>:3513:                                   ; preds = %3508
  %3514 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 0
  %3515 = load i8*, i8** %3514, align 8
  %3516 = call i32 @strncmp(i8* %3515, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3517 = icmp eq i32 %3516, 0
  br i1 %3517, label %362, label %3536

; <label>:3518:                                   ; preds = %3503
  %3519 = load i32, i32* @verbosity, align 4
  %3520 = add nsw i32 %3519, 1
  store i32 %3520, i32* @verbosity, align 4
  br label %3536

; <label>:3521:                                   ; preds = %3498
  store i32 9, i32* @blockSize100k, align 4
  br label %3536

; <label>:3522:                                   ; preds = %3495
  store i32 1, i32* @blockSize100k, align 4
  br label %3536

; <label>:3523:                                   ; preds = %3490
  call void @redundant(i8* %3494)
  br label %3536

; <label>:3524:                                   ; preds = %3483
  call void @redundant(i8* %3489)
  br label %3536

; <label>:3525:                                   ; preds = %3478
  store i32 1, i32* @workFactor, align 4
  br label %3536

; <label>:3526:                                   ; preds = %3473
  call void @license()
  br label %3536

; <label>:3527:                                   ; preds = %3468
  call void @license()
  br label %3536

; <label>:3528:                                   ; preds = %3463
  store i8 0, i8* @noisy, align 1
  br label %3536

; <label>:3529:                                   ; preds = %3458
  store i8 1, i8* @smallMode, align 1
  br label %3536

; <label>:3530:                                   ; preds = %3453
  store i8 1, i8* @keepInputFiles, align 1
  br label %3536

; <label>:3531:                                   ; preds = %3448
  store i32 3, i32* @opMode, align 4
  br label %3536

; <label>:3532:                                   ; preds = %3443
  store i8 1, i8* @forceOverwrite, align 1
  br label %3536

; <label>:3533:                                   ; preds = %3438
  store i32 1, i32* @opMode, align 4
  br label %3536

; <label>:3534:                                   ; preds = %3433
  store i32 2, i32* @opMode, align 4
  br label %3536

; <label>:3535:                                   ; preds = %3428
  store i32 2, i32* @srcMode, align 4
  br label %3536

; <label>:3536:                                   ; preds = %3535, %3534, %3533, %3532, %3531, %3530, %3529, %3528, %3527, %3526, %3525, %3524, %3523, %3522, %3521, %3518, %3513
  call void @__loop_iteration_test___5()
  %3537 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3422, i32 0, i32 1
  %3538 = load %struct.zzzz*, %struct.zzzz** %3537, align 8
  %3539 = icmp ne %struct.zzzz* %3538, null
  br i1 %3539, label %.lr.ph39.6, label %.loopexit.loopexit

.lr.ph39.6:                                       ; preds = %3536
  call void @unroll_loop(i32 5)
  %3540 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3541 = load i8*, i8** %3540, align 8
  %3542 = call i32 @strcmp(i8* %3541, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3543 = icmp eq i32 %3542, 0
  br i1 %3543, label %.loopexit.loopexit, label %3544

; <label>:3544:                                   ; preds = %.lr.ph39.6
  %3545 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3546 = load i8*, i8** %3545, align 8
  %3547 = call i32 @strcmp(i8* %3546, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3548 = icmp eq i32 %3547, 0
  br i1 %3548, label %3651, label %3549

; <label>:3549:                                   ; preds = %3544
  %3550 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3551 = load i8*, i8** %3550, align 8
  %3552 = call i32 @strcmp(i8* %3551, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3553 = icmp eq i32 %3552, 0
  br i1 %3553, label %3650, label %3554

; <label>:3554:                                   ; preds = %3549
  %3555 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3556 = load i8*, i8** %3555, align 8
  %3557 = call i32 @strcmp(i8* %3556, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3558 = icmp eq i32 %3557, 0
  br i1 %3558, label %3649, label %3559

; <label>:3559:                                   ; preds = %3554
  %3560 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3561 = load i8*, i8** %3560, align 8
  %3562 = call i32 @strcmp(i8* %3561, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3563 = icmp eq i32 %3562, 0
  br i1 %3563, label %3648, label %3564

; <label>:3564:                                   ; preds = %3559
  %3565 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3566 = load i8*, i8** %3565, align 8
  %3567 = call i32 @strcmp(i8* %3566, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3568 = icmp eq i32 %3567, 0
  br i1 %3568, label %3647, label %3569

; <label>:3569:                                   ; preds = %3564
  %3570 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3571 = load i8*, i8** %3570, align 8
  %3572 = call i32 @strcmp(i8* %3571, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3573 = icmp eq i32 %3572, 0
  br i1 %3573, label %3646, label %3574

; <label>:3574:                                   ; preds = %3569
  %3575 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3576 = load i8*, i8** %3575, align 8
  %3577 = call i32 @strcmp(i8* %3576, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3578 = icmp eq i32 %3577, 0
  br i1 %3578, label %3645, label %3579

; <label>:3579:                                   ; preds = %3574
  %3580 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3581 = load i8*, i8** %3580, align 8
  %3582 = call i32 @strcmp(i8* %3581, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3583 = icmp eq i32 %3582, 0
  br i1 %3583, label %3644, label %3584

; <label>:3584:                                   ; preds = %3579
  %3585 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3586 = load i8*, i8** %3585, align 8
  %3587 = call i32 @strcmp(i8* %3586, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3588 = icmp eq i32 %3587, 0
  br i1 %3588, label %3643, label %3589

; <label>:3589:                                   ; preds = %3584
  %3590 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3591 = load i8*, i8** %3590, align 8
  %3592 = call i32 @strcmp(i8* %3591, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3593 = icmp eq i32 %3592, 0
  br i1 %3593, label %3642, label %3594

; <label>:3594:                                   ; preds = %3589
  %3595 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3596 = load i8*, i8** %3595, align 8
  %3597 = call i32 @strcmp(i8* %3596, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3598 = icmp eq i32 %3597, 0
  br i1 %3598, label %3641, label %3599

; <label>:3599:                                   ; preds = %3594
  %3600 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3601 = load i8*, i8** %3600, align 8
  %3602 = call i32 @strcmp(i8* %3601, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3603 = icmp eq i32 %3602, 0
  %3604 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3605 = load i8*, i8** %3604, align 8
  br i1 %3603, label %3640, label %3606

; <label>:3606:                                   ; preds = %3599
  %3607 = call i32 @strcmp(i8* %3605, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3608 = icmp eq i32 %3607, 0
  %3609 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3610 = load i8*, i8** %3609, align 8
  br i1 %3608, label %3639, label %3611

; <label>:3611:                                   ; preds = %3606
  %3612 = call i32 @strcmp(i8* %3610, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3613 = icmp eq i32 %3612, 0
  br i1 %3613, label %3638, label %3614

; <label>:3614:                                   ; preds = %3611
  %3615 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3616 = load i8*, i8** %3615, align 8
  %3617 = call i32 @strcmp(i8* %3616, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3618 = icmp eq i32 %3617, 0
  br i1 %3618, label %3637, label %3619

; <label>:3619:                                   ; preds = %3614
  %3620 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3621 = load i8*, i8** %3620, align 8
  %3622 = call i32 @strcmp(i8* %3621, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3623 = icmp eq i32 %3622, 0
  br i1 %3623, label %3634, label %3624

; <label>:3624:                                   ; preds = %3619
  %3625 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3626 = load i8*, i8** %3625, align 8
  %3627 = call i32 @strcmp(i8* %3626, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3628 = icmp eq i32 %3627, 0
  br i1 %3628, label %353, label %3629

; <label>:3629:                                   ; preds = %3624
  %3630 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 0
  %3631 = load i8*, i8** %3630, align 8
  %3632 = call i32 @strncmp(i8* %3631, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3633 = icmp eq i32 %3632, 0
  br i1 %3633, label %362, label %3652

; <label>:3634:                                   ; preds = %3619
  %3635 = load i32, i32* @verbosity, align 4
  %3636 = add nsw i32 %3635, 1
  store i32 %3636, i32* @verbosity, align 4
  br label %3652

; <label>:3637:                                   ; preds = %3614
  store i32 9, i32* @blockSize100k, align 4
  br label %3652

; <label>:3638:                                   ; preds = %3611
  store i32 1, i32* @blockSize100k, align 4
  br label %3652

; <label>:3639:                                   ; preds = %3606
  call void @redundant(i8* %3610)
  br label %3652

; <label>:3640:                                   ; preds = %3599
  call void @redundant(i8* %3605)
  br label %3652

; <label>:3641:                                   ; preds = %3594
  store i32 1, i32* @workFactor, align 4
  br label %3652

; <label>:3642:                                   ; preds = %3589
  call void @license()
  br label %3652

; <label>:3643:                                   ; preds = %3584
  call void @license()
  br label %3652

; <label>:3644:                                   ; preds = %3579
  store i8 0, i8* @noisy, align 1
  br label %3652

; <label>:3645:                                   ; preds = %3574
  store i8 1, i8* @smallMode, align 1
  br label %3652

; <label>:3646:                                   ; preds = %3569
  store i8 1, i8* @keepInputFiles, align 1
  br label %3652

; <label>:3647:                                   ; preds = %3564
  store i32 3, i32* @opMode, align 4
  br label %3652

; <label>:3648:                                   ; preds = %3559
  store i8 1, i8* @forceOverwrite, align 1
  br label %3652

; <label>:3649:                                   ; preds = %3554
  store i32 1, i32* @opMode, align 4
  br label %3652

; <label>:3650:                                   ; preds = %3549
  store i32 2, i32* @opMode, align 4
  br label %3652

; <label>:3651:                                   ; preds = %3544
  store i32 2, i32* @srcMode, align 4
  br label %3652

; <label>:3652:                                   ; preds = %3651, %3650, %3649, %3648, %3647, %3646, %3645, %3644, %3643, %3642, %3641, %3640, %3639, %3638, %3637, %3634, %3629
  call void @__loop_iteration_test___5()
  %3653 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3538, i32 0, i32 1
  %3654 = load %struct.zzzz*, %struct.zzzz** %3653, align 8
  %3655 = icmp ne %struct.zzzz* %3654, null
  br i1 %3655, label %.lr.ph39.7, label %.loopexit.loopexit

.lr.ph39.7:                                       ; preds = %3652
  call void @unroll_loop(i32 5)
  %3656 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3657 = load i8*, i8** %3656, align 8
  %3658 = call i32 @strcmp(i8* %3657, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3659 = icmp eq i32 %3658, 0
  br i1 %3659, label %.loopexit.loopexit, label %3660

; <label>:3660:                                   ; preds = %.lr.ph39.7
  %3661 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3662 = load i8*, i8** %3661, align 8
  %3663 = call i32 @strcmp(i8* %3662, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3664 = icmp eq i32 %3663, 0
  br i1 %3664, label %3767, label %3665

; <label>:3665:                                   ; preds = %3660
  %3666 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3667 = load i8*, i8** %3666, align 8
  %3668 = call i32 @strcmp(i8* %3667, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3669 = icmp eq i32 %3668, 0
  br i1 %3669, label %3766, label %3670

; <label>:3670:                                   ; preds = %3665
  %3671 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3672 = load i8*, i8** %3671, align 8
  %3673 = call i32 @strcmp(i8* %3672, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3674 = icmp eq i32 %3673, 0
  br i1 %3674, label %3765, label %3675

; <label>:3675:                                   ; preds = %3670
  %3676 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3677 = load i8*, i8** %3676, align 8
  %3678 = call i32 @strcmp(i8* %3677, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3679 = icmp eq i32 %3678, 0
  br i1 %3679, label %3764, label %3680

; <label>:3680:                                   ; preds = %3675
  %3681 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3682 = load i8*, i8** %3681, align 8
  %3683 = call i32 @strcmp(i8* %3682, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3684 = icmp eq i32 %3683, 0
  br i1 %3684, label %3763, label %3685

; <label>:3685:                                   ; preds = %3680
  %3686 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3687 = load i8*, i8** %3686, align 8
  %3688 = call i32 @strcmp(i8* %3687, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3689 = icmp eq i32 %3688, 0
  br i1 %3689, label %3762, label %3690

; <label>:3690:                                   ; preds = %3685
  %3691 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3692 = load i8*, i8** %3691, align 8
  %3693 = call i32 @strcmp(i8* %3692, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3694 = icmp eq i32 %3693, 0
  br i1 %3694, label %3761, label %3695

; <label>:3695:                                   ; preds = %3690
  %3696 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3697 = load i8*, i8** %3696, align 8
  %3698 = call i32 @strcmp(i8* %3697, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3699 = icmp eq i32 %3698, 0
  br i1 %3699, label %3760, label %3700

; <label>:3700:                                   ; preds = %3695
  %3701 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3702 = load i8*, i8** %3701, align 8
  %3703 = call i32 @strcmp(i8* %3702, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3704 = icmp eq i32 %3703, 0
  br i1 %3704, label %3759, label %3705

; <label>:3705:                                   ; preds = %3700
  %3706 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3707 = load i8*, i8** %3706, align 8
  %3708 = call i32 @strcmp(i8* %3707, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3709 = icmp eq i32 %3708, 0
  br i1 %3709, label %3758, label %3710

; <label>:3710:                                   ; preds = %3705
  %3711 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3712 = load i8*, i8** %3711, align 8
  %3713 = call i32 @strcmp(i8* %3712, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3714 = icmp eq i32 %3713, 0
  br i1 %3714, label %3757, label %3715

; <label>:3715:                                   ; preds = %3710
  %3716 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3717 = load i8*, i8** %3716, align 8
  %3718 = call i32 @strcmp(i8* %3717, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3719 = icmp eq i32 %3718, 0
  %3720 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3721 = load i8*, i8** %3720, align 8
  br i1 %3719, label %3756, label %3722

; <label>:3722:                                   ; preds = %3715
  %3723 = call i32 @strcmp(i8* %3721, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3724 = icmp eq i32 %3723, 0
  %3725 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3726 = load i8*, i8** %3725, align 8
  br i1 %3724, label %3755, label %3727

; <label>:3727:                                   ; preds = %3722
  %3728 = call i32 @strcmp(i8* %3726, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3729 = icmp eq i32 %3728, 0
  br i1 %3729, label %3754, label %3730

; <label>:3730:                                   ; preds = %3727
  %3731 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3732 = load i8*, i8** %3731, align 8
  %3733 = call i32 @strcmp(i8* %3732, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3734 = icmp eq i32 %3733, 0
  br i1 %3734, label %3753, label %3735

; <label>:3735:                                   ; preds = %3730
  %3736 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3737 = load i8*, i8** %3736, align 8
  %3738 = call i32 @strcmp(i8* %3737, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3739 = icmp eq i32 %3738, 0
  br i1 %3739, label %3750, label %3740

; <label>:3740:                                   ; preds = %3735
  %3741 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3742 = load i8*, i8** %3741, align 8
  %3743 = call i32 @strcmp(i8* %3742, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3744 = icmp eq i32 %3743, 0
  br i1 %3744, label %353, label %3745

; <label>:3745:                                   ; preds = %3740
  %3746 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 0
  %3747 = load i8*, i8** %3746, align 8
  %3748 = call i32 @strncmp(i8* %3747, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3749 = icmp eq i32 %3748, 0
  br i1 %3749, label %362, label %3768

; <label>:3750:                                   ; preds = %3735
  %3751 = load i32, i32* @verbosity, align 4
  %3752 = add nsw i32 %3751, 1
  store i32 %3752, i32* @verbosity, align 4
  br label %3768

; <label>:3753:                                   ; preds = %3730
  store i32 9, i32* @blockSize100k, align 4
  br label %3768

; <label>:3754:                                   ; preds = %3727
  store i32 1, i32* @blockSize100k, align 4
  br label %3768

; <label>:3755:                                   ; preds = %3722
  call void @redundant(i8* %3726)
  br label %3768

; <label>:3756:                                   ; preds = %3715
  call void @redundant(i8* %3721)
  br label %3768

; <label>:3757:                                   ; preds = %3710
  store i32 1, i32* @workFactor, align 4
  br label %3768

; <label>:3758:                                   ; preds = %3705
  call void @license()
  br label %3768

; <label>:3759:                                   ; preds = %3700
  call void @license()
  br label %3768

; <label>:3760:                                   ; preds = %3695
  store i8 0, i8* @noisy, align 1
  br label %3768

; <label>:3761:                                   ; preds = %3690
  store i8 1, i8* @smallMode, align 1
  br label %3768

; <label>:3762:                                   ; preds = %3685
  store i8 1, i8* @keepInputFiles, align 1
  br label %3768

; <label>:3763:                                   ; preds = %3680
  store i32 3, i32* @opMode, align 4
  br label %3768

; <label>:3764:                                   ; preds = %3675
  store i8 1, i8* @forceOverwrite, align 1
  br label %3768

; <label>:3765:                                   ; preds = %3670
  store i32 1, i32* @opMode, align 4
  br label %3768

; <label>:3766:                                   ; preds = %3665
  store i32 2, i32* @opMode, align 4
  br label %3768

; <label>:3767:                                   ; preds = %3660
  store i32 2, i32* @srcMode, align 4
  br label %3768

; <label>:3768:                                   ; preds = %3767, %3766, %3765, %3764, %3763, %3762, %3761, %3760, %3759, %3758, %3757, %3756, %3755, %3754, %3753, %3750, %3745
  call void @__loop_iteration_test___5()
  %3769 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3654, i32 0, i32 1
  %3770 = load %struct.zzzz*, %struct.zzzz** %3769, align 8
  %3771 = icmp ne %struct.zzzz* %3770, null
  br i1 %3771, label %.lr.ph39.8, label %.loopexit.loopexit

.lr.ph39.8:                                       ; preds = %3768
  call void @unroll_loop(i32 5)
  %3772 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3773 = load i8*, i8** %3772, align 8
  %3774 = call i32 @strcmp(i8* %3773, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3775 = icmp eq i32 %3774, 0
  br i1 %3775, label %.loopexit.loopexit, label %3776

; <label>:3776:                                   ; preds = %.lr.ph39.8
  %3777 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3778 = load i8*, i8** %3777, align 8
  %3779 = call i32 @strcmp(i8* %3778, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3780 = icmp eq i32 %3779, 0
  br i1 %3780, label %3883, label %3781

; <label>:3781:                                   ; preds = %3776
  %3782 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3783 = load i8*, i8** %3782, align 8
  %3784 = call i32 @strcmp(i8* %3783, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3785 = icmp eq i32 %3784, 0
  br i1 %3785, label %3882, label %3786

; <label>:3786:                                   ; preds = %3781
  %3787 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3788 = load i8*, i8** %3787, align 8
  %3789 = call i32 @strcmp(i8* %3788, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3790 = icmp eq i32 %3789, 0
  br i1 %3790, label %3881, label %3791

; <label>:3791:                                   ; preds = %3786
  %3792 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3793 = load i8*, i8** %3792, align 8
  %3794 = call i32 @strcmp(i8* %3793, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3795 = icmp eq i32 %3794, 0
  br i1 %3795, label %3880, label %3796

; <label>:3796:                                   ; preds = %3791
  %3797 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3798 = load i8*, i8** %3797, align 8
  %3799 = call i32 @strcmp(i8* %3798, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3800 = icmp eq i32 %3799, 0
  br i1 %3800, label %3879, label %3801

; <label>:3801:                                   ; preds = %3796
  %3802 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3803 = load i8*, i8** %3802, align 8
  %3804 = call i32 @strcmp(i8* %3803, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3805 = icmp eq i32 %3804, 0
  br i1 %3805, label %3878, label %3806

; <label>:3806:                                   ; preds = %3801
  %3807 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3808 = load i8*, i8** %3807, align 8
  %3809 = call i32 @strcmp(i8* %3808, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3810 = icmp eq i32 %3809, 0
  br i1 %3810, label %3877, label %3811

; <label>:3811:                                   ; preds = %3806
  %3812 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3813 = load i8*, i8** %3812, align 8
  %3814 = call i32 @strcmp(i8* %3813, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3815 = icmp eq i32 %3814, 0
  br i1 %3815, label %3876, label %3816

; <label>:3816:                                   ; preds = %3811
  %3817 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3818 = load i8*, i8** %3817, align 8
  %3819 = call i32 @strcmp(i8* %3818, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3820 = icmp eq i32 %3819, 0
  br i1 %3820, label %3875, label %3821

; <label>:3821:                                   ; preds = %3816
  %3822 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3823 = load i8*, i8** %3822, align 8
  %3824 = call i32 @strcmp(i8* %3823, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3825 = icmp eq i32 %3824, 0
  br i1 %3825, label %3874, label %3826

; <label>:3826:                                   ; preds = %3821
  %3827 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3828 = load i8*, i8** %3827, align 8
  %3829 = call i32 @strcmp(i8* %3828, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3830 = icmp eq i32 %3829, 0
  br i1 %3830, label %3873, label %3831

; <label>:3831:                                   ; preds = %3826
  %3832 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3833 = load i8*, i8** %3832, align 8
  %3834 = call i32 @strcmp(i8* %3833, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3835 = icmp eq i32 %3834, 0
  %3836 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3837 = load i8*, i8** %3836, align 8
  br i1 %3835, label %3872, label %3838

; <label>:3838:                                   ; preds = %3831
  %3839 = call i32 @strcmp(i8* %3837, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3840 = icmp eq i32 %3839, 0
  %3841 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3842 = load i8*, i8** %3841, align 8
  br i1 %3840, label %3871, label %3843

; <label>:3843:                                   ; preds = %3838
  %3844 = call i32 @strcmp(i8* %3842, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3845 = icmp eq i32 %3844, 0
  br i1 %3845, label %3870, label %3846

; <label>:3846:                                   ; preds = %3843
  %3847 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3848 = load i8*, i8** %3847, align 8
  %3849 = call i32 @strcmp(i8* %3848, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3850 = icmp eq i32 %3849, 0
  br i1 %3850, label %3869, label %3851

; <label>:3851:                                   ; preds = %3846
  %3852 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3853 = load i8*, i8** %3852, align 8
  %3854 = call i32 @strcmp(i8* %3853, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3855 = icmp eq i32 %3854, 0
  br i1 %3855, label %3866, label %3856

; <label>:3856:                                   ; preds = %3851
  %3857 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3858 = load i8*, i8** %3857, align 8
  %3859 = call i32 @strcmp(i8* %3858, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3860 = icmp eq i32 %3859, 0
  br i1 %3860, label %353, label %3861

; <label>:3861:                                   ; preds = %3856
  %3862 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 0
  %3863 = load i8*, i8** %3862, align 8
  %3864 = call i32 @strncmp(i8* %3863, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3865 = icmp eq i32 %3864, 0
  br i1 %3865, label %362, label %3884

; <label>:3866:                                   ; preds = %3851
  %3867 = load i32, i32* @verbosity, align 4
  %3868 = add nsw i32 %3867, 1
  store i32 %3868, i32* @verbosity, align 4
  br label %3884

; <label>:3869:                                   ; preds = %3846
  store i32 9, i32* @blockSize100k, align 4
  br label %3884

; <label>:3870:                                   ; preds = %3843
  store i32 1, i32* @blockSize100k, align 4
  br label %3884

; <label>:3871:                                   ; preds = %3838
  call void @redundant(i8* %3842)
  br label %3884

; <label>:3872:                                   ; preds = %3831
  call void @redundant(i8* %3837)
  br label %3884

; <label>:3873:                                   ; preds = %3826
  store i32 1, i32* @workFactor, align 4
  br label %3884

; <label>:3874:                                   ; preds = %3821
  call void @license()
  br label %3884

; <label>:3875:                                   ; preds = %3816
  call void @license()
  br label %3884

; <label>:3876:                                   ; preds = %3811
  store i8 0, i8* @noisy, align 1
  br label %3884

; <label>:3877:                                   ; preds = %3806
  store i8 1, i8* @smallMode, align 1
  br label %3884

; <label>:3878:                                   ; preds = %3801
  store i8 1, i8* @keepInputFiles, align 1
  br label %3884

; <label>:3879:                                   ; preds = %3796
  store i32 3, i32* @opMode, align 4
  br label %3884

; <label>:3880:                                   ; preds = %3791
  store i8 1, i8* @forceOverwrite, align 1
  br label %3884

; <label>:3881:                                   ; preds = %3786
  store i32 1, i32* @opMode, align 4
  br label %3884

; <label>:3882:                                   ; preds = %3781
  store i32 2, i32* @opMode, align 4
  br label %3884

; <label>:3883:                                   ; preds = %3776
  store i32 2, i32* @srcMode, align 4
  br label %3884

; <label>:3884:                                   ; preds = %3883, %3882, %3881, %3880, %3879, %3878, %3877, %3876, %3875, %3874, %3873, %3872, %3871, %3870, %3869, %3866, %3861
  call void @__loop_iteration_test___5()
  %3885 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3770, i32 0, i32 1
  %3886 = load %struct.zzzz*, %struct.zzzz** %3885, align 8
  %3887 = icmp ne %struct.zzzz* %3886, null
  br i1 %3887, label %.lr.ph39.9, label %.loopexit.loopexit

.lr.ph39.9:                                       ; preds = %3884
  call void @unroll_loop(i32 5)
  %3888 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3889 = load i8*, i8** %3888, align 8
  %3890 = call i32 @strcmp(i8* %3889, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3891 = icmp eq i32 %3890, 0
  br i1 %3891, label %.loopexit.loopexit, label %3892

; <label>:3892:                                   ; preds = %.lr.ph39.9
  %3893 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3894 = load i8*, i8** %3893, align 8
  %3895 = call i32 @strcmp(i8* %3894, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3896 = icmp eq i32 %3895, 0
  br i1 %3896, label %3999, label %3897

; <label>:3897:                                   ; preds = %3892
  %3898 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3899 = load i8*, i8** %3898, align 8
  %3900 = call i32 @strcmp(i8* %3899, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3901 = icmp eq i32 %3900, 0
  br i1 %3901, label %3998, label %3902

; <label>:3902:                                   ; preds = %3897
  %3903 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3904 = load i8*, i8** %3903, align 8
  %3905 = call i32 @strcmp(i8* %3904, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3906 = icmp eq i32 %3905, 0
  br i1 %3906, label %3997, label %3907

; <label>:3907:                                   ; preds = %3902
  %3908 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3909 = load i8*, i8** %3908, align 8
  %3910 = call i32 @strcmp(i8* %3909, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3911 = icmp eq i32 %3910, 0
  br i1 %3911, label %3996, label %3912

; <label>:3912:                                   ; preds = %3907
  %3913 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3914 = load i8*, i8** %3913, align 8
  %3915 = call i32 @strcmp(i8* %3914, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3916 = icmp eq i32 %3915, 0
  br i1 %3916, label %3995, label %3917

; <label>:3917:                                   ; preds = %3912
  %3918 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3919 = load i8*, i8** %3918, align 8
  %3920 = call i32 @strcmp(i8* %3919, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3921 = icmp eq i32 %3920, 0
  br i1 %3921, label %3994, label %3922

; <label>:3922:                                   ; preds = %3917
  %3923 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3924 = load i8*, i8** %3923, align 8
  %3925 = call i32 @strcmp(i8* %3924, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3926 = icmp eq i32 %3925, 0
  br i1 %3926, label %3993, label %3927

; <label>:3927:                                   ; preds = %3922
  %3928 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3929 = load i8*, i8** %3928, align 8
  %3930 = call i32 @strcmp(i8* %3929, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3931 = icmp eq i32 %3930, 0
  br i1 %3931, label %3992, label %3932

; <label>:3932:                                   ; preds = %3927
  %3933 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3934 = load i8*, i8** %3933, align 8
  %3935 = call i32 @strcmp(i8* %3934, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3936 = icmp eq i32 %3935, 0
  br i1 %3936, label %3991, label %3937

; <label>:3937:                                   ; preds = %3932
  %3938 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3939 = load i8*, i8** %3938, align 8
  %3940 = call i32 @strcmp(i8* %3939, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3941 = icmp eq i32 %3940, 0
  br i1 %3941, label %3990, label %3942

; <label>:3942:                                   ; preds = %3937
  %3943 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3944 = load i8*, i8** %3943, align 8
  %3945 = call i32 @strcmp(i8* %3944, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3946 = icmp eq i32 %3945, 0
  br i1 %3946, label %3989, label %3947

; <label>:3947:                                   ; preds = %3942
  %3948 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3949 = load i8*, i8** %3948, align 8
  %3950 = call i32 @strcmp(i8* %3949, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3951 = icmp eq i32 %3950, 0
  %3952 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3953 = load i8*, i8** %3952, align 8
  br i1 %3951, label %3988, label %3954

; <label>:3954:                                   ; preds = %3947
  %3955 = call i32 @strcmp(i8* %3953, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3956 = icmp eq i32 %3955, 0
  %3957 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3958 = load i8*, i8** %3957, align 8
  br i1 %3956, label %3987, label %3959

; <label>:3959:                                   ; preds = %3954
  %3960 = call i32 @strcmp(i8* %3958, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3961 = icmp eq i32 %3960, 0
  br i1 %3961, label %3986, label %3962

; <label>:3962:                                   ; preds = %3959
  %3963 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3964 = load i8*, i8** %3963, align 8
  %3965 = call i32 @strcmp(i8* %3964, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3966 = icmp eq i32 %3965, 0
  br i1 %3966, label %3985, label %3967

; <label>:3967:                                   ; preds = %3962
  %3968 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3969 = load i8*, i8** %3968, align 8
  %3970 = call i32 @strcmp(i8* %3969, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3971 = icmp eq i32 %3970, 0
  br i1 %3971, label %3982, label %3972

; <label>:3972:                                   ; preds = %3967
  %3973 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3974 = load i8*, i8** %3973, align 8
  %3975 = call i32 @strcmp(i8* %3974, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3976 = icmp eq i32 %3975, 0
  br i1 %3976, label %353, label %3977

; <label>:3977:                                   ; preds = %3972
  %3978 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 0
  %3979 = load i8*, i8** %3978, align 8
  %3980 = call i32 @strncmp(i8* %3979, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3981 = icmp eq i32 %3980, 0
  br i1 %3981, label %362, label %4000

; <label>:3982:                                   ; preds = %3967
  %3983 = load i32, i32* @verbosity, align 4
  %3984 = add nsw i32 %3983, 1
  store i32 %3984, i32* @verbosity, align 4
  br label %4000

; <label>:3985:                                   ; preds = %3962
  store i32 9, i32* @blockSize100k, align 4
  br label %4000

; <label>:3986:                                   ; preds = %3959
  store i32 1, i32* @blockSize100k, align 4
  br label %4000

; <label>:3987:                                   ; preds = %3954
  call void @redundant(i8* %3958)
  br label %4000

; <label>:3988:                                   ; preds = %3947
  call void @redundant(i8* %3953)
  br label %4000

; <label>:3989:                                   ; preds = %3942
  store i32 1, i32* @workFactor, align 4
  br label %4000

; <label>:3990:                                   ; preds = %3937
  call void @license()
  br label %4000

; <label>:3991:                                   ; preds = %3932
  call void @license()
  br label %4000

; <label>:3992:                                   ; preds = %3927
  store i8 0, i8* @noisy, align 1
  br label %4000

; <label>:3993:                                   ; preds = %3922
  store i8 1, i8* @smallMode, align 1
  br label %4000

; <label>:3994:                                   ; preds = %3917
  store i8 1, i8* @keepInputFiles, align 1
  br label %4000

; <label>:3995:                                   ; preds = %3912
  store i32 3, i32* @opMode, align 4
  br label %4000

; <label>:3996:                                   ; preds = %3907
  store i8 1, i8* @forceOverwrite, align 1
  br label %4000

; <label>:3997:                                   ; preds = %3902
  store i32 1, i32* @opMode, align 4
  br label %4000

; <label>:3998:                                   ; preds = %3897
  store i32 2, i32* @opMode, align 4
  br label %4000

; <label>:3999:                                   ; preds = %3892
  store i32 2, i32* @srcMode, align 4
  br label %4000

; <label>:4000:                                   ; preds = %3999, %3998, %3997, %3996, %3995, %3994, %3993, %3992, %3991, %3990, %3989, %3988, %3987, %3986, %3985, %3982, %3977
  call void @__loop_iteration_test___5()
  %4001 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3886, i32 0, i32 1
  %4002 = load %struct.zzzz*, %struct.zzzz** %4001, align 8
  %4003 = icmp ne %struct.zzzz* %4002, null
  br i1 %4003, label %.lr.ph39.10, label %.loopexit.loopexit

.lr.ph39.10:                                      ; preds = %4000
  call void @unroll_loop(i32 5)
  %4004 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4005 = load i8*, i8** %4004, align 8
  %4006 = call i32 @strcmp(i8* %4005, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4007 = icmp eq i32 %4006, 0
  br i1 %4007, label %.loopexit.loopexit, label %4008

; <label>:4008:                                   ; preds = %.lr.ph39.10
  %4009 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4010 = load i8*, i8** %4009, align 8
  %4011 = call i32 @strcmp(i8* %4010, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4012 = icmp eq i32 %4011, 0
  br i1 %4012, label %4115, label %4013

; <label>:4013:                                   ; preds = %4008
  %4014 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4015 = load i8*, i8** %4014, align 8
  %4016 = call i32 @strcmp(i8* %4015, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4017 = icmp eq i32 %4016, 0
  br i1 %4017, label %4114, label %4018

; <label>:4018:                                   ; preds = %4013
  %4019 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4020 = load i8*, i8** %4019, align 8
  %4021 = call i32 @strcmp(i8* %4020, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4022 = icmp eq i32 %4021, 0
  br i1 %4022, label %4113, label %4023

; <label>:4023:                                   ; preds = %4018
  %4024 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4025 = load i8*, i8** %4024, align 8
  %4026 = call i32 @strcmp(i8* %4025, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4027 = icmp eq i32 %4026, 0
  br i1 %4027, label %4112, label %4028

; <label>:4028:                                   ; preds = %4023
  %4029 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4030 = load i8*, i8** %4029, align 8
  %4031 = call i32 @strcmp(i8* %4030, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4032 = icmp eq i32 %4031, 0
  br i1 %4032, label %4111, label %4033

; <label>:4033:                                   ; preds = %4028
  %4034 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4035 = load i8*, i8** %4034, align 8
  %4036 = call i32 @strcmp(i8* %4035, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4037 = icmp eq i32 %4036, 0
  br i1 %4037, label %4110, label %4038

; <label>:4038:                                   ; preds = %4033
  %4039 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4040 = load i8*, i8** %4039, align 8
  %4041 = call i32 @strcmp(i8* %4040, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4042 = icmp eq i32 %4041, 0
  br i1 %4042, label %4109, label %4043

; <label>:4043:                                   ; preds = %4038
  %4044 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4045 = load i8*, i8** %4044, align 8
  %4046 = call i32 @strcmp(i8* %4045, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4047 = icmp eq i32 %4046, 0
  br i1 %4047, label %4108, label %4048

; <label>:4048:                                   ; preds = %4043
  %4049 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4050 = load i8*, i8** %4049, align 8
  %4051 = call i32 @strcmp(i8* %4050, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4052 = icmp eq i32 %4051, 0
  br i1 %4052, label %4107, label %4053

; <label>:4053:                                   ; preds = %4048
  %4054 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4055 = load i8*, i8** %4054, align 8
  %4056 = call i32 @strcmp(i8* %4055, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4057 = icmp eq i32 %4056, 0
  br i1 %4057, label %4106, label %4058

; <label>:4058:                                   ; preds = %4053
  %4059 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4060 = load i8*, i8** %4059, align 8
  %4061 = call i32 @strcmp(i8* %4060, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4062 = icmp eq i32 %4061, 0
  br i1 %4062, label %4105, label %4063

; <label>:4063:                                   ; preds = %4058
  %4064 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4065 = load i8*, i8** %4064, align 8
  %4066 = call i32 @strcmp(i8* %4065, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4067 = icmp eq i32 %4066, 0
  %4068 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4069 = load i8*, i8** %4068, align 8
  br i1 %4067, label %4104, label %4070

; <label>:4070:                                   ; preds = %4063
  %4071 = call i32 @strcmp(i8* %4069, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4072 = icmp eq i32 %4071, 0
  %4073 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4074 = load i8*, i8** %4073, align 8
  br i1 %4072, label %4103, label %4075

; <label>:4075:                                   ; preds = %4070
  %4076 = call i32 @strcmp(i8* %4074, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4077 = icmp eq i32 %4076, 0
  br i1 %4077, label %4102, label %4078

; <label>:4078:                                   ; preds = %4075
  %4079 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4080 = load i8*, i8** %4079, align 8
  %4081 = call i32 @strcmp(i8* %4080, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4082 = icmp eq i32 %4081, 0
  br i1 %4082, label %4101, label %4083

; <label>:4083:                                   ; preds = %4078
  %4084 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4085 = load i8*, i8** %4084, align 8
  %4086 = call i32 @strcmp(i8* %4085, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4087 = icmp eq i32 %4086, 0
  br i1 %4087, label %4098, label %4088

; <label>:4088:                                   ; preds = %4083
  %4089 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4090 = load i8*, i8** %4089, align 8
  %4091 = call i32 @strcmp(i8* %4090, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4092 = icmp eq i32 %4091, 0
  br i1 %4092, label %353, label %4093

; <label>:4093:                                   ; preds = %4088
  %4094 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 0
  %4095 = load i8*, i8** %4094, align 8
  %4096 = call i32 @strncmp(i8* %4095, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4097 = icmp eq i32 %4096, 0
  br i1 %4097, label %362, label %4116

; <label>:4098:                                   ; preds = %4083
  %4099 = load i32, i32* @verbosity, align 4
  %4100 = add nsw i32 %4099, 1
  store i32 %4100, i32* @verbosity, align 4
  br label %4116

; <label>:4101:                                   ; preds = %4078
  store i32 9, i32* @blockSize100k, align 4
  br label %4116

; <label>:4102:                                   ; preds = %4075
  store i32 1, i32* @blockSize100k, align 4
  br label %4116

; <label>:4103:                                   ; preds = %4070
  call void @redundant(i8* %4074)
  br label %4116

; <label>:4104:                                   ; preds = %4063
  call void @redundant(i8* %4069)
  br label %4116

; <label>:4105:                                   ; preds = %4058
  store i32 1, i32* @workFactor, align 4
  br label %4116

; <label>:4106:                                   ; preds = %4053
  call void @license()
  br label %4116

; <label>:4107:                                   ; preds = %4048
  call void @license()
  br label %4116

; <label>:4108:                                   ; preds = %4043
  store i8 0, i8* @noisy, align 1
  br label %4116

; <label>:4109:                                   ; preds = %4038
  store i8 1, i8* @smallMode, align 1
  br label %4116

; <label>:4110:                                   ; preds = %4033
  store i8 1, i8* @keepInputFiles, align 1
  br label %4116

; <label>:4111:                                   ; preds = %4028
  store i32 3, i32* @opMode, align 4
  br label %4116

; <label>:4112:                                   ; preds = %4023
  store i8 1, i8* @forceOverwrite, align 1
  br label %4116

; <label>:4113:                                   ; preds = %4018
  store i32 1, i32* @opMode, align 4
  br label %4116

; <label>:4114:                                   ; preds = %4013
  store i32 2, i32* @opMode, align 4
  br label %4116

; <label>:4115:                                   ; preds = %4008
  store i32 2, i32* @srcMode, align 4
  br label %4116

; <label>:4116:                                   ; preds = %4115, %4114, %4113, %4112, %4111, %4110, %4109, %4108, %4107, %4106, %4105, %4104, %4103, %4102, %4101, %4098, %4093
  call void @__loop_iteration_test___5()
  %4117 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4002, i32 0, i32 1
  %4118 = load %struct.zzzz*, %struct.zzzz** %4117, align 8
  %4119 = icmp ne %struct.zzzz* %4118, null
  br i1 %4119, label %.lr.ph39.11, label %.loopexit.loopexit

.lr.ph39.11:                                      ; preds = %4116
  call void @unroll_loop(i32 5)
  %4120 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4121 = load i8*, i8** %4120, align 8
  %4122 = call i32 @strcmp(i8* %4121, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4123 = icmp eq i32 %4122, 0
  br i1 %4123, label %.loopexit.loopexit, label %4124

; <label>:4124:                                   ; preds = %.lr.ph39.11
  %4125 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4126 = load i8*, i8** %4125, align 8
  %4127 = call i32 @strcmp(i8* %4126, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4128 = icmp eq i32 %4127, 0
  br i1 %4128, label %4231, label %4129

; <label>:4129:                                   ; preds = %4124
  %4130 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4131 = load i8*, i8** %4130, align 8
  %4132 = call i32 @strcmp(i8* %4131, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4133 = icmp eq i32 %4132, 0
  br i1 %4133, label %4230, label %4134

; <label>:4134:                                   ; preds = %4129
  %4135 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4136 = load i8*, i8** %4135, align 8
  %4137 = call i32 @strcmp(i8* %4136, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4138 = icmp eq i32 %4137, 0
  br i1 %4138, label %4229, label %4139

; <label>:4139:                                   ; preds = %4134
  %4140 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4141 = load i8*, i8** %4140, align 8
  %4142 = call i32 @strcmp(i8* %4141, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4143 = icmp eq i32 %4142, 0
  br i1 %4143, label %4228, label %4144

; <label>:4144:                                   ; preds = %4139
  %4145 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4146 = load i8*, i8** %4145, align 8
  %4147 = call i32 @strcmp(i8* %4146, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4148 = icmp eq i32 %4147, 0
  br i1 %4148, label %4227, label %4149

; <label>:4149:                                   ; preds = %4144
  %4150 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4151 = load i8*, i8** %4150, align 8
  %4152 = call i32 @strcmp(i8* %4151, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4153 = icmp eq i32 %4152, 0
  br i1 %4153, label %4226, label %4154

; <label>:4154:                                   ; preds = %4149
  %4155 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4156 = load i8*, i8** %4155, align 8
  %4157 = call i32 @strcmp(i8* %4156, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4158 = icmp eq i32 %4157, 0
  br i1 %4158, label %4225, label %4159

; <label>:4159:                                   ; preds = %4154
  %4160 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4161 = load i8*, i8** %4160, align 8
  %4162 = call i32 @strcmp(i8* %4161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4163 = icmp eq i32 %4162, 0
  br i1 %4163, label %4224, label %4164

; <label>:4164:                                   ; preds = %4159
  %4165 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4166 = load i8*, i8** %4165, align 8
  %4167 = call i32 @strcmp(i8* %4166, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4168 = icmp eq i32 %4167, 0
  br i1 %4168, label %4223, label %4169

; <label>:4169:                                   ; preds = %4164
  %4170 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4171 = load i8*, i8** %4170, align 8
  %4172 = call i32 @strcmp(i8* %4171, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4173 = icmp eq i32 %4172, 0
  br i1 %4173, label %4222, label %4174

; <label>:4174:                                   ; preds = %4169
  %4175 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4176 = load i8*, i8** %4175, align 8
  %4177 = call i32 @strcmp(i8* %4176, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4178 = icmp eq i32 %4177, 0
  br i1 %4178, label %4221, label %4179

; <label>:4179:                                   ; preds = %4174
  %4180 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4181 = load i8*, i8** %4180, align 8
  %4182 = call i32 @strcmp(i8* %4181, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4183 = icmp eq i32 %4182, 0
  %4184 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4185 = load i8*, i8** %4184, align 8
  br i1 %4183, label %4220, label %4186

; <label>:4186:                                   ; preds = %4179
  %4187 = call i32 @strcmp(i8* %4185, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4188 = icmp eq i32 %4187, 0
  %4189 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4190 = load i8*, i8** %4189, align 8
  br i1 %4188, label %4219, label %4191

; <label>:4191:                                   ; preds = %4186
  %4192 = call i32 @strcmp(i8* %4190, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4193 = icmp eq i32 %4192, 0
  br i1 %4193, label %4218, label %4194

; <label>:4194:                                   ; preds = %4191
  %4195 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4196 = load i8*, i8** %4195, align 8
  %4197 = call i32 @strcmp(i8* %4196, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4198 = icmp eq i32 %4197, 0
  br i1 %4198, label %4217, label %4199

; <label>:4199:                                   ; preds = %4194
  %4200 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4201 = load i8*, i8** %4200, align 8
  %4202 = call i32 @strcmp(i8* %4201, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4203 = icmp eq i32 %4202, 0
  br i1 %4203, label %4214, label %4204

; <label>:4204:                                   ; preds = %4199
  %4205 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4206 = load i8*, i8** %4205, align 8
  %4207 = call i32 @strcmp(i8* %4206, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4208 = icmp eq i32 %4207, 0
  br i1 %4208, label %353, label %4209

; <label>:4209:                                   ; preds = %4204
  %4210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 0
  %4211 = load i8*, i8** %4210, align 8
  %4212 = call i32 @strncmp(i8* %4211, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4213 = icmp eq i32 %4212, 0
  br i1 %4213, label %362, label %4232

; <label>:4214:                                   ; preds = %4199
  %4215 = load i32, i32* @verbosity, align 4
  %4216 = add nsw i32 %4215, 1
  store i32 %4216, i32* @verbosity, align 4
  br label %4232

; <label>:4217:                                   ; preds = %4194
  store i32 9, i32* @blockSize100k, align 4
  br label %4232

; <label>:4218:                                   ; preds = %4191
  store i32 1, i32* @blockSize100k, align 4
  br label %4232

; <label>:4219:                                   ; preds = %4186
  call void @redundant(i8* %4190)
  br label %4232

; <label>:4220:                                   ; preds = %4179
  call void @redundant(i8* %4185)
  br label %4232

; <label>:4221:                                   ; preds = %4174
  store i32 1, i32* @workFactor, align 4
  br label %4232

; <label>:4222:                                   ; preds = %4169
  call void @license()
  br label %4232

; <label>:4223:                                   ; preds = %4164
  call void @license()
  br label %4232

; <label>:4224:                                   ; preds = %4159
  store i8 0, i8* @noisy, align 1
  br label %4232

; <label>:4225:                                   ; preds = %4154
  store i8 1, i8* @smallMode, align 1
  br label %4232

; <label>:4226:                                   ; preds = %4149
  store i8 1, i8* @keepInputFiles, align 1
  br label %4232

; <label>:4227:                                   ; preds = %4144
  store i32 3, i32* @opMode, align 4
  br label %4232

; <label>:4228:                                   ; preds = %4139
  store i8 1, i8* @forceOverwrite, align 1
  br label %4232

; <label>:4229:                                   ; preds = %4134
  store i32 1, i32* @opMode, align 4
  br label %4232

; <label>:4230:                                   ; preds = %4129
  store i32 2, i32* @opMode, align 4
  br label %4232

; <label>:4231:                                   ; preds = %4124
  store i32 2, i32* @srcMode, align 4
  br label %4232

; <label>:4232:                                   ; preds = %4231, %4230, %4229, %4228, %4227, %4226, %4225, %4224, %4223, %4222, %4221, %4220, %4219, %4218, %4217, %4214, %4209
  call void @__loop_iteration_test___5()
  %4233 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4118, i32 0, i32 1
  %4234 = load %struct.zzzz*, %struct.zzzz** %4233, align 8
  %4235 = icmp ne %struct.zzzz* %4234, null
  br i1 %4235, label %.lr.ph39.12, label %.loopexit.loopexit

.lr.ph39.12:                                      ; preds = %4232
  call void @unroll_loop(i32 5)
  %4236 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4237 = load i8*, i8** %4236, align 8
  %4238 = call i32 @strcmp(i8* %4237, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4239 = icmp eq i32 %4238, 0
  br i1 %4239, label %.loopexit.loopexit, label %4240

; <label>:4240:                                   ; preds = %.lr.ph39.12
  %4241 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4242 = load i8*, i8** %4241, align 8
  %4243 = call i32 @strcmp(i8* %4242, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4244 = icmp eq i32 %4243, 0
  br i1 %4244, label %4347, label %4245

; <label>:4245:                                   ; preds = %4240
  %4246 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4247 = load i8*, i8** %4246, align 8
  %4248 = call i32 @strcmp(i8* %4247, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4249 = icmp eq i32 %4248, 0
  br i1 %4249, label %4346, label %4250

; <label>:4250:                                   ; preds = %4245
  %4251 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4252 = load i8*, i8** %4251, align 8
  %4253 = call i32 @strcmp(i8* %4252, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4254 = icmp eq i32 %4253, 0
  br i1 %4254, label %4345, label %4255

; <label>:4255:                                   ; preds = %4250
  %4256 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4257 = load i8*, i8** %4256, align 8
  %4258 = call i32 @strcmp(i8* %4257, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4259 = icmp eq i32 %4258, 0
  br i1 %4259, label %4344, label %4260

; <label>:4260:                                   ; preds = %4255
  %4261 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4262 = load i8*, i8** %4261, align 8
  %4263 = call i32 @strcmp(i8* %4262, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4264 = icmp eq i32 %4263, 0
  br i1 %4264, label %4343, label %4265

; <label>:4265:                                   ; preds = %4260
  %4266 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4267 = load i8*, i8** %4266, align 8
  %4268 = call i32 @strcmp(i8* %4267, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4269 = icmp eq i32 %4268, 0
  br i1 %4269, label %4342, label %4270

; <label>:4270:                                   ; preds = %4265
  %4271 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4272 = load i8*, i8** %4271, align 8
  %4273 = call i32 @strcmp(i8* %4272, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4274 = icmp eq i32 %4273, 0
  br i1 %4274, label %4341, label %4275

; <label>:4275:                                   ; preds = %4270
  %4276 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4277 = load i8*, i8** %4276, align 8
  %4278 = call i32 @strcmp(i8* %4277, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4279 = icmp eq i32 %4278, 0
  br i1 %4279, label %4340, label %4280

; <label>:4280:                                   ; preds = %4275
  %4281 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4282 = load i8*, i8** %4281, align 8
  %4283 = call i32 @strcmp(i8* %4282, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4284 = icmp eq i32 %4283, 0
  br i1 %4284, label %4339, label %4285

; <label>:4285:                                   ; preds = %4280
  %4286 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4287 = load i8*, i8** %4286, align 8
  %4288 = call i32 @strcmp(i8* %4287, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4289 = icmp eq i32 %4288, 0
  br i1 %4289, label %4338, label %4290

; <label>:4290:                                   ; preds = %4285
  %4291 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4292 = load i8*, i8** %4291, align 8
  %4293 = call i32 @strcmp(i8* %4292, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4294 = icmp eq i32 %4293, 0
  br i1 %4294, label %4337, label %4295

; <label>:4295:                                   ; preds = %4290
  %4296 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4297 = load i8*, i8** %4296, align 8
  %4298 = call i32 @strcmp(i8* %4297, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4299 = icmp eq i32 %4298, 0
  %4300 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4301 = load i8*, i8** %4300, align 8
  br i1 %4299, label %4336, label %4302

; <label>:4302:                                   ; preds = %4295
  %4303 = call i32 @strcmp(i8* %4301, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4304 = icmp eq i32 %4303, 0
  %4305 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4306 = load i8*, i8** %4305, align 8
  br i1 %4304, label %4335, label %4307

; <label>:4307:                                   ; preds = %4302
  %4308 = call i32 @strcmp(i8* %4306, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4309 = icmp eq i32 %4308, 0
  br i1 %4309, label %4334, label %4310

; <label>:4310:                                   ; preds = %4307
  %4311 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4312 = load i8*, i8** %4311, align 8
  %4313 = call i32 @strcmp(i8* %4312, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4314 = icmp eq i32 %4313, 0
  br i1 %4314, label %4333, label %4315

; <label>:4315:                                   ; preds = %4310
  %4316 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4317 = load i8*, i8** %4316, align 8
  %4318 = call i32 @strcmp(i8* %4317, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4319 = icmp eq i32 %4318, 0
  br i1 %4319, label %4330, label %4320

; <label>:4320:                                   ; preds = %4315
  %4321 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4322 = load i8*, i8** %4321, align 8
  %4323 = call i32 @strcmp(i8* %4322, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4324 = icmp eq i32 %4323, 0
  br i1 %4324, label %353, label %4325

; <label>:4325:                                   ; preds = %4320
  %4326 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 0
  %4327 = load i8*, i8** %4326, align 8
  %4328 = call i32 @strncmp(i8* %4327, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4329 = icmp eq i32 %4328, 0
  br i1 %4329, label %362, label %4348

; <label>:4330:                                   ; preds = %4315
  %4331 = load i32, i32* @verbosity, align 4
  %4332 = add nsw i32 %4331, 1
  store i32 %4332, i32* @verbosity, align 4
  br label %4348

; <label>:4333:                                   ; preds = %4310
  store i32 9, i32* @blockSize100k, align 4
  br label %4348

; <label>:4334:                                   ; preds = %4307
  store i32 1, i32* @blockSize100k, align 4
  br label %4348

; <label>:4335:                                   ; preds = %4302
  call void @redundant(i8* %4306)
  br label %4348

; <label>:4336:                                   ; preds = %4295
  call void @redundant(i8* %4301)
  br label %4348

; <label>:4337:                                   ; preds = %4290
  store i32 1, i32* @workFactor, align 4
  br label %4348

; <label>:4338:                                   ; preds = %4285
  call void @license()
  br label %4348

; <label>:4339:                                   ; preds = %4280
  call void @license()
  br label %4348

; <label>:4340:                                   ; preds = %4275
  store i8 0, i8* @noisy, align 1
  br label %4348

; <label>:4341:                                   ; preds = %4270
  store i8 1, i8* @smallMode, align 1
  br label %4348

; <label>:4342:                                   ; preds = %4265
  store i8 1, i8* @keepInputFiles, align 1
  br label %4348

; <label>:4343:                                   ; preds = %4260
  store i32 3, i32* @opMode, align 4
  br label %4348

; <label>:4344:                                   ; preds = %4255
  store i8 1, i8* @forceOverwrite, align 1
  br label %4348

; <label>:4345:                                   ; preds = %4250
  store i32 1, i32* @opMode, align 4
  br label %4348

; <label>:4346:                                   ; preds = %4245
  store i32 2, i32* @opMode, align 4
  br label %4348

; <label>:4347:                                   ; preds = %4240
  store i32 2, i32* @srcMode, align 4
  br label %4348

; <label>:4348:                                   ; preds = %4347, %4346, %4345, %4344, %4343, %4342, %4341, %4340, %4339, %4338, %4337, %4336, %4335, %4334, %4333, %4330, %4325
  call void @__loop_iteration_test___5()
  %4349 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4234, i32 0, i32 1
  %4350 = load %struct.zzzz*, %struct.zzzz** %4349, align 8
  %4351 = icmp ne %struct.zzzz* %4350, null
  br i1 %4351, label %.lr.ph39.13, label %.loopexit.loopexit

.lr.ph39.13:                                      ; preds = %4348
  call void @unroll_loop(i32 5)
  %4352 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4353 = load i8*, i8** %4352, align 8
  %4354 = call i32 @strcmp(i8* %4353, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4355 = icmp eq i32 %4354, 0
  br i1 %4355, label %.loopexit.loopexit, label %4356

; <label>:4356:                                   ; preds = %.lr.ph39.13
  %4357 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4358 = load i8*, i8** %4357, align 8
  %4359 = call i32 @strcmp(i8* %4358, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4360 = icmp eq i32 %4359, 0
  br i1 %4360, label %4463, label %4361

; <label>:4361:                                   ; preds = %4356
  %4362 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4363 = load i8*, i8** %4362, align 8
  %4364 = call i32 @strcmp(i8* %4363, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4365 = icmp eq i32 %4364, 0
  br i1 %4365, label %4462, label %4366

; <label>:4366:                                   ; preds = %4361
  %4367 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4368 = load i8*, i8** %4367, align 8
  %4369 = call i32 @strcmp(i8* %4368, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4370 = icmp eq i32 %4369, 0
  br i1 %4370, label %4461, label %4371

; <label>:4371:                                   ; preds = %4366
  %4372 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4373 = load i8*, i8** %4372, align 8
  %4374 = call i32 @strcmp(i8* %4373, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4375 = icmp eq i32 %4374, 0
  br i1 %4375, label %4460, label %4376

; <label>:4376:                                   ; preds = %4371
  %4377 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4378 = load i8*, i8** %4377, align 8
  %4379 = call i32 @strcmp(i8* %4378, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4380 = icmp eq i32 %4379, 0
  br i1 %4380, label %4459, label %4381

; <label>:4381:                                   ; preds = %4376
  %4382 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4383 = load i8*, i8** %4382, align 8
  %4384 = call i32 @strcmp(i8* %4383, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4385 = icmp eq i32 %4384, 0
  br i1 %4385, label %4458, label %4386

; <label>:4386:                                   ; preds = %4381
  %4387 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4388 = load i8*, i8** %4387, align 8
  %4389 = call i32 @strcmp(i8* %4388, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4390 = icmp eq i32 %4389, 0
  br i1 %4390, label %4457, label %4391

; <label>:4391:                                   ; preds = %4386
  %4392 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4393 = load i8*, i8** %4392, align 8
  %4394 = call i32 @strcmp(i8* %4393, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4395 = icmp eq i32 %4394, 0
  br i1 %4395, label %4456, label %4396

; <label>:4396:                                   ; preds = %4391
  %4397 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4398 = load i8*, i8** %4397, align 8
  %4399 = call i32 @strcmp(i8* %4398, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4400 = icmp eq i32 %4399, 0
  br i1 %4400, label %4455, label %4401

; <label>:4401:                                   ; preds = %4396
  %4402 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4403 = load i8*, i8** %4402, align 8
  %4404 = call i32 @strcmp(i8* %4403, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4405 = icmp eq i32 %4404, 0
  br i1 %4405, label %4454, label %4406

; <label>:4406:                                   ; preds = %4401
  %4407 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4408 = load i8*, i8** %4407, align 8
  %4409 = call i32 @strcmp(i8* %4408, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4410 = icmp eq i32 %4409, 0
  br i1 %4410, label %4453, label %4411

; <label>:4411:                                   ; preds = %4406
  %4412 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4413 = load i8*, i8** %4412, align 8
  %4414 = call i32 @strcmp(i8* %4413, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4415 = icmp eq i32 %4414, 0
  %4416 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4417 = load i8*, i8** %4416, align 8
  br i1 %4415, label %4452, label %4418

; <label>:4418:                                   ; preds = %4411
  %4419 = call i32 @strcmp(i8* %4417, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4420 = icmp eq i32 %4419, 0
  %4421 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4422 = load i8*, i8** %4421, align 8
  br i1 %4420, label %4451, label %4423

; <label>:4423:                                   ; preds = %4418
  %4424 = call i32 @strcmp(i8* %4422, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4425 = icmp eq i32 %4424, 0
  br i1 %4425, label %4450, label %4426

; <label>:4426:                                   ; preds = %4423
  %4427 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4428 = load i8*, i8** %4427, align 8
  %4429 = call i32 @strcmp(i8* %4428, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4430 = icmp eq i32 %4429, 0
  br i1 %4430, label %4449, label %4431

; <label>:4431:                                   ; preds = %4426
  %4432 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4433 = load i8*, i8** %4432, align 8
  %4434 = call i32 @strcmp(i8* %4433, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4435 = icmp eq i32 %4434, 0
  br i1 %4435, label %4446, label %4436

; <label>:4436:                                   ; preds = %4431
  %4437 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4438 = load i8*, i8** %4437, align 8
  %4439 = call i32 @strcmp(i8* %4438, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4440 = icmp eq i32 %4439, 0
  br i1 %4440, label %353, label %4441

; <label>:4441:                                   ; preds = %4436
  %4442 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 0
  %4443 = load i8*, i8** %4442, align 8
  %4444 = call i32 @strncmp(i8* %4443, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4445 = icmp eq i32 %4444, 0
  br i1 %4445, label %362, label %4464

; <label>:4446:                                   ; preds = %4431
  %4447 = load i32, i32* @verbosity, align 4
  %4448 = add nsw i32 %4447, 1
  store i32 %4448, i32* @verbosity, align 4
  br label %4464

; <label>:4449:                                   ; preds = %4426
  store i32 9, i32* @blockSize100k, align 4
  br label %4464

; <label>:4450:                                   ; preds = %4423
  store i32 1, i32* @blockSize100k, align 4
  br label %4464

; <label>:4451:                                   ; preds = %4418
  call void @redundant(i8* %4422)
  br label %4464

; <label>:4452:                                   ; preds = %4411
  call void @redundant(i8* %4417)
  br label %4464

; <label>:4453:                                   ; preds = %4406
  store i32 1, i32* @workFactor, align 4
  br label %4464

; <label>:4454:                                   ; preds = %4401
  call void @license()
  br label %4464

; <label>:4455:                                   ; preds = %4396
  call void @license()
  br label %4464

; <label>:4456:                                   ; preds = %4391
  store i8 0, i8* @noisy, align 1
  br label %4464

; <label>:4457:                                   ; preds = %4386
  store i8 1, i8* @smallMode, align 1
  br label %4464

; <label>:4458:                                   ; preds = %4381
  store i8 1, i8* @keepInputFiles, align 1
  br label %4464

; <label>:4459:                                   ; preds = %4376
  store i32 3, i32* @opMode, align 4
  br label %4464

; <label>:4460:                                   ; preds = %4371
  store i8 1, i8* @forceOverwrite, align 1
  br label %4464

; <label>:4461:                                   ; preds = %4366
  store i32 1, i32* @opMode, align 4
  br label %4464

; <label>:4462:                                   ; preds = %4361
  store i32 2, i32* @opMode, align 4
  br label %4464

; <label>:4463:                                   ; preds = %4356
  store i32 2, i32* @srcMode, align 4
  br label %4464

; <label>:4464:                                   ; preds = %4463, %4462, %4461, %4460, %4459, %4458, %4457, %4456, %4455, %4454, %4453, %4452, %4451, %4450, %4449, %4446, %4441
  call void @__loop_iteration_test___5()
  %4465 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4350, i32 0, i32 1
  %4466 = load %struct.zzzz*, %struct.zzzz** %4465, align 8
  %4467 = icmp ne %struct.zzzz* %4466, null
  br i1 %4467, label %.lr.ph39.14, label %.loopexit.loopexit

.lr.ph39.14:                                      ; preds = %4464
  call void @unroll_loop(i32 5)
  %4468 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4469 = load i8*, i8** %4468, align 8
  %4470 = call i32 @strcmp(i8* %4469, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4471 = icmp eq i32 %4470, 0
  br i1 %4471, label %.loopexit.loopexit, label %4472

; <label>:4472:                                   ; preds = %.lr.ph39.14
  %4473 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4474 = load i8*, i8** %4473, align 8
  %4475 = call i32 @strcmp(i8* %4474, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4476 = icmp eq i32 %4475, 0
  br i1 %4476, label %4579, label %4477

; <label>:4477:                                   ; preds = %4472
  %4478 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4479 = load i8*, i8** %4478, align 8
  %4480 = call i32 @strcmp(i8* %4479, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4481 = icmp eq i32 %4480, 0
  br i1 %4481, label %4578, label %4482

; <label>:4482:                                   ; preds = %4477
  %4483 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4484 = load i8*, i8** %4483, align 8
  %4485 = call i32 @strcmp(i8* %4484, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4486 = icmp eq i32 %4485, 0
  br i1 %4486, label %4577, label %4487

; <label>:4487:                                   ; preds = %4482
  %4488 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4489 = load i8*, i8** %4488, align 8
  %4490 = call i32 @strcmp(i8* %4489, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4491 = icmp eq i32 %4490, 0
  br i1 %4491, label %4576, label %4492

; <label>:4492:                                   ; preds = %4487
  %4493 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4494 = load i8*, i8** %4493, align 8
  %4495 = call i32 @strcmp(i8* %4494, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4496 = icmp eq i32 %4495, 0
  br i1 %4496, label %4575, label %4497

; <label>:4497:                                   ; preds = %4492
  %4498 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4499 = load i8*, i8** %4498, align 8
  %4500 = call i32 @strcmp(i8* %4499, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4501 = icmp eq i32 %4500, 0
  br i1 %4501, label %4574, label %4502

; <label>:4502:                                   ; preds = %4497
  %4503 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4504 = load i8*, i8** %4503, align 8
  %4505 = call i32 @strcmp(i8* %4504, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4506 = icmp eq i32 %4505, 0
  br i1 %4506, label %4573, label %4507

; <label>:4507:                                   ; preds = %4502
  %4508 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4509 = load i8*, i8** %4508, align 8
  %4510 = call i32 @strcmp(i8* %4509, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4511 = icmp eq i32 %4510, 0
  br i1 %4511, label %4572, label %4512

; <label>:4512:                                   ; preds = %4507
  %4513 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4514 = load i8*, i8** %4513, align 8
  %4515 = call i32 @strcmp(i8* %4514, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4516 = icmp eq i32 %4515, 0
  br i1 %4516, label %4571, label %4517

; <label>:4517:                                   ; preds = %4512
  %4518 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4519 = load i8*, i8** %4518, align 8
  %4520 = call i32 @strcmp(i8* %4519, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4521 = icmp eq i32 %4520, 0
  br i1 %4521, label %4570, label %4522

; <label>:4522:                                   ; preds = %4517
  %4523 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4524 = load i8*, i8** %4523, align 8
  %4525 = call i32 @strcmp(i8* %4524, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4526 = icmp eq i32 %4525, 0
  br i1 %4526, label %4569, label %4527

; <label>:4527:                                   ; preds = %4522
  %4528 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4529 = load i8*, i8** %4528, align 8
  %4530 = call i32 @strcmp(i8* %4529, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4531 = icmp eq i32 %4530, 0
  %4532 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4533 = load i8*, i8** %4532, align 8
  br i1 %4531, label %4568, label %4534

; <label>:4534:                                   ; preds = %4527
  %4535 = call i32 @strcmp(i8* %4533, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4536 = icmp eq i32 %4535, 0
  %4537 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4538 = load i8*, i8** %4537, align 8
  br i1 %4536, label %4567, label %4539

; <label>:4539:                                   ; preds = %4534
  %4540 = call i32 @strcmp(i8* %4538, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4541 = icmp eq i32 %4540, 0
  br i1 %4541, label %4566, label %4542

; <label>:4542:                                   ; preds = %4539
  %4543 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4544 = load i8*, i8** %4543, align 8
  %4545 = call i32 @strcmp(i8* %4544, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4546 = icmp eq i32 %4545, 0
  br i1 %4546, label %4565, label %4547

; <label>:4547:                                   ; preds = %4542
  %4548 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4549 = load i8*, i8** %4548, align 8
  %4550 = call i32 @strcmp(i8* %4549, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4551 = icmp eq i32 %4550, 0
  br i1 %4551, label %4562, label %4552

; <label>:4552:                                   ; preds = %4547
  %4553 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4554 = load i8*, i8** %4553, align 8
  %4555 = call i32 @strcmp(i8* %4554, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4556 = icmp eq i32 %4555, 0
  br i1 %4556, label %353, label %4557

; <label>:4557:                                   ; preds = %4552
  %4558 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 0
  %4559 = load i8*, i8** %4558, align 8
  %4560 = call i32 @strncmp(i8* %4559, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4561 = icmp eq i32 %4560, 0
  br i1 %4561, label %362, label %4580

; <label>:4562:                                   ; preds = %4547
  %4563 = load i32, i32* @verbosity, align 4
  %4564 = add nsw i32 %4563, 1
  store i32 %4564, i32* @verbosity, align 4
  br label %4580

; <label>:4565:                                   ; preds = %4542
  store i32 9, i32* @blockSize100k, align 4
  br label %4580

; <label>:4566:                                   ; preds = %4539
  store i32 1, i32* @blockSize100k, align 4
  br label %4580

; <label>:4567:                                   ; preds = %4534
  call void @redundant(i8* %4538)
  br label %4580

; <label>:4568:                                   ; preds = %4527
  call void @redundant(i8* %4533)
  br label %4580

; <label>:4569:                                   ; preds = %4522
  store i32 1, i32* @workFactor, align 4
  br label %4580

; <label>:4570:                                   ; preds = %4517
  call void @license()
  br label %4580

; <label>:4571:                                   ; preds = %4512
  call void @license()
  br label %4580

; <label>:4572:                                   ; preds = %4507
  store i8 0, i8* @noisy, align 1
  br label %4580

; <label>:4573:                                   ; preds = %4502
  store i8 1, i8* @smallMode, align 1
  br label %4580

; <label>:4574:                                   ; preds = %4497
  store i8 1, i8* @keepInputFiles, align 1
  br label %4580

; <label>:4575:                                   ; preds = %4492
  store i32 3, i32* @opMode, align 4
  br label %4580

; <label>:4576:                                   ; preds = %4487
  store i8 1, i8* @forceOverwrite, align 1
  br label %4580

; <label>:4577:                                   ; preds = %4482
  store i32 1, i32* @opMode, align 4
  br label %4580

; <label>:4578:                                   ; preds = %4477
  store i32 2, i32* @opMode, align 4
  br label %4580

; <label>:4579:                                   ; preds = %4472
  store i32 2, i32* @srcMode, align 4
  br label %4580

; <label>:4580:                                   ; preds = %4579, %4578, %4577, %4576, %4575, %4574, %4573, %4572, %4571, %4570, %4569, %4568, %4567, %4566, %4565, %4562, %4557
  call void @__loop_iteration_test___5()
  %4581 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4466, i32 0, i32 1
  %4582 = load %struct.zzzz*, %struct.zzzz** %4581, align 8
  %4583 = icmp ne %struct.zzzz* %4582, null
  br i1 %4583, label %.lr.ph39.15, label %.loopexit.loopexit

.lr.ph39.15:                                      ; preds = %4580
  call void @unroll_loop(i32 5)
  %4584 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4585 = load i8*, i8** %4584, align 8
  %4586 = call i32 @strcmp(i8* %4585, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4587 = icmp eq i32 %4586, 0
  br i1 %4587, label %.loopexit.loopexit, label %4588

; <label>:4588:                                   ; preds = %.lr.ph39.15
  %4589 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4590 = load i8*, i8** %4589, align 8
  %4591 = call i32 @strcmp(i8* %4590, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4592 = icmp eq i32 %4591, 0
  br i1 %4592, label %4695, label %4593

; <label>:4593:                                   ; preds = %4588
  %4594 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4595 = load i8*, i8** %4594, align 8
  %4596 = call i32 @strcmp(i8* %4595, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4597 = icmp eq i32 %4596, 0
  br i1 %4597, label %4694, label %4598

; <label>:4598:                                   ; preds = %4593
  %4599 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4600 = load i8*, i8** %4599, align 8
  %4601 = call i32 @strcmp(i8* %4600, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4602 = icmp eq i32 %4601, 0
  br i1 %4602, label %4693, label %4603

; <label>:4603:                                   ; preds = %4598
  %4604 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4605 = load i8*, i8** %4604, align 8
  %4606 = call i32 @strcmp(i8* %4605, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4607 = icmp eq i32 %4606, 0
  br i1 %4607, label %4692, label %4608

; <label>:4608:                                   ; preds = %4603
  %4609 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4610 = load i8*, i8** %4609, align 8
  %4611 = call i32 @strcmp(i8* %4610, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4612 = icmp eq i32 %4611, 0
  br i1 %4612, label %4691, label %4613

; <label>:4613:                                   ; preds = %4608
  %4614 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4615 = load i8*, i8** %4614, align 8
  %4616 = call i32 @strcmp(i8* %4615, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4617 = icmp eq i32 %4616, 0
  br i1 %4617, label %4690, label %4618

; <label>:4618:                                   ; preds = %4613
  %4619 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4620 = load i8*, i8** %4619, align 8
  %4621 = call i32 @strcmp(i8* %4620, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4622 = icmp eq i32 %4621, 0
  br i1 %4622, label %4689, label %4623

; <label>:4623:                                   ; preds = %4618
  %4624 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4625 = load i8*, i8** %4624, align 8
  %4626 = call i32 @strcmp(i8* %4625, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4627 = icmp eq i32 %4626, 0
  br i1 %4627, label %4688, label %4628

; <label>:4628:                                   ; preds = %4623
  %4629 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4630 = load i8*, i8** %4629, align 8
  %4631 = call i32 @strcmp(i8* %4630, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4632 = icmp eq i32 %4631, 0
  br i1 %4632, label %4687, label %4633

; <label>:4633:                                   ; preds = %4628
  %4634 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4635 = load i8*, i8** %4634, align 8
  %4636 = call i32 @strcmp(i8* %4635, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4637 = icmp eq i32 %4636, 0
  br i1 %4637, label %4686, label %4638

; <label>:4638:                                   ; preds = %4633
  %4639 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4640 = load i8*, i8** %4639, align 8
  %4641 = call i32 @strcmp(i8* %4640, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4642 = icmp eq i32 %4641, 0
  br i1 %4642, label %4685, label %4643

; <label>:4643:                                   ; preds = %4638
  %4644 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4645 = load i8*, i8** %4644, align 8
  %4646 = call i32 @strcmp(i8* %4645, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4647 = icmp eq i32 %4646, 0
  %4648 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4649 = load i8*, i8** %4648, align 8
  br i1 %4647, label %4684, label %4650

; <label>:4650:                                   ; preds = %4643
  %4651 = call i32 @strcmp(i8* %4649, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4652 = icmp eq i32 %4651, 0
  %4653 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4654 = load i8*, i8** %4653, align 8
  br i1 %4652, label %4683, label %4655

; <label>:4655:                                   ; preds = %4650
  %4656 = call i32 @strcmp(i8* %4654, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4657 = icmp eq i32 %4656, 0
  br i1 %4657, label %4682, label %4658

; <label>:4658:                                   ; preds = %4655
  %4659 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4660 = load i8*, i8** %4659, align 8
  %4661 = call i32 @strcmp(i8* %4660, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4662 = icmp eq i32 %4661, 0
  br i1 %4662, label %4681, label %4663

; <label>:4663:                                   ; preds = %4658
  %4664 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4665 = load i8*, i8** %4664, align 8
  %4666 = call i32 @strcmp(i8* %4665, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4667 = icmp eq i32 %4666, 0
  br i1 %4667, label %4678, label %4668

; <label>:4668:                                   ; preds = %4663
  %4669 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4670 = load i8*, i8** %4669, align 8
  %4671 = call i32 @strcmp(i8* %4670, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4672 = icmp eq i32 %4671, 0
  br i1 %4672, label %353, label %4673

; <label>:4673:                                   ; preds = %4668
  %4674 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 0
  %4675 = load i8*, i8** %4674, align 8
  %4676 = call i32 @strncmp(i8* %4675, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4677 = icmp eq i32 %4676, 0
  br i1 %4677, label %362, label %4696

; <label>:4678:                                   ; preds = %4663
  %4679 = load i32, i32* @verbosity, align 4
  %4680 = add nsw i32 %4679, 1
  store i32 %4680, i32* @verbosity, align 4
  br label %4696

; <label>:4681:                                   ; preds = %4658
  store i32 9, i32* @blockSize100k, align 4
  br label %4696

; <label>:4682:                                   ; preds = %4655
  store i32 1, i32* @blockSize100k, align 4
  br label %4696

; <label>:4683:                                   ; preds = %4650
  call void @redundant(i8* %4654)
  br label %4696

; <label>:4684:                                   ; preds = %4643
  call void @redundant(i8* %4649)
  br label %4696

; <label>:4685:                                   ; preds = %4638
  store i32 1, i32* @workFactor, align 4
  br label %4696

; <label>:4686:                                   ; preds = %4633
  call void @license()
  br label %4696

; <label>:4687:                                   ; preds = %4628
  call void @license()
  br label %4696

; <label>:4688:                                   ; preds = %4623
  store i8 0, i8* @noisy, align 1
  br label %4696

; <label>:4689:                                   ; preds = %4618
  store i8 1, i8* @smallMode, align 1
  br label %4696

; <label>:4690:                                   ; preds = %4613
  store i8 1, i8* @keepInputFiles, align 1
  br label %4696

; <label>:4691:                                   ; preds = %4608
  store i32 3, i32* @opMode, align 4
  br label %4696

; <label>:4692:                                   ; preds = %4603
  store i8 1, i8* @forceOverwrite, align 1
  br label %4696

; <label>:4693:                                   ; preds = %4598
  store i32 1, i32* @opMode, align 4
  br label %4696

; <label>:4694:                                   ; preds = %4593
  store i32 2, i32* @opMode, align 4
  br label %4696

; <label>:4695:                                   ; preds = %4588
  store i32 2, i32* @srcMode, align 4
  br label %4696

; <label>:4696:                                   ; preds = %4695, %4694, %4693, %4692, %4691, %4690, %4689, %4688, %4687, %4686, %4685, %4684, %4683, %4682, %4681, %4678, %4673
  call void @__loop_iteration_test___5()
  %4697 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4582, i32 0, i32 1
  %4698 = load %struct.zzzz*, %struct.zzzz** %4697, align 8
  %4699 = icmp ne %struct.zzzz* %4698, null
  br i1 %4699, label %.lr.ph39.16, label %.loopexit.loopexit

.lr.ph39.16:                                      ; preds = %4696
  call void @unroll_loop(i32 5)
  %4700 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4701 = load i8*, i8** %4700, align 8
  %4702 = call i32 @strcmp(i8* %4701, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4703 = icmp eq i32 %4702, 0
  br i1 %4703, label %.loopexit.loopexit, label %4704

; <label>:4704:                                   ; preds = %.lr.ph39.16
  %4705 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4706 = load i8*, i8** %4705, align 8
  %4707 = call i32 @strcmp(i8* %4706, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4708 = icmp eq i32 %4707, 0
  br i1 %4708, label %4811, label %4709

; <label>:4709:                                   ; preds = %4704
  %4710 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4711 = load i8*, i8** %4710, align 8
  %4712 = call i32 @strcmp(i8* %4711, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4713 = icmp eq i32 %4712, 0
  br i1 %4713, label %4810, label %4714

; <label>:4714:                                   ; preds = %4709
  %4715 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4716 = load i8*, i8** %4715, align 8
  %4717 = call i32 @strcmp(i8* %4716, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4718 = icmp eq i32 %4717, 0
  br i1 %4718, label %4809, label %4719

; <label>:4719:                                   ; preds = %4714
  %4720 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4721 = load i8*, i8** %4720, align 8
  %4722 = call i32 @strcmp(i8* %4721, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4723 = icmp eq i32 %4722, 0
  br i1 %4723, label %4808, label %4724

; <label>:4724:                                   ; preds = %4719
  %4725 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4726 = load i8*, i8** %4725, align 8
  %4727 = call i32 @strcmp(i8* %4726, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4728 = icmp eq i32 %4727, 0
  br i1 %4728, label %4807, label %4729

; <label>:4729:                                   ; preds = %4724
  %4730 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4731 = load i8*, i8** %4730, align 8
  %4732 = call i32 @strcmp(i8* %4731, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4733 = icmp eq i32 %4732, 0
  br i1 %4733, label %4806, label %4734

; <label>:4734:                                   ; preds = %4729
  %4735 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4736 = load i8*, i8** %4735, align 8
  %4737 = call i32 @strcmp(i8* %4736, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4738 = icmp eq i32 %4737, 0
  br i1 %4738, label %4805, label %4739

; <label>:4739:                                   ; preds = %4734
  %4740 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4741 = load i8*, i8** %4740, align 8
  %4742 = call i32 @strcmp(i8* %4741, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4743 = icmp eq i32 %4742, 0
  br i1 %4743, label %4804, label %4744

; <label>:4744:                                   ; preds = %4739
  %4745 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4746 = load i8*, i8** %4745, align 8
  %4747 = call i32 @strcmp(i8* %4746, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4748 = icmp eq i32 %4747, 0
  br i1 %4748, label %4803, label %4749

; <label>:4749:                                   ; preds = %4744
  %4750 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4751 = load i8*, i8** %4750, align 8
  %4752 = call i32 @strcmp(i8* %4751, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4753 = icmp eq i32 %4752, 0
  br i1 %4753, label %4802, label %4754

; <label>:4754:                                   ; preds = %4749
  %4755 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4756 = load i8*, i8** %4755, align 8
  %4757 = call i32 @strcmp(i8* %4756, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4758 = icmp eq i32 %4757, 0
  br i1 %4758, label %4801, label %4759

; <label>:4759:                                   ; preds = %4754
  %4760 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4761 = load i8*, i8** %4760, align 8
  %4762 = call i32 @strcmp(i8* %4761, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4763 = icmp eq i32 %4762, 0
  %4764 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4765 = load i8*, i8** %4764, align 8
  br i1 %4763, label %4800, label %4766

; <label>:4766:                                   ; preds = %4759
  %4767 = call i32 @strcmp(i8* %4765, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4768 = icmp eq i32 %4767, 0
  %4769 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4770 = load i8*, i8** %4769, align 8
  br i1 %4768, label %4799, label %4771

; <label>:4771:                                   ; preds = %4766
  %4772 = call i32 @strcmp(i8* %4770, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4773 = icmp eq i32 %4772, 0
  br i1 %4773, label %4798, label %4774

; <label>:4774:                                   ; preds = %4771
  %4775 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4776 = load i8*, i8** %4775, align 8
  %4777 = call i32 @strcmp(i8* %4776, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4778 = icmp eq i32 %4777, 0
  br i1 %4778, label %4797, label %4779

; <label>:4779:                                   ; preds = %4774
  %4780 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4781 = load i8*, i8** %4780, align 8
  %4782 = call i32 @strcmp(i8* %4781, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4783 = icmp eq i32 %4782, 0
  br i1 %4783, label %4794, label %4784

; <label>:4784:                                   ; preds = %4779
  %4785 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4786 = load i8*, i8** %4785, align 8
  %4787 = call i32 @strcmp(i8* %4786, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4788 = icmp eq i32 %4787, 0
  br i1 %4788, label %353, label %4789

; <label>:4789:                                   ; preds = %4784
  %4790 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 0
  %4791 = load i8*, i8** %4790, align 8
  %4792 = call i32 @strncmp(i8* %4791, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4793 = icmp eq i32 %4792, 0
  br i1 %4793, label %362, label %4812

; <label>:4794:                                   ; preds = %4779
  %4795 = load i32, i32* @verbosity, align 4
  %4796 = add nsw i32 %4795, 1
  store i32 %4796, i32* @verbosity, align 4
  br label %4812

; <label>:4797:                                   ; preds = %4774
  store i32 9, i32* @blockSize100k, align 4
  br label %4812

; <label>:4798:                                   ; preds = %4771
  store i32 1, i32* @blockSize100k, align 4
  br label %4812

; <label>:4799:                                   ; preds = %4766
  call void @redundant(i8* %4770)
  br label %4812

; <label>:4800:                                   ; preds = %4759
  call void @redundant(i8* %4765)
  br label %4812

; <label>:4801:                                   ; preds = %4754
  store i32 1, i32* @workFactor, align 4
  br label %4812

; <label>:4802:                                   ; preds = %4749
  call void @license()
  br label %4812

; <label>:4803:                                   ; preds = %4744
  call void @license()
  br label %4812

; <label>:4804:                                   ; preds = %4739
  store i8 0, i8* @noisy, align 1
  br label %4812

; <label>:4805:                                   ; preds = %4734
  store i8 1, i8* @smallMode, align 1
  br label %4812

; <label>:4806:                                   ; preds = %4729
  store i8 1, i8* @keepInputFiles, align 1
  br label %4812

; <label>:4807:                                   ; preds = %4724
  store i32 3, i32* @opMode, align 4
  br label %4812

; <label>:4808:                                   ; preds = %4719
  store i8 1, i8* @forceOverwrite, align 1
  br label %4812

; <label>:4809:                                   ; preds = %4714
  store i32 1, i32* @opMode, align 4
  br label %4812

; <label>:4810:                                   ; preds = %4709
  store i32 2, i32* @opMode, align 4
  br label %4812

; <label>:4811:                                   ; preds = %4704
  store i32 2, i32* @srcMode, align 4
  br label %4812

; <label>:4812:                                   ; preds = %4811, %4810, %4809, %4808, %4807, %4806, %4805, %4804, %4803, %4802, %4801, %4800, %4799, %4798, %4797, %4794, %4789
  call void @__loop_iteration_test___5()
  %4813 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4698, i32 0, i32 1
  %4814 = load %struct.zzzz*, %struct.zzzz** %4813, align 8
  %4815 = icmp ne %struct.zzzz* %4814, null
  br i1 %4815, label %.lr.ph39.17, label %.loopexit.loopexit

.lr.ph39.17:                                      ; preds = %4812
  call void @unroll_loop(i32 5)
  %4816 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4817 = load i8*, i8** %4816, align 8
  %4818 = call i32 @strcmp(i8* %4817, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4819 = icmp eq i32 %4818, 0
  br i1 %4819, label %.loopexit.loopexit, label %4820

; <label>:4820:                                   ; preds = %.lr.ph39.17
  %4821 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4822 = load i8*, i8** %4821, align 8
  %4823 = call i32 @strcmp(i8* %4822, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4824 = icmp eq i32 %4823, 0
  br i1 %4824, label %4927, label %4825

; <label>:4825:                                   ; preds = %4820
  %4826 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4827 = load i8*, i8** %4826, align 8
  %4828 = call i32 @strcmp(i8* %4827, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4829 = icmp eq i32 %4828, 0
  br i1 %4829, label %4926, label %4830

; <label>:4830:                                   ; preds = %4825
  %4831 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4832 = load i8*, i8** %4831, align 8
  %4833 = call i32 @strcmp(i8* %4832, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4834 = icmp eq i32 %4833, 0
  br i1 %4834, label %4925, label %4835

; <label>:4835:                                   ; preds = %4830
  %4836 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4837 = load i8*, i8** %4836, align 8
  %4838 = call i32 @strcmp(i8* %4837, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4839 = icmp eq i32 %4838, 0
  br i1 %4839, label %4924, label %4840

; <label>:4840:                                   ; preds = %4835
  %4841 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4842 = load i8*, i8** %4841, align 8
  %4843 = call i32 @strcmp(i8* %4842, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4844 = icmp eq i32 %4843, 0
  br i1 %4844, label %4923, label %4845

; <label>:4845:                                   ; preds = %4840
  %4846 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4847 = load i8*, i8** %4846, align 8
  %4848 = call i32 @strcmp(i8* %4847, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4849 = icmp eq i32 %4848, 0
  br i1 %4849, label %4922, label %4850

; <label>:4850:                                   ; preds = %4845
  %4851 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4852 = load i8*, i8** %4851, align 8
  %4853 = call i32 @strcmp(i8* %4852, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4854 = icmp eq i32 %4853, 0
  br i1 %4854, label %4921, label %4855

; <label>:4855:                                   ; preds = %4850
  %4856 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4857 = load i8*, i8** %4856, align 8
  %4858 = call i32 @strcmp(i8* %4857, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4859 = icmp eq i32 %4858, 0
  br i1 %4859, label %4920, label %4860

; <label>:4860:                                   ; preds = %4855
  %4861 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4862 = load i8*, i8** %4861, align 8
  %4863 = call i32 @strcmp(i8* %4862, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4864 = icmp eq i32 %4863, 0
  br i1 %4864, label %4919, label %4865

; <label>:4865:                                   ; preds = %4860
  %4866 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4867 = load i8*, i8** %4866, align 8
  %4868 = call i32 @strcmp(i8* %4867, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4869 = icmp eq i32 %4868, 0
  br i1 %4869, label %4918, label %4870

; <label>:4870:                                   ; preds = %4865
  %4871 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4872 = load i8*, i8** %4871, align 8
  %4873 = call i32 @strcmp(i8* %4872, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4874 = icmp eq i32 %4873, 0
  br i1 %4874, label %4917, label %4875

; <label>:4875:                                   ; preds = %4870
  %4876 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4877 = load i8*, i8** %4876, align 8
  %4878 = call i32 @strcmp(i8* %4877, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4879 = icmp eq i32 %4878, 0
  %4880 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4881 = load i8*, i8** %4880, align 8
  br i1 %4879, label %4916, label %4882

; <label>:4882:                                   ; preds = %4875
  %4883 = call i32 @strcmp(i8* %4881, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4884 = icmp eq i32 %4883, 0
  %4885 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4886 = load i8*, i8** %4885, align 8
  br i1 %4884, label %4915, label %4887

; <label>:4887:                                   ; preds = %4882
  %4888 = call i32 @strcmp(i8* %4886, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4889 = icmp eq i32 %4888, 0
  br i1 %4889, label %4914, label %4890

; <label>:4890:                                   ; preds = %4887
  %4891 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4892 = load i8*, i8** %4891, align 8
  %4893 = call i32 @strcmp(i8* %4892, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4894 = icmp eq i32 %4893, 0
  br i1 %4894, label %4913, label %4895

; <label>:4895:                                   ; preds = %4890
  %4896 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4897 = load i8*, i8** %4896, align 8
  %4898 = call i32 @strcmp(i8* %4897, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4899 = icmp eq i32 %4898, 0
  br i1 %4899, label %4910, label %4900

; <label>:4900:                                   ; preds = %4895
  %4901 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4902 = load i8*, i8** %4901, align 8
  %4903 = call i32 @strcmp(i8* %4902, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4904 = icmp eq i32 %4903, 0
  br i1 %4904, label %353, label %4905

; <label>:4905:                                   ; preds = %4900
  %4906 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 0
  %4907 = load i8*, i8** %4906, align 8
  %4908 = call i32 @strncmp(i8* %4907, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4909 = icmp eq i32 %4908, 0
  br i1 %4909, label %362, label %4928

; <label>:4910:                                   ; preds = %4895
  %4911 = load i32, i32* @verbosity, align 4
  %4912 = add nsw i32 %4911, 1
  store i32 %4912, i32* @verbosity, align 4
  br label %4928

; <label>:4913:                                   ; preds = %4890
  store i32 9, i32* @blockSize100k, align 4
  br label %4928

; <label>:4914:                                   ; preds = %4887
  store i32 1, i32* @blockSize100k, align 4
  br label %4928

; <label>:4915:                                   ; preds = %4882
  call void @redundant(i8* %4886)
  br label %4928

; <label>:4916:                                   ; preds = %4875
  call void @redundant(i8* %4881)
  br label %4928

; <label>:4917:                                   ; preds = %4870
  store i32 1, i32* @workFactor, align 4
  br label %4928

; <label>:4918:                                   ; preds = %4865
  call void @license()
  br label %4928

; <label>:4919:                                   ; preds = %4860
  call void @license()
  br label %4928

; <label>:4920:                                   ; preds = %4855
  store i8 0, i8* @noisy, align 1
  br label %4928

; <label>:4921:                                   ; preds = %4850
  store i8 1, i8* @smallMode, align 1
  br label %4928

; <label>:4922:                                   ; preds = %4845
  store i8 1, i8* @keepInputFiles, align 1
  br label %4928

; <label>:4923:                                   ; preds = %4840
  store i32 3, i32* @opMode, align 4
  br label %4928

; <label>:4924:                                   ; preds = %4835
  store i8 1, i8* @forceOverwrite, align 1
  br label %4928

; <label>:4925:                                   ; preds = %4830
  store i32 1, i32* @opMode, align 4
  br label %4928

; <label>:4926:                                   ; preds = %4825
  store i32 2, i32* @opMode, align 4
  br label %4928

; <label>:4927:                                   ; preds = %4820
  store i32 2, i32* @srcMode, align 4
  br label %4928

; <label>:4928:                                   ; preds = %4927, %4926, %4925, %4924, %4923, %4922, %4921, %4920, %4919, %4918, %4917, %4916, %4915, %4914, %4913, %4910, %4905
  call void @__loop_iteration_test___5()
  %4929 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4814, i32 0, i32 1
  %4930 = load %struct.zzzz*, %struct.zzzz** %4929, align 8
  %4931 = icmp ne %struct.zzzz* %4930, null
  br i1 %4931, label %.lr.ph39.18, label %.loopexit.loopexit

.lr.ph39.18:                                      ; preds = %4928
  call void @unroll_loop(i32 5)
  %4932 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4933 = load i8*, i8** %4932, align 8
  %4934 = call i32 @strcmp(i8* %4933, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4935 = icmp eq i32 %4934, 0
  br i1 %4935, label %.loopexit.loopexit, label %4936

; <label>:4936:                                   ; preds = %.lr.ph39.18
  %4937 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4938 = load i8*, i8** %4937, align 8
  %4939 = call i32 @strcmp(i8* %4938, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4940 = icmp eq i32 %4939, 0
  br i1 %4940, label %5043, label %4941

; <label>:4941:                                   ; preds = %4936
  %4942 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4943 = load i8*, i8** %4942, align 8
  %4944 = call i32 @strcmp(i8* %4943, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4945 = icmp eq i32 %4944, 0
  br i1 %4945, label %5042, label %4946

; <label>:4946:                                   ; preds = %4941
  %4947 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4948 = load i8*, i8** %4947, align 8
  %4949 = call i32 @strcmp(i8* %4948, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4950 = icmp eq i32 %4949, 0
  br i1 %4950, label %5041, label %4951

; <label>:4951:                                   ; preds = %4946
  %4952 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4953 = load i8*, i8** %4952, align 8
  %4954 = call i32 @strcmp(i8* %4953, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4955 = icmp eq i32 %4954, 0
  br i1 %4955, label %5040, label %4956

; <label>:4956:                                   ; preds = %4951
  %4957 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4958 = load i8*, i8** %4957, align 8
  %4959 = call i32 @strcmp(i8* %4958, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4960 = icmp eq i32 %4959, 0
  br i1 %4960, label %5039, label %4961

; <label>:4961:                                   ; preds = %4956
  %4962 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4963 = load i8*, i8** %4962, align 8
  %4964 = call i32 @strcmp(i8* %4963, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4965 = icmp eq i32 %4964, 0
  br i1 %4965, label %5038, label %4966

; <label>:4966:                                   ; preds = %4961
  %4967 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4968 = load i8*, i8** %4967, align 8
  %4969 = call i32 @strcmp(i8* %4968, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4970 = icmp eq i32 %4969, 0
  br i1 %4970, label %5037, label %4971

; <label>:4971:                                   ; preds = %4966
  %4972 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4973 = load i8*, i8** %4972, align 8
  %4974 = call i32 @strcmp(i8* %4973, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4975 = icmp eq i32 %4974, 0
  br i1 %4975, label %5036, label %4976

; <label>:4976:                                   ; preds = %4971
  %4977 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4978 = load i8*, i8** %4977, align 8
  %4979 = call i32 @strcmp(i8* %4978, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4980 = icmp eq i32 %4979, 0
  br i1 %4980, label %5035, label %4981

; <label>:4981:                                   ; preds = %4976
  %4982 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4983 = load i8*, i8** %4982, align 8
  %4984 = call i32 @strcmp(i8* %4983, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4985 = icmp eq i32 %4984, 0
  br i1 %4985, label %5034, label %4986

; <label>:4986:                                   ; preds = %4981
  %4987 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4988 = load i8*, i8** %4987, align 8
  %4989 = call i32 @strcmp(i8* %4988, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4990 = icmp eq i32 %4989, 0
  br i1 %4990, label %5033, label %4991

; <label>:4991:                                   ; preds = %4986
  %4992 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4993 = load i8*, i8** %4992, align 8
  %4994 = call i32 @strcmp(i8* %4993, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4995 = icmp eq i32 %4994, 0
  %4996 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %4997 = load i8*, i8** %4996, align 8
  br i1 %4995, label %5032, label %4998

; <label>:4998:                                   ; preds = %4991
  %4999 = call i32 @strcmp(i8* %4997, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %5000 = icmp eq i32 %4999, 0
  %5001 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %5002 = load i8*, i8** %5001, align 8
  br i1 %5000, label %5031, label %5003

; <label>:5003:                                   ; preds = %4998
  %5004 = call i32 @strcmp(i8* %5002, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %5005 = icmp eq i32 %5004, 0
  br i1 %5005, label %5030, label %5006

; <label>:5006:                                   ; preds = %5003
  %5007 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %5008 = load i8*, i8** %5007, align 8
  %5009 = call i32 @strcmp(i8* %5008, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %5010 = icmp eq i32 %5009, 0
  br i1 %5010, label %5029, label %5011

; <label>:5011:                                   ; preds = %5006
  %5012 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %5013 = load i8*, i8** %5012, align 8
  %5014 = call i32 @strcmp(i8* %5013, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %5015 = icmp eq i32 %5014, 0
  br i1 %5015, label %5026, label %5016

; <label>:5016:                                   ; preds = %5011
  %5017 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %5018 = load i8*, i8** %5017, align 8
  %5019 = call i32 @strcmp(i8* %5018, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %5020 = icmp eq i32 %5019, 0
  br i1 %5020, label %353, label %5021

; <label>:5021:                                   ; preds = %5016
  %5022 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 0
  %5023 = load i8*, i8** %5022, align 8
  %5024 = call i32 @strncmp(i8* %5023, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %5025 = icmp eq i32 %5024, 0
  br i1 %5025, label %362, label %5044

; <label>:5026:                                   ; preds = %5011
  %5027 = load i32, i32* @verbosity, align 4
  %5028 = add nsw i32 %5027, 1
  store i32 %5028, i32* @verbosity, align 4
  br label %5044

; <label>:5029:                                   ; preds = %5006
  store i32 9, i32* @blockSize100k, align 4
  br label %5044

; <label>:5030:                                   ; preds = %5003
  store i32 1, i32* @blockSize100k, align 4
  br label %5044

; <label>:5031:                                   ; preds = %4998
  call void @redundant(i8* %5002)
  br label %5044

; <label>:5032:                                   ; preds = %4991
  call void @redundant(i8* %4997)
  br label %5044

; <label>:5033:                                   ; preds = %4986
  store i32 1, i32* @workFactor, align 4
  br label %5044

; <label>:5034:                                   ; preds = %4981
  call void @license()
  br label %5044

; <label>:5035:                                   ; preds = %4976
  call void @license()
  br label %5044

; <label>:5036:                                   ; preds = %4971
  store i8 0, i8* @noisy, align 1
  br label %5044

; <label>:5037:                                   ; preds = %4966
  store i8 1, i8* @smallMode, align 1
  br label %5044

; <label>:5038:                                   ; preds = %4961
  store i8 1, i8* @keepInputFiles, align 1
  br label %5044

; <label>:5039:                                   ; preds = %4956
  store i32 3, i32* @opMode, align 4
  br label %5044

; <label>:5040:                                   ; preds = %4951
  store i8 1, i8* @forceOverwrite, align 1
  br label %5044

; <label>:5041:                                   ; preds = %4946
  store i32 1, i32* @opMode, align 4
  br label %5044

; <label>:5042:                                   ; preds = %4941
  store i32 2, i32* @opMode, align 4
  br label %5044

; <label>:5043:                                   ; preds = %4936
  store i32 2, i32* @srcMode, align 4
  br label %5044

; <label>:5044:                                   ; preds = %5043, %5042, %5041, %5040, %5039, %5038, %5037, %5036, %5035, %5034, %5033, %5032, %5031, %5030, %5029, %5026, %5021
  call void @__loop_iteration_test___5()
  %5045 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4930, i32 0, i32 1
  %5046 = load %struct.zzzz*, %struct.zzzz** %5045, align 8
  %5047 = icmp ne %struct.zzzz* %5046, null
  br i1 %5047, label %.lr.ph39.19, label %.loopexit.loopexit

.lr.ph39.19:                                      ; preds = %5044
  call void @unroll_loop(i32 5)
  %5048 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5049 = load i8*, i8** %5048, align 8
  %5050 = call i32 @strcmp(i8* %5049, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5051 = icmp eq i32 %5050, 0
  br i1 %5051, label %.loopexit.loopexit, label %5052

; <label>:5052:                                   ; preds = %.lr.ph39.19
  %5053 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5054 = load i8*, i8** %5053, align 8
  %5055 = call i32 @strcmp(i8* %5054, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %5056 = icmp eq i32 %5055, 0
  br i1 %5056, label %5159, label %5057

; <label>:5057:                                   ; preds = %5052
  %5058 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5059 = load i8*, i8** %5058, align 8
  %5060 = call i32 @strcmp(i8* %5059, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %5061 = icmp eq i32 %5060, 0
  br i1 %5061, label %5158, label %5062

; <label>:5062:                                   ; preds = %5057
  %5063 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5064 = load i8*, i8** %5063, align 8
  %5065 = call i32 @strcmp(i8* %5064, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %5066 = icmp eq i32 %5065, 0
  br i1 %5066, label %5157, label %5067

; <label>:5067:                                   ; preds = %5062
  %5068 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5069 = load i8*, i8** %5068, align 8
  %5070 = call i32 @strcmp(i8* %5069, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %5071 = icmp eq i32 %5070, 0
  br i1 %5071, label %5156, label %5072

; <label>:5072:                                   ; preds = %5067
  %5073 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5074 = load i8*, i8** %5073, align 8
  %5075 = call i32 @strcmp(i8* %5074, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %5076 = icmp eq i32 %5075, 0
  br i1 %5076, label %5155, label %5077

; <label>:5077:                                   ; preds = %5072
  %5078 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5079 = load i8*, i8** %5078, align 8
  %5080 = call i32 @strcmp(i8* %5079, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %5081 = icmp eq i32 %5080, 0
  br i1 %5081, label %5154, label %5082

; <label>:5082:                                   ; preds = %5077
  %5083 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5084 = load i8*, i8** %5083, align 8
  %5085 = call i32 @strcmp(i8* %5084, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %5086 = icmp eq i32 %5085, 0
  br i1 %5086, label %5153, label %5087

; <label>:5087:                                   ; preds = %5082
  %5088 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5089 = load i8*, i8** %5088, align 8
  %5090 = call i32 @strcmp(i8* %5089, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %5091 = icmp eq i32 %5090, 0
  br i1 %5091, label %5152, label %5092

; <label>:5092:                                   ; preds = %5087
  %5093 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5094 = load i8*, i8** %5093, align 8
  %5095 = call i32 @strcmp(i8* %5094, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %5096 = icmp eq i32 %5095, 0
  br i1 %5096, label %5151, label %5097

; <label>:5097:                                   ; preds = %5092
  %5098 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5099 = load i8*, i8** %5098, align 8
  %5100 = call i32 @strcmp(i8* %5099, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %5101 = icmp eq i32 %5100, 0
  br i1 %5101, label %5150, label %5102

; <label>:5102:                                   ; preds = %5097
  %5103 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5104 = load i8*, i8** %5103, align 8
  %5105 = call i32 @strcmp(i8* %5104, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %5106 = icmp eq i32 %5105, 0
  br i1 %5106, label %5149, label %5107

; <label>:5107:                                   ; preds = %5102
  %5108 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5109 = load i8*, i8** %5108, align 8
  %5110 = call i32 @strcmp(i8* %5109, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %5111 = icmp eq i32 %5110, 0
  %5112 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5113 = load i8*, i8** %5112, align 8
  br i1 %5111, label %5148, label %5114

; <label>:5114:                                   ; preds = %5107
  %5115 = call i32 @strcmp(i8* %5113, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %5116 = icmp eq i32 %5115, 0
  %5117 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5118 = load i8*, i8** %5117, align 8
  br i1 %5116, label %5147, label %5119

; <label>:5119:                                   ; preds = %5114
  %5120 = call i32 @strcmp(i8* %5118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %5121 = icmp eq i32 %5120, 0
  br i1 %5121, label %5146, label %5122

; <label>:5122:                                   ; preds = %5119
  %5123 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5124 = load i8*, i8** %5123, align 8
  %5125 = call i32 @strcmp(i8* %5124, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %5126 = icmp eq i32 %5125, 0
  br i1 %5126, label %5145, label %5127

; <label>:5127:                                   ; preds = %5122
  %5128 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5129 = load i8*, i8** %5128, align 8
  %5130 = call i32 @strcmp(i8* %5129, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %5131 = icmp eq i32 %5130, 0
  br i1 %5131, label %5142, label %5132

; <label>:5132:                                   ; preds = %5127
  %5133 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5134 = load i8*, i8** %5133, align 8
  %5135 = call i32 @strcmp(i8* %5134, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %5136 = icmp eq i32 %5135, 0
  br i1 %5136, label %353, label %5137

; <label>:5137:                                   ; preds = %5132
  %5138 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 0
  %5139 = load i8*, i8** %5138, align 8
  %5140 = call i32 @strncmp(i8* %5139, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %5141 = icmp eq i32 %5140, 0
  br i1 %5141, label %362, label %5160

; <label>:5142:                                   ; preds = %5127
  %5143 = load i32, i32* @verbosity, align 4
  %5144 = add nsw i32 %5143, 1
  store i32 %5144, i32* @verbosity, align 4
  br label %5160

; <label>:5145:                                   ; preds = %5122
  store i32 9, i32* @blockSize100k, align 4
  br label %5160

; <label>:5146:                                   ; preds = %5119
  store i32 1, i32* @blockSize100k, align 4
  br label %5160

; <label>:5147:                                   ; preds = %5114
  call void @redundant(i8* %5118)
  br label %5160

; <label>:5148:                                   ; preds = %5107
  call void @redundant(i8* %5113)
  br label %5160

; <label>:5149:                                   ; preds = %5102
  store i32 1, i32* @workFactor, align 4
  br label %5160

; <label>:5150:                                   ; preds = %5097
  call void @license()
  br label %5160

; <label>:5151:                                   ; preds = %5092
  call void @license()
  br label %5160

; <label>:5152:                                   ; preds = %5087
  store i8 0, i8* @noisy, align 1
  br label %5160

; <label>:5153:                                   ; preds = %5082
  store i8 1, i8* @smallMode, align 1
  br label %5160

; <label>:5154:                                   ; preds = %5077
  store i8 1, i8* @keepInputFiles, align 1
  br label %5160

; <label>:5155:                                   ; preds = %5072
  store i32 3, i32* @opMode, align 4
  br label %5160

; <label>:5156:                                   ; preds = %5067
  store i8 1, i8* @forceOverwrite, align 1
  br label %5160

; <label>:5157:                                   ; preds = %5062
  store i32 1, i32* @opMode, align 4
  br label %5160

; <label>:5158:                                   ; preds = %5057
  store i32 2, i32* @opMode, align 4
  br label %5160

; <label>:5159:                                   ; preds = %5052
  store i32 2, i32* @srcMode, align 4
  br label %5160

; <label>:5160:                                   ; preds = %5159, %5158, %5157, %5156, %5155, %5154, %5153, %5152, %5151, %5150, %5149, %5148, %5147, %5146, %5145, %5142, %5137
  call void @__loop_iteration_test___5()
  %5161 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5046, i32 0, i32 1
  %5162 = load %struct.zzzz*, %struct.zzzz** %5161, align 8
  br label %.loopexit.loopexit
}

declare void @__loop_termination_test___5()

declare void @__loop_iteration_test___5()

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main_old.50(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), align 1
  %39 = sext i8 98 to i32
  %40 = icmp eq i32 98, 47
  br i1 false, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %37
  call void @__loop_iteration_test___0()
  %43 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %44 = sext i8 122 to i32
  %45 = icmp ne i32 122, 0
  br i1 true, label %540, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %707, %698, %689, %680, %671, %662, %653, %644, %635, %626, %617, %608, %599, %590, %581, %572, %563, %554, %545, %42
  call void @__loop_termination_test___0()
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone(%struct.zzzz** %22, i8* %46)
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone.9(%struct.zzzz** %22, i8* %47)
  %48 = sub nsw i32 3, 1, !track_argc !10
  %49 = icmp sle i32 1, 2
  br i1 true, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %50 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %51 = load i8*, i8** %scevgep4, align 8
  %52 = call %struct.zzzz* @snocString_clone(%struct.zzzz* null, i8* %51)
  store %struct.zzzz* %52, %struct.zzzz** %22, align 8
  br i1 true, label %.lr.ph57.1, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57.1, %.lr.ph57
  call void @__loop_termination_test___1()
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %53 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %54 = icmp ne i64 10000562, 0
  %55 = icmp ne %struct.zzzz* %53, null
  br i1 true, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %.lr.ph53.preheader
  call void @unroll_loop(i32 2)
  %56 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr [6 x i8], [6 x i8]* @8, i64 0, i64 0
  %59 = getelementptr [3 x i8], [3 x i8]* @9, i64 0, i64 0
  %60 = call i32 @strcmp(i8* %58, i8* %59) #10
  %61 = icmp eq i32 1, 0
  br i1 false, label %82, label %62

; <label>:62:                                     ; preds = %.lr.ph53
  %63 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 45 to i32
  %67 = icmp eq i32 45, 45
  br i1 true, label %82, label %68

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @numFileNames, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* @numFileNames, align 4
  %71 = load i32, i32* @longestFileName, align 4
  %72 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i64 @strlen(i8* %73) #10
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %71, %75
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %68
  %78 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @strlen(i8* %79) #10
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* @longestFileName, align 4
  br label %82

; <label>:82:                                     ; preds = %77, %68, %62, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ 1, %62 ], [ 1, %77 ], [ 1, %68 ]
  call void @__loop_iteration_test___2()
  %83 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 1
  %84 = load %struct.zzzz*, %struct.zzzz** %83, align 8
  %85 = icmp ne i64 10000590, 0
  %86 = icmp ne %struct.zzzz* %84, null
  br i1 true, label %.lr.ph53.1, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %1284, %1254, %1224, %1194, %1164, %1134, %1104, %1074, %1044, %1014, %984, %954, %924, %894, %864, %834, %804, %774, %743, %82
  call void @__loop_termination_test___2()
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %87 = load i32, i32* @numFileNames, align 4
  %88 = icmp eq i32 1, 0
  br i1 false, label %89, label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %91

; <label>:90:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %91

; <label>:91:                                     ; preds = %90, %89
  store i32 1, i32* @opMode, align 4
  %92 = load i8*, i8** @progName, align 8
  %93 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %94 = call i8* @strstr(i8* %92, i8* %93) #10, !track !11
  %95 = icmp ne i64 0, 0
  %96 = icmp ne i8* null, null
  br i1 false, label %103, label %97

; <label>:97:                                     ; preds = %91
  %98 = load i8*, i8** @progName, align 8
  %99 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %100 = call i8* @strstr(i8* %98, i8* %99) #10, !track !12
  %101 = icmp ne i64 0, 0
  %102 = icmp ne i8* null, null
  br i1 false, label %103, label %104

; <label>:103:                                    ; preds = %97, %91
  store i32 2, i32* @opMode, align 4
  br label %104

; <label>:104:                                    ; preds = %103, %97
  %105 = load i8*, i8** @progName, align 8
  %106 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %107 = call i8* @strstr(i8* %105, i8* %106) #10, !track !13
  %108 = icmp ne i64 0, 0
  %109 = icmp ne i8* null, null
  br i1 false, label %128, label %110

; <label>:110:                                    ; preds = %104
  %111 = load i8*, i8** @progName, align 8
  %112 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %113 = call i8* @strstr(i8* %111, i8* %112) #10, !track !14
  %114 = icmp ne i64 0, 0
  %115 = icmp ne i8* null, null
  br i1 false, label %128, label %116

; <label>:116:                                    ; preds = %110
  %117 = load i8*, i8** @progName, align 8
  %118 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %119 = call i8* @strstr(i8* %117, i8* %118) #10, !track !15
  %120 = icmp ne i64 0, 0
  %121 = icmp ne i8* null, null
  br i1 false, label %128, label %122

; <label>:122:                                    ; preds = %116
  %123 = load i8*, i8** @progName, align 8
  %124 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %125 = call i8* @strstr(i8* %123, i8* %124) #10, !track !16
  %126 = icmp ne i64 0, 0
  %127 = icmp ne i8* null, null
  br i1 false, label %128, label %133

; <label>:128:                                    ; preds = %122, %116, %110, %104
  store i32 2, i32* @opMode, align 4
  %129 = load i32, i32* @numFileNames, align 4
  %130 = icmp eq i32 %129, 0
  %131 = zext i1 %130 to i64
  %132 = select i1 %130, i32 1, i32 2
  store i32 %132, i32* @srcMode, align 4
  br label %133

; <label>:133:                                    ; preds = %128, %122
  %134 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %135 = icmp ne i64 10000562, 0
  %136 = icmp ne %struct.zzzz* %134, null
  br i1 true, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %133
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %.lr.ph48.preheader
  call void @unroll_loop(i32 3)
  %137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr [6 x i8], [6 x i8]* @14, i64 0, i64 0
  %140 = getelementptr [3 x i8], [3 x i8]* @15, i64 0, i64 0
  %141 = call i32 @strcmp(i8* %139, i8* %140) #10
  %142 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %143

; <label>:143:                                    ; preds = %.lr.ph48
  %144 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 45 to i32
  %148 = icmp eq i32 45, 45
  br i1 true, label %149, label %._crit_edge43

; <label>:149:                                    ; preds = %143
  %150 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 102 to i32
  %155 = icmp ne i32 102, 45
  br i1 true, label %156, label %._crit_edge43

; <label>:156:                                    ; preds = %149
  %157 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 102 to i32
  %162 = icmp ne i32 102, 0
  br i1 true, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %156
  %163 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %.lr.ph42.preheader
  call void @unroll_loop(i32 4)
  %164 = load i8*, i8** %163, align 8
  %scevgep = getelementptr i8, i8* %164, i64 1
  %165 = load i8, i8* %scevgep, align 1
  %166 = sext i8 102 to i32
  switch i32 102, label %.loopexit1 [
    i32 99, label %167
    i32 100, label %168
    i32 122, label %169
    i32 102, label %170
    i32 116, label %171
    i32 107, label %172
    i32 115, label %173
    i32 113, label %174
    i32 49, label %175
    i32 50, label %176
    i32 51, label %177
    i32 52, label %178
    i32 53, label %179
    i32 54, label %180
    i32 55, label %181
    i32 56, label %182
    i32 57, label %183
    i32 86, label %184
    i32 76, label %184
    i32 118, label %185
    i32 104, label %.loopexit2
  ]

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %198

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %198

; <label>:169:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %198

; <label>:170:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %198

; <label>:171:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %198

; <label>:172:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %198

; <label>:173:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %198

; <label>:174:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %198

; <label>:175:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %198

; <label>:176:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %198

; <label>:177:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %198

; <label>:178:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %198

; <label>:179:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %198

; <label>:180:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %198

; <label>:181:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %198

; <label>:182:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %198

; <label>:183:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %198

; <label>:184:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %198

; <label>:185:                                    ; preds = %.lr.ph42
  %186 = load i32, i32* @verbosity, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* @verbosity, align 4
  br label %198

.loopexit2:                                       ; preds = %.lr.ph42.19139, %.lr.ph42.18132, %.lr.ph42.17125, %.lr.ph42.16118, %.lr.ph42.15111, %.lr.ph42.14104, %.lr.ph42.1397, %.lr.ph42.1290, %.lr.ph42.1183, %.lr.ph42.1076, %.lr.ph42.969, %.lr.ph42.862, %.lr.ph42.755, %.lr.ph42.648, %.lr.ph42.541, %.lr.ph42.434, %.lr.ph42.327, %.lr.ph42.220, %.lr.ph42.113, %.lr.ph42
  call void @__loop_termination_test___4()
  br label %188

.loopexit4:                                       ; preds = %.lr.ph42.1
  br label %188

.loopexit6:                                       ; preds = %.lr.ph42.2
  br label %188

.loopexit8:                                       ; preds = %.lr.ph42.3
  br label %188

.loopexit10:                                      ; preds = %.lr.ph42.4
  br label %188

.loopexit12:                                      ; preds = %.lr.ph42.5
  br label %188

.loopexit14:                                      ; preds = %.lr.ph42.6
  br label %188

.loopexit16:                                      ; preds = %.lr.ph42.7
  br label %188

.loopexit19:                                      ; preds = %.lr.ph42.8
  br label %188

.loopexit21:                                      ; preds = %.lr.ph42.9
  br label %188

.loopexit23:                                      ; preds = %.lr.ph42.10
  br label %188

.loopexit25:                                      ; preds = %.lr.ph42.11
  br label %188

.loopexit27:                                      ; preds = %.lr.ph42.12
  br label %188

.loopexit29:                                      ; preds = %.lr.ph42.13
  br label %188

.loopexit31:                                      ; preds = %.lr.ph42.14
  br label %188

.loopexit33:                                      ; preds = %.lr.ph42.15
  br label %188

.loopexit35:                                      ; preds = %.lr.ph42.16
  br label %188

.loopexit37:                                      ; preds = %.lr.ph42.17
  br label %188

.loopexit39:                                      ; preds = %.lr.ph42.18
  br label %188

.loopexit41:                                      ; preds = %.lr.ph42.19
  br label %188

; <label>:188:                                    ; preds = %.loopexit41, %.loopexit39, %.loopexit37, %.loopexit35, %.loopexit33, %.loopexit31, %.loopexit29, %.loopexit27, %.loopexit25, %.loopexit23, %.loopexit21, %.loopexit19, %.loopexit16, %.loopexit14, %.loopexit12, %.loopexit10, %.loopexit8, %.loopexit6, %.loopexit4, %.loopexit2
  call void @__loop_termination_test___3()
  %189 = load i8*, i8** @progName, align 8
  call void @usage(i8* %189)
  call void @exit(i32 0) #11
  unreachable

.loopexit1:                                       ; preds = %.lr.ph42.19139, %.lr.ph42.18132, %.lr.ph42.17125, %.lr.ph42.16118, %.lr.ph42.15111, %.lr.ph42.14104, %.lr.ph42.1397, %.lr.ph42.1290, %.lr.ph42.1183, %.lr.ph42.1076, %.lr.ph42.969, %.lr.ph42.862, %.lr.ph42.755, %.lr.ph42.648, %.lr.ph42.541, %.lr.ph42.434, %.lr.ph42.327, %.lr.ph42.220, %.lr.ph42.113, %.lr.ph42
  call void @__loop_termination_test___4()
  br label %190

.loopexit3:                                       ; preds = %.lr.ph42.1
  br label %190

.loopexit5:                                       ; preds = %.lr.ph42.2
  br label %190

.loopexit7:                                       ; preds = %.lr.ph42.3
  br label %190

.loopexit9:                                       ; preds = %.lr.ph42.4
  br label %190

.loopexit11:                                      ; preds = %.lr.ph42.5
  br label %190

.loopexit13:                                      ; preds = %.lr.ph42.6
  br label %190

.loopexit15:                                      ; preds = %.lr.ph42.7
  br label %190

.loopexit18:                                      ; preds = %.lr.ph42.8
  br label %190

.loopexit20:                                      ; preds = %.lr.ph42.9
  br label %190

.loopexit22:                                      ; preds = %.lr.ph42.10
  br label %190

.loopexit24:                                      ; preds = %.lr.ph42.11
  br label %190

.loopexit26:                                      ; preds = %.lr.ph42.12
  br label %190

.loopexit28:                                      ; preds = %.lr.ph42.13
  br label %190

.loopexit30:                                      ; preds = %.lr.ph42.14
  br label %190

.loopexit32:                                      ; preds = %.lr.ph42.15
  br label %190

.loopexit34:                                      ; preds = %.lr.ph42.16
  br label %190

.loopexit36:                                      ; preds = %.lr.ph42.17
  br label %190

.loopexit38:                                      ; preds = %.lr.ph42.18
  br label %190

.loopexit40:                                      ; preds = %.lr.ph42.19
  br label %190

; <label>:190:                                    ; preds = %.loopexit40, %.loopexit38, %.loopexit36, %.loopexit34, %.loopexit32, %.loopexit30, %.loopexit28, %.loopexit26, %.loopexit24, %.loopexit22, %.loopexit20, %.loopexit18, %.loopexit15, %.loopexit13, %.loopexit11, %.loopexit9, %.loopexit7, %.loopexit5, %.loopexit3, %.loopexit1
  %.12.lcssa15 = phi %struct.zzzz* [ %134, %.loopexit1 ], [ %204, %.loopexit3 ], [ null, %.loopexit5 ], [ %1402, %.loopexit7 ], [ %1459, %.loopexit9 ], [ %1516, %.loopexit11 ], [ %1573, %.loopexit13 ], [ %1630, %.loopexit15 ], [ %1687, %.loopexit18 ], [ %1744, %.loopexit20 ], [ %1801, %.loopexit22 ], [ %1858, %.loopexit24 ], [ %1915, %.loopexit26 ], [ %1972, %.loopexit28 ], [ %2029, %.loopexit30 ], [ %2086, %.loopexit32 ], [ %2143, %.loopexit34 ], [ %2200, %.loopexit36 ], [ %2257, %.loopexit38 ], [ %2314, %.loopexit40 ]
  call void @__loop_termination_test___3()
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %192 = load i8*, i8** @progName, align 8
  %193 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* %195, i8* %192, i8* %194)
  %197 = load i8*, i8** @progName, align 8
  call void @usage(i8* %197)
  call void @exit(i32 1) #11
  unreachable

; <label>:198:                                    ; preds = %185, %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167
  call void @__loop_iteration_test___4()
  %199 = load i8*, i8** %157, align 8
  %scevgep2 = getelementptr i8, i8* %199, i64 2
  %200 = load i8, i8* %scevgep2, align 1
  %201 = sext i8 107 to i32
  %202 = icmp ne i32 107, 0
  br i1 true, label %.lr.ph42.113, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %2918, %2889, %2860, %2831, %2802, %2773, %2744, %2715, %2686, %2657, %2628, %2599, %2570, %2541, %2512, %2483, %2454, %2425, %2396, %198
  call void @__loop_termination_test___4()
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %156, %149, %143
  call void @__loop_iteration_test___3()
  %203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 1
  %204 = load %struct.zzzz*, %struct.zzzz** %203, align 8
  %205 = icmp ne i64 10000590, 0
  %206 = icmp ne %struct.zzzz* %204, null
  br i1 true, label %.lr.ph48.1, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %._crit_edge43.19, %.lr.ph48.19, %._crit_edge43.18, %.lr.ph48.18, %._crit_edge43.17, %.lr.ph48.17, %._crit_edge43.16, %.lr.ph48.16, %._crit_edge43.15, %.lr.ph48.15, %._crit_edge43.14, %.lr.ph48.14, %._crit_edge43.13, %.lr.ph48.13, %._crit_edge43.12, %.lr.ph48.12, %._crit_edge43.11, %.lr.ph48.11, %._crit_edge43.10, %.lr.ph48.10, %._crit_edge43.9, %.lr.ph48.9, %._crit_edge43.8, %.lr.ph48.8, %._crit_edge43.7, %.lr.ph48.7, %._crit_edge43.6, %.lr.ph48.6, %._crit_edge43.5, %.lr.ph48.5, %._crit_edge43.4, %.lr.ph48.4, %._crit_edge43.3, %.lr.ph48.3, %._crit_edge43.2, %.lr.ph48.2, %._crit_edge43.1, %.lr.ph48.1, %._crit_edge43, %.lr.ph48
  call void @__loop_termination_test___3()
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %133
  %207 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %208 = icmp ne i64 10000562, 0
  %209 = icmp ne %struct.zzzz* %207, null
  br i1 true, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %.lr.ph39.preheader
  call void @unroll_loop(i32 5)
  %210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr [6 x i8], [6 x i8]* @18, i64 0, i64 0
  %213 = getelementptr [3 x i8], [3 x i8]* @19, i64 0, i64 0
  %214 = call i32 @strcmp(i8* %212, i8* %213) #10
  %215 = icmp eq i32 1, 0
  br i1 false, label %.loopexit.loopexit, label %216

; <label>:216:                                    ; preds = %.lr.ph39
  %217 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr [6 x i8], [6 x i8]* @20, i64 0, i64 0
  %220 = getelementptr [9 x i8], [9 x i8]* @21, i64 0, i64 0
  %221 = call i32 @strcmp(i8* %219, i8* %220) #10
  %222 = icmp eq i32 1, 0
  br i1 false, label %223, label %224

; <label>:223:                                    ; preds = %216
  store i32 2, i32* @srcMode, align 4
  br label %370

; <label>:224:                                    ; preds = %216
  %225 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = getelementptr [6 x i8], [6 x i8]* @22, i64 0, i64 0
  %228 = getelementptr [13 x i8], [13 x i8]* @23, i64 0, i64 0
  %229 = call i32 @strcmp(i8* %227, i8* %228) #10
  %230 = icmp eq i32 1, 0
  br i1 false, label %231, label %232

; <label>:231:                                    ; preds = %224
  store i32 2, i32* @opMode, align 4
  br label %370

; <label>:232:                                    ; preds = %224
  %233 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr [6 x i8], [6 x i8]* @24, i64 0, i64 0
  %236 = getelementptr [11 x i8], [11 x i8]* @25, i64 0, i64 0
  %237 = call i32 @strcmp(i8* %235, i8* %236) #10
  %238 = icmp eq i32 1, 0
  br i1 false, label %239, label %240

; <label>:239:                                    ; preds = %232
  store i32 1, i32* @opMode, align 4
  br label %370

; <label>:240:                                    ; preds = %232
  %241 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = getelementptr [6 x i8], [6 x i8]* @26, i64 0, i64 0
  %244 = getelementptr [8 x i8], [8 x i8]* @27, i64 0, i64 0
  %245 = call i32 @strcmp(i8* %243, i8* %244) #10
  %246 = icmp eq i32 1, 0
  br i1 false, label %247, label %248

; <label>:247:                                    ; preds = %240
  store i8 1, i8* @forceOverwrite, align 1
  br label %370

; <label>:248:                                    ; preds = %240
  %249 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = getelementptr [6 x i8], [6 x i8]* @28, i64 0, i64 0
  %252 = getelementptr [7 x i8], [7 x i8]* @29, i64 0, i64 0
  %253 = call i32 @strcmp(i8* %251, i8* %252) #10
  %254 = icmp eq i32 1, 0
  br i1 false, label %255, label %256

; <label>:255:                                    ; preds = %248
  store i32 3, i32* @opMode, align 4
  br label %370

; <label>:256:                                    ; preds = %248
  %257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  %259 = getelementptr [6 x i8], [6 x i8]* @30, i64 0, i64 0
  %260 = getelementptr [7 x i8], [7 x i8]* @31, i64 0, i64 0
  %261 = call i32 @strcmp(i8* %259, i8* %260) #10
  %262 = icmp eq i32 1, 0
  br i1 false, label %263, label %264

; <label>:263:                                    ; preds = %256
  store i8 1, i8* @keepInputFiles, align 1
  br label %370

; <label>:264:                                    ; preds = %256
  %265 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8
  %267 = getelementptr [6 x i8], [6 x i8]* @32, i64 0, i64 0
  %268 = getelementptr [8 x i8], [8 x i8]* @33, i64 0, i64 0
  %269 = call i32 @strcmp(i8* %267, i8* %268) #10
  %270 = icmp eq i32 1, 0
  br i1 false, label %271, label %272

; <label>:271:                                    ; preds = %264
  store i8 1, i8* @smallMode, align 1
  br label %370

; <label>:272:                                    ; preds = %264
  %273 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr [6 x i8], [6 x i8]* @34, i64 0, i64 0
  %276 = getelementptr [8 x i8], [8 x i8]* @35, i64 0, i64 0
  %277 = call i32 @strcmp(i8* %275, i8* %276) #10
  %278 = icmp eq i32 1, 0
  br i1 false, label %279, label %280

; <label>:279:                                    ; preds = %272
  store i8 0, i8* @noisy, align 1
  br label %370

; <label>:280:                                    ; preds = %272
  %281 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = getelementptr [6 x i8], [6 x i8]* @36, i64 0, i64 0
  %284 = getelementptr [10 x i8], [10 x i8]* @37, i64 0, i64 0
  %285 = call i32 @strcmp(i8* %283, i8* %284) #10
  %286 = icmp eq i32 1, 0
  br i1 false, label %287, label %288

; <label>:287:                                    ; preds = %280
  call void @license()
  br label %370

; <label>:288:                                    ; preds = %280
  %289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = getelementptr [6 x i8], [6 x i8]* @38, i64 0, i64 0
  %292 = getelementptr [10 x i8], [10 x i8]* @39, i64 0, i64 0
  %293 = call i32 @strcmp(i8* %291, i8* %292) #10
  %294 = icmp eq i32 1, 0
  br i1 false, label %295, label %296

; <label>:295:                                    ; preds = %288
  call void @license()
  br label %370

; <label>:296:                                    ; preds = %288
  %297 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = getelementptr [6 x i8], [6 x i8]* @40, i64 0, i64 0
  %300 = getelementptr [14 x i8], [14 x i8]* @41, i64 0, i64 0
  %301 = call i32 @strcmp(i8* %299, i8* %300) #10
  %302 = icmp eq i32 1, 0
  br i1 false, label %303, label %304

; <label>:303:                                    ; preds = %296
  store i32 1, i32* @workFactor, align 4
  br label %370

; <label>:304:                                    ; preds = %296
  %305 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = getelementptr [6 x i8], [6 x i8]* @42, i64 0, i64 0
  %308 = getelementptr [18 x i8], [18 x i8]* @43, i64 0, i64 0
  %309 = call i32 @strcmp(i8* %307, i8* %308) #10
  %310 = icmp eq i32 1, 0
  %311 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  br i1 false, label %313, label %314

; <label>:313:                                    ; preds = %304
  call void @redundant(i8* %312)
  br label %370

; <label>:314:                                    ; preds = %304
  %315 = getelementptr [6 x i8], [6 x i8]* @44, i64 0, i64 0
  %316 = getelementptr [18 x i8], [18 x i8]* @45, i64 0, i64 0
  %317 = call i32 @strcmp(i8* %315, i8* %316) #10
  %318 = icmp eq i32 1, 0
  %319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  br i1 false, label %321, label %322

; <label>:321:                                    ; preds = %314
  call void @redundant(i8* %320)
  br label %370

; <label>:322:                                    ; preds = %314
  %323 = getelementptr [6 x i8], [6 x i8]* @46, i64 0, i64 0
  %324 = getelementptr [7 x i8], [7 x i8]* @47, i64 0, i64 0
  %325 = call i32 @strcmp(i8* %323, i8* %324) #10
  %326 = icmp eq i32 1, 0
  br i1 false, label %327, label %328

; <label>:327:                                    ; preds = %322
  store i32 1, i32* @blockSize100k, align 4
  br label %370

; <label>:328:                                    ; preds = %322
  %329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = getelementptr [6 x i8], [6 x i8]* @48, i64 0, i64 0
  %332 = getelementptr [7 x i8], [7 x i8]* @49, i64 0, i64 0
  %333 = call i32 @strcmp(i8* %331, i8* %332) #10
  %334 = icmp eq i32 1, 0
  br i1 false, label %335, label %336

; <label>:335:                                    ; preds = %328
  store i32 9, i32* @blockSize100k, align 4
  br label %370

; <label>:336:                                    ; preds = %328
  %337 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = getelementptr [6 x i8], [6 x i8]* @50, i64 0, i64 0
  %340 = getelementptr [10 x i8], [10 x i8]* @51, i64 0, i64 0
  %341 = call i32 @strcmp(i8* %339, i8* %340) #10
  %342 = icmp eq i32 1, 0
  br i1 false, label %343, label %346

; <label>:343:                                    ; preds = %336
  %344 = load i32, i32* @verbosity, align 4
  %345 = add nsw i32 %344, 1
  store i32 %345, i32* @verbosity, align 4
  br label %370

; <label>:346:                                    ; preds = %336
  %347 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = getelementptr [6 x i8], [6 x i8]* @52, i64 0, i64 0
  %350 = getelementptr [7 x i8], [7 x i8]* @53, i64 0, i64 0
  %351 = call i32 @strcmp(i8* %349, i8* %350) #10
  %352 = icmp eq i32 1, 0
  br i1 false, label %353, label %355

; <label>:353:                                    ; preds = %5133, %5017, %4901, %4785, %4669, %4553, %4437, %4321, %4205, %4089, %3973, %3857, %3741, %3625, %3509, %3393, %3277, %3161, %3040, %346
  call void @__loop_termination_test___5()
  %354 = load i8*, i8** @progName, align 8
  call void @usage(i8* %354)
  call void @exit(i32 0) #11
  unreachable

; <label>:355:                                    ; preds = %346
  %356 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = getelementptr [6 x i8], [6 x i8]* @54, i64 0, i64 0
  %359 = getelementptr [3 x i8], [3 x i8]* @55, i64 0, i64 0
  %360 = call i32 @strncmp(i8* %358, i8* %359, i64 2) #10
  %361 = icmp eq i32 1, 0
  br i1 false, label %362, label %370

; <label>:362:                                    ; preds = %5138, %5022, %4906, %4790, %4674, %4558, %4442, %4326, %4210, %4094, %3978, %3862, %3746, %3630, %3514, %3398, %3282, %3166, %3047, %355
  %.23.lcssa13 = phi %struct.zzzz* [ %207, %355 ], [ %372, %3047 ], [ null, %3166 ], [ %3191, %3282 ], [ %3307, %3398 ], [ %3423, %3514 ], [ %3539, %3630 ], [ %3655, %3746 ], [ %3771, %3862 ], [ %3887, %3978 ], [ %4003, %4094 ], [ %4119, %4210 ], [ %4235, %4326 ], [ %4351, %4442 ], [ %4467, %4558 ], [ %4583, %4674 ], [ %4699, %4790 ], [ %4815, %4906 ], [ %4931, %5022 ], [ %5047, %5138 ]
  call void @__loop_termination_test___5()
  %363 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %364 = load i8*, i8** @progName, align 8
  %365 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  %367 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %368 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %363, i8* %367, i8* %364, i8* %366)
  %369 = load i8*, i8** @progName, align 8
  call void @usage(i8* %369)
  call void @exit(i32 1) #11
  unreachable

; <label>:370:                                    ; preds = %355, %343, %335, %327, %321, %313, %303, %295, %287, %279, %271, %263, %255, %247, %239, %231, %223
  call void @__loop_iteration_test___5()
  %371 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 1
  %372 = load %struct.zzzz*, %struct.zzzz** %371, align 8
  %373 = icmp ne i64 10000590, 0
  %374 = icmp ne %struct.zzzz* %372, null
  br i1 true, label %.lr.ph39.1, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %5161, %.lr.ph39.19, %5045, %.lr.ph39.18, %4929, %.lr.ph39.17, %4813, %.lr.ph39.16, %4697, %.lr.ph39.15, %4581, %.lr.ph39.14, %4465, %.lr.ph39.13, %4349, %.lr.ph39.12, %4233, %.lr.ph39.11, %4117, %.lr.ph39.10, %4001, %.lr.ph39.9, %3885, %.lr.ph39.8, %3769, %.lr.ph39.7, %3653, %.lr.ph39.6, %3537, %.lr.ph39.5, %3421, %.lr.ph39.4, %3305, %.lr.ph39.3, %3189, %.lr.ph39.2, %3072, %.lr.ph39.1, %370, %.lr.ph39
  call void @__loop_termination_test___5()
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %375 = load i32, i32* @verbosity, align 4
  %376 = icmp sgt i32 0, 4
  br i1 false, label %377, label %378

; <label>:377:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %378

; <label>:378:                                    ; preds = %377, %.loopexit
  %379 = load i32, i32* @opMode, align 4
  %380 = icmp eq i32 1, 1
  br i1 true, label %381, label %388

; <label>:381:                                    ; preds = %378
  %382 = load i8, i8* @smallMode, align 1
  %383 = zext i8 1 to i32
  %384 = icmp ne i32 1, 0
  %385 = load i32, i32* @blockSize100k, align 4
  %386 = icmp sgt i32 9, 2
  %or.cond3 = and i1 true, true
  br i1 true, label %387, label %388

; <label>:387:                                    ; preds = %381
  store i32 2, i32* @blockSize100k, align 4
  br label %388

; <label>:388:                                    ; preds = %387, %381, %378
  %389 = load i32, i32* @opMode, align 4
  %390 = icmp eq i32 1, 3
  %391 = load i32, i32* @srcMode, align 4
  %392 = icmp eq i32 3, 2
  %or.cond5 = and i1 false, false
  br i1 false, label %393, label %398

; <label>:393:                                    ; preds = %388
  %394 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %395 = load i8*, i8** @progName, align 8
  %396 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %397 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %394, i8* %396, i8* %395)
  call void @exit(i32 1) #11
  unreachable

; <label>:398:                                    ; preds = %388
  %399 = load i32, i32* @srcMode, align 4
  %400 = icmp eq i32 3, 2
  %401 = load i32, i32* @numFileNames, align 4
  %402 = icmp eq i32 1, 0
  %or.cond7 = and i1 false, false
  br i1 false, label %403, label %404

; <label>:403:                                    ; preds = %398
  store i32 1, i32* @srcMode, align 4
  br label %404

; <label>:404:                                    ; preds = %403, %398
  %405 = load i32, i32* @opMode, align 4
  %406 = icmp ne i32 1, 1
  br i1 false, label %407, label %408

; <label>:407:                                    ; preds = %404
  store i32 0, i32* @blockSize100k, align 4
  br label %408

; <label>:408:                                    ; preds = %407, %404
  %409 = load i32, i32* @srcMode, align 4
  %410 = icmp eq i32 3, 3
  br i1 true, label %411, label %415

; <label>:411:                                    ; preds = %408
  %412 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %413 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %414 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %415

; <label>:415:                                    ; preds = %411, %408
  %416 = load i32, i32* @opMode, align 4
  %417 = icmp eq i32 1, 1
  br i1 true, label %418, label %448

; <label>:418:                                    ; preds = %415
  %419 = load i32, i32* @srcMode, align 4
  %420 = icmp eq i32 3, 1
  br i1 false, label %421, label %422

; <label>:421:                                    ; preds = %418
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:422:                                    ; preds = %418
  %423 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %424 = icmp ne i64 10000562, 0
  %425 = icmp ne %struct.zzzz* %423, null
  br i1 true, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %422
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %.lr.ph23.preheader
  call void @unroll_loop(i32 6)
  %426 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %423, i32 0, i32 0
  %427 = load i8*, i8** %426, align 8
  %428 = getelementptr [6 x i8], [6 x i8]* @94, i64 0, i64 0
  %429 = getelementptr [3 x i8], [3 x i8]* @95, i64 0, i64 0
  %430 = call i32 @strcmp(i8* %428, i8* %429) #10
  %431 = icmp eq i32 1, 0
  br i1 false, label %443, label %432

; <label>:432:                                    ; preds = %.lr.ph23
  %433 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %423, i32 0, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = load i8, i8* %434, align 1
  %436 = sext i8 45 to i32
  %437 = icmp eq i32 45, 45
  br i1 true, label %443, label %438

; <label>:438:                                    ; preds = %432
  %439 = load i32, i32* @numFilesProcessed, align 4
  %440 = add nsw i32 %439, 1
  store i32 %440, i32* @numFilesProcessed, align 4
  %441 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %423, i32 0, i32 0
  %442 = load i8*, i8** %441, align 8
  call void @compress(i8* %442)
  br label %443

; <label>:443:                                    ; preds = %438, %432, %.lr.ph23
  %.3 = phi i8 [ 1, %438 ], [ 0, %.lr.ph23 ], [ 1, %432 ]
  call void @__loop_iteration_test___6()
  %444 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %423, i32 0, i32 1
  %445 = load %struct.zzzz*, %struct.zzzz** %444, align 8
  %446 = icmp ne i64 10000590, 0
  %447 = icmp ne %struct.zzzz* %445, null
  br i1 true, label %.lr.ph23.1, label %._crit_edge24.loopexit

; <label>:448:                                    ; preds = %415
  %449 = load i32, i32* @opMode, align 4
  %450 = icmp eq i32 %449, 2
  br i1 %450, label %451, label %484

; <label>:451:                                    ; preds = %448
  store i8 0, i8* @unzFailsExist, align 1
  %452 = load i32, i32* @srcMode, align 4
  %453 = icmp eq i32 %452, 1
  br i1 %453, label %454, label %455

; <label>:454:                                    ; preds = %451
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:455:                                    ; preds = %451
  %456 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %457 = icmp ne %struct.zzzz* %456, null
  br i1 %457, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %455
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %476, %.lr.ph29.preheader
  %.427 = phi i8 [ %.5, %476 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %478, %476 ], [ %456, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %458 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %459 = load i8*, i8** %458, align 8
  %460 = call i32 @strcmp(i8* %459, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %476, label %462

; <label>:462:                                    ; preds = %.lr.ph29
  %463 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %464 = load i8*, i8** %463, align 8
  %465 = getelementptr inbounds i8, i8* %464, i64 0
  %466 = load i8, i8* %465, align 1
  %467 = sext i8 %466 to i32
  %468 = icmp eq i32 %467, 45
  %469 = zext i8 %.427 to i32
  %470 = icmp ne i32 %469, 0
  %or.cond11 = and i1 %468, %470
  br i1 %or.cond11, label %476, label %471

; <label>:471:                                    ; preds = %462
  %472 = load i32, i32* @numFilesProcessed, align 4
  %473 = add nsw i32 %472, 1
  store i32 %473, i32* @numFilesProcessed, align 4
  %474 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %475 = load i8*, i8** %474, align 8
  call void @uncompress(i8* %475)
  br label %476

; <label>:476:                                    ; preds = %471, %462, %.lr.ph29
  %.5 = phi i8 [ %.427, %471 ], [ 0, %.lr.ph29 ], [ %.427, %462 ]
  %477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %478 = load %struct.zzzz*, %struct.zzzz** %477, align 8
  %479 = icmp ne %struct.zzzz* %478, null
  br i1 %479, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %476
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %455, %454
  %480 = load i8, i8* @unzFailsExist, align 1
  %481 = icmp ne i8 %480, 0
  br i1 %481, label %482, label %._crit_edge24

; <label>:482:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %483 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %483) #11
  unreachable

; <label>:484:                                    ; preds = %448
  store i8 0, i8* @testFailsExist, align 1
  %485 = load i32, i32* @srcMode, align 4
  %486 = icmp eq i32 %485, 1
  br i1 %486, label %487, label %488

; <label>:487:                                    ; preds = %484
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:488:                                    ; preds = %484
  %489 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %490 = icmp ne %struct.zzzz* %489, null
  br i1 %490, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %488
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %509, %.lr.ph35.preheader
  %.633 = phi i8 [ %.7, %509 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %511, %509 ], [ %489, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %491 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %492 = load i8*, i8** %491, align 8
  %493 = call i32 @strcmp(i8* %492, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %509, label %495

; <label>:495:                                    ; preds = %.lr.ph35
  %496 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %497 = load i8*, i8** %496, align 8
  %498 = getelementptr inbounds i8, i8* %497, i64 0
  %499 = load i8, i8* %498, align 1
  %500 = sext i8 %499 to i32
  %501 = icmp eq i32 %500, 45
  %502 = zext i8 %.633 to i32
  %503 = icmp ne i32 %502, 0
  %or.cond13 = and i1 %501, %503
  br i1 %or.cond13, label %509, label %504

; <label>:504:                                    ; preds = %495
  %505 = load i32, i32* @numFilesProcessed, align 4
  %506 = add nsw i32 %505, 1
  store i32 %506, i32* @numFilesProcessed, align 4
  %507 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %508 = load i8*, i8** %507, align 8
  call void @testf(i8* %508)
  br label %509

; <label>:509:                                    ; preds = %504, %495, %.lr.ph35
  %.7 = phi i8 [ %.633, %504 ], [ 0, %.lr.ph35 ], [ %.633, %495 ]
  %510 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %511 = load %struct.zzzz*, %struct.zzzz** %510, align 8
  %512 = icmp ne %struct.zzzz* %511, null
  br i1 %512, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %509
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %488, %487
  %513 = load i8, i8* @testFailsExist, align 1
  %514 = zext i8 %513 to i32
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %516, label %._crit_edge24

; <label>:516:                                    ; preds = %._crit_edge36
  %517 = load i8, i8* @noisy, align 1
  %518 = zext i8 %517 to i32
  %519 = icmp ne i32 %518, 0
  br i1 %519, label %520, label %._crit_edge24

; <label>:520:                                    ; preds = %516
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %522 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %523 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %521, i8* %522)
  call void @setExit(i32 2)
  %524 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %524) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %5562, %5541, %5520, %5499, %5478, %5457, %5436, %5415, %5394, %5373, %5352, %5331, %5310, %5289, %5268, %5247, %5226, %5205, %5183, %443
  call void @__loop_termination_test___6()
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %516, %._crit_edge36, %._crit_edge30, %422, %421
  %525 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %526 = icmp ne i64 10000562, 0
  %527 = icmp ne %struct.zzzz* %525, null
  br i1 true, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %536, %.lr.ph.preheader
  %.6718 = phi %struct.zzzz* [ %529, %536 ], [ %525, %.lr.ph.preheader ]
  call void @unroll_loop(i32 9)
  %528 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 1
  %529 = load %struct.zzzz*, %struct.zzzz** %528, align 8
  %530 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %531 = load i8*, i8** %530, align 8
  %532 = icmp ne i8* %531, null
  br i1 %532, label %533, label %536

; <label>:533:                                    ; preds = %.lr.ph
  %534 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.6718, i32 0, i32 0
  %535 = load i8*, i8** %534, align 8
  call void @free(i8* %535) #9
  br label %536

; <label>:536:                                    ; preds = %533, %.lr.ph
  %537 = bitcast %struct.zzzz* %.6718 to i8*
  call void @free(i8* %537) #9
  %538 = icmp ne %struct.zzzz* %529, null
  br i1 %538, label %.lr.ph, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %536
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %539 = load i32, i32* @exitValue, align 4
  ret i32 %539

; <label>:540:                                    ; preds = %42
  call void @unroll_loop(i32 0)
  %541 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %542 = sext i8 122 to i32
  %543 = icmp eq i32 122, 47
  br i1 false, label %544, label %545

; <label>:544:                                    ; preds = %540
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), i8** @progName, align 8
  br label %545

; <label>:545:                                    ; preds = %544, %540
  call void @__loop_iteration_test___0()
  %546 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %547 = sext i8 105 to i32
  %548 = icmp ne i32 105, 0
  br i1 true, label %549, label %._crit_edge64.loopexit

; <label>:549:                                    ; preds = %545
  call void @unroll_loop(i32 0)
  %550 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %551 = sext i8 105 to i32
  %552 = icmp eq i32 105, 47
  br i1 false, label %553, label %554

; <label>:553:                                    ; preds = %549
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), i8** @progName, align 8
  br label %554

; <label>:554:                                    ; preds = %553, %549
  call void @__loop_iteration_test___0()
  %555 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %556 = sext i8 112 to i32
  %557 = icmp ne i32 112, 0
  br i1 true, label %558, label %._crit_edge64.loopexit

; <label>:558:                                    ; preds = %554
  call void @unroll_loop(i32 0)
  %559 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %560 = sext i8 112 to i32
  %561 = icmp eq i32 112, 47
  br i1 false, label %562, label %563

; <label>:562:                                    ; preds = %558
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), i8** @progName, align 8
  br label %563

; <label>:563:                                    ; preds = %562, %558
  call void @__loop_iteration_test___0()
  %564 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %565 = sext i8 50 to i32
  %566 = icmp ne i32 50, 0
  br i1 true, label %567, label %._crit_edge64.loopexit

; <label>:567:                                    ; preds = %563
  call void @unroll_loop(i32 0)
  %568 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %569 = sext i8 50 to i32
  %570 = icmp eq i32 50, 47
  br i1 false, label %571, label %572

; <label>:571:                                    ; preds = %567
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), i8** @progName, align 8
  br label %572

; <label>:572:                                    ; preds = %571, %567
  call void @__loop_iteration_test___0()
  %573 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %574 = sext i8 0 to i32
  %575 = icmp ne i32 0, 0
  br i1 false, label %576, label %._crit_edge64.loopexit

; <label>:576:                                    ; preds = %572
  call void @unroll_loop(i32 0)
  %577 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %578 = sext i8 %577 to i32
  %579 = icmp eq i32 %578, 47
  br i1 %579, label %580, label %581

; <label>:580:                                    ; preds = %576
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), i8** @progName, align 8
  br label %581

; <label>:581:                                    ; preds = %580, %576
  call void @__loop_iteration_test___0()
  %582 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %583 = sext i8 %582 to i32
  %584 = icmp ne i32 %583, 0
  br i1 %584, label %585, label %._crit_edge64.loopexit

; <label>:585:                                    ; preds = %581
  call void @unroll_loop(i32 0)
  %586 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %587 = sext i8 %586 to i32
  %588 = icmp eq i32 %587, 47
  br i1 %588, label %589, label %590

; <label>:589:                                    ; preds = %585
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), i8** @progName, align 8
  br label %590

; <label>:590:                                    ; preds = %589, %585
  call void @__loop_iteration_test___0()
  %591 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %592 = sext i8 %591 to i32
  %593 = icmp ne i32 %592, 0
  br i1 %593, label %594, label %._crit_edge64.loopexit

; <label>:594:                                    ; preds = %590
  call void @unroll_loop(i32 0)
  %595 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %596 = sext i8 %595 to i32
  %597 = icmp eq i32 %596, 47
  br i1 %597, label %598, label %599

; <label>:598:                                    ; preds = %594
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), i8** @progName, align 8
  br label %599

; <label>:599:                                    ; preds = %598, %594
  call void @__loop_iteration_test___0()
  %600 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %601 = sext i8 %600 to i32
  %602 = icmp ne i32 %601, 0
  br i1 %602, label %603, label %._crit_edge64.loopexit

; <label>:603:                                    ; preds = %599
  call void @unroll_loop(i32 0)
  %604 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %605 = sext i8 %604 to i32
  %606 = icmp eq i32 %605, 47
  br i1 %606, label %607, label %608

; <label>:607:                                    ; preds = %603
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), i8** @progName, align 8
  br label %608

; <label>:608:                                    ; preds = %607, %603
  call void @__loop_iteration_test___0()
  %609 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %610 = sext i8 %609 to i32
  %611 = icmp ne i32 %610, 0
  br i1 %611, label %612, label %._crit_edge64.loopexit

; <label>:612:                                    ; preds = %608
  call void @unroll_loop(i32 0)
  %613 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %614 = sext i8 %613 to i32
  %615 = icmp eq i32 %614, 47
  br i1 %615, label %616, label %617

; <label>:616:                                    ; preds = %612
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), i8** @progName, align 8
  br label %617

; <label>:617:                                    ; preds = %616, %612
  call void @__loop_iteration_test___0()
  %618 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %619 = sext i8 %618 to i32
  %620 = icmp ne i32 %619, 0
  br i1 %620, label %621, label %._crit_edge64.loopexit

; <label>:621:                                    ; preds = %617
  call void @unroll_loop(i32 0)
  %622 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %623 = sext i8 %622 to i32
  %624 = icmp eq i32 %623, 47
  br i1 %624, label %625, label %626

; <label>:625:                                    ; preds = %621
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), i8** @progName, align 8
  br label %626

; <label>:626:                                    ; preds = %625, %621
  call void @__loop_iteration_test___0()
  %627 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %628 = sext i8 %627 to i32
  %629 = icmp ne i32 %628, 0
  br i1 %629, label %630, label %._crit_edge64.loopexit

; <label>:630:                                    ; preds = %626
  call void @unroll_loop(i32 0)
  %631 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %632 = sext i8 %631 to i32
  %633 = icmp eq i32 %632, 47
  br i1 %633, label %634, label %635

; <label>:634:                                    ; preds = %630
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), i8** @progName, align 8
  br label %635

; <label>:635:                                    ; preds = %634, %630
  call void @__loop_iteration_test___0()
  %636 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %637 = sext i8 %636 to i32
  %638 = icmp ne i32 %637, 0
  br i1 %638, label %639, label %._crit_edge64.loopexit

; <label>:639:                                    ; preds = %635
  call void @unroll_loop(i32 0)
  %640 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %641 = sext i8 %640 to i32
  %642 = icmp eq i32 %641, 47
  br i1 %642, label %643, label %644

; <label>:643:                                    ; preds = %639
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), i8** @progName, align 8
  br label %644

; <label>:644:                                    ; preds = %643, %639
  call void @__loop_iteration_test___0()
  %645 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %646 = sext i8 %645 to i32
  %647 = icmp ne i32 %646, 0
  br i1 %647, label %648, label %._crit_edge64.loopexit

; <label>:648:                                    ; preds = %644
  call void @unroll_loop(i32 0)
  %649 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %650 = sext i8 %649 to i32
  %651 = icmp eq i32 %650, 47
  br i1 %651, label %652, label %653

; <label>:652:                                    ; preds = %648
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), i8** @progName, align 8
  br label %653

; <label>:653:                                    ; preds = %652, %648
  call void @__loop_iteration_test___0()
  %654 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %655 = sext i8 %654 to i32
  %656 = icmp ne i32 %655, 0
  br i1 %656, label %657, label %._crit_edge64.loopexit

; <label>:657:                                    ; preds = %653
  call void @unroll_loop(i32 0)
  %658 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %659 = sext i8 %658 to i32
  %660 = icmp eq i32 %659, 47
  br i1 %660, label %661, label %662

; <label>:661:                                    ; preds = %657
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), i8** @progName, align 8
  br label %662

; <label>:662:                                    ; preds = %661, %657
  call void @__loop_iteration_test___0()
  %663 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %664 = sext i8 %663 to i32
  %665 = icmp ne i32 %664, 0
  br i1 %665, label %666, label %._crit_edge64.loopexit

; <label>:666:                                    ; preds = %662
  call void @unroll_loop(i32 0)
  %667 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %668 = sext i8 %667 to i32
  %669 = icmp eq i32 %668, 47
  br i1 %669, label %670, label %671

; <label>:670:                                    ; preds = %666
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), i8** @progName, align 8
  br label %671

; <label>:671:                                    ; preds = %670, %666
  call void @__loop_iteration_test___0()
  %672 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %673 = sext i8 %672 to i32
  %674 = icmp ne i32 %673, 0
  br i1 %674, label %675, label %._crit_edge64.loopexit

; <label>:675:                                    ; preds = %671
  call void @unroll_loop(i32 0)
  %676 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %677 = sext i8 %676 to i32
  %678 = icmp eq i32 %677, 47
  br i1 %678, label %679, label %680

; <label>:679:                                    ; preds = %675
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), i8** @progName, align 8
  br label %680

; <label>:680:                                    ; preds = %679, %675
  call void @__loop_iteration_test___0()
  %681 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %682 = sext i8 %681 to i32
  %683 = icmp ne i32 %682, 0
  br i1 %683, label %684, label %._crit_edge64.loopexit

; <label>:684:                                    ; preds = %680
  call void @unroll_loop(i32 0)
  %685 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %686 = sext i8 %685 to i32
  %687 = icmp eq i32 %686, 47
  br i1 %687, label %688, label %689

; <label>:688:                                    ; preds = %684
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), i8** @progName, align 8
  br label %689

; <label>:689:                                    ; preds = %688, %684
  call void @__loop_iteration_test___0()
  %690 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %691 = sext i8 %690 to i32
  %692 = icmp ne i32 %691, 0
  br i1 %692, label %693, label %._crit_edge64.loopexit

; <label>:693:                                    ; preds = %689
  call void @unroll_loop(i32 0)
  %694 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %695 = sext i8 %694 to i32
  %696 = icmp eq i32 %695, 47
  br i1 %696, label %697, label %698

; <label>:697:                                    ; preds = %693
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), i8** @progName, align 8
  br label %698

; <label>:698:                                    ; preds = %697, %693
  call void @__loop_iteration_test___0()
  %699 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %700 = sext i8 %699 to i32
  %701 = icmp ne i32 %700, 0
  br i1 %701, label %702, label %._crit_edge64.loopexit

; <label>:702:                                    ; preds = %698
  call void @unroll_loop(i32 0)
  %703 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %704 = sext i8 %703 to i32
  %705 = icmp eq i32 %704, 47
  br i1 %705, label %706, label %707

; <label>:706:                                    ; preds = %702
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), i8** @progName, align 8
  br label %707

; <label>:707:                                    ; preds = %706, %702
  call void @__loop_iteration_test___0()
  %708 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), align 1
  %709 = sext i8 %708 to i32
  br label %._crit_edge64.loopexit

.lr.ph57.1:                                       ; preds = %.lr.ph57
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %710 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4, i64 1
  %711 = load i8*, i8** %scevgep7.1, align 8
  %712 = call %struct.zzzz* @snocString_clone.17(%struct.zzzz* %710, i8* %711)
  store %struct.zzzz* %712, %struct.zzzz** %22, align 8
  br label %._crit_edge58.loopexit

.lr.ph53.1:                                       ; preds = %82
  call void @unroll_loop(i32 2)
  %713 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %714 = load i8*, i8** %713, align 8
  %715 = getelementptr [10 x i8], [10 x i8]* @10, i64 0, i64 0
  %716 = getelementptr [3 x i8], [3 x i8]* @11, i64 0, i64 0
  %717 = call i32 @strcmp(i8* %715, i8* %716) #10
  %718 = icmp eq i32 1, 0
  br i1 false, label %743, label %719

; <label>:719:                                    ; preds = %.lr.ph53.1
  %720 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %721 = load i8*, i8** %720, align 8
  %722 = load i8, i8* %721, align 1
  %723 = sext i8 104 to i32
  %724 = icmp eq i32 104, 45
  %725 = zext i8 1 to i32
  %726 = icmp ne i32 1, 0
  %or.cond.1 = and i1 false, true
  br i1 false, label %743, label %727

; <label>:727:                                    ; preds = %719
  %728 = load i32, i32* @numFileNames, align 4
  %729 = add nsw i32 0, 1
  store i32 1, i32* @numFileNames, align 4
  %730 = load i32, i32* @longestFileName, align 4
  %731 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %732 = load i8*, i8** %731, align 8
  %733 = getelementptr [10 x i8], [10 x i8]* @12, i64 0, i64 0
  %734 = call i64 @strlen(i8* %733) #10
  %735 = trunc i64 9 to i32
  %736 = icmp slt i32 7, 9
  br i1 true, label %737, label %743

; <label>:737:                                    ; preds = %727
  %738 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %739 = load i8*, i8** %738, align 8
  %740 = getelementptr [10 x i8], [10 x i8]* @13, i64 0, i64 0
  %741 = call i64 @strlen(i8* %740) #10
  %742 = trunc i64 9 to i32
  store i32 9, i32* @longestFileName, align 4
  br label %743

; <label>:743:                                    ; preds = %737, %727, %719, %.lr.ph53.1
  %.1.1 = phi i8 [ 0, %.lr.ph53.1 ], [ 1, %719 ], [ 1, %737 ], [ 1, %727 ]
  call void @__loop_iteration_test___2()
  %744 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 1
  %745 = load %struct.zzzz*, %struct.zzzz** %744, align 8
  %746 = icmp ne i64 0, 0
  %747 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph53.2, label %._crit_edge54.loopexit

.lr.ph53.2:                                       ; preds = %743
  call void @unroll_loop(i32 2)
  %748 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %749 = load i8*, i8** %748, align 8
  %750 = call i32 @strcmp(i8* %749, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %751 = icmp eq i32 %750, 0
  br i1 %751, label %774, label %752

; <label>:752:                                    ; preds = %.lr.ph53.2
  %753 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %754 = load i8*, i8** %753, align 8
  %755 = load i8, i8* %754, align 1
  %756 = sext i8 %755 to i32
  %757 = icmp eq i32 %756, 45
  %758 = zext i8 1 to i32
  %759 = icmp ne i32 %758, 0
  %or.cond.2 = and i1 %757, %759
  br i1 %or.cond.2, label %774, label %760

; <label>:760:                                    ; preds = %752
  %761 = load i32, i32* @numFileNames, align 4
  %762 = add nsw i32 %761, 1
  store i32 %762, i32* @numFileNames, align 4
  %763 = load i32, i32* @longestFileName, align 4
  %764 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %765 = load i8*, i8** %764, align 8
  %766 = call i64 @strlen(i8* %765) #10
  %767 = trunc i64 %766 to i32
  %768 = icmp slt i32 %763, %767
  br i1 %768, label %769, label %774

; <label>:769:                                    ; preds = %760
  %770 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %771 = load i8*, i8** %770, align 8
  %772 = call i64 @strlen(i8* %771) #10
  %773 = trunc i64 %772 to i32
  store i32 %773, i32* @longestFileName, align 4
  br label %774

; <label>:774:                                    ; preds = %769, %760, %752, %.lr.ph53.2
  %.1.2 = phi i8 [ 0, %.lr.ph53.2 ], [ 1, %752 ], [ 1, %769 ], [ 1, %760 ]
  call void @__loop_iteration_test___2()
  %775 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %776 = load %struct.zzzz*, %struct.zzzz** %775, align 8
  %777 = icmp ne %struct.zzzz* %776, null
  br i1 %777, label %.lr.ph53.3, label %._crit_edge54.loopexit

.lr.ph53.3:                                       ; preds = %774
  call void @unroll_loop(i32 2)
  %778 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %776, i32 0, i32 0
  %779 = load i8*, i8** %778, align 8
  %780 = call i32 @strcmp(i8* %779, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %804, label %782

; <label>:782:                                    ; preds = %.lr.ph53.3
  %783 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %776, i32 0, i32 0
  %784 = load i8*, i8** %783, align 8
  %785 = load i8, i8* %784, align 1
  %786 = sext i8 %785 to i32
  %787 = icmp eq i32 %786, 45
  %788 = zext i8 %.1.2 to i32
  %789 = icmp ne i32 %788, 0
  %or.cond.3 = and i1 %787, %789
  br i1 %or.cond.3, label %804, label %790

; <label>:790:                                    ; preds = %782
  %791 = load i32, i32* @numFileNames, align 4
  %792 = add nsw i32 %791, 1
  store i32 %792, i32* @numFileNames, align 4
  %793 = load i32, i32* @longestFileName, align 4
  %794 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %776, i32 0, i32 0
  %795 = load i8*, i8** %794, align 8
  %796 = call i64 @strlen(i8* %795) #10
  %797 = trunc i64 %796 to i32
  %798 = icmp slt i32 %793, %797
  br i1 %798, label %799, label %804

; <label>:799:                                    ; preds = %790
  %800 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %776, i32 0, i32 0
  %801 = load i8*, i8** %800, align 8
  %802 = call i64 @strlen(i8* %801) #10
  %803 = trunc i64 %802 to i32
  store i32 %803, i32* @longestFileName, align 4
  br label %804

; <label>:804:                                    ; preds = %799, %790, %782, %.lr.ph53.3
  %.1.3 = phi i8 [ 0, %.lr.ph53.3 ], [ %.1.2, %782 ], [ %.1.2, %799 ], [ %.1.2, %790 ]
  call void @__loop_iteration_test___2()
  %805 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %776, i32 0, i32 1
  %806 = load %struct.zzzz*, %struct.zzzz** %805, align 8
  %807 = icmp ne %struct.zzzz* %806, null
  br i1 %807, label %.lr.ph53.4, label %._crit_edge54.loopexit

.lr.ph53.4:                                       ; preds = %804
  call void @unroll_loop(i32 2)
  %808 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %806, i32 0, i32 0
  %809 = load i8*, i8** %808, align 8
  %810 = call i32 @strcmp(i8* %809, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %834, label %812

; <label>:812:                                    ; preds = %.lr.ph53.4
  %813 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %806, i32 0, i32 0
  %814 = load i8*, i8** %813, align 8
  %815 = load i8, i8* %814, align 1
  %816 = sext i8 %815 to i32
  %817 = icmp eq i32 %816, 45
  %818 = zext i8 %.1.3 to i32
  %819 = icmp ne i32 %818, 0
  %or.cond.4 = and i1 %817, %819
  br i1 %or.cond.4, label %834, label %820

; <label>:820:                                    ; preds = %812
  %821 = load i32, i32* @numFileNames, align 4
  %822 = add nsw i32 %821, 1
  store i32 %822, i32* @numFileNames, align 4
  %823 = load i32, i32* @longestFileName, align 4
  %824 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %806, i32 0, i32 0
  %825 = load i8*, i8** %824, align 8
  %826 = call i64 @strlen(i8* %825) #10
  %827 = trunc i64 %826 to i32
  %828 = icmp slt i32 %823, %827
  br i1 %828, label %829, label %834

; <label>:829:                                    ; preds = %820
  %830 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %806, i32 0, i32 0
  %831 = load i8*, i8** %830, align 8
  %832 = call i64 @strlen(i8* %831) #10
  %833 = trunc i64 %832 to i32
  store i32 %833, i32* @longestFileName, align 4
  br label %834

; <label>:834:                                    ; preds = %829, %820, %812, %.lr.ph53.4
  %.1.4 = phi i8 [ 0, %.lr.ph53.4 ], [ %.1.3, %812 ], [ %.1.3, %829 ], [ %.1.3, %820 ]
  call void @__loop_iteration_test___2()
  %835 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %806, i32 0, i32 1
  %836 = load %struct.zzzz*, %struct.zzzz** %835, align 8
  %837 = icmp ne %struct.zzzz* %836, null
  br i1 %837, label %.lr.ph53.5, label %._crit_edge54.loopexit

.lr.ph53.5:                                       ; preds = %834
  call void @unroll_loop(i32 2)
  %838 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %836, i32 0, i32 0
  %839 = load i8*, i8** %838, align 8
  %840 = call i32 @strcmp(i8* %839, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %864, label %842

; <label>:842:                                    ; preds = %.lr.ph53.5
  %843 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %836, i32 0, i32 0
  %844 = load i8*, i8** %843, align 8
  %845 = load i8, i8* %844, align 1
  %846 = sext i8 %845 to i32
  %847 = icmp eq i32 %846, 45
  %848 = zext i8 %.1.4 to i32
  %849 = icmp ne i32 %848, 0
  %or.cond.5 = and i1 %847, %849
  br i1 %or.cond.5, label %864, label %850

; <label>:850:                                    ; preds = %842
  %851 = load i32, i32* @numFileNames, align 4
  %852 = add nsw i32 %851, 1
  store i32 %852, i32* @numFileNames, align 4
  %853 = load i32, i32* @longestFileName, align 4
  %854 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %836, i32 0, i32 0
  %855 = load i8*, i8** %854, align 8
  %856 = call i64 @strlen(i8* %855) #10
  %857 = trunc i64 %856 to i32
  %858 = icmp slt i32 %853, %857
  br i1 %858, label %859, label %864

; <label>:859:                                    ; preds = %850
  %860 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %836, i32 0, i32 0
  %861 = load i8*, i8** %860, align 8
  %862 = call i64 @strlen(i8* %861) #10
  %863 = trunc i64 %862 to i32
  store i32 %863, i32* @longestFileName, align 4
  br label %864

; <label>:864:                                    ; preds = %859, %850, %842, %.lr.ph53.5
  %.1.5 = phi i8 [ 0, %.lr.ph53.5 ], [ %.1.4, %842 ], [ %.1.4, %859 ], [ %.1.4, %850 ]
  call void @__loop_iteration_test___2()
  %865 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %836, i32 0, i32 1
  %866 = load %struct.zzzz*, %struct.zzzz** %865, align 8
  %867 = icmp ne %struct.zzzz* %866, null
  br i1 %867, label %.lr.ph53.6, label %._crit_edge54.loopexit

.lr.ph53.6:                                       ; preds = %864
  call void @unroll_loop(i32 2)
  %868 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %866, i32 0, i32 0
  %869 = load i8*, i8** %868, align 8
  %870 = call i32 @strcmp(i8* %869, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %894, label %872

; <label>:872:                                    ; preds = %.lr.ph53.6
  %873 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %866, i32 0, i32 0
  %874 = load i8*, i8** %873, align 8
  %875 = load i8, i8* %874, align 1
  %876 = sext i8 %875 to i32
  %877 = icmp eq i32 %876, 45
  %878 = zext i8 %.1.5 to i32
  %879 = icmp ne i32 %878, 0
  %or.cond.6 = and i1 %877, %879
  br i1 %or.cond.6, label %894, label %880

; <label>:880:                                    ; preds = %872
  %881 = load i32, i32* @numFileNames, align 4
  %882 = add nsw i32 %881, 1
  store i32 %882, i32* @numFileNames, align 4
  %883 = load i32, i32* @longestFileName, align 4
  %884 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %866, i32 0, i32 0
  %885 = load i8*, i8** %884, align 8
  %886 = call i64 @strlen(i8* %885) #10
  %887 = trunc i64 %886 to i32
  %888 = icmp slt i32 %883, %887
  br i1 %888, label %889, label %894

; <label>:889:                                    ; preds = %880
  %890 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %866, i32 0, i32 0
  %891 = load i8*, i8** %890, align 8
  %892 = call i64 @strlen(i8* %891) #10
  %893 = trunc i64 %892 to i32
  store i32 %893, i32* @longestFileName, align 4
  br label %894

; <label>:894:                                    ; preds = %889, %880, %872, %.lr.ph53.6
  %.1.6 = phi i8 [ 0, %.lr.ph53.6 ], [ %.1.5, %872 ], [ %.1.5, %889 ], [ %.1.5, %880 ]
  call void @__loop_iteration_test___2()
  %895 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %866, i32 0, i32 1
  %896 = load %struct.zzzz*, %struct.zzzz** %895, align 8
  %897 = icmp ne %struct.zzzz* %896, null
  br i1 %897, label %.lr.ph53.7, label %._crit_edge54.loopexit

.lr.ph53.7:                                       ; preds = %894
  call void @unroll_loop(i32 2)
  %898 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %896, i32 0, i32 0
  %899 = load i8*, i8** %898, align 8
  %900 = call i32 @strcmp(i8* %899, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %901 = icmp eq i32 %900, 0
  br i1 %901, label %924, label %902

; <label>:902:                                    ; preds = %.lr.ph53.7
  %903 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %896, i32 0, i32 0
  %904 = load i8*, i8** %903, align 8
  %905 = load i8, i8* %904, align 1
  %906 = sext i8 %905 to i32
  %907 = icmp eq i32 %906, 45
  %908 = zext i8 %.1.6 to i32
  %909 = icmp ne i32 %908, 0
  %or.cond.7 = and i1 %907, %909
  br i1 %or.cond.7, label %924, label %910

; <label>:910:                                    ; preds = %902
  %911 = load i32, i32* @numFileNames, align 4
  %912 = add nsw i32 %911, 1
  store i32 %912, i32* @numFileNames, align 4
  %913 = load i32, i32* @longestFileName, align 4
  %914 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %896, i32 0, i32 0
  %915 = load i8*, i8** %914, align 8
  %916 = call i64 @strlen(i8* %915) #10
  %917 = trunc i64 %916 to i32
  %918 = icmp slt i32 %913, %917
  br i1 %918, label %919, label %924

; <label>:919:                                    ; preds = %910
  %920 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %896, i32 0, i32 0
  %921 = load i8*, i8** %920, align 8
  %922 = call i64 @strlen(i8* %921) #10
  %923 = trunc i64 %922 to i32
  store i32 %923, i32* @longestFileName, align 4
  br label %924

; <label>:924:                                    ; preds = %919, %910, %902, %.lr.ph53.7
  %.1.7 = phi i8 [ 0, %.lr.ph53.7 ], [ %.1.6, %902 ], [ %.1.6, %919 ], [ %.1.6, %910 ]
  call void @__loop_iteration_test___2()
  %925 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %896, i32 0, i32 1
  %926 = load %struct.zzzz*, %struct.zzzz** %925, align 8
  %927 = icmp ne %struct.zzzz* %926, null
  br i1 %927, label %.lr.ph53.8, label %._crit_edge54.loopexit

.lr.ph53.8:                                       ; preds = %924
  call void @unroll_loop(i32 2)
  %928 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %926, i32 0, i32 0
  %929 = load i8*, i8** %928, align 8
  %930 = call i32 @strcmp(i8* %929, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %954, label %932

; <label>:932:                                    ; preds = %.lr.ph53.8
  %933 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %926, i32 0, i32 0
  %934 = load i8*, i8** %933, align 8
  %935 = load i8, i8* %934, align 1
  %936 = sext i8 %935 to i32
  %937 = icmp eq i32 %936, 45
  %938 = zext i8 %.1.7 to i32
  %939 = icmp ne i32 %938, 0
  %or.cond.8 = and i1 %937, %939
  br i1 %or.cond.8, label %954, label %940

; <label>:940:                                    ; preds = %932
  %941 = load i32, i32* @numFileNames, align 4
  %942 = add nsw i32 %941, 1
  store i32 %942, i32* @numFileNames, align 4
  %943 = load i32, i32* @longestFileName, align 4
  %944 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %926, i32 0, i32 0
  %945 = load i8*, i8** %944, align 8
  %946 = call i64 @strlen(i8* %945) #10
  %947 = trunc i64 %946 to i32
  %948 = icmp slt i32 %943, %947
  br i1 %948, label %949, label %954

; <label>:949:                                    ; preds = %940
  %950 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %926, i32 0, i32 0
  %951 = load i8*, i8** %950, align 8
  %952 = call i64 @strlen(i8* %951) #10
  %953 = trunc i64 %952 to i32
  store i32 %953, i32* @longestFileName, align 4
  br label %954

; <label>:954:                                    ; preds = %949, %940, %932, %.lr.ph53.8
  %.1.8 = phi i8 [ 0, %.lr.ph53.8 ], [ %.1.7, %932 ], [ %.1.7, %949 ], [ %.1.7, %940 ]
  call void @__loop_iteration_test___2()
  %955 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %926, i32 0, i32 1
  %956 = load %struct.zzzz*, %struct.zzzz** %955, align 8
  %957 = icmp ne %struct.zzzz* %956, null
  br i1 %957, label %.lr.ph53.9, label %._crit_edge54.loopexit

.lr.ph53.9:                                       ; preds = %954
  call void @unroll_loop(i32 2)
  %958 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %956, i32 0, i32 0
  %959 = load i8*, i8** %958, align 8
  %960 = call i32 @strcmp(i8* %959, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %984, label %962

; <label>:962:                                    ; preds = %.lr.ph53.9
  %963 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %956, i32 0, i32 0
  %964 = load i8*, i8** %963, align 8
  %965 = load i8, i8* %964, align 1
  %966 = sext i8 %965 to i32
  %967 = icmp eq i32 %966, 45
  %968 = zext i8 %.1.8 to i32
  %969 = icmp ne i32 %968, 0
  %or.cond.9 = and i1 %967, %969
  br i1 %or.cond.9, label %984, label %970

; <label>:970:                                    ; preds = %962
  %971 = load i32, i32* @numFileNames, align 4
  %972 = add nsw i32 %971, 1
  store i32 %972, i32* @numFileNames, align 4
  %973 = load i32, i32* @longestFileName, align 4
  %974 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %956, i32 0, i32 0
  %975 = load i8*, i8** %974, align 8
  %976 = call i64 @strlen(i8* %975) #10
  %977 = trunc i64 %976 to i32
  %978 = icmp slt i32 %973, %977
  br i1 %978, label %979, label %984

; <label>:979:                                    ; preds = %970
  %980 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %956, i32 0, i32 0
  %981 = load i8*, i8** %980, align 8
  %982 = call i64 @strlen(i8* %981) #10
  %983 = trunc i64 %982 to i32
  store i32 %983, i32* @longestFileName, align 4
  br label %984

; <label>:984:                                    ; preds = %979, %970, %962, %.lr.ph53.9
  %.1.9 = phi i8 [ 0, %.lr.ph53.9 ], [ %.1.8, %962 ], [ %.1.8, %979 ], [ %.1.8, %970 ]
  call void @__loop_iteration_test___2()
  %985 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %956, i32 0, i32 1
  %986 = load %struct.zzzz*, %struct.zzzz** %985, align 8
  %987 = icmp ne %struct.zzzz* %986, null
  br i1 %987, label %.lr.ph53.10, label %._crit_edge54.loopexit

.lr.ph53.10:                                      ; preds = %984
  call void @unroll_loop(i32 2)
  %988 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %986, i32 0, i32 0
  %989 = load i8*, i8** %988, align 8
  %990 = call i32 @strcmp(i8* %989, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %991 = icmp eq i32 %990, 0
  br i1 %991, label %1014, label %992

; <label>:992:                                    ; preds = %.lr.ph53.10
  %993 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %986, i32 0, i32 0
  %994 = load i8*, i8** %993, align 8
  %995 = load i8, i8* %994, align 1
  %996 = sext i8 %995 to i32
  %997 = icmp eq i32 %996, 45
  %998 = zext i8 %.1.9 to i32
  %999 = icmp ne i32 %998, 0
  %or.cond.10 = and i1 %997, %999
  br i1 %or.cond.10, label %1014, label %1000

; <label>:1000:                                   ; preds = %992
  %1001 = load i32, i32* @numFileNames, align 4
  %1002 = add nsw i32 %1001, 1
  store i32 %1002, i32* @numFileNames, align 4
  %1003 = load i32, i32* @longestFileName, align 4
  %1004 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %986, i32 0, i32 0
  %1005 = load i8*, i8** %1004, align 8
  %1006 = call i64 @strlen(i8* %1005) #10
  %1007 = trunc i64 %1006 to i32
  %1008 = icmp slt i32 %1003, %1007
  br i1 %1008, label %1009, label %1014

; <label>:1009:                                   ; preds = %1000
  %1010 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %986, i32 0, i32 0
  %1011 = load i8*, i8** %1010, align 8
  %1012 = call i64 @strlen(i8* %1011) #10
  %1013 = trunc i64 %1012 to i32
  store i32 %1013, i32* @longestFileName, align 4
  br label %1014

; <label>:1014:                                   ; preds = %1009, %1000, %992, %.lr.ph53.10
  %.1.10 = phi i8 [ 0, %.lr.ph53.10 ], [ %.1.9, %992 ], [ %.1.9, %1009 ], [ %.1.9, %1000 ]
  call void @__loop_iteration_test___2()
  %1015 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %986, i32 0, i32 1
  %1016 = load %struct.zzzz*, %struct.zzzz** %1015, align 8
  %1017 = icmp ne %struct.zzzz* %1016, null
  br i1 %1017, label %.lr.ph53.11, label %._crit_edge54.loopexit

.lr.ph53.11:                                      ; preds = %1014
  call void @unroll_loop(i32 2)
  %1018 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1016, i32 0, i32 0
  %1019 = load i8*, i8** %1018, align 8
  %1020 = call i32 @strcmp(i8* %1019, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1044, label %1022

; <label>:1022:                                   ; preds = %.lr.ph53.11
  %1023 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1016, i32 0, i32 0
  %1024 = load i8*, i8** %1023, align 8
  %1025 = load i8, i8* %1024, align 1
  %1026 = sext i8 %1025 to i32
  %1027 = icmp eq i32 %1026, 45
  %1028 = zext i8 %.1.10 to i32
  %1029 = icmp ne i32 %1028, 0
  %or.cond.11 = and i1 %1027, %1029
  br i1 %or.cond.11, label %1044, label %1030

; <label>:1030:                                   ; preds = %1022
  %1031 = load i32, i32* @numFileNames, align 4
  %1032 = add nsw i32 %1031, 1
  store i32 %1032, i32* @numFileNames, align 4
  %1033 = load i32, i32* @longestFileName, align 4
  %1034 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1016, i32 0, i32 0
  %1035 = load i8*, i8** %1034, align 8
  %1036 = call i64 @strlen(i8* %1035) #10
  %1037 = trunc i64 %1036 to i32
  %1038 = icmp slt i32 %1033, %1037
  br i1 %1038, label %1039, label %1044

; <label>:1039:                                   ; preds = %1030
  %1040 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1016, i32 0, i32 0
  %1041 = load i8*, i8** %1040, align 8
  %1042 = call i64 @strlen(i8* %1041) #10
  %1043 = trunc i64 %1042 to i32
  store i32 %1043, i32* @longestFileName, align 4
  br label %1044

; <label>:1044:                                   ; preds = %1039, %1030, %1022, %.lr.ph53.11
  %.1.11 = phi i8 [ 0, %.lr.ph53.11 ], [ %.1.10, %1022 ], [ %.1.10, %1039 ], [ %.1.10, %1030 ]
  call void @__loop_iteration_test___2()
  %1045 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1016, i32 0, i32 1
  %1046 = load %struct.zzzz*, %struct.zzzz** %1045, align 8
  %1047 = icmp ne %struct.zzzz* %1046, null
  br i1 %1047, label %.lr.ph53.12, label %._crit_edge54.loopexit

.lr.ph53.12:                                      ; preds = %1044
  call void @unroll_loop(i32 2)
  %1048 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1046, i32 0, i32 0
  %1049 = load i8*, i8** %1048, align 8
  %1050 = call i32 @strcmp(i8* %1049, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1051 = icmp eq i32 %1050, 0
  br i1 %1051, label %1074, label %1052

; <label>:1052:                                   ; preds = %.lr.ph53.12
  %1053 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1046, i32 0, i32 0
  %1054 = load i8*, i8** %1053, align 8
  %1055 = load i8, i8* %1054, align 1
  %1056 = sext i8 %1055 to i32
  %1057 = icmp eq i32 %1056, 45
  %1058 = zext i8 %.1.11 to i32
  %1059 = icmp ne i32 %1058, 0
  %or.cond.12 = and i1 %1057, %1059
  br i1 %or.cond.12, label %1074, label %1060

; <label>:1060:                                   ; preds = %1052
  %1061 = load i32, i32* @numFileNames, align 4
  %1062 = add nsw i32 %1061, 1
  store i32 %1062, i32* @numFileNames, align 4
  %1063 = load i32, i32* @longestFileName, align 4
  %1064 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1046, i32 0, i32 0
  %1065 = load i8*, i8** %1064, align 8
  %1066 = call i64 @strlen(i8* %1065) #10
  %1067 = trunc i64 %1066 to i32
  %1068 = icmp slt i32 %1063, %1067
  br i1 %1068, label %1069, label %1074

; <label>:1069:                                   ; preds = %1060
  %1070 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1046, i32 0, i32 0
  %1071 = load i8*, i8** %1070, align 8
  %1072 = call i64 @strlen(i8* %1071) #10
  %1073 = trunc i64 %1072 to i32
  store i32 %1073, i32* @longestFileName, align 4
  br label %1074

; <label>:1074:                                   ; preds = %1069, %1060, %1052, %.lr.ph53.12
  %.1.12 = phi i8 [ 0, %.lr.ph53.12 ], [ %.1.11, %1052 ], [ %.1.11, %1069 ], [ %.1.11, %1060 ]
  call void @__loop_iteration_test___2()
  %1075 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1046, i32 0, i32 1
  %1076 = load %struct.zzzz*, %struct.zzzz** %1075, align 8
  %1077 = icmp ne %struct.zzzz* %1076, null
  br i1 %1077, label %.lr.ph53.13, label %._crit_edge54.loopexit

.lr.ph53.13:                                      ; preds = %1074
  call void @unroll_loop(i32 2)
  %1078 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1076, i32 0, i32 0
  %1079 = load i8*, i8** %1078, align 8
  %1080 = call i32 @strcmp(i8* %1079, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1081 = icmp eq i32 %1080, 0
  br i1 %1081, label %1104, label %1082

; <label>:1082:                                   ; preds = %.lr.ph53.13
  %1083 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1076, i32 0, i32 0
  %1084 = load i8*, i8** %1083, align 8
  %1085 = load i8, i8* %1084, align 1
  %1086 = sext i8 %1085 to i32
  %1087 = icmp eq i32 %1086, 45
  %1088 = zext i8 %.1.12 to i32
  %1089 = icmp ne i32 %1088, 0
  %or.cond.13 = and i1 %1087, %1089
  br i1 %or.cond.13, label %1104, label %1090

; <label>:1090:                                   ; preds = %1082
  %1091 = load i32, i32* @numFileNames, align 4
  %1092 = add nsw i32 %1091, 1
  store i32 %1092, i32* @numFileNames, align 4
  %1093 = load i32, i32* @longestFileName, align 4
  %1094 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1076, i32 0, i32 0
  %1095 = load i8*, i8** %1094, align 8
  %1096 = call i64 @strlen(i8* %1095) #10
  %1097 = trunc i64 %1096 to i32
  %1098 = icmp slt i32 %1093, %1097
  br i1 %1098, label %1099, label %1104

; <label>:1099:                                   ; preds = %1090
  %1100 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1076, i32 0, i32 0
  %1101 = load i8*, i8** %1100, align 8
  %1102 = call i64 @strlen(i8* %1101) #10
  %1103 = trunc i64 %1102 to i32
  store i32 %1103, i32* @longestFileName, align 4
  br label %1104

; <label>:1104:                                   ; preds = %1099, %1090, %1082, %.lr.ph53.13
  %.1.13 = phi i8 [ 0, %.lr.ph53.13 ], [ %.1.12, %1082 ], [ %.1.12, %1099 ], [ %.1.12, %1090 ]
  call void @__loop_iteration_test___2()
  %1105 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1076, i32 0, i32 1
  %1106 = load %struct.zzzz*, %struct.zzzz** %1105, align 8
  %1107 = icmp ne %struct.zzzz* %1106, null
  br i1 %1107, label %.lr.ph53.14, label %._crit_edge54.loopexit

.lr.ph53.14:                                      ; preds = %1104
  call void @unroll_loop(i32 2)
  %1108 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1106, i32 0, i32 0
  %1109 = load i8*, i8** %1108, align 8
  %1110 = call i32 @strcmp(i8* %1109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1111 = icmp eq i32 %1110, 0
  br i1 %1111, label %1134, label %1112

; <label>:1112:                                   ; preds = %.lr.ph53.14
  %1113 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1106, i32 0, i32 0
  %1114 = load i8*, i8** %1113, align 8
  %1115 = load i8, i8* %1114, align 1
  %1116 = sext i8 %1115 to i32
  %1117 = icmp eq i32 %1116, 45
  %1118 = zext i8 %.1.13 to i32
  %1119 = icmp ne i32 %1118, 0
  %or.cond.14 = and i1 %1117, %1119
  br i1 %or.cond.14, label %1134, label %1120

; <label>:1120:                                   ; preds = %1112
  %1121 = load i32, i32* @numFileNames, align 4
  %1122 = add nsw i32 %1121, 1
  store i32 %1122, i32* @numFileNames, align 4
  %1123 = load i32, i32* @longestFileName, align 4
  %1124 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1106, i32 0, i32 0
  %1125 = load i8*, i8** %1124, align 8
  %1126 = call i64 @strlen(i8* %1125) #10
  %1127 = trunc i64 %1126 to i32
  %1128 = icmp slt i32 %1123, %1127
  br i1 %1128, label %1129, label %1134

; <label>:1129:                                   ; preds = %1120
  %1130 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1106, i32 0, i32 0
  %1131 = load i8*, i8** %1130, align 8
  %1132 = call i64 @strlen(i8* %1131) #10
  %1133 = trunc i64 %1132 to i32
  store i32 %1133, i32* @longestFileName, align 4
  br label %1134

; <label>:1134:                                   ; preds = %1129, %1120, %1112, %.lr.ph53.14
  %.1.14 = phi i8 [ 0, %.lr.ph53.14 ], [ %.1.13, %1112 ], [ %.1.13, %1129 ], [ %.1.13, %1120 ]
  call void @__loop_iteration_test___2()
  %1135 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1106, i32 0, i32 1
  %1136 = load %struct.zzzz*, %struct.zzzz** %1135, align 8
  %1137 = icmp ne %struct.zzzz* %1136, null
  br i1 %1137, label %.lr.ph53.15, label %._crit_edge54.loopexit

.lr.ph53.15:                                      ; preds = %1134
  call void @unroll_loop(i32 2)
  %1138 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1136, i32 0, i32 0
  %1139 = load i8*, i8** %1138, align 8
  %1140 = call i32 @strcmp(i8* %1139, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1141 = icmp eq i32 %1140, 0
  br i1 %1141, label %1164, label %1142

; <label>:1142:                                   ; preds = %.lr.ph53.15
  %1143 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1136, i32 0, i32 0
  %1144 = load i8*, i8** %1143, align 8
  %1145 = load i8, i8* %1144, align 1
  %1146 = sext i8 %1145 to i32
  %1147 = icmp eq i32 %1146, 45
  %1148 = zext i8 %.1.14 to i32
  %1149 = icmp ne i32 %1148, 0
  %or.cond.15 = and i1 %1147, %1149
  br i1 %or.cond.15, label %1164, label %1150

; <label>:1150:                                   ; preds = %1142
  %1151 = load i32, i32* @numFileNames, align 4
  %1152 = add nsw i32 %1151, 1
  store i32 %1152, i32* @numFileNames, align 4
  %1153 = load i32, i32* @longestFileName, align 4
  %1154 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1136, i32 0, i32 0
  %1155 = load i8*, i8** %1154, align 8
  %1156 = call i64 @strlen(i8* %1155) #10
  %1157 = trunc i64 %1156 to i32
  %1158 = icmp slt i32 %1153, %1157
  br i1 %1158, label %1159, label %1164

; <label>:1159:                                   ; preds = %1150
  %1160 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1136, i32 0, i32 0
  %1161 = load i8*, i8** %1160, align 8
  %1162 = call i64 @strlen(i8* %1161) #10
  %1163 = trunc i64 %1162 to i32
  store i32 %1163, i32* @longestFileName, align 4
  br label %1164

; <label>:1164:                                   ; preds = %1159, %1150, %1142, %.lr.ph53.15
  %.1.15 = phi i8 [ 0, %.lr.ph53.15 ], [ %.1.14, %1142 ], [ %.1.14, %1159 ], [ %.1.14, %1150 ]
  call void @__loop_iteration_test___2()
  %1165 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1136, i32 0, i32 1
  %1166 = load %struct.zzzz*, %struct.zzzz** %1165, align 8
  %1167 = icmp ne %struct.zzzz* %1166, null
  br i1 %1167, label %.lr.ph53.16, label %._crit_edge54.loopexit

.lr.ph53.16:                                      ; preds = %1164
  call void @unroll_loop(i32 2)
  %1168 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1166, i32 0, i32 0
  %1169 = load i8*, i8** %1168, align 8
  %1170 = call i32 @strcmp(i8* %1169, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1171 = icmp eq i32 %1170, 0
  br i1 %1171, label %1194, label %1172

; <label>:1172:                                   ; preds = %.lr.ph53.16
  %1173 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1166, i32 0, i32 0
  %1174 = load i8*, i8** %1173, align 8
  %1175 = load i8, i8* %1174, align 1
  %1176 = sext i8 %1175 to i32
  %1177 = icmp eq i32 %1176, 45
  %1178 = zext i8 %.1.15 to i32
  %1179 = icmp ne i32 %1178, 0
  %or.cond.16 = and i1 %1177, %1179
  br i1 %or.cond.16, label %1194, label %1180

; <label>:1180:                                   ; preds = %1172
  %1181 = load i32, i32* @numFileNames, align 4
  %1182 = add nsw i32 %1181, 1
  store i32 %1182, i32* @numFileNames, align 4
  %1183 = load i32, i32* @longestFileName, align 4
  %1184 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1166, i32 0, i32 0
  %1185 = load i8*, i8** %1184, align 8
  %1186 = call i64 @strlen(i8* %1185) #10
  %1187 = trunc i64 %1186 to i32
  %1188 = icmp slt i32 %1183, %1187
  br i1 %1188, label %1189, label %1194

; <label>:1189:                                   ; preds = %1180
  %1190 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1166, i32 0, i32 0
  %1191 = load i8*, i8** %1190, align 8
  %1192 = call i64 @strlen(i8* %1191) #10
  %1193 = trunc i64 %1192 to i32
  store i32 %1193, i32* @longestFileName, align 4
  br label %1194

; <label>:1194:                                   ; preds = %1189, %1180, %1172, %.lr.ph53.16
  %.1.16 = phi i8 [ 0, %.lr.ph53.16 ], [ %.1.15, %1172 ], [ %.1.15, %1189 ], [ %.1.15, %1180 ]
  call void @__loop_iteration_test___2()
  %1195 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1166, i32 0, i32 1
  %1196 = load %struct.zzzz*, %struct.zzzz** %1195, align 8
  %1197 = icmp ne %struct.zzzz* %1196, null
  br i1 %1197, label %.lr.ph53.17, label %._crit_edge54.loopexit

.lr.ph53.17:                                      ; preds = %1194
  call void @unroll_loop(i32 2)
  %1198 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1196, i32 0, i32 0
  %1199 = load i8*, i8** %1198, align 8
  %1200 = call i32 @strcmp(i8* %1199, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1201 = icmp eq i32 %1200, 0
  br i1 %1201, label %1224, label %1202

; <label>:1202:                                   ; preds = %.lr.ph53.17
  %1203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1196, i32 0, i32 0
  %1204 = load i8*, i8** %1203, align 8
  %1205 = load i8, i8* %1204, align 1
  %1206 = sext i8 %1205 to i32
  %1207 = icmp eq i32 %1206, 45
  %1208 = zext i8 %.1.16 to i32
  %1209 = icmp ne i32 %1208, 0
  %or.cond.17 = and i1 %1207, %1209
  br i1 %or.cond.17, label %1224, label %1210

; <label>:1210:                                   ; preds = %1202
  %1211 = load i32, i32* @numFileNames, align 4
  %1212 = add nsw i32 %1211, 1
  store i32 %1212, i32* @numFileNames, align 4
  %1213 = load i32, i32* @longestFileName, align 4
  %1214 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1196, i32 0, i32 0
  %1215 = load i8*, i8** %1214, align 8
  %1216 = call i64 @strlen(i8* %1215) #10
  %1217 = trunc i64 %1216 to i32
  %1218 = icmp slt i32 %1213, %1217
  br i1 %1218, label %1219, label %1224

; <label>:1219:                                   ; preds = %1210
  %1220 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1196, i32 0, i32 0
  %1221 = load i8*, i8** %1220, align 8
  %1222 = call i64 @strlen(i8* %1221) #10
  %1223 = trunc i64 %1222 to i32
  store i32 %1223, i32* @longestFileName, align 4
  br label %1224

; <label>:1224:                                   ; preds = %1219, %1210, %1202, %.lr.ph53.17
  %.1.17 = phi i8 [ 0, %.lr.ph53.17 ], [ %.1.16, %1202 ], [ %.1.16, %1219 ], [ %.1.16, %1210 ]
  call void @__loop_iteration_test___2()
  %1225 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1196, i32 0, i32 1
  %1226 = load %struct.zzzz*, %struct.zzzz** %1225, align 8
  %1227 = icmp ne %struct.zzzz* %1226, null
  br i1 %1227, label %.lr.ph53.18, label %._crit_edge54.loopexit

.lr.ph53.18:                                      ; preds = %1224
  call void @unroll_loop(i32 2)
  %1228 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1226, i32 0, i32 0
  %1229 = load i8*, i8** %1228, align 8
  %1230 = call i32 @strcmp(i8* %1229, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1231 = icmp eq i32 %1230, 0
  br i1 %1231, label %1254, label %1232

; <label>:1232:                                   ; preds = %.lr.ph53.18
  %1233 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1226, i32 0, i32 0
  %1234 = load i8*, i8** %1233, align 8
  %1235 = load i8, i8* %1234, align 1
  %1236 = sext i8 %1235 to i32
  %1237 = icmp eq i32 %1236, 45
  %1238 = zext i8 %.1.17 to i32
  %1239 = icmp ne i32 %1238, 0
  %or.cond.18 = and i1 %1237, %1239
  br i1 %or.cond.18, label %1254, label %1240

; <label>:1240:                                   ; preds = %1232
  %1241 = load i32, i32* @numFileNames, align 4
  %1242 = add nsw i32 %1241, 1
  store i32 %1242, i32* @numFileNames, align 4
  %1243 = load i32, i32* @longestFileName, align 4
  %1244 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1226, i32 0, i32 0
  %1245 = load i8*, i8** %1244, align 8
  %1246 = call i64 @strlen(i8* %1245) #10
  %1247 = trunc i64 %1246 to i32
  %1248 = icmp slt i32 %1243, %1247
  br i1 %1248, label %1249, label %1254

; <label>:1249:                                   ; preds = %1240
  %1250 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1226, i32 0, i32 0
  %1251 = load i8*, i8** %1250, align 8
  %1252 = call i64 @strlen(i8* %1251) #10
  %1253 = trunc i64 %1252 to i32
  store i32 %1253, i32* @longestFileName, align 4
  br label %1254

; <label>:1254:                                   ; preds = %1249, %1240, %1232, %.lr.ph53.18
  %.1.18 = phi i8 [ 0, %.lr.ph53.18 ], [ %.1.17, %1232 ], [ %.1.17, %1249 ], [ %.1.17, %1240 ]
  call void @__loop_iteration_test___2()
  %1255 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1226, i32 0, i32 1
  %1256 = load %struct.zzzz*, %struct.zzzz** %1255, align 8
  %1257 = icmp ne %struct.zzzz* %1256, null
  br i1 %1257, label %.lr.ph53.19, label %._crit_edge54.loopexit

.lr.ph53.19:                                      ; preds = %1254
  call void @unroll_loop(i32 2)
  %1258 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1256, i32 0, i32 0
  %1259 = load i8*, i8** %1258, align 8
  %1260 = call i32 @strcmp(i8* %1259, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1261 = icmp eq i32 %1260, 0
  br i1 %1261, label %1284, label %1262

; <label>:1262:                                   ; preds = %.lr.ph53.19
  %1263 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1256, i32 0, i32 0
  %1264 = load i8*, i8** %1263, align 8
  %1265 = load i8, i8* %1264, align 1
  %1266 = sext i8 %1265 to i32
  %1267 = icmp eq i32 %1266, 45
  %1268 = zext i8 %.1.18 to i32
  %1269 = icmp ne i32 %1268, 0
  %or.cond.19 = and i1 %1267, %1269
  br i1 %or.cond.19, label %1284, label %1270

; <label>:1270:                                   ; preds = %1262
  %1271 = load i32, i32* @numFileNames, align 4
  %1272 = add nsw i32 %1271, 1
  store i32 %1272, i32* @numFileNames, align 4
  %1273 = load i32, i32* @longestFileName, align 4
  %1274 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1256, i32 0, i32 0
  %1275 = load i8*, i8** %1274, align 8
  %1276 = call i64 @strlen(i8* %1275) #10
  %1277 = trunc i64 %1276 to i32
  %1278 = icmp slt i32 %1273, %1277
  br i1 %1278, label %1279, label %1284

; <label>:1279:                                   ; preds = %1270
  %1280 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1256, i32 0, i32 0
  %1281 = load i8*, i8** %1280, align 8
  %1282 = call i64 @strlen(i8* %1281) #10
  %1283 = trunc i64 %1282 to i32
  store i32 %1283, i32* @longestFileName, align 4
  br label %1284

; <label>:1284:                                   ; preds = %1279, %1270, %1262, %.lr.ph53.19
  call void @__loop_iteration_test___2()
  %1285 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1256, i32 0, i32 1
  %1286 = load %struct.zzzz*, %struct.zzzz** %1285, align 8
  br label %._crit_edge54.loopexit

.lr.ph48.1:                                       ; preds = %._crit_edge43
  call void @unroll_loop(i32 3)
  %1287 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1288 = load i8*, i8** %1287, align 8
  %1289 = getelementptr [10 x i8], [10 x i8]* @16, i64 0, i64 0
  %1290 = getelementptr [3 x i8], [3 x i8]* @17, i64 0, i64 0
  %1291 = call i32 @strcmp(i8* %1289, i8* %1290) #10
  %1292 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %1293

; <label>:1293:                                   ; preds = %.lr.ph48.1
  %1294 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1295 = load i8*, i8** %1294, align 8
  %1296 = load i8, i8* %1295, align 1
  %1297 = sext i8 104 to i32
  %1298 = icmp eq i32 104, 45
  br i1 false, label %1299, label %._crit_edge43.1

; <label>:1299:                                   ; preds = %1293
  %1300 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1301 = load i8*, i8** %1300, align 8
  %1302 = getelementptr inbounds i8, i8* %1301, i64 1
  %1303 = load i8, i8* %1302, align 1
  %1304 = sext i8 %1303 to i32
  %1305 = icmp ne i32 %1304, 45
  br i1 %1305, label %1306, label %._crit_edge43.1

; <label>:1306:                                   ; preds = %1299
  %1307 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1308 = load i8*, i8** %1307, align 8
  %1309 = getelementptr inbounds i8, i8* %1308, i64 1
  %1310 = load i8, i8* %1309, align 1
  %1311 = sext i8 %1310 to i32
  %1312 = icmp ne i32 %1311, 0
  br i1 %1312, label %.lr.ph42.preheader.1, label %._crit_edge43.1

.lr.ph42.preheader.1:                             ; preds = %1306
  %1313 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  br label %.lr.ph42.1

.lr.ph42.1:                                       ; preds = %1338, %.lr.ph42.preheader.1
  %lsr.iv.1 = phi i64 [ 0, %.lr.ph42.preheader.1 ], [ %lsr.iv.next.1, %1338 ]
  call void @unroll_loop(i32 4)
  %1314 = load i8*, i8** %1313, align 8
  %scevgep.1 = getelementptr i8, i8* %1314, i64 1
  %scevgep1.1 = getelementptr i8, i8* %scevgep.1, i64 %lsr.iv.1
  %1315 = load i8, i8* %scevgep1.1, align 1
  %1316 = sext i8 %1315 to i32
  switch i32 %1316, label %.loopexit3 [
    i32 99, label %1337
    i32 100, label %1336
    i32 122, label %1335
    i32 102, label %1334
    i32 116, label %1333
    i32 107, label %1332
    i32 115, label %1331
    i32 113, label %1330
    i32 49, label %1329
    i32 50, label %1328
    i32 51, label %1327
    i32 52, label %1326
    i32 53, label %1325
    i32 54, label %1324
    i32 55, label %1323
    i32 56, label %1322
    i32 57, label %1321
    i32 86, label %1320
    i32 76, label %1320
    i32 118, label %1317
    i32 104, label %.loopexit4
  ]

; <label>:1317:                                   ; preds = %.lr.ph42.1
  %1318 = load i32, i32* @verbosity, align 4
  %1319 = add nsw i32 %1318, 1
  store i32 %1319, i32* @verbosity, align 4
  br label %1338

; <label>:1320:                                   ; preds = %.lr.ph42.1, %.lr.ph42.1
  call void @license()
  br label %1338

; <label>:1321:                                   ; preds = %.lr.ph42.1
  store i32 9, i32* @blockSize100k, align 4
  br label %1338

; <label>:1322:                                   ; preds = %.lr.ph42.1
  store i32 8, i32* @blockSize100k, align 4
  br label %1338

; <label>:1323:                                   ; preds = %.lr.ph42.1
  store i32 7, i32* @blockSize100k, align 4
  br label %1338

; <label>:1324:                                   ; preds = %.lr.ph42.1
  store i32 6, i32* @blockSize100k, align 4
  br label %1338

; <label>:1325:                                   ; preds = %.lr.ph42.1
  store i32 5, i32* @blockSize100k, align 4
  br label %1338

; <label>:1326:                                   ; preds = %.lr.ph42.1
  store i32 4, i32* @blockSize100k, align 4
  br label %1338

; <label>:1327:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @blockSize100k, align 4
  br label %1338

; <label>:1328:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @blockSize100k, align 4
  br label %1338

; <label>:1329:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @blockSize100k, align 4
  br label %1338

; <label>:1330:                                   ; preds = %.lr.ph42.1
  store i8 0, i8* @noisy, align 1
  br label %1338

; <label>:1331:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @smallMode, align 1
  br label %1338

; <label>:1332:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @keepInputFiles, align 1
  br label %1338

; <label>:1333:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @opMode, align 4
  br label %1338

; <label>:1334:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @forceOverwrite, align 1
  br label %1338

; <label>:1335:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @opMode, align 4
  br label %1338

; <label>:1336:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @opMode, align 4
  br label %1338

; <label>:1337:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @srcMode, align 4
  br label %1338

; <label>:1338:                                   ; preds = %1337, %1336, %1335, %1334, %1333, %1332, %1331, %1330, %1329, %1328, %1327, %1326, %1325, %1324, %1323, %1322, %1321, %1320, %1317
  %1339 = load i8*, i8** %1307, align 8
  %scevgep2.1 = getelementptr i8, i8* %1339, i64 2
  %scevgep3.1 = getelementptr i8, i8* %scevgep2.1, i64 %lsr.iv.1
  %1340 = load i8, i8* %scevgep3.1, align 1
  %1341 = sext i8 %1340 to i32
  %1342 = icmp ne i32 %1341, 0
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %1342, label %.lr.ph42.1, label %._crit_edge43.loopexit.1

._crit_edge43.loopexit.1:                         ; preds = %1338
  br label %._crit_edge43.1

._crit_edge43.1:                                  ; preds = %._crit_edge43.loopexit.1, %1306, %1299, %1293
  call void @__loop_iteration_test___3()
  %1343 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 1
  %1344 = load %struct.zzzz*, %struct.zzzz** %1343, align 8
  %1345 = icmp ne i64 0, 0
  %1346 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph48.2, label %.loopexit17.loopexit

.lr.ph48.2:                                       ; preds = %._crit_edge43.1
  call void @unroll_loop(i32 3)
  %1347 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1348 = load i8*, i8** %1347, align 8
  %1349 = call i32 @strcmp(i8* %1348, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1350 = icmp eq i32 %1349, 0
  br i1 %1350, label %.loopexit17.loopexit, label %1351

; <label>:1351:                                   ; preds = %.lr.ph48.2
  %1352 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1353 = load i8*, i8** %1352, align 8
  %1354 = load i8, i8* %1353, align 1
  %1355 = sext i8 %1354 to i32
  %1356 = icmp eq i32 %1355, 45
  br i1 %1356, label %1357, label %._crit_edge43.2

; <label>:1357:                                   ; preds = %1351
  %1358 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1359 = load i8*, i8** %1358, align 8
  %1360 = getelementptr inbounds i8, i8* %1359, i64 1
  %1361 = load i8, i8* %1360, align 1
  %1362 = sext i8 %1361 to i32
  %1363 = icmp ne i32 %1362, 45
  br i1 %1363, label %1364, label %._crit_edge43.2

; <label>:1364:                                   ; preds = %1357
  %1365 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1366 = load i8*, i8** %1365, align 8
  %1367 = getelementptr inbounds i8, i8* %1366, i64 1
  %1368 = load i8, i8* %1367, align 1
  %1369 = sext i8 %1368 to i32
  %1370 = icmp ne i32 %1369, 0
  br i1 %1370, label %.lr.ph42.preheader.2, label %._crit_edge43.2

.lr.ph42.preheader.2:                             ; preds = %1364
  %1371 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  br label %.lr.ph42.2

.lr.ph42.2:                                       ; preds = %1396, %.lr.ph42.preheader.2
  %lsr.iv.2 = phi i64 [ 0, %.lr.ph42.preheader.2 ], [ %lsr.iv.next.2, %1396 ]
  call void @unroll_loop(i32 4)
  %1372 = load i8*, i8** %1371, align 8
  %scevgep.2 = getelementptr i8, i8* %1372, i64 1
  %scevgep1.2 = getelementptr i8, i8* %scevgep.2, i64 %lsr.iv.2
  %1373 = load i8, i8* %scevgep1.2, align 1
  %1374 = sext i8 %1373 to i32
  switch i32 %1374, label %.loopexit5 [
    i32 99, label %1395
    i32 100, label %1394
    i32 122, label %1393
    i32 102, label %1392
    i32 116, label %1391
    i32 107, label %1390
    i32 115, label %1389
    i32 113, label %1388
    i32 49, label %1387
    i32 50, label %1386
    i32 51, label %1385
    i32 52, label %1384
    i32 53, label %1383
    i32 54, label %1382
    i32 55, label %1381
    i32 56, label %1380
    i32 57, label %1379
    i32 86, label %1378
    i32 76, label %1378
    i32 118, label %1375
    i32 104, label %.loopexit6
  ]

; <label>:1375:                                   ; preds = %.lr.ph42.2
  %1376 = load i32, i32* @verbosity, align 4
  %1377 = add nsw i32 %1376, 1
  store i32 %1377, i32* @verbosity, align 4
  br label %1396

; <label>:1378:                                   ; preds = %.lr.ph42.2, %.lr.ph42.2
  call void @license()
  br label %1396

; <label>:1379:                                   ; preds = %.lr.ph42.2
  store i32 9, i32* @blockSize100k, align 4
  br label %1396

; <label>:1380:                                   ; preds = %.lr.ph42.2
  store i32 8, i32* @blockSize100k, align 4
  br label %1396

; <label>:1381:                                   ; preds = %.lr.ph42.2
  store i32 7, i32* @blockSize100k, align 4
  br label %1396

; <label>:1382:                                   ; preds = %.lr.ph42.2
  store i32 6, i32* @blockSize100k, align 4
  br label %1396

; <label>:1383:                                   ; preds = %.lr.ph42.2
  store i32 5, i32* @blockSize100k, align 4
  br label %1396

; <label>:1384:                                   ; preds = %.lr.ph42.2
  store i32 4, i32* @blockSize100k, align 4
  br label %1396

; <label>:1385:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @blockSize100k, align 4
  br label %1396

; <label>:1386:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @blockSize100k, align 4
  br label %1396

; <label>:1387:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @blockSize100k, align 4
  br label %1396

; <label>:1388:                                   ; preds = %.lr.ph42.2
  store i8 0, i8* @noisy, align 1
  br label %1396

; <label>:1389:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @smallMode, align 1
  br label %1396

; <label>:1390:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @keepInputFiles, align 1
  br label %1396

; <label>:1391:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @opMode, align 4
  br label %1396

; <label>:1392:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @forceOverwrite, align 1
  br label %1396

; <label>:1393:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @opMode, align 4
  br label %1396

; <label>:1394:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @opMode, align 4
  br label %1396

; <label>:1395:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @srcMode, align 4
  br label %1396

; <label>:1396:                                   ; preds = %1395, %1394, %1393, %1392, %1391, %1390, %1389, %1388, %1387, %1386, %1385, %1384, %1383, %1382, %1381, %1380, %1379, %1378, %1375
  %1397 = load i8*, i8** %1365, align 8
  %scevgep2.2 = getelementptr i8, i8* %1397, i64 2
  %scevgep3.2 = getelementptr i8, i8* %scevgep2.2, i64 %lsr.iv.2
  %1398 = load i8, i8* %scevgep3.2, align 1
  %1399 = sext i8 %1398 to i32
  %1400 = icmp ne i32 %1399, 0
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %1400, label %.lr.ph42.2, label %._crit_edge43.loopexit.2

._crit_edge43.loopexit.2:                         ; preds = %1396
  br label %._crit_edge43.2

._crit_edge43.2:                                  ; preds = %._crit_edge43.loopexit.2, %1364, %1357, %1351
  call void @__loop_iteration_test___3()
  %1401 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %1402 = load %struct.zzzz*, %struct.zzzz** %1401, align 8
  %1403 = icmp ne %struct.zzzz* %1402, null
  br i1 %1403, label %.lr.ph48.3, label %.loopexit17.loopexit

.lr.ph48.3:                                       ; preds = %._crit_edge43.2
  call void @unroll_loop(i32 3)
  %1404 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1402, i32 0, i32 0
  %1405 = load i8*, i8** %1404, align 8
  %1406 = call i32 @strcmp(i8* %1405, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1407 = icmp eq i32 %1406, 0
  br i1 %1407, label %.loopexit17.loopexit, label %1408

; <label>:1408:                                   ; preds = %.lr.ph48.3
  %1409 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1402, i32 0, i32 0
  %1410 = load i8*, i8** %1409, align 8
  %1411 = load i8, i8* %1410, align 1
  %1412 = sext i8 %1411 to i32
  %1413 = icmp eq i32 %1412, 45
  br i1 %1413, label %1414, label %._crit_edge43.3

; <label>:1414:                                   ; preds = %1408
  %1415 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1402, i32 0, i32 0
  %1416 = load i8*, i8** %1415, align 8
  %1417 = getelementptr inbounds i8, i8* %1416, i64 1
  %1418 = load i8, i8* %1417, align 1
  %1419 = sext i8 %1418 to i32
  %1420 = icmp ne i32 %1419, 45
  br i1 %1420, label %1421, label %._crit_edge43.3

; <label>:1421:                                   ; preds = %1414
  %1422 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1402, i32 0, i32 0
  %1423 = load i8*, i8** %1422, align 8
  %1424 = getelementptr inbounds i8, i8* %1423, i64 1
  %1425 = load i8, i8* %1424, align 1
  %1426 = sext i8 %1425 to i32
  %1427 = icmp ne i32 %1426, 0
  br i1 %1427, label %.lr.ph42.preheader.3, label %._crit_edge43.3

.lr.ph42.preheader.3:                             ; preds = %1421
  %1428 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1402, i32 0, i32 0
  br label %.lr.ph42.3

.lr.ph42.3:                                       ; preds = %1453, %.lr.ph42.preheader.3
  %lsr.iv.3 = phi i64 [ 0, %.lr.ph42.preheader.3 ], [ %lsr.iv.next.3, %1453 ]
  call void @unroll_loop(i32 4)
  %1429 = load i8*, i8** %1428, align 8
  %scevgep.3 = getelementptr i8, i8* %1429, i64 1
  %scevgep1.3 = getelementptr i8, i8* %scevgep.3, i64 %lsr.iv.3
  %1430 = load i8, i8* %scevgep1.3, align 1
  %1431 = sext i8 %1430 to i32
  switch i32 %1431, label %.loopexit7 [
    i32 99, label %1452
    i32 100, label %1451
    i32 122, label %1450
    i32 102, label %1449
    i32 116, label %1448
    i32 107, label %1447
    i32 115, label %1446
    i32 113, label %1445
    i32 49, label %1444
    i32 50, label %1443
    i32 51, label %1442
    i32 52, label %1441
    i32 53, label %1440
    i32 54, label %1439
    i32 55, label %1438
    i32 56, label %1437
    i32 57, label %1436
    i32 86, label %1435
    i32 76, label %1435
    i32 118, label %1432
    i32 104, label %.loopexit8
  ]

; <label>:1432:                                   ; preds = %.lr.ph42.3
  %1433 = load i32, i32* @verbosity, align 4
  %1434 = add nsw i32 %1433, 1
  store i32 %1434, i32* @verbosity, align 4
  br label %1453

; <label>:1435:                                   ; preds = %.lr.ph42.3, %.lr.ph42.3
  call void @license()
  br label %1453

; <label>:1436:                                   ; preds = %.lr.ph42.3
  store i32 9, i32* @blockSize100k, align 4
  br label %1453

; <label>:1437:                                   ; preds = %.lr.ph42.3
  store i32 8, i32* @blockSize100k, align 4
  br label %1453

; <label>:1438:                                   ; preds = %.lr.ph42.3
  store i32 7, i32* @blockSize100k, align 4
  br label %1453

; <label>:1439:                                   ; preds = %.lr.ph42.3
  store i32 6, i32* @blockSize100k, align 4
  br label %1453

; <label>:1440:                                   ; preds = %.lr.ph42.3
  store i32 5, i32* @blockSize100k, align 4
  br label %1453

; <label>:1441:                                   ; preds = %.lr.ph42.3
  store i32 4, i32* @blockSize100k, align 4
  br label %1453

; <label>:1442:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @blockSize100k, align 4
  br label %1453

; <label>:1443:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @blockSize100k, align 4
  br label %1453

; <label>:1444:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @blockSize100k, align 4
  br label %1453

; <label>:1445:                                   ; preds = %.lr.ph42.3
  store i8 0, i8* @noisy, align 1
  br label %1453

; <label>:1446:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @smallMode, align 1
  br label %1453

; <label>:1447:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @keepInputFiles, align 1
  br label %1453

; <label>:1448:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @opMode, align 4
  br label %1453

; <label>:1449:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @forceOverwrite, align 1
  br label %1453

; <label>:1450:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @opMode, align 4
  br label %1453

; <label>:1451:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @opMode, align 4
  br label %1453

; <label>:1452:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @srcMode, align 4
  br label %1453

; <label>:1453:                                   ; preds = %1452, %1451, %1450, %1449, %1448, %1447, %1446, %1445, %1444, %1443, %1442, %1441, %1440, %1439, %1438, %1437, %1436, %1435, %1432
  %1454 = load i8*, i8** %1422, align 8
  %scevgep2.3 = getelementptr i8, i8* %1454, i64 2
  %scevgep3.3 = getelementptr i8, i8* %scevgep2.3, i64 %lsr.iv.3
  %1455 = load i8, i8* %scevgep3.3, align 1
  %1456 = sext i8 %1455 to i32
  %1457 = icmp ne i32 %1456, 0
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %1457, label %.lr.ph42.3, label %._crit_edge43.loopexit.3

._crit_edge43.loopexit.3:                         ; preds = %1453
  br label %._crit_edge43.3

._crit_edge43.3:                                  ; preds = %._crit_edge43.loopexit.3, %1421, %1414, %1408
  call void @__loop_iteration_test___3()
  %1458 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1402, i32 0, i32 1
  %1459 = load %struct.zzzz*, %struct.zzzz** %1458, align 8
  %1460 = icmp ne %struct.zzzz* %1459, null
  br i1 %1460, label %.lr.ph48.4, label %.loopexit17.loopexit

.lr.ph48.4:                                       ; preds = %._crit_edge43.3
  call void @unroll_loop(i32 3)
  %1461 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1459, i32 0, i32 0
  %1462 = load i8*, i8** %1461, align 8
  %1463 = call i32 @strcmp(i8* %1462, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1464 = icmp eq i32 %1463, 0
  br i1 %1464, label %.loopexit17.loopexit, label %1465

; <label>:1465:                                   ; preds = %.lr.ph48.4
  %1466 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1459, i32 0, i32 0
  %1467 = load i8*, i8** %1466, align 8
  %1468 = load i8, i8* %1467, align 1
  %1469 = sext i8 %1468 to i32
  %1470 = icmp eq i32 %1469, 45
  br i1 %1470, label %1471, label %._crit_edge43.4

; <label>:1471:                                   ; preds = %1465
  %1472 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1459, i32 0, i32 0
  %1473 = load i8*, i8** %1472, align 8
  %1474 = getelementptr inbounds i8, i8* %1473, i64 1
  %1475 = load i8, i8* %1474, align 1
  %1476 = sext i8 %1475 to i32
  %1477 = icmp ne i32 %1476, 45
  br i1 %1477, label %1478, label %._crit_edge43.4

; <label>:1478:                                   ; preds = %1471
  %1479 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1459, i32 0, i32 0
  %1480 = load i8*, i8** %1479, align 8
  %1481 = getelementptr inbounds i8, i8* %1480, i64 1
  %1482 = load i8, i8* %1481, align 1
  %1483 = sext i8 %1482 to i32
  %1484 = icmp ne i32 %1483, 0
  br i1 %1484, label %.lr.ph42.preheader.4, label %._crit_edge43.4

.lr.ph42.preheader.4:                             ; preds = %1478
  %1485 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1459, i32 0, i32 0
  br label %.lr.ph42.4

.lr.ph42.4:                                       ; preds = %1510, %.lr.ph42.preheader.4
  %lsr.iv.4 = phi i64 [ 0, %.lr.ph42.preheader.4 ], [ %lsr.iv.next.4, %1510 ]
  call void @unroll_loop(i32 4)
  %1486 = load i8*, i8** %1485, align 8
  %scevgep.4 = getelementptr i8, i8* %1486, i64 1
  %scevgep1.4 = getelementptr i8, i8* %scevgep.4, i64 %lsr.iv.4
  %1487 = load i8, i8* %scevgep1.4, align 1
  %1488 = sext i8 %1487 to i32
  switch i32 %1488, label %.loopexit9 [
    i32 99, label %1509
    i32 100, label %1508
    i32 122, label %1507
    i32 102, label %1506
    i32 116, label %1505
    i32 107, label %1504
    i32 115, label %1503
    i32 113, label %1502
    i32 49, label %1501
    i32 50, label %1500
    i32 51, label %1499
    i32 52, label %1498
    i32 53, label %1497
    i32 54, label %1496
    i32 55, label %1495
    i32 56, label %1494
    i32 57, label %1493
    i32 86, label %1492
    i32 76, label %1492
    i32 118, label %1489
    i32 104, label %.loopexit10
  ]

; <label>:1489:                                   ; preds = %.lr.ph42.4
  %1490 = load i32, i32* @verbosity, align 4
  %1491 = add nsw i32 %1490, 1
  store i32 %1491, i32* @verbosity, align 4
  br label %1510

; <label>:1492:                                   ; preds = %.lr.ph42.4, %.lr.ph42.4
  call void @license()
  br label %1510

; <label>:1493:                                   ; preds = %.lr.ph42.4
  store i32 9, i32* @blockSize100k, align 4
  br label %1510

; <label>:1494:                                   ; preds = %.lr.ph42.4
  store i32 8, i32* @blockSize100k, align 4
  br label %1510

; <label>:1495:                                   ; preds = %.lr.ph42.4
  store i32 7, i32* @blockSize100k, align 4
  br label %1510

; <label>:1496:                                   ; preds = %.lr.ph42.4
  store i32 6, i32* @blockSize100k, align 4
  br label %1510

; <label>:1497:                                   ; preds = %.lr.ph42.4
  store i32 5, i32* @blockSize100k, align 4
  br label %1510

; <label>:1498:                                   ; preds = %.lr.ph42.4
  store i32 4, i32* @blockSize100k, align 4
  br label %1510

; <label>:1499:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @blockSize100k, align 4
  br label %1510

; <label>:1500:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @blockSize100k, align 4
  br label %1510

; <label>:1501:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @blockSize100k, align 4
  br label %1510

; <label>:1502:                                   ; preds = %.lr.ph42.4
  store i8 0, i8* @noisy, align 1
  br label %1510

; <label>:1503:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @smallMode, align 1
  br label %1510

; <label>:1504:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @keepInputFiles, align 1
  br label %1510

; <label>:1505:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @opMode, align 4
  br label %1510

; <label>:1506:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @forceOverwrite, align 1
  br label %1510

; <label>:1507:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @opMode, align 4
  br label %1510

; <label>:1508:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @opMode, align 4
  br label %1510

; <label>:1509:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @srcMode, align 4
  br label %1510

; <label>:1510:                                   ; preds = %1509, %1508, %1507, %1506, %1505, %1504, %1503, %1502, %1501, %1500, %1499, %1498, %1497, %1496, %1495, %1494, %1493, %1492, %1489
  %1511 = load i8*, i8** %1479, align 8
  %scevgep2.4 = getelementptr i8, i8* %1511, i64 2
  %scevgep3.4 = getelementptr i8, i8* %scevgep2.4, i64 %lsr.iv.4
  %1512 = load i8, i8* %scevgep3.4, align 1
  %1513 = sext i8 %1512 to i32
  %1514 = icmp ne i32 %1513, 0
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %1514, label %.lr.ph42.4, label %._crit_edge43.loopexit.4

._crit_edge43.loopexit.4:                         ; preds = %1510
  br label %._crit_edge43.4

._crit_edge43.4:                                  ; preds = %._crit_edge43.loopexit.4, %1478, %1471, %1465
  call void @__loop_iteration_test___3()
  %1515 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1459, i32 0, i32 1
  %1516 = load %struct.zzzz*, %struct.zzzz** %1515, align 8
  %1517 = icmp ne %struct.zzzz* %1516, null
  br i1 %1517, label %.lr.ph48.5, label %.loopexit17.loopexit

.lr.ph48.5:                                       ; preds = %._crit_edge43.4
  call void @unroll_loop(i32 3)
  %1518 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1516, i32 0, i32 0
  %1519 = load i8*, i8** %1518, align 8
  %1520 = call i32 @strcmp(i8* %1519, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1521 = icmp eq i32 %1520, 0
  br i1 %1521, label %.loopexit17.loopexit, label %1522

; <label>:1522:                                   ; preds = %.lr.ph48.5
  %1523 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1516, i32 0, i32 0
  %1524 = load i8*, i8** %1523, align 8
  %1525 = load i8, i8* %1524, align 1
  %1526 = sext i8 %1525 to i32
  %1527 = icmp eq i32 %1526, 45
  br i1 %1527, label %1528, label %._crit_edge43.5

; <label>:1528:                                   ; preds = %1522
  %1529 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1516, i32 0, i32 0
  %1530 = load i8*, i8** %1529, align 8
  %1531 = getelementptr inbounds i8, i8* %1530, i64 1
  %1532 = load i8, i8* %1531, align 1
  %1533 = sext i8 %1532 to i32
  %1534 = icmp ne i32 %1533, 45
  br i1 %1534, label %1535, label %._crit_edge43.5

; <label>:1535:                                   ; preds = %1528
  %1536 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1516, i32 0, i32 0
  %1537 = load i8*, i8** %1536, align 8
  %1538 = getelementptr inbounds i8, i8* %1537, i64 1
  %1539 = load i8, i8* %1538, align 1
  %1540 = sext i8 %1539 to i32
  %1541 = icmp ne i32 %1540, 0
  br i1 %1541, label %.lr.ph42.preheader.5, label %._crit_edge43.5

.lr.ph42.preheader.5:                             ; preds = %1535
  %1542 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1516, i32 0, i32 0
  br label %.lr.ph42.5

.lr.ph42.5:                                       ; preds = %1567, %.lr.ph42.preheader.5
  %lsr.iv.5 = phi i64 [ 0, %.lr.ph42.preheader.5 ], [ %lsr.iv.next.5, %1567 ]
  call void @unroll_loop(i32 4)
  %1543 = load i8*, i8** %1542, align 8
  %scevgep.5 = getelementptr i8, i8* %1543, i64 1
  %scevgep1.5 = getelementptr i8, i8* %scevgep.5, i64 %lsr.iv.5
  %1544 = load i8, i8* %scevgep1.5, align 1
  %1545 = sext i8 %1544 to i32
  switch i32 %1545, label %.loopexit11 [
    i32 99, label %1566
    i32 100, label %1565
    i32 122, label %1564
    i32 102, label %1563
    i32 116, label %1562
    i32 107, label %1561
    i32 115, label %1560
    i32 113, label %1559
    i32 49, label %1558
    i32 50, label %1557
    i32 51, label %1556
    i32 52, label %1555
    i32 53, label %1554
    i32 54, label %1553
    i32 55, label %1552
    i32 56, label %1551
    i32 57, label %1550
    i32 86, label %1549
    i32 76, label %1549
    i32 118, label %1546
    i32 104, label %.loopexit12
  ]

; <label>:1546:                                   ; preds = %.lr.ph42.5
  %1547 = load i32, i32* @verbosity, align 4
  %1548 = add nsw i32 %1547, 1
  store i32 %1548, i32* @verbosity, align 4
  br label %1567

; <label>:1549:                                   ; preds = %.lr.ph42.5, %.lr.ph42.5
  call void @license()
  br label %1567

; <label>:1550:                                   ; preds = %.lr.ph42.5
  store i32 9, i32* @blockSize100k, align 4
  br label %1567

; <label>:1551:                                   ; preds = %.lr.ph42.5
  store i32 8, i32* @blockSize100k, align 4
  br label %1567

; <label>:1552:                                   ; preds = %.lr.ph42.5
  store i32 7, i32* @blockSize100k, align 4
  br label %1567

; <label>:1553:                                   ; preds = %.lr.ph42.5
  store i32 6, i32* @blockSize100k, align 4
  br label %1567

; <label>:1554:                                   ; preds = %.lr.ph42.5
  store i32 5, i32* @blockSize100k, align 4
  br label %1567

; <label>:1555:                                   ; preds = %.lr.ph42.5
  store i32 4, i32* @blockSize100k, align 4
  br label %1567

; <label>:1556:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @blockSize100k, align 4
  br label %1567

; <label>:1557:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @blockSize100k, align 4
  br label %1567

; <label>:1558:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @blockSize100k, align 4
  br label %1567

; <label>:1559:                                   ; preds = %.lr.ph42.5
  store i8 0, i8* @noisy, align 1
  br label %1567

; <label>:1560:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @smallMode, align 1
  br label %1567

; <label>:1561:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @keepInputFiles, align 1
  br label %1567

; <label>:1562:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @opMode, align 4
  br label %1567

; <label>:1563:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @forceOverwrite, align 1
  br label %1567

; <label>:1564:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @opMode, align 4
  br label %1567

; <label>:1565:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @opMode, align 4
  br label %1567

; <label>:1566:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @srcMode, align 4
  br label %1567

; <label>:1567:                                   ; preds = %1566, %1565, %1564, %1563, %1562, %1561, %1560, %1559, %1558, %1557, %1556, %1555, %1554, %1553, %1552, %1551, %1550, %1549, %1546
  %1568 = load i8*, i8** %1536, align 8
  %scevgep2.5 = getelementptr i8, i8* %1568, i64 2
  %scevgep3.5 = getelementptr i8, i8* %scevgep2.5, i64 %lsr.iv.5
  %1569 = load i8, i8* %scevgep3.5, align 1
  %1570 = sext i8 %1569 to i32
  %1571 = icmp ne i32 %1570, 0
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %1571, label %.lr.ph42.5, label %._crit_edge43.loopexit.5

._crit_edge43.loopexit.5:                         ; preds = %1567
  br label %._crit_edge43.5

._crit_edge43.5:                                  ; preds = %._crit_edge43.loopexit.5, %1535, %1528, %1522
  call void @__loop_iteration_test___3()
  %1572 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1516, i32 0, i32 1
  %1573 = load %struct.zzzz*, %struct.zzzz** %1572, align 8
  %1574 = icmp ne %struct.zzzz* %1573, null
  br i1 %1574, label %.lr.ph48.6, label %.loopexit17.loopexit

.lr.ph48.6:                                       ; preds = %._crit_edge43.5
  call void @unroll_loop(i32 3)
  %1575 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1573, i32 0, i32 0
  %1576 = load i8*, i8** %1575, align 8
  %1577 = call i32 @strcmp(i8* %1576, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1578 = icmp eq i32 %1577, 0
  br i1 %1578, label %.loopexit17.loopexit, label %1579

; <label>:1579:                                   ; preds = %.lr.ph48.6
  %1580 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1573, i32 0, i32 0
  %1581 = load i8*, i8** %1580, align 8
  %1582 = load i8, i8* %1581, align 1
  %1583 = sext i8 %1582 to i32
  %1584 = icmp eq i32 %1583, 45
  br i1 %1584, label %1585, label %._crit_edge43.6

; <label>:1585:                                   ; preds = %1579
  %1586 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1573, i32 0, i32 0
  %1587 = load i8*, i8** %1586, align 8
  %1588 = getelementptr inbounds i8, i8* %1587, i64 1
  %1589 = load i8, i8* %1588, align 1
  %1590 = sext i8 %1589 to i32
  %1591 = icmp ne i32 %1590, 45
  br i1 %1591, label %1592, label %._crit_edge43.6

; <label>:1592:                                   ; preds = %1585
  %1593 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1573, i32 0, i32 0
  %1594 = load i8*, i8** %1593, align 8
  %1595 = getelementptr inbounds i8, i8* %1594, i64 1
  %1596 = load i8, i8* %1595, align 1
  %1597 = sext i8 %1596 to i32
  %1598 = icmp ne i32 %1597, 0
  br i1 %1598, label %.lr.ph42.preheader.6, label %._crit_edge43.6

.lr.ph42.preheader.6:                             ; preds = %1592
  %1599 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1573, i32 0, i32 0
  br label %.lr.ph42.6

.lr.ph42.6:                                       ; preds = %1624, %.lr.ph42.preheader.6
  %lsr.iv.6 = phi i64 [ 0, %.lr.ph42.preheader.6 ], [ %lsr.iv.next.6, %1624 ]
  call void @unroll_loop(i32 4)
  %1600 = load i8*, i8** %1599, align 8
  %scevgep.6 = getelementptr i8, i8* %1600, i64 1
  %scevgep1.6 = getelementptr i8, i8* %scevgep.6, i64 %lsr.iv.6
  %1601 = load i8, i8* %scevgep1.6, align 1
  %1602 = sext i8 %1601 to i32
  switch i32 %1602, label %.loopexit13 [
    i32 99, label %1623
    i32 100, label %1622
    i32 122, label %1621
    i32 102, label %1620
    i32 116, label %1619
    i32 107, label %1618
    i32 115, label %1617
    i32 113, label %1616
    i32 49, label %1615
    i32 50, label %1614
    i32 51, label %1613
    i32 52, label %1612
    i32 53, label %1611
    i32 54, label %1610
    i32 55, label %1609
    i32 56, label %1608
    i32 57, label %1607
    i32 86, label %1606
    i32 76, label %1606
    i32 118, label %1603
    i32 104, label %.loopexit14
  ]

; <label>:1603:                                   ; preds = %.lr.ph42.6
  %1604 = load i32, i32* @verbosity, align 4
  %1605 = add nsw i32 %1604, 1
  store i32 %1605, i32* @verbosity, align 4
  br label %1624

; <label>:1606:                                   ; preds = %.lr.ph42.6, %.lr.ph42.6
  call void @license()
  br label %1624

; <label>:1607:                                   ; preds = %.lr.ph42.6
  store i32 9, i32* @blockSize100k, align 4
  br label %1624

; <label>:1608:                                   ; preds = %.lr.ph42.6
  store i32 8, i32* @blockSize100k, align 4
  br label %1624

; <label>:1609:                                   ; preds = %.lr.ph42.6
  store i32 7, i32* @blockSize100k, align 4
  br label %1624

; <label>:1610:                                   ; preds = %.lr.ph42.6
  store i32 6, i32* @blockSize100k, align 4
  br label %1624

; <label>:1611:                                   ; preds = %.lr.ph42.6
  store i32 5, i32* @blockSize100k, align 4
  br label %1624

; <label>:1612:                                   ; preds = %.lr.ph42.6
  store i32 4, i32* @blockSize100k, align 4
  br label %1624

; <label>:1613:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @blockSize100k, align 4
  br label %1624

; <label>:1614:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @blockSize100k, align 4
  br label %1624

; <label>:1615:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @blockSize100k, align 4
  br label %1624

; <label>:1616:                                   ; preds = %.lr.ph42.6
  store i8 0, i8* @noisy, align 1
  br label %1624

; <label>:1617:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @smallMode, align 1
  br label %1624

; <label>:1618:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @keepInputFiles, align 1
  br label %1624

; <label>:1619:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @opMode, align 4
  br label %1624

; <label>:1620:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @forceOverwrite, align 1
  br label %1624

; <label>:1621:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @opMode, align 4
  br label %1624

; <label>:1622:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @opMode, align 4
  br label %1624

; <label>:1623:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @srcMode, align 4
  br label %1624

; <label>:1624:                                   ; preds = %1623, %1622, %1621, %1620, %1619, %1618, %1617, %1616, %1615, %1614, %1613, %1612, %1611, %1610, %1609, %1608, %1607, %1606, %1603
  %1625 = load i8*, i8** %1593, align 8
  %scevgep2.6 = getelementptr i8, i8* %1625, i64 2
  %scevgep3.6 = getelementptr i8, i8* %scevgep2.6, i64 %lsr.iv.6
  %1626 = load i8, i8* %scevgep3.6, align 1
  %1627 = sext i8 %1626 to i32
  %1628 = icmp ne i32 %1627, 0
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %1628, label %.lr.ph42.6, label %._crit_edge43.loopexit.6

._crit_edge43.loopexit.6:                         ; preds = %1624
  br label %._crit_edge43.6

._crit_edge43.6:                                  ; preds = %._crit_edge43.loopexit.6, %1592, %1585, %1579
  call void @__loop_iteration_test___3()
  %1629 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1573, i32 0, i32 1
  %1630 = load %struct.zzzz*, %struct.zzzz** %1629, align 8
  %1631 = icmp ne %struct.zzzz* %1630, null
  br i1 %1631, label %.lr.ph48.7, label %.loopexit17.loopexit

.lr.ph48.7:                                       ; preds = %._crit_edge43.6
  call void @unroll_loop(i32 3)
  %1632 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1630, i32 0, i32 0
  %1633 = load i8*, i8** %1632, align 8
  %1634 = call i32 @strcmp(i8* %1633, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1635 = icmp eq i32 %1634, 0
  br i1 %1635, label %.loopexit17.loopexit, label %1636

; <label>:1636:                                   ; preds = %.lr.ph48.7
  %1637 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1630, i32 0, i32 0
  %1638 = load i8*, i8** %1637, align 8
  %1639 = load i8, i8* %1638, align 1
  %1640 = sext i8 %1639 to i32
  %1641 = icmp eq i32 %1640, 45
  br i1 %1641, label %1642, label %._crit_edge43.7

; <label>:1642:                                   ; preds = %1636
  %1643 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1630, i32 0, i32 0
  %1644 = load i8*, i8** %1643, align 8
  %1645 = getelementptr inbounds i8, i8* %1644, i64 1
  %1646 = load i8, i8* %1645, align 1
  %1647 = sext i8 %1646 to i32
  %1648 = icmp ne i32 %1647, 45
  br i1 %1648, label %1649, label %._crit_edge43.7

; <label>:1649:                                   ; preds = %1642
  %1650 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1630, i32 0, i32 0
  %1651 = load i8*, i8** %1650, align 8
  %1652 = getelementptr inbounds i8, i8* %1651, i64 1
  %1653 = load i8, i8* %1652, align 1
  %1654 = sext i8 %1653 to i32
  %1655 = icmp ne i32 %1654, 0
  br i1 %1655, label %.lr.ph42.preheader.7, label %._crit_edge43.7

.lr.ph42.preheader.7:                             ; preds = %1649
  %1656 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1630, i32 0, i32 0
  br label %.lr.ph42.7

.lr.ph42.7:                                       ; preds = %1681, %.lr.ph42.preheader.7
  %lsr.iv.7 = phi i64 [ 0, %.lr.ph42.preheader.7 ], [ %lsr.iv.next.7, %1681 ]
  call void @unroll_loop(i32 4)
  %1657 = load i8*, i8** %1656, align 8
  %scevgep.7 = getelementptr i8, i8* %1657, i64 1
  %scevgep1.7 = getelementptr i8, i8* %scevgep.7, i64 %lsr.iv.7
  %1658 = load i8, i8* %scevgep1.7, align 1
  %1659 = sext i8 %1658 to i32
  switch i32 %1659, label %.loopexit15 [
    i32 99, label %1680
    i32 100, label %1679
    i32 122, label %1678
    i32 102, label %1677
    i32 116, label %1676
    i32 107, label %1675
    i32 115, label %1674
    i32 113, label %1673
    i32 49, label %1672
    i32 50, label %1671
    i32 51, label %1670
    i32 52, label %1669
    i32 53, label %1668
    i32 54, label %1667
    i32 55, label %1666
    i32 56, label %1665
    i32 57, label %1664
    i32 86, label %1663
    i32 76, label %1663
    i32 118, label %1660
    i32 104, label %.loopexit16
  ]

; <label>:1660:                                   ; preds = %.lr.ph42.7
  %1661 = load i32, i32* @verbosity, align 4
  %1662 = add nsw i32 %1661, 1
  store i32 %1662, i32* @verbosity, align 4
  br label %1681

; <label>:1663:                                   ; preds = %.lr.ph42.7, %.lr.ph42.7
  call void @license()
  br label %1681

; <label>:1664:                                   ; preds = %.lr.ph42.7
  store i32 9, i32* @blockSize100k, align 4
  br label %1681

; <label>:1665:                                   ; preds = %.lr.ph42.7
  store i32 8, i32* @blockSize100k, align 4
  br label %1681

; <label>:1666:                                   ; preds = %.lr.ph42.7
  store i32 7, i32* @blockSize100k, align 4
  br label %1681

; <label>:1667:                                   ; preds = %.lr.ph42.7
  store i32 6, i32* @blockSize100k, align 4
  br label %1681

; <label>:1668:                                   ; preds = %.lr.ph42.7
  store i32 5, i32* @blockSize100k, align 4
  br label %1681

; <label>:1669:                                   ; preds = %.lr.ph42.7
  store i32 4, i32* @blockSize100k, align 4
  br label %1681

; <label>:1670:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @blockSize100k, align 4
  br label %1681

; <label>:1671:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @blockSize100k, align 4
  br label %1681

; <label>:1672:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @blockSize100k, align 4
  br label %1681

; <label>:1673:                                   ; preds = %.lr.ph42.7
  store i8 0, i8* @noisy, align 1
  br label %1681

; <label>:1674:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @smallMode, align 1
  br label %1681

; <label>:1675:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @keepInputFiles, align 1
  br label %1681

; <label>:1676:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @opMode, align 4
  br label %1681

; <label>:1677:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @forceOverwrite, align 1
  br label %1681

; <label>:1678:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @opMode, align 4
  br label %1681

; <label>:1679:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @opMode, align 4
  br label %1681

; <label>:1680:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @srcMode, align 4
  br label %1681

; <label>:1681:                                   ; preds = %1680, %1679, %1678, %1677, %1676, %1675, %1674, %1673, %1672, %1671, %1670, %1669, %1668, %1667, %1666, %1665, %1664, %1663, %1660
  %1682 = load i8*, i8** %1650, align 8
  %scevgep2.7 = getelementptr i8, i8* %1682, i64 2
  %scevgep3.7 = getelementptr i8, i8* %scevgep2.7, i64 %lsr.iv.7
  %1683 = load i8, i8* %scevgep3.7, align 1
  %1684 = sext i8 %1683 to i32
  %1685 = icmp ne i32 %1684, 0
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %1685, label %.lr.ph42.7, label %._crit_edge43.loopexit.7

._crit_edge43.loopexit.7:                         ; preds = %1681
  br label %._crit_edge43.7

._crit_edge43.7:                                  ; preds = %._crit_edge43.loopexit.7, %1649, %1642, %1636
  call void @__loop_iteration_test___3()
  %1686 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1630, i32 0, i32 1
  %1687 = load %struct.zzzz*, %struct.zzzz** %1686, align 8
  %1688 = icmp ne %struct.zzzz* %1687, null
  br i1 %1688, label %.lr.ph48.8, label %.loopexit17.loopexit

.lr.ph48.8:                                       ; preds = %._crit_edge43.7
  call void @unroll_loop(i32 3)
  %1689 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1687, i32 0, i32 0
  %1690 = load i8*, i8** %1689, align 8
  %1691 = call i32 @strcmp(i8* %1690, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1692 = icmp eq i32 %1691, 0
  br i1 %1692, label %.loopexit17.loopexit, label %1693

; <label>:1693:                                   ; preds = %.lr.ph48.8
  %1694 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1687, i32 0, i32 0
  %1695 = load i8*, i8** %1694, align 8
  %1696 = load i8, i8* %1695, align 1
  %1697 = sext i8 %1696 to i32
  %1698 = icmp eq i32 %1697, 45
  br i1 %1698, label %1699, label %._crit_edge43.8

; <label>:1699:                                   ; preds = %1693
  %1700 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1687, i32 0, i32 0
  %1701 = load i8*, i8** %1700, align 8
  %1702 = getelementptr inbounds i8, i8* %1701, i64 1
  %1703 = load i8, i8* %1702, align 1
  %1704 = sext i8 %1703 to i32
  %1705 = icmp ne i32 %1704, 45
  br i1 %1705, label %1706, label %._crit_edge43.8

; <label>:1706:                                   ; preds = %1699
  %1707 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1687, i32 0, i32 0
  %1708 = load i8*, i8** %1707, align 8
  %1709 = getelementptr inbounds i8, i8* %1708, i64 1
  %1710 = load i8, i8* %1709, align 1
  %1711 = sext i8 %1710 to i32
  %1712 = icmp ne i32 %1711, 0
  br i1 %1712, label %.lr.ph42.preheader.8, label %._crit_edge43.8

.lr.ph42.preheader.8:                             ; preds = %1706
  %1713 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1687, i32 0, i32 0
  br label %.lr.ph42.8

.lr.ph42.8:                                       ; preds = %1738, %.lr.ph42.preheader.8
  %lsr.iv.8 = phi i64 [ 0, %.lr.ph42.preheader.8 ], [ %lsr.iv.next.8, %1738 ]
  call void @unroll_loop(i32 4)
  %1714 = load i8*, i8** %1713, align 8
  %scevgep.8 = getelementptr i8, i8* %1714, i64 1
  %scevgep1.8 = getelementptr i8, i8* %scevgep.8, i64 %lsr.iv.8
  %1715 = load i8, i8* %scevgep1.8, align 1
  %1716 = sext i8 %1715 to i32
  switch i32 %1716, label %.loopexit18 [
    i32 99, label %1737
    i32 100, label %1736
    i32 122, label %1735
    i32 102, label %1734
    i32 116, label %1733
    i32 107, label %1732
    i32 115, label %1731
    i32 113, label %1730
    i32 49, label %1729
    i32 50, label %1728
    i32 51, label %1727
    i32 52, label %1726
    i32 53, label %1725
    i32 54, label %1724
    i32 55, label %1723
    i32 56, label %1722
    i32 57, label %1721
    i32 86, label %1720
    i32 76, label %1720
    i32 118, label %1717
    i32 104, label %.loopexit19
  ]

; <label>:1717:                                   ; preds = %.lr.ph42.8
  %1718 = load i32, i32* @verbosity, align 4
  %1719 = add nsw i32 %1718, 1
  store i32 %1719, i32* @verbosity, align 4
  br label %1738

; <label>:1720:                                   ; preds = %.lr.ph42.8, %.lr.ph42.8
  call void @license()
  br label %1738

; <label>:1721:                                   ; preds = %.lr.ph42.8
  store i32 9, i32* @blockSize100k, align 4
  br label %1738

; <label>:1722:                                   ; preds = %.lr.ph42.8
  store i32 8, i32* @blockSize100k, align 4
  br label %1738

; <label>:1723:                                   ; preds = %.lr.ph42.8
  store i32 7, i32* @blockSize100k, align 4
  br label %1738

; <label>:1724:                                   ; preds = %.lr.ph42.8
  store i32 6, i32* @blockSize100k, align 4
  br label %1738

; <label>:1725:                                   ; preds = %.lr.ph42.8
  store i32 5, i32* @blockSize100k, align 4
  br label %1738

; <label>:1726:                                   ; preds = %.lr.ph42.8
  store i32 4, i32* @blockSize100k, align 4
  br label %1738

; <label>:1727:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @blockSize100k, align 4
  br label %1738

; <label>:1728:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @blockSize100k, align 4
  br label %1738

; <label>:1729:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @blockSize100k, align 4
  br label %1738

; <label>:1730:                                   ; preds = %.lr.ph42.8
  store i8 0, i8* @noisy, align 1
  br label %1738

; <label>:1731:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @smallMode, align 1
  br label %1738

; <label>:1732:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @keepInputFiles, align 1
  br label %1738

; <label>:1733:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @opMode, align 4
  br label %1738

; <label>:1734:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @forceOverwrite, align 1
  br label %1738

; <label>:1735:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @opMode, align 4
  br label %1738

; <label>:1736:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @opMode, align 4
  br label %1738

; <label>:1737:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @srcMode, align 4
  br label %1738

; <label>:1738:                                   ; preds = %1737, %1736, %1735, %1734, %1733, %1732, %1731, %1730, %1729, %1728, %1727, %1726, %1725, %1724, %1723, %1722, %1721, %1720, %1717
  %1739 = load i8*, i8** %1707, align 8
  %scevgep2.8 = getelementptr i8, i8* %1739, i64 2
  %scevgep3.8 = getelementptr i8, i8* %scevgep2.8, i64 %lsr.iv.8
  %1740 = load i8, i8* %scevgep3.8, align 1
  %1741 = sext i8 %1740 to i32
  %1742 = icmp ne i32 %1741, 0
  %lsr.iv.next.8 = add i64 %lsr.iv.8, 1
  br i1 %1742, label %.lr.ph42.8, label %._crit_edge43.loopexit.8

._crit_edge43.loopexit.8:                         ; preds = %1738
  br label %._crit_edge43.8

._crit_edge43.8:                                  ; preds = %._crit_edge43.loopexit.8, %1706, %1699, %1693
  call void @__loop_iteration_test___3()
  %1743 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1687, i32 0, i32 1
  %1744 = load %struct.zzzz*, %struct.zzzz** %1743, align 8
  %1745 = icmp ne %struct.zzzz* %1744, null
  br i1 %1745, label %.lr.ph48.9, label %.loopexit17.loopexit

.lr.ph48.9:                                       ; preds = %._crit_edge43.8
  call void @unroll_loop(i32 3)
  %1746 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1744, i32 0, i32 0
  %1747 = load i8*, i8** %1746, align 8
  %1748 = call i32 @strcmp(i8* %1747, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1749 = icmp eq i32 %1748, 0
  br i1 %1749, label %.loopexit17.loopexit, label %1750

; <label>:1750:                                   ; preds = %.lr.ph48.9
  %1751 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1744, i32 0, i32 0
  %1752 = load i8*, i8** %1751, align 8
  %1753 = load i8, i8* %1752, align 1
  %1754 = sext i8 %1753 to i32
  %1755 = icmp eq i32 %1754, 45
  br i1 %1755, label %1756, label %._crit_edge43.9

; <label>:1756:                                   ; preds = %1750
  %1757 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1744, i32 0, i32 0
  %1758 = load i8*, i8** %1757, align 8
  %1759 = getelementptr inbounds i8, i8* %1758, i64 1
  %1760 = load i8, i8* %1759, align 1
  %1761 = sext i8 %1760 to i32
  %1762 = icmp ne i32 %1761, 45
  br i1 %1762, label %1763, label %._crit_edge43.9

; <label>:1763:                                   ; preds = %1756
  %1764 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1744, i32 0, i32 0
  %1765 = load i8*, i8** %1764, align 8
  %1766 = getelementptr inbounds i8, i8* %1765, i64 1
  %1767 = load i8, i8* %1766, align 1
  %1768 = sext i8 %1767 to i32
  %1769 = icmp ne i32 %1768, 0
  br i1 %1769, label %.lr.ph42.preheader.9, label %._crit_edge43.9

.lr.ph42.preheader.9:                             ; preds = %1763
  %1770 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1744, i32 0, i32 0
  br label %.lr.ph42.9

.lr.ph42.9:                                       ; preds = %1795, %.lr.ph42.preheader.9
  %lsr.iv.9 = phi i64 [ 0, %.lr.ph42.preheader.9 ], [ %lsr.iv.next.9, %1795 ]
  call void @unroll_loop(i32 4)
  %1771 = load i8*, i8** %1770, align 8
  %scevgep.9 = getelementptr i8, i8* %1771, i64 1
  %scevgep1.9 = getelementptr i8, i8* %scevgep.9, i64 %lsr.iv.9
  %1772 = load i8, i8* %scevgep1.9, align 1
  %1773 = sext i8 %1772 to i32
  switch i32 %1773, label %.loopexit20 [
    i32 99, label %1794
    i32 100, label %1793
    i32 122, label %1792
    i32 102, label %1791
    i32 116, label %1790
    i32 107, label %1789
    i32 115, label %1788
    i32 113, label %1787
    i32 49, label %1786
    i32 50, label %1785
    i32 51, label %1784
    i32 52, label %1783
    i32 53, label %1782
    i32 54, label %1781
    i32 55, label %1780
    i32 56, label %1779
    i32 57, label %1778
    i32 86, label %1777
    i32 76, label %1777
    i32 118, label %1774
    i32 104, label %.loopexit21
  ]

; <label>:1774:                                   ; preds = %.lr.ph42.9
  %1775 = load i32, i32* @verbosity, align 4
  %1776 = add nsw i32 %1775, 1
  store i32 %1776, i32* @verbosity, align 4
  br label %1795

; <label>:1777:                                   ; preds = %.lr.ph42.9, %.lr.ph42.9
  call void @license()
  br label %1795

; <label>:1778:                                   ; preds = %.lr.ph42.9
  store i32 9, i32* @blockSize100k, align 4
  br label %1795

; <label>:1779:                                   ; preds = %.lr.ph42.9
  store i32 8, i32* @blockSize100k, align 4
  br label %1795

; <label>:1780:                                   ; preds = %.lr.ph42.9
  store i32 7, i32* @blockSize100k, align 4
  br label %1795

; <label>:1781:                                   ; preds = %.lr.ph42.9
  store i32 6, i32* @blockSize100k, align 4
  br label %1795

; <label>:1782:                                   ; preds = %.lr.ph42.9
  store i32 5, i32* @blockSize100k, align 4
  br label %1795

; <label>:1783:                                   ; preds = %.lr.ph42.9
  store i32 4, i32* @blockSize100k, align 4
  br label %1795

; <label>:1784:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @blockSize100k, align 4
  br label %1795

; <label>:1785:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @blockSize100k, align 4
  br label %1795

; <label>:1786:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @blockSize100k, align 4
  br label %1795

; <label>:1787:                                   ; preds = %.lr.ph42.9
  store i8 0, i8* @noisy, align 1
  br label %1795

; <label>:1788:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @smallMode, align 1
  br label %1795

; <label>:1789:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @keepInputFiles, align 1
  br label %1795

; <label>:1790:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @opMode, align 4
  br label %1795

; <label>:1791:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @forceOverwrite, align 1
  br label %1795

; <label>:1792:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @opMode, align 4
  br label %1795

; <label>:1793:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @opMode, align 4
  br label %1795

; <label>:1794:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @srcMode, align 4
  br label %1795

; <label>:1795:                                   ; preds = %1794, %1793, %1792, %1791, %1790, %1789, %1788, %1787, %1786, %1785, %1784, %1783, %1782, %1781, %1780, %1779, %1778, %1777, %1774
  %1796 = load i8*, i8** %1764, align 8
  %scevgep2.9 = getelementptr i8, i8* %1796, i64 2
  %scevgep3.9 = getelementptr i8, i8* %scevgep2.9, i64 %lsr.iv.9
  %1797 = load i8, i8* %scevgep3.9, align 1
  %1798 = sext i8 %1797 to i32
  %1799 = icmp ne i32 %1798, 0
  %lsr.iv.next.9 = add i64 %lsr.iv.9, 1
  br i1 %1799, label %.lr.ph42.9, label %._crit_edge43.loopexit.9

._crit_edge43.loopexit.9:                         ; preds = %1795
  br label %._crit_edge43.9

._crit_edge43.9:                                  ; preds = %._crit_edge43.loopexit.9, %1763, %1756, %1750
  call void @__loop_iteration_test___3()
  %1800 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1744, i32 0, i32 1
  %1801 = load %struct.zzzz*, %struct.zzzz** %1800, align 8
  %1802 = icmp ne %struct.zzzz* %1801, null
  br i1 %1802, label %.lr.ph48.10, label %.loopexit17.loopexit

.lr.ph48.10:                                      ; preds = %._crit_edge43.9
  call void @unroll_loop(i32 3)
  %1803 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1801, i32 0, i32 0
  %1804 = load i8*, i8** %1803, align 8
  %1805 = call i32 @strcmp(i8* %1804, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1806 = icmp eq i32 %1805, 0
  br i1 %1806, label %.loopexit17.loopexit, label %1807

; <label>:1807:                                   ; preds = %.lr.ph48.10
  %1808 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1801, i32 0, i32 0
  %1809 = load i8*, i8** %1808, align 8
  %1810 = load i8, i8* %1809, align 1
  %1811 = sext i8 %1810 to i32
  %1812 = icmp eq i32 %1811, 45
  br i1 %1812, label %1813, label %._crit_edge43.10

; <label>:1813:                                   ; preds = %1807
  %1814 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1801, i32 0, i32 0
  %1815 = load i8*, i8** %1814, align 8
  %1816 = getelementptr inbounds i8, i8* %1815, i64 1
  %1817 = load i8, i8* %1816, align 1
  %1818 = sext i8 %1817 to i32
  %1819 = icmp ne i32 %1818, 45
  br i1 %1819, label %1820, label %._crit_edge43.10

; <label>:1820:                                   ; preds = %1813
  %1821 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1801, i32 0, i32 0
  %1822 = load i8*, i8** %1821, align 8
  %1823 = getelementptr inbounds i8, i8* %1822, i64 1
  %1824 = load i8, i8* %1823, align 1
  %1825 = sext i8 %1824 to i32
  %1826 = icmp ne i32 %1825, 0
  br i1 %1826, label %.lr.ph42.preheader.10, label %._crit_edge43.10

.lr.ph42.preheader.10:                            ; preds = %1820
  %1827 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1801, i32 0, i32 0
  br label %.lr.ph42.10

.lr.ph42.10:                                      ; preds = %1852, %.lr.ph42.preheader.10
  %lsr.iv.10 = phi i64 [ 0, %.lr.ph42.preheader.10 ], [ %lsr.iv.next.10, %1852 ]
  call void @unroll_loop(i32 4)
  %1828 = load i8*, i8** %1827, align 8
  %scevgep.10 = getelementptr i8, i8* %1828, i64 1
  %scevgep1.10 = getelementptr i8, i8* %scevgep.10, i64 %lsr.iv.10
  %1829 = load i8, i8* %scevgep1.10, align 1
  %1830 = sext i8 %1829 to i32
  switch i32 %1830, label %.loopexit22 [
    i32 99, label %1851
    i32 100, label %1850
    i32 122, label %1849
    i32 102, label %1848
    i32 116, label %1847
    i32 107, label %1846
    i32 115, label %1845
    i32 113, label %1844
    i32 49, label %1843
    i32 50, label %1842
    i32 51, label %1841
    i32 52, label %1840
    i32 53, label %1839
    i32 54, label %1838
    i32 55, label %1837
    i32 56, label %1836
    i32 57, label %1835
    i32 86, label %1834
    i32 76, label %1834
    i32 118, label %1831
    i32 104, label %.loopexit23
  ]

; <label>:1831:                                   ; preds = %.lr.ph42.10
  %1832 = load i32, i32* @verbosity, align 4
  %1833 = add nsw i32 %1832, 1
  store i32 %1833, i32* @verbosity, align 4
  br label %1852

; <label>:1834:                                   ; preds = %.lr.ph42.10, %.lr.ph42.10
  call void @license()
  br label %1852

; <label>:1835:                                   ; preds = %.lr.ph42.10
  store i32 9, i32* @blockSize100k, align 4
  br label %1852

; <label>:1836:                                   ; preds = %.lr.ph42.10
  store i32 8, i32* @blockSize100k, align 4
  br label %1852

; <label>:1837:                                   ; preds = %.lr.ph42.10
  store i32 7, i32* @blockSize100k, align 4
  br label %1852

; <label>:1838:                                   ; preds = %.lr.ph42.10
  store i32 6, i32* @blockSize100k, align 4
  br label %1852

; <label>:1839:                                   ; preds = %.lr.ph42.10
  store i32 5, i32* @blockSize100k, align 4
  br label %1852

; <label>:1840:                                   ; preds = %.lr.ph42.10
  store i32 4, i32* @blockSize100k, align 4
  br label %1852

; <label>:1841:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @blockSize100k, align 4
  br label %1852

; <label>:1842:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @blockSize100k, align 4
  br label %1852

; <label>:1843:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @blockSize100k, align 4
  br label %1852

; <label>:1844:                                   ; preds = %.lr.ph42.10
  store i8 0, i8* @noisy, align 1
  br label %1852

; <label>:1845:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @smallMode, align 1
  br label %1852

; <label>:1846:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @keepInputFiles, align 1
  br label %1852

; <label>:1847:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @opMode, align 4
  br label %1852

; <label>:1848:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @forceOverwrite, align 1
  br label %1852

; <label>:1849:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @opMode, align 4
  br label %1852

; <label>:1850:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @opMode, align 4
  br label %1852

; <label>:1851:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @srcMode, align 4
  br label %1852

; <label>:1852:                                   ; preds = %1851, %1850, %1849, %1848, %1847, %1846, %1845, %1844, %1843, %1842, %1841, %1840, %1839, %1838, %1837, %1836, %1835, %1834, %1831
  %1853 = load i8*, i8** %1821, align 8
  %scevgep2.10 = getelementptr i8, i8* %1853, i64 2
  %scevgep3.10 = getelementptr i8, i8* %scevgep2.10, i64 %lsr.iv.10
  %1854 = load i8, i8* %scevgep3.10, align 1
  %1855 = sext i8 %1854 to i32
  %1856 = icmp ne i32 %1855, 0
  %lsr.iv.next.10 = add i64 %lsr.iv.10, 1
  br i1 %1856, label %.lr.ph42.10, label %._crit_edge43.loopexit.10

._crit_edge43.loopexit.10:                        ; preds = %1852
  br label %._crit_edge43.10

._crit_edge43.10:                                 ; preds = %._crit_edge43.loopexit.10, %1820, %1813, %1807
  call void @__loop_iteration_test___3()
  %1857 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1801, i32 0, i32 1
  %1858 = load %struct.zzzz*, %struct.zzzz** %1857, align 8
  %1859 = icmp ne %struct.zzzz* %1858, null
  br i1 %1859, label %.lr.ph48.11, label %.loopexit17.loopexit

.lr.ph48.11:                                      ; preds = %._crit_edge43.10
  call void @unroll_loop(i32 3)
  %1860 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1858, i32 0, i32 0
  %1861 = load i8*, i8** %1860, align 8
  %1862 = call i32 @strcmp(i8* %1861, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1863 = icmp eq i32 %1862, 0
  br i1 %1863, label %.loopexit17.loopexit, label %1864

; <label>:1864:                                   ; preds = %.lr.ph48.11
  %1865 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1858, i32 0, i32 0
  %1866 = load i8*, i8** %1865, align 8
  %1867 = load i8, i8* %1866, align 1
  %1868 = sext i8 %1867 to i32
  %1869 = icmp eq i32 %1868, 45
  br i1 %1869, label %1870, label %._crit_edge43.11

; <label>:1870:                                   ; preds = %1864
  %1871 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1858, i32 0, i32 0
  %1872 = load i8*, i8** %1871, align 8
  %1873 = getelementptr inbounds i8, i8* %1872, i64 1
  %1874 = load i8, i8* %1873, align 1
  %1875 = sext i8 %1874 to i32
  %1876 = icmp ne i32 %1875, 45
  br i1 %1876, label %1877, label %._crit_edge43.11

; <label>:1877:                                   ; preds = %1870
  %1878 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1858, i32 0, i32 0
  %1879 = load i8*, i8** %1878, align 8
  %1880 = getelementptr inbounds i8, i8* %1879, i64 1
  %1881 = load i8, i8* %1880, align 1
  %1882 = sext i8 %1881 to i32
  %1883 = icmp ne i32 %1882, 0
  br i1 %1883, label %.lr.ph42.preheader.11, label %._crit_edge43.11

.lr.ph42.preheader.11:                            ; preds = %1877
  %1884 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1858, i32 0, i32 0
  br label %.lr.ph42.11

.lr.ph42.11:                                      ; preds = %1909, %.lr.ph42.preheader.11
  %lsr.iv.11 = phi i64 [ 0, %.lr.ph42.preheader.11 ], [ %lsr.iv.next.11, %1909 ]
  call void @unroll_loop(i32 4)
  %1885 = load i8*, i8** %1884, align 8
  %scevgep.11 = getelementptr i8, i8* %1885, i64 1
  %scevgep1.11 = getelementptr i8, i8* %scevgep.11, i64 %lsr.iv.11
  %1886 = load i8, i8* %scevgep1.11, align 1
  %1887 = sext i8 %1886 to i32
  switch i32 %1887, label %.loopexit24 [
    i32 99, label %1908
    i32 100, label %1907
    i32 122, label %1906
    i32 102, label %1905
    i32 116, label %1904
    i32 107, label %1903
    i32 115, label %1902
    i32 113, label %1901
    i32 49, label %1900
    i32 50, label %1899
    i32 51, label %1898
    i32 52, label %1897
    i32 53, label %1896
    i32 54, label %1895
    i32 55, label %1894
    i32 56, label %1893
    i32 57, label %1892
    i32 86, label %1891
    i32 76, label %1891
    i32 118, label %1888
    i32 104, label %.loopexit25
  ]

; <label>:1888:                                   ; preds = %.lr.ph42.11
  %1889 = load i32, i32* @verbosity, align 4
  %1890 = add nsw i32 %1889, 1
  store i32 %1890, i32* @verbosity, align 4
  br label %1909

; <label>:1891:                                   ; preds = %.lr.ph42.11, %.lr.ph42.11
  call void @license()
  br label %1909

; <label>:1892:                                   ; preds = %.lr.ph42.11
  store i32 9, i32* @blockSize100k, align 4
  br label %1909

; <label>:1893:                                   ; preds = %.lr.ph42.11
  store i32 8, i32* @blockSize100k, align 4
  br label %1909

; <label>:1894:                                   ; preds = %.lr.ph42.11
  store i32 7, i32* @blockSize100k, align 4
  br label %1909

; <label>:1895:                                   ; preds = %.lr.ph42.11
  store i32 6, i32* @blockSize100k, align 4
  br label %1909

; <label>:1896:                                   ; preds = %.lr.ph42.11
  store i32 5, i32* @blockSize100k, align 4
  br label %1909

; <label>:1897:                                   ; preds = %.lr.ph42.11
  store i32 4, i32* @blockSize100k, align 4
  br label %1909

; <label>:1898:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @blockSize100k, align 4
  br label %1909

; <label>:1899:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @blockSize100k, align 4
  br label %1909

; <label>:1900:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @blockSize100k, align 4
  br label %1909

; <label>:1901:                                   ; preds = %.lr.ph42.11
  store i8 0, i8* @noisy, align 1
  br label %1909

; <label>:1902:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @smallMode, align 1
  br label %1909

; <label>:1903:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @keepInputFiles, align 1
  br label %1909

; <label>:1904:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @opMode, align 4
  br label %1909

; <label>:1905:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @forceOverwrite, align 1
  br label %1909

; <label>:1906:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @opMode, align 4
  br label %1909

; <label>:1907:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @opMode, align 4
  br label %1909

; <label>:1908:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @srcMode, align 4
  br label %1909

; <label>:1909:                                   ; preds = %1908, %1907, %1906, %1905, %1904, %1903, %1902, %1901, %1900, %1899, %1898, %1897, %1896, %1895, %1894, %1893, %1892, %1891, %1888
  %1910 = load i8*, i8** %1878, align 8
  %scevgep2.11 = getelementptr i8, i8* %1910, i64 2
  %scevgep3.11 = getelementptr i8, i8* %scevgep2.11, i64 %lsr.iv.11
  %1911 = load i8, i8* %scevgep3.11, align 1
  %1912 = sext i8 %1911 to i32
  %1913 = icmp ne i32 %1912, 0
  %lsr.iv.next.11 = add i64 %lsr.iv.11, 1
  br i1 %1913, label %.lr.ph42.11, label %._crit_edge43.loopexit.11

._crit_edge43.loopexit.11:                        ; preds = %1909
  br label %._crit_edge43.11

._crit_edge43.11:                                 ; preds = %._crit_edge43.loopexit.11, %1877, %1870, %1864
  call void @__loop_iteration_test___3()
  %1914 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1858, i32 0, i32 1
  %1915 = load %struct.zzzz*, %struct.zzzz** %1914, align 8
  %1916 = icmp ne %struct.zzzz* %1915, null
  br i1 %1916, label %.lr.ph48.12, label %.loopexit17.loopexit

.lr.ph48.12:                                      ; preds = %._crit_edge43.11
  call void @unroll_loop(i32 3)
  %1917 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1915, i32 0, i32 0
  %1918 = load i8*, i8** %1917, align 8
  %1919 = call i32 @strcmp(i8* %1918, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1920 = icmp eq i32 %1919, 0
  br i1 %1920, label %.loopexit17.loopexit, label %1921

; <label>:1921:                                   ; preds = %.lr.ph48.12
  %1922 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1915, i32 0, i32 0
  %1923 = load i8*, i8** %1922, align 8
  %1924 = load i8, i8* %1923, align 1
  %1925 = sext i8 %1924 to i32
  %1926 = icmp eq i32 %1925, 45
  br i1 %1926, label %1927, label %._crit_edge43.12

; <label>:1927:                                   ; preds = %1921
  %1928 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1915, i32 0, i32 0
  %1929 = load i8*, i8** %1928, align 8
  %1930 = getelementptr inbounds i8, i8* %1929, i64 1
  %1931 = load i8, i8* %1930, align 1
  %1932 = sext i8 %1931 to i32
  %1933 = icmp ne i32 %1932, 45
  br i1 %1933, label %1934, label %._crit_edge43.12

; <label>:1934:                                   ; preds = %1927
  %1935 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1915, i32 0, i32 0
  %1936 = load i8*, i8** %1935, align 8
  %1937 = getelementptr inbounds i8, i8* %1936, i64 1
  %1938 = load i8, i8* %1937, align 1
  %1939 = sext i8 %1938 to i32
  %1940 = icmp ne i32 %1939, 0
  br i1 %1940, label %.lr.ph42.preheader.12, label %._crit_edge43.12

.lr.ph42.preheader.12:                            ; preds = %1934
  %1941 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1915, i32 0, i32 0
  br label %.lr.ph42.12

.lr.ph42.12:                                      ; preds = %1966, %.lr.ph42.preheader.12
  %lsr.iv.12 = phi i64 [ 0, %.lr.ph42.preheader.12 ], [ %lsr.iv.next.12, %1966 ]
  call void @unroll_loop(i32 4)
  %1942 = load i8*, i8** %1941, align 8
  %scevgep.12 = getelementptr i8, i8* %1942, i64 1
  %scevgep1.12 = getelementptr i8, i8* %scevgep.12, i64 %lsr.iv.12
  %1943 = load i8, i8* %scevgep1.12, align 1
  %1944 = sext i8 %1943 to i32
  switch i32 %1944, label %.loopexit26 [
    i32 99, label %1965
    i32 100, label %1964
    i32 122, label %1963
    i32 102, label %1962
    i32 116, label %1961
    i32 107, label %1960
    i32 115, label %1959
    i32 113, label %1958
    i32 49, label %1957
    i32 50, label %1956
    i32 51, label %1955
    i32 52, label %1954
    i32 53, label %1953
    i32 54, label %1952
    i32 55, label %1951
    i32 56, label %1950
    i32 57, label %1949
    i32 86, label %1948
    i32 76, label %1948
    i32 118, label %1945
    i32 104, label %.loopexit27
  ]

; <label>:1945:                                   ; preds = %.lr.ph42.12
  %1946 = load i32, i32* @verbosity, align 4
  %1947 = add nsw i32 %1946, 1
  store i32 %1947, i32* @verbosity, align 4
  br label %1966

; <label>:1948:                                   ; preds = %.lr.ph42.12, %.lr.ph42.12
  call void @license()
  br label %1966

; <label>:1949:                                   ; preds = %.lr.ph42.12
  store i32 9, i32* @blockSize100k, align 4
  br label %1966

; <label>:1950:                                   ; preds = %.lr.ph42.12
  store i32 8, i32* @blockSize100k, align 4
  br label %1966

; <label>:1951:                                   ; preds = %.lr.ph42.12
  store i32 7, i32* @blockSize100k, align 4
  br label %1966

; <label>:1952:                                   ; preds = %.lr.ph42.12
  store i32 6, i32* @blockSize100k, align 4
  br label %1966

; <label>:1953:                                   ; preds = %.lr.ph42.12
  store i32 5, i32* @blockSize100k, align 4
  br label %1966

; <label>:1954:                                   ; preds = %.lr.ph42.12
  store i32 4, i32* @blockSize100k, align 4
  br label %1966

; <label>:1955:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @blockSize100k, align 4
  br label %1966

; <label>:1956:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @blockSize100k, align 4
  br label %1966

; <label>:1957:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @blockSize100k, align 4
  br label %1966

; <label>:1958:                                   ; preds = %.lr.ph42.12
  store i8 0, i8* @noisy, align 1
  br label %1966

; <label>:1959:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @smallMode, align 1
  br label %1966

; <label>:1960:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @keepInputFiles, align 1
  br label %1966

; <label>:1961:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @opMode, align 4
  br label %1966

; <label>:1962:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @forceOverwrite, align 1
  br label %1966

; <label>:1963:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @opMode, align 4
  br label %1966

; <label>:1964:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @opMode, align 4
  br label %1966

; <label>:1965:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @srcMode, align 4
  br label %1966

; <label>:1966:                                   ; preds = %1965, %1964, %1963, %1962, %1961, %1960, %1959, %1958, %1957, %1956, %1955, %1954, %1953, %1952, %1951, %1950, %1949, %1948, %1945
  %1967 = load i8*, i8** %1935, align 8
  %scevgep2.12 = getelementptr i8, i8* %1967, i64 2
  %scevgep3.12 = getelementptr i8, i8* %scevgep2.12, i64 %lsr.iv.12
  %1968 = load i8, i8* %scevgep3.12, align 1
  %1969 = sext i8 %1968 to i32
  %1970 = icmp ne i32 %1969, 0
  %lsr.iv.next.12 = add i64 %lsr.iv.12, 1
  br i1 %1970, label %.lr.ph42.12, label %._crit_edge43.loopexit.12

._crit_edge43.loopexit.12:                        ; preds = %1966
  br label %._crit_edge43.12

._crit_edge43.12:                                 ; preds = %._crit_edge43.loopexit.12, %1934, %1927, %1921
  call void @__loop_iteration_test___3()
  %1971 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1915, i32 0, i32 1
  %1972 = load %struct.zzzz*, %struct.zzzz** %1971, align 8
  %1973 = icmp ne %struct.zzzz* %1972, null
  br i1 %1973, label %.lr.ph48.13, label %.loopexit17.loopexit

.lr.ph48.13:                                      ; preds = %._crit_edge43.12
  call void @unroll_loop(i32 3)
  %1974 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1972, i32 0, i32 0
  %1975 = load i8*, i8** %1974, align 8
  %1976 = call i32 @strcmp(i8* %1975, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1977 = icmp eq i32 %1976, 0
  br i1 %1977, label %.loopexit17.loopexit, label %1978

; <label>:1978:                                   ; preds = %.lr.ph48.13
  %1979 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1972, i32 0, i32 0
  %1980 = load i8*, i8** %1979, align 8
  %1981 = load i8, i8* %1980, align 1
  %1982 = sext i8 %1981 to i32
  %1983 = icmp eq i32 %1982, 45
  br i1 %1983, label %1984, label %._crit_edge43.13

; <label>:1984:                                   ; preds = %1978
  %1985 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1972, i32 0, i32 0
  %1986 = load i8*, i8** %1985, align 8
  %1987 = getelementptr inbounds i8, i8* %1986, i64 1
  %1988 = load i8, i8* %1987, align 1
  %1989 = sext i8 %1988 to i32
  %1990 = icmp ne i32 %1989, 45
  br i1 %1990, label %1991, label %._crit_edge43.13

; <label>:1991:                                   ; preds = %1984
  %1992 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1972, i32 0, i32 0
  %1993 = load i8*, i8** %1992, align 8
  %1994 = getelementptr inbounds i8, i8* %1993, i64 1
  %1995 = load i8, i8* %1994, align 1
  %1996 = sext i8 %1995 to i32
  %1997 = icmp ne i32 %1996, 0
  br i1 %1997, label %.lr.ph42.preheader.13, label %._crit_edge43.13

.lr.ph42.preheader.13:                            ; preds = %1991
  %1998 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1972, i32 0, i32 0
  br label %.lr.ph42.13

.lr.ph42.13:                                      ; preds = %2023, %.lr.ph42.preheader.13
  %lsr.iv.13 = phi i64 [ 0, %.lr.ph42.preheader.13 ], [ %lsr.iv.next.13, %2023 ]
  call void @unroll_loop(i32 4)
  %1999 = load i8*, i8** %1998, align 8
  %scevgep.13 = getelementptr i8, i8* %1999, i64 1
  %scevgep1.13 = getelementptr i8, i8* %scevgep.13, i64 %lsr.iv.13
  %2000 = load i8, i8* %scevgep1.13, align 1
  %2001 = sext i8 %2000 to i32
  switch i32 %2001, label %.loopexit28 [
    i32 99, label %2022
    i32 100, label %2021
    i32 122, label %2020
    i32 102, label %2019
    i32 116, label %2018
    i32 107, label %2017
    i32 115, label %2016
    i32 113, label %2015
    i32 49, label %2014
    i32 50, label %2013
    i32 51, label %2012
    i32 52, label %2011
    i32 53, label %2010
    i32 54, label %2009
    i32 55, label %2008
    i32 56, label %2007
    i32 57, label %2006
    i32 86, label %2005
    i32 76, label %2005
    i32 118, label %2002
    i32 104, label %.loopexit29
  ]

; <label>:2002:                                   ; preds = %.lr.ph42.13
  %2003 = load i32, i32* @verbosity, align 4
  %2004 = add nsw i32 %2003, 1
  store i32 %2004, i32* @verbosity, align 4
  br label %2023

; <label>:2005:                                   ; preds = %.lr.ph42.13, %.lr.ph42.13
  call void @license()
  br label %2023

; <label>:2006:                                   ; preds = %.lr.ph42.13
  store i32 9, i32* @blockSize100k, align 4
  br label %2023

; <label>:2007:                                   ; preds = %.lr.ph42.13
  store i32 8, i32* @blockSize100k, align 4
  br label %2023

; <label>:2008:                                   ; preds = %.lr.ph42.13
  store i32 7, i32* @blockSize100k, align 4
  br label %2023

; <label>:2009:                                   ; preds = %.lr.ph42.13
  store i32 6, i32* @blockSize100k, align 4
  br label %2023

; <label>:2010:                                   ; preds = %.lr.ph42.13
  store i32 5, i32* @blockSize100k, align 4
  br label %2023

; <label>:2011:                                   ; preds = %.lr.ph42.13
  store i32 4, i32* @blockSize100k, align 4
  br label %2023

; <label>:2012:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @blockSize100k, align 4
  br label %2023

; <label>:2013:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @blockSize100k, align 4
  br label %2023

; <label>:2014:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @blockSize100k, align 4
  br label %2023

; <label>:2015:                                   ; preds = %.lr.ph42.13
  store i8 0, i8* @noisy, align 1
  br label %2023

; <label>:2016:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @smallMode, align 1
  br label %2023

; <label>:2017:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @keepInputFiles, align 1
  br label %2023

; <label>:2018:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @opMode, align 4
  br label %2023

; <label>:2019:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @forceOverwrite, align 1
  br label %2023

; <label>:2020:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @opMode, align 4
  br label %2023

; <label>:2021:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @opMode, align 4
  br label %2023

; <label>:2022:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @srcMode, align 4
  br label %2023

; <label>:2023:                                   ; preds = %2022, %2021, %2020, %2019, %2018, %2017, %2016, %2015, %2014, %2013, %2012, %2011, %2010, %2009, %2008, %2007, %2006, %2005, %2002
  %2024 = load i8*, i8** %1992, align 8
  %scevgep2.13 = getelementptr i8, i8* %2024, i64 2
  %scevgep3.13 = getelementptr i8, i8* %scevgep2.13, i64 %lsr.iv.13
  %2025 = load i8, i8* %scevgep3.13, align 1
  %2026 = sext i8 %2025 to i32
  %2027 = icmp ne i32 %2026, 0
  %lsr.iv.next.13 = add i64 %lsr.iv.13, 1
  br i1 %2027, label %.lr.ph42.13, label %._crit_edge43.loopexit.13

._crit_edge43.loopexit.13:                        ; preds = %2023
  br label %._crit_edge43.13

._crit_edge43.13:                                 ; preds = %._crit_edge43.loopexit.13, %1991, %1984, %1978
  call void @__loop_iteration_test___3()
  %2028 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1972, i32 0, i32 1
  %2029 = load %struct.zzzz*, %struct.zzzz** %2028, align 8
  %2030 = icmp ne %struct.zzzz* %2029, null
  br i1 %2030, label %.lr.ph48.14, label %.loopexit17.loopexit

.lr.ph48.14:                                      ; preds = %._crit_edge43.13
  call void @unroll_loop(i32 3)
  %2031 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2029, i32 0, i32 0
  %2032 = load i8*, i8** %2031, align 8
  %2033 = call i32 @strcmp(i8* %2032, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2034 = icmp eq i32 %2033, 0
  br i1 %2034, label %.loopexit17.loopexit, label %2035

; <label>:2035:                                   ; preds = %.lr.ph48.14
  %2036 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2029, i32 0, i32 0
  %2037 = load i8*, i8** %2036, align 8
  %2038 = load i8, i8* %2037, align 1
  %2039 = sext i8 %2038 to i32
  %2040 = icmp eq i32 %2039, 45
  br i1 %2040, label %2041, label %._crit_edge43.14

; <label>:2041:                                   ; preds = %2035
  %2042 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2029, i32 0, i32 0
  %2043 = load i8*, i8** %2042, align 8
  %2044 = getelementptr inbounds i8, i8* %2043, i64 1
  %2045 = load i8, i8* %2044, align 1
  %2046 = sext i8 %2045 to i32
  %2047 = icmp ne i32 %2046, 45
  br i1 %2047, label %2048, label %._crit_edge43.14

; <label>:2048:                                   ; preds = %2041
  %2049 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2029, i32 0, i32 0
  %2050 = load i8*, i8** %2049, align 8
  %2051 = getelementptr inbounds i8, i8* %2050, i64 1
  %2052 = load i8, i8* %2051, align 1
  %2053 = sext i8 %2052 to i32
  %2054 = icmp ne i32 %2053, 0
  br i1 %2054, label %.lr.ph42.preheader.14, label %._crit_edge43.14

.lr.ph42.preheader.14:                            ; preds = %2048
  %2055 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2029, i32 0, i32 0
  br label %.lr.ph42.14

.lr.ph42.14:                                      ; preds = %2080, %.lr.ph42.preheader.14
  %lsr.iv.14 = phi i64 [ 0, %.lr.ph42.preheader.14 ], [ %lsr.iv.next.14, %2080 ]
  call void @unroll_loop(i32 4)
  %2056 = load i8*, i8** %2055, align 8
  %scevgep.14 = getelementptr i8, i8* %2056, i64 1
  %scevgep1.14 = getelementptr i8, i8* %scevgep.14, i64 %lsr.iv.14
  %2057 = load i8, i8* %scevgep1.14, align 1
  %2058 = sext i8 %2057 to i32
  switch i32 %2058, label %.loopexit30 [
    i32 99, label %2079
    i32 100, label %2078
    i32 122, label %2077
    i32 102, label %2076
    i32 116, label %2075
    i32 107, label %2074
    i32 115, label %2073
    i32 113, label %2072
    i32 49, label %2071
    i32 50, label %2070
    i32 51, label %2069
    i32 52, label %2068
    i32 53, label %2067
    i32 54, label %2066
    i32 55, label %2065
    i32 56, label %2064
    i32 57, label %2063
    i32 86, label %2062
    i32 76, label %2062
    i32 118, label %2059
    i32 104, label %.loopexit31
  ]

; <label>:2059:                                   ; preds = %.lr.ph42.14
  %2060 = load i32, i32* @verbosity, align 4
  %2061 = add nsw i32 %2060, 1
  store i32 %2061, i32* @verbosity, align 4
  br label %2080

; <label>:2062:                                   ; preds = %.lr.ph42.14, %.lr.ph42.14
  call void @license()
  br label %2080

; <label>:2063:                                   ; preds = %.lr.ph42.14
  store i32 9, i32* @blockSize100k, align 4
  br label %2080

; <label>:2064:                                   ; preds = %.lr.ph42.14
  store i32 8, i32* @blockSize100k, align 4
  br label %2080

; <label>:2065:                                   ; preds = %.lr.ph42.14
  store i32 7, i32* @blockSize100k, align 4
  br label %2080

; <label>:2066:                                   ; preds = %.lr.ph42.14
  store i32 6, i32* @blockSize100k, align 4
  br label %2080

; <label>:2067:                                   ; preds = %.lr.ph42.14
  store i32 5, i32* @blockSize100k, align 4
  br label %2080

; <label>:2068:                                   ; preds = %.lr.ph42.14
  store i32 4, i32* @blockSize100k, align 4
  br label %2080

; <label>:2069:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @blockSize100k, align 4
  br label %2080

; <label>:2070:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @blockSize100k, align 4
  br label %2080

; <label>:2071:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @blockSize100k, align 4
  br label %2080

; <label>:2072:                                   ; preds = %.lr.ph42.14
  store i8 0, i8* @noisy, align 1
  br label %2080

; <label>:2073:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @smallMode, align 1
  br label %2080

; <label>:2074:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @keepInputFiles, align 1
  br label %2080

; <label>:2075:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @opMode, align 4
  br label %2080

; <label>:2076:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @forceOverwrite, align 1
  br label %2080

; <label>:2077:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @opMode, align 4
  br label %2080

; <label>:2078:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @opMode, align 4
  br label %2080

; <label>:2079:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @srcMode, align 4
  br label %2080

; <label>:2080:                                   ; preds = %2079, %2078, %2077, %2076, %2075, %2074, %2073, %2072, %2071, %2070, %2069, %2068, %2067, %2066, %2065, %2064, %2063, %2062, %2059
  %2081 = load i8*, i8** %2049, align 8
  %scevgep2.14 = getelementptr i8, i8* %2081, i64 2
  %scevgep3.14 = getelementptr i8, i8* %scevgep2.14, i64 %lsr.iv.14
  %2082 = load i8, i8* %scevgep3.14, align 1
  %2083 = sext i8 %2082 to i32
  %2084 = icmp ne i32 %2083, 0
  %lsr.iv.next.14 = add i64 %lsr.iv.14, 1
  br i1 %2084, label %.lr.ph42.14, label %._crit_edge43.loopexit.14

._crit_edge43.loopexit.14:                        ; preds = %2080
  br label %._crit_edge43.14

._crit_edge43.14:                                 ; preds = %._crit_edge43.loopexit.14, %2048, %2041, %2035
  call void @__loop_iteration_test___3()
  %2085 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2029, i32 0, i32 1
  %2086 = load %struct.zzzz*, %struct.zzzz** %2085, align 8
  %2087 = icmp ne %struct.zzzz* %2086, null
  br i1 %2087, label %.lr.ph48.15, label %.loopexit17.loopexit

.lr.ph48.15:                                      ; preds = %._crit_edge43.14
  call void @unroll_loop(i32 3)
  %2088 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2086, i32 0, i32 0
  %2089 = load i8*, i8** %2088, align 8
  %2090 = call i32 @strcmp(i8* %2089, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2091 = icmp eq i32 %2090, 0
  br i1 %2091, label %.loopexit17.loopexit, label %2092

; <label>:2092:                                   ; preds = %.lr.ph48.15
  %2093 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2086, i32 0, i32 0
  %2094 = load i8*, i8** %2093, align 8
  %2095 = load i8, i8* %2094, align 1
  %2096 = sext i8 %2095 to i32
  %2097 = icmp eq i32 %2096, 45
  br i1 %2097, label %2098, label %._crit_edge43.15

; <label>:2098:                                   ; preds = %2092
  %2099 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2086, i32 0, i32 0
  %2100 = load i8*, i8** %2099, align 8
  %2101 = getelementptr inbounds i8, i8* %2100, i64 1
  %2102 = load i8, i8* %2101, align 1
  %2103 = sext i8 %2102 to i32
  %2104 = icmp ne i32 %2103, 45
  br i1 %2104, label %2105, label %._crit_edge43.15

; <label>:2105:                                   ; preds = %2098
  %2106 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2086, i32 0, i32 0
  %2107 = load i8*, i8** %2106, align 8
  %2108 = getelementptr inbounds i8, i8* %2107, i64 1
  %2109 = load i8, i8* %2108, align 1
  %2110 = sext i8 %2109 to i32
  %2111 = icmp ne i32 %2110, 0
  br i1 %2111, label %.lr.ph42.preheader.15, label %._crit_edge43.15

.lr.ph42.preheader.15:                            ; preds = %2105
  %2112 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2086, i32 0, i32 0
  br label %.lr.ph42.15

.lr.ph42.15:                                      ; preds = %2137, %.lr.ph42.preheader.15
  %lsr.iv.15 = phi i64 [ 0, %.lr.ph42.preheader.15 ], [ %lsr.iv.next.15, %2137 ]
  call void @unroll_loop(i32 4)
  %2113 = load i8*, i8** %2112, align 8
  %scevgep.15 = getelementptr i8, i8* %2113, i64 1
  %scevgep1.15 = getelementptr i8, i8* %scevgep.15, i64 %lsr.iv.15
  %2114 = load i8, i8* %scevgep1.15, align 1
  %2115 = sext i8 %2114 to i32
  switch i32 %2115, label %.loopexit32 [
    i32 99, label %2136
    i32 100, label %2135
    i32 122, label %2134
    i32 102, label %2133
    i32 116, label %2132
    i32 107, label %2131
    i32 115, label %2130
    i32 113, label %2129
    i32 49, label %2128
    i32 50, label %2127
    i32 51, label %2126
    i32 52, label %2125
    i32 53, label %2124
    i32 54, label %2123
    i32 55, label %2122
    i32 56, label %2121
    i32 57, label %2120
    i32 86, label %2119
    i32 76, label %2119
    i32 118, label %2116
    i32 104, label %.loopexit33
  ]

; <label>:2116:                                   ; preds = %.lr.ph42.15
  %2117 = load i32, i32* @verbosity, align 4
  %2118 = add nsw i32 %2117, 1
  store i32 %2118, i32* @verbosity, align 4
  br label %2137

; <label>:2119:                                   ; preds = %.lr.ph42.15, %.lr.ph42.15
  call void @license()
  br label %2137

; <label>:2120:                                   ; preds = %.lr.ph42.15
  store i32 9, i32* @blockSize100k, align 4
  br label %2137

; <label>:2121:                                   ; preds = %.lr.ph42.15
  store i32 8, i32* @blockSize100k, align 4
  br label %2137

; <label>:2122:                                   ; preds = %.lr.ph42.15
  store i32 7, i32* @blockSize100k, align 4
  br label %2137

; <label>:2123:                                   ; preds = %.lr.ph42.15
  store i32 6, i32* @blockSize100k, align 4
  br label %2137

; <label>:2124:                                   ; preds = %.lr.ph42.15
  store i32 5, i32* @blockSize100k, align 4
  br label %2137

; <label>:2125:                                   ; preds = %.lr.ph42.15
  store i32 4, i32* @blockSize100k, align 4
  br label %2137

; <label>:2126:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @blockSize100k, align 4
  br label %2137

; <label>:2127:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @blockSize100k, align 4
  br label %2137

; <label>:2128:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @blockSize100k, align 4
  br label %2137

; <label>:2129:                                   ; preds = %.lr.ph42.15
  store i8 0, i8* @noisy, align 1
  br label %2137

; <label>:2130:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @smallMode, align 1
  br label %2137

; <label>:2131:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @keepInputFiles, align 1
  br label %2137

; <label>:2132:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @opMode, align 4
  br label %2137

; <label>:2133:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @forceOverwrite, align 1
  br label %2137

; <label>:2134:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @opMode, align 4
  br label %2137

; <label>:2135:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @opMode, align 4
  br label %2137

; <label>:2136:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @srcMode, align 4
  br label %2137

; <label>:2137:                                   ; preds = %2136, %2135, %2134, %2133, %2132, %2131, %2130, %2129, %2128, %2127, %2126, %2125, %2124, %2123, %2122, %2121, %2120, %2119, %2116
  %2138 = load i8*, i8** %2106, align 8
  %scevgep2.15 = getelementptr i8, i8* %2138, i64 2
  %scevgep3.15 = getelementptr i8, i8* %scevgep2.15, i64 %lsr.iv.15
  %2139 = load i8, i8* %scevgep3.15, align 1
  %2140 = sext i8 %2139 to i32
  %2141 = icmp ne i32 %2140, 0
  %lsr.iv.next.15 = add i64 %lsr.iv.15, 1
  br i1 %2141, label %.lr.ph42.15, label %._crit_edge43.loopexit.15

._crit_edge43.loopexit.15:                        ; preds = %2137
  br label %._crit_edge43.15

._crit_edge43.15:                                 ; preds = %._crit_edge43.loopexit.15, %2105, %2098, %2092
  call void @__loop_iteration_test___3()
  %2142 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2086, i32 0, i32 1
  %2143 = load %struct.zzzz*, %struct.zzzz** %2142, align 8
  %2144 = icmp ne %struct.zzzz* %2143, null
  br i1 %2144, label %.lr.ph48.16, label %.loopexit17.loopexit

.lr.ph48.16:                                      ; preds = %._crit_edge43.15
  call void @unroll_loop(i32 3)
  %2145 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2143, i32 0, i32 0
  %2146 = load i8*, i8** %2145, align 8
  %2147 = call i32 @strcmp(i8* %2146, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2148 = icmp eq i32 %2147, 0
  br i1 %2148, label %.loopexit17.loopexit, label %2149

; <label>:2149:                                   ; preds = %.lr.ph48.16
  %2150 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2143, i32 0, i32 0
  %2151 = load i8*, i8** %2150, align 8
  %2152 = load i8, i8* %2151, align 1
  %2153 = sext i8 %2152 to i32
  %2154 = icmp eq i32 %2153, 45
  br i1 %2154, label %2155, label %._crit_edge43.16

; <label>:2155:                                   ; preds = %2149
  %2156 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2143, i32 0, i32 0
  %2157 = load i8*, i8** %2156, align 8
  %2158 = getelementptr inbounds i8, i8* %2157, i64 1
  %2159 = load i8, i8* %2158, align 1
  %2160 = sext i8 %2159 to i32
  %2161 = icmp ne i32 %2160, 45
  br i1 %2161, label %2162, label %._crit_edge43.16

; <label>:2162:                                   ; preds = %2155
  %2163 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2143, i32 0, i32 0
  %2164 = load i8*, i8** %2163, align 8
  %2165 = getelementptr inbounds i8, i8* %2164, i64 1
  %2166 = load i8, i8* %2165, align 1
  %2167 = sext i8 %2166 to i32
  %2168 = icmp ne i32 %2167, 0
  br i1 %2168, label %.lr.ph42.preheader.16, label %._crit_edge43.16

.lr.ph42.preheader.16:                            ; preds = %2162
  %2169 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2143, i32 0, i32 0
  br label %.lr.ph42.16

.lr.ph42.16:                                      ; preds = %2194, %.lr.ph42.preheader.16
  %lsr.iv.16 = phi i64 [ 0, %.lr.ph42.preheader.16 ], [ %lsr.iv.next.16, %2194 ]
  call void @unroll_loop(i32 4)
  %2170 = load i8*, i8** %2169, align 8
  %scevgep.16 = getelementptr i8, i8* %2170, i64 1
  %scevgep1.16 = getelementptr i8, i8* %scevgep.16, i64 %lsr.iv.16
  %2171 = load i8, i8* %scevgep1.16, align 1
  %2172 = sext i8 %2171 to i32
  switch i32 %2172, label %.loopexit34 [
    i32 99, label %2193
    i32 100, label %2192
    i32 122, label %2191
    i32 102, label %2190
    i32 116, label %2189
    i32 107, label %2188
    i32 115, label %2187
    i32 113, label %2186
    i32 49, label %2185
    i32 50, label %2184
    i32 51, label %2183
    i32 52, label %2182
    i32 53, label %2181
    i32 54, label %2180
    i32 55, label %2179
    i32 56, label %2178
    i32 57, label %2177
    i32 86, label %2176
    i32 76, label %2176
    i32 118, label %2173
    i32 104, label %.loopexit35
  ]

; <label>:2173:                                   ; preds = %.lr.ph42.16
  %2174 = load i32, i32* @verbosity, align 4
  %2175 = add nsw i32 %2174, 1
  store i32 %2175, i32* @verbosity, align 4
  br label %2194

; <label>:2176:                                   ; preds = %.lr.ph42.16, %.lr.ph42.16
  call void @license()
  br label %2194

; <label>:2177:                                   ; preds = %.lr.ph42.16
  store i32 9, i32* @blockSize100k, align 4
  br label %2194

; <label>:2178:                                   ; preds = %.lr.ph42.16
  store i32 8, i32* @blockSize100k, align 4
  br label %2194

; <label>:2179:                                   ; preds = %.lr.ph42.16
  store i32 7, i32* @blockSize100k, align 4
  br label %2194

; <label>:2180:                                   ; preds = %.lr.ph42.16
  store i32 6, i32* @blockSize100k, align 4
  br label %2194

; <label>:2181:                                   ; preds = %.lr.ph42.16
  store i32 5, i32* @blockSize100k, align 4
  br label %2194

; <label>:2182:                                   ; preds = %.lr.ph42.16
  store i32 4, i32* @blockSize100k, align 4
  br label %2194

; <label>:2183:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @blockSize100k, align 4
  br label %2194

; <label>:2184:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @blockSize100k, align 4
  br label %2194

; <label>:2185:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @blockSize100k, align 4
  br label %2194

; <label>:2186:                                   ; preds = %.lr.ph42.16
  store i8 0, i8* @noisy, align 1
  br label %2194

; <label>:2187:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @smallMode, align 1
  br label %2194

; <label>:2188:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @keepInputFiles, align 1
  br label %2194

; <label>:2189:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @opMode, align 4
  br label %2194

; <label>:2190:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @forceOverwrite, align 1
  br label %2194

; <label>:2191:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @opMode, align 4
  br label %2194

; <label>:2192:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @opMode, align 4
  br label %2194

; <label>:2193:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @srcMode, align 4
  br label %2194

; <label>:2194:                                   ; preds = %2193, %2192, %2191, %2190, %2189, %2188, %2187, %2186, %2185, %2184, %2183, %2182, %2181, %2180, %2179, %2178, %2177, %2176, %2173
  %2195 = load i8*, i8** %2163, align 8
  %scevgep2.16 = getelementptr i8, i8* %2195, i64 2
  %scevgep3.16 = getelementptr i8, i8* %scevgep2.16, i64 %lsr.iv.16
  %2196 = load i8, i8* %scevgep3.16, align 1
  %2197 = sext i8 %2196 to i32
  %2198 = icmp ne i32 %2197, 0
  %lsr.iv.next.16 = add i64 %lsr.iv.16, 1
  br i1 %2198, label %.lr.ph42.16, label %._crit_edge43.loopexit.16

._crit_edge43.loopexit.16:                        ; preds = %2194
  br label %._crit_edge43.16

._crit_edge43.16:                                 ; preds = %._crit_edge43.loopexit.16, %2162, %2155, %2149
  call void @__loop_iteration_test___3()
  %2199 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2143, i32 0, i32 1
  %2200 = load %struct.zzzz*, %struct.zzzz** %2199, align 8
  %2201 = icmp ne %struct.zzzz* %2200, null
  br i1 %2201, label %.lr.ph48.17, label %.loopexit17.loopexit

.lr.ph48.17:                                      ; preds = %._crit_edge43.16
  call void @unroll_loop(i32 3)
  %2202 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2200, i32 0, i32 0
  %2203 = load i8*, i8** %2202, align 8
  %2204 = call i32 @strcmp(i8* %2203, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2205 = icmp eq i32 %2204, 0
  br i1 %2205, label %.loopexit17.loopexit, label %2206

; <label>:2206:                                   ; preds = %.lr.ph48.17
  %2207 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2200, i32 0, i32 0
  %2208 = load i8*, i8** %2207, align 8
  %2209 = load i8, i8* %2208, align 1
  %2210 = sext i8 %2209 to i32
  %2211 = icmp eq i32 %2210, 45
  br i1 %2211, label %2212, label %._crit_edge43.17

; <label>:2212:                                   ; preds = %2206
  %2213 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2200, i32 0, i32 0
  %2214 = load i8*, i8** %2213, align 8
  %2215 = getelementptr inbounds i8, i8* %2214, i64 1
  %2216 = load i8, i8* %2215, align 1
  %2217 = sext i8 %2216 to i32
  %2218 = icmp ne i32 %2217, 45
  br i1 %2218, label %2219, label %._crit_edge43.17

; <label>:2219:                                   ; preds = %2212
  %2220 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2200, i32 0, i32 0
  %2221 = load i8*, i8** %2220, align 8
  %2222 = getelementptr inbounds i8, i8* %2221, i64 1
  %2223 = load i8, i8* %2222, align 1
  %2224 = sext i8 %2223 to i32
  %2225 = icmp ne i32 %2224, 0
  br i1 %2225, label %.lr.ph42.preheader.17, label %._crit_edge43.17

.lr.ph42.preheader.17:                            ; preds = %2219
  %2226 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2200, i32 0, i32 0
  br label %.lr.ph42.17

.lr.ph42.17:                                      ; preds = %2251, %.lr.ph42.preheader.17
  %lsr.iv.17 = phi i64 [ 0, %.lr.ph42.preheader.17 ], [ %lsr.iv.next.17, %2251 ]
  call void @unroll_loop(i32 4)
  %2227 = load i8*, i8** %2226, align 8
  %scevgep.17 = getelementptr i8, i8* %2227, i64 1
  %scevgep1.17 = getelementptr i8, i8* %scevgep.17, i64 %lsr.iv.17
  %2228 = load i8, i8* %scevgep1.17, align 1
  %2229 = sext i8 %2228 to i32
  switch i32 %2229, label %.loopexit36 [
    i32 99, label %2250
    i32 100, label %2249
    i32 122, label %2248
    i32 102, label %2247
    i32 116, label %2246
    i32 107, label %2245
    i32 115, label %2244
    i32 113, label %2243
    i32 49, label %2242
    i32 50, label %2241
    i32 51, label %2240
    i32 52, label %2239
    i32 53, label %2238
    i32 54, label %2237
    i32 55, label %2236
    i32 56, label %2235
    i32 57, label %2234
    i32 86, label %2233
    i32 76, label %2233
    i32 118, label %2230
    i32 104, label %.loopexit37
  ]

; <label>:2230:                                   ; preds = %.lr.ph42.17
  %2231 = load i32, i32* @verbosity, align 4
  %2232 = add nsw i32 %2231, 1
  store i32 %2232, i32* @verbosity, align 4
  br label %2251

; <label>:2233:                                   ; preds = %.lr.ph42.17, %.lr.ph42.17
  call void @license()
  br label %2251

; <label>:2234:                                   ; preds = %.lr.ph42.17
  store i32 9, i32* @blockSize100k, align 4
  br label %2251

; <label>:2235:                                   ; preds = %.lr.ph42.17
  store i32 8, i32* @blockSize100k, align 4
  br label %2251

; <label>:2236:                                   ; preds = %.lr.ph42.17
  store i32 7, i32* @blockSize100k, align 4
  br label %2251

; <label>:2237:                                   ; preds = %.lr.ph42.17
  store i32 6, i32* @blockSize100k, align 4
  br label %2251

; <label>:2238:                                   ; preds = %.lr.ph42.17
  store i32 5, i32* @blockSize100k, align 4
  br label %2251

; <label>:2239:                                   ; preds = %.lr.ph42.17
  store i32 4, i32* @blockSize100k, align 4
  br label %2251

; <label>:2240:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @blockSize100k, align 4
  br label %2251

; <label>:2241:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @blockSize100k, align 4
  br label %2251

; <label>:2242:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @blockSize100k, align 4
  br label %2251

; <label>:2243:                                   ; preds = %.lr.ph42.17
  store i8 0, i8* @noisy, align 1
  br label %2251

; <label>:2244:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @smallMode, align 1
  br label %2251

; <label>:2245:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @keepInputFiles, align 1
  br label %2251

; <label>:2246:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @opMode, align 4
  br label %2251

; <label>:2247:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @forceOverwrite, align 1
  br label %2251

; <label>:2248:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @opMode, align 4
  br label %2251

; <label>:2249:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @opMode, align 4
  br label %2251

; <label>:2250:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @srcMode, align 4
  br label %2251

; <label>:2251:                                   ; preds = %2250, %2249, %2248, %2247, %2246, %2245, %2244, %2243, %2242, %2241, %2240, %2239, %2238, %2237, %2236, %2235, %2234, %2233, %2230
  %2252 = load i8*, i8** %2220, align 8
  %scevgep2.17 = getelementptr i8, i8* %2252, i64 2
  %scevgep3.17 = getelementptr i8, i8* %scevgep2.17, i64 %lsr.iv.17
  %2253 = load i8, i8* %scevgep3.17, align 1
  %2254 = sext i8 %2253 to i32
  %2255 = icmp ne i32 %2254, 0
  %lsr.iv.next.17 = add i64 %lsr.iv.17, 1
  br i1 %2255, label %.lr.ph42.17, label %._crit_edge43.loopexit.17

._crit_edge43.loopexit.17:                        ; preds = %2251
  br label %._crit_edge43.17

._crit_edge43.17:                                 ; preds = %._crit_edge43.loopexit.17, %2219, %2212, %2206
  call void @__loop_iteration_test___3()
  %2256 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2200, i32 0, i32 1
  %2257 = load %struct.zzzz*, %struct.zzzz** %2256, align 8
  %2258 = icmp ne %struct.zzzz* %2257, null
  br i1 %2258, label %.lr.ph48.18, label %.loopexit17.loopexit

.lr.ph48.18:                                      ; preds = %._crit_edge43.17
  call void @unroll_loop(i32 3)
  %2259 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2257, i32 0, i32 0
  %2260 = load i8*, i8** %2259, align 8
  %2261 = call i32 @strcmp(i8* %2260, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2262 = icmp eq i32 %2261, 0
  br i1 %2262, label %.loopexit17.loopexit, label %2263

; <label>:2263:                                   ; preds = %.lr.ph48.18
  %2264 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2257, i32 0, i32 0
  %2265 = load i8*, i8** %2264, align 8
  %2266 = load i8, i8* %2265, align 1
  %2267 = sext i8 %2266 to i32
  %2268 = icmp eq i32 %2267, 45
  br i1 %2268, label %2269, label %._crit_edge43.18

; <label>:2269:                                   ; preds = %2263
  %2270 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2257, i32 0, i32 0
  %2271 = load i8*, i8** %2270, align 8
  %2272 = getelementptr inbounds i8, i8* %2271, i64 1
  %2273 = load i8, i8* %2272, align 1
  %2274 = sext i8 %2273 to i32
  %2275 = icmp ne i32 %2274, 45
  br i1 %2275, label %2276, label %._crit_edge43.18

; <label>:2276:                                   ; preds = %2269
  %2277 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2257, i32 0, i32 0
  %2278 = load i8*, i8** %2277, align 8
  %2279 = getelementptr inbounds i8, i8* %2278, i64 1
  %2280 = load i8, i8* %2279, align 1
  %2281 = sext i8 %2280 to i32
  %2282 = icmp ne i32 %2281, 0
  br i1 %2282, label %.lr.ph42.preheader.18, label %._crit_edge43.18

.lr.ph42.preheader.18:                            ; preds = %2276
  %2283 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2257, i32 0, i32 0
  br label %.lr.ph42.18

.lr.ph42.18:                                      ; preds = %2308, %.lr.ph42.preheader.18
  %lsr.iv.18 = phi i64 [ 0, %.lr.ph42.preheader.18 ], [ %lsr.iv.next.18, %2308 ]
  call void @unroll_loop(i32 4)
  %2284 = load i8*, i8** %2283, align 8
  %scevgep.18 = getelementptr i8, i8* %2284, i64 1
  %scevgep1.18 = getelementptr i8, i8* %scevgep.18, i64 %lsr.iv.18
  %2285 = load i8, i8* %scevgep1.18, align 1
  %2286 = sext i8 %2285 to i32
  switch i32 %2286, label %.loopexit38 [
    i32 99, label %2307
    i32 100, label %2306
    i32 122, label %2305
    i32 102, label %2304
    i32 116, label %2303
    i32 107, label %2302
    i32 115, label %2301
    i32 113, label %2300
    i32 49, label %2299
    i32 50, label %2298
    i32 51, label %2297
    i32 52, label %2296
    i32 53, label %2295
    i32 54, label %2294
    i32 55, label %2293
    i32 56, label %2292
    i32 57, label %2291
    i32 86, label %2290
    i32 76, label %2290
    i32 118, label %2287
    i32 104, label %.loopexit39
  ]

; <label>:2287:                                   ; preds = %.lr.ph42.18
  %2288 = load i32, i32* @verbosity, align 4
  %2289 = add nsw i32 %2288, 1
  store i32 %2289, i32* @verbosity, align 4
  br label %2308

; <label>:2290:                                   ; preds = %.lr.ph42.18, %.lr.ph42.18
  call void @license()
  br label %2308

; <label>:2291:                                   ; preds = %.lr.ph42.18
  store i32 9, i32* @blockSize100k, align 4
  br label %2308

; <label>:2292:                                   ; preds = %.lr.ph42.18
  store i32 8, i32* @blockSize100k, align 4
  br label %2308

; <label>:2293:                                   ; preds = %.lr.ph42.18
  store i32 7, i32* @blockSize100k, align 4
  br label %2308

; <label>:2294:                                   ; preds = %.lr.ph42.18
  store i32 6, i32* @blockSize100k, align 4
  br label %2308

; <label>:2295:                                   ; preds = %.lr.ph42.18
  store i32 5, i32* @blockSize100k, align 4
  br label %2308

; <label>:2296:                                   ; preds = %.lr.ph42.18
  store i32 4, i32* @blockSize100k, align 4
  br label %2308

; <label>:2297:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @blockSize100k, align 4
  br label %2308

; <label>:2298:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @blockSize100k, align 4
  br label %2308

; <label>:2299:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @blockSize100k, align 4
  br label %2308

; <label>:2300:                                   ; preds = %.lr.ph42.18
  store i8 0, i8* @noisy, align 1
  br label %2308

; <label>:2301:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @smallMode, align 1
  br label %2308

; <label>:2302:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @keepInputFiles, align 1
  br label %2308

; <label>:2303:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @opMode, align 4
  br label %2308

; <label>:2304:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @forceOverwrite, align 1
  br label %2308

; <label>:2305:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @opMode, align 4
  br label %2308

; <label>:2306:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @opMode, align 4
  br label %2308

; <label>:2307:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @srcMode, align 4
  br label %2308

; <label>:2308:                                   ; preds = %2307, %2306, %2305, %2304, %2303, %2302, %2301, %2300, %2299, %2298, %2297, %2296, %2295, %2294, %2293, %2292, %2291, %2290, %2287
  %2309 = load i8*, i8** %2277, align 8
  %scevgep2.18 = getelementptr i8, i8* %2309, i64 2
  %scevgep3.18 = getelementptr i8, i8* %scevgep2.18, i64 %lsr.iv.18
  %2310 = load i8, i8* %scevgep3.18, align 1
  %2311 = sext i8 %2310 to i32
  %2312 = icmp ne i32 %2311, 0
  %lsr.iv.next.18 = add i64 %lsr.iv.18, 1
  br i1 %2312, label %.lr.ph42.18, label %._crit_edge43.loopexit.18

._crit_edge43.loopexit.18:                        ; preds = %2308
  br label %._crit_edge43.18

._crit_edge43.18:                                 ; preds = %._crit_edge43.loopexit.18, %2276, %2269, %2263
  call void @__loop_iteration_test___3()
  %2313 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2257, i32 0, i32 1
  %2314 = load %struct.zzzz*, %struct.zzzz** %2313, align 8
  %2315 = icmp ne %struct.zzzz* %2314, null
  br i1 %2315, label %.lr.ph48.19, label %.loopexit17.loopexit

.lr.ph48.19:                                      ; preds = %._crit_edge43.18
  call void @unroll_loop(i32 3)
  %2316 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2314, i32 0, i32 0
  %2317 = load i8*, i8** %2316, align 8
  %2318 = call i32 @strcmp(i8* %2317, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2319 = icmp eq i32 %2318, 0
  br i1 %2319, label %.loopexit17.loopexit, label %2320

; <label>:2320:                                   ; preds = %.lr.ph48.19
  %2321 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2314, i32 0, i32 0
  %2322 = load i8*, i8** %2321, align 8
  %2323 = load i8, i8* %2322, align 1
  %2324 = sext i8 %2323 to i32
  %2325 = icmp eq i32 %2324, 45
  br i1 %2325, label %2326, label %._crit_edge43.19

; <label>:2326:                                   ; preds = %2320
  %2327 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2314, i32 0, i32 0
  %2328 = load i8*, i8** %2327, align 8
  %2329 = getelementptr inbounds i8, i8* %2328, i64 1
  %2330 = load i8, i8* %2329, align 1
  %2331 = sext i8 %2330 to i32
  %2332 = icmp ne i32 %2331, 45
  br i1 %2332, label %2333, label %._crit_edge43.19

; <label>:2333:                                   ; preds = %2326
  %2334 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2314, i32 0, i32 0
  %2335 = load i8*, i8** %2334, align 8
  %2336 = getelementptr inbounds i8, i8* %2335, i64 1
  %2337 = load i8, i8* %2336, align 1
  %2338 = sext i8 %2337 to i32
  %2339 = icmp ne i32 %2338, 0
  br i1 %2339, label %.lr.ph42.preheader.19, label %._crit_edge43.19

.lr.ph42.preheader.19:                            ; preds = %2333
  %2340 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2314, i32 0, i32 0
  br label %.lr.ph42.19

.lr.ph42.19:                                      ; preds = %2365, %.lr.ph42.preheader.19
  %lsr.iv.19 = phi i64 [ 0, %.lr.ph42.preheader.19 ], [ %lsr.iv.next.19, %2365 ]
  call void @unroll_loop(i32 4)
  %2341 = load i8*, i8** %2340, align 8
  %scevgep.19 = getelementptr i8, i8* %2341, i64 1
  %scevgep1.19 = getelementptr i8, i8* %scevgep.19, i64 %lsr.iv.19
  %2342 = load i8, i8* %scevgep1.19, align 1
  %2343 = sext i8 %2342 to i32
  switch i32 %2343, label %.loopexit40 [
    i32 99, label %2364
    i32 100, label %2363
    i32 122, label %2362
    i32 102, label %2361
    i32 116, label %2360
    i32 107, label %2359
    i32 115, label %2358
    i32 113, label %2357
    i32 49, label %2356
    i32 50, label %2355
    i32 51, label %2354
    i32 52, label %2353
    i32 53, label %2352
    i32 54, label %2351
    i32 55, label %2350
    i32 56, label %2349
    i32 57, label %2348
    i32 86, label %2347
    i32 76, label %2347
    i32 118, label %2344
    i32 104, label %.loopexit41
  ]

; <label>:2344:                                   ; preds = %.lr.ph42.19
  %2345 = load i32, i32* @verbosity, align 4
  %2346 = add nsw i32 %2345, 1
  store i32 %2346, i32* @verbosity, align 4
  br label %2365

; <label>:2347:                                   ; preds = %.lr.ph42.19, %.lr.ph42.19
  call void @license()
  br label %2365

; <label>:2348:                                   ; preds = %.lr.ph42.19
  store i32 9, i32* @blockSize100k, align 4
  br label %2365

; <label>:2349:                                   ; preds = %.lr.ph42.19
  store i32 8, i32* @blockSize100k, align 4
  br label %2365

; <label>:2350:                                   ; preds = %.lr.ph42.19
  store i32 7, i32* @blockSize100k, align 4
  br label %2365

; <label>:2351:                                   ; preds = %.lr.ph42.19
  store i32 6, i32* @blockSize100k, align 4
  br label %2365

; <label>:2352:                                   ; preds = %.lr.ph42.19
  store i32 5, i32* @blockSize100k, align 4
  br label %2365

; <label>:2353:                                   ; preds = %.lr.ph42.19
  store i32 4, i32* @blockSize100k, align 4
  br label %2365

; <label>:2354:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @blockSize100k, align 4
  br label %2365

; <label>:2355:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @blockSize100k, align 4
  br label %2365

; <label>:2356:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @blockSize100k, align 4
  br label %2365

; <label>:2357:                                   ; preds = %.lr.ph42.19
  store i8 0, i8* @noisy, align 1
  br label %2365

; <label>:2358:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @smallMode, align 1
  br label %2365

; <label>:2359:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @keepInputFiles, align 1
  br label %2365

; <label>:2360:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @opMode, align 4
  br label %2365

; <label>:2361:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @forceOverwrite, align 1
  br label %2365

; <label>:2362:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @opMode, align 4
  br label %2365

; <label>:2363:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @opMode, align 4
  br label %2365

; <label>:2364:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @srcMode, align 4
  br label %2365

; <label>:2365:                                   ; preds = %2364, %2363, %2362, %2361, %2360, %2359, %2358, %2357, %2356, %2355, %2354, %2353, %2352, %2351, %2350, %2349, %2348, %2347, %2344
  %2366 = load i8*, i8** %2334, align 8
  %scevgep2.19 = getelementptr i8, i8* %2366, i64 2
  %scevgep3.19 = getelementptr i8, i8* %scevgep2.19, i64 %lsr.iv.19
  %2367 = load i8, i8* %scevgep3.19, align 1
  %2368 = sext i8 %2367 to i32
  %2369 = icmp ne i32 %2368, 0
  %lsr.iv.next.19 = add i64 %lsr.iv.19, 1
  br i1 %2369, label %.lr.ph42.19, label %._crit_edge43.loopexit.19

._crit_edge43.loopexit.19:                        ; preds = %2365
  br label %._crit_edge43.19

._crit_edge43.19:                                 ; preds = %._crit_edge43.loopexit.19, %2333, %2326, %2320
  call void @__loop_iteration_test___3()
  %2370 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2314, i32 0, i32 1
  %2371 = load %struct.zzzz*, %struct.zzzz** %2370, align 8
  br label %.loopexit17.loopexit

.lr.ph42.113:                                     ; preds = %198
  call void @unroll_loop(i32 4)
  %2372 = load i8*, i8** %163, align 8
  %scevgep.111 = getelementptr i8, i8* %2372, i64 1
  %scevgep1.112 = getelementptr i8, i8* %scevgep.111, i64 1
  %2373 = load i8, i8* %scevgep1.112, align 1
  %2374 = sext i8 107 to i32
  switch i32 107, label %.loopexit1 [
    i32 99, label %2395
    i32 100, label %2394
    i32 122, label %2393
    i32 102, label %2392
    i32 116, label %2391
    i32 107, label %2390
    i32 115, label %2389
    i32 113, label %2388
    i32 49, label %2387
    i32 50, label %2386
    i32 51, label %2385
    i32 52, label %2384
    i32 53, label %2383
    i32 54, label %2382
    i32 55, label %2381
    i32 56, label %2380
    i32 57, label %2379
    i32 86, label %2378
    i32 76, label %2378
    i32 118, label %2375
    i32 104, label %.loopexit2
  ]

; <label>:2375:                                   ; preds = %.lr.ph42.113
  %2376 = load i32, i32* @verbosity, align 4
  %2377 = add nsw i32 %2376, 1
  store i32 %2377, i32* @verbosity, align 4
  br label %2396

; <label>:2378:                                   ; preds = %.lr.ph42.113, %.lr.ph42.113
  call void @license()
  br label %2396

; <label>:2379:                                   ; preds = %.lr.ph42.113
  store i32 9, i32* @blockSize100k, align 4
  br label %2396

; <label>:2380:                                   ; preds = %.lr.ph42.113
  store i32 8, i32* @blockSize100k, align 4
  br label %2396

; <label>:2381:                                   ; preds = %.lr.ph42.113
  store i32 7, i32* @blockSize100k, align 4
  br label %2396

; <label>:2382:                                   ; preds = %.lr.ph42.113
  store i32 6, i32* @blockSize100k, align 4
  br label %2396

; <label>:2383:                                   ; preds = %.lr.ph42.113
  store i32 5, i32* @blockSize100k, align 4
  br label %2396

; <label>:2384:                                   ; preds = %.lr.ph42.113
  store i32 4, i32* @blockSize100k, align 4
  br label %2396

; <label>:2385:                                   ; preds = %.lr.ph42.113
  store i32 3, i32* @blockSize100k, align 4
  br label %2396

; <label>:2386:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @blockSize100k, align 4
  br label %2396

; <label>:2387:                                   ; preds = %.lr.ph42.113
  store i32 1, i32* @blockSize100k, align 4
  br label %2396

; <label>:2388:                                   ; preds = %.lr.ph42.113
  store i8 0, i8* @noisy, align 1
  br label %2396

; <label>:2389:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @smallMode, align 1
  br label %2396

; <label>:2390:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @keepInputFiles, align 1
  br label %2396

; <label>:2391:                                   ; preds = %.lr.ph42.113
  store i32 3, i32* @opMode, align 4
  br label %2396

; <label>:2392:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @forceOverwrite, align 1
  br label %2396

; <label>:2393:                                   ; preds = %.lr.ph42.113
  store i32 1, i32* @opMode, align 4
  br label %2396

; <label>:2394:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @opMode, align 4
  br label %2396

; <label>:2395:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @srcMode, align 4
  br label %2396

; <label>:2396:                                   ; preds = %2395, %2394, %2393, %2392, %2391, %2390, %2389, %2388, %2387, %2386, %2385, %2384, %2383, %2382, %2381, %2380, %2379, %2378, %2375
  call void @__loop_iteration_test___4()
  %2397 = load i8*, i8** %157, align 8
  %scevgep2.114 = getelementptr i8, i8* %2397, i64 2
  %scevgep3.115 = getelementptr i8, i8* %scevgep2.114, i64 1
  %2398 = load i8, i8* %scevgep3.115, align 1
  %2399 = sext i8 113 to i32
  %2400 = icmp ne i32 113, 0
  br i1 true, label %.lr.ph42.220, label %._crit_edge43.loopexit

.lr.ph42.220:                                     ; preds = %2396
  call void @unroll_loop(i32 4)
  %2401 = load i8*, i8** %163, align 8
  %scevgep.218 = getelementptr i8, i8* %2401, i64 1
  %scevgep1.219 = getelementptr i8, i8* %scevgep.218, i64 2
  %2402 = load i8, i8* %scevgep1.219, align 1
  %2403 = sext i8 113 to i32
  switch i32 113, label %.loopexit1 [
    i32 99, label %2424
    i32 100, label %2423
    i32 122, label %2422
    i32 102, label %2421
    i32 116, label %2420
    i32 107, label %2419
    i32 115, label %2418
    i32 113, label %2417
    i32 49, label %2416
    i32 50, label %2415
    i32 51, label %2414
    i32 52, label %2413
    i32 53, label %2412
    i32 54, label %2411
    i32 55, label %2410
    i32 56, label %2409
    i32 57, label %2408
    i32 86, label %2407
    i32 76, label %2407
    i32 118, label %2404
    i32 104, label %.loopexit2
  ]

; <label>:2404:                                   ; preds = %.lr.ph42.220
  %2405 = load i32, i32* @verbosity, align 4
  %2406 = add nsw i32 %2405, 1
  store i32 %2406, i32* @verbosity, align 4
  br label %2425

; <label>:2407:                                   ; preds = %.lr.ph42.220, %.lr.ph42.220
  call void @license()
  br label %2425

; <label>:2408:                                   ; preds = %.lr.ph42.220
  store i32 9, i32* @blockSize100k, align 4
  br label %2425

; <label>:2409:                                   ; preds = %.lr.ph42.220
  store i32 8, i32* @blockSize100k, align 4
  br label %2425

; <label>:2410:                                   ; preds = %.lr.ph42.220
  store i32 7, i32* @blockSize100k, align 4
  br label %2425

; <label>:2411:                                   ; preds = %.lr.ph42.220
  store i32 6, i32* @blockSize100k, align 4
  br label %2425

; <label>:2412:                                   ; preds = %.lr.ph42.220
  store i32 5, i32* @blockSize100k, align 4
  br label %2425

; <label>:2413:                                   ; preds = %.lr.ph42.220
  store i32 4, i32* @blockSize100k, align 4
  br label %2425

; <label>:2414:                                   ; preds = %.lr.ph42.220
  store i32 3, i32* @blockSize100k, align 4
  br label %2425

; <label>:2415:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @blockSize100k, align 4
  br label %2425

; <label>:2416:                                   ; preds = %.lr.ph42.220
  store i32 1, i32* @blockSize100k, align 4
  br label %2425

; <label>:2417:                                   ; preds = %.lr.ph42.220
  store i8 0, i8* @noisy, align 1
  br label %2425

; <label>:2418:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @smallMode, align 1
  br label %2425

; <label>:2419:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @keepInputFiles, align 1
  br label %2425

; <label>:2420:                                   ; preds = %.lr.ph42.220
  store i32 3, i32* @opMode, align 4
  br label %2425

; <label>:2421:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @forceOverwrite, align 1
  br label %2425

; <label>:2422:                                   ; preds = %.lr.ph42.220
  store i32 1, i32* @opMode, align 4
  br label %2425

; <label>:2423:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @opMode, align 4
  br label %2425

; <label>:2424:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @srcMode, align 4
  br label %2425

; <label>:2425:                                   ; preds = %2424, %2423, %2422, %2421, %2420, %2419, %2418, %2417, %2416, %2415, %2414, %2413, %2412, %2411, %2410, %2409, %2408, %2407, %2404
  call void @__loop_iteration_test___4()
  %2426 = load i8*, i8** %157, align 8
  %scevgep2.221 = getelementptr i8, i8* %2426, i64 2
  %scevgep3.222 = getelementptr i8, i8* %scevgep2.221, i64 2
  %2427 = load i8, i8* %scevgep3.222, align 1
  %2428 = sext i8 115 to i32
  %2429 = icmp ne i32 115, 0
  br i1 true, label %.lr.ph42.327, label %._crit_edge43.loopexit

.lr.ph42.327:                                     ; preds = %2425
  call void @unroll_loop(i32 4)
  %2430 = load i8*, i8** %163, align 8
  %scevgep.325 = getelementptr i8, i8* %2430, i64 1
  %scevgep1.326 = getelementptr i8, i8* %scevgep.325, i64 3
  %2431 = load i8, i8* %scevgep1.326, align 1
  %2432 = sext i8 115 to i32
  switch i32 115, label %.loopexit1 [
    i32 99, label %2453
    i32 100, label %2452
    i32 122, label %2451
    i32 102, label %2450
    i32 116, label %2449
    i32 107, label %2448
    i32 115, label %2447
    i32 113, label %2446
    i32 49, label %2445
    i32 50, label %2444
    i32 51, label %2443
    i32 52, label %2442
    i32 53, label %2441
    i32 54, label %2440
    i32 55, label %2439
    i32 56, label %2438
    i32 57, label %2437
    i32 86, label %2436
    i32 76, label %2436
    i32 118, label %2433
    i32 104, label %.loopexit2
  ]

; <label>:2433:                                   ; preds = %.lr.ph42.327
  %2434 = load i32, i32* @verbosity, align 4
  %2435 = add nsw i32 %2434, 1
  store i32 %2435, i32* @verbosity, align 4
  br label %2454

; <label>:2436:                                   ; preds = %.lr.ph42.327, %.lr.ph42.327
  call void @license()
  br label %2454

; <label>:2437:                                   ; preds = %.lr.ph42.327
  store i32 9, i32* @blockSize100k, align 4
  br label %2454

; <label>:2438:                                   ; preds = %.lr.ph42.327
  store i32 8, i32* @blockSize100k, align 4
  br label %2454

; <label>:2439:                                   ; preds = %.lr.ph42.327
  store i32 7, i32* @blockSize100k, align 4
  br label %2454

; <label>:2440:                                   ; preds = %.lr.ph42.327
  store i32 6, i32* @blockSize100k, align 4
  br label %2454

; <label>:2441:                                   ; preds = %.lr.ph42.327
  store i32 5, i32* @blockSize100k, align 4
  br label %2454

; <label>:2442:                                   ; preds = %.lr.ph42.327
  store i32 4, i32* @blockSize100k, align 4
  br label %2454

; <label>:2443:                                   ; preds = %.lr.ph42.327
  store i32 3, i32* @blockSize100k, align 4
  br label %2454

; <label>:2444:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @blockSize100k, align 4
  br label %2454

; <label>:2445:                                   ; preds = %.lr.ph42.327
  store i32 1, i32* @blockSize100k, align 4
  br label %2454

; <label>:2446:                                   ; preds = %.lr.ph42.327
  store i8 0, i8* @noisy, align 1
  br label %2454

; <label>:2447:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @smallMode, align 1
  br label %2454

; <label>:2448:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @keepInputFiles, align 1
  br label %2454

; <label>:2449:                                   ; preds = %.lr.ph42.327
  store i32 3, i32* @opMode, align 4
  br label %2454

; <label>:2450:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @forceOverwrite, align 1
  br label %2454

; <label>:2451:                                   ; preds = %.lr.ph42.327
  store i32 1, i32* @opMode, align 4
  br label %2454

; <label>:2452:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @opMode, align 4
  br label %2454

; <label>:2453:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @srcMode, align 4
  br label %2454

; <label>:2454:                                   ; preds = %2453, %2452, %2451, %2450, %2449, %2448, %2447, %2446, %2445, %2444, %2443, %2442, %2441, %2440, %2439, %2438, %2437, %2436, %2433
  call void @__loop_iteration_test___4()
  %2455 = load i8*, i8** %157, align 8
  %scevgep2.328 = getelementptr i8, i8* %2455, i64 2
  %scevgep3.329 = getelementptr i8, i8* %scevgep2.328, i64 3
  %2456 = load i8, i8* %scevgep3.329, align 1
  %2457 = sext i8 0 to i32
  %2458 = icmp ne i32 0, 0
  br i1 false, label %.lr.ph42.434, label %._crit_edge43.loopexit

.lr.ph42.434:                                     ; preds = %2454
  call void @unroll_loop(i32 4)
  %2459 = load i8*, i8** %163, align 8
  %scevgep.432 = getelementptr i8, i8* %2459, i64 1
  %scevgep1.433 = getelementptr i8, i8* %scevgep.432, i64 4
  %2460 = load i8, i8* %scevgep1.433, align 1
  %2461 = sext i8 %2460 to i32
  switch i32 %2461, label %.loopexit1 [
    i32 99, label %2482
    i32 100, label %2481
    i32 122, label %2480
    i32 102, label %2479
    i32 116, label %2478
    i32 107, label %2477
    i32 115, label %2476
    i32 113, label %2475
    i32 49, label %2474
    i32 50, label %2473
    i32 51, label %2472
    i32 52, label %2471
    i32 53, label %2470
    i32 54, label %2469
    i32 55, label %2468
    i32 56, label %2467
    i32 57, label %2466
    i32 86, label %2465
    i32 76, label %2465
    i32 118, label %2462
    i32 104, label %.loopexit2
  ]

; <label>:2462:                                   ; preds = %.lr.ph42.434
  %2463 = load i32, i32* @verbosity, align 4
  %2464 = add nsw i32 %2463, 1
  store i32 %2464, i32* @verbosity, align 4
  br label %2483

; <label>:2465:                                   ; preds = %.lr.ph42.434, %.lr.ph42.434
  call void @license()
  br label %2483

; <label>:2466:                                   ; preds = %.lr.ph42.434
  store i32 9, i32* @blockSize100k, align 4
  br label %2483

; <label>:2467:                                   ; preds = %.lr.ph42.434
  store i32 8, i32* @blockSize100k, align 4
  br label %2483

; <label>:2468:                                   ; preds = %.lr.ph42.434
  store i32 7, i32* @blockSize100k, align 4
  br label %2483

; <label>:2469:                                   ; preds = %.lr.ph42.434
  store i32 6, i32* @blockSize100k, align 4
  br label %2483

; <label>:2470:                                   ; preds = %.lr.ph42.434
  store i32 5, i32* @blockSize100k, align 4
  br label %2483

; <label>:2471:                                   ; preds = %.lr.ph42.434
  store i32 4, i32* @blockSize100k, align 4
  br label %2483

; <label>:2472:                                   ; preds = %.lr.ph42.434
  store i32 3, i32* @blockSize100k, align 4
  br label %2483

; <label>:2473:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @blockSize100k, align 4
  br label %2483

; <label>:2474:                                   ; preds = %.lr.ph42.434
  store i32 1, i32* @blockSize100k, align 4
  br label %2483

; <label>:2475:                                   ; preds = %.lr.ph42.434
  store i8 0, i8* @noisy, align 1
  br label %2483

; <label>:2476:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @smallMode, align 1
  br label %2483

; <label>:2477:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @keepInputFiles, align 1
  br label %2483

; <label>:2478:                                   ; preds = %.lr.ph42.434
  store i32 3, i32* @opMode, align 4
  br label %2483

; <label>:2479:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @forceOverwrite, align 1
  br label %2483

; <label>:2480:                                   ; preds = %.lr.ph42.434
  store i32 1, i32* @opMode, align 4
  br label %2483

; <label>:2481:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @opMode, align 4
  br label %2483

; <label>:2482:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @srcMode, align 4
  br label %2483

; <label>:2483:                                   ; preds = %2482, %2481, %2480, %2479, %2478, %2477, %2476, %2475, %2474, %2473, %2472, %2471, %2470, %2469, %2468, %2467, %2466, %2465, %2462
  call void @__loop_iteration_test___4()
  %2484 = load i8*, i8** %157, align 8
  %scevgep2.435 = getelementptr i8, i8* %2484, i64 2
  %scevgep3.436 = getelementptr i8, i8* %scevgep2.435, i64 4
  %2485 = load i8, i8* %scevgep3.436, align 1
  %2486 = sext i8 %2485 to i32
  %2487 = icmp ne i32 %2486, 0
  br i1 %2487, label %.lr.ph42.541, label %._crit_edge43.loopexit

.lr.ph42.541:                                     ; preds = %2483
  call void @unroll_loop(i32 4)
  %2488 = load i8*, i8** %163, align 8
  %scevgep.539 = getelementptr i8, i8* %2488, i64 1
  %scevgep1.540 = getelementptr i8, i8* %scevgep.539, i64 5
  %2489 = load i8, i8* %scevgep1.540, align 1
  %2490 = sext i8 %2489 to i32
  switch i32 %2490, label %.loopexit1 [
    i32 99, label %2511
    i32 100, label %2510
    i32 122, label %2509
    i32 102, label %2508
    i32 116, label %2507
    i32 107, label %2506
    i32 115, label %2505
    i32 113, label %2504
    i32 49, label %2503
    i32 50, label %2502
    i32 51, label %2501
    i32 52, label %2500
    i32 53, label %2499
    i32 54, label %2498
    i32 55, label %2497
    i32 56, label %2496
    i32 57, label %2495
    i32 86, label %2494
    i32 76, label %2494
    i32 118, label %2491
    i32 104, label %.loopexit2
  ]

; <label>:2491:                                   ; preds = %.lr.ph42.541
  %2492 = load i32, i32* @verbosity, align 4
  %2493 = add nsw i32 %2492, 1
  store i32 %2493, i32* @verbosity, align 4
  br label %2512

; <label>:2494:                                   ; preds = %.lr.ph42.541, %.lr.ph42.541
  call void @license()
  br label %2512

; <label>:2495:                                   ; preds = %.lr.ph42.541
  store i32 9, i32* @blockSize100k, align 4
  br label %2512

; <label>:2496:                                   ; preds = %.lr.ph42.541
  store i32 8, i32* @blockSize100k, align 4
  br label %2512

; <label>:2497:                                   ; preds = %.lr.ph42.541
  store i32 7, i32* @blockSize100k, align 4
  br label %2512

; <label>:2498:                                   ; preds = %.lr.ph42.541
  store i32 6, i32* @blockSize100k, align 4
  br label %2512

; <label>:2499:                                   ; preds = %.lr.ph42.541
  store i32 5, i32* @blockSize100k, align 4
  br label %2512

; <label>:2500:                                   ; preds = %.lr.ph42.541
  store i32 4, i32* @blockSize100k, align 4
  br label %2512

; <label>:2501:                                   ; preds = %.lr.ph42.541
  store i32 3, i32* @blockSize100k, align 4
  br label %2512

; <label>:2502:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @blockSize100k, align 4
  br label %2512

; <label>:2503:                                   ; preds = %.lr.ph42.541
  store i32 1, i32* @blockSize100k, align 4
  br label %2512

; <label>:2504:                                   ; preds = %.lr.ph42.541
  store i8 0, i8* @noisy, align 1
  br label %2512

; <label>:2505:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @smallMode, align 1
  br label %2512

; <label>:2506:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @keepInputFiles, align 1
  br label %2512

; <label>:2507:                                   ; preds = %.lr.ph42.541
  store i32 3, i32* @opMode, align 4
  br label %2512

; <label>:2508:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @forceOverwrite, align 1
  br label %2512

; <label>:2509:                                   ; preds = %.lr.ph42.541
  store i32 1, i32* @opMode, align 4
  br label %2512

; <label>:2510:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @opMode, align 4
  br label %2512

; <label>:2511:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @srcMode, align 4
  br label %2512

; <label>:2512:                                   ; preds = %2511, %2510, %2509, %2508, %2507, %2506, %2505, %2504, %2503, %2502, %2501, %2500, %2499, %2498, %2497, %2496, %2495, %2494, %2491
  call void @__loop_iteration_test___4()
  %2513 = load i8*, i8** %157, align 8
  %scevgep2.542 = getelementptr i8, i8* %2513, i64 2
  %scevgep3.543 = getelementptr i8, i8* %scevgep2.542, i64 5
  %2514 = load i8, i8* %scevgep3.543, align 1
  %2515 = sext i8 %2514 to i32
  %2516 = icmp ne i32 %2515, 0
  br i1 %2516, label %.lr.ph42.648, label %._crit_edge43.loopexit

.lr.ph42.648:                                     ; preds = %2512
  call void @unroll_loop(i32 4)
  %2517 = load i8*, i8** %163, align 8
  %scevgep.646 = getelementptr i8, i8* %2517, i64 1
  %scevgep1.647 = getelementptr i8, i8* %scevgep.646, i64 6
  %2518 = load i8, i8* %scevgep1.647, align 1
  %2519 = sext i8 %2518 to i32
  switch i32 %2519, label %.loopexit1 [
    i32 99, label %2540
    i32 100, label %2539
    i32 122, label %2538
    i32 102, label %2537
    i32 116, label %2536
    i32 107, label %2535
    i32 115, label %2534
    i32 113, label %2533
    i32 49, label %2532
    i32 50, label %2531
    i32 51, label %2530
    i32 52, label %2529
    i32 53, label %2528
    i32 54, label %2527
    i32 55, label %2526
    i32 56, label %2525
    i32 57, label %2524
    i32 86, label %2523
    i32 76, label %2523
    i32 118, label %2520
    i32 104, label %.loopexit2
  ]

; <label>:2520:                                   ; preds = %.lr.ph42.648
  %2521 = load i32, i32* @verbosity, align 4
  %2522 = add nsw i32 %2521, 1
  store i32 %2522, i32* @verbosity, align 4
  br label %2541

; <label>:2523:                                   ; preds = %.lr.ph42.648, %.lr.ph42.648
  call void @license()
  br label %2541

; <label>:2524:                                   ; preds = %.lr.ph42.648
  store i32 9, i32* @blockSize100k, align 4
  br label %2541

; <label>:2525:                                   ; preds = %.lr.ph42.648
  store i32 8, i32* @blockSize100k, align 4
  br label %2541

; <label>:2526:                                   ; preds = %.lr.ph42.648
  store i32 7, i32* @blockSize100k, align 4
  br label %2541

; <label>:2527:                                   ; preds = %.lr.ph42.648
  store i32 6, i32* @blockSize100k, align 4
  br label %2541

; <label>:2528:                                   ; preds = %.lr.ph42.648
  store i32 5, i32* @blockSize100k, align 4
  br label %2541

; <label>:2529:                                   ; preds = %.lr.ph42.648
  store i32 4, i32* @blockSize100k, align 4
  br label %2541

; <label>:2530:                                   ; preds = %.lr.ph42.648
  store i32 3, i32* @blockSize100k, align 4
  br label %2541

; <label>:2531:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @blockSize100k, align 4
  br label %2541

; <label>:2532:                                   ; preds = %.lr.ph42.648
  store i32 1, i32* @blockSize100k, align 4
  br label %2541

; <label>:2533:                                   ; preds = %.lr.ph42.648
  store i8 0, i8* @noisy, align 1
  br label %2541

; <label>:2534:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @smallMode, align 1
  br label %2541

; <label>:2535:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @keepInputFiles, align 1
  br label %2541

; <label>:2536:                                   ; preds = %.lr.ph42.648
  store i32 3, i32* @opMode, align 4
  br label %2541

; <label>:2537:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @forceOverwrite, align 1
  br label %2541

; <label>:2538:                                   ; preds = %.lr.ph42.648
  store i32 1, i32* @opMode, align 4
  br label %2541

; <label>:2539:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @opMode, align 4
  br label %2541

; <label>:2540:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @srcMode, align 4
  br label %2541

; <label>:2541:                                   ; preds = %2540, %2539, %2538, %2537, %2536, %2535, %2534, %2533, %2532, %2531, %2530, %2529, %2528, %2527, %2526, %2525, %2524, %2523, %2520
  call void @__loop_iteration_test___4()
  %2542 = load i8*, i8** %157, align 8
  %scevgep2.649 = getelementptr i8, i8* %2542, i64 2
  %scevgep3.650 = getelementptr i8, i8* %scevgep2.649, i64 6
  %2543 = load i8, i8* %scevgep3.650, align 1
  %2544 = sext i8 %2543 to i32
  %2545 = icmp ne i32 %2544, 0
  br i1 %2545, label %.lr.ph42.755, label %._crit_edge43.loopexit

.lr.ph42.755:                                     ; preds = %2541
  call void @unroll_loop(i32 4)
  %2546 = load i8*, i8** %163, align 8
  %scevgep.753 = getelementptr i8, i8* %2546, i64 1
  %scevgep1.754 = getelementptr i8, i8* %scevgep.753, i64 7
  %2547 = load i8, i8* %scevgep1.754, align 1
  %2548 = sext i8 %2547 to i32
  switch i32 %2548, label %.loopexit1 [
    i32 99, label %2569
    i32 100, label %2568
    i32 122, label %2567
    i32 102, label %2566
    i32 116, label %2565
    i32 107, label %2564
    i32 115, label %2563
    i32 113, label %2562
    i32 49, label %2561
    i32 50, label %2560
    i32 51, label %2559
    i32 52, label %2558
    i32 53, label %2557
    i32 54, label %2556
    i32 55, label %2555
    i32 56, label %2554
    i32 57, label %2553
    i32 86, label %2552
    i32 76, label %2552
    i32 118, label %2549
    i32 104, label %.loopexit2
  ]

; <label>:2549:                                   ; preds = %.lr.ph42.755
  %2550 = load i32, i32* @verbosity, align 4
  %2551 = add nsw i32 %2550, 1
  store i32 %2551, i32* @verbosity, align 4
  br label %2570

; <label>:2552:                                   ; preds = %.lr.ph42.755, %.lr.ph42.755
  call void @license()
  br label %2570

; <label>:2553:                                   ; preds = %.lr.ph42.755
  store i32 9, i32* @blockSize100k, align 4
  br label %2570

; <label>:2554:                                   ; preds = %.lr.ph42.755
  store i32 8, i32* @blockSize100k, align 4
  br label %2570

; <label>:2555:                                   ; preds = %.lr.ph42.755
  store i32 7, i32* @blockSize100k, align 4
  br label %2570

; <label>:2556:                                   ; preds = %.lr.ph42.755
  store i32 6, i32* @blockSize100k, align 4
  br label %2570

; <label>:2557:                                   ; preds = %.lr.ph42.755
  store i32 5, i32* @blockSize100k, align 4
  br label %2570

; <label>:2558:                                   ; preds = %.lr.ph42.755
  store i32 4, i32* @blockSize100k, align 4
  br label %2570

; <label>:2559:                                   ; preds = %.lr.ph42.755
  store i32 3, i32* @blockSize100k, align 4
  br label %2570

; <label>:2560:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @blockSize100k, align 4
  br label %2570

; <label>:2561:                                   ; preds = %.lr.ph42.755
  store i32 1, i32* @blockSize100k, align 4
  br label %2570

; <label>:2562:                                   ; preds = %.lr.ph42.755
  store i8 0, i8* @noisy, align 1
  br label %2570

; <label>:2563:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @smallMode, align 1
  br label %2570

; <label>:2564:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @keepInputFiles, align 1
  br label %2570

; <label>:2565:                                   ; preds = %.lr.ph42.755
  store i32 3, i32* @opMode, align 4
  br label %2570

; <label>:2566:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @forceOverwrite, align 1
  br label %2570

; <label>:2567:                                   ; preds = %.lr.ph42.755
  store i32 1, i32* @opMode, align 4
  br label %2570

; <label>:2568:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @opMode, align 4
  br label %2570

; <label>:2569:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @srcMode, align 4
  br label %2570

; <label>:2570:                                   ; preds = %2569, %2568, %2567, %2566, %2565, %2564, %2563, %2562, %2561, %2560, %2559, %2558, %2557, %2556, %2555, %2554, %2553, %2552, %2549
  call void @__loop_iteration_test___4()
  %2571 = load i8*, i8** %157, align 8
  %scevgep2.756 = getelementptr i8, i8* %2571, i64 2
  %scevgep3.757 = getelementptr i8, i8* %scevgep2.756, i64 7
  %2572 = load i8, i8* %scevgep3.757, align 1
  %2573 = sext i8 %2572 to i32
  %2574 = icmp ne i32 %2573, 0
  br i1 %2574, label %.lr.ph42.862, label %._crit_edge43.loopexit

.lr.ph42.862:                                     ; preds = %2570
  call void @unroll_loop(i32 4)
  %2575 = load i8*, i8** %163, align 8
  %scevgep.860 = getelementptr i8, i8* %2575, i64 1
  %scevgep1.861 = getelementptr i8, i8* %scevgep.860, i64 8
  %2576 = load i8, i8* %scevgep1.861, align 1
  %2577 = sext i8 %2576 to i32
  switch i32 %2577, label %.loopexit1 [
    i32 99, label %2598
    i32 100, label %2597
    i32 122, label %2596
    i32 102, label %2595
    i32 116, label %2594
    i32 107, label %2593
    i32 115, label %2592
    i32 113, label %2591
    i32 49, label %2590
    i32 50, label %2589
    i32 51, label %2588
    i32 52, label %2587
    i32 53, label %2586
    i32 54, label %2585
    i32 55, label %2584
    i32 56, label %2583
    i32 57, label %2582
    i32 86, label %2581
    i32 76, label %2581
    i32 118, label %2578
    i32 104, label %.loopexit2
  ]

; <label>:2578:                                   ; preds = %.lr.ph42.862
  %2579 = load i32, i32* @verbosity, align 4
  %2580 = add nsw i32 %2579, 1
  store i32 %2580, i32* @verbosity, align 4
  br label %2599

; <label>:2581:                                   ; preds = %.lr.ph42.862, %.lr.ph42.862
  call void @license()
  br label %2599

; <label>:2582:                                   ; preds = %.lr.ph42.862
  store i32 9, i32* @blockSize100k, align 4
  br label %2599

; <label>:2583:                                   ; preds = %.lr.ph42.862
  store i32 8, i32* @blockSize100k, align 4
  br label %2599

; <label>:2584:                                   ; preds = %.lr.ph42.862
  store i32 7, i32* @blockSize100k, align 4
  br label %2599

; <label>:2585:                                   ; preds = %.lr.ph42.862
  store i32 6, i32* @blockSize100k, align 4
  br label %2599

; <label>:2586:                                   ; preds = %.lr.ph42.862
  store i32 5, i32* @blockSize100k, align 4
  br label %2599

; <label>:2587:                                   ; preds = %.lr.ph42.862
  store i32 4, i32* @blockSize100k, align 4
  br label %2599

; <label>:2588:                                   ; preds = %.lr.ph42.862
  store i32 3, i32* @blockSize100k, align 4
  br label %2599

; <label>:2589:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @blockSize100k, align 4
  br label %2599

; <label>:2590:                                   ; preds = %.lr.ph42.862
  store i32 1, i32* @blockSize100k, align 4
  br label %2599

; <label>:2591:                                   ; preds = %.lr.ph42.862
  store i8 0, i8* @noisy, align 1
  br label %2599

; <label>:2592:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @smallMode, align 1
  br label %2599

; <label>:2593:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @keepInputFiles, align 1
  br label %2599

; <label>:2594:                                   ; preds = %.lr.ph42.862
  store i32 3, i32* @opMode, align 4
  br label %2599

; <label>:2595:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @forceOverwrite, align 1
  br label %2599

; <label>:2596:                                   ; preds = %.lr.ph42.862
  store i32 1, i32* @opMode, align 4
  br label %2599

; <label>:2597:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @opMode, align 4
  br label %2599

; <label>:2598:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @srcMode, align 4
  br label %2599

; <label>:2599:                                   ; preds = %2598, %2597, %2596, %2595, %2594, %2593, %2592, %2591, %2590, %2589, %2588, %2587, %2586, %2585, %2584, %2583, %2582, %2581, %2578
  call void @__loop_iteration_test___4()
  %2600 = load i8*, i8** %157, align 8
  %scevgep2.863 = getelementptr i8, i8* %2600, i64 2
  %scevgep3.864 = getelementptr i8, i8* %scevgep2.863, i64 8
  %2601 = load i8, i8* %scevgep3.864, align 1
  %2602 = sext i8 %2601 to i32
  %2603 = icmp ne i32 %2602, 0
  br i1 %2603, label %.lr.ph42.969, label %._crit_edge43.loopexit

.lr.ph42.969:                                     ; preds = %2599
  call void @unroll_loop(i32 4)
  %2604 = load i8*, i8** %163, align 8
  %scevgep.967 = getelementptr i8, i8* %2604, i64 1
  %scevgep1.968 = getelementptr i8, i8* %scevgep.967, i64 9
  %2605 = load i8, i8* %scevgep1.968, align 1
  %2606 = sext i8 %2605 to i32
  switch i32 %2606, label %.loopexit1 [
    i32 99, label %2627
    i32 100, label %2626
    i32 122, label %2625
    i32 102, label %2624
    i32 116, label %2623
    i32 107, label %2622
    i32 115, label %2621
    i32 113, label %2620
    i32 49, label %2619
    i32 50, label %2618
    i32 51, label %2617
    i32 52, label %2616
    i32 53, label %2615
    i32 54, label %2614
    i32 55, label %2613
    i32 56, label %2612
    i32 57, label %2611
    i32 86, label %2610
    i32 76, label %2610
    i32 118, label %2607
    i32 104, label %.loopexit2
  ]

; <label>:2607:                                   ; preds = %.lr.ph42.969
  %2608 = load i32, i32* @verbosity, align 4
  %2609 = add nsw i32 %2608, 1
  store i32 %2609, i32* @verbosity, align 4
  br label %2628

; <label>:2610:                                   ; preds = %.lr.ph42.969, %.lr.ph42.969
  call void @license()
  br label %2628

; <label>:2611:                                   ; preds = %.lr.ph42.969
  store i32 9, i32* @blockSize100k, align 4
  br label %2628

; <label>:2612:                                   ; preds = %.lr.ph42.969
  store i32 8, i32* @blockSize100k, align 4
  br label %2628

; <label>:2613:                                   ; preds = %.lr.ph42.969
  store i32 7, i32* @blockSize100k, align 4
  br label %2628

; <label>:2614:                                   ; preds = %.lr.ph42.969
  store i32 6, i32* @blockSize100k, align 4
  br label %2628

; <label>:2615:                                   ; preds = %.lr.ph42.969
  store i32 5, i32* @blockSize100k, align 4
  br label %2628

; <label>:2616:                                   ; preds = %.lr.ph42.969
  store i32 4, i32* @blockSize100k, align 4
  br label %2628

; <label>:2617:                                   ; preds = %.lr.ph42.969
  store i32 3, i32* @blockSize100k, align 4
  br label %2628

; <label>:2618:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @blockSize100k, align 4
  br label %2628

; <label>:2619:                                   ; preds = %.lr.ph42.969
  store i32 1, i32* @blockSize100k, align 4
  br label %2628

; <label>:2620:                                   ; preds = %.lr.ph42.969
  store i8 0, i8* @noisy, align 1
  br label %2628

; <label>:2621:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @smallMode, align 1
  br label %2628

; <label>:2622:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @keepInputFiles, align 1
  br label %2628

; <label>:2623:                                   ; preds = %.lr.ph42.969
  store i32 3, i32* @opMode, align 4
  br label %2628

; <label>:2624:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @forceOverwrite, align 1
  br label %2628

; <label>:2625:                                   ; preds = %.lr.ph42.969
  store i32 1, i32* @opMode, align 4
  br label %2628

; <label>:2626:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @opMode, align 4
  br label %2628

; <label>:2627:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @srcMode, align 4
  br label %2628

; <label>:2628:                                   ; preds = %2627, %2626, %2625, %2624, %2623, %2622, %2621, %2620, %2619, %2618, %2617, %2616, %2615, %2614, %2613, %2612, %2611, %2610, %2607
  call void @__loop_iteration_test___4()
  %2629 = load i8*, i8** %157, align 8
  %scevgep2.970 = getelementptr i8, i8* %2629, i64 2
  %scevgep3.971 = getelementptr i8, i8* %scevgep2.970, i64 9
  %2630 = load i8, i8* %scevgep3.971, align 1
  %2631 = sext i8 %2630 to i32
  %2632 = icmp ne i32 %2631, 0
  br i1 %2632, label %.lr.ph42.1076, label %._crit_edge43.loopexit

.lr.ph42.1076:                                    ; preds = %2628
  call void @unroll_loop(i32 4)
  %2633 = load i8*, i8** %163, align 8
  %scevgep.1074 = getelementptr i8, i8* %2633, i64 1
  %scevgep1.1075 = getelementptr i8, i8* %scevgep.1074, i64 10
  %2634 = load i8, i8* %scevgep1.1075, align 1
  %2635 = sext i8 %2634 to i32
  switch i32 %2635, label %.loopexit1 [
    i32 99, label %2656
    i32 100, label %2655
    i32 122, label %2654
    i32 102, label %2653
    i32 116, label %2652
    i32 107, label %2651
    i32 115, label %2650
    i32 113, label %2649
    i32 49, label %2648
    i32 50, label %2647
    i32 51, label %2646
    i32 52, label %2645
    i32 53, label %2644
    i32 54, label %2643
    i32 55, label %2642
    i32 56, label %2641
    i32 57, label %2640
    i32 86, label %2639
    i32 76, label %2639
    i32 118, label %2636
    i32 104, label %.loopexit2
  ]

; <label>:2636:                                   ; preds = %.lr.ph42.1076
  %2637 = load i32, i32* @verbosity, align 4
  %2638 = add nsw i32 %2637, 1
  store i32 %2638, i32* @verbosity, align 4
  br label %2657

; <label>:2639:                                   ; preds = %.lr.ph42.1076, %.lr.ph42.1076
  call void @license()
  br label %2657

; <label>:2640:                                   ; preds = %.lr.ph42.1076
  store i32 9, i32* @blockSize100k, align 4
  br label %2657

; <label>:2641:                                   ; preds = %.lr.ph42.1076
  store i32 8, i32* @blockSize100k, align 4
  br label %2657

; <label>:2642:                                   ; preds = %.lr.ph42.1076
  store i32 7, i32* @blockSize100k, align 4
  br label %2657

; <label>:2643:                                   ; preds = %.lr.ph42.1076
  store i32 6, i32* @blockSize100k, align 4
  br label %2657

; <label>:2644:                                   ; preds = %.lr.ph42.1076
  store i32 5, i32* @blockSize100k, align 4
  br label %2657

; <label>:2645:                                   ; preds = %.lr.ph42.1076
  store i32 4, i32* @blockSize100k, align 4
  br label %2657

; <label>:2646:                                   ; preds = %.lr.ph42.1076
  store i32 3, i32* @blockSize100k, align 4
  br label %2657

; <label>:2647:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @blockSize100k, align 4
  br label %2657

; <label>:2648:                                   ; preds = %.lr.ph42.1076
  store i32 1, i32* @blockSize100k, align 4
  br label %2657

; <label>:2649:                                   ; preds = %.lr.ph42.1076
  store i8 0, i8* @noisy, align 1
  br label %2657

; <label>:2650:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @smallMode, align 1
  br label %2657

; <label>:2651:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @keepInputFiles, align 1
  br label %2657

; <label>:2652:                                   ; preds = %.lr.ph42.1076
  store i32 3, i32* @opMode, align 4
  br label %2657

; <label>:2653:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @forceOverwrite, align 1
  br label %2657

; <label>:2654:                                   ; preds = %.lr.ph42.1076
  store i32 1, i32* @opMode, align 4
  br label %2657

; <label>:2655:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @opMode, align 4
  br label %2657

; <label>:2656:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @srcMode, align 4
  br label %2657

; <label>:2657:                                   ; preds = %2656, %2655, %2654, %2653, %2652, %2651, %2650, %2649, %2648, %2647, %2646, %2645, %2644, %2643, %2642, %2641, %2640, %2639, %2636
  call void @__loop_iteration_test___4()
  %2658 = load i8*, i8** %157, align 8
  %scevgep2.1077 = getelementptr i8, i8* %2658, i64 2
  %scevgep3.1078 = getelementptr i8, i8* %scevgep2.1077, i64 10
  %2659 = load i8, i8* %scevgep3.1078, align 1
  %2660 = sext i8 %2659 to i32
  %2661 = icmp ne i32 %2660, 0
  br i1 %2661, label %.lr.ph42.1183, label %._crit_edge43.loopexit

.lr.ph42.1183:                                    ; preds = %2657
  call void @unroll_loop(i32 4)
  %2662 = load i8*, i8** %163, align 8
  %scevgep.1181 = getelementptr i8, i8* %2662, i64 1
  %scevgep1.1182 = getelementptr i8, i8* %scevgep.1181, i64 11
  %2663 = load i8, i8* %scevgep1.1182, align 1
  %2664 = sext i8 %2663 to i32
  switch i32 %2664, label %.loopexit1 [
    i32 99, label %2685
    i32 100, label %2684
    i32 122, label %2683
    i32 102, label %2682
    i32 116, label %2681
    i32 107, label %2680
    i32 115, label %2679
    i32 113, label %2678
    i32 49, label %2677
    i32 50, label %2676
    i32 51, label %2675
    i32 52, label %2674
    i32 53, label %2673
    i32 54, label %2672
    i32 55, label %2671
    i32 56, label %2670
    i32 57, label %2669
    i32 86, label %2668
    i32 76, label %2668
    i32 118, label %2665
    i32 104, label %.loopexit2
  ]

; <label>:2665:                                   ; preds = %.lr.ph42.1183
  %2666 = load i32, i32* @verbosity, align 4
  %2667 = add nsw i32 %2666, 1
  store i32 %2667, i32* @verbosity, align 4
  br label %2686

; <label>:2668:                                   ; preds = %.lr.ph42.1183, %.lr.ph42.1183
  call void @license()
  br label %2686

; <label>:2669:                                   ; preds = %.lr.ph42.1183
  store i32 9, i32* @blockSize100k, align 4
  br label %2686

; <label>:2670:                                   ; preds = %.lr.ph42.1183
  store i32 8, i32* @blockSize100k, align 4
  br label %2686

; <label>:2671:                                   ; preds = %.lr.ph42.1183
  store i32 7, i32* @blockSize100k, align 4
  br label %2686

; <label>:2672:                                   ; preds = %.lr.ph42.1183
  store i32 6, i32* @blockSize100k, align 4
  br label %2686

; <label>:2673:                                   ; preds = %.lr.ph42.1183
  store i32 5, i32* @blockSize100k, align 4
  br label %2686

; <label>:2674:                                   ; preds = %.lr.ph42.1183
  store i32 4, i32* @blockSize100k, align 4
  br label %2686

; <label>:2675:                                   ; preds = %.lr.ph42.1183
  store i32 3, i32* @blockSize100k, align 4
  br label %2686

; <label>:2676:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @blockSize100k, align 4
  br label %2686

; <label>:2677:                                   ; preds = %.lr.ph42.1183
  store i32 1, i32* @blockSize100k, align 4
  br label %2686

; <label>:2678:                                   ; preds = %.lr.ph42.1183
  store i8 0, i8* @noisy, align 1
  br label %2686

; <label>:2679:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @smallMode, align 1
  br label %2686

; <label>:2680:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @keepInputFiles, align 1
  br label %2686

; <label>:2681:                                   ; preds = %.lr.ph42.1183
  store i32 3, i32* @opMode, align 4
  br label %2686

; <label>:2682:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @forceOverwrite, align 1
  br label %2686

; <label>:2683:                                   ; preds = %.lr.ph42.1183
  store i32 1, i32* @opMode, align 4
  br label %2686

; <label>:2684:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @opMode, align 4
  br label %2686

; <label>:2685:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @srcMode, align 4
  br label %2686

; <label>:2686:                                   ; preds = %2685, %2684, %2683, %2682, %2681, %2680, %2679, %2678, %2677, %2676, %2675, %2674, %2673, %2672, %2671, %2670, %2669, %2668, %2665
  call void @__loop_iteration_test___4()
  %2687 = load i8*, i8** %157, align 8
  %scevgep2.1184 = getelementptr i8, i8* %2687, i64 2
  %scevgep3.1185 = getelementptr i8, i8* %scevgep2.1184, i64 11
  %2688 = load i8, i8* %scevgep3.1185, align 1
  %2689 = sext i8 %2688 to i32
  %2690 = icmp ne i32 %2689, 0
  br i1 %2690, label %.lr.ph42.1290, label %._crit_edge43.loopexit

.lr.ph42.1290:                                    ; preds = %2686
  call void @unroll_loop(i32 4)
  %2691 = load i8*, i8** %163, align 8
  %scevgep.1288 = getelementptr i8, i8* %2691, i64 1
  %scevgep1.1289 = getelementptr i8, i8* %scevgep.1288, i64 12
  %2692 = load i8, i8* %scevgep1.1289, align 1
  %2693 = sext i8 %2692 to i32
  switch i32 %2693, label %.loopexit1 [
    i32 99, label %2714
    i32 100, label %2713
    i32 122, label %2712
    i32 102, label %2711
    i32 116, label %2710
    i32 107, label %2709
    i32 115, label %2708
    i32 113, label %2707
    i32 49, label %2706
    i32 50, label %2705
    i32 51, label %2704
    i32 52, label %2703
    i32 53, label %2702
    i32 54, label %2701
    i32 55, label %2700
    i32 56, label %2699
    i32 57, label %2698
    i32 86, label %2697
    i32 76, label %2697
    i32 118, label %2694
    i32 104, label %.loopexit2
  ]

; <label>:2694:                                   ; preds = %.lr.ph42.1290
  %2695 = load i32, i32* @verbosity, align 4
  %2696 = add nsw i32 %2695, 1
  store i32 %2696, i32* @verbosity, align 4
  br label %2715

; <label>:2697:                                   ; preds = %.lr.ph42.1290, %.lr.ph42.1290
  call void @license()
  br label %2715

; <label>:2698:                                   ; preds = %.lr.ph42.1290
  store i32 9, i32* @blockSize100k, align 4
  br label %2715

; <label>:2699:                                   ; preds = %.lr.ph42.1290
  store i32 8, i32* @blockSize100k, align 4
  br label %2715

; <label>:2700:                                   ; preds = %.lr.ph42.1290
  store i32 7, i32* @blockSize100k, align 4
  br label %2715

; <label>:2701:                                   ; preds = %.lr.ph42.1290
  store i32 6, i32* @blockSize100k, align 4
  br label %2715

; <label>:2702:                                   ; preds = %.lr.ph42.1290
  store i32 5, i32* @blockSize100k, align 4
  br label %2715

; <label>:2703:                                   ; preds = %.lr.ph42.1290
  store i32 4, i32* @blockSize100k, align 4
  br label %2715

; <label>:2704:                                   ; preds = %.lr.ph42.1290
  store i32 3, i32* @blockSize100k, align 4
  br label %2715

; <label>:2705:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @blockSize100k, align 4
  br label %2715

; <label>:2706:                                   ; preds = %.lr.ph42.1290
  store i32 1, i32* @blockSize100k, align 4
  br label %2715

; <label>:2707:                                   ; preds = %.lr.ph42.1290
  store i8 0, i8* @noisy, align 1
  br label %2715

; <label>:2708:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @smallMode, align 1
  br label %2715

; <label>:2709:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @keepInputFiles, align 1
  br label %2715

; <label>:2710:                                   ; preds = %.lr.ph42.1290
  store i32 3, i32* @opMode, align 4
  br label %2715

; <label>:2711:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @forceOverwrite, align 1
  br label %2715

; <label>:2712:                                   ; preds = %.lr.ph42.1290
  store i32 1, i32* @opMode, align 4
  br label %2715

; <label>:2713:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @opMode, align 4
  br label %2715

; <label>:2714:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @srcMode, align 4
  br label %2715

; <label>:2715:                                   ; preds = %2714, %2713, %2712, %2711, %2710, %2709, %2708, %2707, %2706, %2705, %2704, %2703, %2702, %2701, %2700, %2699, %2698, %2697, %2694
  call void @__loop_iteration_test___4()
  %2716 = load i8*, i8** %157, align 8
  %scevgep2.1291 = getelementptr i8, i8* %2716, i64 2
  %scevgep3.1292 = getelementptr i8, i8* %scevgep2.1291, i64 12
  %2717 = load i8, i8* %scevgep3.1292, align 1
  %2718 = sext i8 %2717 to i32
  %2719 = icmp ne i32 %2718, 0
  br i1 %2719, label %.lr.ph42.1397, label %._crit_edge43.loopexit

.lr.ph42.1397:                                    ; preds = %2715
  call void @unroll_loop(i32 4)
  %2720 = load i8*, i8** %163, align 8
  %scevgep.1395 = getelementptr i8, i8* %2720, i64 1
  %scevgep1.1396 = getelementptr i8, i8* %scevgep.1395, i64 13
  %2721 = load i8, i8* %scevgep1.1396, align 1
  %2722 = sext i8 %2721 to i32
  switch i32 %2722, label %.loopexit1 [
    i32 99, label %2743
    i32 100, label %2742
    i32 122, label %2741
    i32 102, label %2740
    i32 116, label %2739
    i32 107, label %2738
    i32 115, label %2737
    i32 113, label %2736
    i32 49, label %2735
    i32 50, label %2734
    i32 51, label %2733
    i32 52, label %2732
    i32 53, label %2731
    i32 54, label %2730
    i32 55, label %2729
    i32 56, label %2728
    i32 57, label %2727
    i32 86, label %2726
    i32 76, label %2726
    i32 118, label %2723
    i32 104, label %.loopexit2
  ]

; <label>:2723:                                   ; preds = %.lr.ph42.1397
  %2724 = load i32, i32* @verbosity, align 4
  %2725 = add nsw i32 %2724, 1
  store i32 %2725, i32* @verbosity, align 4
  br label %2744

; <label>:2726:                                   ; preds = %.lr.ph42.1397, %.lr.ph42.1397
  call void @license()
  br label %2744

; <label>:2727:                                   ; preds = %.lr.ph42.1397
  store i32 9, i32* @blockSize100k, align 4
  br label %2744

; <label>:2728:                                   ; preds = %.lr.ph42.1397
  store i32 8, i32* @blockSize100k, align 4
  br label %2744

; <label>:2729:                                   ; preds = %.lr.ph42.1397
  store i32 7, i32* @blockSize100k, align 4
  br label %2744

; <label>:2730:                                   ; preds = %.lr.ph42.1397
  store i32 6, i32* @blockSize100k, align 4
  br label %2744

; <label>:2731:                                   ; preds = %.lr.ph42.1397
  store i32 5, i32* @blockSize100k, align 4
  br label %2744

; <label>:2732:                                   ; preds = %.lr.ph42.1397
  store i32 4, i32* @blockSize100k, align 4
  br label %2744

; <label>:2733:                                   ; preds = %.lr.ph42.1397
  store i32 3, i32* @blockSize100k, align 4
  br label %2744

; <label>:2734:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @blockSize100k, align 4
  br label %2744

; <label>:2735:                                   ; preds = %.lr.ph42.1397
  store i32 1, i32* @blockSize100k, align 4
  br label %2744

; <label>:2736:                                   ; preds = %.lr.ph42.1397
  store i8 0, i8* @noisy, align 1
  br label %2744

; <label>:2737:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @smallMode, align 1
  br label %2744

; <label>:2738:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @keepInputFiles, align 1
  br label %2744

; <label>:2739:                                   ; preds = %.lr.ph42.1397
  store i32 3, i32* @opMode, align 4
  br label %2744

; <label>:2740:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @forceOverwrite, align 1
  br label %2744

; <label>:2741:                                   ; preds = %.lr.ph42.1397
  store i32 1, i32* @opMode, align 4
  br label %2744

; <label>:2742:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @opMode, align 4
  br label %2744

; <label>:2743:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @srcMode, align 4
  br label %2744

; <label>:2744:                                   ; preds = %2743, %2742, %2741, %2740, %2739, %2738, %2737, %2736, %2735, %2734, %2733, %2732, %2731, %2730, %2729, %2728, %2727, %2726, %2723
  call void @__loop_iteration_test___4()
  %2745 = load i8*, i8** %157, align 8
  %scevgep2.1398 = getelementptr i8, i8* %2745, i64 2
  %scevgep3.1399 = getelementptr i8, i8* %scevgep2.1398, i64 13
  %2746 = load i8, i8* %scevgep3.1399, align 1
  %2747 = sext i8 %2746 to i32
  %2748 = icmp ne i32 %2747, 0
  br i1 %2748, label %.lr.ph42.14104, label %._crit_edge43.loopexit

.lr.ph42.14104:                                   ; preds = %2744
  call void @unroll_loop(i32 4)
  %2749 = load i8*, i8** %163, align 8
  %scevgep.14102 = getelementptr i8, i8* %2749, i64 1
  %scevgep1.14103 = getelementptr i8, i8* %scevgep.14102, i64 14
  %2750 = load i8, i8* %scevgep1.14103, align 1
  %2751 = sext i8 %2750 to i32
  switch i32 %2751, label %.loopexit1 [
    i32 99, label %2772
    i32 100, label %2771
    i32 122, label %2770
    i32 102, label %2769
    i32 116, label %2768
    i32 107, label %2767
    i32 115, label %2766
    i32 113, label %2765
    i32 49, label %2764
    i32 50, label %2763
    i32 51, label %2762
    i32 52, label %2761
    i32 53, label %2760
    i32 54, label %2759
    i32 55, label %2758
    i32 56, label %2757
    i32 57, label %2756
    i32 86, label %2755
    i32 76, label %2755
    i32 118, label %2752
    i32 104, label %.loopexit2
  ]

; <label>:2752:                                   ; preds = %.lr.ph42.14104
  %2753 = load i32, i32* @verbosity, align 4
  %2754 = add nsw i32 %2753, 1
  store i32 %2754, i32* @verbosity, align 4
  br label %2773

; <label>:2755:                                   ; preds = %.lr.ph42.14104, %.lr.ph42.14104
  call void @license()
  br label %2773

; <label>:2756:                                   ; preds = %.lr.ph42.14104
  store i32 9, i32* @blockSize100k, align 4
  br label %2773

; <label>:2757:                                   ; preds = %.lr.ph42.14104
  store i32 8, i32* @blockSize100k, align 4
  br label %2773

; <label>:2758:                                   ; preds = %.lr.ph42.14104
  store i32 7, i32* @blockSize100k, align 4
  br label %2773

; <label>:2759:                                   ; preds = %.lr.ph42.14104
  store i32 6, i32* @blockSize100k, align 4
  br label %2773

; <label>:2760:                                   ; preds = %.lr.ph42.14104
  store i32 5, i32* @blockSize100k, align 4
  br label %2773

; <label>:2761:                                   ; preds = %.lr.ph42.14104
  store i32 4, i32* @blockSize100k, align 4
  br label %2773

; <label>:2762:                                   ; preds = %.lr.ph42.14104
  store i32 3, i32* @blockSize100k, align 4
  br label %2773

; <label>:2763:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @blockSize100k, align 4
  br label %2773

; <label>:2764:                                   ; preds = %.lr.ph42.14104
  store i32 1, i32* @blockSize100k, align 4
  br label %2773

; <label>:2765:                                   ; preds = %.lr.ph42.14104
  store i8 0, i8* @noisy, align 1
  br label %2773

; <label>:2766:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @smallMode, align 1
  br label %2773

; <label>:2767:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @keepInputFiles, align 1
  br label %2773

; <label>:2768:                                   ; preds = %.lr.ph42.14104
  store i32 3, i32* @opMode, align 4
  br label %2773

; <label>:2769:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @forceOverwrite, align 1
  br label %2773

; <label>:2770:                                   ; preds = %.lr.ph42.14104
  store i32 1, i32* @opMode, align 4
  br label %2773

; <label>:2771:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @opMode, align 4
  br label %2773

; <label>:2772:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @srcMode, align 4
  br label %2773

; <label>:2773:                                   ; preds = %2772, %2771, %2770, %2769, %2768, %2767, %2766, %2765, %2764, %2763, %2762, %2761, %2760, %2759, %2758, %2757, %2756, %2755, %2752
  call void @__loop_iteration_test___4()
  %2774 = load i8*, i8** %157, align 8
  %scevgep2.14105 = getelementptr i8, i8* %2774, i64 2
  %scevgep3.14106 = getelementptr i8, i8* %scevgep2.14105, i64 14
  %2775 = load i8, i8* %scevgep3.14106, align 1
  %2776 = sext i8 %2775 to i32
  %2777 = icmp ne i32 %2776, 0
  br i1 %2777, label %.lr.ph42.15111, label %._crit_edge43.loopexit

.lr.ph42.15111:                                   ; preds = %2773
  call void @unroll_loop(i32 4)
  %2778 = load i8*, i8** %163, align 8
  %scevgep.15109 = getelementptr i8, i8* %2778, i64 1
  %scevgep1.15110 = getelementptr i8, i8* %scevgep.15109, i64 15
  %2779 = load i8, i8* %scevgep1.15110, align 1
  %2780 = sext i8 %2779 to i32
  switch i32 %2780, label %.loopexit1 [
    i32 99, label %2801
    i32 100, label %2800
    i32 122, label %2799
    i32 102, label %2798
    i32 116, label %2797
    i32 107, label %2796
    i32 115, label %2795
    i32 113, label %2794
    i32 49, label %2793
    i32 50, label %2792
    i32 51, label %2791
    i32 52, label %2790
    i32 53, label %2789
    i32 54, label %2788
    i32 55, label %2787
    i32 56, label %2786
    i32 57, label %2785
    i32 86, label %2784
    i32 76, label %2784
    i32 118, label %2781
    i32 104, label %.loopexit2
  ]

; <label>:2781:                                   ; preds = %.lr.ph42.15111
  %2782 = load i32, i32* @verbosity, align 4
  %2783 = add nsw i32 %2782, 1
  store i32 %2783, i32* @verbosity, align 4
  br label %2802

; <label>:2784:                                   ; preds = %.lr.ph42.15111, %.lr.ph42.15111
  call void @license()
  br label %2802

; <label>:2785:                                   ; preds = %.lr.ph42.15111
  store i32 9, i32* @blockSize100k, align 4
  br label %2802

; <label>:2786:                                   ; preds = %.lr.ph42.15111
  store i32 8, i32* @blockSize100k, align 4
  br label %2802

; <label>:2787:                                   ; preds = %.lr.ph42.15111
  store i32 7, i32* @blockSize100k, align 4
  br label %2802

; <label>:2788:                                   ; preds = %.lr.ph42.15111
  store i32 6, i32* @blockSize100k, align 4
  br label %2802

; <label>:2789:                                   ; preds = %.lr.ph42.15111
  store i32 5, i32* @blockSize100k, align 4
  br label %2802

; <label>:2790:                                   ; preds = %.lr.ph42.15111
  store i32 4, i32* @blockSize100k, align 4
  br label %2802

; <label>:2791:                                   ; preds = %.lr.ph42.15111
  store i32 3, i32* @blockSize100k, align 4
  br label %2802

; <label>:2792:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @blockSize100k, align 4
  br label %2802

; <label>:2793:                                   ; preds = %.lr.ph42.15111
  store i32 1, i32* @blockSize100k, align 4
  br label %2802

; <label>:2794:                                   ; preds = %.lr.ph42.15111
  store i8 0, i8* @noisy, align 1
  br label %2802

; <label>:2795:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @smallMode, align 1
  br label %2802

; <label>:2796:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @keepInputFiles, align 1
  br label %2802

; <label>:2797:                                   ; preds = %.lr.ph42.15111
  store i32 3, i32* @opMode, align 4
  br label %2802

; <label>:2798:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @forceOverwrite, align 1
  br label %2802

; <label>:2799:                                   ; preds = %.lr.ph42.15111
  store i32 1, i32* @opMode, align 4
  br label %2802

; <label>:2800:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @opMode, align 4
  br label %2802

; <label>:2801:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @srcMode, align 4
  br label %2802

; <label>:2802:                                   ; preds = %2801, %2800, %2799, %2798, %2797, %2796, %2795, %2794, %2793, %2792, %2791, %2790, %2789, %2788, %2787, %2786, %2785, %2784, %2781
  call void @__loop_iteration_test___4()
  %2803 = load i8*, i8** %157, align 8
  %scevgep2.15112 = getelementptr i8, i8* %2803, i64 2
  %scevgep3.15113 = getelementptr i8, i8* %scevgep2.15112, i64 15
  %2804 = load i8, i8* %scevgep3.15113, align 1
  %2805 = sext i8 %2804 to i32
  %2806 = icmp ne i32 %2805, 0
  br i1 %2806, label %.lr.ph42.16118, label %._crit_edge43.loopexit

.lr.ph42.16118:                                   ; preds = %2802
  call void @unroll_loop(i32 4)
  %2807 = load i8*, i8** %163, align 8
  %scevgep.16116 = getelementptr i8, i8* %2807, i64 1
  %scevgep1.16117 = getelementptr i8, i8* %scevgep.16116, i64 16
  %2808 = load i8, i8* %scevgep1.16117, align 1
  %2809 = sext i8 %2808 to i32
  switch i32 %2809, label %.loopexit1 [
    i32 99, label %2830
    i32 100, label %2829
    i32 122, label %2828
    i32 102, label %2827
    i32 116, label %2826
    i32 107, label %2825
    i32 115, label %2824
    i32 113, label %2823
    i32 49, label %2822
    i32 50, label %2821
    i32 51, label %2820
    i32 52, label %2819
    i32 53, label %2818
    i32 54, label %2817
    i32 55, label %2816
    i32 56, label %2815
    i32 57, label %2814
    i32 86, label %2813
    i32 76, label %2813
    i32 118, label %2810
    i32 104, label %.loopexit2
  ]

; <label>:2810:                                   ; preds = %.lr.ph42.16118
  %2811 = load i32, i32* @verbosity, align 4
  %2812 = add nsw i32 %2811, 1
  store i32 %2812, i32* @verbosity, align 4
  br label %2831

; <label>:2813:                                   ; preds = %.lr.ph42.16118, %.lr.ph42.16118
  call void @license()
  br label %2831

; <label>:2814:                                   ; preds = %.lr.ph42.16118
  store i32 9, i32* @blockSize100k, align 4
  br label %2831

; <label>:2815:                                   ; preds = %.lr.ph42.16118
  store i32 8, i32* @blockSize100k, align 4
  br label %2831

; <label>:2816:                                   ; preds = %.lr.ph42.16118
  store i32 7, i32* @blockSize100k, align 4
  br label %2831

; <label>:2817:                                   ; preds = %.lr.ph42.16118
  store i32 6, i32* @blockSize100k, align 4
  br label %2831

; <label>:2818:                                   ; preds = %.lr.ph42.16118
  store i32 5, i32* @blockSize100k, align 4
  br label %2831

; <label>:2819:                                   ; preds = %.lr.ph42.16118
  store i32 4, i32* @blockSize100k, align 4
  br label %2831

; <label>:2820:                                   ; preds = %.lr.ph42.16118
  store i32 3, i32* @blockSize100k, align 4
  br label %2831

; <label>:2821:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @blockSize100k, align 4
  br label %2831

; <label>:2822:                                   ; preds = %.lr.ph42.16118
  store i32 1, i32* @blockSize100k, align 4
  br label %2831

; <label>:2823:                                   ; preds = %.lr.ph42.16118
  store i8 0, i8* @noisy, align 1
  br label %2831

; <label>:2824:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @smallMode, align 1
  br label %2831

; <label>:2825:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @keepInputFiles, align 1
  br label %2831

; <label>:2826:                                   ; preds = %.lr.ph42.16118
  store i32 3, i32* @opMode, align 4
  br label %2831

; <label>:2827:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @forceOverwrite, align 1
  br label %2831

; <label>:2828:                                   ; preds = %.lr.ph42.16118
  store i32 1, i32* @opMode, align 4
  br label %2831

; <label>:2829:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @opMode, align 4
  br label %2831

; <label>:2830:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @srcMode, align 4
  br label %2831

; <label>:2831:                                   ; preds = %2830, %2829, %2828, %2827, %2826, %2825, %2824, %2823, %2822, %2821, %2820, %2819, %2818, %2817, %2816, %2815, %2814, %2813, %2810
  call void @__loop_iteration_test___4()
  %2832 = load i8*, i8** %157, align 8
  %scevgep2.16119 = getelementptr i8, i8* %2832, i64 2
  %scevgep3.16120 = getelementptr i8, i8* %scevgep2.16119, i64 16
  %2833 = load i8, i8* %scevgep3.16120, align 1
  %2834 = sext i8 %2833 to i32
  %2835 = icmp ne i32 %2834, 0
  br i1 %2835, label %.lr.ph42.17125, label %._crit_edge43.loopexit

.lr.ph42.17125:                                   ; preds = %2831
  call void @unroll_loop(i32 4)
  %2836 = load i8*, i8** %163, align 8
  %scevgep.17123 = getelementptr i8, i8* %2836, i64 1
  %scevgep1.17124 = getelementptr i8, i8* %scevgep.17123, i64 17
  %2837 = load i8, i8* %scevgep1.17124, align 1
  %2838 = sext i8 %2837 to i32
  switch i32 %2838, label %.loopexit1 [
    i32 99, label %2859
    i32 100, label %2858
    i32 122, label %2857
    i32 102, label %2856
    i32 116, label %2855
    i32 107, label %2854
    i32 115, label %2853
    i32 113, label %2852
    i32 49, label %2851
    i32 50, label %2850
    i32 51, label %2849
    i32 52, label %2848
    i32 53, label %2847
    i32 54, label %2846
    i32 55, label %2845
    i32 56, label %2844
    i32 57, label %2843
    i32 86, label %2842
    i32 76, label %2842
    i32 118, label %2839
    i32 104, label %.loopexit2
  ]

; <label>:2839:                                   ; preds = %.lr.ph42.17125
  %2840 = load i32, i32* @verbosity, align 4
  %2841 = add nsw i32 %2840, 1
  store i32 %2841, i32* @verbosity, align 4
  br label %2860

; <label>:2842:                                   ; preds = %.lr.ph42.17125, %.lr.ph42.17125
  call void @license()
  br label %2860

; <label>:2843:                                   ; preds = %.lr.ph42.17125
  store i32 9, i32* @blockSize100k, align 4
  br label %2860

; <label>:2844:                                   ; preds = %.lr.ph42.17125
  store i32 8, i32* @blockSize100k, align 4
  br label %2860

; <label>:2845:                                   ; preds = %.lr.ph42.17125
  store i32 7, i32* @blockSize100k, align 4
  br label %2860

; <label>:2846:                                   ; preds = %.lr.ph42.17125
  store i32 6, i32* @blockSize100k, align 4
  br label %2860

; <label>:2847:                                   ; preds = %.lr.ph42.17125
  store i32 5, i32* @blockSize100k, align 4
  br label %2860

; <label>:2848:                                   ; preds = %.lr.ph42.17125
  store i32 4, i32* @blockSize100k, align 4
  br label %2860

; <label>:2849:                                   ; preds = %.lr.ph42.17125
  store i32 3, i32* @blockSize100k, align 4
  br label %2860

; <label>:2850:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @blockSize100k, align 4
  br label %2860

; <label>:2851:                                   ; preds = %.lr.ph42.17125
  store i32 1, i32* @blockSize100k, align 4
  br label %2860

; <label>:2852:                                   ; preds = %.lr.ph42.17125
  store i8 0, i8* @noisy, align 1
  br label %2860

; <label>:2853:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @smallMode, align 1
  br label %2860

; <label>:2854:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @keepInputFiles, align 1
  br label %2860

; <label>:2855:                                   ; preds = %.lr.ph42.17125
  store i32 3, i32* @opMode, align 4
  br label %2860

; <label>:2856:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @forceOverwrite, align 1
  br label %2860

; <label>:2857:                                   ; preds = %.lr.ph42.17125
  store i32 1, i32* @opMode, align 4
  br label %2860

; <label>:2858:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @opMode, align 4
  br label %2860

; <label>:2859:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @srcMode, align 4
  br label %2860

; <label>:2860:                                   ; preds = %2859, %2858, %2857, %2856, %2855, %2854, %2853, %2852, %2851, %2850, %2849, %2848, %2847, %2846, %2845, %2844, %2843, %2842, %2839
  call void @__loop_iteration_test___4()
  %2861 = load i8*, i8** %157, align 8
  %scevgep2.17126 = getelementptr i8, i8* %2861, i64 2
  %scevgep3.17127 = getelementptr i8, i8* %scevgep2.17126, i64 17
  %2862 = load i8, i8* %scevgep3.17127, align 1
  %2863 = sext i8 %2862 to i32
  %2864 = icmp ne i32 %2863, 0
  br i1 %2864, label %.lr.ph42.18132, label %._crit_edge43.loopexit

.lr.ph42.18132:                                   ; preds = %2860
  call void @unroll_loop(i32 4)
  %2865 = load i8*, i8** %163, align 8
  %scevgep.18130 = getelementptr i8, i8* %2865, i64 1
  %scevgep1.18131 = getelementptr i8, i8* %scevgep.18130, i64 18
  %2866 = load i8, i8* %scevgep1.18131, align 1
  %2867 = sext i8 %2866 to i32
  switch i32 %2867, label %.loopexit1 [
    i32 99, label %2888
    i32 100, label %2887
    i32 122, label %2886
    i32 102, label %2885
    i32 116, label %2884
    i32 107, label %2883
    i32 115, label %2882
    i32 113, label %2881
    i32 49, label %2880
    i32 50, label %2879
    i32 51, label %2878
    i32 52, label %2877
    i32 53, label %2876
    i32 54, label %2875
    i32 55, label %2874
    i32 56, label %2873
    i32 57, label %2872
    i32 86, label %2871
    i32 76, label %2871
    i32 118, label %2868
    i32 104, label %.loopexit2
  ]

; <label>:2868:                                   ; preds = %.lr.ph42.18132
  %2869 = load i32, i32* @verbosity, align 4
  %2870 = add nsw i32 %2869, 1
  store i32 %2870, i32* @verbosity, align 4
  br label %2889

; <label>:2871:                                   ; preds = %.lr.ph42.18132, %.lr.ph42.18132
  call void @license()
  br label %2889

; <label>:2872:                                   ; preds = %.lr.ph42.18132
  store i32 9, i32* @blockSize100k, align 4
  br label %2889

; <label>:2873:                                   ; preds = %.lr.ph42.18132
  store i32 8, i32* @blockSize100k, align 4
  br label %2889

; <label>:2874:                                   ; preds = %.lr.ph42.18132
  store i32 7, i32* @blockSize100k, align 4
  br label %2889

; <label>:2875:                                   ; preds = %.lr.ph42.18132
  store i32 6, i32* @blockSize100k, align 4
  br label %2889

; <label>:2876:                                   ; preds = %.lr.ph42.18132
  store i32 5, i32* @blockSize100k, align 4
  br label %2889

; <label>:2877:                                   ; preds = %.lr.ph42.18132
  store i32 4, i32* @blockSize100k, align 4
  br label %2889

; <label>:2878:                                   ; preds = %.lr.ph42.18132
  store i32 3, i32* @blockSize100k, align 4
  br label %2889

; <label>:2879:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @blockSize100k, align 4
  br label %2889

; <label>:2880:                                   ; preds = %.lr.ph42.18132
  store i32 1, i32* @blockSize100k, align 4
  br label %2889

; <label>:2881:                                   ; preds = %.lr.ph42.18132
  store i8 0, i8* @noisy, align 1
  br label %2889

; <label>:2882:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @smallMode, align 1
  br label %2889

; <label>:2883:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @keepInputFiles, align 1
  br label %2889

; <label>:2884:                                   ; preds = %.lr.ph42.18132
  store i32 3, i32* @opMode, align 4
  br label %2889

; <label>:2885:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @forceOverwrite, align 1
  br label %2889

; <label>:2886:                                   ; preds = %.lr.ph42.18132
  store i32 1, i32* @opMode, align 4
  br label %2889

; <label>:2887:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @opMode, align 4
  br label %2889

; <label>:2888:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @srcMode, align 4
  br label %2889

; <label>:2889:                                   ; preds = %2888, %2887, %2886, %2885, %2884, %2883, %2882, %2881, %2880, %2879, %2878, %2877, %2876, %2875, %2874, %2873, %2872, %2871, %2868
  call void @__loop_iteration_test___4()
  %2890 = load i8*, i8** %157, align 8
  %scevgep2.18133 = getelementptr i8, i8* %2890, i64 2
  %scevgep3.18134 = getelementptr i8, i8* %scevgep2.18133, i64 18
  %2891 = load i8, i8* %scevgep3.18134, align 1
  %2892 = sext i8 %2891 to i32
  %2893 = icmp ne i32 %2892, 0
  br i1 %2893, label %.lr.ph42.19139, label %._crit_edge43.loopexit

.lr.ph42.19139:                                   ; preds = %2889
  call void @unroll_loop(i32 4)
  %2894 = load i8*, i8** %163, align 8
  %scevgep.19137 = getelementptr i8, i8* %2894, i64 1
  %scevgep1.19138 = getelementptr i8, i8* %scevgep.19137, i64 19
  %2895 = load i8, i8* %scevgep1.19138, align 1
  %2896 = sext i8 %2895 to i32
  switch i32 %2896, label %.loopexit1 [
    i32 99, label %2917
    i32 100, label %2916
    i32 122, label %2915
    i32 102, label %2914
    i32 116, label %2913
    i32 107, label %2912
    i32 115, label %2911
    i32 113, label %2910
    i32 49, label %2909
    i32 50, label %2908
    i32 51, label %2907
    i32 52, label %2906
    i32 53, label %2905
    i32 54, label %2904
    i32 55, label %2903
    i32 56, label %2902
    i32 57, label %2901
    i32 86, label %2900
    i32 76, label %2900
    i32 118, label %2897
    i32 104, label %.loopexit2
  ]

; <label>:2897:                                   ; preds = %.lr.ph42.19139
  %2898 = load i32, i32* @verbosity, align 4
  %2899 = add nsw i32 %2898, 1
  store i32 %2899, i32* @verbosity, align 4
  br label %2918

; <label>:2900:                                   ; preds = %.lr.ph42.19139, %.lr.ph42.19139
  call void @license()
  br label %2918

; <label>:2901:                                   ; preds = %.lr.ph42.19139
  store i32 9, i32* @blockSize100k, align 4
  br label %2918

; <label>:2902:                                   ; preds = %.lr.ph42.19139
  store i32 8, i32* @blockSize100k, align 4
  br label %2918

; <label>:2903:                                   ; preds = %.lr.ph42.19139
  store i32 7, i32* @blockSize100k, align 4
  br label %2918

; <label>:2904:                                   ; preds = %.lr.ph42.19139
  store i32 6, i32* @blockSize100k, align 4
  br label %2918

; <label>:2905:                                   ; preds = %.lr.ph42.19139
  store i32 5, i32* @blockSize100k, align 4
  br label %2918

; <label>:2906:                                   ; preds = %.lr.ph42.19139
  store i32 4, i32* @blockSize100k, align 4
  br label %2918

; <label>:2907:                                   ; preds = %.lr.ph42.19139
  store i32 3, i32* @blockSize100k, align 4
  br label %2918

; <label>:2908:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @blockSize100k, align 4
  br label %2918

; <label>:2909:                                   ; preds = %.lr.ph42.19139
  store i32 1, i32* @blockSize100k, align 4
  br label %2918

; <label>:2910:                                   ; preds = %.lr.ph42.19139
  store i8 0, i8* @noisy, align 1
  br label %2918

; <label>:2911:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @smallMode, align 1
  br label %2918

; <label>:2912:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @keepInputFiles, align 1
  br label %2918

; <label>:2913:                                   ; preds = %.lr.ph42.19139
  store i32 3, i32* @opMode, align 4
  br label %2918

; <label>:2914:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @forceOverwrite, align 1
  br label %2918

; <label>:2915:                                   ; preds = %.lr.ph42.19139
  store i32 1, i32* @opMode, align 4
  br label %2918

; <label>:2916:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @opMode, align 4
  br label %2918

; <label>:2917:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @srcMode, align 4
  br label %2918

; <label>:2918:                                   ; preds = %2917, %2916, %2915, %2914, %2913, %2912, %2911, %2910, %2909, %2908, %2907, %2906, %2905, %2904, %2903, %2902, %2901, %2900, %2897
  call void @__loop_iteration_test___4()
  %2919 = load i8*, i8** %157, align 8
  %scevgep2.19140 = getelementptr i8, i8* %2919, i64 2
  %scevgep3.19141 = getelementptr i8, i8* %scevgep2.19140, i64 19
  %2920 = load i8, i8* %scevgep3.19141, align 1
  %2921 = sext i8 %2920 to i32
  br label %._crit_edge43.loopexit

.lr.ph39.1:                                       ; preds = %370
  call void @unroll_loop(i32 5)
  %2922 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2923 = load i8*, i8** %2922, align 8
  %2924 = getelementptr [10 x i8], [10 x i8]* @56, i64 0, i64 0
  %2925 = getelementptr [3 x i8], [3 x i8]* @57, i64 0, i64 0
  %2926 = call i32 @strcmp(i8* %2924, i8* %2925) #10
  %2927 = icmp eq i32 1, 0
  br i1 false, label %.loopexit.loopexit, label %2928

; <label>:2928:                                   ; preds = %.lr.ph39.1
  %2929 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2930 = load i8*, i8** %2929, align 8
  %2931 = getelementptr [10 x i8], [10 x i8]* @58, i64 0, i64 0
  %2932 = getelementptr [9 x i8], [9 x i8]* @59, i64 0, i64 0
  %2933 = call i32 @strcmp(i8* %2931, i8* %2932) #10
  %2934 = icmp eq i32 1, 0
  br i1 false, label %3071, label %2935

; <label>:2935:                                   ; preds = %2928
  %2936 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2937 = load i8*, i8** %2936, align 8
  %2938 = getelementptr [10 x i8], [10 x i8]* @60, i64 0, i64 0
  %2939 = getelementptr [13 x i8], [13 x i8]* @61, i64 0, i64 0
  %2940 = call i32 @strcmp(i8* %2938, i8* %2939) #10
  %2941 = icmp eq i32 1, 0
  br i1 false, label %3070, label %2942

; <label>:2942:                                   ; preds = %2935
  %2943 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2944 = load i8*, i8** %2943, align 8
  %2945 = getelementptr [10 x i8], [10 x i8]* @62, i64 0, i64 0
  %2946 = getelementptr [11 x i8], [11 x i8]* @63, i64 0, i64 0
  %2947 = call i32 @strcmp(i8* %2945, i8* %2946) #10
  %2948 = icmp eq i32 1, 0
  br i1 false, label %3069, label %2949

; <label>:2949:                                   ; preds = %2942
  %2950 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2951 = load i8*, i8** %2950, align 8
  %2952 = getelementptr [10 x i8], [10 x i8]* @64, i64 0, i64 0
  %2953 = getelementptr [8 x i8], [8 x i8]* @65, i64 0, i64 0
  %2954 = call i32 @strcmp(i8* %2952, i8* %2953) #10
  %2955 = icmp eq i32 1, 0
  br i1 false, label %3068, label %2956

; <label>:2956:                                   ; preds = %2949
  %2957 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2958 = load i8*, i8** %2957, align 8
  %2959 = getelementptr [10 x i8], [10 x i8]* @66, i64 0, i64 0
  %2960 = getelementptr [7 x i8], [7 x i8]* @67, i64 0, i64 0
  %2961 = call i32 @strcmp(i8* %2959, i8* %2960) #10
  %2962 = icmp eq i32 1, 0
  br i1 false, label %3067, label %2963

; <label>:2963:                                   ; preds = %2956
  %2964 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2965 = load i8*, i8** %2964, align 8
  %2966 = getelementptr [10 x i8], [10 x i8]* @68, i64 0, i64 0
  %2967 = getelementptr [7 x i8], [7 x i8]* @69, i64 0, i64 0
  %2968 = call i32 @strcmp(i8* %2966, i8* %2967) #10
  %2969 = icmp eq i32 1, 0
  br i1 false, label %3066, label %2970

; <label>:2970:                                   ; preds = %2963
  %2971 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2972 = load i8*, i8** %2971, align 8
  %2973 = getelementptr [10 x i8], [10 x i8]* @70, i64 0, i64 0
  %2974 = getelementptr [8 x i8], [8 x i8]* @71, i64 0, i64 0
  %2975 = call i32 @strcmp(i8* %2973, i8* %2974) #10
  %2976 = icmp eq i32 1, 0
  br i1 false, label %3065, label %2977

; <label>:2977:                                   ; preds = %2970
  %2978 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2979 = load i8*, i8** %2978, align 8
  %2980 = getelementptr [10 x i8], [10 x i8]* @72, i64 0, i64 0
  %2981 = getelementptr [8 x i8], [8 x i8]* @73, i64 0, i64 0
  %2982 = call i32 @strcmp(i8* %2980, i8* %2981) #10
  %2983 = icmp eq i32 1, 0
  br i1 false, label %3064, label %2984

; <label>:2984:                                   ; preds = %2977
  %2985 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2986 = load i8*, i8** %2985, align 8
  %2987 = getelementptr [10 x i8], [10 x i8]* @74, i64 0, i64 0
  %2988 = getelementptr [10 x i8], [10 x i8]* @75, i64 0, i64 0
  %2989 = call i32 @strcmp(i8* %2987, i8* %2988) #10
  %2990 = icmp eq i32 1, 0
  br i1 false, label %3063, label %2991

; <label>:2991:                                   ; preds = %2984
  %2992 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2993 = load i8*, i8** %2992, align 8
  %2994 = getelementptr [10 x i8], [10 x i8]* @76, i64 0, i64 0
  %2995 = getelementptr [10 x i8], [10 x i8]* @77, i64 0, i64 0
  %2996 = call i32 @strcmp(i8* %2994, i8* %2995) #10
  %2997 = icmp eq i32 1, 0
  br i1 false, label %3062, label %2998

; <label>:2998:                                   ; preds = %2991
  %2999 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3000 = load i8*, i8** %2999, align 8
  %3001 = getelementptr [10 x i8], [10 x i8]* @78, i64 0, i64 0
  %3002 = getelementptr [14 x i8], [14 x i8]* @79, i64 0, i64 0
  %3003 = call i32 @strcmp(i8* %3001, i8* %3002) #10
  %3004 = icmp eq i32 1, 0
  br i1 false, label %3061, label %3005

; <label>:3005:                                   ; preds = %2998
  %3006 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3007 = load i8*, i8** %3006, align 8
  %3008 = getelementptr [10 x i8], [10 x i8]* @80, i64 0, i64 0
  %3009 = getelementptr [18 x i8], [18 x i8]* @81, i64 0, i64 0
  %3010 = call i32 @strcmp(i8* %3008, i8* %3009) #10
  %3011 = icmp eq i32 1, 0
  %3012 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3013 = load i8*, i8** %3012, align 8
  br i1 false, label %3060, label %3014

; <label>:3014:                                   ; preds = %3005
  %3015 = getelementptr [10 x i8], [10 x i8]* @82, i64 0, i64 0
  %3016 = getelementptr [18 x i8], [18 x i8]* @83, i64 0, i64 0
  %3017 = call i32 @strcmp(i8* %3015, i8* %3016) #10
  %3018 = icmp eq i32 1, 0
  %3019 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3020 = load i8*, i8** %3019, align 8
  br i1 false, label %3059, label %3021

; <label>:3021:                                   ; preds = %3014
  %3022 = getelementptr [10 x i8], [10 x i8]* @84, i64 0, i64 0
  %3023 = getelementptr [7 x i8], [7 x i8]* @85, i64 0, i64 0
  %3024 = call i32 @strcmp(i8* %3022, i8* %3023) #10
  %3025 = icmp eq i32 1, 0
  br i1 false, label %3058, label %3026

; <label>:3026:                                   ; preds = %3021
  %3027 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3028 = load i8*, i8** %3027, align 8
  %3029 = getelementptr [10 x i8], [10 x i8]* @86, i64 0, i64 0
  %3030 = getelementptr [7 x i8], [7 x i8]* @87, i64 0, i64 0
  %3031 = call i32 @strcmp(i8* %3029, i8* %3030) #10
  %3032 = icmp eq i32 1, 0
  br i1 false, label %3057, label %3033

; <label>:3033:                                   ; preds = %3026
  %3034 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3035 = load i8*, i8** %3034, align 8
  %3036 = getelementptr [10 x i8], [10 x i8]* @88, i64 0, i64 0
  %3037 = getelementptr [10 x i8], [10 x i8]* @89, i64 0, i64 0
  %3038 = call i32 @strcmp(i8* %3036, i8* %3037) #10
  %3039 = icmp eq i32 1, 0
  br i1 false, label %3054, label %3040

; <label>:3040:                                   ; preds = %3033
  %3041 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3042 = load i8*, i8** %3041, align 8
  %3043 = getelementptr [10 x i8], [10 x i8]* @90, i64 0, i64 0
  %3044 = getelementptr [7 x i8], [7 x i8]* @91, i64 0, i64 0
  %3045 = call i32 @strcmp(i8* %3043, i8* %3044) #10
  %3046 = icmp eq i32 1, 0
  br i1 false, label %353, label %3047

; <label>:3047:                                   ; preds = %3040
  %3048 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3049 = load i8*, i8** %3048, align 8
  %3050 = getelementptr [10 x i8], [10 x i8]* @92, i64 0, i64 0
  %3051 = getelementptr [3 x i8], [3 x i8]* @93, i64 0, i64 0
  %3052 = call i32 @strncmp(i8* %3050, i8* %3051, i64 2) #10
  %3053 = icmp eq i32 1, 0
  br i1 false, label %362, label %3072

; <label>:3054:                                   ; preds = %3033
  %3055 = load i32, i32* @verbosity, align 4
  %3056 = add nsw i32 %3055, 1
  store i32 %3056, i32* @verbosity, align 4
  br label %3072

; <label>:3057:                                   ; preds = %3026
  store i32 9, i32* @blockSize100k, align 4
  br label %3072

; <label>:3058:                                   ; preds = %3021
  store i32 1, i32* @blockSize100k, align 4
  br label %3072

; <label>:3059:                                   ; preds = %3014
  call void @redundant(i8* %3020)
  br label %3072

; <label>:3060:                                   ; preds = %3005
  call void @redundant(i8* %3013)
  br label %3072

; <label>:3061:                                   ; preds = %2998
  store i32 1, i32* @workFactor, align 4
  br label %3072

; <label>:3062:                                   ; preds = %2991
  call void @license()
  br label %3072

; <label>:3063:                                   ; preds = %2984
  call void @license()
  br label %3072

; <label>:3064:                                   ; preds = %2977
  store i8 0, i8* @noisy, align 1
  br label %3072

; <label>:3065:                                   ; preds = %2970
  store i8 1, i8* @smallMode, align 1
  br label %3072

; <label>:3066:                                   ; preds = %2963
  store i8 1, i8* @keepInputFiles, align 1
  br label %3072

; <label>:3067:                                   ; preds = %2956
  store i32 3, i32* @opMode, align 4
  br label %3072

; <label>:3068:                                   ; preds = %2949
  store i8 1, i8* @forceOverwrite, align 1
  br label %3072

; <label>:3069:                                   ; preds = %2942
  store i32 1, i32* @opMode, align 4
  br label %3072

; <label>:3070:                                   ; preds = %2935
  store i32 2, i32* @opMode, align 4
  br label %3072

; <label>:3071:                                   ; preds = %2928
  store i32 2, i32* @srcMode, align 4
  br label %3072

; <label>:3072:                                   ; preds = %3071, %3070, %3069, %3068, %3067, %3066, %3065, %3064, %3063, %3062, %3061, %3060, %3059, %3058, %3057, %3054, %3047
  call void @__loop_iteration_test___5()
  %3073 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 1
  %3074 = load %struct.zzzz*, %struct.zzzz** %3073, align 8
  %3075 = icmp ne i64 0, 0
  %3076 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph39.2, label %.loopexit.loopexit

.lr.ph39.2:                                       ; preds = %3072
  call void @unroll_loop(i32 5)
  %3077 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3078 = load i8*, i8** %3077, align 8
  %3079 = call i32 @strcmp(i8* %3078, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3080 = icmp eq i32 %3079, 0
  br i1 %3080, label %.loopexit.loopexit, label %3081

; <label>:3081:                                   ; preds = %.lr.ph39.2
  %3082 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3083 = load i8*, i8** %3082, align 8
  %3084 = call i32 @strcmp(i8* %3083, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3085 = icmp eq i32 %3084, 0
  br i1 %3085, label %3188, label %3086

; <label>:3086:                                   ; preds = %3081
  %3087 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3088 = load i8*, i8** %3087, align 8
  %3089 = call i32 @strcmp(i8* %3088, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3090 = icmp eq i32 %3089, 0
  br i1 %3090, label %3187, label %3091

; <label>:3091:                                   ; preds = %3086
  %3092 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3093 = load i8*, i8** %3092, align 8
  %3094 = call i32 @strcmp(i8* %3093, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3095 = icmp eq i32 %3094, 0
  br i1 %3095, label %3186, label %3096

; <label>:3096:                                   ; preds = %3091
  %3097 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3098 = load i8*, i8** %3097, align 8
  %3099 = call i32 @strcmp(i8* %3098, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3100 = icmp eq i32 %3099, 0
  br i1 %3100, label %3185, label %3101

; <label>:3101:                                   ; preds = %3096
  %3102 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3103 = load i8*, i8** %3102, align 8
  %3104 = call i32 @strcmp(i8* %3103, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3105 = icmp eq i32 %3104, 0
  br i1 %3105, label %3184, label %3106

; <label>:3106:                                   ; preds = %3101
  %3107 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3108 = load i8*, i8** %3107, align 8
  %3109 = call i32 @strcmp(i8* %3108, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3110 = icmp eq i32 %3109, 0
  br i1 %3110, label %3183, label %3111

; <label>:3111:                                   ; preds = %3106
  %3112 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3113 = load i8*, i8** %3112, align 8
  %3114 = call i32 @strcmp(i8* %3113, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3115 = icmp eq i32 %3114, 0
  br i1 %3115, label %3182, label %3116

; <label>:3116:                                   ; preds = %3111
  %3117 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3118 = load i8*, i8** %3117, align 8
  %3119 = call i32 @strcmp(i8* %3118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3120 = icmp eq i32 %3119, 0
  br i1 %3120, label %3181, label %3121

; <label>:3121:                                   ; preds = %3116
  %3122 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3123 = load i8*, i8** %3122, align 8
  %3124 = call i32 @strcmp(i8* %3123, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3125 = icmp eq i32 %3124, 0
  br i1 %3125, label %3180, label %3126

; <label>:3126:                                   ; preds = %3121
  %3127 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3128 = load i8*, i8** %3127, align 8
  %3129 = call i32 @strcmp(i8* %3128, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3130 = icmp eq i32 %3129, 0
  br i1 %3130, label %3179, label %3131

; <label>:3131:                                   ; preds = %3126
  %3132 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3133 = load i8*, i8** %3132, align 8
  %3134 = call i32 @strcmp(i8* %3133, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3135 = icmp eq i32 %3134, 0
  br i1 %3135, label %3178, label %3136

; <label>:3136:                                   ; preds = %3131
  %3137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3138 = load i8*, i8** %3137, align 8
  %3139 = call i32 @strcmp(i8* %3138, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3140 = icmp eq i32 %3139, 0
  %3141 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3142 = load i8*, i8** %3141, align 8
  br i1 %3140, label %3177, label %3143

; <label>:3143:                                   ; preds = %3136
  %3144 = call i32 @strcmp(i8* %3142, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3145 = icmp eq i32 %3144, 0
  %3146 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3147 = load i8*, i8** %3146, align 8
  br i1 %3145, label %3176, label %3148

; <label>:3148:                                   ; preds = %3143
  %3149 = call i32 @strcmp(i8* %3147, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3150 = icmp eq i32 %3149, 0
  br i1 %3150, label %3175, label %3151

; <label>:3151:                                   ; preds = %3148
  %3152 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3153 = load i8*, i8** %3152, align 8
  %3154 = call i32 @strcmp(i8* %3153, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3155 = icmp eq i32 %3154, 0
  br i1 %3155, label %3174, label %3156

; <label>:3156:                                   ; preds = %3151
  %3157 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3158 = load i8*, i8** %3157, align 8
  %3159 = call i32 @strcmp(i8* %3158, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3160 = icmp eq i32 %3159, 0
  br i1 %3160, label %3171, label %3161

; <label>:3161:                                   ; preds = %3156
  %3162 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3163 = load i8*, i8** %3162, align 8
  %3164 = call i32 @strcmp(i8* %3163, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3165 = icmp eq i32 %3164, 0
  br i1 %3165, label %353, label %3166

; <label>:3166:                                   ; preds = %3161
  %3167 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3168 = load i8*, i8** %3167, align 8
  %3169 = call i32 @strncmp(i8* %3168, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3170 = icmp eq i32 %3169, 0
  br i1 %3170, label %362, label %3189

; <label>:3171:                                   ; preds = %3156
  %3172 = load i32, i32* @verbosity, align 4
  %3173 = add nsw i32 %3172, 1
  store i32 %3173, i32* @verbosity, align 4
  br label %3189

; <label>:3174:                                   ; preds = %3151
  store i32 9, i32* @blockSize100k, align 4
  br label %3189

; <label>:3175:                                   ; preds = %3148
  store i32 1, i32* @blockSize100k, align 4
  br label %3189

; <label>:3176:                                   ; preds = %3143
  call void @redundant(i8* %3147)
  br label %3189

; <label>:3177:                                   ; preds = %3136
  call void @redundant(i8* %3142)
  br label %3189

; <label>:3178:                                   ; preds = %3131
  store i32 1, i32* @workFactor, align 4
  br label %3189

; <label>:3179:                                   ; preds = %3126
  call void @license()
  br label %3189

; <label>:3180:                                   ; preds = %3121
  call void @license()
  br label %3189

; <label>:3181:                                   ; preds = %3116
  store i8 0, i8* @noisy, align 1
  br label %3189

; <label>:3182:                                   ; preds = %3111
  store i8 1, i8* @smallMode, align 1
  br label %3189

; <label>:3183:                                   ; preds = %3106
  store i8 1, i8* @keepInputFiles, align 1
  br label %3189

; <label>:3184:                                   ; preds = %3101
  store i32 3, i32* @opMode, align 4
  br label %3189

; <label>:3185:                                   ; preds = %3096
  store i8 1, i8* @forceOverwrite, align 1
  br label %3189

; <label>:3186:                                   ; preds = %3091
  store i32 1, i32* @opMode, align 4
  br label %3189

; <label>:3187:                                   ; preds = %3086
  store i32 2, i32* @opMode, align 4
  br label %3189

; <label>:3188:                                   ; preds = %3081
  store i32 2, i32* @srcMode, align 4
  br label %3189

; <label>:3189:                                   ; preds = %3188, %3187, %3186, %3185, %3184, %3183, %3182, %3181, %3180, %3179, %3178, %3177, %3176, %3175, %3174, %3171, %3166
  call void @__loop_iteration_test___5()
  %3190 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %3191 = load %struct.zzzz*, %struct.zzzz** %3190, align 8
  %3192 = icmp ne %struct.zzzz* %3191, null
  br i1 %3192, label %.lr.ph39.3, label %.loopexit.loopexit

.lr.ph39.3:                                       ; preds = %3189
  call void @unroll_loop(i32 5)
  %3193 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3194 = load i8*, i8** %3193, align 8
  %3195 = call i32 @strcmp(i8* %3194, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3196 = icmp eq i32 %3195, 0
  br i1 %3196, label %.loopexit.loopexit, label %3197

; <label>:3197:                                   ; preds = %.lr.ph39.3
  %3198 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3199 = load i8*, i8** %3198, align 8
  %3200 = call i32 @strcmp(i8* %3199, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3201 = icmp eq i32 %3200, 0
  br i1 %3201, label %3304, label %3202

; <label>:3202:                                   ; preds = %3197
  %3203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3204 = load i8*, i8** %3203, align 8
  %3205 = call i32 @strcmp(i8* %3204, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3206 = icmp eq i32 %3205, 0
  br i1 %3206, label %3303, label %3207

; <label>:3207:                                   ; preds = %3202
  %3208 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3209 = load i8*, i8** %3208, align 8
  %3210 = call i32 @strcmp(i8* %3209, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3211 = icmp eq i32 %3210, 0
  br i1 %3211, label %3302, label %3212

; <label>:3212:                                   ; preds = %3207
  %3213 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3214 = load i8*, i8** %3213, align 8
  %3215 = call i32 @strcmp(i8* %3214, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3216 = icmp eq i32 %3215, 0
  br i1 %3216, label %3301, label %3217

; <label>:3217:                                   ; preds = %3212
  %3218 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3219 = load i8*, i8** %3218, align 8
  %3220 = call i32 @strcmp(i8* %3219, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3221 = icmp eq i32 %3220, 0
  br i1 %3221, label %3300, label %3222

; <label>:3222:                                   ; preds = %3217
  %3223 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3224 = load i8*, i8** %3223, align 8
  %3225 = call i32 @strcmp(i8* %3224, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3226 = icmp eq i32 %3225, 0
  br i1 %3226, label %3299, label %3227

; <label>:3227:                                   ; preds = %3222
  %3228 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3229 = load i8*, i8** %3228, align 8
  %3230 = call i32 @strcmp(i8* %3229, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3231 = icmp eq i32 %3230, 0
  br i1 %3231, label %3298, label %3232

; <label>:3232:                                   ; preds = %3227
  %3233 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3234 = load i8*, i8** %3233, align 8
  %3235 = call i32 @strcmp(i8* %3234, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3236 = icmp eq i32 %3235, 0
  br i1 %3236, label %3297, label %3237

; <label>:3237:                                   ; preds = %3232
  %3238 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3239 = load i8*, i8** %3238, align 8
  %3240 = call i32 @strcmp(i8* %3239, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3241 = icmp eq i32 %3240, 0
  br i1 %3241, label %3296, label %3242

; <label>:3242:                                   ; preds = %3237
  %3243 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3244 = load i8*, i8** %3243, align 8
  %3245 = call i32 @strcmp(i8* %3244, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3246 = icmp eq i32 %3245, 0
  br i1 %3246, label %3295, label %3247

; <label>:3247:                                   ; preds = %3242
  %3248 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3249 = load i8*, i8** %3248, align 8
  %3250 = call i32 @strcmp(i8* %3249, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3251 = icmp eq i32 %3250, 0
  br i1 %3251, label %3294, label %3252

; <label>:3252:                                   ; preds = %3247
  %3253 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3254 = load i8*, i8** %3253, align 8
  %3255 = call i32 @strcmp(i8* %3254, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3256 = icmp eq i32 %3255, 0
  %3257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3258 = load i8*, i8** %3257, align 8
  br i1 %3256, label %3293, label %3259

; <label>:3259:                                   ; preds = %3252
  %3260 = call i32 @strcmp(i8* %3258, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3261 = icmp eq i32 %3260, 0
  %3262 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3263 = load i8*, i8** %3262, align 8
  br i1 %3261, label %3292, label %3264

; <label>:3264:                                   ; preds = %3259
  %3265 = call i32 @strcmp(i8* %3263, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3266 = icmp eq i32 %3265, 0
  br i1 %3266, label %3291, label %3267

; <label>:3267:                                   ; preds = %3264
  %3268 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3269 = load i8*, i8** %3268, align 8
  %3270 = call i32 @strcmp(i8* %3269, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3271 = icmp eq i32 %3270, 0
  br i1 %3271, label %3290, label %3272

; <label>:3272:                                   ; preds = %3267
  %3273 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3274 = load i8*, i8** %3273, align 8
  %3275 = call i32 @strcmp(i8* %3274, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3276 = icmp eq i32 %3275, 0
  br i1 %3276, label %3287, label %3277

; <label>:3277:                                   ; preds = %3272
  %3278 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3279 = load i8*, i8** %3278, align 8
  %3280 = call i32 @strcmp(i8* %3279, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3281 = icmp eq i32 %3280, 0
  br i1 %3281, label %353, label %3282

; <label>:3282:                                   ; preds = %3277
  %3283 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 0
  %3284 = load i8*, i8** %3283, align 8
  %3285 = call i32 @strncmp(i8* %3284, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3286 = icmp eq i32 %3285, 0
  br i1 %3286, label %362, label %3305

; <label>:3287:                                   ; preds = %3272
  %3288 = load i32, i32* @verbosity, align 4
  %3289 = add nsw i32 %3288, 1
  store i32 %3289, i32* @verbosity, align 4
  br label %3305

; <label>:3290:                                   ; preds = %3267
  store i32 9, i32* @blockSize100k, align 4
  br label %3305

; <label>:3291:                                   ; preds = %3264
  store i32 1, i32* @blockSize100k, align 4
  br label %3305

; <label>:3292:                                   ; preds = %3259
  call void @redundant(i8* %3263)
  br label %3305

; <label>:3293:                                   ; preds = %3252
  call void @redundant(i8* %3258)
  br label %3305

; <label>:3294:                                   ; preds = %3247
  store i32 1, i32* @workFactor, align 4
  br label %3305

; <label>:3295:                                   ; preds = %3242
  call void @license()
  br label %3305

; <label>:3296:                                   ; preds = %3237
  call void @license()
  br label %3305

; <label>:3297:                                   ; preds = %3232
  store i8 0, i8* @noisy, align 1
  br label %3305

; <label>:3298:                                   ; preds = %3227
  store i8 1, i8* @smallMode, align 1
  br label %3305

; <label>:3299:                                   ; preds = %3222
  store i8 1, i8* @keepInputFiles, align 1
  br label %3305

; <label>:3300:                                   ; preds = %3217
  store i32 3, i32* @opMode, align 4
  br label %3305

; <label>:3301:                                   ; preds = %3212
  store i8 1, i8* @forceOverwrite, align 1
  br label %3305

; <label>:3302:                                   ; preds = %3207
  store i32 1, i32* @opMode, align 4
  br label %3305

; <label>:3303:                                   ; preds = %3202
  store i32 2, i32* @opMode, align 4
  br label %3305

; <label>:3304:                                   ; preds = %3197
  store i32 2, i32* @srcMode, align 4
  br label %3305

; <label>:3305:                                   ; preds = %3304, %3303, %3302, %3301, %3300, %3299, %3298, %3297, %3296, %3295, %3294, %3293, %3292, %3291, %3290, %3287, %3282
  call void @__loop_iteration_test___5()
  %3306 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3191, i32 0, i32 1
  %3307 = load %struct.zzzz*, %struct.zzzz** %3306, align 8
  %3308 = icmp ne %struct.zzzz* %3307, null
  br i1 %3308, label %.lr.ph39.4, label %.loopexit.loopexit

.lr.ph39.4:                                       ; preds = %3305
  call void @unroll_loop(i32 5)
  %3309 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3310 = load i8*, i8** %3309, align 8
  %3311 = call i32 @strcmp(i8* %3310, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3312 = icmp eq i32 %3311, 0
  br i1 %3312, label %.loopexit.loopexit, label %3313

; <label>:3313:                                   ; preds = %.lr.ph39.4
  %3314 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3315 = load i8*, i8** %3314, align 8
  %3316 = call i32 @strcmp(i8* %3315, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3317 = icmp eq i32 %3316, 0
  br i1 %3317, label %3420, label %3318

; <label>:3318:                                   ; preds = %3313
  %3319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3320 = load i8*, i8** %3319, align 8
  %3321 = call i32 @strcmp(i8* %3320, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3322 = icmp eq i32 %3321, 0
  br i1 %3322, label %3419, label %3323

; <label>:3323:                                   ; preds = %3318
  %3324 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3325 = load i8*, i8** %3324, align 8
  %3326 = call i32 @strcmp(i8* %3325, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3327 = icmp eq i32 %3326, 0
  br i1 %3327, label %3418, label %3328

; <label>:3328:                                   ; preds = %3323
  %3329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3330 = load i8*, i8** %3329, align 8
  %3331 = call i32 @strcmp(i8* %3330, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3332 = icmp eq i32 %3331, 0
  br i1 %3332, label %3417, label %3333

; <label>:3333:                                   ; preds = %3328
  %3334 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3335 = load i8*, i8** %3334, align 8
  %3336 = call i32 @strcmp(i8* %3335, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3337 = icmp eq i32 %3336, 0
  br i1 %3337, label %3416, label %3338

; <label>:3338:                                   ; preds = %3333
  %3339 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3340 = load i8*, i8** %3339, align 8
  %3341 = call i32 @strcmp(i8* %3340, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3342 = icmp eq i32 %3341, 0
  br i1 %3342, label %3415, label %3343

; <label>:3343:                                   ; preds = %3338
  %3344 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3345 = load i8*, i8** %3344, align 8
  %3346 = call i32 @strcmp(i8* %3345, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3347 = icmp eq i32 %3346, 0
  br i1 %3347, label %3414, label %3348

; <label>:3348:                                   ; preds = %3343
  %3349 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3350 = load i8*, i8** %3349, align 8
  %3351 = call i32 @strcmp(i8* %3350, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3352 = icmp eq i32 %3351, 0
  br i1 %3352, label %3413, label %3353

; <label>:3353:                                   ; preds = %3348
  %3354 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3355 = load i8*, i8** %3354, align 8
  %3356 = call i32 @strcmp(i8* %3355, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3357 = icmp eq i32 %3356, 0
  br i1 %3357, label %3412, label %3358

; <label>:3358:                                   ; preds = %3353
  %3359 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3360 = load i8*, i8** %3359, align 8
  %3361 = call i32 @strcmp(i8* %3360, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3362 = icmp eq i32 %3361, 0
  br i1 %3362, label %3411, label %3363

; <label>:3363:                                   ; preds = %3358
  %3364 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3365 = load i8*, i8** %3364, align 8
  %3366 = call i32 @strcmp(i8* %3365, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3367 = icmp eq i32 %3366, 0
  br i1 %3367, label %3410, label %3368

; <label>:3368:                                   ; preds = %3363
  %3369 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3370 = load i8*, i8** %3369, align 8
  %3371 = call i32 @strcmp(i8* %3370, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3372 = icmp eq i32 %3371, 0
  %3373 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3374 = load i8*, i8** %3373, align 8
  br i1 %3372, label %3409, label %3375

; <label>:3375:                                   ; preds = %3368
  %3376 = call i32 @strcmp(i8* %3374, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3377 = icmp eq i32 %3376, 0
  %3378 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3379 = load i8*, i8** %3378, align 8
  br i1 %3377, label %3408, label %3380

; <label>:3380:                                   ; preds = %3375
  %3381 = call i32 @strcmp(i8* %3379, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3382 = icmp eq i32 %3381, 0
  br i1 %3382, label %3407, label %3383

; <label>:3383:                                   ; preds = %3380
  %3384 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3385 = load i8*, i8** %3384, align 8
  %3386 = call i32 @strcmp(i8* %3385, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3387 = icmp eq i32 %3386, 0
  br i1 %3387, label %3406, label %3388

; <label>:3388:                                   ; preds = %3383
  %3389 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3390 = load i8*, i8** %3389, align 8
  %3391 = call i32 @strcmp(i8* %3390, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3392 = icmp eq i32 %3391, 0
  br i1 %3392, label %3403, label %3393

; <label>:3393:                                   ; preds = %3388
  %3394 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3395 = load i8*, i8** %3394, align 8
  %3396 = call i32 @strcmp(i8* %3395, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3397 = icmp eq i32 %3396, 0
  br i1 %3397, label %353, label %3398

; <label>:3398:                                   ; preds = %3393
  %3399 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 0
  %3400 = load i8*, i8** %3399, align 8
  %3401 = call i32 @strncmp(i8* %3400, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3402 = icmp eq i32 %3401, 0
  br i1 %3402, label %362, label %3421

; <label>:3403:                                   ; preds = %3388
  %3404 = load i32, i32* @verbosity, align 4
  %3405 = add nsw i32 %3404, 1
  store i32 %3405, i32* @verbosity, align 4
  br label %3421

; <label>:3406:                                   ; preds = %3383
  store i32 9, i32* @blockSize100k, align 4
  br label %3421

; <label>:3407:                                   ; preds = %3380
  store i32 1, i32* @blockSize100k, align 4
  br label %3421

; <label>:3408:                                   ; preds = %3375
  call void @redundant(i8* %3379)
  br label %3421

; <label>:3409:                                   ; preds = %3368
  call void @redundant(i8* %3374)
  br label %3421

; <label>:3410:                                   ; preds = %3363
  store i32 1, i32* @workFactor, align 4
  br label %3421

; <label>:3411:                                   ; preds = %3358
  call void @license()
  br label %3421

; <label>:3412:                                   ; preds = %3353
  call void @license()
  br label %3421

; <label>:3413:                                   ; preds = %3348
  store i8 0, i8* @noisy, align 1
  br label %3421

; <label>:3414:                                   ; preds = %3343
  store i8 1, i8* @smallMode, align 1
  br label %3421

; <label>:3415:                                   ; preds = %3338
  store i8 1, i8* @keepInputFiles, align 1
  br label %3421

; <label>:3416:                                   ; preds = %3333
  store i32 3, i32* @opMode, align 4
  br label %3421

; <label>:3417:                                   ; preds = %3328
  store i8 1, i8* @forceOverwrite, align 1
  br label %3421

; <label>:3418:                                   ; preds = %3323
  store i32 1, i32* @opMode, align 4
  br label %3421

; <label>:3419:                                   ; preds = %3318
  store i32 2, i32* @opMode, align 4
  br label %3421

; <label>:3420:                                   ; preds = %3313
  store i32 2, i32* @srcMode, align 4
  br label %3421

; <label>:3421:                                   ; preds = %3420, %3419, %3418, %3417, %3416, %3415, %3414, %3413, %3412, %3411, %3410, %3409, %3408, %3407, %3406, %3403, %3398
  call void @__loop_iteration_test___5()
  %3422 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3307, i32 0, i32 1
  %3423 = load %struct.zzzz*, %struct.zzzz** %3422, align 8
  %3424 = icmp ne %struct.zzzz* %3423, null
  br i1 %3424, label %.lr.ph39.5, label %.loopexit.loopexit

.lr.ph39.5:                                       ; preds = %3421
  call void @unroll_loop(i32 5)
  %3425 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3426 = load i8*, i8** %3425, align 8
  %3427 = call i32 @strcmp(i8* %3426, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3428 = icmp eq i32 %3427, 0
  br i1 %3428, label %.loopexit.loopexit, label %3429

; <label>:3429:                                   ; preds = %.lr.ph39.5
  %3430 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3431 = load i8*, i8** %3430, align 8
  %3432 = call i32 @strcmp(i8* %3431, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3433 = icmp eq i32 %3432, 0
  br i1 %3433, label %3536, label %3434

; <label>:3434:                                   ; preds = %3429
  %3435 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3436 = load i8*, i8** %3435, align 8
  %3437 = call i32 @strcmp(i8* %3436, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3438 = icmp eq i32 %3437, 0
  br i1 %3438, label %3535, label %3439

; <label>:3439:                                   ; preds = %3434
  %3440 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3441 = load i8*, i8** %3440, align 8
  %3442 = call i32 @strcmp(i8* %3441, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3443 = icmp eq i32 %3442, 0
  br i1 %3443, label %3534, label %3444

; <label>:3444:                                   ; preds = %3439
  %3445 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3446 = load i8*, i8** %3445, align 8
  %3447 = call i32 @strcmp(i8* %3446, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3448 = icmp eq i32 %3447, 0
  br i1 %3448, label %3533, label %3449

; <label>:3449:                                   ; preds = %3444
  %3450 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3451 = load i8*, i8** %3450, align 8
  %3452 = call i32 @strcmp(i8* %3451, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3453 = icmp eq i32 %3452, 0
  br i1 %3453, label %3532, label %3454

; <label>:3454:                                   ; preds = %3449
  %3455 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3456 = load i8*, i8** %3455, align 8
  %3457 = call i32 @strcmp(i8* %3456, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3458 = icmp eq i32 %3457, 0
  br i1 %3458, label %3531, label %3459

; <label>:3459:                                   ; preds = %3454
  %3460 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3461 = load i8*, i8** %3460, align 8
  %3462 = call i32 @strcmp(i8* %3461, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3463 = icmp eq i32 %3462, 0
  br i1 %3463, label %3530, label %3464

; <label>:3464:                                   ; preds = %3459
  %3465 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3466 = load i8*, i8** %3465, align 8
  %3467 = call i32 @strcmp(i8* %3466, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3468 = icmp eq i32 %3467, 0
  br i1 %3468, label %3529, label %3469

; <label>:3469:                                   ; preds = %3464
  %3470 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3471 = load i8*, i8** %3470, align 8
  %3472 = call i32 @strcmp(i8* %3471, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3473 = icmp eq i32 %3472, 0
  br i1 %3473, label %3528, label %3474

; <label>:3474:                                   ; preds = %3469
  %3475 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3476 = load i8*, i8** %3475, align 8
  %3477 = call i32 @strcmp(i8* %3476, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3478 = icmp eq i32 %3477, 0
  br i1 %3478, label %3527, label %3479

; <label>:3479:                                   ; preds = %3474
  %3480 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3481 = load i8*, i8** %3480, align 8
  %3482 = call i32 @strcmp(i8* %3481, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3483 = icmp eq i32 %3482, 0
  br i1 %3483, label %3526, label %3484

; <label>:3484:                                   ; preds = %3479
  %3485 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3486 = load i8*, i8** %3485, align 8
  %3487 = call i32 @strcmp(i8* %3486, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3488 = icmp eq i32 %3487, 0
  %3489 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3490 = load i8*, i8** %3489, align 8
  br i1 %3488, label %3525, label %3491

; <label>:3491:                                   ; preds = %3484
  %3492 = call i32 @strcmp(i8* %3490, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3493 = icmp eq i32 %3492, 0
  %3494 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3495 = load i8*, i8** %3494, align 8
  br i1 %3493, label %3524, label %3496

; <label>:3496:                                   ; preds = %3491
  %3497 = call i32 @strcmp(i8* %3495, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3498 = icmp eq i32 %3497, 0
  br i1 %3498, label %3523, label %3499

; <label>:3499:                                   ; preds = %3496
  %3500 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3501 = load i8*, i8** %3500, align 8
  %3502 = call i32 @strcmp(i8* %3501, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3503 = icmp eq i32 %3502, 0
  br i1 %3503, label %3522, label %3504

; <label>:3504:                                   ; preds = %3499
  %3505 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3506 = load i8*, i8** %3505, align 8
  %3507 = call i32 @strcmp(i8* %3506, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3508 = icmp eq i32 %3507, 0
  br i1 %3508, label %3519, label %3509

; <label>:3509:                                   ; preds = %3504
  %3510 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3511 = load i8*, i8** %3510, align 8
  %3512 = call i32 @strcmp(i8* %3511, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3513 = icmp eq i32 %3512, 0
  br i1 %3513, label %353, label %3514

; <label>:3514:                                   ; preds = %3509
  %3515 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 0
  %3516 = load i8*, i8** %3515, align 8
  %3517 = call i32 @strncmp(i8* %3516, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3518 = icmp eq i32 %3517, 0
  br i1 %3518, label %362, label %3537

; <label>:3519:                                   ; preds = %3504
  %3520 = load i32, i32* @verbosity, align 4
  %3521 = add nsw i32 %3520, 1
  store i32 %3521, i32* @verbosity, align 4
  br label %3537

; <label>:3522:                                   ; preds = %3499
  store i32 9, i32* @blockSize100k, align 4
  br label %3537

; <label>:3523:                                   ; preds = %3496
  store i32 1, i32* @blockSize100k, align 4
  br label %3537

; <label>:3524:                                   ; preds = %3491
  call void @redundant(i8* %3495)
  br label %3537

; <label>:3525:                                   ; preds = %3484
  call void @redundant(i8* %3490)
  br label %3537

; <label>:3526:                                   ; preds = %3479
  store i32 1, i32* @workFactor, align 4
  br label %3537

; <label>:3527:                                   ; preds = %3474
  call void @license()
  br label %3537

; <label>:3528:                                   ; preds = %3469
  call void @license()
  br label %3537

; <label>:3529:                                   ; preds = %3464
  store i8 0, i8* @noisy, align 1
  br label %3537

; <label>:3530:                                   ; preds = %3459
  store i8 1, i8* @smallMode, align 1
  br label %3537

; <label>:3531:                                   ; preds = %3454
  store i8 1, i8* @keepInputFiles, align 1
  br label %3537

; <label>:3532:                                   ; preds = %3449
  store i32 3, i32* @opMode, align 4
  br label %3537

; <label>:3533:                                   ; preds = %3444
  store i8 1, i8* @forceOverwrite, align 1
  br label %3537

; <label>:3534:                                   ; preds = %3439
  store i32 1, i32* @opMode, align 4
  br label %3537

; <label>:3535:                                   ; preds = %3434
  store i32 2, i32* @opMode, align 4
  br label %3537

; <label>:3536:                                   ; preds = %3429
  store i32 2, i32* @srcMode, align 4
  br label %3537

; <label>:3537:                                   ; preds = %3536, %3535, %3534, %3533, %3532, %3531, %3530, %3529, %3528, %3527, %3526, %3525, %3524, %3523, %3522, %3519, %3514
  call void @__loop_iteration_test___5()
  %3538 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3423, i32 0, i32 1
  %3539 = load %struct.zzzz*, %struct.zzzz** %3538, align 8
  %3540 = icmp ne %struct.zzzz* %3539, null
  br i1 %3540, label %.lr.ph39.6, label %.loopexit.loopexit

.lr.ph39.6:                                       ; preds = %3537
  call void @unroll_loop(i32 5)
  %3541 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3542 = load i8*, i8** %3541, align 8
  %3543 = call i32 @strcmp(i8* %3542, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3544 = icmp eq i32 %3543, 0
  br i1 %3544, label %.loopexit.loopexit, label %3545

; <label>:3545:                                   ; preds = %.lr.ph39.6
  %3546 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3547 = load i8*, i8** %3546, align 8
  %3548 = call i32 @strcmp(i8* %3547, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3549 = icmp eq i32 %3548, 0
  br i1 %3549, label %3652, label %3550

; <label>:3550:                                   ; preds = %3545
  %3551 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3552 = load i8*, i8** %3551, align 8
  %3553 = call i32 @strcmp(i8* %3552, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3554 = icmp eq i32 %3553, 0
  br i1 %3554, label %3651, label %3555

; <label>:3555:                                   ; preds = %3550
  %3556 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3557 = load i8*, i8** %3556, align 8
  %3558 = call i32 @strcmp(i8* %3557, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3559 = icmp eq i32 %3558, 0
  br i1 %3559, label %3650, label %3560

; <label>:3560:                                   ; preds = %3555
  %3561 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3562 = load i8*, i8** %3561, align 8
  %3563 = call i32 @strcmp(i8* %3562, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3564 = icmp eq i32 %3563, 0
  br i1 %3564, label %3649, label %3565

; <label>:3565:                                   ; preds = %3560
  %3566 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3567 = load i8*, i8** %3566, align 8
  %3568 = call i32 @strcmp(i8* %3567, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3569 = icmp eq i32 %3568, 0
  br i1 %3569, label %3648, label %3570

; <label>:3570:                                   ; preds = %3565
  %3571 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3572 = load i8*, i8** %3571, align 8
  %3573 = call i32 @strcmp(i8* %3572, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3574 = icmp eq i32 %3573, 0
  br i1 %3574, label %3647, label %3575

; <label>:3575:                                   ; preds = %3570
  %3576 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3577 = load i8*, i8** %3576, align 8
  %3578 = call i32 @strcmp(i8* %3577, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3579 = icmp eq i32 %3578, 0
  br i1 %3579, label %3646, label %3580

; <label>:3580:                                   ; preds = %3575
  %3581 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3582 = load i8*, i8** %3581, align 8
  %3583 = call i32 @strcmp(i8* %3582, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3584 = icmp eq i32 %3583, 0
  br i1 %3584, label %3645, label %3585

; <label>:3585:                                   ; preds = %3580
  %3586 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3587 = load i8*, i8** %3586, align 8
  %3588 = call i32 @strcmp(i8* %3587, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3589 = icmp eq i32 %3588, 0
  br i1 %3589, label %3644, label %3590

; <label>:3590:                                   ; preds = %3585
  %3591 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3592 = load i8*, i8** %3591, align 8
  %3593 = call i32 @strcmp(i8* %3592, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3594 = icmp eq i32 %3593, 0
  br i1 %3594, label %3643, label %3595

; <label>:3595:                                   ; preds = %3590
  %3596 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3597 = load i8*, i8** %3596, align 8
  %3598 = call i32 @strcmp(i8* %3597, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3599 = icmp eq i32 %3598, 0
  br i1 %3599, label %3642, label %3600

; <label>:3600:                                   ; preds = %3595
  %3601 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3602 = load i8*, i8** %3601, align 8
  %3603 = call i32 @strcmp(i8* %3602, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3604 = icmp eq i32 %3603, 0
  %3605 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3606 = load i8*, i8** %3605, align 8
  br i1 %3604, label %3641, label %3607

; <label>:3607:                                   ; preds = %3600
  %3608 = call i32 @strcmp(i8* %3606, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3609 = icmp eq i32 %3608, 0
  %3610 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3611 = load i8*, i8** %3610, align 8
  br i1 %3609, label %3640, label %3612

; <label>:3612:                                   ; preds = %3607
  %3613 = call i32 @strcmp(i8* %3611, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3614 = icmp eq i32 %3613, 0
  br i1 %3614, label %3639, label %3615

; <label>:3615:                                   ; preds = %3612
  %3616 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3617 = load i8*, i8** %3616, align 8
  %3618 = call i32 @strcmp(i8* %3617, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3619 = icmp eq i32 %3618, 0
  br i1 %3619, label %3638, label %3620

; <label>:3620:                                   ; preds = %3615
  %3621 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3622 = load i8*, i8** %3621, align 8
  %3623 = call i32 @strcmp(i8* %3622, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3624 = icmp eq i32 %3623, 0
  br i1 %3624, label %3635, label %3625

; <label>:3625:                                   ; preds = %3620
  %3626 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3627 = load i8*, i8** %3626, align 8
  %3628 = call i32 @strcmp(i8* %3627, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3629 = icmp eq i32 %3628, 0
  br i1 %3629, label %353, label %3630

; <label>:3630:                                   ; preds = %3625
  %3631 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 0
  %3632 = load i8*, i8** %3631, align 8
  %3633 = call i32 @strncmp(i8* %3632, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3634 = icmp eq i32 %3633, 0
  br i1 %3634, label %362, label %3653

; <label>:3635:                                   ; preds = %3620
  %3636 = load i32, i32* @verbosity, align 4
  %3637 = add nsw i32 %3636, 1
  store i32 %3637, i32* @verbosity, align 4
  br label %3653

; <label>:3638:                                   ; preds = %3615
  store i32 9, i32* @blockSize100k, align 4
  br label %3653

; <label>:3639:                                   ; preds = %3612
  store i32 1, i32* @blockSize100k, align 4
  br label %3653

; <label>:3640:                                   ; preds = %3607
  call void @redundant(i8* %3611)
  br label %3653

; <label>:3641:                                   ; preds = %3600
  call void @redundant(i8* %3606)
  br label %3653

; <label>:3642:                                   ; preds = %3595
  store i32 1, i32* @workFactor, align 4
  br label %3653

; <label>:3643:                                   ; preds = %3590
  call void @license()
  br label %3653

; <label>:3644:                                   ; preds = %3585
  call void @license()
  br label %3653

; <label>:3645:                                   ; preds = %3580
  store i8 0, i8* @noisy, align 1
  br label %3653

; <label>:3646:                                   ; preds = %3575
  store i8 1, i8* @smallMode, align 1
  br label %3653

; <label>:3647:                                   ; preds = %3570
  store i8 1, i8* @keepInputFiles, align 1
  br label %3653

; <label>:3648:                                   ; preds = %3565
  store i32 3, i32* @opMode, align 4
  br label %3653

; <label>:3649:                                   ; preds = %3560
  store i8 1, i8* @forceOverwrite, align 1
  br label %3653

; <label>:3650:                                   ; preds = %3555
  store i32 1, i32* @opMode, align 4
  br label %3653

; <label>:3651:                                   ; preds = %3550
  store i32 2, i32* @opMode, align 4
  br label %3653

; <label>:3652:                                   ; preds = %3545
  store i32 2, i32* @srcMode, align 4
  br label %3653

; <label>:3653:                                   ; preds = %3652, %3651, %3650, %3649, %3648, %3647, %3646, %3645, %3644, %3643, %3642, %3641, %3640, %3639, %3638, %3635, %3630
  call void @__loop_iteration_test___5()
  %3654 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3539, i32 0, i32 1
  %3655 = load %struct.zzzz*, %struct.zzzz** %3654, align 8
  %3656 = icmp ne %struct.zzzz* %3655, null
  br i1 %3656, label %.lr.ph39.7, label %.loopexit.loopexit

.lr.ph39.7:                                       ; preds = %3653
  call void @unroll_loop(i32 5)
  %3657 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3658 = load i8*, i8** %3657, align 8
  %3659 = call i32 @strcmp(i8* %3658, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3660 = icmp eq i32 %3659, 0
  br i1 %3660, label %.loopexit.loopexit, label %3661

; <label>:3661:                                   ; preds = %.lr.ph39.7
  %3662 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3663 = load i8*, i8** %3662, align 8
  %3664 = call i32 @strcmp(i8* %3663, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3665 = icmp eq i32 %3664, 0
  br i1 %3665, label %3768, label %3666

; <label>:3666:                                   ; preds = %3661
  %3667 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3668 = load i8*, i8** %3667, align 8
  %3669 = call i32 @strcmp(i8* %3668, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3670 = icmp eq i32 %3669, 0
  br i1 %3670, label %3767, label %3671

; <label>:3671:                                   ; preds = %3666
  %3672 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3673 = load i8*, i8** %3672, align 8
  %3674 = call i32 @strcmp(i8* %3673, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3675 = icmp eq i32 %3674, 0
  br i1 %3675, label %3766, label %3676

; <label>:3676:                                   ; preds = %3671
  %3677 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3678 = load i8*, i8** %3677, align 8
  %3679 = call i32 @strcmp(i8* %3678, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3680 = icmp eq i32 %3679, 0
  br i1 %3680, label %3765, label %3681

; <label>:3681:                                   ; preds = %3676
  %3682 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3683 = load i8*, i8** %3682, align 8
  %3684 = call i32 @strcmp(i8* %3683, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3685 = icmp eq i32 %3684, 0
  br i1 %3685, label %3764, label %3686

; <label>:3686:                                   ; preds = %3681
  %3687 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3688 = load i8*, i8** %3687, align 8
  %3689 = call i32 @strcmp(i8* %3688, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3690 = icmp eq i32 %3689, 0
  br i1 %3690, label %3763, label %3691

; <label>:3691:                                   ; preds = %3686
  %3692 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3693 = load i8*, i8** %3692, align 8
  %3694 = call i32 @strcmp(i8* %3693, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3695 = icmp eq i32 %3694, 0
  br i1 %3695, label %3762, label %3696

; <label>:3696:                                   ; preds = %3691
  %3697 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3698 = load i8*, i8** %3697, align 8
  %3699 = call i32 @strcmp(i8* %3698, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3700 = icmp eq i32 %3699, 0
  br i1 %3700, label %3761, label %3701

; <label>:3701:                                   ; preds = %3696
  %3702 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3703 = load i8*, i8** %3702, align 8
  %3704 = call i32 @strcmp(i8* %3703, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3705 = icmp eq i32 %3704, 0
  br i1 %3705, label %3760, label %3706

; <label>:3706:                                   ; preds = %3701
  %3707 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3708 = load i8*, i8** %3707, align 8
  %3709 = call i32 @strcmp(i8* %3708, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3710 = icmp eq i32 %3709, 0
  br i1 %3710, label %3759, label %3711

; <label>:3711:                                   ; preds = %3706
  %3712 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3713 = load i8*, i8** %3712, align 8
  %3714 = call i32 @strcmp(i8* %3713, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3715 = icmp eq i32 %3714, 0
  br i1 %3715, label %3758, label %3716

; <label>:3716:                                   ; preds = %3711
  %3717 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3718 = load i8*, i8** %3717, align 8
  %3719 = call i32 @strcmp(i8* %3718, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3720 = icmp eq i32 %3719, 0
  %3721 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3722 = load i8*, i8** %3721, align 8
  br i1 %3720, label %3757, label %3723

; <label>:3723:                                   ; preds = %3716
  %3724 = call i32 @strcmp(i8* %3722, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3725 = icmp eq i32 %3724, 0
  %3726 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3727 = load i8*, i8** %3726, align 8
  br i1 %3725, label %3756, label %3728

; <label>:3728:                                   ; preds = %3723
  %3729 = call i32 @strcmp(i8* %3727, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3730 = icmp eq i32 %3729, 0
  br i1 %3730, label %3755, label %3731

; <label>:3731:                                   ; preds = %3728
  %3732 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3733 = load i8*, i8** %3732, align 8
  %3734 = call i32 @strcmp(i8* %3733, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3735 = icmp eq i32 %3734, 0
  br i1 %3735, label %3754, label %3736

; <label>:3736:                                   ; preds = %3731
  %3737 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3738 = load i8*, i8** %3737, align 8
  %3739 = call i32 @strcmp(i8* %3738, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3740 = icmp eq i32 %3739, 0
  br i1 %3740, label %3751, label %3741

; <label>:3741:                                   ; preds = %3736
  %3742 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3743 = load i8*, i8** %3742, align 8
  %3744 = call i32 @strcmp(i8* %3743, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3745 = icmp eq i32 %3744, 0
  br i1 %3745, label %353, label %3746

; <label>:3746:                                   ; preds = %3741
  %3747 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 0
  %3748 = load i8*, i8** %3747, align 8
  %3749 = call i32 @strncmp(i8* %3748, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3750 = icmp eq i32 %3749, 0
  br i1 %3750, label %362, label %3769

; <label>:3751:                                   ; preds = %3736
  %3752 = load i32, i32* @verbosity, align 4
  %3753 = add nsw i32 %3752, 1
  store i32 %3753, i32* @verbosity, align 4
  br label %3769

; <label>:3754:                                   ; preds = %3731
  store i32 9, i32* @blockSize100k, align 4
  br label %3769

; <label>:3755:                                   ; preds = %3728
  store i32 1, i32* @blockSize100k, align 4
  br label %3769

; <label>:3756:                                   ; preds = %3723
  call void @redundant(i8* %3727)
  br label %3769

; <label>:3757:                                   ; preds = %3716
  call void @redundant(i8* %3722)
  br label %3769

; <label>:3758:                                   ; preds = %3711
  store i32 1, i32* @workFactor, align 4
  br label %3769

; <label>:3759:                                   ; preds = %3706
  call void @license()
  br label %3769

; <label>:3760:                                   ; preds = %3701
  call void @license()
  br label %3769

; <label>:3761:                                   ; preds = %3696
  store i8 0, i8* @noisy, align 1
  br label %3769

; <label>:3762:                                   ; preds = %3691
  store i8 1, i8* @smallMode, align 1
  br label %3769

; <label>:3763:                                   ; preds = %3686
  store i8 1, i8* @keepInputFiles, align 1
  br label %3769

; <label>:3764:                                   ; preds = %3681
  store i32 3, i32* @opMode, align 4
  br label %3769

; <label>:3765:                                   ; preds = %3676
  store i8 1, i8* @forceOverwrite, align 1
  br label %3769

; <label>:3766:                                   ; preds = %3671
  store i32 1, i32* @opMode, align 4
  br label %3769

; <label>:3767:                                   ; preds = %3666
  store i32 2, i32* @opMode, align 4
  br label %3769

; <label>:3768:                                   ; preds = %3661
  store i32 2, i32* @srcMode, align 4
  br label %3769

; <label>:3769:                                   ; preds = %3768, %3767, %3766, %3765, %3764, %3763, %3762, %3761, %3760, %3759, %3758, %3757, %3756, %3755, %3754, %3751, %3746
  call void @__loop_iteration_test___5()
  %3770 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3655, i32 0, i32 1
  %3771 = load %struct.zzzz*, %struct.zzzz** %3770, align 8
  %3772 = icmp ne %struct.zzzz* %3771, null
  br i1 %3772, label %.lr.ph39.8, label %.loopexit.loopexit

.lr.ph39.8:                                       ; preds = %3769
  call void @unroll_loop(i32 5)
  %3773 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3774 = load i8*, i8** %3773, align 8
  %3775 = call i32 @strcmp(i8* %3774, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3776 = icmp eq i32 %3775, 0
  br i1 %3776, label %.loopexit.loopexit, label %3777

; <label>:3777:                                   ; preds = %.lr.ph39.8
  %3778 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3779 = load i8*, i8** %3778, align 8
  %3780 = call i32 @strcmp(i8* %3779, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3781 = icmp eq i32 %3780, 0
  br i1 %3781, label %3884, label %3782

; <label>:3782:                                   ; preds = %3777
  %3783 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3784 = load i8*, i8** %3783, align 8
  %3785 = call i32 @strcmp(i8* %3784, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3786 = icmp eq i32 %3785, 0
  br i1 %3786, label %3883, label %3787

; <label>:3787:                                   ; preds = %3782
  %3788 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3789 = load i8*, i8** %3788, align 8
  %3790 = call i32 @strcmp(i8* %3789, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3791 = icmp eq i32 %3790, 0
  br i1 %3791, label %3882, label %3792

; <label>:3792:                                   ; preds = %3787
  %3793 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3794 = load i8*, i8** %3793, align 8
  %3795 = call i32 @strcmp(i8* %3794, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3796 = icmp eq i32 %3795, 0
  br i1 %3796, label %3881, label %3797

; <label>:3797:                                   ; preds = %3792
  %3798 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3799 = load i8*, i8** %3798, align 8
  %3800 = call i32 @strcmp(i8* %3799, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3801 = icmp eq i32 %3800, 0
  br i1 %3801, label %3880, label %3802

; <label>:3802:                                   ; preds = %3797
  %3803 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3804 = load i8*, i8** %3803, align 8
  %3805 = call i32 @strcmp(i8* %3804, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3806 = icmp eq i32 %3805, 0
  br i1 %3806, label %3879, label %3807

; <label>:3807:                                   ; preds = %3802
  %3808 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3809 = load i8*, i8** %3808, align 8
  %3810 = call i32 @strcmp(i8* %3809, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3811 = icmp eq i32 %3810, 0
  br i1 %3811, label %3878, label %3812

; <label>:3812:                                   ; preds = %3807
  %3813 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3814 = load i8*, i8** %3813, align 8
  %3815 = call i32 @strcmp(i8* %3814, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3816 = icmp eq i32 %3815, 0
  br i1 %3816, label %3877, label %3817

; <label>:3817:                                   ; preds = %3812
  %3818 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3819 = load i8*, i8** %3818, align 8
  %3820 = call i32 @strcmp(i8* %3819, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3821 = icmp eq i32 %3820, 0
  br i1 %3821, label %3876, label %3822

; <label>:3822:                                   ; preds = %3817
  %3823 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3824 = load i8*, i8** %3823, align 8
  %3825 = call i32 @strcmp(i8* %3824, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3826 = icmp eq i32 %3825, 0
  br i1 %3826, label %3875, label %3827

; <label>:3827:                                   ; preds = %3822
  %3828 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3829 = load i8*, i8** %3828, align 8
  %3830 = call i32 @strcmp(i8* %3829, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3831 = icmp eq i32 %3830, 0
  br i1 %3831, label %3874, label %3832

; <label>:3832:                                   ; preds = %3827
  %3833 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3834 = load i8*, i8** %3833, align 8
  %3835 = call i32 @strcmp(i8* %3834, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3836 = icmp eq i32 %3835, 0
  %3837 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3838 = load i8*, i8** %3837, align 8
  br i1 %3836, label %3873, label %3839

; <label>:3839:                                   ; preds = %3832
  %3840 = call i32 @strcmp(i8* %3838, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3841 = icmp eq i32 %3840, 0
  %3842 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3843 = load i8*, i8** %3842, align 8
  br i1 %3841, label %3872, label %3844

; <label>:3844:                                   ; preds = %3839
  %3845 = call i32 @strcmp(i8* %3843, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3846 = icmp eq i32 %3845, 0
  br i1 %3846, label %3871, label %3847

; <label>:3847:                                   ; preds = %3844
  %3848 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3849 = load i8*, i8** %3848, align 8
  %3850 = call i32 @strcmp(i8* %3849, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3851 = icmp eq i32 %3850, 0
  br i1 %3851, label %3870, label %3852

; <label>:3852:                                   ; preds = %3847
  %3853 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3854 = load i8*, i8** %3853, align 8
  %3855 = call i32 @strcmp(i8* %3854, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3856 = icmp eq i32 %3855, 0
  br i1 %3856, label %3867, label %3857

; <label>:3857:                                   ; preds = %3852
  %3858 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3859 = load i8*, i8** %3858, align 8
  %3860 = call i32 @strcmp(i8* %3859, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3861 = icmp eq i32 %3860, 0
  br i1 %3861, label %353, label %3862

; <label>:3862:                                   ; preds = %3857
  %3863 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 0
  %3864 = load i8*, i8** %3863, align 8
  %3865 = call i32 @strncmp(i8* %3864, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3866 = icmp eq i32 %3865, 0
  br i1 %3866, label %362, label %3885

; <label>:3867:                                   ; preds = %3852
  %3868 = load i32, i32* @verbosity, align 4
  %3869 = add nsw i32 %3868, 1
  store i32 %3869, i32* @verbosity, align 4
  br label %3885

; <label>:3870:                                   ; preds = %3847
  store i32 9, i32* @blockSize100k, align 4
  br label %3885

; <label>:3871:                                   ; preds = %3844
  store i32 1, i32* @blockSize100k, align 4
  br label %3885

; <label>:3872:                                   ; preds = %3839
  call void @redundant(i8* %3843)
  br label %3885

; <label>:3873:                                   ; preds = %3832
  call void @redundant(i8* %3838)
  br label %3885

; <label>:3874:                                   ; preds = %3827
  store i32 1, i32* @workFactor, align 4
  br label %3885

; <label>:3875:                                   ; preds = %3822
  call void @license()
  br label %3885

; <label>:3876:                                   ; preds = %3817
  call void @license()
  br label %3885

; <label>:3877:                                   ; preds = %3812
  store i8 0, i8* @noisy, align 1
  br label %3885

; <label>:3878:                                   ; preds = %3807
  store i8 1, i8* @smallMode, align 1
  br label %3885

; <label>:3879:                                   ; preds = %3802
  store i8 1, i8* @keepInputFiles, align 1
  br label %3885

; <label>:3880:                                   ; preds = %3797
  store i32 3, i32* @opMode, align 4
  br label %3885

; <label>:3881:                                   ; preds = %3792
  store i8 1, i8* @forceOverwrite, align 1
  br label %3885

; <label>:3882:                                   ; preds = %3787
  store i32 1, i32* @opMode, align 4
  br label %3885

; <label>:3883:                                   ; preds = %3782
  store i32 2, i32* @opMode, align 4
  br label %3885

; <label>:3884:                                   ; preds = %3777
  store i32 2, i32* @srcMode, align 4
  br label %3885

; <label>:3885:                                   ; preds = %3884, %3883, %3882, %3881, %3880, %3879, %3878, %3877, %3876, %3875, %3874, %3873, %3872, %3871, %3870, %3867, %3862
  call void @__loop_iteration_test___5()
  %3886 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3771, i32 0, i32 1
  %3887 = load %struct.zzzz*, %struct.zzzz** %3886, align 8
  %3888 = icmp ne %struct.zzzz* %3887, null
  br i1 %3888, label %.lr.ph39.9, label %.loopexit.loopexit

.lr.ph39.9:                                       ; preds = %3885
  call void @unroll_loop(i32 5)
  %3889 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3890 = load i8*, i8** %3889, align 8
  %3891 = call i32 @strcmp(i8* %3890, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3892 = icmp eq i32 %3891, 0
  br i1 %3892, label %.loopexit.loopexit, label %3893

; <label>:3893:                                   ; preds = %.lr.ph39.9
  %3894 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3895 = load i8*, i8** %3894, align 8
  %3896 = call i32 @strcmp(i8* %3895, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3897 = icmp eq i32 %3896, 0
  br i1 %3897, label %4000, label %3898

; <label>:3898:                                   ; preds = %3893
  %3899 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3900 = load i8*, i8** %3899, align 8
  %3901 = call i32 @strcmp(i8* %3900, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3902 = icmp eq i32 %3901, 0
  br i1 %3902, label %3999, label %3903

; <label>:3903:                                   ; preds = %3898
  %3904 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3905 = load i8*, i8** %3904, align 8
  %3906 = call i32 @strcmp(i8* %3905, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3907 = icmp eq i32 %3906, 0
  br i1 %3907, label %3998, label %3908

; <label>:3908:                                   ; preds = %3903
  %3909 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3910 = load i8*, i8** %3909, align 8
  %3911 = call i32 @strcmp(i8* %3910, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3912 = icmp eq i32 %3911, 0
  br i1 %3912, label %3997, label %3913

; <label>:3913:                                   ; preds = %3908
  %3914 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3915 = load i8*, i8** %3914, align 8
  %3916 = call i32 @strcmp(i8* %3915, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3917 = icmp eq i32 %3916, 0
  br i1 %3917, label %3996, label %3918

; <label>:3918:                                   ; preds = %3913
  %3919 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3920 = load i8*, i8** %3919, align 8
  %3921 = call i32 @strcmp(i8* %3920, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3922 = icmp eq i32 %3921, 0
  br i1 %3922, label %3995, label %3923

; <label>:3923:                                   ; preds = %3918
  %3924 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3925 = load i8*, i8** %3924, align 8
  %3926 = call i32 @strcmp(i8* %3925, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3927 = icmp eq i32 %3926, 0
  br i1 %3927, label %3994, label %3928

; <label>:3928:                                   ; preds = %3923
  %3929 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3930 = load i8*, i8** %3929, align 8
  %3931 = call i32 @strcmp(i8* %3930, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3932 = icmp eq i32 %3931, 0
  br i1 %3932, label %3993, label %3933

; <label>:3933:                                   ; preds = %3928
  %3934 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3935 = load i8*, i8** %3934, align 8
  %3936 = call i32 @strcmp(i8* %3935, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3937 = icmp eq i32 %3936, 0
  br i1 %3937, label %3992, label %3938

; <label>:3938:                                   ; preds = %3933
  %3939 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3940 = load i8*, i8** %3939, align 8
  %3941 = call i32 @strcmp(i8* %3940, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3942 = icmp eq i32 %3941, 0
  br i1 %3942, label %3991, label %3943

; <label>:3943:                                   ; preds = %3938
  %3944 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3945 = load i8*, i8** %3944, align 8
  %3946 = call i32 @strcmp(i8* %3945, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3947 = icmp eq i32 %3946, 0
  br i1 %3947, label %3990, label %3948

; <label>:3948:                                   ; preds = %3943
  %3949 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3950 = load i8*, i8** %3949, align 8
  %3951 = call i32 @strcmp(i8* %3950, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3952 = icmp eq i32 %3951, 0
  %3953 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3954 = load i8*, i8** %3953, align 8
  br i1 %3952, label %3989, label %3955

; <label>:3955:                                   ; preds = %3948
  %3956 = call i32 @strcmp(i8* %3954, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3957 = icmp eq i32 %3956, 0
  %3958 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3959 = load i8*, i8** %3958, align 8
  br i1 %3957, label %3988, label %3960

; <label>:3960:                                   ; preds = %3955
  %3961 = call i32 @strcmp(i8* %3959, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3962 = icmp eq i32 %3961, 0
  br i1 %3962, label %3987, label %3963

; <label>:3963:                                   ; preds = %3960
  %3964 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3965 = load i8*, i8** %3964, align 8
  %3966 = call i32 @strcmp(i8* %3965, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3967 = icmp eq i32 %3966, 0
  br i1 %3967, label %3986, label %3968

; <label>:3968:                                   ; preds = %3963
  %3969 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3970 = load i8*, i8** %3969, align 8
  %3971 = call i32 @strcmp(i8* %3970, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3972 = icmp eq i32 %3971, 0
  br i1 %3972, label %3983, label %3973

; <label>:3973:                                   ; preds = %3968
  %3974 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3975 = load i8*, i8** %3974, align 8
  %3976 = call i32 @strcmp(i8* %3975, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3977 = icmp eq i32 %3976, 0
  br i1 %3977, label %353, label %3978

; <label>:3978:                                   ; preds = %3973
  %3979 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 0
  %3980 = load i8*, i8** %3979, align 8
  %3981 = call i32 @strncmp(i8* %3980, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3982 = icmp eq i32 %3981, 0
  br i1 %3982, label %362, label %4001

; <label>:3983:                                   ; preds = %3968
  %3984 = load i32, i32* @verbosity, align 4
  %3985 = add nsw i32 %3984, 1
  store i32 %3985, i32* @verbosity, align 4
  br label %4001

; <label>:3986:                                   ; preds = %3963
  store i32 9, i32* @blockSize100k, align 4
  br label %4001

; <label>:3987:                                   ; preds = %3960
  store i32 1, i32* @blockSize100k, align 4
  br label %4001

; <label>:3988:                                   ; preds = %3955
  call void @redundant(i8* %3959)
  br label %4001

; <label>:3989:                                   ; preds = %3948
  call void @redundant(i8* %3954)
  br label %4001

; <label>:3990:                                   ; preds = %3943
  store i32 1, i32* @workFactor, align 4
  br label %4001

; <label>:3991:                                   ; preds = %3938
  call void @license()
  br label %4001

; <label>:3992:                                   ; preds = %3933
  call void @license()
  br label %4001

; <label>:3993:                                   ; preds = %3928
  store i8 0, i8* @noisy, align 1
  br label %4001

; <label>:3994:                                   ; preds = %3923
  store i8 1, i8* @smallMode, align 1
  br label %4001

; <label>:3995:                                   ; preds = %3918
  store i8 1, i8* @keepInputFiles, align 1
  br label %4001

; <label>:3996:                                   ; preds = %3913
  store i32 3, i32* @opMode, align 4
  br label %4001

; <label>:3997:                                   ; preds = %3908
  store i8 1, i8* @forceOverwrite, align 1
  br label %4001

; <label>:3998:                                   ; preds = %3903
  store i32 1, i32* @opMode, align 4
  br label %4001

; <label>:3999:                                   ; preds = %3898
  store i32 2, i32* @opMode, align 4
  br label %4001

; <label>:4000:                                   ; preds = %3893
  store i32 2, i32* @srcMode, align 4
  br label %4001

; <label>:4001:                                   ; preds = %4000, %3999, %3998, %3997, %3996, %3995, %3994, %3993, %3992, %3991, %3990, %3989, %3988, %3987, %3986, %3983, %3978
  call void @__loop_iteration_test___5()
  %4002 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3887, i32 0, i32 1
  %4003 = load %struct.zzzz*, %struct.zzzz** %4002, align 8
  %4004 = icmp ne %struct.zzzz* %4003, null
  br i1 %4004, label %.lr.ph39.10, label %.loopexit.loopexit

.lr.ph39.10:                                      ; preds = %4001
  call void @unroll_loop(i32 5)
  %4005 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4006 = load i8*, i8** %4005, align 8
  %4007 = call i32 @strcmp(i8* %4006, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4008 = icmp eq i32 %4007, 0
  br i1 %4008, label %.loopexit.loopexit, label %4009

; <label>:4009:                                   ; preds = %.lr.ph39.10
  %4010 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4011 = load i8*, i8** %4010, align 8
  %4012 = call i32 @strcmp(i8* %4011, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4013 = icmp eq i32 %4012, 0
  br i1 %4013, label %4116, label %4014

; <label>:4014:                                   ; preds = %4009
  %4015 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4016 = load i8*, i8** %4015, align 8
  %4017 = call i32 @strcmp(i8* %4016, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4018 = icmp eq i32 %4017, 0
  br i1 %4018, label %4115, label %4019

; <label>:4019:                                   ; preds = %4014
  %4020 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4021 = load i8*, i8** %4020, align 8
  %4022 = call i32 @strcmp(i8* %4021, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4023 = icmp eq i32 %4022, 0
  br i1 %4023, label %4114, label %4024

; <label>:4024:                                   ; preds = %4019
  %4025 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4026 = load i8*, i8** %4025, align 8
  %4027 = call i32 @strcmp(i8* %4026, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4028 = icmp eq i32 %4027, 0
  br i1 %4028, label %4113, label %4029

; <label>:4029:                                   ; preds = %4024
  %4030 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4031 = load i8*, i8** %4030, align 8
  %4032 = call i32 @strcmp(i8* %4031, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4033 = icmp eq i32 %4032, 0
  br i1 %4033, label %4112, label %4034

; <label>:4034:                                   ; preds = %4029
  %4035 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4036 = load i8*, i8** %4035, align 8
  %4037 = call i32 @strcmp(i8* %4036, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4038 = icmp eq i32 %4037, 0
  br i1 %4038, label %4111, label %4039

; <label>:4039:                                   ; preds = %4034
  %4040 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4041 = load i8*, i8** %4040, align 8
  %4042 = call i32 @strcmp(i8* %4041, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4043 = icmp eq i32 %4042, 0
  br i1 %4043, label %4110, label %4044

; <label>:4044:                                   ; preds = %4039
  %4045 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4046 = load i8*, i8** %4045, align 8
  %4047 = call i32 @strcmp(i8* %4046, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4048 = icmp eq i32 %4047, 0
  br i1 %4048, label %4109, label %4049

; <label>:4049:                                   ; preds = %4044
  %4050 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4051 = load i8*, i8** %4050, align 8
  %4052 = call i32 @strcmp(i8* %4051, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4053 = icmp eq i32 %4052, 0
  br i1 %4053, label %4108, label %4054

; <label>:4054:                                   ; preds = %4049
  %4055 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4056 = load i8*, i8** %4055, align 8
  %4057 = call i32 @strcmp(i8* %4056, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4058 = icmp eq i32 %4057, 0
  br i1 %4058, label %4107, label %4059

; <label>:4059:                                   ; preds = %4054
  %4060 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4061 = load i8*, i8** %4060, align 8
  %4062 = call i32 @strcmp(i8* %4061, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4063 = icmp eq i32 %4062, 0
  br i1 %4063, label %4106, label %4064

; <label>:4064:                                   ; preds = %4059
  %4065 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4066 = load i8*, i8** %4065, align 8
  %4067 = call i32 @strcmp(i8* %4066, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4068 = icmp eq i32 %4067, 0
  %4069 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4070 = load i8*, i8** %4069, align 8
  br i1 %4068, label %4105, label %4071

; <label>:4071:                                   ; preds = %4064
  %4072 = call i32 @strcmp(i8* %4070, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4073 = icmp eq i32 %4072, 0
  %4074 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4075 = load i8*, i8** %4074, align 8
  br i1 %4073, label %4104, label %4076

; <label>:4076:                                   ; preds = %4071
  %4077 = call i32 @strcmp(i8* %4075, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4078 = icmp eq i32 %4077, 0
  br i1 %4078, label %4103, label %4079

; <label>:4079:                                   ; preds = %4076
  %4080 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4081 = load i8*, i8** %4080, align 8
  %4082 = call i32 @strcmp(i8* %4081, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4083 = icmp eq i32 %4082, 0
  br i1 %4083, label %4102, label %4084

; <label>:4084:                                   ; preds = %4079
  %4085 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4086 = load i8*, i8** %4085, align 8
  %4087 = call i32 @strcmp(i8* %4086, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4088 = icmp eq i32 %4087, 0
  br i1 %4088, label %4099, label %4089

; <label>:4089:                                   ; preds = %4084
  %4090 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4091 = load i8*, i8** %4090, align 8
  %4092 = call i32 @strcmp(i8* %4091, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4093 = icmp eq i32 %4092, 0
  br i1 %4093, label %353, label %4094

; <label>:4094:                                   ; preds = %4089
  %4095 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 0
  %4096 = load i8*, i8** %4095, align 8
  %4097 = call i32 @strncmp(i8* %4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4098 = icmp eq i32 %4097, 0
  br i1 %4098, label %362, label %4117

; <label>:4099:                                   ; preds = %4084
  %4100 = load i32, i32* @verbosity, align 4
  %4101 = add nsw i32 %4100, 1
  store i32 %4101, i32* @verbosity, align 4
  br label %4117

; <label>:4102:                                   ; preds = %4079
  store i32 9, i32* @blockSize100k, align 4
  br label %4117

; <label>:4103:                                   ; preds = %4076
  store i32 1, i32* @blockSize100k, align 4
  br label %4117

; <label>:4104:                                   ; preds = %4071
  call void @redundant(i8* %4075)
  br label %4117

; <label>:4105:                                   ; preds = %4064
  call void @redundant(i8* %4070)
  br label %4117

; <label>:4106:                                   ; preds = %4059
  store i32 1, i32* @workFactor, align 4
  br label %4117

; <label>:4107:                                   ; preds = %4054
  call void @license()
  br label %4117

; <label>:4108:                                   ; preds = %4049
  call void @license()
  br label %4117

; <label>:4109:                                   ; preds = %4044
  store i8 0, i8* @noisy, align 1
  br label %4117

; <label>:4110:                                   ; preds = %4039
  store i8 1, i8* @smallMode, align 1
  br label %4117

; <label>:4111:                                   ; preds = %4034
  store i8 1, i8* @keepInputFiles, align 1
  br label %4117

; <label>:4112:                                   ; preds = %4029
  store i32 3, i32* @opMode, align 4
  br label %4117

; <label>:4113:                                   ; preds = %4024
  store i8 1, i8* @forceOverwrite, align 1
  br label %4117

; <label>:4114:                                   ; preds = %4019
  store i32 1, i32* @opMode, align 4
  br label %4117

; <label>:4115:                                   ; preds = %4014
  store i32 2, i32* @opMode, align 4
  br label %4117

; <label>:4116:                                   ; preds = %4009
  store i32 2, i32* @srcMode, align 4
  br label %4117

; <label>:4117:                                   ; preds = %4116, %4115, %4114, %4113, %4112, %4111, %4110, %4109, %4108, %4107, %4106, %4105, %4104, %4103, %4102, %4099, %4094
  call void @__loop_iteration_test___5()
  %4118 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4003, i32 0, i32 1
  %4119 = load %struct.zzzz*, %struct.zzzz** %4118, align 8
  %4120 = icmp ne %struct.zzzz* %4119, null
  br i1 %4120, label %.lr.ph39.11, label %.loopexit.loopexit

.lr.ph39.11:                                      ; preds = %4117
  call void @unroll_loop(i32 5)
  %4121 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4122 = load i8*, i8** %4121, align 8
  %4123 = call i32 @strcmp(i8* %4122, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4124 = icmp eq i32 %4123, 0
  br i1 %4124, label %.loopexit.loopexit, label %4125

; <label>:4125:                                   ; preds = %.lr.ph39.11
  %4126 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4127 = load i8*, i8** %4126, align 8
  %4128 = call i32 @strcmp(i8* %4127, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4129 = icmp eq i32 %4128, 0
  br i1 %4129, label %4232, label %4130

; <label>:4130:                                   ; preds = %4125
  %4131 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4132 = load i8*, i8** %4131, align 8
  %4133 = call i32 @strcmp(i8* %4132, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4134 = icmp eq i32 %4133, 0
  br i1 %4134, label %4231, label %4135

; <label>:4135:                                   ; preds = %4130
  %4136 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4137 = load i8*, i8** %4136, align 8
  %4138 = call i32 @strcmp(i8* %4137, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4139 = icmp eq i32 %4138, 0
  br i1 %4139, label %4230, label %4140

; <label>:4140:                                   ; preds = %4135
  %4141 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4142 = load i8*, i8** %4141, align 8
  %4143 = call i32 @strcmp(i8* %4142, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4144 = icmp eq i32 %4143, 0
  br i1 %4144, label %4229, label %4145

; <label>:4145:                                   ; preds = %4140
  %4146 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4147 = load i8*, i8** %4146, align 8
  %4148 = call i32 @strcmp(i8* %4147, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4149 = icmp eq i32 %4148, 0
  br i1 %4149, label %4228, label %4150

; <label>:4150:                                   ; preds = %4145
  %4151 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4152 = load i8*, i8** %4151, align 8
  %4153 = call i32 @strcmp(i8* %4152, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4154 = icmp eq i32 %4153, 0
  br i1 %4154, label %4227, label %4155

; <label>:4155:                                   ; preds = %4150
  %4156 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4157 = load i8*, i8** %4156, align 8
  %4158 = call i32 @strcmp(i8* %4157, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4159 = icmp eq i32 %4158, 0
  br i1 %4159, label %4226, label %4160

; <label>:4160:                                   ; preds = %4155
  %4161 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4162 = load i8*, i8** %4161, align 8
  %4163 = call i32 @strcmp(i8* %4162, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4164 = icmp eq i32 %4163, 0
  br i1 %4164, label %4225, label %4165

; <label>:4165:                                   ; preds = %4160
  %4166 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4167 = load i8*, i8** %4166, align 8
  %4168 = call i32 @strcmp(i8* %4167, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4169 = icmp eq i32 %4168, 0
  br i1 %4169, label %4224, label %4170

; <label>:4170:                                   ; preds = %4165
  %4171 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4172 = load i8*, i8** %4171, align 8
  %4173 = call i32 @strcmp(i8* %4172, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4174 = icmp eq i32 %4173, 0
  br i1 %4174, label %4223, label %4175

; <label>:4175:                                   ; preds = %4170
  %4176 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4177 = load i8*, i8** %4176, align 8
  %4178 = call i32 @strcmp(i8* %4177, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4179 = icmp eq i32 %4178, 0
  br i1 %4179, label %4222, label %4180

; <label>:4180:                                   ; preds = %4175
  %4181 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4182 = load i8*, i8** %4181, align 8
  %4183 = call i32 @strcmp(i8* %4182, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4184 = icmp eq i32 %4183, 0
  %4185 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4186 = load i8*, i8** %4185, align 8
  br i1 %4184, label %4221, label %4187

; <label>:4187:                                   ; preds = %4180
  %4188 = call i32 @strcmp(i8* %4186, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4189 = icmp eq i32 %4188, 0
  %4190 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4191 = load i8*, i8** %4190, align 8
  br i1 %4189, label %4220, label %4192

; <label>:4192:                                   ; preds = %4187
  %4193 = call i32 @strcmp(i8* %4191, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4194 = icmp eq i32 %4193, 0
  br i1 %4194, label %4219, label %4195

; <label>:4195:                                   ; preds = %4192
  %4196 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4197 = load i8*, i8** %4196, align 8
  %4198 = call i32 @strcmp(i8* %4197, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4199 = icmp eq i32 %4198, 0
  br i1 %4199, label %4218, label %4200

; <label>:4200:                                   ; preds = %4195
  %4201 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4202 = load i8*, i8** %4201, align 8
  %4203 = call i32 @strcmp(i8* %4202, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4204 = icmp eq i32 %4203, 0
  br i1 %4204, label %4215, label %4205

; <label>:4205:                                   ; preds = %4200
  %4206 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4207 = load i8*, i8** %4206, align 8
  %4208 = call i32 @strcmp(i8* %4207, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4209 = icmp eq i32 %4208, 0
  br i1 %4209, label %353, label %4210

; <label>:4210:                                   ; preds = %4205
  %4211 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 0
  %4212 = load i8*, i8** %4211, align 8
  %4213 = call i32 @strncmp(i8* %4212, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4214 = icmp eq i32 %4213, 0
  br i1 %4214, label %362, label %4233

; <label>:4215:                                   ; preds = %4200
  %4216 = load i32, i32* @verbosity, align 4
  %4217 = add nsw i32 %4216, 1
  store i32 %4217, i32* @verbosity, align 4
  br label %4233

; <label>:4218:                                   ; preds = %4195
  store i32 9, i32* @blockSize100k, align 4
  br label %4233

; <label>:4219:                                   ; preds = %4192
  store i32 1, i32* @blockSize100k, align 4
  br label %4233

; <label>:4220:                                   ; preds = %4187
  call void @redundant(i8* %4191)
  br label %4233

; <label>:4221:                                   ; preds = %4180
  call void @redundant(i8* %4186)
  br label %4233

; <label>:4222:                                   ; preds = %4175
  store i32 1, i32* @workFactor, align 4
  br label %4233

; <label>:4223:                                   ; preds = %4170
  call void @license()
  br label %4233

; <label>:4224:                                   ; preds = %4165
  call void @license()
  br label %4233

; <label>:4225:                                   ; preds = %4160
  store i8 0, i8* @noisy, align 1
  br label %4233

; <label>:4226:                                   ; preds = %4155
  store i8 1, i8* @smallMode, align 1
  br label %4233

; <label>:4227:                                   ; preds = %4150
  store i8 1, i8* @keepInputFiles, align 1
  br label %4233

; <label>:4228:                                   ; preds = %4145
  store i32 3, i32* @opMode, align 4
  br label %4233

; <label>:4229:                                   ; preds = %4140
  store i8 1, i8* @forceOverwrite, align 1
  br label %4233

; <label>:4230:                                   ; preds = %4135
  store i32 1, i32* @opMode, align 4
  br label %4233

; <label>:4231:                                   ; preds = %4130
  store i32 2, i32* @opMode, align 4
  br label %4233

; <label>:4232:                                   ; preds = %4125
  store i32 2, i32* @srcMode, align 4
  br label %4233

; <label>:4233:                                   ; preds = %4232, %4231, %4230, %4229, %4228, %4227, %4226, %4225, %4224, %4223, %4222, %4221, %4220, %4219, %4218, %4215, %4210
  call void @__loop_iteration_test___5()
  %4234 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4119, i32 0, i32 1
  %4235 = load %struct.zzzz*, %struct.zzzz** %4234, align 8
  %4236 = icmp ne %struct.zzzz* %4235, null
  br i1 %4236, label %.lr.ph39.12, label %.loopexit.loopexit

.lr.ph39.12:                                      ; preds = %4233
  call void @unroll_loop(i32 5)
  %4237 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4238 = load i8*, i8** %4237, align 8
  %4239 = call i32 @strcmp(i8* %4238, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4240 = icmp eq i32 %4239, 0
  br i1 %4240, label %.loopexit.loopexit, label %4241

; <label>:4241:                                   ; preds = %.lr.ph39.12
  %4242 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4243 = load i8*, i8** %4242, align 8
  %4244 = call i32 @strcmp(i8* %4243, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4245 = icmp eq i32 %4244, 0
  br i1 %4245, label %4348, label %4246

; <label>:4246:                                   ; preds = %4241
  %4247 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4248 = load i8*, i8** %4247, align 8
  %4249 = call i32 @strcmp(i8* %4248, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4250 = icmp eq i32 %4249, 0
  br i1 %4250, label %4347, label %4251

; <label>:4251:                                   ; preds = %4246
  %4252 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4253 = load i8*, i8** %4252, align 8
  %4254 = call i32 @strcmp(i8* %4253, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4255 = icmp eq i32 %4254, 0
  br i1 %4255, label %4346, label %4256

; <label>:4256:                                   ; preds = %4251
  %4257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4258 = load i8*, i8** %4257, align 8
  %4259 = call i32 @strcmp(i8* %4258, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4260 = icmp eq i32 %4259, 0
  br i1 %4260, label %4345, label %4261

; <label>:4261:                                   ; preds = %4256
  %4262 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4263 = load i8*, i8** %4262, align 8
  %4264 = call i32 @strcmp(i8* %4263, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4265 = icmp eq i32 %4264, 0
  br i1 %4265, label %4344, label %4266

; <label>:4266:                                   ; preds = %4261
  %4267 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4268 = load i8*, i8** %4267, align 8
  %4269 = call i32 @strcmp(i8* %4268, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4270 = icmp eq i32 %4269, 0
  br i1 %4270, label %4343, label %4271

; <label>:4271:                                   ; preds = %4266
  %4272 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4273 = load i8*, i8** %4272, align 8
  %4274 = call i32 @strcmp(i8* %4273, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4275 = icmp eq i32 %4274, 0
  br i1 %4275, label %4342, label %4276

; <label>:4276:                                   ; preds = %4271
  %4277 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4278 = load i8*, i8** %4277, align 8
  %4279 = call i32 @strcmp(i8* %4278, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4280 = icmp eq i32 %4279, 0
  br i1 %4280, label %4341, label %4281

; <label>:4281:                                   ; preds = %4276
  %4282 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4283 = load i8*, i8** %4282, align 8
  %4284 = call i32 @strcmp(i8* %4283, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4285 = icmp eq i32 %4284, 0
  br i1 %4285, label %4340, label %4286

; <label>:4286:                                   ; preds = %4281
  %4287 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4288 = load i8*, i8** %4287, align 8
  %4289 = call i32 @strcmp(i8* %4288, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4290 = icmp eq i32 %4289, 0
  br i1 %4290, label %4339, label %4291

; <label>:4291:                                   ; preds = %4286
  %4292 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4293 = load i8*, i8** %4292, align 8
  %4294 = call i32 @strcmp(i8* %4293, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4295 = icmp eq i32 %4294, 0
  br i1 %4295, label %4338, label %4296

; <label>:4296:                                   ; preds = %4291
  %4297 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4298 = load i8*, i8** %4297, align 8
  %4299 = call i32 @strcmp(i8* %4298, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4300 = icmp eq i32 %4299, 0
  %4301 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4302 = load i8*, i8** %4301, align 8
  br i1 %4300, label %4337, label %4303

; <label>:4303:                                   ; preds = %4296
  %4304 = call i32 @strcmp(i8* %4302, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4305 = icmp eq i32 %4304, 0
  %4306 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4307 = load i8*, i8** %4306, align 8
  br i1 %4305, label %4336, label %4308

; <label>:4308:                                   ; preds = %4303
  %4309 = call i32 @strcmp(i8* %4307, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4310 = icmp eq i32 %4309, 0
  br i1 %4310, label %4335, label %4311

; <label>:4311:                                   ; preds = %4308
  %4312 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4313 = load i8*, i8** %4312, align 8
  %4314 = call i32 @strcmp(i8* %4313, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4315 = icmp eq i32 %4314, 0
  br i1 %4315, label %4334, label %4316

; <label>:4316:                                   ; preds = %4311
  %4317 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4318 = load i8*, i8** %4317, align 8
  %4319 = call i32 @strcmp(i8* %4318, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4320 = icmp eq i32 %4319, 0
  br i1 %4320, label %4331, label %4321

; <label>:4321:                                   ; preds = %4316
  %4322 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4323 = load i8*, i8** %4322, align 8
  %4324 = call i32 @strcmp(i8* %4323, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4325 = icmp eq i32 %4324, 0
  br i1 %4325, label %353, label %4326

; <label>:4326:                                   ; preds = %4321
  %4327 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 0
  %4328 = load i8*, i8** %4327, align 8
  %4329 = call i32 @strncmp(i8* %4328, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4330 = icmp eq i32 %4329, 0
  br i1 %4330, label %362, label %4349

; <label>:4331:                                   ; preds = %4316
  %4332 = load i32, i32* @verbosity, align 4
  %4333 = add nsw i32 %4332, 1
  store i32 %4333, i32* @verbosity, align 4
  br label %4349

; <label>:4334:                                   ; preds = %4311
  store i32 9, i32* @blockSize100k, align 4
  br label %4349

; <label>:4335:                                   ; preds = %4308
  store i32 1, i32* @blockSize100k, align 4
  br label %4349

; <label>:4336:                                   ; preds = %4303
  call void @redundant(i8* %4307)
  br label %4349

; <label>:4337:                                   ; preds = %4296
  call void @redundant(i8* %4302)
  br label %4349

; <label>:4338:                                   ; preds = %4291
  store i32 1, i32* @workFactor, align 4
  br label %4349

; <label>:4339:                                   ; preds = %4286
  call void @license()
  br label %4349

; <label>:4340:                                   ; preds = %4281
  call void @license()
  br label %4349

; <label>:4341:                                   ; preds = %4276
  store i8 0, i8* @noisy, align 1
  br label %4349

; <label>:4342:                                   ; preds = %4271
  store i8 1, i8* @smallMode, align 1
  br label %4349

; <label>:4343:                                   ; preds = %4266
  store i8 1, i8* @keepInputFiles, align 1
  br label %4349

; <label>:4344:                                   ; preds = %4261
  store i32 3, i32* @opMode, align 4
  br label %4349

; <label>:4345:                                   ; preds = %4256
  store i8 1, i8* @forceOverwrite, align 1
  br label %4349

; <label>:4346:                                   ; preds = %4251
  store i32 1, i32* @opMode, align 4
  br label %4349

; <label>:4347:                                   ; preds = %4246
  store i32 2, i32* @opMode, align 4
  br label %4349

; <label>:4348:                                   ; preds = %4241
  store i32 2, i32* @srcMode, align 4
  br label %4349

; <label>:4349:                                   ; preds = %4348, %4347, %4346, %4345, %4344, %4343, %4342, %4341, %4340, %4339, %4338, %4337, %4336, %4335, %4334, %4331, %4326
  call void @__loop_iteration_test___5()
  %4350 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4235, i32 0, i32 1
  %4351 = load %struct.zzzz*, %struct.zzzz** %4350, align 8
  %4352 = icmp ne %struct.zzzz* %4351, null
  br i1 %4352, label %.lr.ph39.13, label %.loopexit.loopexit

.lr.ph39.13:                                      ; preds = %4349
  call void @unroll_loop(i32 5)
  %4353 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4354 = load i8*, i8** %4353, align 8
  %4355 = call i32 @strcmp(i8* %4354, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4356 = icmp eq i32 %4355, 0
  br i1 %4356, label %.loopexit.loopexit, label %4357

; <label>:4357:                                   ; preds = %.lr.ph39.13
  %4358 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4359 = load i8*, i8** %4358, align 8
  %4360 = call i32 @strcmp(i8* %4359, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4361 = icmp eq i32 %4360, 0
  br i1 %4361, label %4464, label %4362

; <label>:4362:                                   ; preds = %4357
  %4363 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4364 = load i8*, i8** %4363, align 8
  %4365 = call i32 @strcmp(i8* %4364, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4366 = icmp eq i32 %4365, 0
  br i1 %4366, label %4463, label %4367

; <label>:4367:                                   ; preds = %4362
  %4368 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4369 = load i8*, i8** %4368, align 8
  %4370 = call i32 @strcmp(i8* %4369, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4371 = icmp eq i32 %4370, 0
  br i1 %4371, label %4462, label %4372

; <label>:4372:                                   ; preds = %4367
  %4373 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4374 = load i8*, i8** %4373, align 8
  %4375 = call i32 @strcmp(i8* %4374, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4376 = icmp eq i32 %4375, 0
  br i1 %4376, label %4461, label %4377

; <label>:4377:                                   ; preds = %4372
  %4378 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4379 = load i8*, i8** %4378, align 8
  %4380 = call i32 @strcmp(i8* %4379, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4381 = icmp eq i32 %4380, 0
  br i1 %4381, label %4460, label %4382

; <label>:4382:                                   ; preds = %4377
  %4383 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4384 = load i8*, i8** %4383, align 8
  %4385 = call i32 @strcmp(i8* %4384, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4386 = icmp eq i32 %4385, 0
  br i1 %4386, label %4459, label %4387

; <label>:4387:                                   ; preds = %4382
  %4388 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4389 = load i8*, i8** %4388, align 8
  %4390 = call i32 @strcmp(i8* %4389, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4391 = icmp eq i32 %4390, 0
  br i1 %4391, label %4458, label %4392

; <label>:4392:                                   ; preds = %4387
  %4393 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4394 = load i8*, i8** %4393, align 8
  %4395 = call i32 @strcmp(i8* %4394, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4396 = icmp eq i32 %4395, 0
  br i1 %4396, label %4457, label %4397

; <label>:4397:                                   ; preds = %4392
  %4398 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4399 = load i8*, i8** %4398, align 8
  %4400 = call i32 @strcmp(i8* %4399, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4401 = icmp eq i32 %4400, 0
  br i1 %4401, label %4456, label %4402

; <label>:4402:                                   ; preds = %4397
  %4403 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4404 = load i8*, i8** %4403, align 8
  %4405 = call i32 @strcmp(i8* %4404, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4406 = icmp eq i32 %4405, 0
  br i1 %4406, label %4455, label %4407

; <label>:4407:                                   ; preds = %4402
  %4408 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4409 = load i8*, i8** %4408, align 8
  %4410 = call i32 @strcmp(i8* %4409, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4411 = icmp eq i32 %4410, 0
  br i1 %4411, label %4454, label %4412

; <label>:4412:                                   ; preds = %4407
  %4413 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4414 = load i8*, i8** %4413, align 8
  %4415 = call i32 @strcmp(i8* %4414, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4416 = icmp eq i32 %4415, 0
  %4417 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4418 = load i8*, i8** %4417, align 8
  br i1 %4416, label %4453, label %4419

; <label>:4419:                                   ; preds = %4412
  %4420 = call i32 @strcmp(i8* %4418, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4421 = icmp eq i32 %4420, 0
  %4422 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4423 = load i8*, i8** %4422, align 8
  br i1 %4421, label %4452, label %4424

; <label>:4424:                                   ; preds = %4419
  %4425 = call i32 @strcmp(i8* %4423, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4426 = icmp eq i32 %4425, 0
  br i1 %4426, label %4451, label %4427

; <label>:4427:                                   ; preds = %4424
  %4428 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4429 = load i8*, i8** %4428, align 8
  %4430 = call i32 @strcmp(i8* %4429, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4431 = icmp eq i32 %4430, 0
  br i1 %4431, label %4450, label %4432

; <label>:4432:                                   ; preds = %4427
  %4433 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4434 = load i8*, i8** %4433, align 8
  %4435 = call i32 @strcmp(i8* %4434, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4436 = icmp eq i32 %4435, 0
  br i1 %4436, label %4447, label %4437

; <label>:4437:                                   ; preds = %4432
  %4438 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4439 = load i8*, i8** %4438, align 8
  %4440 = call i32 @strcmp(i8* %4439, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4441 = icmp eq i32 %4440, 0
  br i1 %4441, label %353, label %4442

; <label>:4442:                                   ; preds = %4437
  %4443 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 0
  %4444 = load i8*, i8** %4443, align 8
  %4445 = call i32 @strncmp(i8* %4444, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4446 = icmp eq i32 %4445, 0
  br i1 %4446, label %362, label %4465

; <label>:4447:                                   ; preds = %4432
  %4448 = load i32, i32* @verbosity, align 4
  %4449 = add nsw i32 %4448, 1
  store i32 %4449, i32* @verbosity, align 4
  br label %4465

; <label>:4450:                                   ; preds = %4427
  store i32 9, i32* @blockSize100k, align 4
  br label %4465

; <label>:4451:                                   ; preds = %4424
  store i32 1, i32* @blockSize100k, align 4
  br label %4465

; <label>:4452:                                   ; preds = %4419
  call void @redundant(i8* %4423)
  br label %4465

; <label>:4453:                                   ; preds = %4412
  call void @redundant(i8* %4418)
  br label %4465

; <label>:4454:                                   ; preds = %4407
  store i32 1, i32* @workFactor, align 4
  br label %4465

; <label>:4455:                                   ; preds = %4402
  call void @license()
  br label %4465

; <label>:4456:                                   ; preds = %4397
  call void @license()
  br label %4465

; <label>:4457:                                   ; preds = %4392
  store i8 0, i8* @noisy, align 1
  br label %4465

; <label>:4458:                                   ; preds = %4387
  store i8 1, i8* @smallMode, align 1
  br label %4465

; <label>:4459:                                   ; preds = %4382
  store i8 1, i8* @keepInputFiles, align 1
  br label %4465

; <label>:4460:                                   ; preds = %4377
  store i32 3, i32* @opMode, align 4
  br label %4465

; <label>:4461:                                   ; preds = %4372
  store i8 1, i8* @forceOverwrite, align 1
  br label %4465

; <label>:4462:                                   ; preds = %4367
  store i32 1, i32* @opMode, align 4
  br label %4465

; <label>:4463:                                   ; preds = %4362
  store i32 2, i32* @opMode, align 4
  br label %4465

; <label>:4464:                                   ; preds = %4357
  store i32 2, i32* @srcMode, align 4
  br label %4465

; <label>:4465:                                   ; preds = %4464, %4463, %4462, %4461, %4460, %4459, %4458, %4457, %4456, %4455, %4454, %4453, %4452, %4451, %4450, %4447, %4442
  call void @__loop_iteration_test___5()
  %4466 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4351, i32 0, i32 1
  %4467 = load %struct.zzzz*, %struct.zzzz** %4466, align 8
  %4468 = icmp ne %struct.zzzz* %4467, null
  br i1 %4468, label %.lr.ph39.14, label %.loopexit.loopexit

.lr.ph39.14:                                      ; preds = %4465
  call void @unroll_loop(i32 5)
  %4469 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4470 = load i8*, i8** %4469, align 8
  %4471 = call i32 @strcmp(i8* %4470, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4472 = icmp eq i32 %4471, 0
  br i1 %4472, label %.loopexit.loopexit, label %4473

; <label>:4473:                                   ; preds = %.lr.ph39.14
  %4474 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4475 = load i8*, i8** %4474, align 8
  %4476 = call i32 @strcmp(i8* %4475, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4477 = icmp eq i32 %4476, 0
  br i1 %4477, label %4580, label %4478

; <label>:4478:                                   ; preds = %4473
  %4479 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4480 = load i8*, i8** %4479, align 8
  %4481 = call i32 @strcmp(i8* %4480, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4482 = icmp eq i32 %4481, 0
  br i1 %4482, label %4579, label %4483

; <label>:4483:                                   ; preds = %4478
  %4484 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4485 = load i8*, i8** %4484, align 8
  %4486 = call i32 @strcmp(i8* %4485, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4487 = icmp eq i32 %4486, 0
  br i1 %4487, label %4578, label %4488

; <label>:4488:                                   ; preds = %4483
  %4489 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4490 = load i8*, i8** %4489, align 8
  %4491 = call i32 @strcmp(i8* %4490, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4492 = icmp eq i32 %4491, 0
  br i1 %4492, label %4577, label %4493

; <label>:4493:                                   ; preds = %4488
  %4494 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4495 = load i8*, i8** %4494, align 8
  %4496 = call i32 @strcmp(i8* %4495, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4497 = icmp eq i32 %4496, 0
  br i1 %4497, label %4576, label %4498

; <label>:4498:                                   ; preds = %4493
  %4499 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4500 = load i8*, i8** %4499, align 8
  %4501 = call i32 @strcmp(i8* %4500, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4502 = icmp eq i32 %4501, 0
  br i1 %4502, label %4575, label %4503

; <label>:4503:                                   ; preds = %4498
  %4504 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4505 = load i8*, i8** %4504, align 8
  %4506 = call i32 @strcmp(i8* %4505, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4507 = icmp eq i32 %4506, 0
  br i1 %4507, label %4574, label %4508

; <label>:4508:                                   ; preds = %4503
  %4509 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4510 = load i8*, i8** %4509, align 8
  %4511 = call i32 @strcmp(i8* %4510, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4512 = icmp eq i32 %4511, 0
  br i1 %4512, label %4573, label %4513

; <label>:4513:                                   ; preds = %4508
  %4514 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4515 = load i8*, i8** %4514, align 8
  %4516 = call i32 @strcmp(i8* %4515, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4517 = icmp eq i32 %4516, 0
  br i1 %4517, label %4572, label %4518

; <label>:4518:                                   ; preds = %4513
  %4519 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4520 = load i8*, i8** %4519, align 8
  %4521 = call i32 @strcmp(i8* %4520, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4522 = icmp eq i32 %4521, 0
  br i1 %4522, label %4571, label %4523

; <label>:4523:                                   ; preds = %4518
  %4524 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4525 = load i8*, i8** %4524, align 8
  %4526 = call i32 @strcmp(i8* %4525, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4527 = icmp eq i32 %4526, 0
  br i1 %4527, label %4570, label %4528

; <label>:4528:                                   ; preds = %4523
  %4529 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4530 = load i8*, i8** %4529, align 8
  %4531 = call i32 @strcmp(i8* %4530, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4532 = icmp eq i32 %4531, 0
  %4533 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4534 = load i8*, i8** %4533, align 8
  br i1 %4532, label %4569, label %4535

; <label>:4535:                                   ; preds = %4528
  %4536 = call i32 @strcmp(i8* %4534, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4537 = icmp eq i32 %4536, 0
  %4538 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4539 = load i8*, i8** %4538, align 8
  br i1 %4537, label %4568, label %4540

; <label>:4540:                                   ; preds = %4535
  %4541 = call i32 @strcmp(i8* %4539, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4542 = icmp eq i32 %4541, 0
  br i1 %4542, label %4567, label %4543

; <label>:4543:                                   ; preds = %4540
  %4544 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4545 = load i8*, i8** %4544, align 8
  %4546 = call i32 @strcmp(i8* %4545, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4547 = icmp eq i32 %4546, 0
  br i1 %4547, label %4566, label %4548

; <label>:4548:                                   ; preds = %4543
  %4549 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4550 = load i8*, i8** %4549, align 8
  %4551 = call i32 @strcmp(i8* %4550, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4552 = icmp eq i32 %4551, 0
  br i1 %4552, label %4563, label %4553

; <label>:4553:                                   ; preds = %4548
  %4554 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4555 = load i8*, i8** %4554, align 8
  %4556 = call i32 @strcmp(i8* %4555, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4557 = icmp eq i32 %4556, 0
  br i1 %4557, label %353, label %4558

; <label>:4558:                                   ; preds = %4553
  %4559 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 0
  %4560 = load i8*, i8** %4559, align 8
  %4561 = call i32 @strncmp(i8* %4560, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4562 = icmp eq i32 %4561, 0
  br i1 %4562, label %362, label %4581

; <label>:4563:                                   ; preds = %4548
  %4564 = load i32, i32* @verbosity, align 4
  %4565 = add nsw i32 %4564, 1
  store i32 %4565, i32* @verbosity, align 4
  br label %4581

; <label>:4566:                                   ; preds = %4543
  store i32 9, i32* @blockSize100k, align 4
  br label %4581

; <label>:4567:                                   ; preds = %4540
  store i32 1, i32* @blockSize100k, align 4
  br label %4581

; <label>:4568:                                   ; preds = %4535
  call void @redundant(i8* %4539)
  br label %4581

; <label>:4569:                                   ; preds = %4528
  call void @redundant(i8* %4534)
  br label %4581

; <label>:4570:                                   ; preds = %4523
  store i32 1, i32* @workFactor, align 4
  br label %4581

; <label>:4571:                                   ; preds = %4518
  call void @license()
  br label %4581

; <label>:4572:                                   ; preds = %4513
  call void @license()
  br label %4581

; <label>:4573:                                   ; preds = %4508
  store i8 0, i8* @noisy, align 1
  br label %4581

; <label>:4574:                                   ; preds = %4503
  store i8 1, i8* @smallMode, align 1
  br label %4581

; <label>:4575:                                   ; preds = %4498
  store i8 1, i8* @keepInputFiles, align 1
  br label %4581

; <label>:4576:                                   ; preds = %4493
  store i32 3, i32* @opMode, align 4
  br label %4581

; <label>:4577:                                   ; preds = %4488
  store i8 1, i8* @forceOverwrite, align 1
  br label %4581

; <label>:4578:                                   ; preds = %4483
  store i32 1, i32* @opMode, align 4
  br label %4581

; <label>:4579:                                   ; preds = %4478
  store i32 2, i32* @opMode, align 4
  br label %4581

; <label>:4580:                                   ; preds = %4473
  store i32 2, i32* @srcMode, align 4
  br label %4581

; <label>:4581:                                   ; preds = %4580, %4579, %4578, %4577, %4576, %4575, %4574, %4573, %4572, %4571, %4570, %4569, %4568, %4567, %4566, %4563, %4558
  call void @__loop_iteration_test___5()
  %4582 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4467, i32 0, i32 1
  %4583 = load %struct.zzzz*, %struct.zzzz** %4582, align 8
  %4584 = icmp ne %struct.zzzz* %4583, null
  br i1 %4584, label %.lr.ph39.15, label %.loopexit.loopexit

.lr.ph39.15:                                      ; preds = %4581
  call void @unroll_loop(i32 5)
  %4585 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4586 = load i8*, i8** %4585, align 8
  %4587 = call i32 @strcmp(i8* %4586, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4588 = icmp eq i32 %4587, 0
  br i1 %4588, label %.loopexit.loopexit, label %4589

; <label>:4589:                                   ; preds = %.lr.ph39.15
  %4590 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4591 = load i8*, i8** %4590, align 8
  %4592 = call i32 @strcmp(i8* %4591, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4593 = icmp eq i32 %4592, 0
  br i1 %4593, label %4696, label %4594

; <label>:4594:                                   ; preds = %4589
  %4595 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4596 = load i8*, i8** %4595, align 8
  %4597 = call i32 @strcmp(i8* %4596, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4598 = icmp eq i32 %4597, 0
  br i1 %4598, label %4695, label %4599

; <label>:4599:                                   ; preds = %4594
  %4600 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4601 = load i8*, i8** %4600, align 8
  %4602 = call i32 @strcmp(i8* %4601, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4603 = icmp eq i32 %4602, 0
  br i1 %4603, label %4694, label %4604

; <label>:4604:                                   ; preds = %4599
  %4605 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4606 = load i8*, i8** %4605, align 8
  %4607 = call i32 @strcmp(i8* %4606, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4608 = icmp eq i32 %4607, 0
  br i1 %4608, label %4693, label %4609

; <label>:4609:                                   ; preds = %4604
  %4610 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4611 = load i8*, i8** %4610, align 8
  %4612 = call i32 @strcmp(i8* %4611, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4613 = icmp eq i32 %4612, 0
  br i1 %4613, label %4692, label %4614

; <label>:4614:                                   ; preds = %4609
  %4615 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4616 = load i8*, i8** %4615, align 8
  %4617 = call i32 @strcmp(i8* %4616, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4618 = icmp eq i32 %4617, 0
  br i1 %4618, label %4691, label %4619

; <label>:4619:                                   ; preds = %4614
  %4620 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4621 = load i8*, i8** %4620, align 8
  %4622 = call i32 @strcmp(i8* %4621, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4623 = icmp eq i32 %4622, 0
  br i1 %4623, label %4690, label %4624

; <label>:4624:                                   ; preds = %4619
  %4625 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4626 = load i8*, i8** %4625, align 8
  %4627 = call i32 @strcmp(i8* %4626, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4628 = icmp eq i32 %4627, 0
  br i1 %4628, label %4689, label %4629

; <label>:4629:                                   ; preds = %4624
  %4630 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4631 = load i8*, i8** %4630, align 8
  %4632 = call i32 @strcmp(i8* %4631, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4633 = icmp eq i32 %4632, 0
  br i1 %4633, label %4688, label %4634

; <label>:4634:                                   ; preds = %4629
  %4635 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4636 = load i8*, i8** %4635, align 8
  %4637 = call i32 @strcmp(i8* %4636, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4638 = icmp eq i32 %4637, 0
  br i1 %4638, label %4687, label %4639

; <label>:4639:                                   ; preds = %4634
  %4640 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4641 = load i8*, i8** %4640, align 8
  %4642 = call i32 @strcmp(i8* %4641, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4643 = icmp eq i32 %4642, 0
  br i1 %4643, label %4686, label %4644

; <label>:4644:                                   ; preds = %4639
  %4645 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4646 = load i8*, i8** %4645, align 8
  %4647 = call i32 @strcmp(i8* %4646, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4648 = icmp eq i32 %4647, 0
  %4649 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4650 = load i8*, i8** %4649, align 8
  br i1 %4648, label %4685, label %4651

; <label>:4651:                                   ; preds = %4644
  %4652 = call i32 @strcmp(i8* %4650, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4653 = icmp eq i32 %4652, 0
  %4654 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4655 = load i8*, i8** %4654, align 8
  br i1 %4653, label %4684, label %4656

; <label>:4656:                                   ; preds = %4651
  %4657 = call i32 @strcmp(i8* %4655, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4658 = icmp eq i32 %4657, 0
  br i1 %4658, label %4683, label %4659

; <label>:4659:                                   ; preds = %4656
  %4660 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4661 = load i8*, i8** %4660, align 8
  %4662 = call i32 @strcmp(i8* %4661, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4663 = icmp eq i32 %4662, 0
  br i1 %4663, label %4682, label %4664

; <label>:4664:                                   ; preds = %4659
  %4665 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4666 = load i8*, i8** %4665, align 8
  %4667 = call i32 @strcmp(i8* %4666, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4668 = icmp eq i32 %4667, 0
  br i1 %4668, label %4679, label %4669

; <label>:4669:                                   ; preds = %4664
  %4670 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4671 = load i8*, i8** %4670, align 8
  %4672 = call i32 @strcmp(i8* %4671, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4673 = icmp eq i32 %4672, 0
  br i1 %4673, label %353, label %4674

; <label>:4674:                                   ; preds = %4669
  %4675 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 0
  %4676 = load i8*, i8** %4675, align 8
  %4677 = call i32 @strncmp(i8* %4676, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4678 = icmp eq i32 %4677, 0
  br i1 %4678, label %362, label %4697

; <label>:4679:                                   ; preds = %4664
  %4680 = load i32, i32* @verbosity, align 4
  %4681 = add nsw i32 %4680, 1
  store i32 %4681, i32* @verbosity, align 4
  br label %4697

; <label>:4682:                                   ; preds = %4659
  store i32 9, i32* @blockSize100k, align 4
  br label %4697

; <label>:4683:                                   ; preds = %4656
  store i32 1, i32* @blockSize100k, align 4
  br label %4697

; <label>:4684:                                   ; preds = %4651
  call void @redundant(i8* %4655)
  br label %4697

; <label>:4685:                                   ; preds = %4644
  call void @redundant(i8* %4650)
  br label %4697

; <label>:4686:                                   ; preds = %4639
  store i32 1, i32* @workFactor, align 4
  br label %4697

; <label>:4687:                                   ; preds = %4634
  call void @license()
  br label %4697

; <label>:4688:                                   ; preds = %4629
  call void @license()
  br label %4697

; <label>:4689:                                   ; preds = %4624
  store i8 0, i8* @noisy, align 1
  br label %4697

; <label>:4690:                                   ; preds = %4619
  store i8 1, i8* @smallMode, align 1
  br label %4697

; <label>:4691:                                   ; preds = %4614
  store i8 1, i8* @keepInputFiles, align 1
  br label %4697

; <label>:4692:                                   ; preds = %4609
  store i32 3, i32* @opMode, align 4
  br label %4697

; <label>:4693:                                   ; preds = %4604
  store i8 1, i8* @forceOverwrite, align 1
  br label %4697

; <label>:4694:                                   ; preds = %4599
  store i32 1, i32* @opMode, align 4
  br label %4697

; <label>:4695:                                   ; preds = %4594
  store i32 2, i32* @opMode, align 4
  br label %4697

; <label>:4696:                                   ; preds = %4589
  store i32 2, i32* @srcMode, align 4
  br label %4697

; <label>:4697:                                   ; preds = %4696, %4695, %4694, %4693, %4692, %4691, %4690, %4689, %4688, %4687, %4686, %4685, %4684, %4683, %4682, %4679, %4674
  call void @__loop_iteration_test___5()
  %4698 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4583, i32 0, i32 1
  %4699 = load %struct.zzzz*, %struct.zzzz** %4698, align 8
  %4700 = icmp ne %struct.zzzz* %4699, null
  br i1 %4700, label %.lr.ph39.16, label %.loopexit.loopexit

.lr.ph39.16:                                      ; preds = %4697
  call void @unroll_loop(i32 5)
  %4701 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4702 = load i8*, i8** %4701, align 8
  %4703 = call i32 @strcmp(i8* %4702, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4704 = icmp eq i32 %4703, 0
  br i1 %4704, label %.loopexit.loopexit, label %4705

; <label>:4705:                                   ; preds = %.lr.ph39.16
  %4706 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4707 = load i8*, i8** %4706, align 8
  %4708 = call i32 @strcmp(i8* %4707, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4709 = icmp eq i32 %4708, 0
  br i1 %4709, label %4812, label %4710

; <label>:4710:                                   ; preds = %4705
  %4711 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4712 = load i8*, i8** %4711, align 8
  %4713 = call i32 @strcmp(i8* %4712, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4714 = icmp eq i32 %4713, 0
  br i1 %4714, label %4811, label %4715

; <label>:4715:                                   ; preds = %4710
  %4716 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4717 = load i8*, i8** %4716, align 8
  %4718 = call i32 @strcmp(i8* %4717, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4719 = icmp eq i32 %4718, 0
  br i1 %4719, label %4810, label %4720

; <label>:4720:                                   ; preds = %4715
  %4721 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4722 = load i8*, i8** %4721, align 8
  %4723 = call i32 @strcmp(i8* %4722, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4724 = icmp eq i32 %4723, 0
  br i1 %4724, label %4809, label %4725

; <label>:4725:                                   ; preds = %4720
  %4726 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4727 = load i8*, i8** %4726, align 8
  %4728 = call i32 @strcmp(i8* %4727, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4729 = icmp eq i32 %4728, 0
  br i1 %4729, label %4808, label %4730

; <label>:4730:                                   ; preds = %4725
  %4731 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4732 = load i8*, i8** %4731, align 8
  %4733 = call i32 @strcmp(i8* %4732, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4734 = icmp eq i32 %4733, 0
  br i1 %4734, label %4807, label %4735

; <label>:4735:                                   ; preds = %4730
  %4736 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4737 = load i8*, i8** %4736, align 8
  %4738 = call i32 @strcmp(i8* %4737, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4739 = icmp eq i32 %4738, 0
  br i1 %4739, label %4806, label %4740

; <label>:4740:                                   ; preds = %4735
  %4741 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4742 = load i8*, i8** %4741, align 8
  %4743 = call i32 @strcmp(i8* %4742, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4744 = icmp eq i32 %4743, 0
  br i1 %4744, label %4805, label %4745

; <label>:4745:                                   ; preds = %4740
  %4746 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4747 = load i8*, i8** %4746, align 8
  %4748 = call i32 @strcmp(i8* %4747, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4749 = icmp eq i32 %4748, 0
  br i1 %4749, label %4804, label %4750

; <label>:4750:                                   ; preds = %4745
  %4751 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4752 = load i8*, i8** %4751, align 8
  %4753 = call i32 @strcmp(i8* %4752, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4754 = icmp eq i32 %4753, 0
  br i1 %4754, label %4803, label %4755

; <label>:4755:                                   ; preds = %4750
  %4756 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4757 = load i8*, i8** %4756, align 8
  %4758 = call i32 @strcmp(i8* %4757, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4759 = icmp eq i32 %4758, 0
  br i1 %4759, label %4802, label %4760

; <label>:4760:                                   ; preds = %4755
  %4761 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4762 = load i8*, i8** %4761, align 8
  %4763 = call i32 @strcmp(i8* %4762, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4764 = icmp eq i32 %4763, 0
  %4765 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4766 = load i8*, i8** %4765, align 8
  br i1 %4764, label %4801, label %4767

; <label>:4767:                                   ; preds = %4760
  %4768 = call i32 @strcmp(i8* %4766, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4769 = icmp eq i32 %4768, 0
  %4770 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4771 = load i8*, i8** %4770, align 8
  br i1 %4769, label %4800, label %4772

; <label>:4772:                                   ; preds = %4767
  %4773 = call i32 @strcmp(i8* %4771, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4774 = icmp eq i32 %4773, 0
  br i1 %4774, label %4799, label %4775

; <label>:4775:                                   ; preds = %4772
  %4776 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4777 = load i8*, i8** %4776, align 8
  %4778 = call i32 @strcmp(i8* %4777, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4779 = icmp eq i32 %4778, 0
  br i1 %4779, label %4798, label %4780

; <label>:4780:                                   ; preds = %4775
  %4781 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4782 = load i8*, i8** %4781, align 8
  %4783 = call i32 @strcmp(i8* %4782, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4784 = icmp eq i32 %4783, 0
  br i1 %4784, label %4795, label %4785

; <label>:4785:                                   ; preds = %4780
  %4786 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4787 = load i8*, i8** %4786, align 8
  %4788 = call i32 @strcmp(i8* %4787, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4789 = icmp eq i32 %4788, 0
  br i1 %4789, label %353, label %4790

; <label>:4790:                                   ; preds = %4785
  %4791 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 0
  %4792 = load i8*, i8** %4791, align 8
  %4793 = call i32 @strncmp(i8* %4792, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4794 = icmp eq i32 %4793, 0
  br i1 %4794, label %362, label %4813

; <label>:4795:                                   ; preds = %4780
  %4796 = load i32, i32* @verbosity, align 4
  %4797 = add nsw i32 %4796, 1
  store i32 %4797, i32* @verbosity, align 4
  br label %4813

; <label>:4798:                                   ; preds = %4775
  store i32 9, i32* @blockSize100k, align 4
  br label %4813

; <label>:4799:                                   ; preds = %4772
  store i32 1, i32* @blockSize100k, align 4
  br label %4813

; <label>:4800:                                   ; preds = %4767
  call void @redundant(i8* %4771)
  br label %4813

; <label>:4801:                                   ; preds = %4760
  call void @redundant(i8* %4766)
  br label %4813

; <label>:4802:                                   ; preds = %4755
  store i32 1, i32* @workFactor, align 4
  br label %4813

; <label>:4803:                                   ; preds = %4750
  call void @license()
  br label %4813

; <label>:4804:                                   ; preds = %4745
  call void @license()
  br label %4813

; <label>:4805:                                   ; preds = %4740
  store i8 0, i8* @noisy, align 1
  br label %4813

; <label>:4806:                                   ; preds = %4735
  store i8 1, i8* @smallMode, align 1
  br label %4813

; <label>:4807:                                   ; preds = %4730
  store i8 1, i8* @keepInputFiles, align 1
  br label %4813

; <label>:4808:                                   ; preds = %4725
  store i32 3, i32* @opMode, align 4
  br label %4813

; <label>:4809:                                   ; preds = %4720
  store i8 1, i8* @forceOverwrite, align 1
  br label %4813

; <label>:4810:                                   ; preds = %4715
  store i32 1, i32* @opMode, align 4
  br label %4813

; <label>:4811:                                   ; preds = %4710
  store i32 2, i32* @opMode, align 4
  br label %4813

; <label>:4812:                                   ; preds = %4705
  store i32 2, i32* @srcMode, align 4
  br label %4813

; <label>:4813:                                   ; preds = %4812, %4811, %4810, %4809, %4808, %4807, %4806, %4805, %4804, %4803, %4802, %4801, %4800, %4799, %4798, %4795, %4790
  call void @__loop_iteration_test___5()
  %4814 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4699, i32 0, i32 1
  %4815 = load %struct.zzzz*, %struct.zzzz** %4814, align 8
  %4816 = icmp ne %struct.zzzz* %4815, null
  br i1 %4816, label %.lr.ph39.17, label %.loopexit.loopexit

.lr.ph39.17:                                      ; preds = %4813
  call void @unroll_loop(i32 5)
  %4817 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4818 = load i8*, i8** %4817, align 8
  %4819 = call i32 @strcmp(i8* %4818, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4820 = icmp eq i32 %4819, 0
  br i1 %4820, label %.loopexit.loopexit, label %4821

; <label>:4821:                                   ; preds = %.lr.ph39.17
  %4822 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4823 = load i8*, i8** %4822, align 8
  %4824 = call i32 @strcmp(i8* %4823, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4825 = icmp eq i32 %4824, 0
  br i1 %4825, label %4928, label %4826

; <label>:4826:                                   ; preds = %4821
  %4827 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4828 = load i8*, i8** %4827, align 8
  %4829 = call i32 @strcmp(i8* %4828, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4830 = icmp eq i32 %4829, 0
  br i1 %4830, label %4927, label %4831

; <label>:4831:                                   ; preds = %4826
  %4832 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4833 = load i8*, i8** %4832, align 8
  %4834 = call i32 @strcmp(i8* %4833, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4835 = icmp eq i32 %4834, 0
  br i1 %4835, label %4926, label %4836

; <label>:4836:                                   ; preds = %4831
  %4837 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4838 = load i8*, i8** %4837, align 8
  %4839 = call i32 @strcmp(i8* %4838, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4840 = icmp eq i32 %4839, 0
  br i1 %4840, label %4925, label %4841

; <label>:4841:                                   ; preds = %4836
  %4842 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4843 = load i8*, i8** %4842, align 8
  %4844 = call i32 @strcmp(i8* %4843, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4845 = icmp eq i32 %4844, 0
  br i1 %4845, label %4924, label %4846

; <label>:4846:                                   ; preds = %4841
  %4847 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4848 = load i8*, i8** %4847, align 8
  %4849 = call i32 @strcmp(i8* %4848, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4850 = icmp eq i32 %4849, 0
  br i1 %4850, label %4923, label %4851

; <label>:4851:                                   ; preds = %4846
  %4852 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4853 = load i8*, i8** %4852, align 8
  %4854 = call i32 @strcmp(i8* %4853, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4855 = icmp eq i32 %4854, 0
  br i1 %4855, label %4922, label %4856

; <label>:4856:                                   ; preds = %4851
  %4857 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4858 = load i8*, i8** %4857, align 8
  %4859 = call i32 @strcmp(i8* %4858, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4860 = icmp eq i32 %4859, 0
  br i1 %4860, label %4921, label %4861

; <label>:4861:                                   ; preds = %4856
  %4862 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4863 = load i8*, i8** %4862, align 8
  %4864 = call i32 @strcmp(i8* %4863, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4865 = icmp eq i32 %4864, 0
  br i1 %4865, label %4920, label %4866

; <label>:4866:                                   ; preds = %4861
  %4867 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4868 = load i8*, i8** %4867, align 8
  %4869 = call i32 @strcmp(i8* %4868, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4870 = icmp eq i32 %4869, 0
  br i1 %4870, label %4919, label %4871

; <label>:4871:                                   ; preds = %4866
  %4872 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4873 = load i8*, i8** %4872, align 8
  %4874 = call i32 @strcmp(i8* %4873, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4875 = icmp eq i32 %4874, 0
  br i1 %4875, label %4918, label %4876

; <label>:4876:                                   ; preds = %4871
  %4877 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4878 = load i8*, i8** %4877, align 8
  %4879 = call i32 @strcmp(i8* %4878, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4880 = icmp eq i32 %4879, 0
  %4881 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4882 = load i8*, i8** %4881, align 8
  br i1 %4880, label %4917, label %4883

; <label>:4883:                                   ; preds = %4876
  %4884 = call i32 @strcmp(i8* %4882, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4885 = icmp eq i32 %4884, 0
  %4886 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4887 = load i8*, i8** %4886, align 8
  br i1 %4885, label %4916, label %4888

; <label>:4888:                                   ; preds = %4883
  %4889 = call i32 @strcmp(i8* %4887, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4890 = icmp eq i32 %4889, 0
  br i1 %4890, label %4915, label %4891

; <label>:4891:                                   ; preds = %4888
  %4892 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4893 = load i8*, i8** %4892, align 8
  %4894 = call i32 @strcmp(i8* %4893, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4895 = icmp eq i32 %4894, 0
  br i1 %4895, label %4914, label %4896

; <label>:4896:                                   ; preds = %4891
  %4897 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4898 = load i8*, i8** %4897, align 8
  %4899 = call i32 @strcmp(i8* %4898, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4900 = icmp eq i32 %4899, 0
  br i1 %4900, label %4911, label %4901

; <label>:4901:                                   ; preds = %4896
  %4902 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4903 = load i8*, i8** %4902, align 8
  %4904 = call i32 @strcmp(i8* %4903, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4905 = icmp eq i32 %4904, 0
  br i1 %4905, label %353, label %4906

; <label>:4906:                                   ; preds = %4901
  %4907 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 0
  %4908 = load i8*, i8** %4907, align 8
  %4909 = call i32 @strncmp(i8* %4908, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4910 = icmp eq i32 %4909, 0
  br i1 %4910, label %362, label %4929

; <label>:4911:                                   ; preds = %4896
  %4912 = load i32, i32* @verbosity, align 4
  %4913 = add nsw i32 %4912, 1
  store i32 %4913, i32* @verbosity, align 4
  br label %4929

; <label>:4914:                                   ; preds = %4891
  store i32 9, i32* @blockSize100k, align 4
  br label %4929

; <label>:4915:                                   ; preds = %4888
  store i32 1, i32* @blockSize100k, align 4
  br label %4929

; <label>:4916:                                   ; preds = %4883
  call void @redundant(i8* %4887)
  br label %4929

; <label>:4917:                                   ; preds = %4876
  call void @redundant(i8* %4882)
  br label %4929

; <label>:4918:                                   ; preds = %4871
  store i32 1, i32* @workFactor, align 4
  br label %4929

; <label>:4919:                                   ; preds = %4866
  call void @license()
  br label %4929

; <label>:4920:                                   ; preds = %4861
  call void @license()
  br label %4929

; <label>:4921:                                   ; preds = %4856
  store i8 0, i8* @noisy, align 1
  br label %4929

; <label>:4922:                                   ; preds = %4851
  store i8 1, i8* @smallMode, align 1
  br label %4929

; <label>:4923:                                   ; preds = %4846
  store i8 1, i8* @keepInputFiles, align 1
  br label %4929

; <label>:4924:                                   ; preds = %4841
  store i32 3, i32* @opMode, align 4
  br label %4929

; <label>:4925:                                   ; preds = %4836
  store i8 1, i8* @forceOverwrite, align 1
  br label %4929

; <label>:4926:                                   ; preds = %4831
  store i32 1, i32* @opMode, align 4
  br label %4929

; <label>:4927:                                   ; preds = %4826
  store i32 2, i32* @opMode, align 4
  br label %4929

; <label>:4928:                                   ; preds = %4821
  store i32 2, i32* @srcMode, align 4
  br label %4929

; <label>:4929:                                   ; preds = %4928, %4927, %4926, %4925, %4924, %4923, %4922, %4921, %4920, %4919, %4918, %4917, %4916, %4915, %4914, %4911, %4906
  call void @__loop_iteration_test___5()
  %4930 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4815, i32 0, i32 1
  %4931 = load %struct.zzzz*, %struct.zzzz** %4930, align 8
  %4932 = icmp ne %struct.zzzz* %4931, null
  br i1 %4932, label %.lr.ph39.18, label %.loopexit.loopexit

.lr.ph39.18:                                      ; preds = %4929
  call void @unroll_loop(i32 5)
  %4933 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4934 = load i8*, i8** %4933, align 8
  %4935 = call i32 @strcmp(i8* %4934, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4936 = icmp eq i32 %4935, 0
  br i1 %4936, label %.loopexit.loopexit, label %4937

; <label>:4937:                                   ; preds = %.lr.ph39.18
  %4938 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4939 = load i8*, i8** %4938, align 8
  %4940 = call i32 @strcmp(i8* %4939, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4941 = icmp eq i32 %4940, 0
  br i1 %4941, label %5044, label %4942

; <label>:4942:                                   ; preds = %4937
  %4943 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4944 = load i8*, i8** %4943, align 8
  %4945 = call i32 @strcmp(i8* %4944, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4946 = icmp eq i32 %4945, 0
  br i1 %4946, label %5043, label %4947

; <label>:4947:                                   ; preds = %4942
  %4948 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4949 = load i8*, i8** %4948, align 8
  %4950 = call i32 @strcmp(i8* %4949, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4951 = icmp eq i32 %4950, 0
  br i1 %4951, label %5042, label %4952

; <label>:4952:                                   ; preds = %4947
  %4953 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4954 = load i8*, i8** %4953, align 8
  %4955 = call i32 @strcmp(i8* %4954, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4956 = icmp eq i32 %4955, 0
  br i1 %4956, label %5041, label %4957

; <label>:4957:                                   ; preds = %4952
  %4958 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4959 = load i8*, i8** %4958, align 8
  %4960 = call i32 @strcmp(i8* %4959, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4961 = icmp eq i32 %4960, 0
  br i1 %4961, label %5040, label %4962

; <label>:4962:                                   ; preds = %4957
  %4963 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4964 = load i8*, i8** %4963, align 8
  %4965 = call i32 @strcmp(i8* %4964, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4966 = icmp eq i32 %4965, 0
  br i1 %4966, label %5039, label %4967

; <label>:4967:                                   ; preds = %4962
  %4968 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4969 = load i8*, i8** %4968, align 8
  %4970 = call i32 @strcmp(i8* %4969, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4971 = icmp eq i32 %4970, 0
  br i1 %4971, label %5038, label %4972

; <label>:4972:                                   ; preds = %4967
  %4973 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4974 = load i8*, i8** %4973, align 8
  %4975 = call i32 @strcmp(i8* %4974, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4976 = icmp eq i32 %4975, 0
  br i1 %4976, label %5037, label %4977

; <label>:4977:                                   ; preds = %4972
  %4978 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4979 = load i8*, i8** %4978, align 8
  %4980 = call i32 @strcmp(i8* %4979, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4981 = icmp eq i32 %4980, 0
  br i1 %4981, label %5036, label %4982

; <label>:4982:                                   ; preds = %4977
  %4983 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4984 = load i8*, i8** %4983, align 8
  %4985 = call i32 @strcmp(i8* %4984, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4986 = icmp eq i32 %4985, 0
  br i1 %4986, label %5035, label %4987

; <label>:4987:                                   ; preds = %4982
  %4988 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4989 = load i8*, i8** %4988, align 8
  %4990 = call i32 @strcmp(i8* %4989, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4991 = icmp eq i32 %4990, 0
  br i1 %4991, label %5034, label %4992

; <label>:4992:                                   ; preds = %4987
  %4993 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4994 = load i8*, i8** %4993, align 8
  %4995 = call i32 @strcmp(i8* %4994, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4996 = icmp eq i32 %4995, 0
  %4997 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %4998 = load i8*, i8** %4997, align 8
  br i1 %4996, label %5033, label %4999

; <label>:4999:                                   ; preds = %4992
  %5000 = call i32 @strcmp(i8* %4998, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %5001 = icmp eq i32 %5000, 0
  %5002 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %5003 = load i8*, i8** %5002, align 8
  br i1 %5001, label %5032, label %5004

; <label>:5004:                                   ; preds = %4999
  %5005 = call i32 @strcmp(i8* %5003, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %5006 = icmp eq i32 %5005, 0
  br i1 %5006, label %5031, label %5007

; <label>:5007:                                   ; preds = %5004
  %5008 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %5009 = load i8*, i8** %5008, align 8
  %5010 = call i32 @strcmp(i8* %5009, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %5011 = icmp eq i32 %5010, 0
  br i1 %5011, label %5030, label %5012

; <label>:5012:                                   ; preds = %5007
  %5013 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %5014 = load i8*, i8** %5013, align 8
  %5015 = call i32 @strcmp(i8* %5014, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %5016 = icmp eq i32 %5015, 0
  br i1 %5016, label %5027, label %5017

; <label>:5017:                                   ; preds = %5012
  %5018 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %5019 = load i8*, i8** %5018, align 8
  %5020 = call i32 @strcmp(i8* %5019, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %5021 = icmp eq i32 %5020, 0
  br i1 %5021, label %353, label %5022

; <label>:5022:                                   ; preds = %5017
  %5023 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 0
  %5024 = load i8*, i8** %5023, align 8
  %5025 = call i32 @strncmp(i8* %5024, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %5026 = icmp eq i32 %5025, 0
  br i1 %5026, label %362, label %5045

; <label>:5027:                                   ; preds = %5012
  %5028 = load i32, i32* @verbosity, align 4
  %5029 = add nsw i32 %5028, 1
  store i32 %5029, i32* @verbosity, align 4
  br label %5045

; <label>:5030:                                   ; preds = %5007
  store i32 9, i32* @blockSize100k, align 4
  br label %5045

; <label>:5031:                                   ; preds = %5004
  store i32 1, i32* @blockSize100k, align 4
  br label %5045

; <label>:5032:                                   ; preds = %4999
  call void @redundant(i8* %5003)
  br label %5045

; <label>:5033:                                   ; preds = %4992
  call void @redundant(i8* %4998)
  br label %5045

; <label>:5034:                                   ; preds = %4987
  store i32 1, i32* @workFactor, align 4
  br label %5045

; <label>:5035:                                   ; preds = %4982
  call void @license()
  br label %5045

; <label>:5036:                                   ; preds = %4977
  call void @license()
  br label %5045

; <label>:5037:                                   ; preds = %4972
  store i8 0, i8* @noisy, align 1
  br label %5045

; <label>:5038:                                   ; preds = %4967
  store i8 1, i8* @smallMode, align 1
  br label %5045

; <label>:5039:                                   ; preds = %4962
  store i8 1, i8* @keepInputFiles, align 1
  br label %5045

; <label>:5040:                                   ; preds = %4957
  store i32 3, i32* @opMode, align 4
  br label %5045

; <label>:5041:                                   ; preds = %4952
  store i8 1, i8* @forceOverwrite, align 1
  br label %5045

; <label>:5042:                                   ; preds = %4947
  store i32 1, i32* @opMode, align 4
  br label %5045

; <label>:5043:                                   ; preds = %4942
  store i32 2, i32* @opMode, align 4
  br label %5045

; <label>:5044:                                   ; preds = %4937
  store i32 2, i32* @srcMode, align 4
  br label %5045

; <label>:5045:                                   ; preds = %5044, %5043, %5042, %5041, %5040, %5039, %5038, %5037, %5036, %5035, %5034, %5033, %5032, %5031, %5030, %5027, %5022
  call void @__loop_iteration_test___5()
  %5046 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4931, i32 0, i32 1
  %5047 = load %struct.zzzz*, %struct.zzzz** %5046, align 8
  %5048 = icmp ne %struct.zzzz* %5047, null
  br i1 %5048, label %.lr.ph39.19, label %.loopexit.loopexit

.lr.ph39.19:                                      ; preds = %5045
  call void @unroll_loop(i32 5)
  %5049 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5050 = load i8*, i8** %5049, align 8
  %5051 = call i32 @strcmp(i8* %5050, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5052 = icmp eq i32 %5051, 0
  br i1 %5052, label %.loopexit.loopexit, label %5053

; <label>:5053:                                   ; preds = %.lr.ph39.19
  %5054 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5055 = load i8*, i8** %5054, align 8
  %5056 = call i32 @strcmp(i8* %5055, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %5057 = icmp eq i32 %5056, 0
  br i1 %5057, label %5160, label %5058

; <label>:5058:                                   ; preds = %5053
  %5059 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5060 = load i8*, i8** %5059, align 8
  %5061 = call i32 @strcmp(i8* %5060, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %5062 = icmp eq i32 %5061, 0
  br i1 %5062, label %5159, label %5063

; <label>:5063:                                   ; preds = %5058
  %5064 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5065 = load i8*, i8** %5064, align 8
  %5066 = call i32 @strcmp(i8* %5065, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %5067 = icmp eq i32 %5066, 0
  br i1 %5067, label %5158, label %5068

; <label>:5068:                                   ; preds = %5063
  %5069 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5070 = load i8*, i8** %5069, align 8
  %5071 = call i32 @strcmp(i8* %5070, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %5072 = icmp eq i32 %5071, 0
  br i1 %5072, label %5157, label %5073

; <label>:5073:                                   ; preds = %5068
  %5074 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5075 = load i8*, i8** %5074, align 8
  %5076 = call i32 @strcmp(i8* %5075, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %5077 = icmp eq i32 %5076, 0
  br i1 %5077, label %5156, label %5078

; <label>:5078:                                   ; preds = %5073
  %5079 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5080 = load i8*, i8** %5079, align 8
  %5081 = call i32 @strcmp(i8* %5080, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %5082 = icmp eq i32 %5081, 0
  br i1 %5082, label %5155, label %5083

; <label>:5083:                                   ; preds = %5078
  %5084 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5085 = load i8*, i8** %5084, align 8
  %5086 = call i32 @strcmp(i8* %5085, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %5087 = icmp eq i32 %5086, 0
  br i1 %5087, label %5154, label %5088

; <label>:5088:                                   ; preds = %5083
  %5089 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5090 = load i8*, i8** %5089, align 8
  %5091 = call i32 @strcmp(i8* %5090, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %5092 = icmp eq i32 %5091, 0
  br i1 %5092, label %5153, label %5093

; <label>:5093:                                   ; preds = %5088
  %5094 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5095 = load i8*, i8** %5094, align 8
  %5096 = call i32 @strcmp(i8* %5095, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %5097 = icmp eq i32 %5096, 0
  br i1 %5097, label %5152, label %5098

; <label>:5098:                                   ; preds = %5093
  %5099 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5100 = load i8*, i8** %5099, align 8
  %5101 = call i32 @strcmp(i8* %5100, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %5102 = icmp eq i32 %5101, 0
  br i1 %5102, label %5151, label %5103

; <label>:5103:                                   ; preds = %5098
  %5104 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5105 = load i8*, i8** %5104, align 8
  %5106 = call i32 @strcmp(i8* %5105, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %5107 = icmp eq i32 %5106, 0
  br i1 %5107, label %5150, label %5108

; <label>:5108:                                   ; preds = %5103
  %5109 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5110 = load i8*, i8** %5109, align 8
  %5111 = call i32 @strcmp(i8* %5110, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %5112 = icmp eq i32 %5111, 0
  %5113 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5114 = load i8*, i8** %5113, align 8
  br i1 %5112, label %5149, label %5115

; <label>:5115:                                   ; preds = %5108
  %5116 = call i32 @strcmp(i8* %5114, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %5117 = icmp eq i32 %5116, 0
  %5118 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5119 = load i8*, i8** %5118, align 8
  br i1 %5117, label %5148, label %5120

; <label>:5120:                                   ; preds = %5115
  %5121 = call i32 @strcmp(i8* %5119, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %5122 = icmp eq i32 %5121, 0
  br i1 %5122, label %5147, label %5123

; <label>:5123:                                   ; preds = %5120
  %5124 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5125 = load i8*, i8** %5124, align 8
  %5126 = call i32 @strcmp(i8* %5125, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %5127 = icmp eq i32 %5126, 0
  br i1 %5127, label %5146, label %5128

; <label>:5128:                                   ; preds = %5123
  %5129 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5130 = load i8*, i8** %5129, align 8
  %5131 = call i32 @strcmp(i8* %5130, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %5132 = icmp eq i32 %5131, 0
  br i1 %5132, label %5143, label %5133

; <label>:5133:                                   ; preds = %5128
  %5134 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5135 = load i8*, i8** %5134, align 8
  %5136 = call i32 @strcmp(i8* %5135, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %5137 = icmp eq i32 %5136, 0
  br i1 %5137, label %353, label %5138

; <label>:5138:                                   ; preds = %5133
  %5139 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 0
  %5140 = load i8*, i8** %5139, align 8
  %5141 = call i32 @strncmp(i8* %5140, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %5142 = icmp eq i32 %5141, 0
  br i1 %5142, label %362, label %5161

; <label>:5143:                                   ; preds = %5128
  %5144 = load i32, i32* @verbosity, align 4
  %5145 = add nsw i32 %5144, 1
  store i32 %5145, i32* @verbosity, align 4
  br label %5161

; <label>:5146:                                   ; preds = %5123
  store i32 9, i32* @blockSize100k, align 4
  br label %5161

; <label>:5147:                                   ; preds = %5120
  store i32 1, i32* @blockSize100k, align 4
  br label %5161

; <label>:5148:                                   ; preds = %5115
  call void @redundant(i8* %5119)
  br label %5161

; <label>:5149:                                   ; preds = %5108
  call void @redundant(i8* %5114)
  br label %5161

; <label>:5150:                                   ; preds = %5103
  store i32 1, i32* @workFactor, align 4
  br label %5161

; <label>:5151:                                   ; preds = %5098
  call void @license()
  br label %5161

; <label>:5152:                                   ; preds = %5093
  call void @license()
  br label %5161

; <label>:5153:                                   ; preds = %5088
  store i8 0, i8* @noisy, align 1
  br label %5161

; <label>:5154:                                   ; preds = %5083
  store i8 1, i8* @smallMode, align 1
  br label %5161

; <label>:5155:                                   ; preds = %5078
  store i8 1, i8* @keepInputFiles, align 1
  br label %5161

; <label>:5156:                                   ; preds = %5073
  store i32 3, i32* @opMode, align 4
  br label %5161

; <label>:5157:                                   ; preds = %5068
  store i8 1, i8* @forceOverwrite, align 1
  br label %5161

; <label>:5158:                                   ; preds = %5063
  store i32 1, i32* @opMode, align 4
  br label %5161

; <label>:5159:                                   ; preds = %5058
  store i32 2, i32* @opMode, align 4
  br label %5161

; <label>:5160:                                   ; preds = %5053
  store i32 2, i32* @srcMode, align 4
  br label %5161

; <label>:5161:                                   ; preds = %5160, %5159, %5158, %5157, %5156, %5155, %5154, %5153, %5152, %5151, %5150, %5149, %5148, %5147, %5146, %5143, %5138
  call void @__loop_iteration_test___5()
  %5162 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5047, i32 0, i32 1
  %5163 = load %struct.zzzz*, %struct.zzzz** %5162, align 8
  br label %.loopexit.loopexit

.lr.ph23.1:                                       ; preds = %443
  call void @unroll_loop(i32 6)
  %5164 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %445, i32 0, i32 0
  %5165 = load i8*, i8** %5164, align 8
  %5166 = getelementptr [10 x i8], [10 x i8]* @96, i64 0, i64 0
  %5167 = getelementptr [3 x i8], [3 x i8]* @97, i64 0, i64 0
  %5168 = call i32 @strcmp(i8* %5166, i8* %5167) #10
  %5169 = icmp eq i32 1, 0
  br i1 false, label %5183, label %5170

; <label>:5170:                                   ; preds = %.lr.ph23.1
  %5171 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %445, i32 0, i32 0
  %5172 = load i8*, i8** %5171, align 8
  %5173 = load i8, i8* %5172, align 1
  %5174 = sext i8 104 to i32
  %5175 = icmp eq i32 104, 45
  %5176 = zext i8 1 to i32
  %5177 = icmp ne i32 1, 0
  %or.cond9.1 = and i1 false, true
  br i1 false, label %5183, label %5178

; <label>:5178:                                   ; preds = %5170
  %5179 = load i32, i32* @numFilesProcessed, align 4
  %5180 = add nsw i32 0, 1
  store i32 1, i32* @numFilesProcessed, align 4
  %5181 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %445, i32 0, i32 0
  %5182 = load i8*, i8** %5181, align 8
  call void @compress_clone(i8* %5182)
  br label %5183

; <label>:5183:                                   ; preds = %5178, %5170, %.lr.ph23.1
  %.3.1 = phi i8 [ 1, %5178 ], [ 0, %.lr.ph23.1 ], [ 1, %5170 ]
  call void @__loop_iteration_test___6()
  %5184 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %445, i32 0, i32 1
  %5185 = load %struct.zzzz*, %struct.zzzz** %5184, align 8
  %5186 = icmp ne i64 0, 0
  %5187 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph23.2, label %._crit_edge24.loopexit

.lr.ph23.2:                                       ; preds = %5183
  call void @unroll_loop(i32 6)
  %5188 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %5189 = load i8*, i8** %5188, align 8
  %5190 = call i32 @strcmp(i8* %5189, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5191 = icmp eq i32 %5190, 0
  br i1 %5191, label %5205, label %5192

; <label>:5192:                                   ; preds = %.lr.ph23.2
  %5193 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %5194 = load i8*, i8** %5193, align 8
  %5195 = load i8, i8* %5194, align 1
  %5196 = sext i8 %5195 to i32
  %5197 = icmp eq i32 %5196, 45
  %5198 = zext i8 1 to i32
  %5199 = icmp ne i32 %5198, 0
  %or.cond9.2 = and i1 %5197, %5199
  br i1 %or.cond9.2, label %5205, label %5200

; <label>:5200:                                   ; preds = %5192
  %5201 = load i32, i32* @numFilesProcessed, align 4
  %5202 = add nsw i32 %5201, 1
  store i32 %5202, i32* @numFilesProcessed, align 4
  %5203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %5204 = load i8*, i8** %5203, align 8
  call void @compress(i8* %5204)
  br label %5205

; <label>:5205:                                   ; preds = %5200, %5192, %.lr.ph23.2
  %.3.2 = phi i8 [ 1, %5200 ], [ 0, %.lr.ph23.2 ], [ 1, %5192 ]
  call void @__loop_iteration_test___6()
  %5206 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %5207 = load %struct.zzzz*, %struct.zzzz** %5206, align 8
  %5208 = icmp ne %struct.zzzz* %5207, null
  br i1 %5208, label %.lr.ph23.3, label %._crit_edge24.loopexit

.lr.ph23.3:                                       ; preds = %5205
  call void @unroll_loop(i32 6)
  %5209 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5207, i32 0, i32 0
  %5210 = load i8*, i8** %5209, align 8
  %5211 = call i32 @strcmp(i8* %5210, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5212 = icmp eq i32 %5211, 0
  br i1 %5212, label %5226, label %5213

; <label>:5213:                                   ; preds = %.lr.ph23.3
  %5214 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5207, i32 0, i32 0
  %5215 = load i8*, i8** %5214, align 8
  %5216 = load i8, i8* %5215, align 1
  %5217 = sext i8 %5216 to i32
  %5218 = icmp eq i32 %5217, 45
  %5219 = zext i8 %.3.2 to i32
  %5220 = icmp ne i32 %5219, 0
  %or.cond9.3 = and i1 %5218, %5220
  br i1 %or.cond9.3, label %5226, label %5221

; <label>:5221:                                   ; preds = %5213
  %5222 = load i32, i32* @numFilesProcessed, align 4
  %5223 = add nsw i32 %5222, 1
  store i32 %5223, i32* @numFilesProcessed, align 4
  %5224 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5207, i32 0, i32 0
  %5225 = load i8*, i8** %5224, align 8
  call void @compress(i8* %5225)
  br label %5226

; <label>:5226:                                   ; preds = %5221, %5213, %.lr.ph23.3
  %.3.3 = phi i8 [ %.3.2, %5221 ], [ 0, %.lr.ph23.3 ], [ %.3.2, %5213 ]
  call void @__loop_iteration_test___6()
  %5227 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5207, i32 0, i32 1
  %5228 = load %struct.zzzz*, %struct.zzzz** %5227, align 8
  %5229 = icmp ne %struct.zzzz* %5228, null
  br i1 %5229, label %.lr.ph23.4, label %._crit_edge24.loopexit

.lr.ph23.4:                                       ; preds = %5226
  call void @unroll_loop(i32 6)
  %5230 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5228, i32 0, i32 0
  %5231 = load i8*, i8** %5230, align 8
  %5232 = call i32 @strcmp(i8* %5231, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5233 = icmp eq i32 %5232, 0
  br i1 %5233, label %5247, label %5234

; <label>:5234:                                   ; preds = %.lr.ph23.4
  %5235 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5228, i32 0, i32 0
  %5236 = load i8*, i8** %5235, align 8
  %5237 = load i8, i8* %5236, align 1
  %5238 = sext i8 %5237 to i32
  %5239 = icmp eq i32 %5238, 45
  %5240 = zext i8 %.3.3 to i32
  %5241 = icmp ne i32 %5240, 0
  %or.cond9.4 = and i1 %5239, %5241
  br i1 %or.cond9.4, label %5247, label %5242

; <label>:5242:                                   ; preds = %5234
  %5243 = load i32, i32* @numFilesProcessed, align 4
  %5244 = add nsw i32 %5243, 1
  store i32 %5244, i32* @numFilesProcessed, align 4
  %5245 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5228, i32 0, i32 0
  %5246 = load i8*, i8** %5245, align 8
  call void @compress(i8* %5246)
  br label %5247

; <label>:5247:                                   ; preds = %5242, %5234, %.lr.ph23.4
  %.3.4 = phi i8 [ %.3.3, %5242 ], [ 0, %.lr.ph23.4 ], [ %.3.3, %5234 ]
  call void @__loop_iteration_test___6()
  %5248 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5228, i32 0, i32 1
  %5249 = load %struct.zzzz*, %struct.zzzz** %5248, align 8
  %5250 = icmp ne %struct.zzzz* %5249, null
  br i1 %5250, label %.lr.ph23.5, label %._crit_edge24.loopexit

.lr.ph23.5:                                       ; preds = %5247
  call void @unroll_loop(i32 6)
  %5251 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5249, i32 0, i32 0
  %5252 = load i8*, i8** %5251, align 8
  %5253 = call i32 @strcmp(i8* %5252, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5254 = icmp eq i32 %5253, 0
  br i1 %5254, label %5268, label %5255

; <label>:5255:                                   ; preds = %.lr.ph23.5
  %5256 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5249, i32 0, i32 0
  %5257 = load i8*, i8** %5256, align 8
  %5258 = load i8, i8* %5257, align 1
  %5259 = sext i8 %5258 to i32
  %5260 = icmp eq i32 %5259, 45
  %5261 = zext i8 %.3.4 to i32
  %5262 = icmp ne i32 %5261, 0
  %or.cond9.5 = and i1 %5260, %5262
  br i1 %or.cond9.5, label %5268, label %5263

; <label>:5263:                                   ; preds = %5255
  %5264 = load i32, i32* @numFilesProcessed, align 4
  %5265 = add nsw i32 %5264, 1
  store i32 %5265, i32* @numFilesProcessed, align 4
  %5266 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5249, i32 0, i32 0
  %5267 = load i8*, i8** %5266, align 8
  call void @compress(i8* %5267)
  br label %5268

; <label>:5268:                                   ; preds = %5263, %5255, %.lr.ph23.5
  %.3.5 = phi i8 [ %.3.4, %5263 ], [ 0, %.lr.ph23.5 ], [ %.3.4, %5255 ]
  call void @__loop_iteration_test___6()
  %5269 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5249, i32 0, i32 1
  %5270 = load %struct.zzzz*, %struct.zzzz** %5269, align 8
  %5271 = icmp ne %struct.zzzz* %5270, null
  br i1 %5271, label %.lr.ph23.6, label %._crit_edge24.loopexit

.lr.ph23.6:                                       ; preds = %5268
  call void @unroll_loop(i32 6)
  %5272 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5270, i32 0, i32 0
  %5273 = load i8*, i8** %5272, align 8
  %5274 = call i32 @strcmp(i8* %5273, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5275 = icmp eq i32 %5274, 0
  br i1 %5275, label %5289, label %5276

; <label>:5276:                                   ; preds = %.lr.ph23.6
  %5277 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5270, i32 0, i32 0
  %5278 = load i8*, i8** %5277, align 8
  %5279 = load i8, i8* %5278, align 1
  %5280 = sext i8 %5279 to i32
  %5281 = icmp eq i32 %5280, 45
  %5282 = zext i8 %.3.5 to i32
  %5283 = icmp ne i32 %5282, 0
  %or.cond9.6 = and i1 %5281, %5283
  br i1 %or.cond9.6, label %5289, label %5284

; <label>:5284:                                   ; preds = %5276
  %5285 = load i32, i32* @numFilesProcessed, align 4
  %5286 = add nsw i32 %5285, 1
  store i32 %5286, i32* @numFilesProcessed, align 4
  %5287 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5270, i32 0, i32 0
  %5288 = load i8*, i8** %5287, align 8
  call void @compress(i8* %5288)
  br label %5289

; <label>:5289:                                   ; preds = %5284, %5276, %.lr.ph23.6
  %.3.6 = phi i8 [ %.3.5, %5284 ], [ 0, %.lr.ph23.6 ], [ %.3.5, %5276 ]
  call void @__loop_iteration_test___6()
  %5290 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5270, i32 0, i32 1
  %5291 = load %struct.zzzz*, %struct.zzzz** %5290, align 8
  %5292 = icmp ne %struct.zzzz* %5291, null
  br i1 %5292, label %.lr.ph23.7, label %._crit_edge24.loopexit

.lr.ph23.7:                                       ; preds = %5289
  call void @unroll_loop(i32 6)
  %5293 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5291, i32 0, i32 0
  %5294 = load i8*, i8** %5293, align 8
  %5295 = call i32 @strcmp(i8* %5294, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5296 = icmp eq i32 %5295, 0
  br i1 %5296, label %5310, label %5297

; <label>:5297:                                   ; preds = %.lr.ph23.7
  %5298 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5291, i32 0, i32 0
  %5299 = load i8*, i8** %5298, align 8
  %5300 = load i8, i8* %5299, align 1
  %5301 = sext i8 %5300 to i32
  %5302 = icmp eq i32 %5301, 45
  %5303 = zext i8 %.3.6 to i32
  %5304 = icmp ne i32 %5303, 0
  %or.cond9.7 = and i1 %5302, %5304
  br i1 %or.cond9.7, label %5310, label %5305

; <label>:5305:                                   ; preds = %5297
  %5306 = load i32, i32* @numFilesProcessed, align 4
  %5307 = add nsw i32 %5306, 1
  store i32 %5307, i32* @numFilesProcessed, align 4
  %5308 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5291, i32 0, i32 0
  %5309 = load i8*, i8** %5308, align 8
  call void @compress(i8* %5309)
  br label %5310

; <label>:5310:                                   ; preds = %5305, %5297, %.lr.ph23.7
  %.3.7 = phi i8 [ %.3.6, %5305 ], [ 0, %.lr.ph23.7 ], [ %.3.6, %5297 ]
  call void @__loop_iteration_test___6()
  %5311 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5291, i32 0, i32 1
  %5312 = load %struct.zzzz*, %struct.zzzz** %5311, align 8
  %5313 = icmp ne %struct.zzzz* %5312, null
  br i1 %5313, label %.lr.ph23.8, label %._crit_edge24.loopexit

.lr.ph23.8:                                       ; preds = %5310
  call void @unroll_loop(i32 6)
  %5314 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5312, i32 0, i32 0
  %5315 = load i8*, i8** %5314, align 8
  %5316 = call i32 @strcmp(i8* %5315, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5317 = icmp eq i32 %5316, 0
  br i1 %5317, label %5331, label %5318

; <label>:5318:                                   ; preds = %.lr.ph23.8
  %5319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5312, i32 0, i32 0
  %5320 = load i8*, i8** %5319, align 8
  %5321 = load i8, i8* %5320, align 1
  %5322 = sext i8 %5321 to i32
  %5323 = icmp eq i32 %5322, 45
  %5324 = zext i8 %.3.7 to i32
  %5325 = icmp ne i32 %5324, 0
  %or.cond9.8 = and i1 %5323, %5325
  br i1 %or.cond9.8, label %5331, label %5326

; <label>:5326:                                   ; preds = %5318
  %5327 = load i32, i32* @numFilesProcessed, align 4
  %5328 = add nsw i32 %5327, 1
  store i32 %5328, i32* @numFilesProcessed, align 4
  %5329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5312, i32 0, i32 0
  %5330 = load i8*, i8** %5329, align 8
  call void @compress(i8* %5330)
  br label %5331

; <label>:5331:                                   ; preds = %5326, %5318, %.lr.ph23.8
  %.3.8 = phi i8 [ %.3.7, %5326 ], [ 0, %.lr.ph23.8 ], [ %.3.7, %5318 ]
  call void @__loop_iteration_test___6()
  %5332 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5312, i32 0, i32 1
  %5333 = load %struct.zzzz*, %struct.zzzz** %5332, align 8
  %5334 = icmp ne %struct.zzzz* %5333, null
  br i1 %5334, label %.lr.ph23.9, label %._crit_edge24.loopexit

.lr.ph23.9:                                       ; preds = %5331
  call void @unroll_loop(i32 6)
  %5335 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5333, i32 0, i32 0
  %5336 = load i8*, i8** %5335, align 8
  %5337 = call i32 @strcmp(i8* %5336, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5338 = icmp eq i32 %5337, 0
  br i1 %5338, label %5352, label %5339

; <label>:5339:                                   ; preds = %.lr.ph23.9
  %5340 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5333, i32 0, i32 0
  %5341 = load i8*, i8** %5340, align 8
  %5342 = load i8, i8* %5341, align 1
  %5343 = sext i8 %5342 to i32
  %5344 = icmp eq i32 %5343, 45
  %5345 = zext i8 %.3.8 to i32
  %5346 = icmp ne i32 %5345, 0
  %or.cond9.9 = and i1 %5344, %5346
  br i1 %or.cond9.9, label %5352, label %5347

; <label>:5347:                                   ; preds = %5339
  %5348 = load i32, i32* @numFilesProcessed, align 4
  %5349 = add nsw i32 %5348, 1
  store i32 %5349, i32* @numFilesProcessed, align 4
  %5350 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5333, i32 0, i32 0
  %5351 = load i8*, i8** %5350, align 8
  call void @compress(i8* %5351)
  br label %5352

; <label>:5352:                                   ; preds = %5347, %5339, %.lr.ph23.9
  %.3.9 = phi i8 [ %.3.8, %5347 ], [ 0, %.lr.ph23.9 ], [ %.3.8, %5339 ]
  call void @__loop_iteration_test___6()
  %5353 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5333, i32 0, i32 1
  %5354 = load %struct.zzzz*, %struct.zzzz** %5353, align 8
  %5355 = icmp ne %struct.zzzz* %5354, null
  br i1 %5355, label %.lr.ph23.10, label %._crit_edge24.loopexit

.lr.ph23.10:                                      ; preds = %5352
  call void @unroll_loop(i32 6)
  %5356 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5354, i32 0, i32 0
  %5357 = load i8*, i8** %5356, align 8
  %5358 = call i32 @strcmp(i8* %5357, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5359 = icmp eq i32 %5358, 0
  br i1 %5359, label %5373, label %5360

; <label>:5360:                                   ; preds = %.lr.ph23.10
  %5361 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5354, i32 0, i32 0
  %5362 = load i8*, i8** %5361, align 8
  %5363 = load i8, i8* %5362, align 1
  %5364 = sext i8 %5363 to i32
  %5365 = icmp eq i32 %5364, 45
  %5366 = zext i8 %.3.9 to i32
  %5367 = icmp ne i32 %5366, 0
  %or.cond9.10 = and i1 %5365, %5367
  br i1 %or.cond9.10, label %5373, label %5368

; <label>:5368:                                   ; preds = %5360
  %5369 = load i32, i32* @numFilesProcessed, align 4
  %5370 = add nsw i32 %5369, 1
  store i32 %5370, i32* @numFilesProcessed, align 4
  %5371 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5354, i32 0, i32 0
  %5372 = load i8*, i8** %5371, align 8
  call void @compress(i8* %5372)
  br label %5373

; <label>:5373:                                   ; preds = %5368, %5360, %.lr.ph23.10
  %.3.10 = phi i8 [ %.3.9, %5368 ], [ 0, %.lr.ph23.10 ], [ %.3.9, %5360 ]
  call void @__loop_iteration_test___6()
  %5374 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5354, i32 0, i32 1
  %5375 = load %struct.zzzz*, %struct.zzzz** %5374, align 8
  %5376 = icmp ne %struct.zzzz* %5375, null
  br i1 %5376, label %.lr.ph23.11, label %._crit_edge24.loopexit

.lr.ph23.11:                                      ; preds = %5373
  call void @unroll_loop(i32 6)
  %5377 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5375, i32 0, i32 0
  %5378 = load i8*, i8** %5377, align 8
  %5379 = call i32 @strcmp(i8* %5378, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5380 = icmp eq i32 %5379, 0
  br i1 %5380, label %5394, label %5381

; <label>:5381:                                   ; preds = %.lr.ph23.11
  %5382 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5375, i32 0, i32 0
  %5383 = load i8*, i8** %5382, align 8
  %5384 = load i8, i8* %5383, align 1
  %5385 = sext i8 %5384 to i32
  %5386 = icmp eq i32 %5385, 45
  %5387 = zext i8 %.3.10 to i32
  %5388 = icmp ne i32 %5387, 0
  %or.cond9.11 = and i1 %5386, %5388
  br i1 %or.cond9.11, label %5394, label %5389

; <label>:5389:                                   ; preds = %5381
  %5390 = load i32, i32* @numFilesProcessed, align 4
  %5391 = add nsw i32 %5390, 1
  store i32 %5391, i32* @numFilesProcessed, align 4
  %5392 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5375, i32 0, i32 0
  %5393 = load i8*, i8** %5392, align 8
  call void @compress(i8* %5393)
  br label %5394

; <label>:5394:                                   ; preds = %5389, %5381, %.lr.ph23.11
  %.3.11 = phi i8 [ %.3.10, %5389 ], [ 0, %.lr.ph23.11 ], [ %.3.10, %5381 ]
  call void @__loop_iteration_test___6()
  %5395 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5375, i32 0, i32 1
  %5396 = load %struct.zzzz*, %struct.zzzz** %5395, align 8
  %5397 = icmp ne %struct.zzzz* %5396, null
  br i1 %5397, label %.lr.ph23.12, label %._crit_edge24.loopexit

.lr.ph23.12:                                      ; preds = %5394
  call void @unroll_loop(i32 6)
  %5398 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5396, i32 0, i32 0
  %5399 = load i8*, i8** %5398, align 8
  %5400 = call i32 @strcmp(i8* %5399, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5401 = icmp eq i32 %5400, 0
  br i1 %5401, label %5415, label %5402

; <label>:5402:                                   ; preds = %.lr.ph23.12
  %5403 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5396, i32 0, i32 0
  %5404 = load i8*, i8** %5403, align 8
  %5405 = load i8, i8* %5404, align 1
  %5406 = sext i8 %5405 to i32
  %5407 = icmp eq i32 %5406, 45
  %5408 = zext i8 %.3.11 to i32
  %5409 = icmp ne i32 %5408, 0
  %or.cond9.12 = and i1 %5407, %5409
  br i1 %or.cond9.12, label %5415, label %5410

; <label>:5410:                                   ; preds = %5402
  %5411 = load i32, i32* @numFilesProcessed, align 4
  %5412 = add nsw i32 %5411, 1
  store i32 %5412, i32* @numFilesProcessed, align 4
  %5413 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5396, i32 0, i32 0
  %5414 = load i8*, i8** %5413, align 8
  call void @compress(i8* %5414)
  br label %5415

; <label>:5415:                                   ; preds = %5410, %5402, %.lr.ph23.12
  %.3.12 = phi i8 [ %.3.11, %5410 ], [ 0, %.lr.ph23.12 ], [ %.3.11, %5402 ]
  call void @__loop_iteration_test___6()
  %5416 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5396, i32 0, i32 1
  %5417 = load %struct.zzzz*, %struct.zzzz** %5416, align 8
  %5418 = icmp ne %struct.zzzz* %5417, null
  br i1 %5418, label %.lr.ph23.13, label %._crit_edge24.loopexit

.lr.ph23.13:                                      ; preds = %5415
  call void @unroll_loop(i32 6)
  %5419 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5417, i32 0, i32 0
  %5420 = load i8*, i8** %5419, align 8
  %5421 = call i32 @strcmp(i8* %5420, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5422 = icmp eq i32 %5421, 0
  br i1 %5422, label %5436, label %5423

; <label>:5423:                                   ; preds = %.lr.ph23.13
  %5424 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5417, i32 0, i32 0
  %5425 = load i8*, i8** %5424, align 8
  %5426 = load i8, i8* %5425, align 1
  %5427 = sext i8 %5426 to i32
  %5428 = icmp eq i32 %5427, 45
  %5429 = zext i8 %.3.12 to i32
  %5430 = icmp ne i32 %5429, 0
  %or.cond9.13 = and i1 %5428, %5430
  br i1 %or.cond9.13, label %5436, label %5431

; <label>:5431:                                   ; preds = %5423
  %5432 = load i32, i32* @numFilesProcessed, align 4
  %5433 = add nsw i32 %5432, 1
  store i32 %5433, i32* @numFilesProcessed, align 4
  %5434 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5417, i32 0, i32 0
  %5435 = load i8*, i8** %5434, align 8
  call void @compress(i8* %5435)
  br label %5436

; <label>:5436:                                   ; preds = %5431, %5423, %.lr.ph23.13
  %.3.13 = phi i8 [ %.3.12, %5431 ], [ 0, %.lr.ph23.13 ], [ %.3.12, %5423 ]
  call void @__loop_iteration_test___6()
  %5437 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5417, i32 0, i32 1
  %5438 = load %struct.zzzz*, %struct.zzzz** %5437, align 8
  %5439 = icmp ne %struct.zzzz* %5438, null
  br i1 %5439, label %.lr.ph23.14, label %._crit_edge24.loopexit

.lr.ph23.14:                                      ; preds = %5436
  call void @unroll_loop(i32 6)
  %5440 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5438, i32 0, i32 0
  %5441 = load i8*, i8** %5440, align 8
  %5442 = call i32 @strcmp(i8* %5441, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5443 = icmp eq i32 %5442, 0
  br i1 %5443, label %5457, label %5444

; <label>:5444:                                   ; preds = %.lr.ph23.14
  %5445 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5438, i32 0, i32 0
  %5446 = load i8*, i8** %5445, align 8
  %5447 = load i8, i8* %5446, align 1
  %5448 = sext i8 %5447 to i32
  %5449 = icmp eq i32 %5448, 45
  %5450 = zext i8 %.3.13 to i32
  %5451 = icmp ne i32 %5450, 0
  %or.cond9.14 = and i1 %5449, %5451
  br i1 %or.cond9.14, label %5457, label %5452

; <label>:5452:                                   ; preds = %5444
  %5453 = load i32, i32* @numFilesProcessed, align 4
  %5454 = add nsw i32 %5453, 1
  store i32 %5454, i32* @numFilesProcessed, align 4
  %5455 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5438, i32 0, i32 0
  %5456 = load i8*, i8** %5455, align 8
  call void @compress(i8* %5456)
  br label %5457

; <label>:5457:                                   ; preds = %5452, %5444, %.lr.ph23.14
  %.3.14 = phi i8 [ %.3.13, %5452 ], [ 0, %.lr.ph23.14 ], [ %.3.13, %5444 ]
  call void @__loop_iteration_test___6()
  %5458 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5438, i32 0, i32 1
  %5459 = load %struct.zzzz*, %struct.zzzz** %5458, align 8
  %5460 = icmp ne %struct.zzzz* %5459, null
  br i1 %5460, label %.lr.ph23.15, label %._crit_edge24.loopexit

.lr.ph23.15:                                      ; preds = %5457
  call void @unroll_loop(i32 6)
  %5461 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5459, i32 0, i32 0
  %5462 = load i8*, i8** %5461, align 8
  %5463 = call i32 @strcmp(i8* %5462, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5464 = icmp eq i32 %5463, 0
  br i1 %5464, label %5478, label %5465

; <label>:5465:                                   ; preds = %.lr.ph23.15
  %5466 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5459, i32 0, i32 0
  %5467 = load i8*, i8** %5466, align 8
  %5468 = load i8, i8* %5467, align 1
  %5469 = sext i8 %5468 to i32
  %5470 = icmp eq i32 %5469, 45
  %5471 = zext i8 %.3.14 to i32
  %5472 = icmp ne i32 %5471, 0
  %or.cond9.15 = and i1 %5470, %5472
  br i1 %or.cond9.15, label %5478, label %5473

; <label>:5473:                                   ; preds = %5465
  %5474 = load i32, i32* @numFilesProcessed, align 4
  %5475 = add nsw i32 %5474, 1
  store i32 %5475, i32* @numFilesProcessed, align 4
  %5476 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5459, i32 0, i32 0
  %5477 = load i8*, i8** %5476, align 8
  call void @compress(i8* %5477)
  br label %5478

; <label>:5478:                                   ; preds = %5473, %5465, %.lr.ph23.15
  %.3.15 = phi i8 [ %.3.14, %5473 ], [ 0, %.lr.ph23.15 ], [ %.3.14, %5465 ]
  call void @__loop_iteration_test___6()
  %5479 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5459, i32 0, i32 1
  %5480 = load %struct.zzzz*, %struct.zzzz** %5479, align 8
  %5481 = icmp ne %struct.zzzz* %5480, null
  br i1 %5481, label %.lr.ph23.16, label %._crit_edge24.loopexit

.lr.ph23.16:                                      ; preds = %5478
  call void @unroll_loop(i32 6)
  %5482 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5480, i32 0, i32 0
  %5483 = load i8*, i8** %5482, align 8
  %5484 = call i32 @strcmp(i8* %5483, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5485 = icmp eq i32 %5484, 0
  br i1 %5485, label %5499, label %5486

; <label>:5486:                                   ; preds = %.lr.ph23.16
  %5487 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5480, i32 0, i32 0
  %5488 = load i8*, i8** %5487, align 8
  %5489 = load i8, i8* %5488, align 1
  %5490 = sext i8 %5489 to i32
  %5491 = icmp eq i32 %5490, 45
  %5492 = zext i8 %.3.15 to i32
  %5493 = icmp ne i32 %5492, 0
  %or.cond9.16 = and i1 %5491, %5493
  br i1 %or.cond9.16, label %5499, label %5494

; <label>:5494:                                   ; preds = %5486
  %5495 = load i32, i32* @numFilesProcessed, align 4
  %5496 = add nsw i32 %5495, 1
  store i32 %5496, i32* @numFilesProcessed, align 4
  %5497 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5480, i32 0, i32 0
  %5498 = load i8*, i8** %5497, align 8
  call void @compress(i8* %5498)
  br label %5499

; <label>:5499:                                   ; preds = %5494, %5486, %.lr.ph23.16
  %.3.16 = phi i8 [ %.3.15, %5494 ], [ 0, %.lr.ph23.16 ], [ %.3.15, %5486 ]
  call void @__loop_iteration_test___6()
  %5500 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5480, i32 0, i32 1
  %5501 = load %struct.zzzz*, %struct.zzzz** %5500, align 8
  %5502 = icmp ne %struct.zzzz* %5501, null
  br i1 %5502, label %.lr.ph23.17, label %._crit_edge24.loopexit

.lr.ph23.17:                                      ; preds = %5499
  call void @unroll_loop(i32 6)
  %5503 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5501, i32 0, i32 0
  %5504 = load i8*, i8** %5503, align 8
  %5505 = call i32 @strcmp(i8* %5504, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5506 = icmp eq i32 %5505, 0
  br i1 %5506, label %5520, label %5507

; <label>:5507:                                   ; preds = %.lr.ph23.17
  %5508 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5501, i32 0, i32 0
  %5509 = load i8*, i8** %5508, align 8
  %5510 = load i8, i8* %5509, align 1
  %5511 = sext i8 %5510 to i32
  %5512 = icmp eq i32 %5511, 45
  %5513 = zext i8 %.3.16 to i32
  %5514 = icmp ne i32 %5513, 0
  %or.cond9.17 = and i1 %5512, %5514
  br i1 %or.cond9.17, label %5520, label %5515

; <label>:5515:                                   ; preds = %5507
  %5516 = load i32, i32* @numFilesProcessed, align 4
  %5517 = add nsw i32 %5516, 1
  store i32 %5517, i32* @numFilesProcessed, align 4
  %5518 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5501, i32 0, i32 0
  %5519 = load i8*, i8** %5518, align 8
  call void @compress(i8* %5519)
  br label %5520

; <label>:5520:                                   ; preds = %5515, %5507, %.lr.ph23.17
  %.3.17 = phi i8 [ %.3.16, %5515 ], [ 0, %.lr.ph23.17 ], [ %.3.16, %5507 ]
  call void @__loop_iteration_test___6()
  %5521 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5501, i32 0, i32 1
  %5522 = load %struct.zzzz*, %struct.zzzz** %5521, align 8
  %5523 = icmp ne %struct.zzzz* %5522, null
  br i1 %5523, label %.lr.ph23.18, label %._crit_edge24.loopexit

.lr.ph23.18:                                      ; preds = %5520
  call void @unroll_loop(i32 6)
  %5524 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5522, i32 0, i32 0
  %5525 = load i8*, i8** %5524, align 8
  %5526 = call i32 @strcmp(i8* %5525, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5527 = icmp eq i32 %5526, 0
  br i1 %5527, label %5541, label %5528

; <label>:5528:                                   ; preds = %.lr.ph23.18
  %5529 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5522, i32 0, i32 0
  %5530 = load i8*, i8** %5529, align 8
  %5531 = load i8, i8* %5530, align 1
  %5532 = sext i8 %5531 to i32
  %5533 = icmp eq i32 %5532, 45
  %5534 = zext i8 %.3.17 to i32
  %5535 = icmp ne i32 %5534, 0
  %or.cond9.18 = and i1 %5533, %5535
  br i1 %or.cond9.18, label %5541, label %5536

; <label>:5536:                                   ; preds = %5528
  %5537 = load i32, i32* @numFilesProcessed, align 4
  %5538 = add nsw i32 %5537, 1
  store i32 %5538, i32* @numFilesProcessed, align 4
  %5539 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5522, i32 0, i32 0
  %5540 = load i8*, i8** %5539, align 8
  call void @compress(i8* %5540)
  br label %5541

; <label>:5541:                                   ; preds = %5536, %5528, %.lr.ph23.18
  %.3.18 = phi i8 [ %.3.17, %5536 ], [ 0, %.lr.ph23.18 ], [ %.3.17, %5528 ]
  call void @__loop_iteration_test___6()
  %5542 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5522, i32 0, i32 1
  %5543 = load %struct.zzzz*, %struct.zzzz** %5542, align 8
  %5544 = icmp ne %struct.zzzz* %5543, null
  br i1 %5544, label %.lr.ph23.19, label %._crit_edge24.loopexit

.lr.ph23.19:                                      ; preds = %5541
  call void @unroll_loop(i32 6)
  %5545 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5543, i32 0, i32 0
  %5546 = load i8*, i8** %5545, align 8
  %5547 = call i32 @strcmp(i8* %5546, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5548 = icmp eq i32 %5547, 0
  br i1 %5548, label %5562, label %5549

; <label>:5549:                                   ; preds = %.lr.ph23.19
  %5550 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5543, i32 0, i32 0
  %5551 = load i8*, i8** %5550, align 8
  %5552 = load i8, i8* %5551, align 1
  %5553 = sext i8 %5552 to i32
  %5554 = icmp eq i32 %5553, 45
  %5555 = zext i8 %.3.18 to i32
  %5556 = icmp ne i32 %5555, 0
  %or.cond9.19 = and i1 %5554, %5556
  br i1 %or.cond9.19, label %5562, label %5557

; <label>:5557:                                   ; preds = %5549
  %5558 = load i32, i32* @numFilesProcessed, align 4
  %5559 = add nsw i32 %5558, 1
  store i32 %5559, i32* @numFilesProcessed, align 4
  %5560 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5543, i32 0, i32 0
  %5561 = load i8*, i8** %5560, align 8
  call void @compress(i8* %5561)
  br label %5562

; <label>:5562:                                   ; preds = %5557, %5549, %.lr.ph23.19
  call void @__loop_iteration_test___6()
  %5563 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5543, i32 0, i32 1
  %5564 = load %struct.zzzz*, %struct.zzzz** %5563, align 8
  br label %._crit_edge24.loopexit
}

declare void @__loop_termination_test___6()

declare void @__loop_iteration_test___6()

; Function Attrs: noinline nounwind uwtable
define internal void @compress_clone(i8*) #0 {
  %2 = alloca %struct.stat, align 8, !track !19
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %3 = icmp eq i64 10000607, 0
  %4 = icmp eq i8* %0, null
  %5 = load i32, i32* @srcMode, align 4
  %6 = icmp ne i32 3, 1
  %or.cond = and i1 false, true
  br i1 false, label %7, label %9

; <label>:7:                                      ; preds = %1
  %8 = getelementptr [21 x i8], [21 x i8]* @.str.53, i32 0, i32 0
  call void @panic(i8* %8) #12
  unreachable

; <label>:9:                                      ; preds = %1
  %10 = load i32, i32* @srcMode, align 4
  switch i32 3, label %26 [
    i32 1, label %11
    i32 3, label %16
    i32 2, label %22
  ]

; <label>:11:                                     ; preds = %9
  %12 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %13 = getelementptr [8 x i8], [8 x i8]* @.str.54, i32 0, i32 0
  call void @copyFileName(i8* %12, i8* %13)
  %14 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %15 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %14, i8* %15)
  br label %26

; <label>:16:                                     ; preds = %9
  %17 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName_clone.38(i8* %17, i8* %0)
  %18 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @copyFileName_clone.40(i8* %18, i8* %0)
  %19 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %20 = getelementptr [5 x i8], [5 x i8]* @.str, i32 0, i32 0
  %21 = call i8* @strcat(i8* %19, i8* %20) #9, !track !20
  br label %26

; <label>:22:                                     ; preds = %9
  %23 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @copyFileName(i8* %23, i8* %0)
  %24 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %25 = getelementptr [9 x i8], [9 x i8]* @.str.55, i32 0, i32 0
  call void @copyFileName(i8* %24, i8* %25)
  br label %26

; <label>:26:                                     ; preds = %22, %16, %11, %9
  %27 = load i32, i32* @srcMode, align 4
  %28 = icmp ne i32 3, 1
  br i1 true, label %29, label %44

; <label>:29:                                     ; preds = %26
  %30 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %31 = call i8 @containsDubiousChars_clone(i8* %30)
  %32 = zext i8 0 to i32
  %33 = icmp ne i32 0, 0
  br i1 false, label %34, label %44

; <label>:34:                                     ; preds = %29
  %35 = load i8, i8* @noisy, align 1
  %36 = icmp ne i8 %35, 0
  br i1 %36, label %37, label %43

; <label>:37:                                     ; preds = %34
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %39 = load i8*, i8** @progName, align 8
  %40 = getelementptr [39 x i8], [39 x i8]* @.str.56, i32 0, i32 0
  %41 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* %40, i8* %39, i8* %41)
  br label %43

; <label>:43:                                     ; preds = %37, %34
  call void @setExit(i32 1)
  br label %281

; <label>:44:                                     ; preds = %29, %26
  %45 = load i32, i32* @srcMode, align 4
  %46 = icmp ne i32 3, 1
  br i1 true, label %47, label %60

; <label>:47:                                     ; preds = %44
  %48 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %49 = call i8 @fileExists_clone(i8* %48)
  %50 = icmp ne i8 %49, 0
  br i1 %50, label %60, label %51

; <label>:51:                                     ; preds = %47
  %52 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %53 = load i8*, i8** @progName, align 8
  %54 = call i32* @__errno_location() #13
  %55 = load i32, i32* %54, align 4
  %56 = call i8* @strerror(i32 %55) #9, !track !21
  %57 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %58 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %59 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %52, i8* %57, i8* %53, i8* %58, i8* %56)
  call void @setExit(i32 1)
  br label %281

; <label>:60:                                     ; preds = %47, %44
  br label %61

; <label>:61:                                     ; preds = %81, %60
  %indvars.iv = phi i64 [ 0, %60 ], [ %indvars.iv.next, %81 ]
  call void @unroll_loop(i32 13)
  %62 = shl i64 %indvars.iv, 3
  %63 = inttoptr i64 %62 to i8**
  %uglygep = getelementptr i8, i8* bitcast ([4 x i8*]* @zSuffix to i8*), i64 %62
  %uglygep1 = bitcast i8* %uglygep to i8**
  %64 = load i8*, i8** %uglygep1, align 8
  %65 = call zeroext i8 @hasSuffix(i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @inName, i64 0, i64 0), i8* %64)
  %66 = icmp ne i8 %65, 0
  br i1 %66, label %67, label %81

; <label>:67:                                     ; preds = %61
  %.0.lcssa3.wide = phi i64 [ %indvars.iv, %61 ]
  %68 = trunc i64 %.0.lcssa3.wide to i32
  %69 = load i8, i8* @noisy, align 1
  %70 = icmp ne i8 0, 0
  br i1 false, label %71, label %80

; <label>:71:                                     ; preds = %67
  %72 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %73 = load i8*, i8** @progName, align 8
  %74 = sext i32 %68 to i64
  %75 = getelementptr inbounds [4 x i8*], [4 x i8*]* @zSuffix, i64 0, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr [42 x i8], [42 x i8]* @.str.58, i32 0, i32 0
  %78 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %79 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %72, i8* %77, i8* %73, i8* %78, i8* %76)
  br label %80

; <label>:80:                                     ; preds = %71, %67
  call void @setExit(i32 1)
  br label %281

; <label>:81:                                     ; preds = %61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %82 = icmp ult i64 %indvars.iv.next, 4
  br i1 %82, label %61, label %83

; <label>:83:                                     ; preds = %81
  %84 = load i32, i32* @srcMode, align 4
  %85 = icmp eq i32 3, 3
  %86 = load i32, i32* @srcMode, align 4
  %87 = icmp eq i32 3, 2
  %or.cond3 = or i1 true, false
  br i1 true, label %88, label %101

; <label>:88:                                     ; preds = %83
  %89 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %90 = call i32 @stat64(i8* %89, %struct.stat* %2) #9
  %91 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = and i32 %92, 61440
  %94 = icmp eq i32 %93, 16384
  br i1 %94, label %95, label %101

; <label>:95:                                     ; preds = %88
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %97 = load i8*, i8** @progName, align 8
  %98 = getelementptr [35 x i8], [35 x i8]* @.str.59, i32 0, i32 0
  %99 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %100 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %96, i8* %98, i8* %97, i8* %99)
  call void @setExit(i32 1)
  br label %281

; <label>:101:                                    ; preds = %88, %83
  %102 = load i32, i32* @srcMode, align 4
  %103 = icmp ne i32 3, 3
  %104 = load i8, i8* @forceOverwrite, align 1
  %105 = icmp ne i8 1, 0
  %or.cond5 = or i1 false, true
  br i1 true, label %121, label %106

; <label>:106:                                    ; preds = %101
  %107 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %108 = call zeroext i8 @notAStandardFile(i8* %107)
  %109 = zext i8 %108 to i32
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %121

; <label>:111:                                    ; preds = %106
  %112 = load i8, i8* @noisy, align 1
  %113 = icmp ne i8 %112, 0
  br i1 %113, label %114, label %120

; <label>:114:                                    ; preds = %111
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %116 = load i8*, i8** @progName, align 8
  %117 = getelementptr [41 x i8], [41 x i8]* @.str.60, i32 0, i32 0
  %118 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %119 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* %117, i8* %116, i8* %118)
  br label %120

; <label>:120:                                    ; preds = %114, %111
  call void @setExit(i32 1)
  br label %281

; <label>:121:                                    ; preds = %106, %101
  %122 = load i32, i32* @srcMode, align 4
  %123 = icmp eq i32 3, 3
  br i1 true, label %124, label %141

; <label>:124:                                    ; preds = %121
  %125 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %126 = call i8 @fileExists_clone.44(i8* %125)
  %127 = zext i8 %126 to i32
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %141

; <label>:129:                                    ; preds = %124
  %130 = load i8, i8* @forceOverwrite, align 1
  %131 = icmp ne i8 1, 0
  br i1 true, label %132, label %135

; <label>:132:                                    ; preds = %129
  %133 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %134 = call i32 @remove(i8* %133) #9
  br label %141

; <label>:135:                                    ; preds = %129
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %137 = load i8*, i8** @progName, align 8
  %138 = getelementptr [36 x i8], [36 x i8]* @.str.61, i32 0, i32 0
  %139 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %140 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* %138, i8* %137, i8* %139)
  call void @setExit(i32 1)
  br label %281

; <label>:141:                                    ; preds = %132, %124, %121
  %142 = load i32, i32* @srcMode, align 4
  %143 = icmp ne i32 3, 3
  %144 = load i8, i8* @forceOverwrite, align 1
  %145 = icmp ne i8 1, 0
  %or.cond7 = or i1 false, true
  br i1 true, label %161, label %146

; <label>:146:                                    ; preds = %141
  %147 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %148 = call i32 @countHardLinks(i8* %147)
  %149 = icmp sgt i32 %148, 0
  br i1 %149, label %150, label %161

; <label>:150:                                    ; preds = %146
  %151 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %152 = load i8*, i8** @progName, align 8
  %153 = icmp sgt i32 %148, 1
  %154 = zext i1 %153 to i64
  %155 = getelementptr [2 x i8], [2 x i8]* @.str.63, i32 0, i32 0
  %156 = getelementptr [1 x i8], [1 x i8]* @.str.4, i32 0, i32 0
  %157 = select i1 %153, i8* %155, i8* %156
  %158 = getelementptr [40 x i8], [40 x i8]* @.str.62, i32 0, i32 0
  %159 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %160 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %151, i8* %158, i8* %152, i8* %159, i32 %148, i8* %157)
  call void @setExit(i32 1)
  br label %281

; <label>:161:                                    ; preds = %146, %141
  %162 = load i32, i32* @srcMode, align 4
  %163 = icmp eq i32 3, 3
  br i1 true, label %164, label %166

; <label>:164:                                    ; preds = %161
  %165 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @saveInputFileMetaInfo_clone(i8* %165)
  br label %166

; <label>:166:                                    ; preds = %164, %161
  %167 = load i32, i32* @srcMode, align 4
  switch i32 3, label %255 [
    i32 1, label %168
    i32 2, label %185
    i32 3, label %219
  ]

; <label>:168:                                    ; preds = %166
  %169 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %170 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %171 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %172 = call i32 @fileno(%struct._IO_FILE* %171) #9
  %173 = call i32 @isatty(i32 %172) #9
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %257

; <label>:175:                                    ; preds = %168
  %176 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %177 = load i8*, i8** @progName, align 8
  %178 = getelementptr [50 x i8], [50 x i8]* @.str.64, i32 0, i32 0
  %179 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %176, i8* %178, i8* %177)
  %180 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %181 = load i8*, i8** @progName, align 8
  %182 = load i8*, i8** @progName, align 8
  %183 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %184 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %180, i8* %183, i8* %181, i8* %182)
  call void @setExit(i32 1)
  br label %281

; <label>:185:                                    ; preds = %166
  %186 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %187 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %188 = call %struct._IO_FILE* @fopen64(i8* %186, i8* %187), !track !22
  %189 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %190 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %191 = call i32 @fileno(%struct._IO_FILE* %190) #9
  %192 = call i32 @isatty(i32 %191) #9
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %194, label %208

; <label>:194:                                    ; preds = %185
  %195 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %196 = load i8*, i8** @progName, align 8
  %197 = getelementptr [50 x i8], [50 x i8]* @.str.64, i32 0, i32 0
  %198 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %195, i8* %197, i8* %196)
  %199 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %200 = load i8*, i8** @progName, align 8
  %201 = load i8*, i8** @progName, align 8
  %202 = getelementptr [34 x i8], [34 x i8]* @.str.65, i32 0, i32 0
  %203 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %199, i8* %202, i8* %200, i8* %201)
  %204 = icmp ne %struct._IO_FILE* %188, null
  br i1 %204, label %205, label %207

; <label>:205:                                    ; preds = %194
  %206 = call i32 @fclose(%struct._IO_FILE* %188)
  br label %207

; <label>:207:                                    ; preds = %205, %194
  call void @setExit(i32 1)
  br label %281

; <label>:208:                                    ; preds = %185
  %209 = icmp eq %struct._IO_FILE* %188, null
  br i1 %209, label %210, label %257

; <label>:210:                                    ; preds = %208
  %211 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %212 = load i8*, i8** @progName, align 8
  %213 = call i32* @__errno_location() #13
  %214 = load i32, i32* %213, align 4
  %215 = call i8* @strerror(i32 %214) #9, !track !23
  %216 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %217 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %218 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %211, i8* %216, i8* %212, i8* %217, i8* %215)
  call void @setExit(i32 1)
  br label %281

; <label>:219:                                    ; preds = %166
  %220 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %221 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %222 = call %struct._IO_FILE* @fopen64(i8* %220, i8* %221), !track !24
  %223 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %224 = getelementptr [3 x i8], [3 x i8]* @.str.67, i32 0, i32 0
  %225 = call %struct._IO_FILE* @fopen_output_safely_clone(i8* %223, i8* %224)
  %226 = icmp eq %struct._IO_FILE* %225, null
  br i1 %226, label %227, label %240

; <label>:227:                                    ; preds = %219
  %228 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %229 = load i8*, i8** @progName, align 8
  %230 = call i32* @__errno_location() #13
  %231 = load i32, i32* %230, align 4
  %232 = call i8* @strerror(i32 %231) #9, !track !25
  %233 = getelementptr [38 x i8], [38 x i8]* @.str.68, i32 0, i32 0
  %234 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %235 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %228, i8* %233, i8* %229, i8* %234, i8* %232)
  %236 = icmp ne %struct._IO_FILE* %222, null
  br i1 %236, label %237, label %239

; <label>:237:                                    ; preds = %227
  %238 = call i32 @fclose(%struct._IO_FILE* %222)
  br label %239

; <label>:239:                                    ; preds = %237, %227
  call void @setExit(i32 1)
  br label %281

; <label>:240:                                    ; preds = %219
  %241 = icmp eq %struct._IO_FILE* %222, null
  br i1 %241, label %242, label %257

; <label>:242:                                    ; preds = %240
  %243 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %244 = load i8*, i8** @progName, align 8
  %245 = call i32* @__errno_location() #13
  %246 = load i32, i32* %245, align 4
  %247 = call i8* @strerror(i32 %246) #9, !track !26
  %248 = getelementptr [35 x i8], [35 x i8]* @.str.57, i32 0, i32 0
  %249 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %250 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %243, i8* %248, i8* %244, i8* %249, i8* %247)
  %251 = icmp ne %struct._IO_FILE* %225, null
  br i1 %251, label %252, label %254

; <label>:252:                                    ; preds = %242
  %253 = call i32 @fclose(%struct._IO_FILE* %225)
  br label %254

; <label>:254:                                    ; preds = %252, %242
  call void @setExit(i32 1)
  br label %281

; <label>:255:                                    ; preds = %166
  %256 = getelementptr [22 x i8], [22 x i8]* @.str.69, i32 0, i32 0
  call void @panic(i8* %256) #12
  unreachable

; <label>:257:                                    ; preds = %240, %208, %168
  %.02 = phi %struct._IO_FILE* [ %170, %168 ], [ %189, %208 ], [ %225, %240 ]
  %.01 = phi %struct._IO_FILE* [ %169, %168 ], [ %188, %208 ], [ %222, %240 ]
  %258 = load i32, i32* @verbosity, align 4
  %259 = icmp sge i32 0, 1
  br i1 false, label %260, label %268

; <label>:260:                                    ; preds = %257
  %261 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %262 = getelementptr [7 x i8], [7 x i8]* @.str.70, i32 0, i32 0
  %263 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %264 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %261, i8* %262, i8* %263)
  %265 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  call void @pad(i8* %265)
  %266 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %267 = call i32 @fflush(%struct._IO_FILE* %266)
  br label %268

; <label>:268:                                    ; preds = %260, %257
  store %struct._IO_FILE* %.02, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 1, i8* @deleteOutputOnInterrupt, align 1
  call void @compressStream(%struct._IO_FILE* %.01, %struct._IO_FILE* %.02)
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  %269 = load i32, i32* @srcMode, align 4
  %270 = icmp eq i32 %269, 3
  br i1 %270, label %271, label %280

; <label>:271:                                    ; preds = %268
  %272 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  call void @applySavedTimeInfoToOutputFile_clone(i8* %272)
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  %273 = load i8, i8* @keepInputFiles, align 1
  %274 = icmp ne i8 1, 0
  br i1 true, label %280, label %275

; <label>:275:                                    ; preds = %271
  %276 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %277 = call i32 @remove(i8* %276) #9
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %279, label %280

; <label>:279:                                    ; preds = %275
  call void @ioError() #12
  unreachable

; <label>:280:                                    ; preds = %275, %271, %268
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  br label %281

; <label>:281:                                    ; preds = %280, %254, %239, %210, %207, %175, %150, %135, %120, %95, %80, %51, %43
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @copyFileName_clone.38(i8*, i8*) #0 {
  %3 = getelementptr [10 x i8], [10 x i8]* @98, i64 0, i64 0
  %4 = call i64 @strlen(i8* %3) #10
  %5 = icmp ugt i64 9, 1024
  br i1 false, label %6, label %11

; <label>:6:                                      ; preds = %2
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = getelementptr [120 x i8], [120 x i8]* @.str.47, i32 0, i32 0
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %1, i32 1024)
  call void @setExit(i32 1)
  %10 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %10) #11
  unreachable

; <label>:11:                                     ; preds = %2
  %12 = call i8* @strncpy(i8* %0, i8* %1, i64 1024) #9, !track !17
  %13 = getelementptr inbounds i8, i8* %0, i64 1024
  store i8 0, i8* %13, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @copyFileName_clone.40(i8*, i8*) #0 {
  %3 = getelementptr [10 x i8], [10 x i8]* @99, i64 0, i64 0
  %4 = call i64 @strlen(i8* %3) #10
  %5 = icmp ugt i64 9, 1024
  br i1 false, label %6, label %11

; <label>:6:                                      ; preds = %2
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = getelementptr [120 x i8], [120 x i8]* @.str.47, i32 0, i32 0
  %9 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* %8, i8* %1, i32 1024)
  call void @setExit(i32 1)
  %10 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %10) #11
  unreachable

; <label>:11:                                     ; preds = %2
  %12 = call i8* @strncpy(i8* %0, i8* %1, i64 1024) #9, !track !17
  %13 = getelementptr inbounds i8, i8* %0, i64 1024
  store i8 0, i8* %13, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @containsDubiousChars_clone(i8*) #0 {
  ret i8 0
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @fileExists_clone(i8*) #0 {
  %2 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %3 = call %struct._IO_FILE* @fopen64(i8* %0, i8* %2), !track !39
  %4 = icmp ne %struct._IO_FILE* %3, null
  %5 = zext i1 %4 to i32
  %6 = trunc i32 %5 to i8
  %7 = icmp ne %struct._IO_FILE* %3, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %1
  %9 = call i32 @fclose(%struct._IO_FILE* %3)
  br label %10

; <label>:10:                                     ; preds = %8, %1
  ret i8 %6
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @fileExists_clone.44(i8*) #0 {
  %2 = getelementptr [3 x i8], [3 x i8]* @.str.66, i32 0, i32 0
  %3 = call %struct._IO_FILE* @fopen64(i8* %0, i8* %2), !track !39
  %4 = icmp ne %struct._IO_FILE* %3, null
  %5 = zext i1 %4 to i32
  %6 = trunc i32 %5 to i8
  %7 = icmp ne %struct._IO_FILE* %3, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %1
  %9 = call i32 @fclose(%struct._IO_FILE* %3)
  br label %10

; <label>:10:                                     ; preds = %8, %1
  ret i8 %6
}

; Function Attrs: noinline nounwind uwtable
define internal void @saveInputFileMetaInfo_clone(i8*) #0 {
  %2 = call i32 @stat64(i8* %0, %struct.stat* @fileMetaInfo) #9
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  call void @ioError() #12
  unreachable

; <label>:5:                                      ; preds = %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._IO_FILE* @fopen_output_safely_clone(i8*, i8*) #2 {
  %3 = call i32 (i8*, i32, ...) @open64(i8* %0, i32 193, i32 384)
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %10, label %5

; <label>:5:                                      ; preds = %2
  %6 = call %struct._IO_FILE* @fdopen(i32 %3, i8* %1) #9, !track !47
  %7 = icmp eq %struct._IO_FILE* %6, null
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %5
  %9 = call i32 @close(i32 %3)
  br label %10

; <label>:10:                                     ; preds = %8, %5, %2
  %.0 = phi %struct._IO_FILE* [ null, %2 ], [ %6, %8 ], [ %6, %5 ]
  ret %struct._IO_FILE* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @applySavedTimeInfoToOutputFile_clone(i8*) #0 {
  %2 = alloca %struct.timespec, align 8, !track !51
  %3 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 11, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0
  store i64 %4, i64* %5, align 8
  %6 = getelementptr %struct.stat, %struct.stat* @fileMetaInfo, i32 0, i32 12, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 1
  store i64 %7, i64* %8, align 8
  %9 = call i32 @utime(i8* %0, %struct.timespec* %2) #9
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %1
  call void @ioError() #12
  unreachable

; <label>:12:                                     ; preds = %1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main(i32, i8**) #0 {
  %3 = call i8* @malloc(i64 32)
  %4 = bitcast i8* %3 to i8**
  store i8** %4, i8*** @__argv_new__
  %5 = load i8**, i8*** @__argv_new__
  %6 = getelementptr i8*, i8** %5, i32 0
  %7 = call i8* @malloc(i64 100)
  store i8* %7, i8** %6
  %8 = load i8*, i8** %6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i32 0, i32 0), i64 100, i1 false)
  %9 = getelementptr i8, i8* %8, i32 5
  store i8 0, i8* %9
  %10 = load i8**, i8*** @__argv_new__
  %11 = getelementptr i8*, i8** %10, i32 1
  %12 = call i8* @malloc(i64 100)
  store i8* %12, i8** %11
  %13 = load i8*, i8** %11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i32 0, i32 0), i64 100, i1 false)
  %14 = getelementptr i8, i8* %13, i32 5
  store i8 0, i8* %14
  %15 = load i8**, i8*** @__argv_new__
  %16 = getelementptr i8*, i8** %15, i32 2
  %17 = call i8* @malloc(i64 100)
  store i8* %17, i8** %16
  %18 = load i8*, i8** %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i32 0, i32 0), i64 100, i1 false)
  %19 = getelementptr i8, i8* %18, i32 9
  store i8 0, i8* %19
  %20 = load i8**, i8*** @__argv_new__
  %21 = getelementptr i8*, i8** %20, i32 3
  store i8* null, i8** %21
  %22 = alloca %struct.zzzz*, align 8, !track !9
  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase, align 8
  store i8 0, i8* @smallMode, align 1
  store i8 0, i8* @keepInputFiles, align 1
  store i8 0, i8* @forceOverwrite, align 1
  store i8 1, i8* @noisy, align 1
  store i32 0, i32* @verbosity, align 4
  store i32 9, i32* @blockSize100k, align 4
  store i8 0, i8* @testFailsExist, align 1
  store i8 0, i8* @unzFailsExist, align 1
  store i32 0, i32* @numFileNames, align 4
  store i32 0, i32* @numFilesProcessed, align 4
  store i32 30, i32* @workFactor, align 4
  store i8 0, i8* @deleteOutputOnInterrupt, align 1
  store i32 0, i32* @exitValue, align 4
  %23 = call void (i32)* @signal(i32 11, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %24 = call void (i32)* @signal(i32 7, void (i32)* @mySIGSEGVorSIGBUScatcher) #9
  %25 = getelementptr [1034 x i8], [1034 x i8]* @inName, i32 0, i32 0
  %26 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone(i8* %25, i8* %26)
  %27 = getelementptr [1034 x i8], [1034 x i8]* @outName, i32 0, i32 0
  %28 = getelementptr [7 x i8], [7 x i8]* @.str.6, i32 0, i32 0
  call void @copyFileName_clone.3(i8* %27, i8* %28)
  %29 = getelementptr inbounds i8*, i8** %20, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i32 0, i32 0
  call void @copyFileName_clone.5(i8* %31, i8* %30)
  %32 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  store i8* %32, i8** @progName, align 8
  %33 = getelementptr [1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 98 to i32
  %36 = icmp ne i32 98, 0
  br i1 true, label %.lr.ph63, label %._crit_edge64

.lr.ph63:                                         ; preds = %2
  br label %37

; <label>:37:                                     ; preds = %.lr.ph63
  call void @unroll_loop(i32 0)
  %38 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 0), align 1
  %39 = sext i8 98 to i32
  %40 = icmp eq i32 98, 47
  br i1 false, label %41, label %42

; <label>:41:                                     ; preds = %37
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), i8** @progName, align 8
  br label %42

; <label>:42:                                     ; preds = %41, %37
  call void @__loop_iteration_test___0()
  %43 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %44 = sext i8 122 to i32
  %45 = icmp ne i32 122, 0
  br i1 true, label %542, label %._crit_edge64.loopexit

._crit_edge64.loopexit:                           ; preds = %709, %700, %691, %682, %673, %664, %655, %646, %637, %628, %619, %610, %601, %592, %583, %574, %565, %556, %547, %42
  call void @__loop_termination_test___0()
  br label %._crit_edge64

._crit_edge64:                                    ; preds = %._crit_edge64.loopexit, %2
  store %struct.zzzz* null, %struct.zzzz** %22, align 8
  %46 = getelementptr [6 x i8], [6 x i8]* @.str.7, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone(%struct.zzzz** %22, i8* %46)
  %47 = getelementptr [5 x i8], [5 x i8]* @.str.8, i32 0, i32 0
  call void @addFlagsFromEnvVar_clone.9(%struct.zzzz** %22, i8* %47)
  %48 = sub nsw i32 3, 1, !track_argc !10
  %49 = icmp sle i32 1, 2
  br i1 true, label %.lr.ph57.preheader, label %._crit_edge58

.lr.ph57.preheader:                               ; preds = %._crit_edge64
  %scevgep4 = getelementptr i8*, i8** %20, i64 1
  br label %.lr.ph57

.lr.ph57:                                         ; preds = %.lr.ph57.preheader
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %50 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %51 = load i8*, i8** %scevgep4, align 8
  %52 = call %struct.zzzz* @snocString_clone(%struct.zzzz* null, i8* %51)
  store %struct.zzzz* %52, %struct.zzzz** %22, align 8
  br i1 true, label %.lr.ph57.1, label %._crit_edge58.loopexit

._crit_edge58.loopexit:                           ; preds = %.lr.ph57.1, %.lr.ph57
  call void @__loop_termination_test___1()
  br label %._crit_edge58

._crit_edge58:                                    ; preds = %._crit_edge58.loopexit, %._crit_edge64
  store i32 7, i32* @longestFileName, align 4
  store i32 0, i32* @numFileNames, align 4
  %53 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %54 = icmp ne i64 10000562, 0
  %55 = icmp ne %struct.zzzz* %53, null
  br i1 true, label %.lr.ph53.preheader, label %._crit_edge54

.lr.ph53.preheader:                               ; preds = %._crit_edge58
  br label %.lr.ph53

.lr.ph53:                                         ; preds = %.lr.ph53.preheader
  call void @unroll_loop(i32 2)
  %56 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr [6 x i8], [6 x i8]* @8, i64 0, i64 0
  %59 = getelementptr [3 x i8], [3 x i8]* @9, i64 0, i64 0
  %60 = call i32 @strcmp(i8* %58, i8* %59) #10
  %61 = icmp eq i32 1, 0
  br i1 false, label %82, label %62

; <label>:62:                                     ; preds = %.lr.ph53
  %63 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 45 to i32
  %67 = icmp eq i32 45, 45
  br i1 true, label %82, label %68

; <label>:68:                                     ; preds = %62
  %69 = load i32, i32* @numFileNames, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* @numFileNames, align 4
  %71 = load i32, i32* @longestFileName, align 4
  %72 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i64 @strlen(i8* %73) #10
  %75 = trunc i64 %74 to i32
  %76 = icmp slt i32 %71, %75
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %68
  %78 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @strlen(i8* %79) #10
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* @longestFileName, align 4
  br label %82

; <label>:82:                                     ; preds = %77, %68, %62, %.lr.ph53
  %.1 = phi i8 [ 0, %.lr.ph53 ], [ 1, %62 ], [ 1, %77 ], [ 1, %68 ]
  call void @__loop_iteration_test___2()
  %83 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %53, i32 0, i32 1
  %84 = load %struct.zzzz*, %struct.zzzz** %83, align 8
  %85 = icmp ne i64 10000590, 0
  %86 = icmp ne %struct.zzzz* %84, null
  br i1 true, label %.lr.ph53.1, label %._crit_edge54.loopexit

._crit_edge54.loopexit:                           ; preds = %1286, %1256, %1226, %1196, %1166, %1136, %1106, %1076, %1046, %1016, %986, %956, %926, %896, %866, %836, %806, %776, %745, %82
  call void @__loop_termination_test___2()
  br label %._crit_edge54

._crit_edge54:                                    ; preds = %._crit_edge54.loopexit, %._crit_edge58
  %87 = load i32, i32* @numFileNames, align 4
  %88 = icmp eq i32 1, 0
  br i1 false, label %89, label %90

; <label>:89:                                     ; preds = %._crit_edge54
  store i32 1, i32* @srcMode, align 4
  br label %91

; <label>:90:                                     ; preds = %._crit_edge54
  store i32 3, i32* @srcMode, align 4
  br label %91

; <label>:91:                                     ; preds = %90, %89
  store i32 1, i32* @opMode, align 4
  %92 = load i8*, i8** @progName, align 8
  %93 = getelementptr [6 x i8], [6 x i8]* @.str.10, i32 0, i32 0
  %94 = call i8* @strstr(i8* %92, i8* %93) #10, !track !11
  %95 = icmp ne i64 0, 0
  %96 = icmp ne i8* null, null
  br i1 false, label %103, label %97

; <label>:97:                                     ; preds = %91
  %98 = load i8*, i8** @progName, align 8
  %99 = getelementptr [6 x i8], [6 x i8]* @.str.11, i32 0, i32 0
  %100 = call i8* @strstr(i8* %98, i8* %99) #10, !track !12
  %101 = icmp ne i64 0, 0
  %102 = icmp ne i8* null, null
  br i1 false, label %103, label %104

; <label>:103:                                    ; preds = %97, %91
  store i32 2, i32* @opMode, align 4
  br label %104

; <label>:104:                                    ; preds = %103, %97
  %105 = load i8*, i8** @progName, align 8
  %106 = getelementptr [6 x i8], [6 x i8]* @.str.12, i32 0, i32 0
  %107 = call i8* @strstr(i8* %105, i8* %106) #10, !track !13
  %108 = icmp ne i64 0, 0
  %109 = icmp ne i8* null, null
  br i1 false, label %128, label %110

; <label>:110:                                    ; preds = %104
  %111 = load i8*, i8** @progName, align 8
  %112 = getelementptr [6 x i8], [6 x i8]* @.str.13, i32 0, i32 0
  %113 = call i8* @strstr(i8* %111, i8* %112) #10, !track !14
  %114 = icmp ne i64 0, 0
  %115 = icmp ne i8* null, null
  br i1 false, label %128, label %116

; <label>:116:                                    ; preds = %110
  %117 = load i8*, i8** @progName, align 8
  %118 = getelementptr [5 x i8], [5 x i8]* @.str.14, i32 0, i32 0
  %119 = call i8* @strstr(i8* %117, i8* %118) #10, !track !15
  %120 = icmp ne i64 0, 0
  %121 = icmp ne i8* null, null
  br i1 false, label %128, label %122

; <label>:122:                                    ; preds = %116
  %123 = load i8*, i8** @progName, align 8
  %124 = getelementptr [5 x i8], [5 x i8]* @.str.15, i32 0, i32 0
  %125 = call i8* @strstr(i8* %123, i8* %124) #10, !track !16
  %126 = icmp ne i64 0, 0
  %127 = icmp ne i8* null, null
  br i1 false, label %128, label %133

; <label>:128:                                    ; preds = %122, %116, %110, %104
  store i32 2, i32* @opMode, align 4
  %129 = load i32, i32* @numFileNames, align 4
  %130 = icmp eq i32 %129, 0
  %131 = zext i1 %130 to i64
  %132 = select i1 %130, i32 1, i32 2
  store i32 %132, i32* @srcMode, align 4
  br label %133

; <label>:133:                                    ; preds = %128, %122
  %134 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %135 = icmp ne i64 10000562, 0
  %136 = icmp ne %struct.zzzz* %134, null
  br i1 true, label %.lr.ph48.preheader, label %.loopexit17

.lr.ph48.preheader:                               ; preds = %133
  br label %.lr.ph48

.lr.ph48:                                         ; preds = %.lr.ph48.preheader
  call void @unroll_loop(i32 3)
  %137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr [6 x i8], [6 x i8]* @14, i64 0, i64 0
  %140 = getelementptr [3 x i8], [3 x i8]* @15, i64 0, i64 0
  %141 = call i32 @strcmp(i8* %139, i8* %140) #10
  %142 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %143

; <label>:143:                                    ; preds = %.lr.ph48
  %144 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  %146 = load i8, i8* %145, align 1
  %147 = sext i8 45 to i32
  %148 = icmp eq i32 45, 45
  br i1 true, label %149, label %._crit_edge43

; <label>:149:                                    ; preds = %143
  %150 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 1
  %153 = load i8, i8* %152, align 1
  %154 = sext i8 102 to i32
  %155 = icmp ne i32 102, 45
  br i1 true, label %156, label %._crit_edge43

; <label>:156:                                    ; preds = %149
  %157 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds i8, i8* %158, i64 1
  %160 = load i8, i8* %159, align 1
  %161 = sext i8 102 to i32
  %162 = icmp ne i32 102, 0
  br i1 true, label %.lr.ph42.preheader, label %._crit_edge43

.lr.ph42.preheader:                               ; preds = %156
  %163 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 0
  br label %.lr.ph42

.lr.ph42:                                         ; preds = %.lr.ph42.preheader
  call void @unroll_loop(i32 4)
  %164 = load i8*, i8** %163, align 8
  %scevgep = getelementptr i8, i8* %164, i64 1
  %165 = load i8, i8* %scevgep, align 1
  %166 = sext i8 102 to i32
  switch i32 102, label %.loopexit1 [
    i32 99, label %167
    i32 100, label %168
    i32 122, label %169
    i32 102, label %170
    i32 116, label %171
    i32 107, label %172
    i32 115, label %173
    i32 113, label %174
    i32 49, label %175
    i32 50, label %176
    i32 51, label %177
    i32 52, label %178
    i32 53, label %179
    i32 54, label %180
    i32 55, label %181
    i32 56, label %182
    i32 57, label %183
    i32 86, label %184
    i32 76, label %184
    i32 118, label %185
    i32 104, label %.loopexit2
  ]

; <label>:167:                                    ; preds = %.lr.ph42
  store i32 2, i32* @srcMode, align 4
  br label %198

; <label>:168:                                    ; preds = %.lr.ph42
  store i32 2, i32* @opMode, align 4
  br label %198

; <label>:169:                                    ; preds = %.lr.ph42
  store i32 1, i32* @opMode, align 4
  br label %198

; <label>:170:                                    ; preds = %.lr.ph42
  store i8 1, i8* @forceOverwrite, align 1
  br label %198

; <label>:171:                                    ; preds = %.lr.ph42
  store i32 3, i32* @opMode, align 4
  br label %198

; <label>:172:                                    ; preds = %.lr.ph42
  store i8 1, i8* @keepInputFiles, align 1
  br label %198

; <label>:173:                                    ; preds = %.lr.ph42
  store i8 1, i8* @smallMode, align 1
  br label %198

; <label>:174:                                    ; preds = %.lr.ph42
  store i8 0, i8* @noisy, align 1
  br label %198

; <label>:175:                                    ; preds = %.lr.ph42
  store i32 1, i32* @blockSize100k, align 4
  br label %198

; <label>:176:                                    ; preds = %.lr.ph42
  store i32 2, i32* @blockSize100k, align 4
  br label %198

; <label>:177:                                    ; preds = %.lr.ph42
  store i32 3, i32* @blockSize100k, align 4
  br label %198

; <label>:178:                                    ; preds = %.lr.ph42
  store i32 4, i32* @blockSize100k, align 4
  br label %198

; <label>:179:                                    ; preds = %.lr.ph42
  store i32 5, i32* @blockSize100k, align 4
  br label %198

; <label>:180:                                    ; preds = %.lr.ph42
  store i32 6, i32* @blockSize100k, align 4
  br label %198

; <label>:181:                                    ; preds = %.lr.ph42
  store i32 7, i32* @blockSize100k, align 4
  br label %198

; <label>:182:                                    ; preds = %.lr.ph42
  store i32 8, i32* @blockSize100k, align 4
  br label %198

; <label>:183:                                    ; preds = %.lr.ph42
  store i32 9, i32* @blockSize100k, align 4
  br label %198

; <label>:184:                                    ; preds = %.lr.ph42, %.lr.ph42
  call void @license()
  br label %198

; <label>:185:                                    ; preds = %.lr.ph42
  %186 = load i32, i32* @verbosity, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* @verbosity, align 4
  br label %198

.loopexit2:                                       ; preds = %.lr.ph42.19139, %.lr.ph42.18132, %.lr.ph42.17125, %.lr.ph42.16118, %.lr.ph42.15111, %.lr.ph42.14104, %.lr.ph42.1397, %.lr.ph42.1290, %.lr.ph42.1183, %.lr.ph42.1076, %.lr.ph42.969, %.lr.ph42.862, %.lr.ph42.755, %.lr.ph42.648, %.lr.ph42.541, %.lr.ph42.434, %.lr.ph42.327, %.lr.ph42.220, %.lr.ph42.113, %.lr.ph42
  call void @__loop_termination_test___4()
  br label %188

.loopexit4:                                       ; preds = %.lr.ph42.1
  br label %188

.loopexit6:                                       ; preds = %.lr.ph42.2
  br label %188

.loopexit8:                                       ; preds = %.lr.ph42.3
  br label %188

.loopexit10:                                      ; preds = %.lr.ph42.4
  br label %188

.loopexit12:                                      ; preds = %.lr.ph42.5
  br label %188

.loopexit14:                                      ; preds = %.lr.ph42.6
  br label %188

.loopexit16:                                      ; preds = %.lr.ph42.7
  br label %188

.loopexit19:                                      ; preds = %.lr.ph42.8
  br label %188

.loopexit21:                                      ; preds = %.lr.ph42.9
  br label %188

.loopexit23:                                      ; preds = %.lr.ph42.10
  br label %188

.loopexit25:                                      ; preds = %.lr.ph42.11
  br label %188

.loopexit27:                                      ; preds = %.lr.ph42.12
  br label %188

.loopexit29:                                      ; preds = %.lr.ph42.13
  br label %188

.loopexit31:                                      ; preds = %.lr.ph42.14
  br label %188

.loopexit33:                                      ; preds = %.lr.ph42.15
  br label %188

.loopexit35:                                      ; preds = %.lr.ph42.16
  br label %188

.loopexit37:                                      ; preds = %.lr.ph42.17
  br label %188

.loopexit39:                                      ; preds = %.lr.ph42.18
  br label %188

.loopexit41:                                      ; preds = %.lr.ph42.19
  br label %188

; <label>:188:                                    ; preds = %.loopexit41, %.loopexit39, %.loopexit37, %.loopexit35, %.loopexit33, %.loopexit31, %.loopexit29, %.loopexit27, %.loopexit25, %.loopexit23, %.loopexit21, %.loopexit19, %.loopexit16, %.loopexit14, %.loopexit12, %.loopexit10, %.loopexit8, %.loopexit6, %.loopexit4, %.loopexit2
  call void @__loop_termination_test___3()
  %189 = load i8*, i8** @progName, align 8
  call void @usage(i8* %189)
  call void @exit(i32 0) #11
  unreachable

.loopexit1:                                       ; preds = %.lr.ph42.19139, %.lr.ph42.18132, %.lr.ph42.17125, %.lr.ph42.16118, %.lr.ph42.15111, %.lr.ph42.14104, %.lr.ph42.1397, %.lr.ph42.1290, %.lr.ph42.1183, %.lr.ph42.1076, %.lr.ph42.969, %.lr.ph42.862, %.lr.ph42.755, %.lr.ph42.648, %.lr.ph42.541, %.lr.ph42.434, %.lr.ph42.327, %.lr.ph42.220, %.lr.ph42.113, %.lr.ph42
  call void @__loop_termination_test___4()
  br label %190

.loopexit3:                                       ; preds = %.lr.ph42.1
  br label %190

.loopexit5:                                       ; preds = %.lr.ph42.2
  br label %190

.loopexit7:                                       ; preds = %.lr.ph42.3
  br label %190

.loopexit9:                                       ; preds = %.lr.ph42.4
  br label %190

.loopexit11:                                      ; preds = %.lr.ph42.5
  br label %190

.loopexit13:                                      ; preds = %.lr.ph42.6
  br label %190

.loopexit15:                                      ; preds = %.lr.ph42.7
  br label %190

.loopexit18:                                      ; preds = %.lr.ph42.8
  br label %190

.loopexit20:                                      ; preds = %.lr.ph42.9
  br label %190

.loopexit22:                                      ; preds = %.lr.ph42.10
  br label %190

.loopexit24:                                      ; preds = %.lr.ph42.11
  br label %190

.loopexit26:                                      ; preds = %.lr.ph42.12
  br label %190

.loopexit28:                                      ; preds = %.lr.ph42.13
  br label %190

.loopexit30:                                      ; preds = %.lr.ph42.14
  br label %190

.loopexit32:                                      ; preds = %.lr.ph42.15
  br label %190

.loopexit34:                                      ; preds = %.lr.ph42.16
  br label %190

.loopexit36:                                      ; preds = %.lr.ph42.17
  br label %190

.loopexit38:                                      ; preds = %.lr.ph42.18
  br label %190

.loopexit40:                                      ; preds = %.lr.ph42.19
  br label %190

; <label>:190:                                    ; preds = %.loopexit40, %.loopexit38, %.loopexit36, %.loopexit34, %.loopexit32, %.loopexit30, %.loopexit28, %.loopexit26, %.loopexit24, %.loopexit22, %.loopexit20, %.loopexit18, %.loopexit15, %.loopexit13, %.loopexit11, %.loopexit9, %.loopexit7, %.loopexit5, %.loopexit3, %.loopexit1
  %.12.lcssa15 = phi %struct.zzzz* [ %134, %.loopexit1 ], [ %204, %.loopexit3 ], [ null, %.loopexit5 ], [ %1404, %.loopexit7 ], [ %1461, %.loopexit9 ], [ %1518, %.loopexit11 ], [ %1575, %.loopexit13 ], [ %1632, %.loopexit15 ], [ %1689, %.loopexit18 ], [ %1746, %.loopexit20 ], [ %1803, %.loopexit22 ], [ %1860, %.loopexit24 ], [ %1917, %.loopexit26 ], [ %1974, %.loopexit28 ], [ %2031, %.loopexit30 ], [ %2088, %.loopexit32 ], [ %2145, %.loopexit34 ], [ %2202, %.loopexit36 ], [ %2259, %.loopexit38 ], [ %2316, %.loopexit40 ]
  call void @__loop_termination_test___3()
  %191 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %192 = load i8*, i8** @progName, align 8
  %193 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.12.lcssa15, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %196 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %191, i8* %195, i8* %192, i8* %194)
  %197 = load i8*, i8** @progName, align 8
  call void @usage(i8* %197)
  call void @exit(i32 1) #11
  unreachable

; <label>:198:                                    ; preds = %185, %184, %183, %182, %181, %180, %179, %178, %177, %176, %175, %174, %173, %172, %171, %170, %169, %168, %167
  call void @__loop_iteration_test___4()
  %199 = load i8*, i8** %157, align 8
  %scevgep2 = getelementptr i8, i8* %199, i64 2
  %200 = load i8, i8* %scevgep2, align 1
  %201 = sext i8 107 to i32
  %202 = icmp ne i32 107, 0
  br i1 true, label %.lr.ph42.113, label %._crit_edge43.loopexit

._crit_edge43.loopexit:                           ; preds = %2920, %2891, %2862, %2833, %2804, %2775, %2746, %2717, %2688, %2659, %2630, %2601, %2572, %2543, %2514, %2485, %2456, %2427, %2398, %198
  call void @__loop_termination_test___4()
  br label %._crit_edge43

._crit_edge43:                                    ; preds = %._crit_edge43.loopexit, %156, %149, %143
  call void @__loop_iteration_test___3()
  %203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %134, i32 0, i32 1
  %204 = load %struct.zzzz*, %struct.zzzz** %203, align 8
  %205 = icmp ne i64 10000590, 0
  %206 = icmp ne %struct.zzzz* %204, null
  br i1 true, label %.lr.ph48.1, label %.loopexit17.loopexit

.loopexit17.loopexit:                             ; preds = %._crit_edge43.19, %.lr.ph48.19, %._crit_edge43.18, %.lr.ph48.18, %._crit_edge43.17, %.lr.ph48.17, %._crit_edge43.16, %.lr.ph48.16, %._crit_edge43.15, %.lr.ph48.15, %._crit_edge43.14, %.lr.ph48.14, %._crit_edge43.13, %.lr.ph48.13, %._crit_edge43.12, %.lr.ph48.12, %._crit_edge43.11, %.lr.ph48.11, %._crit_edge43.10, %.lr.ph48.10, %._crit_edge43.9, %.lr.ph48.9, %._crit_edge43.8, %.lr.ph48.8, %._crit_edge43.7, %.lr.ph48.7, %._crit_edge43.6, %.lr.ph48.6, %._crit_edge43.5, %.lr.ph48.5, %._crit_edge43.4, %.lr.ph48.4, %._crit_edge43.3, %.lr.ph48.3, %._crit_edge43.2, %.lr.ph48.2, %._crit_edge43.1, %.lr.ph48.1, %._crit_edge43, %.lr.ph48
  call void @__loop_termination_test___3()
  br label %.loopexit17

.loopexit17:                                      ; preds = %.loopexit17.loopexit, %133
  %207 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %208 = icmp ne i64 10000562, 0
  %209 = icmp ne %struct.zzzz* %207, null
  br i1 true, label %.lr.ph39.preheader, label %.loopexit

.lr.ph39.preheader:                               ; preds = %.loopexit17
  br label %.lr.ph39

.lr.ph39:                                         ; preds = %.lr.ph39.preheader
  call void @unroll_loop(i32 5)
  %210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  %212 = getelementptr [6 x i8], [6 x i8]* @18, i64 0, i64 0
  %213 = getelementptr [3 x i8], [3 x i8]* @19, i64 0, i64 0
  %214 = call i32 @strcmp(i8* %212, i8* %213) #10
  %215 = icmp eq i32 1, 0
  br i1 false, label %.loopexit.loopexit, label %216

; <label>:216:                                    ; preds = %.lr.ph39
  %217 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr [6 x i8], [6 x i8]* @20, i64 0, i64 0
  %220 = getelementptr [9 x i8], [9 x i8]* @21, i64 0, i64 0
  %221 = call i32 @strcmp(i8* %219, i8* %220) #10
  %222 = icmp eq i32 1, 0
  br i1 false, label %223, label %224

; <label>:223:                                    ; preds = %216
  store i32 2, i32* @srcMode, align 4
  br label %370

; <label>:224:                                    ; preds = %216
  %225 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = getelementptr [6 x i8], [6 x i8]* @22, i64 0, i64 0
  %228 = getelementptr [13 x i8], [13 x i8]* @23, i64 0, i64 0
  %229 = call i32 @strcmp(i8* %227, i8* %228) #10
  %230 = icmp eq i32 1, 0
  br i1 false, label %231, label %232

; <label>:231:                                    ; preds = %224
  store i32 2, i32* @opMode, align 4
  br label %370

; <label>:232:                                    ; preds = %224
  %233 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = getelementptr [6 x i8], [6 x i8]* @24, i64 0, i64 0
  %236 = getelementptr [11 x i8], [11 x i8]* @25, i64 0, i64 0
  %237 = call i32 @strcmp(i8* %235, i8* %236) #10
  %238 = icmp eq i32 1, 0
  br i1 false, label %239, label %240

; <label>:239:                                    ; preds = %232
  store i32 1, i32* @opMode, align 4
  br label %370

; <label>:240:                                    ; preds = %232
  %241 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = getelementptr [6 x i8], [6 x i8]* @26, i64 0, i64 0
  %244 = getelementptr [8 x i8], [8 x i8]* @27, i64 0, i64 0
  %245 = call i32 @strcmp(i8* %243, i8* %244) #10
  %246 = icmp eq i32 1, 0
  br i1 false, label %247, label %248

; <label>:247:                                    ; preds = %240
  store i8 1, i8* @forceOverwrite, align 1
  br label %370

; <label>:248:                                    ; preds = %240
  %249 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = getelementptr [6 x i8], [6 x i8]* @28, i64 0, i64 0
  %252 = getelementptr [7 x i8], [7 x i8]* @29, i64 0, i64 0
  %253 = call i32 @strcmp(i8* %251, i8* %252) #10
  %254 = icmp eq i32 1, 0
  br i1 false, label %255, label %256

; <label>:255:                                    ; preds = %248
  store i32 3, i32* @opMode, align 4
  br label %370

; <label>:256:                                    ; preds = %248
  %257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %258 = load i8*, i8** %257, align 8
  %259 = getelementptr [6 x i8], [6 x i8]* @30, i64 0, i64 0
  %260 = getelementptr [7 x i8], [7 x i8]* @31, i64 0, i64 0
  %261 = call i32 @strcmp(i8* %259, i8* %260) #10
  %262 = icmp eq i32 1, 0
  br i1 false, label %263, label %264

; <label>:263:                                    ; preds = %256
  store i8 1, i8* @keepInputFiles, align 1
  br label %370

; <label>:264:                                    ; preds = %256
  %265 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8
  %267 = getelementptr [6 x i8], [6 x i8]* @32, i64 0, i64 0
  %268 = getelementptr [8 x i8], [8 x i8]* @33, i64 0, i64 0
  %269 = call i32 @strcmp(i8* %267, i8* %268) #10
  %270 = icmp eq i32 1, 0
  br i1 false, label %271, label %272

; <label>:271:                                    ; preds = %264
  store i8 1, i8* @smallMode, align 1
  br label %370

; <label>:272:                                    ; preds = %264
  %273 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %274 = load i8*, i8** %273, align 8
  %275 = getelementptr [6 x i8], [6 x i8]* @34, i64 0, i64 0
  %276 = getelementptr [8 x i8], [8 x i8]* @35, i64 0, i64 0
  %277 = call i32 @strcmp(i8* %275, i8* %276) #10
  %278 = icmp eq i32 1, 0
  br i1 false, label %279, label %280

; <label>:279:                                    ; preds = %272
  store i8 0, i8* @noisy, align 1
  br label %370

; <label>:280:                                    ; preds = %272
  %281 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = getelementptr [6 x i8], [6 x i8]* @36, i64 0, i64 0
  %284 = getelementptr [10 x i8], [10 x i8]* @37, i64 0, i64 0
  %285 = call i32 @strcmp(i8* %283, i8* %284) #10
  %286 = icmp eq i32 1, 0
  br i1 false, label %287, label %288

; <label>:287:                                    ; preds = %280
  call void @license()
  br label %370

; <label>:288:                                    ; preds = %280
  %289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = getelementptr [6 x i8], [6 x i8]* @38, i64 0, i64 0
  %292 = getelementptr [10 x i8], [10 x i8]* @39, i64 0, i64 0
  %293 = call i32 @strcmp(i8* %291, i8* %292) #10
  %294 = icmp eq i32 1, 0
  br i1 false, label %295, label %296

; <label>:295:                                    ; preds = %288
  call void @license()
  br label %370

; <label>:296:                                    ; preds = %288
  %297 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = getelementptr [6 x i8], [6 x i8]* @40, i64 0, i64 0
  %300 = getelementptr [14 x i8], [14 x i8]* @41, i64 0, i64 0
  %301 = call i32 @strcmp(i8* %299, i8* %300) #10
  %302 = icmp eq i32 1, 0
  br i1 false, label %303, label %304

; <label>:303:                                    ; preds = %296
  store i32 1, i32* @workFactor, align 4
  br label %370

; <label>:304:                                    ; preds = %296
  %305 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = getelementptr [6 x i8], [6 x i8]* @42, i64 0, i64 0
  %308 = getelementptr [18 x i8], [18 x i8]* @43, i64 0, i64 0
  %309 = call i32 @strcmp(i8* %307, i8* %308) #10
  %310 = icmp eq i32 1, 0
  %311 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %312 = load i8*, i8** %311, align 8
  br i1 false, label %313, label %314

; <label>:313:                                    ; preds = %304
  call void @redundant(i8* %312)
  br label %370

; <label>:314:                                    ; preds = %304
  %315 = getelementptr [6 x i8], [6 x i8]* @44, i64 0, i64 0
  %316 = getelementptr [18 x i8], [18 x i8]* @45, i64 0, i64 0
  %317 = call i32 @strcmp(i8* %315, i8* %316) #10
  %318 = icmp eq i32 1, 0
  %319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  br i1 false, label %321, label %322

; <label>:321:                                    ; preds = %314
  call void @redundant(i8* %320)
  br label %370

; <label>:322:                                    ; preds = %314
  %323 = getelementptr [6 x i8], [6 x i8]* @46, i64 0, i64 0
  %324 = getelementptr [7 x i8], [7 x i8]* @47, i64 0, i64 0
  %325 = call i32 @strcmp(i8* %323, i8* %324) #10
  %326 = icmp eq i32 1, 0
  br i1 false, label %327, label %328

; <label>:327:                                    ; preds = %322
  store i32 1, i32* @blockSize100k, align 4
  br label %370

; <label>:328:                                    ; preds = %322
  %329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %330 = load i8*, i8** %329, align 8
  %331 = getelementptr [6 x i8], [6 x i8]* @48, i64 0, i64 0
  %332 = getelementptr [7 x i8], [7 x i8]* @49, i64 0, i64 0
  %333 = call i32 @strcmp(i8* %331, i8* %332) #10
  %334 = icmp eq i32 1, 0
  br i1 false, label %335, label %336

; <label>:335:                                    ; preds = %328
  store i32 9, i32* @blockSize100k, align 4
  br label %370

; <label>:336:                                    ; preds = %328
  %337 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = getelementptr [6 x i8], [6 x i8]* @50, i64 0, i64 0
  %340 = getelementptr [10 x i8], [10 x i8]* @51, i64 0, i64 0
  %341 = call i32 @strcmp(i8* %339, i8* %340) #10
  %342 = icmp eq i32 1, 0
  br i1 false, label %343, label %346

; <label>:343:                                    ; preds = %336
  %344 = load i32, i32* @verbosity, align 4
  %345 = add nsw i32 %344, 1
  store i32 %345, i32* @verbosity, align 4
  br label %370

; <label>:346:                                    ; preds = %336
  %347 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = getelementptr [6 x i8], [6 x i8]* @52, i64 0, i64 0
  %350 = getelementptr [7 x i8], [7 x i8]* @53, i64 0, i64 0
  %351 = call i32 @strcmp(i8* %349, i8* %350) #10
  %352 = icmp eq i32 1, 0
  br i1 false, label %353, label %355

; <label>:353:                                    ; preds = %5135, %5019, %4903, %4787, %4671, %4555, %4439, %4323, %4207, %4091, %3975, %3859, %3743, %3627, %3511, %3395, %3279, %3163, %3042, %346
  call void @__loop_termination_test___5()
  %354 = load i8*, i8** @progName, align 8
  call void @usage(i8* %354)
  call void @exit(i32 0) #11
  unreachable

; <label>:355:                                    ; preds = %346
  %356 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = getelementptr [6 x i8], [6 x i8]* @54, i64 0, i64 0
  %359 = getelementptr [3 x i8], [3 x i8]* @55, i64 0, i64 0
  %360 = call i32 @strncmp(i8* %358, i8* %359, i64 2) #10
  %361 = icmp eq i32 1, 0
  br i1 false, label %362, label %370

; <label>:362:                                    ; preds = %5140, %5024, %4908, %4792, %4676, %4560, %4444, %4328, %4212, %4096, %3980, %3864, %3748, %3632, %3516, %3400, %3284, %3168, %3049, %355
  %.23.lcssa13 = phi %struct.zzzz* [ %207, %355 ], [ %372, %3049 ], [ null, %3168 ], [ %3193, %3284 ], [ %3309, %3400 ], [ %3425, %3516 ], [ %3541, %3632 ], [ %3657, %3748 ], [ %3773, %3864 ], [ %3889, %3980 ], [ %4005, %4096 ], [ %4121, %4212 ], [ %4237, %4328 ], [ %4353, %4444 ], [ %4469, %4560 ], [ %4585, %4676 ], [ %4701, %4792 ], [ %4817, %4908 ], [ %4933, %5024 ], [ %5049, %5140 ]
  call void @__loop_termination_test___5()
  %363 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %364 = load i8*, i8** @progName, align 8
  %365 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.23.lcssa13, i32 0, i32 0
  %366 = load i8*, i8** %365, align 8
  %367 = getelementptr [19 x i8], [19 x i8]* @.str.16, i32 0, i32 0
  %368 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %363, i8* %367, i8* %364, i8* %366)
  %369 = load i8*, i8** @progName, align 8
  call void @usage(i8* %369)
  call void @exit(i32 1) #11
  unreachable

; <label>:370:                                    ; preds = %355, %343, %335, %327, %321, %313, %303, %295, %287, %279, %271, %263, %255, %247, %239, %231, %223
  call void @__loop_iteration_test___5()
  %371 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %207, i32 0, i32 1
  %372 = load %struct.zzzz*, %struct.zzzz** %371, align 8
  %373 = icmp ne i64 10000590, 0
  %374 = icmp ne %struct.zzzz* %372, null
  br i1 true, label %.lr.ph39.1, label %.loopexit.loopexit

.loopexit.loopexit:                               ; preds = %5163, %.lr.ph39.19, %5047, %.lr.ph39.18, %4931, %.lr.ph39.17, %4815, %.lr.ph39.16, %4699, %.lr.ph39.15, %4583, %.lr.ph39.14, %4467, %.lr.ph39.13, %4351, %.lr.ph39.12, %4235, %.lr.ph39.11, %4119, %.lr.ph39.10, %4003, %.lr.ph39.9, %3887, %.lr.ph39.8, %3771, %.lr.ph39.7, %3655, %.lr.ph39.6, %3539, %.lr.ph39.5, %3423, %.lr.ph39.4, %3307, %.lr.ph39.3, %3191, %.lr.ph39.2, %3074, %.lr.ph39.1, %370, %.lr.ph39
  call void @__loop_termination_test___5()
  br label %.loopexit

.loopexit:                                        ; preds = %.loopexit.loopexit, %.loopexit17
  %375 = load i32, i32* @verbosity, align 4
  %376 = icmp sgt i32 0, 4
  br i1 false, label %377, label %378

; <label>:377:                                    ; preds = %.loopexit
  store i32 4, i32* @verbosity, align 4
  br label %378

; <label>:378:                                    ; preds = %377, %.loopexit
  %379 = load i32, i32* @opMode, align 4
  %380 = icmp eq i32 1, 1
  br i1 true, label %381, label %388

; <label>:381:                                    ; preds = %378
  %382 = load i8, i8* @smallMode, align 1
  %383 = zext i8 1 to i32
  %384 = icmp ne i32 1, 0
  %385 = load i32, i32* @blockSize100k, align 4
  %386 = icmp sgt i32 9, 2
  %or.cond3 = and i1 true, true
  br i1 true, label %387, label %388

; <label>:387:                                    ; preds = %381
  store i32 2, i32* @blockSize100k, align 4
  br label %388

; <label>:388:                                    ; preds = %387, %381, %378
  %389 = load i32, i32* @opMode, align 4
  %390 = icmp eq i32 1, 3
  %391 = load i32, i32* @srcMode, align 4
  %392 = icmp eq i32 3, 2
  %or.cond5 = and i1 false, false
  br i1 false, label %393, label %398

; <label>:393:                                    ; preds = %388
  %394 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %395 = load i8*, i8** @progName, align 8
  %396 = getelementptr [40 x i8], [40 x i8]* @.str.34, i32 0, i32 0
  %397 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %394, i8* %396, i8* %395)
  call void @exit(i32 1) #11
  unreachable

; <label>:398:                                    ; preds = %388
  %399 = load i32, i32* @srcMode, align 4
  %400 = icmp eq i32 3, 2
  %401 = load i32, i32* @numFileNames, align 4
  %402 = icmp eq i32 1, 0
  %or.cond7 = and i1 false, false
  br i1 false, label %403, label %404

; <label>:403:                                    ; preds = %398
  store i32 1, i32* @srcMode, align 4
  br label %404

; <label>:404:                                    ; preds = %403, %398
  %405 = load i32, i32* @opMode, align 4
  %406 = icmp ne i32 1, 1
  br i1 false, label %407, label %408

; <label>:407:                                    ; preds = %404
  store i32 0, i32* @blockSize100k, align 4
  br label %408

; <label>:408:                                    ; preds = %407, %404
  %409 = load i32, i32* @srcMode, align 4
  %410 = icmp eq i32 3, 3
  br i1 true, label %411, label %415

; <label>:411:                                    ; preds = %408
  %412 = call void (i32)* @signal(i32 2, void (i32)* @mySignalCatcher) #9
  %413 = call void (i32)* @signal(i32 15, void (i32)* @mySignalCatcher) #9
  %414 = call void (i32)* @signal(i32 1, void (i32)* @mySignalCatcher) #9
  br label %415

; <label>:415:                                    ; preds = %411, %408
  %416 = load i32, i32* @opMode, align 4
  %417 = icmp eq i32 1, 1
  br i1 true, label %418, label %448

; <label>:418:                                    ; preds = %415
  %419 = load i32, i32* @srcMode, align 4
  %420 = icmp eq i32 3, 1
  br i1 false, label %421, label %422

; <label>:421:                                    ; preds = %418
  call void @compress(i8* null)
  br label %._crit_edge24

; <label>:422:                                    ; preds = %418
  %423 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %424 = icmp ne i64 10000562, 0
  %425 = icmp ne %struct.zzzz* %423, null
  br i1 true, label %.lr.ph23.preheader, label %._crit_edge24

.lr.ph23.preheader:                               ; preds = %422
  br label %.lr.ph23

.lr.ph23:                                         ; preds = %.lr.ph23.preheader
  call void @unroll_loop(i32 6)
  %426 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %423, i32 0, i32 0
  %427 = load i8*, i8** %426, align 8
  %428 = getelementptr [6 x i8], [6 x i8]* @94, i64 0, i64 0
  %429 = getelementptr [3 x i8], [3 x i8]* @95, i64 0, i64 0
  %430 = call i32 @strcmp(i8* %428, i8* %429) #10
  %431 = icmp eq i32 1, 0
  br i1 false, label %443, label %432

; <label>:432:                                    ; preds = %.lr.ph23
  %433 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %423, i32 0, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = load i8, i8* %434, align 1
  %436 = sext i8 45 to i32
  %437 = icmp eq i32 45, 45
  br i1 true, label %443, label %438

; <label>:438:                                    ; preds = %432
  %439 = load i32, i32* @numFilesProcessed, align 4
  %440 = add nsw i32 %439, 1
  store i32 %440, i32* @numFilesProcessed, align 4
  %441 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %423, i32 0, i32 0
  %442 = load i8*, i8** %441, align 8
  call void @compress(i8* %442)
  br label %443

; <label>:443:                                    ; preds = %438, %432, %.lr.ph23
  %.3 = phi i8 [ 1, %438 ], [ 0, %.lr.ph23 ], [ 1, %432 ]
  call void @__loop_iteration_test___6()
  %444 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %423, i32 0, i32 1
  %445 = load %struct.zzzz*, %struct.zzzz** %444, align 8
  %446 = icmp ne i64 10000590, 0
  %447 = icmp ne %struct.zzzz* %445, null
  br i1 true, label %.lr.ph23.1, label %._crit_edge24.loopexit

; <label>:448:                                    ; preds = %415
  %449 = load i32, i32* @opMode, align 4
  %450 = icmp eq i32 %449, 2
  br i1 %450, label %451, label %484

; <label>:451:                                    ; preds = %448
  store i8 0, i8* @unzFailsExist, align 1
  %452 = load i32, i32* @srcMode, align 4
  %453 = icmp eq i32 %452, 1
  br i1 %453, label %454, label %455

; <label>:454:                                    ; preds = %451
  call void @uncompress(i8* null)
  br label %._crit_edge30

; <label>:455:                                    ; preds = %451
  %456 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %457 = icmp ne %struct.zzzz* %456, null
  br i1 %457, label %.lr.ph29.preheader, label %._crit_edge30

.lr.ph29.preheader:                               ; preds = %455
  br label %.lr.ph29

.lr.ph29:                                         ; preds = %476, %.lr.ph29.preheader
  %.427 = phi i8 [ %.5, %476 ], [ 1, %.lr.ph29.preheader ]
  %.4525 = phi %struct.zzzz* [ %478, %476 ], [ %456, %.lr.ph29.preheader ]
  call void @unroll_loop(i32 7)
  %458 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %459 = load i8*, i8** %458, align 8
  %460 = call i32 @strcmp(i8* %459, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %476, label %462

; <label>:462:                                    ; preds = %.lr.ph29
  %463 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %464 = load i8*, i8** %463, align 8
  %465 = getelementptr inbounds i8, i8* %464, i64 0
  %466 = load i8, i8* %465, align 1
  %467 = sext i8 %466 to i32
  %468 = icmp eq i32 %467, 45
  %469 = zext i8 %.427 to i32
  %470 = icmp ne i32 %469, 0
  %or.cond11 = and i1 %468, %470
  br i1 %or.cond11, label %476, label %471

; <label>:471:                                    ; preds = %462
  %472 = load i32, i32* @numFilesProcessed, align 4
  %473 = add nsw i32 %472, 1
  store i32 %473, i32* @numFilesProcessed, align 4
  %474 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 0
  %475 = load i8*, i8** %474, align 8
  call void @uncompress(i8* %475)
  br label %476

; <label>:476:                                    ; preds = %471, %462, %.lr.ph29
  %.5 = phi i8 [ %.427, %471 ], [ 0, %.lr.ph29 ], [ %.427, %462 ]
  %477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.4525, i32 0, i32 1
  %478 = load %struct.zzzz*, %struct.zzzz** %477, align 8
  %479 = icmp ne %struct.zzzz* %478, null
  br i1 %479, label %.lr.ph29, label %._crit_edge30.loopexit

._crit_edge30.loopexit:                           ; preds = %476
  br label %._crit_edge30

._crit_edge30:                                    ; preds = %._crit_edge30.loopexit, %455, %454
  %480 = load i8, i8* @unzFailsExist, align 1
  %481 = icmp ne i8 %480, 0
  br i1 %481, label %482, label %._crit_edge24

; <label>:482:                                    ; preds = %._crit_edge30
  call void @setExit(i32 2)
  %483 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %483) #11
  unreachable

; <label>:484:                                    ; preds = %448
  store i8 0, i8* @testFailsExist, align 1
  %485 = load i32, i32* @srcMode, align 4
  %486 = icmp eq i32 %485, 1
  br i1 %486, label %487, label %488

; <label>:487:                                    ; preds = %484
  call void @testf(i8* null)
  br label %._crit_edge36

; <label>:488:                                    ; preds = %484
  %489 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %490 = icmp ne %struct.zzzz* %489, null
  br i1 %490, label %.lr.ph35.preheader, label %._crit_edge36

.lr.ph35.preheader:                               ; preds = %488
  br label %.lr.ph35

.lr.ph35:                                         ; preds = %509, %.lr.ph35.preheader
  %.633 = phi i8 [ %.7, %509 ], [ 1, %.lr.ph35.preheader ]
  %.5631 = phi %struct.zzzz* [ %511, %509 ], [ %489, %.lr.ph35.preheader ]
  call void @unroll_loop(i32 8)
  %491 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %492 = load i8*, i8** %491, align 8
  %493 = call i32 @strcmp(i8* %492, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %509, label %495

; <label>:495:                                    ; preds = %.lr.ph35
  %496 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %497 = load i8*, i8** %496, align 8
  %498 = getelementptr inbounds i8, i8* %497, i64 0
  %499 = load i8, i8* %498, align 1
  %500 = sext i8 %499 to i32
  %501 = icmp eq i32 %500, 45
  %502 = zext i8 %.633 to i32
  %503 = icmp ne i32 %502, 0
  %or.cond13 = and i1 %501, %503
  br i1 %or.cond13, label %509, label %504

; <label>:504:                                    ; preds = %495
  %505 = load i32, i32* @numFilesProcessed, align 4
  %506 = add nsw i32 %505, 1
  store i32 %506, i32* @numFilesProcessed, align 4
  %507 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 0
  %508 = load i8*, i8** %507, align 8
  call void @testf(i8* %508)
  br label %509

; <label>:509:                                    ; preds = %504, %495, %.lr.ph35
  %.7 = phi i8 [ %.633, %504 ], [ 0, %.lr.ph35 ], [ %.633, %495 ]
  %510 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %.5631, i32 0, i32 1
  %511 = load %struct.zzzz*, %struct.zzzz** %510, align 8
  %512 = icmp ne %struct.zzzz* %511, null
  br i1 %512, label %.lr.ph35, label %._crit_edge36.loopexit

._crit_edge36.loopexit:                           ; preds = %509
  br label %._crit_edge36

._crit_edge36:                                    ; preds = %._crit_edge36.loopexit, %488, %487
  %513 = load i8, i8* @testFailsExist, align 1
  %514 = zext i8 %513 to i32
  %515 = icmp ne i32 %514, 0
  br i1 %515, label %516, label %._crit_edge24

; <label>:516:                                    ; preds = %._crit_edge36
  %517 = load i8, i8* @noisy, align 1
  %518 = zext i8 %517 to i32
  %519 = icmp ne i32 %518, 0
  br i1 %519, label %520, label %._crit_edge24

; <label>:520:                                    ; preds = %516
  %521 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %522 = getelementptr [113 x i8], [113 x i8]* @.str.35, i32 0, i32 0
  %523 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %521, i8* %522)
  call void @setExit(i32 2)
  %524 = load i32, i32* @exitValue, align 4
  call void @exit(i32 %524) #11
  unreachable

._crit_edge24.loopexit:                           ; preds = %5564, %5543, %5522, %5501, %5480, %5459, %5438, %5417, %5396, %5375, %5354, %5333, %5312, %5291, %5270, %5249, %5228, %5207, %5185, %443
  call void @__loop_termination_test___6()
  br label %._crit_edge24

._crit_edge24:                                    ; preds = %._crit_edge24.loopexit, %516, %._crit_edge36, %._crit_edge30, %422, %421
  %525 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %526 = icmp ne i64 10000562, 0
  %527 = icmp ne %struct.zzzz* %525, null
  br i1 true, label %.lr.ph.preheader, label %._crit_edge

.lr.ph.preheader:                                 ; preds = %._crit_edge24
  br label %.lr.ph

.lr.ph:                                           ; preds = %.lr.ph.preheader
  call void @unroll_loop(i32 9)
  %528 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %525, i32 0, i32 1
  %529 = load %struct.zzzz*, %struct.zzzz** %528, align 8
  %530 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %525, i32 0, i32 0
  %531 = load i8*, i8** %530, align 8
  %532 = icmp ne i64 10000579, 0
  %533 = icmp ne i8* %531, null
  br i1 true, label %534, label %537

; <label>:534:                                    ; preds = %.lr.ph
  %535 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %525, i32 0, i32 0
  %536 = load i8*, i8** %535, align 8
  call void @free(i8* %536) #9
  br label %537

; <label>:537:                                    ; preds = %534, %.lr.ph
  call void @__loop_iteration_test___7()
  %538 = bitcast %struct.zzzz* %525 to i8*
  call void @free(i8* %538) #9
  %539 = icmp ne i64 10000590, 0
  %540 = icmp ne %struct.zzzz* %529, null
  br i1 true, label %.lr.ph.1, label %._crit_edge.loopexit

._crit_edge.loopexit:                             ; preds = %5775, %5764, %5753, %5742, %5731, %5720, %5709, %5698, %5687, %5676, %5665, %5654, %5643, %5632, %5621, %5610, %5599, %5588, %5576, %537
  call void @__loop_termination_test___7()
  br label %._crit_edge

._crit_edge:                                      ; preds = %._crit_edge.loopexit, %._crit_edge24
  %541 = load i32, i32* @exitValue, align 4
  ret i32 %541

; <label>:542:                                    ; preds = %42
  call void @unroll_loop(i32 0)
  %543 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 1), align 1
  %544 = sext i8 122 to i32
  %545 = icmp eq i32 122, 47
  br i1 false, label %546, label %547

; <label>:546:                                    ; preds = %542
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), i8** @progName, align 8
  br label %547

; <label>:547:                                    ; preds = %546, %542
  call void @__loop_iteration_test___0()
  %548 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %549 = sext i8 105 to i32
  %550 = icmp ne i32 105, 0
  br i1 true, label %551, label %._crit_edge64.loopexit

; <label>:551:                                    ; preds = %547
  call void @unroll_loop(i32 0)
  %552 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 2), align 1
  %553 = sext i8 105 to i32
  %554 = icmp eq i32 105, 47
  br i1 false, label %555, label %556

; <label>:555:                                    ; preds = %551
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), i8** @progName, align 8
  br label %556

; <label>:556:                                    ; preds = %555, %551
  call void @__loop_iteration_test___0()
  %557 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %558 = sext i8 112 to i32
  %559 = icmp ne i32 112, 0
  br i1 true, label %560, label %._crit_edge64.loopexit

; <label>:560:                                    ; preds = %556
  call void @unroll_loop(i32 0)
  %561 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 3), align 1
  %562 = sext i8 112 to i32
  %563 = icmp eq i32 112, 47
  br i1 false, label %564, label %565

; <label>:564:                                    ; preds = %560
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), i8** @progName, align 8
  br label %565

; <label>:565:                                    ; preds = %564, %560
  call void @__loop_iteration_test___0()
  %566 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %567 = sext i8 50 to i32
  %568 = icmp ne i32 50, 0
  br i1 true, label %569, label %._crit_edge64.loopexit

; <label>:569:                                    ; preds = %565
  call void @unroll_loop(i32 0)
  %570 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 4), align 1
  %571 = sext i8 50 to i32
  %572 = icmp eq i32 50, 47
  br i1 false, label %573, label %574

; <label>:573:                                    ; preds = %569
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), i8** @progName, align 8
  br label %574

; <label>:574:                                    ; preds = %573, %569
  call void @__loop_iteration_test___0()
  %575 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %576 = sext i8 0 to i32
  %577 = icmp ne i32 0, 0
  br i1 false, label %578, label %._crit_edge64.loopexit

; <label>:578:                                    ; preds = %574
  call void @unroll_loop(i32 0)
  %579 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 5), align 1
  %580 = sext i8 %579 to i32
  %581 = icmp eq i32 %580, 47
  br i1 %581, label %582, label %583

; <label>:582:                                    ; preds = %578
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), i8** @progName, align 8
  br label %583

; <label>:583:                                    ; preds = %582, %578
  call void @__loop_iteration_test___0()
  %584 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %585 = sext i8 %584 to i32
  %586 = icmp ne i32 %585, 0
  br i1 %586, label %587, label %._crit_edge64.loopexit

; <label>:587:                                    ; preds = %583
  call void @unroll_loop(i32 0)
  %588 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 6), align 1
  %589 = sext i8 %588 to i32
  %590 = icmp eq i32 %589, 47
  br i1 %590, label %591, label %592

; <label>:591:                                    ; preds = %587
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), i8** @progName, align 8
  br label %592

; <label>:592:                                    ; preds = %591, %587
  call void @__loop_iteration_test___0()
  %593 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %594 = sext i8 %593 to i32
  %595 = icmp ne i32 %594, 0
  br i1 %595, label %596, label %._crit_edge64.loopexit

; <label>:596:                                    ; preds = %592
  call void @unroll_loop(i32 0)
  %597 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 7), align 1
  %598 = sext i8 %597 to i32
  %599 = icmp eq i32 %598, 47
  br i1 %599, label %600, label %601

; <label>:600:                                    ; preds = %596
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), i8** @progName, align 8
  br label %601

; <label>:601:                                    ; preds = %600, %596
  call void @__loop_iteration_test___0()
  %602 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %603 = sext i8 %602 to i32
  %604 = icmp ne i32 %603, 0
  br i1 %604, label %605, label %._crit_edge64.loopexit

; <label>:605:                                    ; preds = %601
  call void @unroll_loop(i32 0)
  %606 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 8), align 1
  %607 = sext i8 %606 to i32
  %608 = icmp eq i32 %607, 47
  br i1 %608, label %609, label %610

; <label>:609:                                    ; preds = %605
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), i8** @progName, align 8
  br label %610

; <label>:610:                                    ; preds = %609, %605
  call void @__loop_iteration_test___0()
  %611 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %612 = sext i8 %611 to i32
  %613 = icmp ne i32 %612, 0
  br i1 %613, label %614, label %._crit_edge64.loopexit

; <label>:614:                                    ; preds = %610
  call void @unroll_loop(i32 0)
  %615 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 9), align 1
  %616 = sext i8 %615 to i32
  %617 = icmp eq i32 %616, 47
  br i1 %617, label %618, label %619

; <label>:618:                                    ; preds = %614
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), i8** @progName, align 8
  br label %619

; <label>:619:                                    ; preds = %618, %614
  call void @__loop_iteration_test___0()
  %620 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %621 = sext i8 %620 to i32
  %622 = icmp ne i32 %621, 0
  br i1 %622, label %623, label %._crit_edge64.loopexit

; <label>:623:                                    ; preds = %619
  call void @unroll_loop(i32 0)
  %624 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 10), align 1
  %625 = sext i8 %624 to i32
  %626 = icmp eq i32 %625, 47
  br i1 %626, label %627, label %628

; <label>:627:                                    ; preds = %623
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), i8** @progName, align 8
  br label %628

; <label>:628:                                    ; preds = %627, %623
  call void @__loop_iteration_test___0()
  %629 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %630 = sext i8 %629 to i32
  %631 = icmp ne i32 %630, 0
  br i1 %631, label %632, label %._crit_edge64.loopexit

; <label>:632:                                    ; preds = %628
  call void @unroll_loop(i32 0)
  %633 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 11), align 1
  %634 = sext i8 %633 to i32
  %635 = icmp eq i32 %634, 47
  br i1 %635, label %636, label %637

; <label>:636:                                    ; preds = %632
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), i8** @progName, align 8
  br label %637

; <label>:637:                                    ; preds = %636, %632
  call void @__loop_iteration_test___0()
  %638 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %639 = sext i8 %638 to i32
  %640 = icmp ne i32 %639, 0
  br i1 %640, label %641, label %._crit_edge64.loopexit

; <label>:641:                                    ; preds = %637
  call void @unroll_loop(i32 0)
  %642 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 12), align 1
  %643 = sext i8 %642 to i32
  %644 = icmp eq i32 %643, 47
  br i1 %644, label %645, label %646

; <label>:645:                                    ; preds = %641
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), i8** @progName, align 8
  br label %646

; <label>:646:                                    ; preds = %645, %641
  call void @__loop_iteration_test___0()
  %647 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %648 = sext i8 %647 to i32
  %649 = icmp ne i32 %648, 0
  br i1 %649, label %650, label %._crit_edge64.loopexit

; <label>:650:                                    ; preds = %646
  call void @unroll_loop(i32 0)
  %651 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 13), align 1
  %652 = sext i8 %651 to i32
  %653 = icmp eq i32 %652, 47
  br i1 %653, label %654, label %655

; <label>:654:                                    ; preds = %650
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), i8** @progName, align 8
  br label %655

; <label>:655:                                    ; preds = %654, %650
  call void @__loop_iteration_test___0()
  %656 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %657 = sext i8 %656 to i32
  %658 = icmp ne i32 %657, 0
  br i1 %658, label %659, label %._crit_edge64.loopexit

; <label>:659:                                    ; preds = %655
  call void @unroll_loop(i32 0)
  %660 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 14), align 1
  %661 = sext i8 %660 to i32
  %662 = icmp eq i32 %661, 47
  br i1 %662, label %663, label %664

; <label>:663:                                    ; preds = %659
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), i8** @progName, align 8
  br label %664

; <label>:664:                                    ; preds = %663, %659
  call void @__loop_iteration_test___0()
  %665 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %666 = sext i8 %665 to i32
  %667 = icmp ne i32 %666, 0
  br i1 %667, label %668, label %._crit_edge64.loopexit

; <label>:668:                                    ; preds = %664
  call void @unroll_loop(i32 0)
  %669 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 15), align 1
  %670 = sext i8 %669 to i32
  %671 = icmp eq i32 %670, 47
  br i1 %671, label %672, label %673

; <label>:672:                                    ; preds = %668
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), i8** @progName, align 8
  br label %673

; <label>:673:                                    ; preds = %672, %668
  call void @__loop_iteration_test___0()
  %674 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %675 = sext i8 %674 to i32
  %676 = icmp ne i32 %675, 0
  br i1 %676, label %677, label %._crit_edge64.loopexit

; <label>:677:                                    ; preds = %673
  call void @unroll_loop(i32 0)
  %678 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 16), align 1
  %679 = sext i8 %678 to i32
  %680 = icmp eq i32 %679, 47
  br i1 %680, label %681, label %682

; <label>:681:                                    ; preds = %677
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), i8** @progName, align 8
  br label %682

; <label>:682:                                    ; preds = %681, %677
  call void @__loop_iteration_test___0()
  %683 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %684 = sext i8 %683 to i32
  %685 = icmp ne i32 %684, 0
  br i1 %685, label %686, label %._crit_edge64.loopexit

; <label>:686:                                    ; preds = %682
  call void @unroll_loop(i32 0)
  %687 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 17), align 1
  %688 = sext i8 %687 to i32
  %689 = icmp eq i32 %688, 47
  br i1 %689, label %690, label %691

; <label>:690:                                    ; preds = %686
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), i8** @progName, align 8
  br label %691

; <label>:691:                                    ; preds = %690, %686
  call void @__loop_iteration_test___0()
  %692 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %693 = sext i8 %692 to i32
  %694 = icmp ne i32 %693, 0
  br i1 %694, label %695, label %._crit_edge64.loopexit

; <label>:695:                                    ; preds = %691
  call void @unroll_loop(i32 0)
  %696 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 18), align 1
  %697 = sext i8 %696 to i32
  %698 = icmp eq i32 %697, 47
  br i1 %698, label %699, label %700

; <label>:699:                                    ; preds = %695
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), i8** @progName, align 8
  br label %700

; <label>:700:                                    ; preds = %699, %695
  call void @__loop_iteration_test___0()
  %701 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %702 = sext i8 %701 to i32
  %703 = icmp ne i32 %702, 0
  br i1 %703, label %704, label %._crit_edge64.loopexit

; <label>:704:                                    ; preds = %700
  call void @unroll_loop(i32 0)
  %705 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 19), align 1
  %706 = sext i8 %705 to i32
  %707 = icmp eq i32 %706, 47
  br i1 %707, label %708, label %709

; <label>:708:                                    ; preds = %704
  store i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), i8** @progName, align 8
  br label %709

; <label>:709:                                    ; preds = %708, %704
  call void @__loop_iteration_test___0()
  %710 = load i8, i8* getelementptr inbounds ([1034 x i8], [1034 x i8]* @progNameReally, i64 0, i64 20), align 1
  %711 = sext i8 %710 to i32
  br label %._crit_edge64.loopexit

.lr.ph57.1:                                       ; preds = %.lr.ph57
  call void @__loop_iteration_test___1()
  call void @unroll_loop(i32 1)
  %712 = load %struct.zzzz*, %struct.zzzz** %22, align 8
  %scevgep7.1 = getelementptr i8*, i8** %scevgep4, i64 1
  %713 = load i8*, i8** %scevgep7.1, align 8
  %714 = call %struct.zzzz* @snocString_clone.17(%struct.zzzz* %712, i8* %713)
  store %struct.zzzz* %714, %struct.zzzz** %22, align 8
  br label %._crit_edge58.loopexit

.lr.ph53.1:                                       ; preds = %82
  call void @unroll_loop(i32 2)
  %715 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %716 = load i8*, i8** %715, align 8
  %717 = getelementptr [10 x i8], [10 x i8]* @10, i64 0, i64 0
  %718 = getelementptr [3 x i8], [3 x i8]* @11, i64 0, i64 0
  %719 = call i32 @strcmp(i8* %717, i8* %718) #10
  %720 = icmp eq i32 1, 0
  br i1 false, label %745, label %721

; <label>:721:                                    ; preds = %.lr.ph53.1
  %722 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %723 = load i8*, i8** %722, align 8
  %724 = load i8, i8* %723, align 1
  %725 = sext i8 104 to i32
  %726 = icmp eq i32 104, 45
  %727 = zext i8 1 to i32
  %728 = icmp ne i32 1, 0
  %or.cond.1 = and i1 false, true
  br i1 false, label %745, label %729

; <label>:729:                                    ; preds = %721
  %730 = load i32, i32* @numFileNames, align 4
  %731 = add nsw i32 0, 1
  store i32 1, i32* @numFileNames, align 4
  %732 = load i32, i32* @longestFileName, align 4
  %733 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %734 = load i8*, i8** %733, align 8
  %735 = getelementptr [10 x i8], [10 x i8]* @12, i64 0, i64 0
  %736 = call i64 @strlen(i8* %735) #10
  %737 = trunc i64 9 to i32
  %738 = icmp slt i32 7, 9
  br i1 true, label %739, label %745

; <label>:739:                                    ; preds = %729
  %740 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 0
  %741 = load i8*, i8** %740, align 8
  %742 = getelementptr [10 x i8], [10 x i8]* @13, i64 0, i64 0
  %743 = call i64 @strlen(i8* %742) #10
  %744 = trunc i64 9 to i32
  store i32 9, i32* @longestFileName, align 4
  br label %745

; <label>:745:                                    ; preds = %739, %729, %721, %.lr.ph53.1
  %.1.1 = phi i8 [ 0, %.lr.ph53.1 ], [ 1, %721 ], [ 1, %739 ], [ 1, %729 ]
  call void @__loop_iteration_test___2()
  %746 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %84, i32 0, i32 1
  %747 = load %struct.zzzz*, %struct.zzzz** %746, align 8
  %748 = icmp ne i64 0, 0
  %749 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph53.2, label %._crit_edge54.loopexit

.lr.ph53.2:                                       ; preds = %745
  call void @unroll_loop(i32 2)
  %750 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %751 = load i8*, i8** %750, align 8
  %752 = call i32 @strcmp(i8* %751, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %753 = icmp eq i32 %752, 0
  br i1 %753, label %776, label %754

; <label>:754:                                    ; preds = %.lr.ph53.2
  %755 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %756 = load i8*, i8** %755, align 8
  %757 = load i8, i8* %756, align 1
  %758 = sext i8 %757 to i32
  %759 = icmp eq i32 %758, 45
  %760 = zext i8 1 to i32
  %761 = icmp ne i32 %760, 0
  %or.cond.2 = and i1 %759, %761
  br i1 %or.cond.2, label %776, label %762

; <label>:762:                                    ; preds = %754
  %763 = load i32, i32* @numFileNames, align 4
  %764 = add nsw i32 %763, 1
  store i32 %764, i32* @numFileNames, align 4
  %765 = load i32, i32* @longestFileName, align 4
  %766 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %767 = load i8*, i8** %766, align 8
  %768 = call i64 @strlen(i8* %767) #10
  %769 = trunc i64 %768 to i32
  %770 = icmp slt i32 %765, %769
  br i1 %770, label %771, label %776

; <label>:771:                                    ; preds = %762
  %772 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %773 = load i8*, i8** %772, align 8
  %774 = call i64 @strlen(i8* %773) #10
  %775 = trunc i64 %774 to i32
  store i32 %775, i32* @longestFileName, align 4
  br label %776

; <label>:776:                                    ; preds = %771, %762, %754, %.lr.ph53.2
  %.1.2 = phi i8 [ 0, %.lr.ph53.2 ], [ 1, %754 ], [ 1, %771 ], [ 1, %762 ]
  call void @__loop_iteration_test___2()
  %777 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %778 = load %struct.zzzz*, %struct.zzzz** %777, align 8
  %779 = icmp ne %struct.zzzz* %778, null
  br i1 %779, label %.lr.ph53.3, label %._crit_edge54.loopexit

.lr.ph53.3:                                       ; preds = %776
  call void @unroll_loop(i32 2)
  %780 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %778, i32 0, i32 0
  %781 = load i8*, i8** %780, align 8
  %782 = call i32 @strcmp(i8* %781, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %806, label %784

; <label>:784:                                    ; preds = %.lr.ph53.3
  %785 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %778, i32 0, i32 0
  %786 = load i8*, i8** %785, align 8
  %787 = load i8, i8* %786, align 1
  %788 = sext i8 %787 to i32
  %789 = icmp eq i32 %788, 45
  %790 = zext i8 %.1.2 to i32
  %791 = icmp ne i32 %790, 0
  %or.cond.3 = and i1 %789, %791
  br i1 %or.cond.3, label %806, label %792

; <label>:792:                                    ; preds = %784
  %793 = load i32, i32* @numFileNames, align 4
  %794 = add nsw i32 %793, 1
  store i32 %794, i32* @numFileNames, align 4
  %795 = load i32, i32* @longestFileName, align 4
  %796 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %778, i32 0, i32 0
  %797 = load i8*, i8** %796, align 8
  %798 = call i64 @strlen(i8* %797) #10
  %799 = trunc i64 %798 to i32
  %800 = icmp slt i32 %795, %799
  br i1 %800, label %801, label %806

; <label>:801:                                    ; preds = %792
  %802 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %778, i32 0, i32 0
  %803 = load i8*, i8** %802, align 8
  %804 = call i64 @strlen(i8* %803) #10
  %805 = trunc i64 %804 to i32
  store i32 %805, i32* @longestFileName, align 4
  br label %806

; <label>:806:                                    ; preds = %801, %792, %784, %.lr.ph53.3
  %.1.3 = phi i8 [ 0, %.lr.ph53.3 ], [ %.1.2, %784 ], [ %.1.2, %801 ], [ %.1.2, %792 ]
  call void @__loop_iteration_test___2()
  %807 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %778, i32 0, i32 1
  %808 = load %struct.zzzz*, %struct.zzzz** %807, align 8
  %809 = icmp ne %struct.zzzz* %808, null
  br i1 %809, label %.lr.ph53.4, label %._crit_edge54.loopexit

.lr.ph53.4:                                       ; preds = %806
  call void @unroll_loop(i32 2)
  %810 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %808, i32 0, i32 0
  %811 = load i8*, i8** %810, align 8
  %812 = call i32 @strcmp(i8* %811, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %836, label %814

; <label>:814:                                    ; preds = %.lr.ph53.4
  %815 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %808, i32 0, i32 0
  %816 = load i8*, i8** %815, align 8
  %817 = load i8, i8* %816, align 1
  %818 = sext i8 %817 to i32
  %819 = icmp eq i32 %818, 45
  %820 = zext i8 %.1.3 to i32
  %821 = icmp ne i32 %820, 0
  %or.cond.4 = and i1 %819, %821
  br i1 %or.cond.4, label %836, label %822

; <label>:822:                                    ; preds = %814
  %823 = load i32, i32* @numFileNames, align 4
  %824 = add nsw i32 %823, 1
  store i32 %824, i32* @numFileNames, align 4
  %825 = load i32, i32* @longestFileName, align 4
  %826 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %808, i32 0, i32 0
  %827 = load i8*, i8** %826, align 8
  %828 = call i64 @strlen(i8* %827) #10
  %829 = trunc i64 %828 to i32
  %830 = icmp slt i32 %825, %829
  br i1 %830, label %831, label %836

; <label>:831:                                    ; preds = %822
  %832 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %808, i32 0, i32 0
  %833 = load i8*, i8** %832, align 8
  %834 = call i64 @strlen(i8* %833) #10
  %835 = trunc i64 %834 to i32
  store i32 %835, i32* @longestFileName, align 4
  br label %836

; <label>:836:                                    ; preds = %831, %822, %814, %.lr.ph53.4
  %.1.4 = phi i8 [ 0, %.lr.ph53.4 ], [ %.1.3, %814 ], [ %.1.3, %831 ], [ %.1.3, %822 ]
  call void @__loop_iteration_test___2()
  %837 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %808, i32 0, i32 1
  %838 = load %struct.zzzz*, %struct.zzzz** %837, align 8
  %839 = icmp ne %struct.zzzz* %838, null
  br i1 %839, label %.lr.ph53.5, label %._crit_edge54.loopexit

.lr.ph53.5:                                       ; preds = %836
  call void @unroll_loop(i32 2)
  %840 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %838, i32 0, i32 0
  %841 = load i8*, i8** %840, align 8
  %842 = call i32 @strcmp(i8* %841, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %866, label %844

; <label>:844:                                    ; preds = %.lr.ph53.5
  %845 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %838, i32 0, i32 0
  %846 = load i8*, i8** %845, align 8
  %847 = load i8, i8* %846, align 1
  %848 = sext i8 %847 to i32
  %849 = icmp eq i32 %848, 45
  %850 = zext i8 %.1.4 to i32
  %851 = icmp ne i32 %850, 0
  %or.cond.5 = and i1 %849, %851
  br i1 %or.cond.5, label %866, label %852

; <label>:852:                                    ; preds = %844
  %853 = load i32, i32* @numFileNames, align 4
  %854 = add nsw i32 %853, 1
  store i32 %854, i32* @numFileNames, align 4
  %855 = load i32, i32* @longestFileName, align 4
  %856 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %838, i32 0, i32 0
  %857 = load i8*, i8** %856, align 8
  %858 = call i64 @strlen(i8* %857) #10
  %859 = trunc i64 %858 to i32
  %860 = icmp slt i32 %855, %859
  br i1 %860, label %861, label %866

; <label>:861:                                    ; preds = %852
  %862 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %838, i32 0, i32 0
  %863 = load i8*, i8** %862, align 8
  %864 = call i64 @strlen(i8* %863) #10
  %865 = trunc i64 %864 to i32
  store i32 %865, i32* @longestFileName, align 4
  br label %866

; <label>:866:                                    ; preds = %861, %852, %844, %.lr.ph53.5
  %.1.5 = phi i8 [ 0, %.lr.ph53.5 ], [ %.1.4, %844 ], [ %.1.4, %861 ], [ %.1.4, %852 ]
  call void @__loop_iteration_test___2()
  %867 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %838, i32 0, i32 1
  %868 = load %struct.zzzz*, %struct.zzzz** %867, align 8
  %869 = icmp ne %struct.zzzz* %868, null
  br i1 %869, label %.lr.ph53.6, label %._crit_edge54.loopexit

.lr.ph53.6:                                       ; preds = %866
  call void @unroll_loop(i32 2)
  %870 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %868, i32 0, i32 0
  %871 = load i8*, i8** %870, align 8
  %872 = call i32 @strcmp(i8* %871, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %873 = icmp eq i32 %872, 0
  br i1 %873, label %896, label %874

; <label>:874:                                    ; preds = %.lr.ph53.6
  %875 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %868, i32 0, i32 0
  %876 = load i8*, i8** %875, align 8
  %877 = load i8, i8* %876, align 1
  %878 = sext i8 %877 to i32
  %879 = icmp eq i32 %878, 45
  %880 = zext i8 %.1.5 to i32
  %881 = icmp ne i32 %880, 0
  %or.cond.6 = and i1 %879, %881
  br i1 %or.cond.6, label %896, label %882

; <label>:882:                                    ; preds = %874
  %883 = load i32, i32* @numFileNames, align 4
  %884 = add nsw i32 %883, 1
  store i32 %884, i32* @numFileNames, align 4
  %885 = load i32, i32* @longestFileName, align 4
  %886 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %868, i32 0, i32 0
  %887 = load i8*, i8** %886, align 8
  %888 = call i64 @strlen(i8* %887) #10
  %889 = trunc i64 %888 to i32
  %890 = icmp slt i32 %885, %889
  br i1 %890, label %891, label %896

; <label>:891:                                    ; preds = %882
  %892 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %868, i32 0, i32 0
  %893 = load i8*, i8** %892, align 8
  %894 = call i64 @strlen(i8* %893) #10
  %895 = trunc i64 %894 to i32
  store i32 %895, i32* @longestFileName, align 4
  br label %896

; <label>:896:                                    ; preds = %891, %882, %874, %.lr.ph53.6
  %.1.6 = phi i8 [ 0, %.lr.ph53.6 ], [ %.1.5, %874 ], [ %.1.5, %891 ], [ %.1.5, %882 ]
  call void @__loop_iteration_test___2()
  %897 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %868, i32 0, i32 1
  %898 = load %struct.zzzz*, %struct.zzzz** %897, align 8
  %899 = icmp ne %struct.zzzz* %898, null
  br i1 %899, label %.lr.ph53.7, label %._crit_edge54.loopexit

.lr.ph53.7:                                       ; preds = %896
  call void @unroll_loop(i32 2)
  %900 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %898, i32 0, i32 0
  %901 = load i8*, i8** %900, align 8
  %902 = call i32 @strcmp(i8* %901, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %903 = icmp eq i32 %902, 0
  br i1 %903, label %926, label %904

; <label>:904:                                    ; preds = %.lr.ph53.7
  %905 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %898, i32 0, i32 0
  %906 = load i8*, i8** %905, align 8
  %907 = load i8, i8* %906, align 1
  %908 = sext i8 %907 to i32
  %909 = icmp eq i32 %908, 45
  %910 = zext i8 %.1.6 to i32
  %911 = icmp ne i32 %910, 0
  %or.cond.7 = and i1 %909, %911
  br i1 %or.cond.7, label %926, label %912

; <label>:912:                                    ; preds = %904
  %913 = load i32, i32* @numFileNames, align 4
  %914 = add nsw i32 %913, 1
  store i32 %914, i32* @numFileNames, align 4
  %915 = load i32, i32* @longestFileName, align 4
  %916 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %898, i32 0, i32 0
  %917 = load i8*, i8** %916, align 8
  %918 = call i64 @strlen(i8* %917) #10
  %919 = trunc i64 %918 to i32
  %920 = icmp slt i32 %915, %919
  br i1 %920, label %921, label %926

; <label>:921:                                    ; preds = %912
  %922 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %898, i32 0, i32 0
  %923 = load i8*, i8** %922, align 8
  %924 = call i64 @strlen(i8* %923) #10
  %925 = trunc i64 %924 to i32
  store i32 %925, i32* @longestFileName, align 4
  br label %926

; <label>:926:                                    ; preds = %921, %912, %904, %.lr.ph53.7
  %.1.7 = phi i8 [ 0, %.lr.ph53.7 ], [ %.1.6, %904 ], [ %.1.6, %921 ], [ %.1.6, %912 ]
  call void @__loop_iteration_test___2()
  %927 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %898, i32 0, i32 1
  %928 = load %struct.zzzz*, %struct.zzzz** %927, align 8
  %929 = icmp ne %struct.zzzz* %928, null
  br i1 %929, label %.lr.ph53.8, label %._crit_edge54.loopexit

.lr.ph53.8:                                       ; preds = %926
  call void @unroll_loop(i32 2)
  %930 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %928, i32 0, i32 0
  %931 = load i8*, i8** %930, align 8
  %932 = call i32 @strcmp(i8* %931, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %956, label %934

; <label>:934:                                    ; preds = %.lr.ph53.8
  %935 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %928, i32 0, i32 0
  %936 = load i8*, i8** %935, align 8
  %937 = load i8, i8* %936, align 1
  %938 = sext i8 %937 to i32
  %939 = icmp eq i32 %938, 45
  %940 = zext i8 %.1.7 to i32
  %941 = icmp ne i32 %940, 0
  %or.cond.8 = and i1 %939, %941
  br i1 %or.cond.8, label %956, label %942

; <label>:942:                                    ; preds = %934
  %943 = load i32, i32* @numFileNames, align 4
  %944 = add nsw i32 %943, 1
  store i32 %944, i32* @numFileNames, align 4
  %945 = load i32, i32* @longestFileName, align 4
  %946 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %928, i32 0, i32 0
  %947 = load i8*, i8** %946, align 8
  %948 = call i64 @strlen(i8* %947) #10
  %949 = trunc i64 %948 to i32
  %950 = icmp slt i32 %945, %949
  br i1 %950, label %951, label %956

; <label>:951:                                    ; preds = %942
  %952 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %928, i32 0, i32 0
  %953 = load i8*, i8** %952, align 8
  %954 = call i64 @strlen(i8* %953) #10
  %955 = trunc i64 %954 to i32
  store i32 %955, i32* @longestFileName, align 4
  br label %956

; <label>:956:                                    ; preds = %951, %942, %934, %.lr.ph53.8
  %.1.8 = phi i8 [ 0, %.lr.ph53.8 ], [ %.1.7, %934 ], [ %.1.7, %951 ], [ %.1.7, %942 ]
  call void @__loop_iteration_test___2()
  %957 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %928, i32 0, i32 1
  %958 = load %struct.zzzz*, %struct.zzzz** %957, align 8
  %959 = icmp ne %struct.zzzz* %958, null
  br i1 %959, label %.lr.ph53.9, label %._crit_edge54.loopexit

.lr.ph53.9:                                       ; preds = %956
  call void @unroll_loop(i32 2)
  %960 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %958, i32 0, i32 0
  %961 = load i8*, i8** %960, align 8
  %962 = call i32 @strcmp(i8* %961, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %963 = icmp eq i32 %962, 0
  br i1 %963, label %986, label %964

; <label>:964:                                    ; preds = %.lr.ph53.9
  %965 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %958, i32 0, i32 0
  %966 = load i8*, i8** %965, align 8
  %967 = load i8, i8* %966, align 1
  %968 = sext i8 %967 to i32
  %969 = icmp eq i32 %968, 45
  %970 = zext i8 %.1.8 to i32
  %971 = icmp ne i32 %970, 0
  %or.cond.9 = and i1 %969, %971
  br i1 %or.cond.9, label %986, label %972

; <label>:972:                                    ; preds = %964
  %973 = load i32, i32* @numFileNames, align 4
  %974 = add nsw i32 %973, 1
  store i32 %974, i32* @numFileNames, align 4
  %975 = load i32, i32* @longestFileName, align 4
  %976 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %958, i32 0, i32 0
  %977 = load i8*, i8** %976, align 8
  %978 = call i64 @strlen(i8* %977) #10
  %979 = trunc i64 %978 to i32
  %980 = icmp slt i32 %975, %979
  br i1 %980, label %981, label %986

; <label>:981:                                    ; preds = %972
  %982 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %958, i32 0, i32 0
  %983 = load i8*, i8** %982, align 8
  %984 = call i64 @strlen(i8* %983) #10
  %985 = trunc i64 %984 to i32
  store i32 %985, i32* @longestFileName, align 4
  br label %986

; <label>:986:                                    ; preds = %981, %972, %964, %.lr.ph53.9
  %.1.9 = phi i8 [ 0, %.lr.ph53.9 ], [ %.1.8, %964 ], [ %.1.8, %981 ], [ %.1.8, %972 ]
  call void @__loop_iteration_test___2()
  %987 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %958, i32 0, i32 1
  %988 = load %struct.zzzz*, %struct.zzzz** %987, align 8
  %989 = icmp ne %struct.zzzz* %988, null
  br i1 %989, label %.lr.ph53.10, label %._crit_edge54.loopexit

.lr.ph53.10:                                      ; preds = %986
  call void @unroll_loop(i32 2)
  %990 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %988, i32 0, i32 0
  %991 = load i8*, i8** %990, align 8
  %992 = call i32 @strcmp(i8* %991, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %993 = icmp eq i32 %992, 0
  br i1 %993, label %1016, label %994

; <label>:994:                                    ; preds = %.lr.ph53.10
  %995 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %988, i32 0, i32 0
  %996 = load i8*, i8** %995, align 8
  %997 = load i8, i8* %996, align 1
  %998 = sext i8 %997 to i32
  %999 = icmp eq i32 %998, 45
  %1000 = zext i8 %.1.9 to i32
  %1001 = icmp ne i32 %1000, 0
  %or.cond.10 = and i1 %999, %1001
  br i1 %or.cond.10, label %1016, label %1002

; <label>:1002:                                   ; preds = %994
  %1003 = load i32, i32* @numFileNames, align 4
  %1004 = add nsw i32 %1003, 1
  store i32 %1004, i32* @numFileNames, align 4
  %1005 = load i32, i32* @longestFileName, align 4
  %1006 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %988, i32 0, i32 0
  %1007 = load i8*, i8** %1006, align 8
  %1008 = call i64 @strlen(i8* %1007) #10
  %1009 = trunc i64 %1008 to i32
  %1010 = icmp slt i32 %1005, %1009
  br i1 %1010, label %1011, label %1016

; <label>:1011:                                   ; preds = %1002
  %1012 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %988, i32 0, i32 0
  %1013 = load i8*, i8** %1012, align 8
  %1014 = call i64 @strlen(i8* %1013) #10
  %1015 = trunc i64 %1014 to i32
  store i32 %1015, i32* @longestFileName, align 4
  br label %1016

; <label>:1016:                                   ; preds = %1011, %1002, %994, %.lr.ph53.10
  %.1.10 = phi i8 [ 0, %.lr.ph53.10 ], [ %.1.9, %994 ], [ %.1.9, %1011 ], [ %.1.9, %1002 ]
  call void @__loop_iteration_test___2()
  %1017 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %988, i32 0, i32 1
  %1018 = load %struct.zzzz*, %struct.zzzz** %1017, align 8
  %1019 = icmp ne %struct.zzzz* %1018, null
  br i1 %1019, label %.lr.ph53.11, label %._crit_edge54.loopexit

.lr.ph53.11:                                      ; preds = %1016
  call void @unroll_loop(i32 2)
  %1020 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1018, i32 0, i32 0
  %1021 = load i8*, i8** %1020, align 8
  %1022 = call i32 @strcmp(i8* %1021, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1023 = icmp eq i32 %1022, 0
  br i1 %1023, label %1046, label %1024

; <label>:1024:                                   ; preds = %.lr.ph53.11
  %1025 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1018, i32 0, i32 0
  %1026 = load i8*, i8** %1025, align 8
  %1027 = load i8, i8* %1026, align 1
  %1028 = sext i8 %1027 to i32
  %1029 = icmp eq i32 %1028, 45
  %1030 = zext i8 %.1.10 to i32
  %1031 = icmp ne i32 %1030, 0
  %or.cond.11 = and i1 %1029, %1031
  br i1 %or.cond.11, label %1046, label %1032

; <label>:1032:                                   ; preds = %1024
  %1033 = load i32, i32* @numFileNames, align 4
  %1034 = add nsw i32 %1033, 1
  store i32 %1034, i32* @numFileNames, align 4
  %1035 = load i32, i32* @longestFileName, align 4
  %1036 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1018, i32 0, i32 0
  %1037 = load i8*, i8** %1036, align 8
  %1038 = call i64 @strlen(i8* %1037) #10
  %1039 = trunc i64 %1038 to i32
  %1040 = icmp slt i32 %1035, %1039
  br i1 %1040, label %1041, label %1046

; <label>:1041:                                   ; preds = %1032
  %1042 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1018, i32 0, i32 0
  %1043 = load i8*, i8** %1042, align 8
  %1044 = call i64 @strlen(i8* %1043) #10
  %1045 = trunc i64 %1044 to i32
  store i32 %1045, i32* @longestFileName, align 4
  br label %1046

; <label>:1046:                                   ; preds = %1041, %1032, %1024, %.lr.ph53.11
  %.1.11 = phi i8 [ 0, %.lr.ph53.11 ], [ %.1.10, %1024 ], [ %.1.10, %1041 ], [ %.1.10, %1032 ]
  call void @__loop_iteration_test___2()
  %1047 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1018, i32 0, i32 1
  %1048 = load %struct.zzzz*, %struct.zzzz** %1047, align 8
  %1049 = icmp ne %struct.zzzz* %1048, null
  br i1 %1049, label %.lr.ph53.12, label %._crit_edge54.loopexit

.lr.ph53.12:                                      ; preds = %1046
  call void @unroll_loop(i32 2)
  %1050 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1048, i32 0, i32 0
  %1051 = load i8*, i8** %1050, align 8
  %1052 = call i32 @strcmp(i8* %1051, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1053 = icmp eq i32 %1052, 0
  br i1 %1053, label %1076, label %1054

; <label>:1054:                                   ; preds = %.lr.ph53.12
  %1055 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1048, i32 0, i32 0
  %1056 = load i8*, i8** %1055, align 8
  %1057 = load i8, i8* %1056, align 1
  %1058 = sext i8 %1057 to i32
  %1059 = icmp eq i32 %1058, 45
  %1060 = zext i8 %.1.11 to i32
  %1061 = icmp ne i32 %1060, 0
  %or.cond.12 = and i1 %1059, %1061
  br i1 %or.cond.12, label %1076, label %1062

; <label>:1062:                                   ; preds = %1054
  %1063 = load i32, i32* @numFileNames, align 4
  %1064 = add nsw i32 %1063, 1
  store i32 %1064, i32* @numFileNames, align 4
  %1065 = load i32, i32* @longestFileName, align 4
  %1066 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1048, i32 0, i32 0
  %1067 = load i8*, i8** %1066, align 8
  %1068 = call i64 @strlen(i8* %1067) #10
  %1069 = trunc i64 %1068 to i32
  %1070 = icmp slt i32 %1065, %1069
  br i1 %1070, label %1071, label %1076

; <label>:1071:                                   ; preds = %1062
  %1072 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1048, i32 0, i32 0
  %1073 = load i8*, i8** %1072, align 8
  %1074 = call i64 @strlen(i8* %1073) #10
  %1075 = trunc i64 %1074 to i32
  store i32 %1075, i32* @longestFileName, align 4
  br label %1076

; <label>:1076:                                   ; preds = %1071, %1062, %1054, %.lr.ph53.12
  %.1.12 = phi i8 [ 0, %.lr.ph53.12 ], [ %.1.11, %1054 ], [ %.1.11, %1071 ], [ %.1.11, %1062 ]
  call void @__loop_iteration_test___2()
  %1077 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1048, i32 0, i32 1
  %1078 = load %struct.zzzz*, %struct.zzzz** %1077, align 8
  %1079 = icmp ne %struct.zzzz* %1078, null
  br i1 %1079, label %.lr.ph53.13, label %._crit_edge54.loopexit

.lr.ph53.13:                                      ; preds = %1076
  call void @unroll_loop(i32 2)
  %1080 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1078, i32 0, i32 0
  %1081 = load i8*, i8** %1080, align 8
  %1082 = call i32 @strcmp(i8* %1081, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1083 = icmp eq i32 %1082, 0
  br i1 %1083, label %1106, label %1084

; <label>:1084:                                   ; preds = %.lr.ph53.13
  %1085 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1078, i32 0, i32 0
  %1086 = load i8*, i8** %1085, align 8
  %1087 = load i8, i8* %1086, align 1
  %1088 = sext i8 %1087 to i32
  %1089 = icmp eq i32 %1088, 45
  %1090 = zext i8 %.1.12 to i32
  %1091 = icmp ne i32 %1090, 0
  %or.cond.13 = and i1 %1089, %1091
  br i1 %or.cond.13, label %1106, label %1092

; <label>:1092:                                   ; preds = %1084
  %1093 = load i32, i32* @numFileNames, align 4
  %1094 = add nsw i32 %1093, 1
  store i32 %1094, i32* @numFileNames, align 4
  %1095 = load i32, i32* @longestFileName, align 4
  %1096 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1078, i32 0, i32 0
  %1097 = load i8*, i8** %1096, align 8
  %1098 = call i64 @strlen(i8* %1097) #10
  %1099 = trunc i64 %1098 to i32
  %1100 = icmp slt i32 %1095, %1099
  br i1 %1100, label %1101, label %1106

; <label>:1101:                                   ; preds = %1092
  %1102 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1078, i32 0, i32 0
  %1103 = load i8*, i8** %1102, align 8
  %1104 = call i64 @strlen(i8* %1103) #10
  %1105 = trunc i64 %1104 to i32
  store i32 %1105, i32* @longestFileName, align 4
  br label %1106

; <label>:1106:                                   ; preds = %1101, %1092, %1084, %.lr.ph53.13
  %.1.13 = phi i8 [ 0, %.lr.ph53.13 ], [ %.1.12, %1084 ], [ %.1.12, %1101 ], [ %.1.12, %1092 ]
  call void @__loop_iteration_test___2()
  %1107 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1078, i32 0, i32 1
  %1108 = load %struct.zzzz*, %struct.zzzz** %1107, align 8
  %1109 = icmp ne %struct.zzzz* %1108, null
  br i1 %1109, label %.lr.ph53.14, label %._crit_edge54.loopexit

.lr.ph53.14:                                      ; preds = %1106
  call void @unroll_loop(i32 2)
  %1110 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1108, i32 0, i32 0
  %1111 = load i8*, i8** %1110, align 8
  %1112 = call i32 @strcmp(i8* %1111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1113 = icmp eq i32 %1112, 0
  br i1 %1113, label %1136, label %1114

; <label>:1114:                                   ; preds = %.lr.ph53.14
  %1115 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1108, i32 0, i32 0
  %1116 = load i8*, i8** %1115, align 8
  %1117 = load i8, i8* %1116, align 1
  %1118 = sext i8 %1117 to i32
  %1119 = icmp eq i32 %1118, 45
  %1120 = zext i8 %.1.13 to i32
  %1121 = icmp ne i32 %1120, 0
  %or.cond.14 = and i1 %1119, %1121
  br i1 %or.cond.14, label %1136, label %1122

; <label>:1122:                                   ; preds = %1114
  %1123 = load i32, i32* @numFileNames, align 4
  %1124 = add nsw i32 %1123, 1
  store i32 %1124, i32* @numFileNames, align 4
  %1125 = load i32, i32* @longestFileName, align 4
  %1126 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1108, i32 0, i32 0
  %1127 = load i8*, i8** %1126, align 8
  %1128 = call i64 @strlen(i8* %1127) #10
  %1129 = trunc i64 %1128 to i32
  %1130 = icmp slt i32 %1125, %1129
  br i1 %1130, label %1131, label %1136

; <label>:1131:                                   ; preds = %1122
  %1132 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1108, i32 0, i32 0
  %1133 = load i8*, i8** %1132, align 8
  %1134 = call i64 @strlen(i8* %1133) #10
  %1135 = trunc i64 %1134 to i32
  store i32 %1135, i32* @longestFileName, align 4
  br label %1136

; <label>:1136:                                   ; preds = %1131, %1122, %1114, %.lr.ph53.14
  %.1.14 = phi i8 [ 0, %.lr.ph53.14 ], [ %.1.13, %1114 ], [ %.1.13, %1131 ], [ %.1.13, %1122 ]
  call void @__loop_iteration_test___2()
  %1137 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1108, i32 0, i32 1
  %1138 = load %struct.zzzz*, %struct.zzzz** %1137, align 8
  %1139 = icmp ne %struct.zzzz* %1138, null
  br i1 %1139, label %.lr.ph53.15, label %._crit_edge54.loopexit

.lr.ph53.15:                                      ; preds = %1136
  call void @unroll_loop(i32 2)
  %1140 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1138, i32 0, i32 0
  %1141 = load i8*, i8** %1140, align 8
  %1142 = call i32 @strcmp(i8* %1141, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1143 = icmp eq i32 %1142, 0
  br i1 %1143, label %1166, label %1144

; <label>:1144:                                   ; preds = %.lr.ph53.15
  %1145 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1138, i32 0, i32 0
  %1146 = load i8*, i8** %1145, align 8
  %1147 = load i8, i8* %1146, align 1
  %1148 = sext i8 %1147 to i32
  %1149 = icmp eq i32 %1148, 45
  %1150 = zext i8 %.1.14 to i32
  %1151 = icmp ne i32 %1150, 0
  %or.cond.15 = and i1 %1149, %1151
  br i1 %or.cond.15, label %1166, label %1152

; <label>:1152:                                   ; preds = %1144
  %1153 = load i32, i32* @numFileNames, align 4
  %1154 = add nsw i32 %1153, 1
  store i32 %1154, i32* @numFileNames, align 4
  %1155 = load i32, i32* @longestFileName, align 4
  %1156 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1138, i32 0, i32 0
  %1157 = load i8*, i8** %1156, align 8
  %1158 = call i64 @strlen(i8* %1157) #10
  %1159 = trunc i64 %1158 to i32
  %1160 = icmp slt i32 %1155, %1159
  br i1 %1160, label %1161, label %1166

; <label>:1161:                                   ; preds = %1152
  %1162 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1138, i32 0, i32 0
  %1163 = load i8*, i8** %1162, align 8
  %1164 = call i64 @strlen(i8* %1163) #10
  %1165 = trunc i64 %1164 to i32
  store i32 %1165, i32* @longestFileName, align 4
  br label %1166

; <label>:1166:                                   ; preds = %1161, %1152, %1144, %.lr.ph53.15
  %.1.15 = phi i8 [ 0, %.lr.ph53.15 ], [ %.1.14, %1144 ], [ %.1.14, %1161 ], [ %.1.14, %1152 ]
  call void @__loop_iteration_test___2()
  %1167 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1138, i32 0, i32 1
  %1168 = load %struct.zzzz*, %struct.zzzz** %1167, align 8
  %1169 = icmp ne %struct.zzzz* %1168, null
  br i1 %1169, label %.lr.ph53.16, label %._crit_edge54.loopexit

.lr.ph53.16:                                      ; preds = %1166
  call void @unroll_loop(i32 2)
  %1170 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1168, i32 0, i32 0
  %1171 = load i8*, i8** %1170, align 8
  %1172 = call i32 @strcmp(i8* %1171, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1173 = icmp eq i32 %1172, 0
  br i1 %1173, label %1196, label %1174

; <label>:1174:                                   ; preds = %.lr.ph53.16
  %1175 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1168, i32 0, i32 0
  %1176 = load i8*, i8** %1175, align 8
  %1177 = load i8, i8* %1176, align 1
  %1178 = sext i8 %1177 to i32
  %1179 = icmp eq i32 %1178, 45
  %1180 = zext i8 %.1.15 to i32
  %1181 = icmp ne i32 %1180, 0
  %or.cond.16 = and i1 %1179, %1181
  br i1 %or.cond.16, label %1196, label %1182

; <label>:1182:                                   ; preds = %1174
  %1183 = load i32, i32* @numFileNames, align 4
  %1184 = add nsw i32 %1183, 1
  store i32 %1184, i32* @numFileNames, align 4
  %1185 = load i32, i32* @longestFileName, align 4
  %1186 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1168, i32 0, i32 0
  %1187 = load i8*, i8** %1186, align 8
  %1188 = call i64 @strlen(i8* %1187) #10
  %1189 = trunc i64 %1188 to i32
  %1190 = icmp slt i32 %1185, %1189
  br i1 %1190, label %1191, label %1196

; <label>:1191:                                   ; preds = %1182
  %1192 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1168, i32 0, i32 0
  %1193 = load i8*, i8** %1192, align 8
  %1194 = call i64 @strlen(i8* %1193) #10
  %1195 = trunc i64 %1194 to i32
  store i32 %1195, i32* @longestFileName, align 4
  br label %1196

; <label>:1196:                                   ; preds = %1191, %1182, %1174, %.lr.ph53.16
  %.1.16 = phi i8 [ 0, %.lr.ph53.16 ], [ %.1.15, %1174 ], [ %.1.15, %1191 ], [ %.1.15, %1182 ]
  call void @__loop_iteration_test___2()
  %1197 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1168, i32 0, i32 1
  %1198 = load %struct.zzzz*, %struct.zzzz** %1197, align 8
  %1199 = icmp ne %struct.zzzz* %1198, null
  br i1 %1199, label %.lr.ph53.17, label %._crit_edge54.loopexit

.lr.ph53.17:                                      ; preds = %1196
  call void @unroll_loop(i32 2)
  %1200 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1198, i32 0, i32 0
  %1201 = load i8*, i8** %1200, align 8
  %1202 = call i32 @strcmp(i8* %1201, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1203 = icmp eq i32 %1202, 0
  br i1 %1203, label %1226, label %1204

; <label>:1204:                                   ; preds = %.lr.ph53.17
  %1205 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1198, i32 0, i32 0
  %1206 = load i8*, i8** %1205, align 8
  %1207 = load i8, i8* %1206, align 1
  %1208 = sext i8 %1207 to i32
  %1209 = icmp eq i32 %1208, 45
  %1210 = zext i8 %.1.16 to i32
  %1211 = icmp ne i32 %1210, 0
  %or.cond.17 = and i1 %1209, %1211
  br i1 %or.cond.17, label %1226, label %1212

; <label>:1212:                                   ; preds = %1204
  %1213 = load i32, i32* @numFileNames, align 4
  %1214 = add nsw i32 %1213, 1
  store i32 %1214, i32* @numFileNames, align 4
  %1215 = load i32, i32* @longestFileName, align 4
  %1216 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1198, i32 0, i32 0
  %1217 = load i8*, i8** %1216, align 8
  %1218 = call i64 @strlen(i8* %1217) #10
  %1219 = trunc i64 %1218 to i32
  %1220 = icmp slt i32 %1215, %1219
  br i1 %1220, label %1221, label %1226

; <label>:1221:                                   ; preds = %1212
  %1222 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1198, i32 0, i32 0
  %1223 = load i8*, i8** %1222, align 8
  %1224 = call i64 @strlen(i8* %1223) #10
  %1225 = trunc i64 %1224 to i32
  store i32 %1225, i32* @longestFileName, align 4
  br label %1226

; <label>:1226:                                   ; preds = %1221, %1212, %1204, %.lr.ph53.17
  %.1.17 = phi i8 [ 0, %.lr.ph53.17 ], [ %.1.16, %1204 ], [ %.1.16, %1221 ], [ %.1.16, %1212 ]
  call void @__loop_iteration_test___2()
  %1227 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1198, i32 0, i32 1
  %1228 = load %struct.zzzz*, %struct.zzzz** %1227, align 8
  %1229 = icmp ne %struct.zzzz* %1228, null
  br i1 %1229, label %.lr.ph53.18, label %._crit_edge54.loopexit

.lr.ph53.18:                                      ; preds = %1226
  call void @unroll_loop(i32 2)
  %1230 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1228, i32 0, i32 0
  %1231 = load i8*, i8** %1230, align 8
  %1232 = call i32 @strcmp(i8* %1231, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1233 = icmp eq i32 %1232, 0
  br i1 %1233, label %1256, label %1234

; <label>:1234:                                   ; preds = %.lr.ph53.18
  %1235 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1228, i32 0, i32 0
  %1236 = load i8*, i8** %1235, align 8
  %1237 = load i8, i8* %1236, align 1
  %1238 = sext i8 %1237 to i32
  %1239 = icmp eq i32 %1238, 45
  %1240 = zext i8 %.1.17 to i32
  %1241 = icmp ne i32 %1240, 0
  %or.cond.18 = and i1 %1239, %1241
  br i1 %or.cond.18, label %1256, label %1242

; <label>:1242:                                   ; preds = %1234
  %1243 = load i32, i32* @numFileNames, align 4
  %1244 = add nsw i32 %1243, 1
  store i32 %1244, i32* @numFileNames, align 4
  %1245 = load i32, i32* @longestFileName, align 4
  %1246 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1228, i32 0, i32 0
  %1247 = load i8*, i8** %1246, align 8
  %1248 = call i64 @strlen(i8* %1247) #10
  %1249 = trunc i64 %1248 to i32
  %1250 = icmp slt i32 %1245, %1249
  br i1 %1250, label %1251, label %1256

; <label>:1251:                                   ; preds = %1242
  %1252 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1228, i32 0, i32 0
  %1253 = load i8*, i8** %1252, align 8
  %1254 = call i64 @strlen(i8* %1253) #10
  %1255 = trunc i64 %1254 to i32
  store i32 %1255, i32* @longestFileName, align 4
  br label %1256

; <label>:1256:                                   ; preds = %1251, %1242, %1234, %.lr.ph53.18
  %.1.18 = phi i8 [ 0, %.lr.ph53.18 ], [ %.1.17, %1234 ], [ %.1.17, %1251 ], [ %.1.17, %1242 ]
  call void @__loop_iteration_test___2()
  %1257 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1228, i32 0, i32 1
  %1258 = load %struct.zzzz*, %struct.zzzz** %1257, align 8
  %1259 = icmp ne %struct.zzzz* %1258, null
  br i1 %1259, label %.lr.ph53.19, label %._crit_edge54.loopexit

.lr.ph53.19:                                      ; preds = %1256
  call void @unroll_loop(i32 2)
  %1260 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1258, i32 0, i32 0
  %1261 = load i8*, i8** %1260, align 8
  %1262 = call i32 @strcmp(i8* %1261, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1263 = icmp eq i32 %1262, 0
  br i1 %1263, label %1286, label %1264

; <label>:1264:                                   ; preds = %.lr.ph53.19
  %1265 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1258, i32 0, i32 0
  %1266 = load i8*, i8** %1265, align 8
  %1267 = load i8, i8* %1266, align 1
  %1268 = sext i8 %1267 to i32
  %1269 = icmp eq i32 %1268, 45
  %1270 = zext i8 %.1.18 to i32
  %1271 = icmp ne i32 %1270, 0
  %or.cond.19 = and i1 %1269, %1271
  br i1 %or.cond.19, label %1286, label %1272

; <label>:1272:                                   ; preds = %1264
  %1273 = load i32, i32* @numFileNames, align 4
  %1274 = add nsw i32 %1273, 1
  store i32 %1274, i32* @numFileNames, align 4
  %1275 = load i32, i32* @longestFileName, align 4
  %1276 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1258, i32 0, i32 0
  %1277 = load i8*, i8** %1276, align 8
  %1278 = call i64 @strlen(i8* %1277) #10
  %1279 = trunc i64 %1278 to i32
  %1280 = icmp slt i32 %1275, %1279
  br i1 %1280, label %1281, label %1286

; <label>:1281:                                   ; preds = %1272
  %1282 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1258, i32 0, i32 0
  %1283 = load i8*, i8** %1282, align 8
  %1284 = call i64 @strlen(i8* %1283) #10
  %1285 = trunc i64 %1284 to i32
  store i32 %1285, i32* @longestFileName, align 4
  br label %1286

; <label>:1286:                                   ; preds = %1281, %1272, %1264, %.lr.ph53.19
  call void @__loop_iteration_test___2()
  %1287 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1258, i32 0, i32 1
  %1288 = load %struct.zzzz*, %struct.zzzz** %1287, align 8
  br label %._crit_edge54.loopexit

.lr.ph48.1:                                       ; preds = %._crit_edge43
  call void @unroll_loop(i32 3)
  %1289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1290 = load i8*, i8** %1289, align 8
  %1291 = getelementptr [10 x i8], [10 x i8]* @16, i64 0, i64 0
  %1292 = getelementptr [3 x i8], [3 x i8]* @17, i64 0, i64 0
  %1293 = call i32 @strcmp(i8* %1291, i8* %1292) #10
  %1294 = icmp eq i32 1, 0
  br i1 false, label %.loopexit17.loopexit, label %1295

; <label>:1295:                                   ; preds = %.lr.ph48.1
  %1296 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1297 = load i8*, i8** %1296, align 8
  %1298 = load i8, i8* %1297, align 1
  %1299 = sext i8 104 to i32
  %1300 = icmp eq i32 104, 45
  br i1 false, label %1301, label %._crit_edge43.1

; <label>:1301:                                   ; preds = %1295
  %1302 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1303 = load i8*, i8** %1302, align 8
  %1304 = getelementptr inbounds i8, i8* %1303, i64 1
  %1305 = load i8, i8* %1304, align 1
  %1306 = sext i8 %1305 to i32
  %1307 = icmp ne i32 %1306, 45
  br i1 %1307, label %1308, label %._crit_edge43.1

; <label>:1308:                                   ; preds = %1301
  %1309 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  %1310 = load i8*, i8** %1309, align 8
  %1311 = getelementptr inbounds i8, i8* %1310, i64 1
  %1312 = load i8, i8* %1311, align 1
  %1313 = sext i8 %1312 to i32
  %1314 = icmp ne i32 %1313, 0
  br i1 %1314, label %.lr.ph42.preheader.1, label %._crit_edge43.1

.lr.ph42.preheader.1:                             ; preds = %1308
  %1315 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 0
  br label %.lr.ph42.1

.lr.ph42.1:                                       ; preds = %1340, %.lr.ph42.preheader.1
  %lsr.iv.1 = phi i64 [ 0, %.lr.ph42.preheader.1 ], [ %lsr.iv.next.1, %1340 ]
  call void @unroll_loop(i32 4)
  %1316 = load i8*, i8** %1315, align 8
  %scevgep.1 = getelementptr i8, i8* %1316, i64 1
  %scevgep1.1 = getelementptr i8, i8* %scevgep.1, i64 %lsr.iv.1
  %1317 = load i8, i8* %scevgep1.1, align 1
  %1318 = sext i8 %1317 to i32
  switch i32 %1318, label %.loopexit3 [
    i32 99, label %1339
    i32 100, label %1338
    i32 122, label %1337
    i32 102, label %1336
    i32 116, label %1335
    i32 107, label %1334
    i32 115, label %1333
    i32 113, label %1332
    i32 49, label %1331
    i32 50, label %1330
    i32 51, label %1329
    i32 52, label %1328
    i32 53, label %1327
    i32 54, label %1326
    i32 55, label %1325
    i32 56, label %1324
    i32 57, label %1323
    i32 86, label %1322
    i32 76, label %1322
    i32 118, label %1319
    i32 104, label %.loopexit4
  ]

; <label>:1319:                                   ; preds = %.lr.ph42.1
  %1320 = load i32, i32* @verbosity, align 4
  %1321 = add nsw i32 %1320, 1
  store i32 %1321, i32* @verbosity, align 4
  br label %1340

; <label>:1322:                                   ; preds = %.lr.ph42.1, %.lr.ph42.1
  call void @license()
  br label %1340

; <label>:1323:                                   ; preds = %.lr.ph42.1
  store i32 9, i32* @blockSize100k, align 4
  br label %1340

; <label>:1324:                                   ; preds = %.lr.ph42.1
  store i32 8, i32* @blockSize100k, align 4
  br label %1340

; <label>:1325:                                   ; preds = %.lr.ph42.1
  store i32 7, i32* @blockSize100k, align 4
  br label %1340

; <label>:1326:                                   ; preds = %.lr.ph42.1
  store i32 6, i32* @blockSize100k, align 4
  br label %1340

; <label>:1327:                                   ; preds = %.lr.ph42.1
  store i32 5, i32* @blockSize100k, align 4
  br label %1340

; <label>:1328:                                   ; preds = %.lr.ph42.1
  store i32 4, i32* @blockSize100k, align 4
  br label %1340

; <label>:1329:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @blockSize100k, align 4
  br label %1340

; <label>:1330:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @blockSize100k, align 4
  br label %1340

; <label>:1331:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @blockSize100k, align 4
  br label %1340

; <label>:1332:                                   ; preds = %.lr.ph42.1
  store i8 0, i8* @noisy, align 1
  br label %1340

; <label>:1333:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @smallMode, align 1
  br label %1340

; <label>:1334:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @keepInputFiles, align 1
  br label %1340

; <label>:1335:                                   ; preds = %.lr.ph42.1
  store i32 3, i32* @opMode, align 4
  br label %1340

; <label>:1336:                                   ; preds = %.lr.ph42.1
  store i8 1, i8* @forceOverwrite, align 1
  br label %1340

; <label>:1337:                                   ; preds = %.lr.ph42.1
  store i32 1, i32* @opMode, align 4
  br label %1340

; <label>:1338:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @opMode, align 4
  br label %1340

; <label>:1339:                                   ; preds = %.lr.ph42.1
  store i32 2, i32* @srcMode, align 4
  br label %1340

; <label>:1340:                                   ; preds = %1339, %1338, %1337, %1336, %1335, %1334, %1333, %1332, %1331, %1330, %1329, %1328, %1327, %1326, %1325, %1324, %1323, %1322, %1319
  %1341 = load i8*, i8** %1309, align 8
  %scevgep2.1 = getelementptr i8, i8* %1341, i64 2
  %scevgep3.1 = getelementptr i8, i8* %scevgep2.1, i64 %lsr.iv.1
  %1342 = load i8, i8* %scevgep3.1, align 1
  %1343 = sext i8 %1342 to i32
  %1344 = icmp ne i32 %1343, 0
  %lsr.iv.next.1 = add i64 %lsr.iv.1, 1
  br i1 %1344, label %.lr.ph42.1, label %._crit_edge43.loopexit.1

._crit_edge43.loopexit.1:                         ; preds = %1340
  br label %._crit_edge43.1

._crit_edge43.1:                                  ; preds = %._crit_edge43.loopexit.1, %1308, %1301, %1295
  call void @__loop_iteration_test___3()
  %1345 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %204, i32 0, i32 1
  %1346 = load %struct.zzzz*, %struct.zzzz** %1345, align 8
  %1347 = icmp ne i64 0, 0
  %1348 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph48.2, label %.loopexit17.loopexit

.lr.ph48.2:                                       ; preds = %._crit_edge43.1
  call void @unroll_loop(i32 3)
  %1349 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1350 = load i8*, i8** %1349, align 8
  %1351 = call i32 @strcmp(i8* %1350, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1352 = icmp eq i32 %1351, 0
  br i1 %1352, label %.loopexit17.loopexit, label %1353

; <label>:1353:                                   ; preds = %.lr.ph48.2
  %1354 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1355 = load i8*, i8** %1354, align 8
  %1356 = load i8, i8* %1355, align 1
  %1357 = sext i8 %1356 to i32
  %1358 = icmp eq i32 %1357, 45
  br i1 %1358, label %1359, label %._crit_edge43.2

; <label>:1359:                                   ; preds = %1353
  %1360 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1361 = load i8*, i8** %1360, align 8
  %1362 = getelementptr inbounds i8, i8* %1361, i64 1
  %1363 = load i8, i8* %1362, align 1
  %1364 = sext i8 %1363 to i32
  %1365 = icmp ne i32 %1364, 45
  br i1 %1365, label %1366, label %._crit_edge43.2

; <label>:1366:                                   ; preds = %1359
  %1367 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %1368 = load i8*, i8** %1367, align 8
  %1369 = getelementptr inbounds i8, i8* %1368, i64 1
  %1370 = load i8, i8* %1369, align 1
  %1371 = sext i8 %1370 to i32
  %1372 = icmp ne i32 %1371, 0
  br i1 %1372, label %.lr.ph42.preheader.2, label %._crit_edge43.2

.lr.ph42.preheader.2:                             ; preds = %1366
  %1373 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  br label %.lr.ph42.2

.lr.ph42.2:                                       ; preds = %1398, %.lr.ph42.preheader.2
  %lsr.iv.2 = phi i64 [ 0, %.lr.ph42.preheader.2 ], [ %lsr.iv.next.2, %1398 ]
  call void @unroll_loop(i32 4)
  %1374 = load i8*, i8** %1373, align 8
  %scevgep.2 = getelementptr i8, i8* %1374, i64 1
  %scevgep1.2 = getelementptr i8, i8* %scevgep.2, i64 %lsr.iv.2
  %1375 = load i8, i8* %scevgep1.2, align 1
  %1376 = sext i8 %1375 to i32
  switch i32 %1376, label %.loopexit5 [
    i32 99, label %1397
    i32 100, label %1396
    i32 122, label %1395
    i32 102, label %1394
    i32 116, label %1393
    i32 107, label %1392
    i32 115, label %1391
    i32 113, label %1390
    i32 49, label %1389
    i32 50, label %1388
    i32 51, label %1387
    i32 52, label %1386
    i32 53, label %1385
    i32 54, label %1384
    i32 55, label %1383
    i32 56, label %1382
    i32 57, label %1381
    i32 86, label %1380
    i32 76, label %1380
    i32 118, label %1377
    i32 104, label %.loopexit6
  ]

; <label>:1377:                                   ; preds = %.lr.ph42.2
  %1378 = load i32, i32* @verbosity, align 4
  %1379 = add nsw i32 %1378, 1
  store i32 %1379, i32* @verbosity, align 4
  br label %1398

; <label>:1380:                                   ; preds = %.lr.ph42.2, %.lr.ph42.2
  call void @license()
  br label %1398

; <label>:1381:                                   ; preds = %.lr.ph42.2
  store i32 9, i32* @blockSize100k, align 4
  br label %1398

; <label>:1382:                                   ; preds = %.lr.ph42.2
  store i32 8, i32* @blockSize100k, align 4
  br label %1398

; <label>:1383:                                   ; preds = %.lr.ph42.2
  store i32 7, i32* @blockSize100k, align 4
  br label %1398

; <label>:1384:                                   ; preds = %.lr.ph42.2
  store i32 6, i32* @blockSize100k, align 4
  br label %1398

; <label>:1385:                                   ; preds = %.lr.ph42.2
  store i32 5, i32* @blockSize100k, align 4
  br label %1398

; <label>:1386:                                   ; preds = %.lr.ph42.2
  store i32 4, i32* @blockSize100k, align 4
  br label %1398

; <label>:1387:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @blockSize100k, align 4
  br label %1398

; <label>:1388:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @blockSize100k, align 4
  br label %1398

; <label>:1389:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @blockSize100k, align 4
  br label %1398

; <label>:1390:                                   ; preds = %.lr.ph42.2
  store i8 0, i8* @noisy, align 1
  br label %1398

; <label>:1391:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @smallMode, align 1
  br label %1398

; <label>:1392:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @keepInputFiles, align 1
  br label %1398

; <label>:1393:                                   ; preds = %.lr.ph42.2
  store i32 3, i32* @opMode, align 4
  br label %1398

; <label>:1394:                                   ; preds = %.lr.ph42.2
  store i8 1, i8* @forceOverwrite, align 1
  br label %1398

; <label>:1395:                                   ; preds = %.lr.ph42.2
  store i32 1, i32* @opMode, align 4
  br label %1398

; <label>:1396:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @opMode, align 4
  br label %1398

; <label>:1397:                                   ; preds = %.lr.ph42.2
  store i32 2, i32* @srcMode, align 4
  br label %1398

; <label>:1398:                                   ; preds = %1397, %1396, %1395, %1394, %1393, %1392, %1391, %1390, %1389, %1388, %1387, %1386, %1385, %1384, %1383, %1382, %1381, %1380, %1377
  %1399 = load i8*, i8** %1367, align 8
  %scevgep2.2 = getelementptr i8, i8* %1399, i64 2
  %scevgep3.2 = getelementptr i8, i8* %scevgep2.2, i64 %lsr.iv.2
  %1400 = load i8, i8* %scevgep3.2, align 1
  %1401 = sext i8 %1400 to i32
  %1402 = icmp ne i32 %1401, 0
  %lsr.iv.next.2 = add i64 %lsr.iv.2, 1
  br i1 %1402, label %.lr.ph42.2, label %._crit_edge43.loopexit.2

._crit_edge43.loopexit.2:                         ; preds = %1398
  br label %._crit_edge43.2

._crit_edge43.2:                                  ; preds = %._crit_edge43.loopexit.2, %1366, %1359, %1353
  call void @__loop_iteration_test___3()
  %1403 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %1404 = load %struct.zzzz*, %struct.zzzz** %1403, align 8
  %1405 = icmp ne %struct.zzzz* %1404, null
  br i1 %1405, label %.lr.ph48.3, label %.loopexit17.loopexit

.lr.ph48.3:                                       ; preds = %._crit_edge43.2
  call void @unroll_loop(i32 3)
  %1406 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1404, i32 0, i32 0
  %1407 = load i8*, i8** %1406, align 8
  %1408 = call i32 @strcmp(i8* %1407, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1409 = icmp eq i32 %1408, 0
  br i1 %1409, label %.loopexit17.loopexit, label %1410

; <label>:1410:                                   ; preds = %.lr.ph48.3
  %1411 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1404, i32 0, i32 0
  %1412 = load i8*, i8** %1411, align 8
  %1413 = load i8, i8* %1412, align 1
  %1414 = sext i8 %1413 to i32
  %1415 = icmp eq i32 %1414, 45
  br i1 %1415, label %1416, label %._crit_edge43.3

; <label>:1416:                                   ; preds = %1410
  %1417 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1404, i32 0, i32 0
  %1418 = load i8*, i8** %1417, align 8
  %1419 = getelementptr inbounds i8, i8* %1418, i64 1
  %1420 = load i8, i8* %1419, align 1
  %1421 = sext i8 %1420 to i32
  %1422 = icmp ne i32 %1421, 45
  br i1 %1422, label %1423, label %._crit_edge43.3

; <label>:1423:                                   ; preds = %1416
  %1424 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1404, i32 0, i32 0
  %1425 = load i8*, i8** %1424, align 8
  %1426 = getelementptr inbounds i8, i8* %1425, i64 1
  %1427 = load i8, i8* %1426, align 1
  %1428 = sext i8 %1427 to i32
  %1429 = icmp ne i32 %1428, 0
  br i1 %1429, label %.lr.ph42.preheader.3, label %._crit_edge43.3

.lr.ph42.preheader.3:                             ; preds = %1423
  %1430 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1404, i32 0, i32 0
  br label %.lr.ph42.3

.lr.ph42.3:                                       ; preds = %1455, %.lr.ph42.preheader.3
  %lsr.iv.3 = phi i64 [ 0, %.lr.ph42.preheader.3 ], [ %lsr.iv.next.3, %1455 ]
  call void @unroll_loop(i32 4)
  %1431 = load i8*, i8** %1430, align 8
  %scevgep.3 = getelementptr i8, i8* %1431, i64 1
  %scevgep1.3 = getelementptr i8, i8* %scevgep.3, i64 %lsr.iv.3
  %1432 = load i8, i8* %scevgep1.3, align 1
  %1433 = sext i8 %1432 to i32
  switch i32 %1433, label %.loopexit7 [
    i32 99, label %1454
    i32 100, label %1453
    i32 122, label %1452
    i32 102, label %1451
    i32 116, label %1450
    i32 107, label %1449
    i32 115, label %1448
    i32 113, label %1447
    i32 49, label %1446
    i32 50, label %1445
    i32 51, label %1444
    i32 52, label %1443
    i32 53, label %1442
    i32 54, label %1441
    i32 55, label %1440
    i32 56, label %1439
    i32 57, label %1438
    i32 86, label %1437
    i32 76, label %1437
    i32 118, label %1434
    i32 104, label %.loopexit8
  ]

; <label>:1434:                                   ; preds = %.lr.ph42.3
  %1435 = load i32, i32* @verbosity, align 4
  %1436 = add nsw i32 %1435, 1
  store i32 %1436, i32* @verbosity, align 4
  br label %1455

; <label>:1437:                                   ; preds = %.lr.ph42.3, %.lr.ph42.3
  call void @license()
  br label %1455

; <label>:1438:                                   ; preds = %.lr.ph42.3
  store i32 9, i32* @blockSize100k, align 4
  br label %1455

; <label>:1439:                                   ; preds = %.lr.ph42.3
  store i32 8, i32* @blockSize100k, align 4
  br label %1455

; <label>:1440:                                   ; preds = %.lr.ph42.3
  store i32 7, i32* @blockSize100k, align 4
  br label %1455

; <label>:1441:                                   ; preds = %.lr.ph42.3
  store i32 6, i32* @blockSize100k, align 4
  br label %1455

; <label>:1442:                                   ; preds = %.lr.ph42.3
  store i32 5, i32* @blockSize100k, align 4
  br label %1455

; <label>:1443:                                   ; preds = %.lr.ph42.3
  store i32 4, i32* @blockSize100k, align 4
  br label %1455

; <label>:1444:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @blockSize100k, align 4
  br label %1455

; <label>:1445:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @blockSize100k, align 4
  br label %1455

; <label>:1446:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @blockSize100k, align 4
  br label %1455

; <label>:1447:                                   ; preds = %.lr.ph42.3
  store i8 0, i8* @noisy, align 1
  br label %1455

; <label>:1448:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @smallMode, align 1
  br label %1455

; <label>:1449:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @keepInputFiles, align 1
  br label %1455

; <label>:1450:                                   ; preds = %.lr.ph42.3
  store i32 3, i32* @opMode, align 4
  br label %1455

; <label>:1451:                                   ; preds = %.lr.ph42.3
  store i8 1, i8* @forceOverwrite, align 1
  br label %1455

; <label>:1452:                                   ; preds = %.lr.ph42.3
  store i32 1, i32* @opMode, align 4
  br label %1455

; <label>:1453:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @opMode, align 4
  br label %1455

; <label>:1454:                                   ; preds = %.lr.ph42.3
  store i32 2, i32* @srcMode, align 4
  br label %1455

; <label>:1455:                                   ; preds = %1454, %1453, %1452, %1451, %1450, %1449, %1448, %1447, %1446, %1445, %1444, %1443, %1442, %1441, %1440, %1439, %1438, %1437, %1434
  %1456 = load i8*, i8** %1424, align 8
  %scevgep2.3 = getelementptr i8, i8* %1456, i64 2
  %scevgep3.3 = getelementptr i8, i8* %scevgep2.3, i64 %lsr.iv.3
  %1457 = load i8, i8* %scevgep3.3, align 1
  %1458 = sext i8 %1457 to i32
  %1459 = icmp ne i32 %1458, 0
  %lsr.iv.next.3 = add i64 %lsr.iv.3, 1
  br i1 %1459, label %.lr.ph42.3, label %._crit_edge43.loopexit.3

._crit_edge43.loopexit.3:                         ; preds = %1455
  br label %._crit_edge43.3

._crit_edge43.3:                                  ; preds = %._crit_edge43.loopexit.3, %1423, %1416, %1410
  call void @__loop_iteration_test___3()
  %1460 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1404, i32 0, i32 1
  %1461 = load %struct.zzzz*, %struct.zzzz** %1460, align 8
  %1462 = icmp ne %struct.zzzz* %1461, null
  br i1 %1462, label %.lr.ph48.4, label %.loopexit17.loopexit

.lr.ph48.4:                                       ; preds = %._crit_edge43.3
  call void @unroll_loop(i32 3)
  %1463 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1461, i32 0, i32 0
  %1464 = load i8*, i8** %1463, align 8
  %1465 = call i32 @strcmp(i8* %1464, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1466 = icmp eq i32 %1465, 0
  br i1 %1466, label %.loopexit17.loopexit, label %1467

; <label>:1467:                                   ; preds = %.lr.ph48.4
  %1468 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1461, i32 0, i32 0
  %1469 = load i8*, i8** %1468, align 8
  %1470 = load i8, i8* %1469, align 1
  %1471 = sext i8 %1470 to i32
  %1472 = icmp eq i32 %1471, 45
  br i1 %1472, label %1473, label %._crit_edge43.4

; <label>:1473:                                   ; preds = %1467
  %1474 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1461, i32 0, i32 0
  %1475 = load i8*, i8** %1474, align 8
  %1476 = getelementptr inbounds i8, i8* %1475, i64 1
  %1477 = load i8, i8* %1476, align 1
  %1478 = sext i8 %1477 to i32
  %1479 = icmp ne i32 %1478, 45
  br i1 %1479, label %1480, label %._crit_edge43.4

; <label>:1480:                                   ; preds = %1473
  %1481 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1461, i32 0, i32 0
  %1482 = load i8*, i8** %1481, align 8
  %1483 = getelementptr inbounds i8, i8* %1482, i64 1
  %1484 = load i8, i8* %1483, align 1
  %1485 = sext i8 %1484 to i32
  %1486 = icmp ne i32 %1485, 0
  br i1 %1486, label %.lr.ph42.preheader.4, label %._crit_edge43.4

.lr.ph42.preheader.4:                             ; preds = %1480
  %1487 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1461, i32 0, i32 0
  br label %.lr.ph42.4

.lr.ph42.4:                                       ; preds = %1512, %.lr.ph42.preheader.4
  %lsr.iv.4 = phi i64 [ 0, %.lr.ph42.preheader.4 ], [ %lsr.iv.next.4, %1512 ]
  call void @unroll_loop(i32 4)
  %1488 = load i8*, i8** %1487, align 8
  %scevgep.4 = getelementptr i8, i8* %1488, i64 1
  %scevgep1.4 = getelementptr i8, i8* %scevgep.4, i64 %lsr.iv.4
  %1489 = load i8, i8* %scevgep1.4, align 1
  %1490 = sext i8 %1489 to i32
  switch i32 %1490, label %.loopexit9 [
    i32 99, label %1511
    i32 100, label %1510
    i32 122, label %1509
    i32 102, label %1508
    i32 116, label %1507
    i32 107, label %1506
    i32 115, label %1505
    i32 113, label %1504
    i32 49, label %1503
    i32 50, label %1502
    i32 51, label %1501
    i32 52, label %1500
    i32 53, label %1499
    i32 54, label %1498
    i32 55, label %1497
    i32 56, label %1496
    i32 57, label %1495
    i32 86, label %1494
    i32 76, label %1494
    i32 118, label %1491
    i32 104, label %.loopexit10
  ]

; <label>:1491:                                   ; preds = %.lr.ph42.4
  %1492 = load i32, i32* @verbosity, align 4
  %1493 = add nsw i32 %1492, 1
  store i32 %1493, i32* @verbosity, align 4
  br label %1512

; <label>:1494:                                   ; preds = %.lr.ph42.4, %.lr.ph42.4
  call void @license()
  br label %1512

; <label>:1495:                                   ; preds = %.lr.ph42.4
  store i32 9, i32* @blockSize100k, align 4
  br label %1512

; <label>:1496:                                   ; preds = %.lr.ph42.4
  store i32 8, i32* @blockSize100k, align 4
  br label %1512

; <label>:1497:                                   ; preds = %.lr.ph42.4
  store i32 7, i32* @blockSize100k, align 4
  br label %1512

; <label>:1498:                                   ; preds = %.lr.ph42.4
  store i32 6, i32* @blockSize100k, align 4
  br label %1512

; <label>:1499:                                   ; preds = %.lr.ph42.4
  store i32 5, i32* @blockSize100k, align 4
  br label %1512

; <label>:1500:                                   ; preds = %.lr.ph42.4
  store i32 4, i32* @blockSize100k, align 4
  br label %1512

; <label>:1501:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @blockSize100k, align 4
  br label %1512

; <label>:1502:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @blockSize100k, align 4
  br label %1512

; <label>:1503:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @blockSize100k, align 4
  br label %1512

; <label>:1504:                                   ; preds = %.lr.ph42.4
  store i8 0, i8* @noisy, align 1
  br label %1512

; <label>:1505:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @smallMode, align 1
  br label %1512

; <label>:1506:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @keepInputFiles, align 1
  br label %1512

; <label>:1507:                                   ; preds = %.lr.ph42.4
  store i32 3, i32* @opMode, align 4
  br label %1512

; <label>:1508:                                   ; preds = %.lr.ph42.4
  store i8 1, i8* @forceOverwrite, align 1
  br label %1512

; <label>:1509:                                   ; preds = %.lr.ph42.4
  store i32 1, i32* @opMode, align 4
  br label %1512

; <label>:1510:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @opMode, align 4
  br label %1512

; <label>:1511:                                   ; preds = %.lr.ph42.4
  store i32 2, i32* @srcMode, align 4
  br label %1512

; <label>:1512:                                   ; preds = %1511, %1510, %1509, %1508, %1507, %1506, %1505, %1504, %1503, %1502, %1501, %1500, %1499, %1498, %1497, %1496, %1495, %1494, %1491
  %1513 = load i8*, i8** %1481, align 8
  %scevgep2.4 = getelementptr i8, i8* %1513, i64 2
  %scevgep3.4 = getelementptr i8, i8* %scevgep2.4, i64 %lsr.iv.4
  %1514 = load i8, i8* %scevgep3.4, align 1
  %1515 = sext i8 %1514 to i32
  %1516 = icmp ne i32 %1515, 0
  %lsr.iv.next.4 = add i64 %lsr.iv.4, 1
  br i1 %1516, label %.lr.ph42.4, label %._crit_edge43.loopexit.4

._crit_edge43.loopexit.4:                         ; preds = %1512
  br label %._crit_edge43.4

._crit_edge43.4:                                  ; preds = %._crit_edge43.loopexit.4, %1480, %1473, %1467
  call void @__loop_iteration_test___3()
  %1517 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1461, i32 0, i32 1
  %1518 = load %struct.zzzz*, %struct.zzzz** %1517, align 8
  %1519 = icmp ne %struct.zzzz* %1518, null
  br i1 %1519, label %.lr.ph48.5, label %.loopexit17.loopexit

.lr.ph48.5:                                       ; preds = %._crit_edge43.4
  call void @unroll_loop(i32 3)
  %1520 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1518, i32 0, i32 0
  %1521 = load i8*, i8** %1520, align 8
  %1522 = call i32 @strcmp(i8* %1521, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1523 = icmp eq i32 %1522, 0
  br i1 %1523, label %.loopexit17.loopexit, label %1524

; <label>:1524:                                   ; preds = %.lr.ph48.5
  %1525 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1518, i32 0, i32 0
  %1526 = load i8*, i8** %1525, align 8
  %1527 = load i8, i8* %1526, align 1
  %1528 = sext i8 %1527 to i32
  %1529 = icmp eq i32 %1528, 45
  br i1 %1529, label %1530, label %._crit_edge43.5

; <label>:1530:                                   ; preds = %1524
  %1531 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1518, i32 0, i32 0
  %1532 = load i8*, i8** %1531, align 8
  %1533 = getelementptr inbounds i8, i8* %1532, i64 1
  %1534 = load i8, i8* %1533, align 1
  %1535 = sext i8 %1534 to i32
  %1536 = icmp ne i32 %1535, 45
  br i1 %1536, label %1537, label %._crit_edge43.5

; <label>:1537:                                   ; preds = %1530
  %1538 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1518, i32 0, i32 0
  %1539 = load i8*, i8** %1538, align 8
  %1540 = getelementptr inbounds i8, i8* %1539, i64 1
  %1541 = load i8, i8* %1540, align 1
  %1542 = sext i8 %1541 to i32
  %1543 = icmp ne i32 %1542, 0
  br i1 %1543, label %.lr.ph42.preheader.5, label %._crit_edge43.5

.lr.ph42.preheader.5:                             ; preds = %1537
  %1544 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1518, i32 0, i32 0
  br label %.lr.ph42.5

.lr.ph42.5:                                       ; preds = %1569, %.lr.ph42.preheader.5
  %lsr.iv.5 = phi i64 [ 0, %.lr.ph42.preheader.5 ], [ %lsr.iv.next.5, %1569 ]
  call void @unroll_loop(i32 4)
  %1545 = load i8*, i8** %1544, align 8
  %scevgep.5 = getelementptr i8, i8* %1545, i64 1
  %scevgep1.5 = getelementptr i8, i8* %scevgep.5, i64 %lsr.iv.5
  %1546 = load i8, i8* %scevgep1.5, align 1
  %1547 = sext i8 %1546 to i32
  switch i32 %1547, label %.loopexit11 [
    i32 99, label %1568
    i32 100, label %1567
    i32 122, label %1566
    i32 102, label %1565
    i32 116, label %1564
    i32 107, label %1563
    i32 115, label %1562
    i32 113, label %1561
    i32 49, label %1560
    i32 50, label %1559
    i32 51, label %1558
    i32 52, label %1557
    i32 53, label %1556
    i32 54, label %1555
    i32 55, label %1554
    i32 56, label %1553
    i32 57, label %1552
    i32 86, label %1551
    i32 76, label %1551
    i32 118, label %1548
    i32 104, label %.loopexit12
  ]

; <label>:1548:                                   ; preds = %.lr.ph42.5
  %1549 = load i32, i32* @verbosity, align 4
  %1550 = add nsw i32 %1549, 1
  store i32 %1550, i32* @verbosity, align 4
  br label %1569

; <label>:1551:                                   ; preds = %.lr.ph42.5, %.lr.ph42.5
  call void @license()
  br label %1569

; <label>:1552:                                   ; preds = %.lr.ph42.5
  store i32 9, i32* @blockSize100k, align 4
  br label %1569

; <label>:1553:                                   ; preds = %.lr.ph42.5
  store i32 8, i32* @blockSize100k, align 4
  br label %1569

; <label>:1554:                                   ; preds = %.lr.ph42.5
  store i32 7, i32* @blockSize100k, align 4
  br label %1569

; <label>:1555:                                   ; preds = %.lr.ph42.5
  store i32 6, i32* @blockSize100k, align 4
  br label %1569

; <label>:1556:                                   ; preds = %.lr.ph42.5
  store i32 5, i32* @blockSize100k, align 4
  br label %1569

; <label>:1557:                                   ; preds = %.lr.ph42.5
  store i32 4, i32* @blockSize100k, align 4
  br label %1569

; <label>:1558:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @blockSize100k, align 4
  br label %1569

; <label>:1559:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @blockSize100k, align 4
  br label %1569

; <label>:1560:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @blockSize100k, align 4
  br label %1569

; <label>:1561:                                   ; preds = %.lr.ph42.5
  store i8 0, i8* @noisy, align 1
  br label %1569

; <label>:1562:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @smallMode, align 1
  br label %1569

; <label>:1563:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @keepInputFiles, align 1
  br label %1569

; <label>:1564:                                   ; preds = %.lr.ph42.5
  store i32 3, i32* @opMode, align 4
  br label %1569

; <label>:1565:                                   ; preds = %.lr.ph42.5
  store i8 1, i8* @forceOverwrite, align 1
  br label %1569

; <label>:1566:                                   ; preds = %.lr.ph42.5
  store i32 1, i32* @opMode, align 4
  br label %1569

; <label>:1567:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @opMode, align 4
  br label %1569

; <label>:1568:                                   ; preds = %.lr.ph42.5
  store i32 2, i32* @srcMode, align 4
  br label %1569

; <label>:1569:                                   ; preds = %1568, %1567, %1566, %1565, %1564, %1563, %1562, %1561, %1560, %1559, %1558, %1557, %1556, %1555, %1554, %1553, %1552, %1551, %1548
  %1570 = load i8*, i8** %1538, align 8
  %scevgep2.5 = getelementptr i8, i8* %1570, i64 2
  %scevgep3.5 = getelementptr i8, i8* %scevgep2.5, i64 %lsr.iv.5
  %1571 = load i8, i8* %scevgep3.5, align 1
  %1572 = sext i8 %1571 to i32
  %1573 = icmp ne i32 %1572, 0
  %lsr.iv.next.5 = add i64 %lsr.iv.5, 1
  br i1 %1573, label %.lr.ph42.5, label %._crit_edge43.loopexit.5

._crit_edge43.loopexit.5:                         ; preds = %1569
  br label %._crit_edge43.5

._crit_edge43.5:                                  ; preds = %._crit_edge43.loopexit.5, %1537, %1530, %1524
  call void @__loop_iteration_test___3()
  %1574 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1518, i32 0, i32 1
  %1575 = load %struct.zzzz*, %struct.zzzz** %1574, align 8
  %1576 = icmp ne %struct.zzzz* %1575, null
  br i1 %1576, label %.lr.ph48.6, label %.loopexit17.loopexit

.lr.ph48.6:                                       ; preds = %._crit_edge43.5
  call void @unroll_loop(i32 3)
  %1577 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1575, i32 0, i32 0
  %1578 = load i8*, i8** %1577, align 8
  %1579 = call i32 @strcmp(i8* %1578, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1580 = icmp eq i32 %1579, 0
  br i1 %1580, label %.loopexit17.loopexit, label %1581

; <label>:1581:                                   ; preds = %.lr.ph48.6
  %1582 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1575, i32 0, i32 0
  %1583 = load i8*, i8** %1582, align 8
  %1584 = load i8, i8* %1583, align 1
  %1585 = sext i8 %1584 to i32
  %1586 = icmp eq i32 %1585, 45
  br i1 %1586, label %1587, label %._crit_edge43.6

; <label>:1587:                                   ; preds = %1581
  %1588 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1575, i32 0, i32 0
  %1589 = load i8*, i8** %1588, align 8
  %1590 = getelementptr inbounds i8, i8* %1589, i64 1
  %1591 = load i8, i8* %1590, align 1
  %1592 = sext i8 %1591 to i32
  %1593 = icmp ne i32 %1592, 45
  br i1 %1593, label %1594, label %._crit_edge43.6

; <label>:1594:                                   ; preds = %1587
  %1595 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1575, i32 0, i32 0
  %1596 = load i8*, i8** %1595, align 8
  %1597 = getelementptr inbounds i8, i8* %1596, i64 1
  %1598 = load i8, i8* %1597, align 1
  %1599 = sext i8 %1598 to i32
  %1600 = icmp ne i32 %1599, 0
  br i1 %1600, label %.lr.ph42.preheader.6, label %._crit_edge43.6

.lr.ph42.preheader.6:                             ; preds = %1594
  %1601 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1575, i32 0, i32 0
  br label %.lr.ph42.6

.lr.ph42.6:                                       ; preds = %1626, %.lr.ph42.preheader.6
  %lsr.iv.6 = phi i64 [ 0, %.lr.ph42.preheader.6 ], [ %lsr.iv.next.6, %1626 ]
  call void @unroll_loop(i32 4)
  %1602 = load i8*, i8** %1601, align 8
  %scevgep.6 = getelementptr i8, i8* %1602, i64 1
  %scevgep1.6 = getelementptr i8, i8* %scevgep.6, i64 %lsr.iv.6
  %1603 = load i8, i8* %scevgep1.6, align 1
  %1604 = sext i8 %1603 to i32
  switch i32 %1604, label %.loopexit13 [
    i32 99, label %1625
    i32 100, label %1624
    i32 122, label %1623
    i32 102, label %1622
    i32 116, label %1621
    i32 107, label %1620
    i32 115, label %1619
    i32 113, label %1618
    i32 49, label %1617
    i32 50, label %1616
    i32 51, label %1615
    i32 52, label %1614
    i32 53, label %1613
    i32 54, label %1612
    i32 55, label %1611
    i32 56, label %1610
    i32 57, label %1609
    i32 86, label %1608
    i32 76, label %1608
    i32 118, label %1605
    i32 104, label %.loopexit14
  ]

; <label>:1605:                                   ; preds = %.lr.ph42.6
  %1606 = load i32, i32* @verbosity, align 4
  %1607 = add nsw i32 %1606, 1
  store i32 %1607, i32* @verbosity, align 4
  br label %1626

; <label>:1608:                                   ; preds = %.lr.ph42.6, %.lr.ph42.6
  call void @license()
  br label %1626

; <label>:1609:                                   ; preds = %.lr.ph42.6
  store i32 9, i32* @blockSize100k, align 4
  br label %1626

; <label>:1610:                                   ; preds = %.lr.ph42.6
  store i32 8, i32* @blockSize100k, align 4
  br label %1626

; <label>:1611:                                   ; preds = %.lr.ph42.6
  store i32 7, i32* @blockSize100k, align 4
  br label %1626

; <label>:1612:                                   ; preds = %.lr.ph42.6
  store i32 6, i32* @blockSize100k, align 4
  br label %1626

; <label>:1613:                                   ; preds = %.lr.ph42.6
  store i32 5, i32* @blockSize100k, align 4
  br label %1626

; <label>:1614:                                   ; preds = %.lr.ph42.6
  store i32 4, i32* @blockSize100k, align 4
  br label %1626

; <label>:1615:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @blockSize100k, align 4
  br label %1626

; <label>:1616:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @blockSize100k, align 4
  br label %1626

; <label>:1617:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @blockSize100k, align 4
  br label %1626

; <label>:1618:                                   ; preds = %.lr.ph42.6
  store i8 0, i8* @noisy, align 1
  br label %1626

; <label>:1619:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @smallMode, align 1
  br label %1626

; <label>:1620:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @keepInputFiles, align 1
  br label %1626

; <label>:1621:                                   ; preds = %.lr.ph42.6
  store i32 3, i32* @opMode, align 4
  br label %1626

; <label>:1622:                                   ; preds = %.lr.ph42.6
  store i8 1, i8* @forceOverwrite, align 1
  br label %1626

; <label>:1623:                                   ; preds = %.lr.ph42.6
  store i32 1, i32* @opMode, align 4
  br label %1626

; <label>:1624:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @opMode, align 4
  br label %1626

; <label>:1625:                                   ; preds = %.lr.ph42.6
  store i32 2, i32* @srcMode, align 4
  br label %1626

; <label>:1626:                                   ; preds = %1625, %1624, %1623, %1622, %1621, %1620, %1619, %1618, %1617, %1616, %1615, %1614, %1613, %1612, %1611, %1610, %1609, %1608, %1605
  %1627 = load i8*, i8** %1595, align 8
  %scevgep2.6 = getelementptr i8, i8* %1627, i64 2
  %scevgep3.6 = getelementptr i8, i8* %scevgep2.6, i64 %lsr.iv.6
  %1628 = load i8, i8* %scevgep3.6, align 1
  %1629 = sext i8 %1628 to i32
  %1630 = icmp ne i32 %1629, 0
  %lsr.iv.next.6 = add i64 %lsr.iv.6, 1
  br i1 %1630, label %.lr.ph42.6, label %._crit_edge43.loopexit.6

._crit_edge43.loopexit.6:                         ; preds = %1626
  br label %._crit_edge43.6

._crit_edge43.6:                                  ; preds = %._crit_edge43.loopexit.6, %1594, %1587, %1581
  call void @__loop_iteration_test___3()
  %1631 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1575, i32 0, i32 1
  %1632 = load %struct.zzzz*, %struct.zzzz** %1631, align 8
  %1633 = icmp ne %struct.zzzz* %1632, null
  br i1 %1633, label %.lr.ph48.7, label %.loopexit17.loopexit

.lr.ph48.7:                                       ; preds = %._crit_edge43.6
  call void @unroll_loop(i32 3)
  %1634 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1632, i32 0, i32 0
  %1635 = load i8*, i8** %1634, align 8
  %1636 = call i32 @strcmp(i8* %1635, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1637 = icmp eq i32 %1636, 0
  br i1 %1637, label %.loopexit17.loopexit, label %1638

; <label>:1638:                                   ; preds = %.lr.ph48.7
  %1639 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1632, i32 0, i32 0
  %1640 = load i8*, i8** %1639, align 8
  %1641 = load i8, i8* %1640, align 1
  %1642 = sext i8 %1641 to i32
  %1643 = icmp eq i32 %1642, 45
  br i1 %1643, label %1644, label %._crit_edge43.7

; <label>:1644:                                   ; preds = %1638
  %1645 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1632, i32 0, i32 0
  %1646 = load i8*, i8** %1645, align 8
  %1647 = getelementptr inbounds i8, i8* %1646, i64 1
  %1648 = load i8, i8* %1647, align 1
  %1649 = sext i8 %1648 to i32
  %1650 = icmp ne i32 %1649, 45
  br i1 %1650, label %1651, label %._crit_edge43.7

; <label>:1651:                                   ; preds = %1644
  %1652 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1632, i32 0, i32 0
  %1653 = load i8*, i8** %1652, align 8
  %1654 = getelementptr inbounds i8, i8* %1653, i64 1
  %1655 = load i8, i8* %1654, align 1
  %1656 = sext i8 %1655 to i32
  %1657 = icmp ne i32 %1656, 0
  br i1 %1657, label %.lr.ph42.preheader.7, label %._crit_edge43.7

.lr.ph42.preheader.7:                             ; preds = %1651
  %1658 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1632, i32 0, i32 0
  br label %.lr.ph42.7

.lr.ph42.7:                                       ; preds = %1683, %.lr.ph42.preheader.7
  %lsr.iv.7 = phi i64 [ 0, %.lr.ph42.preheader.7 ], [ %lsr.iv.next.7, %1683 ]
  call void @unroll_loop(i32 4)
  %1659 = load i8*, i8** %1658, align 8
  %scevgep.7 = getelementptr i8, i8* %1659, i64 1
  %scevgep1.7 = getelementptr i8, i8* %scevgep.7, i64 %lsr.iv.7
  %1660 = load i8, i8* %scevgep1.7, align 1
  %1661 = sext i8 %1660 to i32
  switch i32 %1661, label %.loopexit15 [
    i32 99, label %1682
    i32 100, label %1681
    i32 122, label %1680
    i32 102, label %1679
    i32 116, label %1678
    i32 107, label %1677
    i32 115, label %1676
    i32 113, label %1675
    i32 49, label %1674
    i32 50, label %1673
    i32 51, label %1672
    i32 52, label %1671
    i32 53, label %1670
    i32 54, label %1669
    i32 55, label %1668
    i32 56, label %1667
    i32 57, label %1666
    i32 86, label %1665
    i32 76, label %1665
    i32 118, label %1662
    i32 104, label %.loopexit16
  ]

; <label>:1662:                                   ; preds = %.lr.ph42.7
  %1663 = load i32, i32* @verbosity, align 4
  %1664 = add nsw i32 %1663, 1
  store i32 %1664, i32* @verbosity, align 4
  br label %1683

; <label>:1665:                                   ; preds = %.lr.ph42.7, %.lr.ph42.7
  call void @license()
  br label %1683

; <label>:1666:                                   ; preds = %.lr.ph42.7
  store i32 9, i32* @blockSize100k, align 4
  br label %1683

; <label>:1667:                                   ; preds = %.lr.ph42.7
  store i32 8, i32* @blockSize100k, align 4
  br label %1683

; <label>:1668:                                   ; preds = %.lr.ph42.7
  store i32 7, i32* @blockSize100k, align 4
  br label %1683

; <label>:1669:                                   ; preds = %.lr.ph42.7
  store i32 6, i32* @blockSize100k, align 4
  br label %1683

; <label>:1670:                                   ; preds = %.lr.ph42.7
  store i32 5, i32* @blockSize100k, align 4
  br label %1683

; <label>:1671:                                   ; preds = %.lr.ph42.7
  store i32 4, i32* @blockSize100k, align 4
  br label %1683

; <label>:1672:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @blockSize100k, align 4
  br label %1683

; <label>:1673:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @blockSize100k, align 4
  br label %1683

; <label>:1674:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @blockSize100k, align 4
  br label %1683

; <label>:1675:                                   ; preds = %.lr.ph42.7
  store i8 0, i8* @noisy, align 1
  br label %1683

; <label>:1676:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @smallMode, align 1
  br label %1683

; <label>:1677:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @keepInputFiles, align 1
  br label %1683

; <label>:1678:                                   ; preds = %.lr.ph42.7
  store i32 3, i32* @opMode, align 4
  br label %1683

; <label>:1679:                                   ; preds = %.lr.ph42.7
  store i8 1, i8* @forceOverwrite, align 1
  br label %1683

; <label>:1680:                                   ; preds = %.lr.ph42.7
  store i32 1, i32* @opMode, align 4
  br label %1683

; <label>:1681:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @opMode, align 4
  br label %1683

; <label>:1682:                                   ; preds = %.lr.ph42.7
  store i32 2, i32* @srcMode, align 4
  br label %1683

; <label>:1683:                                   ; preds = %1682, %1681, %1680, %1679, %1678, %1677, %1676, %1675, %1674, %1673, %1672, %1671, %1670, %1669, %1668, %1667, %1666, %1665, %1662
  %1684 = load i8*, i8** %1652, align 8
  %scevgep2.7 = getelementptr i8, i8* %1684, i64 2
  %scevgep3.7 = getelementptr i8, i8* %scevgep2.7, i64 %lsr.iv.7
  %1685 = load i8, i8* %scevgep3.7, align 1
  %1686 = sext i8 %1685 to i32
  %1687 = icmp ne i32 %1686, 0
  %lsr.iv.next.7 = add i64 %lsr.iv.7, 1
  br i1 %1687, label %.lr.ph42.7, label %._crit_edge43.loopexit.7

._crit_edge43.loopexit.7:                         ; preds = %1683
  br label %._crit_edge43.7

._crit_edge43.7:                                  ; preds = %._crit_edge43.loopexit.7, %1651, %1644, %1638
  call void @__loop_iteration_test___3()
  %1688 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1632, i32 0, i32 1
  %1689 = load %struct.zzzz*, %struct.zzzz** %1688, align 8
  %1690 = icmp ne %struct.zzzz* %1689, null
  br i1 %1690, label %.lr.ph48.8, label %.loopexit17.loopexit

.lr.ph48.8:                                       ; preds = %._crit_edge43.7
  call void @unroll_loop(i32 3)
  %1691 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1689, i32 0, i32 0
  %1692 = load i8*, i8** %1691, align 8
  %1693 = call i32 @strcmp(i8* %1692, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1694 = icmp eq i32 %1693, 0
  br i1 %1694, label %.loopexit17.loopexit, label %1695

; <label>:1695:                                   ; preds = %.lr.ph48.8
  %1696 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1689, i32 0, i32 0
  %1697 = load i8*, i8** %1696, align 8
  %1698 = load i8, i8* %1697, align 1
  %1699 = sext i8 %1698 to i32
  %1700 = icmp eq i32 %1699, 45
  br i1 %1700, label %1701, label %._crit_edge43.8

; <label>:1701:                                   ; preds = %1695
  %1702 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1689, i32 0, i32 0
  %1703 = load i8*, i8** %1702, align 8
  %1704 = getelementptr inbounds i8, i8* %1703, i64 1
  %1705 = load i8, i8* %1704, align 1
  %1706 = sext i8 %1705 to i32
  %1707 = icmp ne i32 %1706, 45
  br i1 %1707, label %1708, label %._crit_edge43.8

; <label>:1708:                                   ; preds = %1701
  %1709 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1689, i32 0, i32 0
  %1710 = load i8*, i8** %1709, align 8
  %1711 = getelementptr inbounds i8, i8* %1710, i64 1
  %1712 = load i8, i8* %1711, align 1
  %1713 = sext i8 %1712 to i32
  %1714 = icmp ne i32 %1713, 0
  br i1 %1714, label %.lr.ph42.preheader.8, label %._crit_edge43.8

.lr.ph42.preheader.8:                             ; preds = %1708
  %1715 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1689, i32 0, i32 0
  br label %.lr.ph42.8

.lr.ph42.8:                                       ; preds = %1740, %.lr.ph42.preheader.8
  %lsr.iv.8 = phi i64 [ 0, %.lr.ph42.preheader.8 ], [ %lsr.iv.next.8, %1740 ]
  call void @unroll_loop(i32 4)
  %1716 = load i8*, i8** %1715, align 8
  %scevgep.8 = getelementptr i8, i8* %1716, i64 1
  %scevgep1.8 = getelementptr i8, i8* %scevgep.8, i64 %lsr.iv.8
  %1717 = load i8, i8* %scevgep1.8, align 1
  %1718 = sext i8 %1717 to i32
  switch i32 %1718, label %.loopexit18 [
    i32 99, label %1739
    i32 100, label %1738
    i32 122, label %1737
    i32 102, label %1736
    i32 116, label %1735
    i32 107, label %1734
    i32 115, label %1733
    i32 113, label %1732
    i32 49, label %1731
    i32 50, label %1730
    i32 51, label %1729
    i32 52, label %1728
    i32 53, label %1727
    i32 54, label %1726
    i32 55, label %1725
    i32 56, label %1724
    i32 57, label %1723
    i32 86, label %1722
    i32 76, label %1722
    i32 118, label %1719
    i32 104, label %.loopexit19
  ]

; <label>:1719:                                   ; preds = %.lr.ph42.8
  %1720 = load i32, i32* @verbosity, align 4
  %1721 = add nsw i32 %1720, 1
  store i32 %1721, i32* @verbosity, align 4
  br label %1740

; <label>:1722:                                   ; preds = %.lr.ph42.8, %.lr.ph42.8
  call void @license()
  br label %1740

; <label>:1723:                                   ; preds = %.lr.ph42.8
  store i32 9, i32* @blockSize100k, align 4
  br label %1740

; <label>:1724:                                   ; preds = %.lr.ph42.8
  store i32 8, i32* @blockSize100k, align 4
  br label %1740

; <label>:1725:                                   ; preds = %.lr.ph42.8
  store i32 7, i32* @blockSize100k, align 4
  br label %1740

; <label>:1726:                                   ; preds = %.lr.ph42.8
  store i32 6, i32* @blockSize100k, align 4
  br label %1740

; <label>:1727:                                   ; preds = %.lr.ph42.8
  store i32 5, i32* @blockSize100k, align 4
  br label %1740

; <label>:1728:                                   ; preds = %.lr.ph42.8
  store i32 4, i32* @blockSize100k, align 4
  br label %1740

; <label>:1729:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @blockSize100k, align 4
  br label %1740

; <label>:1730:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @blockSize100k, align 4
  br label %1740

; <label>:1731:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @blockSize100k, align 4
  br label %1740

; <label>:1732:                                   ; preds = %.lr.ph42.8
  store i8 0, i8* @noisy, align 1
  br label %1740

; <label>:1733:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @smallMode, align 1
  br label %1740

; <label>:1734:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @keepInputFiles, align 1
  br label %1740

; <label>:1735:                                   ; preds = %.lr.ph42.8
  store i32 3, i32* @opMode, align 4
  br label %1740

; <label>:1736:                                   ; preds = %.lr.ph42.8
  store i8 1, i8* @forceOverwrite, align 1
  br label %1740

; <label>:1737:                                   ; preds = %.lr.ph42.8
  store i32 1, i32* @opMode, align 4
  br label %1740

; <label>:1738:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @opMode, align 4
  br label %1740

; <label>:1739:                                   ; preds = %.lr.ph42.8
  store i32 2, i32* @srcMode, align 4
  br label %1740

; <label>:1740:                                   ; preds = %1739, %1738, %1737, %1736, %1735, %1734, %1733, %1732, %1731, %1730, %1729, %1728, %1727, %1726, %1725, %1724, %1723, %1722, %1719
  %1741 = load i8*, i8** %1709, align 8
  %scevgep2.8 = getelementptr i8, i8* %1741, i64 2
  %scevgep3.8 = getelementptr i8, i8* %scevgep2.8, i64 %lsr.iv.8
  %1742 = load i8, i8* %scevgep3.8, align 1
  %1743 = sext i8 %1742 to i32
  %1744 = icmp ne i32 %1743, 0
  %lsr.iv.next.8 = add i64 %lsr.iv.8, 1
  br i1 %1744, label %.lr.ph42.8, label %._crit_edge43.loopexit.8

._crit_edge43.loopexit.8:                         ; preds = %1740
  br label %._crit_edge43.8

._crit_edge43.8:                                  ; preds = %._crit_edge43.loopexit.8, %1708, %1701, %1695
  call void @__loop_iteration_test___3()
  %1745 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1689, i32 0, i32 1
  %1746 = load %struct.zzzz*, %struct.zzzz** %1745, align 8
  %1747 = icmp ne %struct.zzzz* %1746, null
  br i1 %1747, label %.lr.ph48.9, label %.loopexit17.loopexit

.lr.ph48.9:                                       ; preds = %._crit_edge43.8
  call void @unroll_loop(i32 3)
  %1748 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1746, i32 0, i32 0
  %1749 = load i8*, i8** %1748, align 8
  %1750 = call i32 @strcmp(i8* %1749, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1751 = icmp eq i32 %1750, 0
  br i1 %1751, label %.loopexit17.loopexit, label %1752

; <label>:1752:                                   ; preds = %.lr.ph48.9
  %1753 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1746, i32 0, i32 0
  %1754 = load i8*, i8** %1753, align 8
  %1755 = load i8, i8* %1754, align 1
  %1756 = sext i8 %1755 to i32
  %1757 = icmp eq i32 %1756, 45
  br i1 %1757, label %1758, label %._crit_edge43.9

; <label>:1758:                                   ; preds = %1752
  %1759 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1746, i32 0, i32 0
  %1760 = load i8*, i8** %1759, align 8
  %1761 = getelementptr inbounds i8, i8* %1760, i64 1
  %1762 = load i8, i8* %1761, align 1
  %1763 = sext i8 %1762 to i32
  %1764 = icmp ne i32 %1763, 45
  br i1 %1764, label %1765, label %._crit_edge43.9

; <label>:1765:                                   ; preds = %1758
  %1766 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1746, i32 0, i32 0
  %1767 = load i8*, i8** %1766, align 8
  %1768 = getelementptr inbounds i8, i8* %1767, i64 1
  %1769 = load i8, i8* %1768, align 1
  %1770 = sext i8 %1769 to i32
  %1771 = icmp ne i32 %1770, 0
  br i1 %1771, label %.lr.ph42.preheader.9, label %._crit_edge43.9

.lr.ph42.preheader.9:                             ; preds = %1765
  %1772 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1746, i32 0, i32 0
  br label %.lr.ph42.9

.lr.ph42.9:                                       ; preds = %1797, %.lr.ph42.preheader.9
  %lsr.iv.9 = phi i64 [ 0, %.lr.ph42.preheader.9 ], [ %lsr.iv.next.9, %1797 ]
  call void @unroll_loop(i32 4)
  %1773 = load i8*, i8** %1772, align 8
  %scevgep.9 = getelementptr i8, i8* %1773, i64 1
  %scevgep1.9 = getelementptr i8, i8* %scevgep.9, i64 %lsr.iv.9
  %1774 = load i8, i8* %scevgep1.9, align 1
  %1775 = sext i8 %1774 to i32
  switch i32 %1775, label %.loopexit20 [
    i32 99, label %1796
    i32 100, label %1795
    i32 122, label %1794
    i32 102, label %1793
    i32 116, label %1792
    i32 107, label %1791
    i32 115, label %1790
    i32 113, label %1789
    i32 49, label %1788
    i32 50, label %1787
    i32 51, label %1786
    i32 52, label %1785
    i32 53, label %1784
    i32 54, label %1783
    i32 55, label %1782
    i32 56, label %1781
    i32 57, label %1780
    i32 86, label %1779
    i32 76, label %1779
    i32 118, label %1776
    i32 104, label %.loopexit21
  ]

; <label>:1776:                                   ; preds = %.lr.ph42.9
  %1777 = load i32, i32* @verbosity, align 4
  %1778 = add nsw i32 %1777, 1
  store i32 %1778, i32* @verbosity, align 4
  br label %1797

; <label>:1779:                                   ; preds = %.lr.ph42.9, %.lr.ph42.9
  call void @license()
  br label %1797

; <label>:1780:                                   ; preds = %.lr.ph42.9
  store i32 9, i32* @blockSize100k, align 4
  br label %1797

; <label>:1781:                                   ; preds = %.lr.ph42.9
  store i32 8, i32* @blockSize100k, align 4
  br label %1797

; <label>:1782:                                   ; preds = %.lr.ph42.9
  store i32 7, i32* @blockSize100k, align 4
  br label %1797

; <label>:1783:                                   ; preds = %.lr.ph42.9
  store i32 6, i32* @blockSize100k, align 4
  br label %1797

; <label>:1784:                                   ; preds = %.lr.ph42.9
  store i32 5, i32* @blockSize100k, align 4
  br label %1797

; <label>:1785:                                   ; preds = %.lr.ph42.9
  store i32 4, i32* @blockSize100k, align 4
  br label %1797

; <label>:1786:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @blockSize100k, align 4
  br label %1797

; <label>:1787:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @blockSize100k, align 4
  br label %1797

; <label>:1788:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @blockSize100k, align 4
  br label %1797

; <label>:1789:                                   ; preds = %.lr.ph42.9
  store i8 0, i8* @noisy, align 1
  br label %1797

; <label>:1790:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @smallMode, align 1
  br label %1797

; <label>:1791:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @keepInputFiles, align 1
  br label %1797

; <label>:1792:                                   ; preds = %.lr.ph42.9
  store i32 3, i32* @opMode, align 4
  br label %1797

; <label>:1793:                                   ; preds = %.lr.ph42.9
  store i8 1, i8* @forceOverwrite, align 1
  br label %1797

; <label>:1794:                                   ; preds = %.lr.ph42.9
  store i32 1, i32* @opMode, align 4
  br label %1797

; <label>:1795:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @opMode, align 4
  br label %1797

; <label>:1796:                                   ; preds = %.lr.ph42.9
  store i32 2, i32* @srcMode, align 4
  br label %1797

; <label>:1797:                                   ; preds = %1796, %1795, %1794, %1793, %1792, %1791, %1790, %1789, %1788, %1787, %1786, %1785, %1784, %1783, %1782, %1781, %1780, %1779, %1776
  %1798 = load i8*, i8** %1766, align 8
  %scevgep2.9 = getelementptr i8, i8* %1798, i64 2
  %scevgep3.9 = getelementptr i8, i8* %scevgep2.9, i64 %lsr.iv.9
  %1799 = load i8, i8* %scevgep3.9, align 1
  %1800 = sext i8 %1799 to i32
  %1801 = icmp ne i32 %1800, 0
  %lsr.iv.next.9 = add i64 %lsr.iv.9, 1
  br i1 %1801, label %.lr.ph42.9, label %._crit_edge43.loopexit.9

._crit_edge43.loopexit.9:                         ; preds = %1797
  br label %._crit_edge43.9

._crit_edge43.9:                                  ; preds = %._crit_edge43.loopexit.9, %1765, %1758, %1752
  call void @__loop_iteration_test___3()
  %1802 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1746, i32 0, i32 1
  %1803 = load %struct.zzzz*, %struct.zzzz** %1802, align 8
  %1804 = icmp ne %struct.zzzz* %1803, null
  br i1 %1804, label %.lr.ph48.10, label %.loopexit17.loopexit

.lr.ph48.10:                                      ; preds = %._crit_edge43.9
  call void @unroll_loop(i32 3)
  %1805 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1803, i32 0, i32 0
  %1806 = load i8*, i8** %1805, align 8
  %1807 = call i32 @strcmp(i8* %1806, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1808 = icmp eq i32 %1807, 0
  br i1 %1808, label %.loopexit17.loopexit, label %1809

; <label>:1809:                                   ; preds = %.lr.ph48.10
  %1810 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1803, i32 0, i32 0
  %1811 = load i8*, i8** %1810, align 8
  %1812 = load i8, i8* %1811, align 1
  %1813 = sext i8 %1812 to i32
  %1814 = icmp eq i32 %1813, 45
  br i1 %1814, label %1815, label %._crit_edge43.10

; <label>:1815:                                   ; preds = %1809
  %1816 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1803, i32 0, i32 0
  %1817 = load i8*, i8** %1816, align 8
  %1818 = getelementptr inbounds i8, i8* %1817, i64 1
  %1819 = load i8, i8* %1818, align 1
  %1820 = sext i8 %1819 to i32
  %1821 = icmp ne i32 %1820, 45
  br i1 %1821, label %1822, label %._crit_edge43.10

; <label>:1822:                                   ; preds = %1815
  %1823 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1803, i32 0, i32 0
  %1824 = load i8*, i8** %1823, align 8
  %1825 = getelementptr inbounds i8, i8* %1824, i64 1
  %1826 = load i8, i8* %1825, align 1
  %1827 = sext i8 %1826 to i32
  %1828 = icmp ne i32 %1827, 0
  br i1 %1828, label %.lr.ph42.preheader.10, label %._crit_edge43.10

.lr.ph42.preheader.10:                            ; preds = %1822
  %1829 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1803, i32 0, i32 0
  br label %.lr.ph42.10

.lr.ph42.10:                                      ; preds = %1854, %.lr.ph42.preheader.10
  %lsr.iv.10 = phi i64 [ 0, %.lr.ph42.preheader.10 ], [ %lsr.iv.next.10, %1854 ]
  call void @unroll_loop(i32 4)
  %1830 = load i8*, i8** %1829, align 8
  %scevgep.10 = getelementptr i8, i8* %1830, i64 1
  %scevgep1.10 = getelementptr i8, i8* %scevgep.10, i64 %lsr.iv.10
  %1831 = load i8, i8* %scevgep1.10, align 1
  %1832 = sext i8 %1831 to i32
  switch i32 %1832, label %.loopexit22 [
    i32 99, label %1853
    i32 100, label %1852
    i32 122, label %1851
    i32 102, label %1850
    i32 116, label %1849
    i32 107, label %1848
    i32 115, label %1847
    i32 113, label %1846
    i32 49, label %1845
    i32 50, label %1844
    i32 51, label %1843
    i32 52, label %1842
    i32 53, label %1841
    i32 54, label %1840
    i32 55, label %1839
    i32 56, label %1838
    i32 57, label %1837
    i32 86, label %1836
    i32 76, label %1836
    i32 118, label %1833
    i32 104, label %.loopexit23
  ]

; <label>:1833:                                   ; preds = %.lr.ph42.10
  %1834 = load i32, i32* @verbosity, align 4
  %1835 = add nsw i32 %1834, 1
  store i32 %1835, i32* @verbosity, align 4
  br label %1854

; <label>:1836:                                   ; preds = %.lr.ph42.10, %.lr.ph42.10
  call void @license()
  br label %1854

; <label>:1837:                                   ; preds = %.lr.ph42.10
  store i32 9, i32* @blockSize100k, align 4
  br label %1854

; <label>:1838:                                   ; preds = %.lr.ph42.10
  store i32 8, i32* @blockSize100k, align 4
  br label %1854

; <label>:1839:                                   ; preds = %.lr.ph42.10
  store i32 7, i32* @blockSize100k, align 4
  br label %1854

; <label>:1840:                                   ; preds = %.lr.ph42.10
  store i32 6, i32* @blockSize100k, align 4
  br label %1854

; <label>:1841:                                   ; preds = %.lr.ph42.10
  store i32 5, i32* @blockSize100k, align 4
  br label %1854

; <label>:1842:                                   ; preds = %.lr.ph42.10
  store i32 4, i32* @blockSize100k, align 4
  br label %1854

; <label>:1843:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @blockSize100k, align 4
  br label %1854

; <label>:1844:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @blockSize100k, align 4
  br label %1854

; <label>:1845:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @blockSize100k, align 4
  br label %1854

; <label>:1846:                                   ; preds = %.lr.ph42.10
  store i8 0, i8* @noisy, align 1
  br label %1854

; <label>:1847:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @smallMode, align 1
  br label %1854

; <label>:1848:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @keepInputFiles, align 1
  br label %1854

; <label>:1849:                                   ; preds = %.lr.ph42.10
  store i32 3, i32* @opMode, align 4
  br label %1854

; <label>:1850:                                   ; preds = %.lr.ph42.10
  store i8 1, i8* @forceOverwrite, align 1
  br label %1854

; <label>:1851:                                   ; preds = %.lr.ph42.10
  store i32 1, i32* @opMode, align 4
  br label %1854

; <label>:1852:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @opMode, align 4
  br label %1854

; <label>:1853:                                   ; preds = %.lr.ph42.10
  store i32 2, i32* @srcMode, align 4
  br label %1854

; <label>:1854:                                   ; preds = %1853, %1852, %1851, %1850, %1849, %1848, %1847, %1846, %1845, %1844, %1843, %1842, %1841, %1840, %1839, %1838, %1837, %1836, %1833
  %1855 = load i8*, i8** %1823, align 8
  %scevgep2.10 = getelementptr i8, i8* %1855, i64 2
  %scevgep3.10 = getelementptr i8, i8* %scevgep2.10, i64 %lsr.iv.10
  %1856 = load i8, i8* %scevgep3.10, align 1
  %1857 = sext i8 %1856 to i32
  %1858 = icmp ne i32 %1857, 0
  %lsr.iv.next.10 = add i64 %lsr.iv.10, 1
  br i1 %1858, label %.lr.ph42.10, label %._crit_edge43.loopexit.10

._crit_edge43.loopexit.10:                        ; preds = %1854
  br label %._crit_edge43.10

._crit_edge43.10:                                 ; preds = %._crit_edge43.loopexit.10, %1822, %1815, %1809
  call void @__loop_iteration_test___3()
  %1859 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1803, i32 0, i32 1
  %1860 = load %struct.zzzz*, %struct.zzzz** %1859, align 8
  %1861 = icmp ne %struct.zzzz* %1860, null
  br i1 %1861, label %.lr.ph48.11, label %.loopexit17.loopexit

.lr.ph48.11:                                      ; preds = %._crit_edge43.10
  call void @unroll_loop(i32 3)
  %1862 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1860, i32 0, i32 0
  %1863 = load i8*, i8** %1862, align 8
  %1864 = call i32 @strcmp(i8* %1863, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1865 = icmp eq i32 %1864, 0
  br i1 %1865, label %.loopexit17.loopexit, label %1866

; <label>:1866:                                   ; preds = %.lr.ph48.11
  %1867 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1860, i32 0, i32 0
  %1868 = load i8*, i8** %1867, align 8
  %1869 = load i8, i8* %1868, align 1
  %1870 = sext i8 %1869 to i32
  %1871 = icmp eq i32 %1870, 45
  br i1 %1871, label %1872, label %._crit_edge43.11

; <label>:1872:                                   ; preds = %1866
  %1873 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1860, i32 0, i32 0
  %1874 = load i8*, i8** %1873, align 8
  %1875 = getelementptr inbounds i8, i8* %1874, i64 1
  %1876 = load i8, i8* %1875, align 1
  %1877 = sext i8 %1876 to i32
  %1878 = icmp ne i32 %1877, 45
  br i1 %1878, label %1879, label %._crit_edge43.11

; <label>:1879:                                   ; preds = %1872
  %1880 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1860, i32 0, i32 0
  %1881 = load i8*, i8** %1880, align 8
  %1882 = getelementptr inbounds i8, i8* %1881, i64 1
  %1883 = load i8, i8* %1882, align 1
  %1884 = sext i8 %1883 to i32
  %1885 = icmp ne i32 %1884, 0
  br i1 %1885, label %.lr.ph42.preheader.11, label %._crit_edge43.11

.lr.ph42.preheader.11:                            ; preds = %1879
  %1886 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1860, i32 0, i32 0
  br label %.lr.ph42.11

.lr.ph42.11:                                      ; preds = %1911, %.lr.ph42.preheader.11
  %lsr.iv.11 = phi i64 [ 0, %.lr.ph42.preheader.11 ], [ %lsr.iv.next.11, %1911 ]
  call void @unroll_loop(i32 4)
  %1887 = load i8*, i8** %1886, align 8
  %scevgep.11 = getelementptr i8, i8* %1887, i64 1
  %scevgep1.11 = getelementptr i8, i8* %scevgep.11, i64 %lsr.iv.11
  %1888 = load i8, i8* %scevgep1.11, align 1
  %1889 = sext i8 %1888 to i32
  switch i32 %1889, label %.loopexit24 [
    i32 99, label %1910
    i32 100, label %1909
    i32 122, label %1908
    i32 102, label %1907
    i32 116, label %1906
    i32 107, label %1905
    i32 115, label %1904
    i32 113, label %1903
    i32 49, label %1902
    i32 50, label %1901
    i32 51, label %1900
    i32 52, label %1899
    i32 53, label %1898
    i32 54, label %1897
    i32 55, label %1896
    i32 56, label %1895
    i32 57, label %1894
    i32 86, label %1893
    i32 76, label %1893
    i32 118, label %1890
    i32 104, label %.loopexit25
  ]

; <label>:1890:                                   ; preds = %.lr.ph42.11
  %1891 = load i32, i32* @verbosity, align 4
  %1892 = add nsw i32 %1891, 1
  store i32 %1892, i32* @verbosity, align 4
  br label %1911

; <label>:1893:                                   ; preds = %.lr.ph42.11, %.lr.ph42.11
  call void @license()
  br label %1911

; <label>:1894:                                   ; preds = %.lr.ph42.11
  store i32 9, i32* @blockSize100k, align 4
  br label %1911

; <label>:1895:                                   ; preds = %.lr.ph42.11
  store i32 8, i32* @blockSize100k, align 4
  br label %1911

; <label>:1896:                                   ; preds = %.lr.ph42.11
  store i32 7, i32* @blockSize100k, align 4
  br label %1911

; <label>:1897:                                   ; preds = %.lr.ph42.11
  store i32 6, i32* @blockSize100k, align 4
  br label %1911

; <label>:1898:                                   ; preds = %.lr.ph42.11
  store i32 5, i32* @blockSize100k, align 4
  br label %1911

; <label>:1899:                                   ; preds = %.lr.ph42.11
  store i32 4, i32* @blockSize100k, align 4
  br label %1911

; <label>:1900:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @blockSize100k, align 4
  br label %1911

; <label>:1901:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @blockSize100k, align 4
  br label %1911

; <label>:1902:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @blockSize100k, align 4
  br label %1911

; <label>:1903:                                   ; preds = %.lr.ph42.11
  store i8 0, i8* @noisy, align 1
  br label %1911

; <label>:1904:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @smallMode, align 1
  br label %1911

; <label>:1905:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @keepInputFiles, align 1
  br label %1911

; <label>:1906:                                   ; preds = %.lr.ph42.11
  store i32 3, i32* @opMode, align 4
  br label %1911

; <label>:1907:                                   ; preds = %.lr.ph42.11
  store i8 1, i8* @forceOverwrite, align 1
  br label %1911

; <label>:1908:                                   ; preds = %.lr.ph42.11
  store i32 1, i32* @opMode, align 4
  br label %1911

; <label>:1909:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @opMode, align 4
  br label %1911

; <label>:1910:                                   ; preds = %.lr.ph42.11
  store i32 2, i32* @srcMode, align 4
  br label %1911

; <label>:1911:                                   ; preds = %1910, %1909, %1908, %1907, %1906, %1905, %1904, %1903, %1902, %1901, %1900, %1899, %1898, %1897, %1896, %1895, %1894, %1893, %1890
  %1912 = load i8*, i8** %1880, align 8
  %scevgep2.11 = getelementptr i8, i8* %1912, i64 2
  %scevgep3.11 = getelementptr i8, i8* %scevgep2.11, i64 %lsr.iv.11
  %1913 = load i8, i8* %scevgep3.11, align 1
  %1914 = sext i8 %1913 to i32
  %1915 = icmp ne i32 %1914, 0
  %lsr.iv.next.11 = add i64 %lsr.iv.11, 1
  br i1 %1915, label %.lr.ph42.11, label %._crit_edge43.loopexit.11

._crit_edge43.loopexit.11:                        ; preds = %1911
  br label %._crit_edge43.11

._crit_edge43.11:                                 ; preds = %._crit_edge43.loopexit.11, %1879, %1872, %1866
  call void @__loop_iteration_test___3()
  %1916 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1860, i32 0, i32 1
  %1917 = load %struct.zzzz*, %struct.zzzz** %1916, align 8
  %1918 = icmp ne %struct.zzzz* %1917, null
  br i1 %1918, label %.lr.ph48.12, label %.loopexit17.loopexit

.lr.ph48.12:                                      ; preds = %._crit_edge43.11
  call void @unroll_loop(i32 3)
  %1919 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1917, i32 0, i32 0
  %1920 = load i8*, i8** %1919, align 8
  %1921 = call i32 @strcmp(i8* %1920, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1922 = icmp eq i32 %1921, 0
  br i1 %1922, label %.loopexit17.loopexit, label %1923

; <label>:1923:                                   ; preds = %.lr.ph48.12
  %1924 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1917, i32 0, i32 0
  %1925 = load i8*, i8** %1924, align 8
  %1926 = load i8, i8* %1925, align 1
  %1927 = sext i8 %1926 to i32
  %1928 = icmp eq i32 %1927, 45
  br i1 %1928, label %1929, label %._crit_edge43.12

; <label>:1929:                                   ; preds = %1923
  %1930 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1917, i32 0, i32 0
  %1931 = load i8*, i8** %1930, align 8
  %1932 = getelementptr inbounds i8, i8* %1931, i64 1
  %1933 = load i8, i8* %1932, align 1
  %1934 = sext i8 %1933 to i32
  %1935 = icmp ne i32 %1934, 45
  br i1 %1935, label %1936, label %._crit_edge43.12

; <label>:1936:                                   ; preds = %1929
  %1937 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1917, i32 0, i32 0
  %1938 = load i8*, i8** %1937, align 8
  %1939 = getelementptr inbounds i8, i8* %1938, i64 1
  %1940 = load i8, i8* %1939, align 1
  %1941 = sext i8 %1940 to i32
  %1942 = icmp ne i32 %1941, 0
  br i1 %1942, label %.lr.ph42.preheader.12, label %._crit_edge43.12

.lr.ph42.preheader.12:                            ; preds = %1936
  %1943 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1917, i32 0, i32 0
  br label %.lr.ph42.12

.lr.ph42.12:                                      ; preds = %1968, %.lr.ph42.preheader.12
  %lsr.iv.12 = phi i64 [ 0, %.lr.ph42.preheader.12 ], [ %lsr.iv.next.12, %1968 ]
  call void @unroll_loop(i32 4)
  %1944 = load i8*, i8** %1943, align 8
  %scevgep.12 = getelementptr i8, i8* %1944, i64 1
  %scevgep1.12 = getelementptr i8, i8* %scevgep.12, i64 %lsr.iv.12
  %1945 = load i8, i8* %scevgep1.12, align 1
  %1946 = sext i8 %1945 to i32
  switch i32 %1946, label %.loopexit26 [
    i32 99, label %1967
    i32 100, label %1966
    i32 122, label %1965
    i32 102, label %1964
    i32 116, label %1963
    i32 107, label %1962
    i32 115, label %1961
    i32 113, label %1960
    i32 49, label %1959
    i32 50, label %1958
    i32 51, label %1957
    i32 52, label %1956
    i32 53, label %1955
    i32 54, label %1954
    i32 55, label %1953
    i32 56, label %1952
    i32 57, label %1951
    i32 86, label %1950
    i32 76, label %1950
    i32 118, label %1947
    i32 104, label %.loopexit27
  ]

; <label>:1947:                                   ; preds = %.lr.ph42.12
  %1948 = load i32, i32* @verbosity, align 4
  %1949 = add nsw i32 %1948, 1
  store i32 %1949, i32* @verbosity, align 4
  br label %1968

; <label>:1950:                                   ; preds = %.lr.ph42.12, %.lr.ph42.12
  call void @license()
  br label %1968

; <label>:1951:                                   ; preds = %.lr.ph42.12
  store i32 9, i32* @blockSize100k, align 4
  br label %1968

; <label>:1952:                                   ; preds = %.lr.ph42.12
  store i32 8, i32* @blockSize100k, align 4
  br label %1968

; <label>:1953:                                   ; preds = %.lr.ph42.12
  store i32 7, i32* @blockSize100k, align 4
  br label %1968

; <label>:1954:                                   ; preds = %.lr.ph42.12
  store i32 6, i32* @blockSize100k, align 4
  br label %1968

; <label>:1955:                                   ; preds = %.lr.ph42.12
  store i32 5, i32* @blockSize100k, align 4
  br label %1968

; <label>:1956:                                   ; preds = %.lr.ph42.12
  store i32 4, i32* @blockSize100k, align 4
  br label %1968

; <label>:1957:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @blockSize100k, align 4
  br label %1968

; <label>:1958:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @blockSize100k, align 4
  br label %1968

; <label>:1959:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @blockSize100k, align 4
  br label %1968

; <label>:1960:                                   ; preds = %.lr.ph42.12
  store i8 0, i8* @noisy, align 1
  br label %1968

; <label>:1961:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @smallMode, align 1
  br label %1968

; <label>:1962:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @keepInputFiles, align 1
  br label %1968

; <label>:1963:                                   ; preds = %.lr.ph42.12
  store i32 3, i32* @opMode, align 4
  br label %1968

; <label>:1964:                                   ; preds = %.lr.ph42.12
  store i8 1, i8* @forceOverwrite, align 1
  br label %1968

; <label>:1965:                                   ; preds = %.lr.ph42.12
  store i32 1, i32* @opMode, align 4
  br label %1968

; <label>:1966:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @opMode, align 4
  br label %1968

; <label>:1967:                                   ; preds = %.lr.ph42.12
  store i32 2, i32* @srcMode, align 4
  br label %1968

; <label>:1968:                                   ; preds = %1967, %1966, %1965, %1964, %1963, %1962, %1961, %1960, %1959, %1958, %1957, %1956, %1955, %1954, %1953, %1952, %1951, %1950, %1947
  %1969 = load i8*, i8** %1937, align 8
  %scevgep2.12 = getelementptr i8, i8* %1969, i64 2
  %scevgep3.12 = getelementptr i8, i8* %scevgep2.12, i64 %lsr.iv.12
  %1970 = load i8, i8* %scevgep3.12, align 1
  %1971 = sext i8 %1970 to i32
  %1972 = icmp ne i32 %1971, 0
  %lsr.iv.next.12 = add i64 %lsr.iv.12, 1
  br i1 %1972, label %.lr.ph42.12, label %._crit_edge43.loopexit.12

._crit_edge43.loopexit.12:                        ; preds = %1968
  br label %._crit_edge43.12

._crit_edge43.12:                                 ; preds = %._crit_edge43.loopexit.12, %1936, %1929, %1923
  call void @__loop_iteration_test___3()
  %1973 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1917, i32 0, i32 1
  %1974 = load %struct.zzzz*, %struct.zzzz** %1973, align 8
  %1975 = icmp ne %struct.zzzz* %1974, null
  br i1 %1975, label %.lr.ph48.13, label %.loopexit17.loopexit

.lr.ph48.13:                                      ; preds = %._crit_edge43.12
  call void @unroll_loop(i32 3)
  %1976 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1974, i32 0, i32 0
  %1977 = load i8*, i8** %1976, align 8
  %1978 = call i32 @strcmp(i8* %1977, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %1979 = icmp eq i32 %1978, 0
  br i1 %1979, label %.loopexit17.loopexit, label %1980

; <label>:1980:                                   ; preds = %.lr.ph48.13
  %1981 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1974, i32 0, i32 0
  %1982 = load i8*, i8** %1981, align 8
  %1983 = load i8, i8* %1982, align 1
  %1984 = sext i8 %1983 to i32
  %1985 = icmp eq i32 %1984, 45
  br i1 %1985, label %1986, label %._crit_edge43.13

; <label>:1986:                                   ; preds = %1980
  %1987 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1974, i32 0, i32 0
  %1988 = load i8*, i8** %1987, align 8
  %1989 = getelementptr inbounds i8, i8* %1988, i64 1
  %1990 = load i8, i8* %1989, align 1
  %1991 = sext i8 %1990 to i32
  %1992 = icmp ne i32 %1991, 45
  br i1 %1992, label %1993, label %._crit_edge43.13

; <label>:1993:                                   ; preds = %1986
  %1994 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1974, i32 0, i32 0
  %1995 = load i8*, i8** %1994, align 8
  %1996 = getelementptr inbounds i8, i8* %1995, i64 1
  %1997 = load i8, i8* %1996, align 1
  %1998 = sext i8 %1997 to i32
  %1999 = icmp ne i32 %1998, 0
  br i1 %1999, label %.lr.ph42.preheader.13, label %._crit_edge43.13

.lr.ph42.preheader.13:                            ; preds = %1993
  %2000 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1974, i32 0, i32 0
  br label %.lr.ph42.13

.lr.ph42.13:                                      ; preds = %2025, %.lr.ph42.preheader.13
  %lsr.iv.13 = phi i64 [ 0, %.lr.ph42.preheader.13 ], [ %lsr.iv.next.13, %2025 ]
  call void @unroll_loop(i32 4)
  %2001 = load i8*, i8** %2000, align 8
  %scevgep.13 = getelementptr i8, i8* %2001, i64 1
  %scevgep1.13 = getelementptr i8, i8* %scevgep.13, i64 %lsr.iv.13
  %2002 = load i8, i8* %scevgep1.13, align 1
  %2003 = sext i8 %2002 to i32
  switch i32 %2003, label %.loopexit28 [
    i32 99, label %2024
    i32 100, label %2023
    i32 122, label %2022
    i32 102, label %2021
    i32 116, label %2020
    i32 107, label %2019
    i32 115, label %2018
    i32 113, label %2017
    i32 49, label %2016
    i32 50, label %2015
    i32 51, label %2014
    i32 52, label %2013
    i32 53, label %2012
    i32 54, label %2011
    i32 55, label %2010
    i32 56, label %2009
    i32 57, label %2008
    i32 86, label %2007
    i32 76, label %2007
    i32 118, label %2004
    i32 104, label %.loopexit29
  ]

; <label>:2004:                                   ; preds = %.lr.ph42.13
  %2005 = load i32, i32* @verbosity, align 4
  %2006 = add nsw i32 %2005, 1
  store i32 %2006, i32* @verbosity, align 4
  br label %2025

; <label>:2007:                                   ; preds = %.lr.ph42.13, %.lr.ph42.13
  call void @license()
  br label %2025

; <label>:2008:                                   ; preds = %.lr.ph42.13
  store i32 9, i32* @blockSize100k, align 4
  br label %2025

; <label>:2009:                                   ; preds = %.lr.ph42.13
  store i32 8, i32* @blockSize100k, align 4
  br label %2025

; <label>:2010:                                   ; preds = %.lr.ph42.13
  store i32 7, i32* @blockSize100k, align 4
  br label %2025

; <label>:2011:                                   ; preds = %.lr.ph42.13
  store i32 6, i32* @blockSize100k, align 4
  br label %2025

; <label>:2012:                                   ; preds = %.lr.ph42.13
  store i32 5, i32* @blockSize100k, align 4
  br label %2025

; <label>:2013:                                   ; preds = %.lr.ph42.13
  store i32 4, i32* @blockSize100k, align 4
  br label %2025

; <label>:2014:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @blockSize100k, align 4
  br label %2025

; <label>:2015:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @blockSize100k, align 4
  br label %2025

; <label>:2016:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @blockSize100k, align 4
  br label %2025

; <label>:2017:                                   ; preds = %.lr.ph42.13
  store i8 0, i8* @noisy, align 1
  br label %2025

; <label>:2018:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @smallMode, align 1
  br label %2025

; <label>:2019:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @keepInputFiles, align 1
  br label %2025

; <label>:2020:                                   ; preds = %.lr.ph42.13
  store i32 3, i32* @opMode, align 4
  br label %2025

; <label>:2021:                                   ; preds = %.lr.ph42.13
  store i8 1, i8* @forceOverwrite, align 1
  br label %2025

; <label>:2022:                                   ; preds = %.lr.ph42.13
  store i32 1, i32* @opMode, align 4
  br label %2025

; <label>:2023:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @opMode, align 4
  br label %2025

; <label>:2024:                                   ; preds = %.lr.ph42.13
  store i32 2, i32* @srcMode, align 4
  br label %2025

; <label>:2025:                                   ; preds = %2024, %2023, %2022, %2021, %2020, %2019, %2018, %2017, %2016, %2015, %2014, %2013, %2012, %2011, %2010, %2009, %2008, %2007, %2004
  %2026 = load i8*, i8** %1994, align 8
  %scevgep2.13 = getelementptr i8, i8* %2026, i64 2
  %scevgep3.13 = getelementptr i8, i8* %scevgep2.13, i64 %lsr.iv.13
  %2027 = load i8, i8* %scevgep3.13, align 1
  %2028 = sext i8 %2027 to i32
  %2029 = icmp ne i32 %2028, 0
  %lsr.iv.next.13 = add i64 %lsr.iv.13, 1
  br i1 %2029, label %.lr.ph42.13, label %._crit_edge43.loopexit.13

._crit_edge43.loopexit.13:                        ; preds = %2025
  br label %._crit_edge43.13

._crit_edge43.13:                                 ; preds = %._crit_edge43.loopexit.13, %1993, %1986, %1980
  call void @__loop_iteration_test___3()
  %2030 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %1974, i32 0, i32 1
  %2031 = load %struct.zzzz*, %struct.zzzz** %2030, align 8
  %2032 = icmp ne %struct.zzzz* %2031, null
  br i1 %2032, label %.lr.ph48.14, label %.loopexit17.loopexit

.lr.ph48.14:                                      ; preds = %._crit_edge43.13
  call void @unroll_loop(i32 3)
  %2033 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2031, i32 0, i32 0
  %2034 = load i8*, i8** %2033, align 8
  %2035 = call i32 @strcmp(i8* %2034, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2036 = icmp eq i32 %2035, 0
  br i1 %2036, label %.loopexit17.loopexit, label %2037

; <label>:2037:                                   ; preds = %.lr.ph48.14
  %2038 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2031, i32 0, i32 0
  %2039 = load i8*, i8** %2038, align 8
  %2040 = load i8, i8* %2039, align 1
  %2041 = sext i8 %2040 to i32
  %2042 = icmp eq i32 %2041, 45
  br i1 %2042, label %2043, label %._crit_edge43.14

; <label>:2043:                                   ; preds = %2037
  %2044 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2031, i32 0, i32 0
  %2045 = load i8*, i8** %2044, align 8
  %2046 = getelementptr inbounds i8, i8* %2045, i64 1
  %2047 = load i8, i8* %2046, align 1
  %2048 = sext i8 %2047 to i32
  %2049 = icmp ne i32 %2048, 45
  br i1 %2049, label %2050, label %._crit_edge43.14

; <label>:2050:                                   ; preds = %2043
  %2051 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2031, i32 0, i32 0
  %2052 = load i8*, i8** %2051, align 8
  %2053 = getelementptr inbounds i8, i8* %2052, i64 1
  %2054 = load i8, i8* %2053, align 1
  %2055 = sext i8 %2054 to i32
  %2056 = icmp ne i32 %2055, 0
  br i1 %2056, label %.lr.ph42.preheader.14, label %._crit_edge43.14

.lr.ph42.preheader.14:                            ; preds = %2050
  %2057 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2031, i32 0, i32 0
  br label %.lr.ph42.14

.lr.ph42.14:                                      ; preds = %2082, %.lr.ph42.preheader.14
  %lsr.iv.14 = phi i64 [ 0, %.lr.ph42.preheader.14 ], [ %lsr.iv.next.14, %2082 ]
  call void @unroll_loop(i32 4)
  %2058 = load i8*, i8** %2057, align 8
  %scevgep.14 = getelementptr i8, i8* %2058, i64 1
  %scevgep1.14 = getelementptr i8, i8* %scevgep.14, i64 %lsr.iv.14
  %2059 = load i8, i8* %scevgep1.14, align 1
  %2060 = sext i8 %2059 to i32
  switch i32 %2060, label %.loopexit30 [
    i32 99, label %2081
    i32 100, label %2080
    i32 122, label %2079
    i32 102, label %2078
    i32 116, label %2077
    i32 107, label %2076
    i32 115, label %2075
    i32 113, label %2074
    i32 49, label %2073
    i32 50, label %2072
    i32 51, label %2071
    i32 52, label %2070
    i32 53, label %2069
    i32 54, label %2068
    i32 55, label %2067
    i32 56, label %2066
    i32 57, label %2065
    i32 86, label %2064
    i32 76, label %2064
    i32 118, label %2061
    i32 104, label %.loopexit31
  ]

; <label>:2061:                                   ; preds = %.lr.ph42.14
  %2062 = load i32, i32* @verbosity, align 4
  %2063 = add nsw i32 %2062, 1
  store i32 %2063, i32* @verbosity, align 4
  br label %2082

; <label>:2064:                                   ; preds = %.lr.ph42.14, %.lr.ph42.14
  call void @license()
  br label %2082

; <label>:2065:                                   ; preds = %.lr.ph42.14
  store i32 9, i32* @blockSize100k, align 4
  br label %2082

; <label>:2066:                                   ; preds = %.lr.ph42.14
  store i32 8, i32* @blockSize100k, align 4
  br label %2082

; <label>:2067:                                   ; preds = %.lr.ph42.14
  store i32 7, i32* @blockSize100k, align 4
  br label %2082

; <label>:2068:                                   ; preds = %.lr.ph42.14
  store i32 6, i32* @blockSize100k, align 4
  br label %2082

; <label>:2069:                                   ; preds = %.lr.ph42.14
  store i32 5, i32* @blockSize100k, align 4
  br label %2082

; <label>:2070:                                   ; preds = %.lr.ph42.14
  store i32 4, i32* @blockSize100k, align 4
  br label %2082

; <label>:2071:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @blockSize100k, align 4
  br label %2082

; <label>:2072:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @blockSize100k, align 4
  br label %2082

; <label>:2073:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @blockSize100k, align 4
  br label %2082

; <label>:2074:                                   ; preds = %.lr.ph42.14
  store i8 0, i8* @noisy, align 1
  br label %2082

; <label>:2075:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @smallMode, align 1
  br label %2082

; <label>:2076:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @keepInputFiles, align 1
  br label %2082

; <label>:2077:                                   ; preds = %.lr.ph42.14
  store i32 3, i32* @opMode, align 4
  br label %2082

; <label>:2078:                                   ; preds = %.lr.ph42.14
  store i8 1, i8* @forceOverwrite, align 1
  br label %2082

; <label>:2079:                                   ; preds = %.lr.ph42.14
  store i32 1, i32* @opMode, align 4
  br label %2082

; <label>:2080:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @opMode, align 4
  br label %2082

; <label>:2081:                                   ; preds = %.lr.ph42.14
  store i32 2, i32* @srcMode, align 4
  br label %2082

; <label>:2082:                                   ; preds = %2081, %2080, %2079, %2078, %2077, %2076, %2075, %2074, %2073, %2072, %2071, %2070, %2069, %2068, %2067, %2066, %2065, %2064, %2061
  %2083 = load i8*, i8** %2051, align 8
  %scevgep2.14 = getelementptr i8, i8* %2083, i64 2
  %scevgep3.14 = getelementptr i8, i8* %scevgep2.14, i64 %lsr.iv.14
  %2084 = load i8, i8* %scevgep3.14, align 1
  %2085 = sext i8 %2084 to i32
  %2086 = icmp ne i32 %2085, 0
  %lsr.iv.next.14 = add i64 %lsr.iv.14, 1
  br i1 %2086, label %.lr.ph42.14, label %._crit_edge43.loopexit.14

._crit_edge43.loopexit.14:                        ; preds = %2082
  br label %._crit_edge43.14

._crit_edge43.14:                                 ; preds = %._crit_edge43.loopexit.14, %2050, %2043, %2037
  call void @__loop_iteration_test___3()
  %2087 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2031, i32 0, i32 1
  %2088 = load %struct.zzzz*, %struct.zzzz** %2087, align 8
  %2089 = icmp ne %struct.zzzz* %2088, null
  br i1 %2089, label %.lr.ph48.15, label %.loopexit17.loopexit

.lr.ph48.15:                                      ; preds = %._crit_edge43.14
  call void @unroll_loop(i32 3)
  %2090 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2088, i32 0, i32 0
  %2091 = load i8*, i8** %2090, align 8
  %2092 = call i32 @strcmp(i8* %2091, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2093 = icmp eq i32 %2092, 0
  br i1 %2093, label %.loopexit17.loopexit, label %2094

; <label>:2094:                                   ; preds = %.lr.ph48.15
  %2095 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2088, i32 0, i32 0
  %2096 = load i8*, i8** %2095, align 8
  %2097 = load i8, i8* %2096, align 1
  %2098 = sext i8 %2097 to i32
  %2099 = icmp eq i32 %2098, 45
  br i1 %2099, label %2100, label %._crit_edge43.15

; <label>:2100:                                   ; preds = %2094
  %2101 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2088, i32 0, i32 0
  %2102 = load i8*, i8** %2101, align 8
  %2103 = getelementptr inbounds i8, i8* %2102, i64 1
  %2104 = load i8, i8* %2103, align 1
  %2105 = sext i8 %2104 to i32
  %2106 = icmp ne i32 %2105, 45
  br i1 %2106, label %2107, label %._crit_edge43.15

; <label>:2107:                                   ; preds = %2100
  %2108 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2088, i32 0, i32 0
  %2109 = load i8*, i8** %2108, align 8
  %2110 = getelementptr inbounds i8, i8* %2109, i64 1
  %2111 = load i8, i8* %2110, align 1
  %2112 = sext i8 %2111 to i32
  %2113 = icmp ne i32 %2112, 0
  br i1 %2113, label %.lr.ph42.preheader.15, label %._crit_edge43.15

.lr.ph42.preheader.15:                            ; preds = %2107
  %2114 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2088, i32 0, i32 0
  br label %.lr.ph42.15

.lr.ph42.15:                                      ; preds = %2139, %.lr.ph42.preheader.15
  %lsr.iv.15 = phi i64 [ 0, %.lr.ph42.preheader.15 ], [ %lsr.iv.next.15, %2139 ]
  call void @unroll_loop(i32 4)
  %2115 = load i8*, i8** %2114, align 8
  %scevgep.15 = getelementptr i8, i8* %2115, i64 1
  %scevgep1.15 = getelementptr i8, i8* %scevgep.15, i64 %lsr.iv.15
  %2116 = load i8, i8* %scevgep1.15, align 1
  %2117 = sext i8 %2116 to i32
  switch i32 %2117, label %.loopexit32 [
    i32 99, label %2138
    i32 100, label %2137
    i32 122, label %2136
    i32 102, label %2135
    i32 116, label %2134
    i32 107, label %2133
    i32 115, label %2132
    i32 113, label %2131
    i32 49, label %2130
    i32 50, label %2129
    i32 51, label %2128
    i32 52, label %2127
    i32 53, label %2126
    i32 54, label %2125
    i32 55, label %2124
    i32 56, label %2123
    i32 57, label %2122
    i32 86, label %2121
    i32 76, label %2121
    i32 118, label %2118
    i32 104, label %.loopexit33
  ]

; <label>:2118:                                   ; preds = %.lr.ph42.15
  %2119 = load i32, i32* @verbosity, align 4
  %2120 = add nsw i32 %2119, 1
  store i32 %2120, i32* @verbosity, align 4
  br label %2139

; <label>:2121:                                   ; preds = %.lr.ph42.15, %.lr.ph42.15
  call void @license()
  br label %2139

; <label>:2122:                                   ; preds = %.lr.ph42.15
  store i32 9, i32* @blockSize100k, align 4
  br label %2139

; <label>:2123:                                   ; preds = %.lr.ph42.15
  store i32 8, i32* @blockSize100k, align 4
  br label %2139

; <label>:2124:                                   ; preds = %.lr.ph42.15
  store i32 7, i32* @blockSize100k, align 4
  br label %2139

; <label>:2125:                                   ; preds = %.lr.ph42.15
  store i32 6, i32* @blockSize100k, align 4
  br label %2139

; <label>:2126:                                   ; preds = %.lr.ph42.15
  store i32 5, i32* @blockSize100k, align 4
  br label %2139

; <label>:2127:                                   ; preds = %.lr.ph42.15
  store i32 4, i32* @blockSize100k, align 4
  br label %2139

; <label>:2128:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @blockSize100k, align 4
  br label %2139

; <label>:2129:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @blockSize100k, align 4
  br label %2139

; <label>:2130:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @blockSize100k, align 4
  br label %2139

; <label>:2131:                                   ; preds = %.lr.ph42.15
  store i8 0, i8* @noisy, align 1
  br label %2139

; <label>:2132:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @smallMode, align 1
  br label %2139

; <label>:2133:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @keepInputFiles, align 1
  br label %2139

; <label>:2134:                                   ; preds = %.lr.ph42.15
  store i32 3, i32* @opMode, align 4
  br label %2139

; <label>:2135:                                   ; preds = %.lr.ph42.15
  store i8 1, i8* @forceOverwrite, align 1
  br label %2139

; <label>:2136:                                   ; preds = %.lr.ph42.15
  store i32 1, i32* @opMode, align 4
  br label %2139

; <label>:2137:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @opMode, align 4
  br label %2139

; <label>:2138:                                   ; preds = %.lr.ph42.15
  store i32 2, i32* @srcMode, align 4
  br label %2139

; <label>:2139:                                   ; preds = %2138, %2137, %2136, %2135, %2134, %2133, %2132, %2131, %2130, %2129, %2128, %2127, %2126, %2125, %2124, %2123, %2122, %2121, %2118
  %2140 = load i8*, i8** %2108, align 8
  %scevgep2.15 = getelementptr i8, i8* %2140, i64 2
  %scevgep3.15 = getelementptr i8, i8* %scevgep2.15, i64 %lsr.iv.15
  %2141 = load i8, i8* %scevgep3.15, align 1
  %2142 = sext i8 %2141 to i32
  %2143 = icmp ne i32 %2142, 0
  %lsr.iv.next.15 = add i64 %lsr.iv.15, 1
  br i1 %2143, label %.lr.ph42.15, label %._crit_edge43.loopexit.15

._crit_edge43.loopexit.15:                        ; preds = %2139
  br label %._crit_edge43.15

._crit_edge43.15:                                 ; preds = %._crit_edge43.loopexit.15, %2107, %2100, %2094
  call void @__loop_iteration_test___3()
  %2144 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2088, i32 0, i32 1
  %2145 = load %struct.zzzz*, %struct.zzzz** %2144, align 8
  %2146 = icmp ne %struct.zzzz* %2145, null
  br i1 %2146, label %.lr.ph48.16, label %.loopexit17.loopexit

.lr.ph48.16:                                      ; preds = %._crit_edge43.15
  call void @unroll_loop(i32 3)
  %2147 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2145, i32 0, i32 0
  %2148 = load i8*, i8** %2147, align 8
  %2149 = call i32 @strcmp(i8* %2148, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2150 = icmp eq i32 %2149, 0
  br i1 %2150, label %.loopexit17.loopexit, label %2151

; <label>:2151:                                   ; preds = %.lr.ph48.16
  %2152 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2145, i32 0, i32 0
  %2153 = load i8*, i8** %2152, align 8
  %2154 = load i8, i8* %2153, align 1
  %2155 = sext i8 %2154 to i32
  %2156 = icmp eq i32 %2155, 45
  br i1 %2156, label %2157, label %._crit_edge43.16

; <label>:2157:                                   ; preds = %2151
  %2158 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2145, i32 0, i32 0
  %2159 = load i8*, i8** %2158, align 8
  %2160 = getelementptr inbounds i8, i8* %2159, i64 1
  %2161 = load i8, i8* %2160, align 1
  %2162 = sext i8 %2161 to i32
  %2163 = icmp ne i32 %2162, 45
  br i1 %2163, label %2164, label %._crit_edge43.16

; <label>:2164:                                   ; preds = %2157
  %2165 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2145, i32 0, i32 0
  %2166 = load i8*, i8** %2165, align 8
  %2167 = getelementptr inbounds i8, i8* %2166, i64 1
  %2168 = load i8, i8* %2167, align 1
  %2169 = sext i8 %2168 to i32
  %2170 = icmp ne i32 %2169, 0
  br i1 %2170, label %.lr.ph42.preheader.16, label %._crit_edge43.16

.lr.ph42.preheader.16:                            ; preds = %2164
  %2171 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2145, i32 0, i32 0
  br label %.lr.ph42.16

.lr.ph42.16:                                      ; preds = %2196, %.lr.ph42.preheader.16
  %lsr.iv.16 = phi i64 [ 0, %.lr.ph42.preheader.16 ], [ %lsr.iv.next.16, %2196 ]
  call void @unroll_loop(i32 4)
  %2172 = load i8*, i8** %2171, align 8
  %scevgep.16 = getelementptr i8, i8* %2172, i64 1
  %scevgep1.16 = getelementptr i8, i8* %scevgep.16, i64 %lsr.iv.16
  %2173 = load i8, i8* %scevgep1.16, align 1
  %2174 = sext i8 %2173 to i32
  switch i32 %2174, label %.loopexit34 [
    i32 99, label %2195
    i32 100, label %2194
    i32 122, label %2193
    i32 102, label %2192
    i32 116, label %2191
    i32 107, label %2190
    i32 115, label %2189
    i32 113, label %2188
    i32 49, label %2187
    i32 50, label %2186
    i32 51, label %2185
    i32 52, label %2184
    i32 53, label %2183
    i32 54, label %2182
    i32 55, label %2181
    i32 56, label %2180
    i32 57, label %2179
    i32 86, label %2178
    i32 76, label %2178
    i32 118, label %2175
    i32 104, label %.loopexit35
  ]

; <label>:2175:                                   ; preds = %.lr.ph42.16
  %2176 = load i32, i32* @verbosity, align 4
  %2177 = add nsw i32 %2176, 1
  store i32 %2177, i32* @verbosity, align 4
  br label %2196

; <label>:2178:                                   ; preds = %.lr.ph42.16, %.lr.ph42.16
  call void @license()
  br label %2196

; <label>:2179:                                   ; preds = %.lr.ph42.16
  store i32 9, i32* @blockSize100k, align 4
  br label %2196

; <label>:2180:                                   ; preds = %.lr.ph42.16
  store i32 8, i32* @blockSize100k, align 4
  br label %2196

; <label>:2181:                                   ; preds = %.lr.ph42.16
  store i32 7, i32* @blockSize100k, align 4
  br label %2196

; <label>:2182:                                   ; preds = %.lr.ph42.16
  store i32 6, i32* @blockSize100k, align 4
  br label %2196

; <label>:2183:                                   ; preds = %.lr.ph42.16
  store i32 5, i32* @blockSize100k, align 4
  br label %2196

; <label>:2184:                                   ; preds = %.lr.ph42.16
  store i32 4, i32* @blockSize100k, align 4
  br label %2196

; <label>:2185:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @blockSize100k, align 4
  br label %2196

; <label>:2186:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @blockSize100k, align 4
  br label %2196

; <label>:2187:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @blockSize100k, align 4
  br label %2196

; <label>:2188:                                   ; preds = %.lr.ph42.16
  store i8 0, i8* @noisy, align 1
  br label %2196

; <label>:2189:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @smallMode, align 1
  br label %2196

; <label>:2190:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @keepInputFiles, align 1
  br label %2196

; <label>:2191:                                   ; preds = %.lr.ph42.16
  store i32 3, i32* @opMode, align 4
  br label %2196

; <label>:2192:                                   ; preds = %.lr.ph42.16
  store i8 1, i8* @forceOverwrite, align 1
  br label %2196

; <label>:2193:                                   ; preds = %.lr.ph42.16
  store i32 1, i32* @opMode, align 4
  br label %2196

; <label>:2194:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @opMode, align 4
  br label %2196

; <label>:2195:                                   ; preds = %.lr.ph42.16
  store i32 2, i32* @srcMode, align 4
  br label %2196

; <label>:2196:                                   ; preds = %2195, %2194, %2193, %2192, %2191, %2190, %2189, %2188, %2187, %2186, %2185, %2184, %2183, %2182, %2181, %2180, %2179, %2178, %2175
  %2197 = load i8*, i8** %2165, align 8
  %scevgep2.16 = getelementptr i8, i8* %2197, i64 2
  %scevgep3.16 = getelementptr i8, i8* %scevgep2.16, i64 %lsr.iv.16
  %2198 = load i8, i8* %scevgep3.16, align 1
  %2199 = sext i8 %2198 to i32
  %2200 = icmp ne i32 %2199, 0
  %lsr.iv.next.16 = add i64 %lsr.iv.16, 1
  br i1 %2200, label %.lr.ph42.16, label %._crit_edge43.loopexit.16

._crit_edge43.loopexit.16:                        ; preds = %2196
  br label %._crit_edge43.16

._crit_edge43.16:                                 ; preds = %._crit_edge43.loopexit.16, %2164, %2157, %2151
  call void @__loop_iteration_test___3()
  %2201 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2145, i32 0, i32 1
  %2202 = load %struct.zzzz*, %struct.zzzz** %2201, align 8
  %2203 = icmp ne %struct.zzzz* %2202, null
  br i1 %2203, label %.lr.ph48.17, label %.loopexit17.loopexit

.lr.ph48.17:                                      ; preds = %._crit_edge43.16
  call void @unroll_loop(i32 3)
  %2204 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2202, i32 0, i32 0
  %2205 = load i8*, i8** %2204, align 8
  %2206 = call i32 @strcmp(i8* %2205, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2207 = icmp eq i32 %2206, 0
  br i1 %2207, label %.loopexit17.loopexit, label %2208

; <label>:2208:                                   ; preds = %.lr.ph48.17
  %2209 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2202, i32 0, i32 0
  %2210 = load i8*, i8** %2209, align 8
  %2211 = load i8, i8* %2210, align 1
  %2212 = sext i8 %2211 to i32
  %2213 = icmp eq i32 %2212, 45
  br i1 %2213, label %2214, label %._crit_edge43.17

; <label>:2214:                                   ; preds = %2208
  %2215 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2202, i32 0, i32 0
  %2216 = load i8*, i8** %2215, align 8
  %2217 = getelementptr inbounds i8, i8* %2216, i64 1
  %2218 = load i8, i8* %2217, align 1
  %2219 = sext i8 %2218 to i32
  %2220 = icmp ne i32 %2219, 45
  br i1 %2220, label %2221, label %._crit_edge43.17

; <label>:2221:                                   ; preds = %2214
  %2222 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2202, i32 0, i32 0
  %2223 = load i8*, i8** %2222, align 8
  %2224 = getelementptr inbounds i8, i8* %2223, i64 1
  %2225 = load i8, i8* %2224, align 1
  %2226 = sext i8 %2225 to i32
  %2227 = icmp ne i32 %2226, 0
  br i1 %2227, label %.lr.ph42.preheader.17, label %._crit_edge43.17

.lr.ph42.preheader.17:                            ; preds = %2221
  %2228 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2202, i32 0, i32 0
  br label %.lr.ph42.17

.lr.ph42.17:                                      ; preds = %2253, %.lr.ph42.preheader.17
  %lsr.iv.17 = phi i64 [ 0, %.lr.ph42.preheader.17 ], [ %lsr.iv.next.17, %2253 ]
  call void @unroll_loop(i32 4)
  %2229 = load i8*, i8** %2228, align 8
  %scevgep.17 = getelementptr i8, i8* %2229, i64 1
  %scevgep1.17 = getelementptr i8, i8* %scevgep.17, i64 %lsr.iv.17
  %2230 = load i8, i8* %scevgep1.17, align 1
  %2231 = sext i8 %2230 to i32
  switch i32 %2231, label %.loopexit36 [
    i32 99, label %2252
    i32 100, label %2251
    i32 122, label %2250
    i32 102, label %2249
    i32 116, label %2248
    i32 107, label %2247
    i32 115, label %2246
    i32 113, label %2245
    i32 49, label %2244
    i32 50, label %2243
    i32 51, label %2242
    i32 52, label %2241
    i32 53, label %2240
    i32 54, label %2239
    i32 55, label %2238
    i32 56, label %2237
    i32 57, label %2236
    i32 86, label %2235
    i32 76, label %2235
    i32 118, label %2232
    i32 104, label %.loopexit37
  ]

; <label>:2232:                                   ; preds = %.lr.ph42.17
  %2233 = load i32, i32* @verbosity, align 4
  %2234 = add nsw i32 %2233, 1
  store i32 %2234, i32* @verbosity, align 4
  br label %2253

; <label>:2235:                                   ; preds = %.lr.ph42.17, %.lr.ph42.17
  call void @license()
  br label %2253

; <label>:2236:                                   ; preds = %.lr.ph42.17
  store i32 9, i32* @blockSize100k, align 4
  br label %2253

; <label>:2237:                                   ; preds = %.lr.ph42.17
  store i32 8, i32* @blockSize100k, align 4
  br label %2253

; <label>:2238:                                   ; preds = %.lr.ph42.17
  store i32 7, i32* @blockSize100k, align 4
  br label %2253

; <label>:2239:                                   ; preds = %.lr.ph42.17
  store i32 6, i32* @blockSize100k, align 4
  br label %2253

; <label>:2240:                                   ; preds = %.lr.ph42.17
  store i32 5, i32* @blockSize100k, align 4
  br label %2253

; <label>:2241:                                   ; preds = %.lr.ph42.17
  store i32 4, i32* @blockSize100k, align 4
  br label %2253

; <label>:2242:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @blockSize100k, align 4
  br label %2253

; <label>:2243:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @blockSize100k, align 4
  br label %2253

; <label>:2244:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @blockSize100k, align 4
  br label %2253

; <label>:2245:                                   ; preds = %.lr.ph42.17
  store i8 0, i8* @noisy, align 1
  br label %2253

; <label>:2246:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @smallMode, align 1
  br label %2253

; <label>:2247:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @keepInputFiles, align 1
  br label %2253

; <label>:2248:                                   ; preds = %.lr.ph42.17
  store i32 3, i32* @opMode, align 4
  br label %2253

; <label>:2249:                                   ; preds = %.lr.ph42.17
  store i8 1, i8* @forceOverwrite, align 1
  br label %2253

; <label>:2250:                                   ; preds = %.lr.ph42.17
  store i32 1, i32* @opMode, align 4
  br label %2253

; <label>:2251:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @opMode, align 4
  br label %2253

; <label>:2252:                                   ; preds = %.lr.ph42.17
  store i32 2, i32* @srcMode, align 4
  br label %2253

; <label>:2253:                                   ; preds = %2252, %2251, %2250, %2249, %2248, %2247, %2246, %2245, %2244, %2243, %2242, %2241, %2240, %2239, %2238, %2237, %2236, %2235, %2232
  %2254 = load i8*, i8** %2222, align 8
  %scevgep2.17 = getelementptr i8, i8* %2254, i64 2
  %scevgep3.17 = getelementptr i8, i8* %scevgep2.17, i64 %lsr.iv.17
  %2255 = load i8, i8* %scevgep3.17, align 1
  %2256 = sext i8 %2255 to i32
  %2257 = icmp ne i32 %2256, 0
  %lsr.iv.next.17 = add i64 %lsr.iv.17, 1
  br i1 %2257, label %.lr.ph42.17, label %._crit_edge43.loopexit.17

._crit_edge43.loopexit.17:                        ; preds = %2253
  br label %._crit_edge43.17

._crit_edge43.17:                                 ; preds = %._crit_edge43.loopexit.17, %2221, %2214, %2208
  call void @__loop_iteration_test___3()
  %2258 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2202, i32 0, i32 1
  %2259 = load %struct.zzzz*, %struct.zzzz** %2258, align 8
  %2260 = icmp ne %struct.zzzz* %2259, null
  br i1 %2260, label %.lr.ph48.18, label %.loopexit17.loopexit

.lr.ph48.18:                                      ; preds = %._crit_edge43.17
  call void @unroll_loop(i32 3)
  %2261 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2259, i32 0, i32 0
  %2262 = load i8*, i8** %2261, align 8
  %2263 = call i32 @strcmp(i8* %2262, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2264 = icmp eq i32 %2263, 0
  br i1 %2264, label %.loopexit17.loopexit, label %2265

; <label>:2265:                                   ; preds = %.lr.ph48.18
  %2266 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2259, i32 0, i32 0
  %2267 = load i8*, i8** %2266, align 8
  %2268 = load i8, i8* %2267, align 1
  %2269 = sext i8 %2268 to i32
  %2270 = icmp eq i32 %2269, 45
  br i1 %2270, label %2271, label %._crit_edge43.18

; <label>:2271:                                   ; preds = %2265
  %2272 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2259, i32 0, i32 0
  %2273 = load i8*, i8** %2272, align 8
  %2274 = getelementptr inbounds i8, i8* %2273, i64 1
  %2275 = load i8, i8* %2274, align 1
  %2276 = sext i8 %2275 to i32
  %2277 = icmp ne i32 %2276, 45
  br i1 %2277, label %2278, label %._crit_edge43.18

; <label>:2278:                                   ; preds = %2271
  %2279 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2259, i32 0, i32 0
  %2280 = load i8*, i8** %2279, align 8
  %2281 = getelementptr inbounds i8, i8* %2280, i64 1
  %2282 = load i8, i8* %2281, align 1
  %2283 = sext i8 %2282 to i32
  %2284 = icmp ne i32 %2283, 0
  br i1 %2284, label %.lr.ph42.preheader.18, label %._crit_edge43.18

.lr.ph42.preheader.18:                            ; preds = %2278
  %2285 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2259, i32 0, i32 0
  br label %.lr.ph42.18

.lr.ph42.18:                                      ; preds = %2310, %.lr.ph42.preheader.18
  %lsr.iv.18 = phi i64 [ 0, %.lr.ph42.preheader.18 ], [ %lsr.iv.next.18, %2310 ]
  call void @unroll_loop(i32 4)
  %2286 = load i8*, i8** %2285, align 8
  %scevgep.18 = getelementptr i8, i8* %2286, i64 1
  %scevgep1.18 = getelementptr i8, i8* %scevgep.18, i64 %lsr.iv.18
  %2287 = load i8, i8* %scevgep1.18, align 1
  %2288 = sext i8 %2287 to i32
  switch i32 %2288, label %.loopexit38 [
    i32 99, label %2309
    i32 100, label %2308
    i32 122, label %2307
    i32 102, label %2306
    i32 116, label %2305
    i32 107, label %2304
    i32 115, label %2303
    i32 113, label %2302
    i32 49, label %2301
    i32 50, label %2300
    i32 51, label %2299
    i32 52, label %2298
    i32 53, label %2297
    i32 54, label %2296
    i32 55, label %2295
    i32 56, label %2294
    i32 57, label %2293
    i32 86, label %2292
    i32 76, label %2292
    i32 118, label %2289
    i32 104, label %.loopexit39
  ]

; <label>:2289:                                   ; preds = %.lr.ph42.18
  %2290 = load i32, i32* @verbosity, align 4
  %2291 = add nsw i32 %2290, 1
  store i32 %2291, i32* @verbosity, align 4
  br label %2310

; <label>:2292:                                   ; preds = %.lr.ph42.18, %.lr.ph42.18
  call void @license()
  br label %2310

; <label>:2293:                                   ; preds = %.lr.ph42.18
  store i32 9, i32* @blockSize100k, align 4
  br label %2310

; <label>:2294:                                   ; preds = %.lr.ph42.18
  store i32 8, i32* @blockSize100k, align 4
  br label %2310

; <label>:2295:                                   ; preds = %.lr.ph42.18
  store i32 7, i32* @blockSize100k, align 4
  br label %2310

; <label>:2296:                                   ; preds = %.lr.ph42.18
  store i32 6, i32* @blockSize100k, align 4
  br label %2310

; <label>:2297:                                   ; preds = %.lr.ph42.18
  store i32 5, i32* @blockSize100k, align 4
  br label %2310

; <label>:2298:                                   ; preds = %.lr.ph42.18
  store i32 4, i32* @blockSize100k, align 4
  br label %2310

; <label>:2299:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @blockSize100k, align 4
  br label %2310

; <label>:2300:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @blockSize100k, align 4
  br label %2310

; <label>:2301:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @blockSize100k, align 4
  br label %2310

; <label>:2302:                                   ; preds = %.lr.ph42.18
  store i8 0, i8* @noisy, align 1
  br label %2310

; <label>:2303:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @smallMode, align 1
  br label %2310

; <label>:2304:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @keepInputFiles, align 1
  br label %2310

; <label>:2305:                                   ; preds = %.lr.ph42.18
  store i32 3, i32* @opMode, align 4
  br label %2310

; <label>:2306:                                   ; preds = %.lr.ph42.18
  store i8 1, i8* @forceOverwrite, align 1
  br label %2310

; <label>:2307:                                   ; preds = %.lr.ph42.18
  store i32 1, i32* @opMode, align 4
  br label %2310

; <label>:2308:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @opMode, align 4
  br label %2310

; <label>:2309:                                   ; preds = %.lr.ph42.18
  store i32 2, i32* @srcMode, align 4
  br label %2310

; <label>:2310:                                   ; preds = %2309, %2308, %2307, %2306, %2305, %2304, %2303, %2302, %2301, %2300, %2299, %2298, %2297, %2296, %2295, %2294, %2293, %2292, %2289
  %2311 = load i8*, i8** %2279, align 8
  %scevgep2.18 = getelementptr i8, i8* %2311, i64 2
  %scevgep3.18 = getelementptr i8, i8* %scevgep2.18, i64 %lsr.iv.18
  %2312 = load i8, i8* %scevgep3.18, align 1
  %2313 = sext i8 %2312 to i32
  %2314 = icmp ne i32 %2313, 0
  %lsr.iv.next.18 = add i64 %lsr.iv.18, 1
  br i1 %2314, label %.lr.ph42.18, label %._crit_edge43.loopexit.18

._crit_edge43.loopexit.18:                        ; preds = %2310
  br label %._crit_edge43.18

._crit_edge43.18:                                 ; preds = %._crit_edge43.loopexit.18, %2278, %2271, %2265
  call void @__loop_iteration_test___3()
  %2315 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2259, i32 0, i32 1
  %2316 = load %struct.zzzz*, %struct.zzzz** %2315, align 8
  %2317 = icmp ne %struct.zzzz* %2316, null
  br i1 %2317, label %.lr.ph48.19, label %.loopexit17.loopexit

.lr.ph48.19:                                      ; preds = %._crit_edge43.18
  call void @unroll_loop(i32 3)
  %2318 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2316, i32 0, i32 0
  %2319 = load i8*, i8** %2318, align 8
  %2320 = call i32 @strcmp(i8* %2319, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %2321 = icmp eq i32 %2320, 0
  br i1 %2321, label %.loopexit17.loopexit, label %2322

; <label>:2322:                                   ; preds = %.lr.ph48.19
  %2323 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2316, i32 0, i32 0
  %2324 = load i8*, i8** %2323, align 8
  %2325 = load i8, i8* %2324, align 1
  %2326 = sext i8 %2325 to i32
  %2327 = icmp eq i32 %2326, 45
  br i1 %2327, label %2328, label %._crit_edge43.19

; <label>:2328:                                   ; preds = %2322
  %2329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2316, i32 0, i32 0
  %2330 = load i8*, i8** %2329, align 8
  %2331 = getelementptr inbounds i8, i8* %2330, i64 1
  %2332 = load i8, i8* %2331, align 1
  %2333 = sext i8 %2332 to i32
  %2334 = icmp ne i32 %2333, 45
  br i1 %2334, label %2335, label %._crit_edge43.19

; <label>:2335:                                   ; preds = %2328
  %2336 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2316, i32 0, i32 0
  %2337 = load i8*, i8** %2336, align 8
  %2338 = getelementptr inbounds i8, i8* %2337, i64 1
  %2339 = load i8, i8* %2338, align 1
  %2340 = sext i8 %2339 to i32
  %2341 = icmp ne i32 %2340, 0
  br i1 %2341, label %.lr.ph42.preheader.19, label %._crit_edge43.19

.lr.ph42.preheader.19:                            ; preds = %2335
  %2342 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2316, i32 0, i32 0
  br label %.lr.ph42.19

.lr.ph42.19:                                      ; preds = %2367, %.lr.ph42.preheader.19
  %lsr.iv.19 = phi i64 [ 0, %.lr.ph42.preheader.19 ], [ %lsr.iv.next.19, %2367 ]
  call void @unroll_loop(i32 4)
  %2343 = load i8*, i8** %2342, align 8
  %scevgep.19 = getelementptr i8, i8* %2343, i64 1
  %scevgep1.19 = getelementptr i8, i8* %scevgep.19, i64 %lsr.iv.19
  %2344 = load i8, i8* %scevgep1.19, align 1
  %2345 = sext i8 %2344 to i32
  switch i32 %2345, label %.loopexit40 [
    i32 99, label %2366
    i32 100, label %2365
    i32 122, label %2364
    i32 102, label %2363
    i32 116, label %2362
    i32 107, label %2361
    i32 115, label %2360
    i32 113, label %2359
    i32 49, label %2358
    i32 50, label %2357
    i32 51, label %2356
    i32 52, label %2355
    i32 53, label %2354
    i32 54, label %2353
    i32 55, label %2352
    i32 56, label %2351
    i32 57, label %2350
    i32 86, label %2349
    i32 76, label %2349
    i32 118, label %2346
    i32 104, label %.loopexit41
  ]

; <label>:2346:                                   ; preds = %.lr.ph42.19
  %2347 = load i32, i32* @verbosity, align 4
  %2348 = add nsw i32 %2347, 1
  store i32 %2348, i32* @verbosity, align 4
  br label %2367

; <label>:2349:                                   ; preds = %.lr.ph42.19, %.lr.ph42.19
  call void @license()
  br label %2367

; <label>:2350:                                   ; preds = %.lr.ph42.19
  store i32 9, i32* @blockSize100k, align 4
  br label %2367

; <label>:2351:                                   ; preds = %.lr.ph42.19
  store i32 8, i32* @blockSize100k, align 4
  br label %2367

; <label>:2352:                                   ; preds = %.lr.ph42.19
  store i32 7, i32* @blockSize100k, align 4
  br label %2367

; <label>:2353:                                   ; preds = %.lr.ph42.19
  store i32 6, i32* @blockSize100k, align 4
  br label %2367

; <label>:2354:                                   ; preds = %.lr.ph42.19
  store i32 5, i32* @blockSize100k, align 4
  br label %2367

; <label>:2355:                                   ; preds = %.lr.ph42.19
  store i32 4, i32* @blockSize100k, align 4
  br label %2367

; <label>:2356:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @blockSize100k, align 4
  br label %2367

; <label>:2357:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @blockSize100k, align 4
  br label %2367

; <label>:2358:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @blockSize100k, align 4
  br label %2367

; <label>:2359:                                   ; preds = %.lr.ph42.19
  store i8 0, i8* @noisy, align 1
  br label %2367

; <label>:2360:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @smallMode, align 1
  br label %2367

; <label>:2361:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @keepInputFiles, align 1
  br label %2367

; <label>:2362:                                   ; preds = %.lr.ph42.19
  store i32 3, i32* @opMode, align 4
  br label %2367

; <label>:2363:                                   ; preds = %.lr.ph42.19
  store i8 1, i8* @forceOverwrite, align 1
  br label %2367

; <label>:2364:                                   ; preds = %.lr.ph42.19
  store i32 1, i32* @opMode, align 4
  br label %2367

; <label>:2365:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @opMode, align 4
  br label %2367

; <label>:2366:                                   ; preds = %.lr.ph42.19
  store i32 2, i32* @srcMode, align 4
  br label %2367

; <label>:2367:                                   ; preds = %2366, %2365, %2364, %2363, %2362, %2361, %2360, %2359, %2358, %2357, %2356, %2355, %2354, %2353, %2352, %2351, %2350, %2349, %2346
  %2368 = load i8*, i8** %2336, align 8
  %scevgep2.19 = getelementptr i8, i8* %2368, i64 2
  %scevgep3.19 = getelementptr i8, i8* %scevgep2.19, i64 %lsr.iv.19
  %2369 = load i8, i8* %scevgep3.19, align 1
  %2370 = sext i8 %2369 to i32
  %2371 = icmp ne i32 %2370, 0
  %lsr.iv.next.19 = add i64 %lsr.iv.19, 1
  br i1 %2371, label %.lr.ph42.19, label %._crit_edge43.loopexit.19

._crit_edge43.loopexit.19:                        ; preds = %2367
  br label %._crit_edge43.19

._crit_edge43.19:                                 ; preds = %._crit_edge43.loopexit.19, %2335, %2328, %2322
  call void @__loop_iteration_test___3()
  %2372 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %2316, i32 0, i32 1
  %2373 = load %struct.zzzz*, %struct.zzzz** %2372, align 8
  br label %.loopexit17.loopexit

.lr.ph42.113:                                     ; preds = %198
  call void @unroll_loop(i32 4)
  %2374 = load i8*, i8** %163, align 8
  %scevgep.111 = getelementptr i8, i8* %2374, i64 1
  %scevgep1.112 = getelementptr i8, i8* %scevgep.111, i64 1
  %2375 = load i8, i8* %scevgep1.112, align 1
  %2376 = sext i8 107 to i32
  switch i32 107, label %.loopexit1 [
    i32 99, label %2397
    i32 100, label %2396
    i32 122, label %2395
    i32 102, label %2394
    i32 116, label %2393
    i32 107, label %2392
    i32 115, label %2391
    i32 113, label %2390
    i32 49, label %2389
    i32 50, label %2388
    i32 51, label %2387
    i32 52, label %2386
    i32 53, label %2385
    i32 54, label %2384
    i32 55, label %2383
    i32 56, label %2382
    i32 57, label %2381
    i32 86, label %2380
    i32 76, label %2380
    i32 118, label %2377
    i32 104, label %.loopexit2
  ]

; <label>:2377:                                   ; preds = %.lr.ph42.113
  %2378 = load i32, i32* @verbosity, align 4
  %2379 = add nsw i32 %2378, 1
  store i32 %2379, i32* @verbosity, align 4
  br label %2398

; <label>:2380:                                   ; preds = %.lr.ph42.113, %.lr.ph42.113
  call void @license()
  br label %2398

; <label>:2381:                                   ; preds = %.lr.ph42.113
  store i32 9, i32* @blockSize100k, align 4
  br label %2398

; <label>:2382:                                   ; preds = %.lr.ph42.113
  store i32 8, i32* @blockSize100k, align 4
  br label %2398

; <label>:2383:                                   ; preds = %.lr.ph42.113
  store i32 7, i32* @blockSize100k, align 4
  br label %2398

; <label>:2384:                                   ; preds = %.lr.ph42.113
  store i32 6, i32* @blockSize100k, align 4
  br label %2398

; <label>:2385:                                   ; preds = %.lr.ph42.113
  store i32 5, i32* @blockSize100k, align 4
  br label %2398

; <label>:2386:                                   ; preds = %.lr.ph42.113
  store i32 4, i32* @blockSize100k, align 4
  br label %2398

; <label>:2387:                                   ; preds = %.lr.ph42.113
  store i32 3, i32* @blockSize100k, align 4
  br label %2398

; <label>:2388:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @blockSize100k, align 4
  br label %2398

; <label>:2389:                                   ; preds = %.lr.ph42.113
  store i32 1, i32* @blockSize100k, align 4
  br label %2398

; <label>:2390:                                   ; preds = %.lr.ph42.113
  store i8 0, i8* @noisy, align 1
  br label %2398

; <label>:2391:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @smallMode, align 1
  br label %2398

; <label>:2392:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @keepInputFiles, align 1
  br label %2398

; <label>:2393:                                   ; preds = %.lr.ph42.113
  store i32 3, i32* @opMode, align 4
  br label %2398

; <label>:2394:                                   ; preds = %.lr.ph42.113
  store i8 1, i8* @forceOverwrite, align 1
  br label %2398

; <label>:2395:                                   ; preds = %.lr.ph42.113
  store i32 1, i32* @opMode, align 4
  br label %2398

; <label>:2396:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @opMode, align 4
  br label %2398

; <label>:2397:                                   ; preds = %.lr.ph42.113
  store i32 2, i32* @srcMode, align 4
  br label %2398

; <label>:2398:                                   ; preds = %2397, %2396, %2395, %2394, %2393, %2392, %2391, %2390, %2389, %2388, %2387, %2386, %2385, %2384, %2383, %2382, %2381, %2380, %2377
  call void @__loop_iteration_test___4()
  %2399 = load i8*, i8** %157, align 8
  %scevgep2.114 = getelementptr i8, i8* %2399, i64 2
  %scevgep3.115 = getelementptr i8, i8* %scevgep2.114, i64 1
  %2400 = load i8, i8* %scevgep3.115, align 1
  %2401 = sext i8 113 to i32
  %2402 = icmp ne i32 113, 0
  br i1 true, label %.lr.ph42.220, label %._crit_edge43.loopexit

.lr.ph42.220:                                     ; preds = %2398
  call void @unroll_loop(i32 4)
  %2403 = load i8*, i8** %163, align 8
  %scevgep.218 = getelementptr i8, i8* %2403, i64 1
  %scevgep1.219 = getelementptr i8, i8* %scevgep.218, i64 2
  %2404 = load i8, i8* %scevgep1.219, align 1
  %2405 = sext i8 113 to i32
  switch i32 113, label %.loopexit1 [
    i32 99, label %2426
    i32 100, label %2425
    i32 122, label %2424
    i32 102, label %2423
    i32 116, label %2422
    i32 107, label %2421
    i32 115, label %2420
    i32 113, label %2419
    i32 49, label %2418
    i32 50, label %2417
    i32 51, label %2416
    i32 52, label %2415
    i32 53, label %2414
    i32 54, label %2413
    i32 55, label %2412
    i32 56, label %2411
    i32 57, label %2410
    i32 86, label %2409
    i32 76, label %2409
    i32 118, label %2406
    i32 104, label %.loopexit2
  ]

; <label>:2406:                                   ; preds = %.lr.ph42.220
  %2407 = load i32, i32* @verbosity, align 4
  %2408 = add nsw i32 %2407, 1
  store i32 %2408, i32* @verbosity, align 4
  br label %2427

; <label>:2409:                                   ; preds = %.lr.ph42.220, %.lr.ph42.220
  call void @license()
  br label %2427

; <label>:2410:                                   ; preds = %.lr.ph42.220
  store i32 9, i32* @blockSize100k, align 4
  br label %2427

; <label>:2411:                                   ; preds = %.lr.ph42.220
  store i32 8, i32* @blockSize100k, align 4
  br label %2427

; <label>:2412:                                   ; preds = %.lr.ph42.220
  store i32 7, i32* @blockSize100k, align 4
  br label %2427

; <label>:2413:                                   ; preds = %.lr.ph42.220
  store i32 6, i32* @blockSize100k, align 4
  br label %2427

; <label>:2414:                                   ; preds = %.lr.ph42.220
  store i32 5, i32* @blockSize100k, align 4
  br label %2427

; <label>:2415:                                   ; preds = %.lr.ph42.220
  store i32 4, i32* @blockSize100k, align 4
  br label %2427

; <label>:2416:                                   ; preds = %.lr.ph42.220
  store i32 3, i32* @blockSize100k, align 4
  br label %2427

; <label>:2417:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @blockSize100k, align 4
  br label %2427

; <label>:2418:                                   ; preds = %.lr.ph42.220
  store i32 1, i32* @blockSize100k, align 4
  br label %2427

; <label>:2419:                                   ; preds = %.lr.ph42.220
  store i8 0, i8* @noisy, align 1
  br label %2427

; <label>:2420:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @smallMode, align 1
  br label %2427

; <label>:2421:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @keepInputFiles, align 1
  br label %2427

; <label>:2422:                                   ; preds = %.lr.ph42.220
  store i32 3, i32* @opMode, align 4
  br label %2427

; <label>:2423:                                   ; preds = %.lr.ph42.220
  store i8 1, i8* @forceOverwrite, align 1
  br label %2427

; <label>:2424:                                   ; preds = %.lr.ph42.220
  store i32 1, i32* @opMode, align 4
  br label %2427

; <label>:2425:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @opMode, align 4
  br label %2427

; <label>:2426:                                   ; preds = %.lr.ph42.220
  store i32 2, i32* @srcMode, align 4
  br label %2427

; <label>:2427:                                   ; preds = %2426, %2425, %2424, %2423, %2422, %2421, %2420, %2419, %2418, %2417, %2416, %2415, %2414, %2413, %2412, %2411, %2410, %2409, %2406
  call void @__loop_iteration_test___4()
  %2428 = load i8*, i8** %157, align 8
  %scevgep2.221 = getelementptr i8, i8* %2428, i64 2
  %scevgep3.222 = getelementptr i8, i8* %scevgep2.221, i64 2
  %2429 = load i8, i8* %scevgep3.222, align 1
  %2430 = sext i8 115 to i32
  %2431 = icmp ne i32 115, 0
  br i1 true, label %.lr.ph42.327, label %._crit_edge43.loopexit

.lr.ph42.327:                                     ; preds = %2427
  call void @unroll_loop(i32 4)
  %2432 = load i8*, i8** %163, align 8
  %scevgep.325 = getelementptr i8, i8* %2432, i64 1
  %scevgep1.326 = getelementptr i8, i8* %scevgep.325, i64 3
  %2433 = load i8, i8* %scevgep1.326, align 1
  %2434 = sext i8 115 to i32
  switch i32 115, label %.loopexit1 [
    i32 99, label %2455
    i32 100, label %2454
    i32 122, label %2453
    i32 102, label %2452
    i32 116, label %2451
    i32 107, label %2450
    i32 115, label %2449
    i32 113, label %2448
    i32 49, label %2447
    i32 50, label %2446
    i32 51, label %2445
    i32 52, label %2444
    i32 53, label %2443
    i32 54, label %2442
    i32 55, label %2441
    i32 56, label %2440
    i32 57, label %2439
    i32 86, label %2438
    i32 76, label %2438
    i32 118, label %2435
    i32 104, label %.loopexit2
  ]

; <label>:2435:                                   ; preds = %.lr.ph42.327
  %2436 = load i32, i32* @verbosity, align 4
  %2437 = add nsw i32 %2436, 1
  store i32 %2437, i32* @verbosity, align 4
  br label %2456

; <label>:2438:                                   ; preds = %.lr.ph42.327, %.lr.ph42.327
  call void @license()
  br label %2456

; <label>:2439:                                   ; preds = %.lr.ph42.327
  store i32 9, i32* @blockSize100k, align 4
  br label %2456

; <label>:2440:                                   ; preds = %.lr.ph42.327
  store i32 8, i32* @blockSize100k, align 4
  br label %2456

; <label>:2441:                                   ; preds = %.lr.ph42.327
  store i32 7, i32* @blockSize100k, align 4
  br label %2456

; <label>:2442:                                   ; preds = %.lr.ph42.327
  store i32 6, i32* @blockSize100k, align 4
  br label %2456

; <label>:2443:                                   ; preds = %.lr.ph42.327
  store i32 5, i32* @blockSize100k, align 4
  br label %2456

; <label>:2444:                                   ; preds = %.lr.ph42.327
  store i32 4, i32* @blockSize100k, align 4
  br label %2456

; <label>:2445:                                   ; preds = %.lr.ph42.327
  store i32 3, i32* @blockSize100k, align 4
  br label %2456

; <label>:2446:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @blockSize100k, align 4
  br label %2456

; <label>:2447:                                   ; preds = %.lr.ph42.327
  store i32 1, i32* @blockSize100k, align 4
  br label %2456

; <label>:2448:                                   ; preds = %.lr.ph42.327
  store i8 0, i8* @noisy, align 1
  br label %2456

; <label>:2449:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @smallMode, align 1
  br label %2456

; <label>:2450:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @keepInputFiles, align 1
  br label %2456

; <label>:2451:                                   ; preds = %.lr.ph42.327
  store i32 3, i32* @opMode, align 4
  br label %2456

; <label>:2452:                                   ; preds = %.lr.ph42.327
  store i8 1, i8* @forceOverwrite, align 1
  br label %2456

; <label>:2453:                                   ; preds = %.lr.ph42.327
  store i32 1, i32* @opMode, align 4
  br label %2456

; <label>:2454:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @opMode, align 4
  br label %2456

; <label>:2455:                                   ; preds = %.lr.ph42.327
  store i32 2, i32* @srcMode, align 4
  br label %2456

; <label>:2456:                                   ; preds = %2455, %2454, %2453, %2452, %2451, %2450, %2449, %2448, %2447, %2446, %2445, %2444, %2443, %2442, %2441, %2440, %2439, %2438, %2435
  call void @__loop_iteration_test___4()
  %2457 = load i8*, i8** %157, align 8
  %scevgep2.328 = getelementptr i8, i8* %2457, i64 2
  %scevgep3.329 = getelementptr i8, i8* %scevgep2.328, i64 3
  %2458 = load i8, i8* %scevgep3.329, align 1
  %2459 = sext i8 0 to i32
  %2460 = icmp ne i32 0, 0
  br i1 false, label %.lr.ph42.434, label %._crit_edge43.loopexit

.lr.ph42.434:                                     ; preds = %2456
  call void @unroll_loop(i32 4)
  %2461 = load i8*, i8** %163, align 8
  %scevgep.432 = getelementptr i8, i8* %2461, i64 1
  %scevgep1.433 = getelementptr i8, i8* %scevgep.432, i64 4
  %2462 = load i8, i8* %scevgep1.433, align 1
  %2463 = sext i8 %2462 to i32
  switch i32 %2463, label %.loopexit1 [
    i32 99, label %2484
    i32 100, label %2483
    i32 122, label %2482
    i32 102, label %2481
    i32 116, label %2480
    i32 107, label %2479
    i32 115, label %2478
    i32 113, label %2477
    i32 49, label %2476
    i32 50, label %2475
    i32 51, label %2474
    i32 52, label %2473
    i32 53, label %2472
    i32 54, label %2471
    i32 55, label %2470
    i32 56, label %2469
    i32 57, label %2468
    i32 86, label %2467
    i32 76, label %2467
    i32 118, label %2464
    i32 104, label %.loopexit2
  ]

; <label>:2464:                                   ; preds = %.lr.ph42.434
  %2465 = load i32, i32* @verbosity, align 4
  %2466 = add nsw i32 %2465, 1
  store i32 %2466, i32* @verbosity, align 4
  br label %2485

; <label>:2467:                                   ; preds = %.lr.ph42.434, %.lr.ph42.434
  call void @license()
  br label %2485

; <label>:2468:                                   ; preds = %.lr.ph42.434
  store i32 9, i32* @blockSize100k, align 4
  br label %2485

; <label>:2469:                                   ; preds = %.lr.ph42.434
  store i32 8, i32* @blockSize100k, align 4
  br label %2485

; <label>:2470:                                   ; preds = %.lr.ph42.434
  store i32 7, i32* @blockSize100k, align 4
  br label %2485

; <label>:2471:                                   ; preds = %.lr.ph42.434
  store i32 6, i32* @blockSize100k, align 4
  br label %2485

; <label>:2472:                                   ; preds = %.lr.ph42.434
  store i32 5, i32* @blockSize100k, align 4
  br label %2485

; <label>:2473:                                   ; preds = %.lr.ph42.434
  store i32 4, i32* @blockSize100k, align 4
  br label %2485

; <label>:2474:                                   ; preds = %.lr.ph42.434
  store i32 3, i32* @blockSize100k, align 4
  br label %2485

; <label>:2475:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @blockSize100k, align 4
  br label %2485

; <label>:2476:                                   ; preds = %.lr.ph42.434
  store i32 1, i32* @blockSize100k, align 4
  br label %2485

; <label>:2477:                                   ; preds = %.lr.ph42.434
  store i8 0, i8* @noisy, align 1
  br label %2485

; <label>:2478:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @smallMode, align 1
  br label %2485

; <label>:2479:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @keepInputFiles, align 1
  br label %2485

; <label>:2480:                                   ; preds = %.lr.ph42.434
  store i32 3, i32* @opMode, align 4
  br label %2485

; <label>:2481:                                   ; preds = %.lr.ph42.434
  store i8 1, i8* @forceOverwrite, align 1
  br label %2485

; <label>:2482:                                   ; preds = %.lr.ph42.434
  store i32 1, i32* @opMode, align 4
  br label %2485

; <label>:2483:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @opMode, align 4
  br label %2485

; <label>:2484:                                   ; preds = %.lr.ph42.434
  store i32 2, i32* @srcMode, align 4
  br label %2485

; <label>:2485:                                   ; preds = %2484, %2483, %2482, %2481, %2480, %2479, %2478, %2477, %2476, %2475, %2474, %2473, %2472, %2471, %2470, %2469, %2468, %2467, %2464
  call void @__loop_iteration_test___4()
  %2486 = load i8*, i8** %157, align 8
  %scevgep2.435 = getelementptr i8, i8* %2486, i64 2
  %scevgep3.436 = getelementptr i8, i8* %scevgep2.435, i64 4
  %2487 = load i8, i8* %scevgep3.436, align 1
  %2488 = sext i8 %2487 to i32
  %2489 = icmp ne i32 %2488, 0
  br i1 %2489, label %.lr.ph42.541, label %._crit_edge43.loopexit

.lr.ph42.541:                                     ; preds = %2485
  call void @unroll_loop(i32 4)
  %2490 = load i8*, i8** %163, align 8
  %scevgep.539 = getelementptr i8, i8* %2490, i64 1
  %scevgep1.540 = getelementptr i8, i8* %scevgep.539, i64 5
  %2491 = load i8, i8* %scevgep1.540, align 1
  %2492 = sext i8 %2491 to i32
  switch i32 %2492, label %.loopexit1 [
    i32 99, label %2513
    i32 100, label %2512
    i32 122, label %2511
    i32 102, label %2510
    i32 116, label %2509
    i32 107, label %2508
    i32 115, label %2507
    i32 113, label %2506
    i32 49, label %2505
    i32 50, label %2504
    i32 51, label %2503
    i32 52, label %2502
    i32 53, label %2501
    i32 54, label %2500
    i32 55, label %2499
    i32 56, label %2498
    i32 57, label %2497
    i32 86, label %2496
    i32 76, label %2496
    i32 118, label %2493
    i32 104, label %.loopexit2
  ]

; <label>:2493:                                   ; preds = %.lr.ph42.541
  %2494 = load i32, i32* @verbosity, align 4
  %2495 = add nsw i32 %2494, 1
  store i32 %2495, i32* @verbosity, align 4
  br label %2514

; <label>:2496:                                   ; preds = %.lr.ph42.541, %.lr.ph42.541
  call void @license()
  br label %2514

; <label>:2497:                                   ; preds = %.lr.ph42.541
  store i32 9, i32* @blockSize100k, align 4
  br label %2514

; <label>:2498:                                   ; preds = %.lr.ph42.541
  store i32 8, i32* @blockSize100k, align 4
  br label %2514

; <label>:2499:                                   ; preds = %.lr.ph42.541
  store i32 7, i32* @blockSize100k, align 4
  br label %2514

; <label>:2500:                                   ; preds = %.lr.ph42.541
  store i32 6, i32* @blockSize100k, align 4
  br label %2514

; <label>:2501:                                   ; preds = %.lr.ph42.541
  store i32 5, i32* @blockSize100k, align 4
  br label %2514

; <label>:2502:                                   ; preds = %.lr.ph42.541
  store i32 4, i32* @blockSize100k, align 4
  br label %2514

; <label>:2503:                                   ; preds = %.lr.ph42.541
  store i32 3, i32* @blockSize100k, align 4
  br label %2514

; <label>:2504:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @blockSize100k, align 4
  br label %2514

; <label>:2505:                                   ; preds = %.lr.ph42.541
  store i32 1, i32* @blockSize100k, align 4
  br label %2514

; <label>:2506:                                   ; preds = %.lr.ph42.541
  store i8 0, i8* @noisy, align 1
  br label %2514

; <label>:2507:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @smallMode, align 1
  br label %2514

; <label>:2508:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @keepInputFiles, align 1
  br label %2514

; <label>:2509:                                   ; preds = %.lr.ph42.541
  store i32 3, i32* @opMode, align 4
  br label %2514

; <label>:2510:                                   ; preds = %.lr.ph42.541
  store i8 1, i8* @forceOverwrite, align 1
  br label %2514

; <label>:2511:                                   ; preds = %.lr.ph42.541
  store i32 1, i32* @opMode, align 4
  br label %2514

; <label>:2512:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @opMode, align 4
  br label %2514

; <label>:2513:                                   ; preds = %.lr.ph42.541
  store i32 2, i32* @srcMode, align 4
  br label %2514

; <label>:2514:                                   ; preds = %2513, %2512, %2511, %2510, %2509, %2508, %2507, %2506, %2505, %2504, %2503, %2502, %2501, %2500, %2499, %2498, %2497, %2496, %2493
  call void @__loop_iteration_test___4()
  %2515 = load i8*, i8** %157, align 8
  %scevgep2.542 = getelementptr i8, i8* %2515, i64 2
  %scevgep3.543 = getelementptr i8, i8* %scevgep2.542, i64 5
  %2516 = load i8, i8* %scevgep3.543, align 1
  %2517 = sext i8 %2516 to i32
  %2518 = icmp ne i32 %2517, 0
  br i1 %2518, label %.lr.ph42.648, label %._crit_edge43.loopexit

.lr.ph42.648:                                     ; preds = %2514
  call void @unroll_loop(i32 4)
  %2519 = load i8*, i8** %163, align 8
  %scevgep.646 = getelementptr i8, i8* %2519, i64 1
  %scevgep1.647 = getelementptr i8, i8* %scevgep.646, i64 6
  %2520 = load i8, i8* %scevgep1.647, align 1
  %2521 = sext i8 %2520 to i32
  switch i32 %2521, label %.loopexit1 [
    i32 99, label %2542
    i32 100, label %2541
    i32 122, label %2540
    i32 102, label %2539
    i32 116, label %2538
    i32 107, label %2537
    i32 115, label %2536
    i32 113, label %2535
    i32 49, label %2534
    i32 50, label %2533
    i32 51, label %2532
    i32 52, label %2531
    i32 53, label %2530
    i32 54, label %2529
    i32 55, label %2528
    i32 56, label %2527
    i32 57, label %2526
    i32 86, label %2525
    i32 76, label %2525
    i32 118, label %2522
    i32 104, label %.loopexit2
  ]

; <label>:2522:                                   ; preds = %.lr.ph42.648
  %2523 = load i32, i32* @verbosity, align 4
  %2524 = add nsw i32 %2523, 1
  store i32 %2524, i32* @verbosity, align 4
  br label %2543

; <label>:2525:                                   ; preds = %.lr.ph42.648, %.lr.ph42.648
  call void @license()
  br label %2543

; <label>:2526:                                   ; preds = %.lr.ph42.648
  store i32 9, i32* @blockSize100k, align 4
  br label %2543

; <label>:2527:                                   ; preds = %.lr.ph42.648
  store i32 8, i32* @blockSize100k, align 4
  br label %2543

; <label>:2528:                                   ; preds = %.lr.ph42.648
  store i32 7, i32* @blockSize100k, align 4
  br label %2543

; <label>:2529:                                   ; preds = %.lr.ph42.648
  store i32 6, i32* @blockSize100k, align 4
  br label %2543

; <label>:2530:                                   ; preds = %.lr.ph42.648
  store i32 5, i32* @blockSize100k, align 4
  br label %2543

; <label>:2531:                                   ; preds = %.lr.ph42.648
  store i32 4, i32* @blockSize100k, align 4
  br label %2543

; <label>:2532:                                   ; preds = %.lr.ph42.648
  store i32 3, i32* @blockSize100k, align 4
  br label %2543

; <label>:2533:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @blockSize100k, align 4
  br label %2543

; <label>:2534:                                   ; preds = %.lr.ph42.648
  store i32 1, i32* @blockSize100k, align 4
  br label %2543

; <label>:2535:                                   ; preds = %.lr.ph42.648
  store i8 0, i8* @noisy, align 1
  br label %2543

; <label>:2536:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @smallMode, align 1
  br label %2543

; <label>:2537:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @keepInputFiles, align 1
  br label %2543

; <label>:2538:                                   ; preds = %.lr.ph42.648
  store i32 3, i32* @opMode, align 4
  br label %2543

; <label>:2539:                                   ; preds = %.lr.ph42.648
  store i8 1, i8* @forceOverwrite, align 1
  br label %2543

; <label>:2540:                                   ; preds = %.lr.ph42.648
  store i32 1, i32* @opMode, align 4
  br label %2543

; <label>:2541:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @opMode, align 4
  br label %2543

; <label>:2542:                                   ; preds = %.lr.ph42.648
  store i32 2, i32* @srcMode, align 4
  br label %2543

; <label>:2543:                                   ; preds = %2542, %2541, %2540, %2539, %2538, %2537, %2536, %2535, %2534, %2533, %2532, %2531, %2530, %2529, %2528, %2527, %2526, %2525, %2522
  call void @__loop_iteration_test___4()
  %2544 = load i8*, i8** %157, align 8
  %scevgep2.649 = getelementptr i8, i8* %2544, i64 2
  %scevgep3.650 = getelementptr i8, i8* %scevgep2.649, i64 6
  %2545 = load i8, i8* %scevgep3.650, align 1
  %2546 = sext i8 %2545 to i32
  %2547 = icmp ne i32 %2546, 0
  br i1 %2547, label %.lr.ph42.755, label %._crit_edge43.loopexit

.lr.ph42.755:                                     ; preds = %2543
  call void @unroll_loop(i32 4)
  %2548 = load i8*, i8** %163, align 8
  %scevgep.753 = getelementptr i8, i8* %2548, i64 1
  %scevgep1.754 = getelementptr i8, i8* %scevgep.753, i64 7
  %2549 = load i8, i8* %scevgep1.754, align 1
  %2550 = sext i8 %2549 to i32
  switch i32 %2550, label %.loopexit1 [
    i32 99, label %2571
    i32 100, label %2570
    i32 122, label %2569
    i32 102, label %2568
    i32 116, label %2567
    i32 107, label %2566
    i32 115, label %2565
    i32 113, label %2564
    i32 49, label %2563
    i32 50, label %2562
    i32 51, label %2561
    i32 52, label %2560
    i32 53, label %2559
    i32 54, label %2558
    i32 55, label %2557
    i32 56, label %2556
    i32 57, label %2555
    i32 86, label %2554
    i32 76, label %2554
    i32 118, label %2551
    i32 104, label %.loopexit2
  ]

; <label>:2551:                                   ; preds = %.lr.ph42.755
  %2552 = load i32, i32* @verbosity, align 4
  %2553 = add nsw i32 %2552, 1
  store i32 %2553, i32* @verbosity, align 4
  br label %2572

; <label>:2554:                                   ; preds = %.lr.ph42.755, %.lr.ph42.755
  call void @license()
  br label %2572

; <label>:2555:                                   ; preds = %.lr.ph42.755
  store i32 9, i32* @blockSize100k, align 4
  br label %2572

; <label>:2556:                                   ; preds = %.lr.ph42.755
  store i32 8, i32* @blockSize100k, align 4
  br label %2572

; <label>:2557:                                   ; preds = %.lr.ph42.755
  store i32 7, i32* @blockSize100k, align 4
  br label %2572

; <label>:2558:                                   ; preds = %.lr.ph42.755
  store i32 6, i32* @blockSize100k, align 4
  br label %2572

; <label>:2559:                                   ; preds = %.lr.ph42.755
  store i32 5, i32* @blockSize100k, align 4
  br label %2572

; <label>:2560:                                   ; preds = %.lr.ph42.755
  store i32 4, i32* @blockSize100k, align 4
  br label %2572

; <label>:2561:                                   ; preds = %.lr.ph42.755
  store i32 3, i32* @blockSize100k, align 4
  br label %2572

; <label>:2562:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @blockSize100k, align 4
  br label %2572

; <label>:2563:                                   ; preds = %.lr.ph42.755
  store i32 1, i32* @blockSize100k, align 4
  br label %2572

; <label>:2564:                                   ; preds = %.lr.ph42.755
  store i8 0, i8* @noisy, align 1
  br label %2572

; <label>:2565:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @smallMode, align 1
  br label %2572

; <label>:2566:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @keepInputFiles, align 1
  br label %2572

; <label>:2567:                                   ; preds = %.lr.ph42.755
  store i32 3, i32* @opMode, align 4
  br label %2572

; <label>:2568:                                   ; preds = %.lr.ph42.755
  store i8 1, i8* @forceOverwrite, align 1
  br label %2572

; <label>:2569:                                   ; preds = %.lr.ph42.755
  store i32 1, i32* @opMode, align 4
  br label %2572

; <label>:2570:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @opMode, align 4
  br label %2572

; <label>:2571:                                   ; preds = %.lr.ph42.755
  store i32 2, i32* @srcMode, align 4
  br label %2572

; <label>:2572:                                   ; preds = %2571, %2570, %2569, %2568, %2567, %2566, %2565, %2564, %2563, %2562, %2561, %2560, %2559, %2558, %2557, %2556, %2555, %2554, %2551
  call void @__loop_iteration_test___4()
  %2573 = load i8*, i8** %157, align 8
  %scevgep2.756 = getelementptr i8, i8* %2573, i64 2
  %scevgep3.757 = getelementptr i8, i8* %scevgep2.756, i64 7
  %2574 = load i8, i8* %scevgep3.757, align 1
  %2575 = sext i8 %2574 to i32
  %2576 = icmp ne i32 %2575, 0
  br i1 %2576, label %.lr.ph42.862, label %._crit_edge43.loopexit

.lr.ph42.862:                                     ; preds = %2572
  call void @unroll_loop(i32 4)
  %2577 = load i8*, i8** %163, align 8
  %scevgep.860 = getelementptr i8, i8* %2577, i64 1
  %scevgep1.861 = getelementptr i8, i8* %scevgep.860, i64 8
  %2578 = load i8, i8* %scevgep1.861, align 1
  %2579 = sext i8 %2578 to i32
  switch i32 %2579, label %.loopexit1 [
    i32 99, label %2600
    i32 100, label %2599
    i32 122, label %2598
    i32 102, label %2597
    i32 116, label %2596
    i32 107, label %2595
    i32 115, label %2594
    i32 113, label %2593
    i32 49, label %2592
    i32 50, label %2591
    i32 51, label %2590
    i32 52, label %2589
    i32 53, label %2588
    i32 54, label %2587
    i32 55, label %2586
    i32 56, label %2585
    i32 57, label %2584
    i32 86, label %2583
    i32 76, label %2583
    i32 118, label %2580
    i32 104, label %.loopexit2
  ]

; <label>:2580:                                   ; preds = %.lr.ph42.862
  %2581 = load i32, i32* @verbosity, align 4
  %2582 = add nsw i32 %2581, 1
  store i32 %2582, i32* @verbosity, align 4
  br label %2601

; <label>:2583:                                   ; preds = %.lr.ph42.862, %.lr.ph42.862
  call void @license()
  br label %2601

; <label>:2584:                                   ; preds = %.lr.ph42.862
  store i32 9, i32* @blockSize100k, align 4
  br label %2601

; <label>:2585:                                   ; preds = %.lr.ph42.862
  store i32 8, i32* @blockSize100k, align 4
  br label %2601

; <label>:2586:                                   ; preds = %.lr.ph42.862
  store i32 7, i32* @blockSize100k, align 4
  br label %2601

; <label>:2587:                                   ; preds = %.lr.ph42.862
  store i32 6, i32* @blockSize100k, align 4
  br label %2601

; <label>:2588:                                   ; preds = %.lr.ph42.862
  store i32 5, i32* @blockSize100k, align 4
  br label %2601

; <label>:2589:                                   ; preds = %.lr.ph42.862
  store i32 4, i32* @blockSize100k, align 4
  br label %2601

; <label>:2590:                                   ; preds = %.lr.ph42.862
  store i32 3, i32* @blockSize100k, align 4
  br label %2601

; <label>:2591:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @blockSize100k, align 4
  br label %2601

; <label>:2592:                                   ; preds = %.lr.ph42.862
  store i32 1, i32* @blockSize100k, align 4
  br label %2601

; <label>:2593:                                   ; preds = %.lr.ph42.862
  store i8 0, i8* @noisy, align 1
  br label %2601

; <label>:2594:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @smallMode, align 1
  br label %2601

; <label>:2595:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @keepInputFiles, align 1
  br label %2601

; <label>:2596:                                   ; preds = %.lr.ph42.862
  store i32 3, i32* @opMode, align 4
  br label %2601

; <label>:2597:                                   ; preds = %.lr.ph42.862
  store i8 1, i8* @forceOverwrite, align 1
  br label %2601

; <label>:2598:                                   ; preds = %.lr.ph42.862
  store i32 1, i32* @opMode, align 4
  br label %2601

; <label>:2599:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @opMode, align 4
  br label %2601

; <label>:2600:                                   ; preds = %.lr.ph42.862
  store i32 2, i32* @srcMode, align 4
  br label %2601

; <label>:2601:                                   ; preds = %2600, %2599, %2598, %2597, %2596, %2595, %2594, %2593, %2592, %2591, %2590, %2589, %2588, %2587, %2586, %2585, %2584, %2583, %2580
  call void @__loop_iteration_test___4()
  %2602 = load i8*, i8** %157, align 8
  %scevgep2.863 = getelementptr i8, i8* %2602, i64 2
  %scevgep3.864 = getelementptr i8, i8* %scevgep2.863, i64 8
  %2603 = load i8, i8* %scevgep3.864, align 1
  %2604 = sext i8 %2603 to i32
  %2605 = icmp ne i32 %2604, 0
  br i1 %2605, label %.lr.ph42.969, label %._crit_edge43.loopexit

.lr.ph42.969:                                     ; preds = %2601
  call void @unroll_loop(i32 4)
  %2606 = load i8*, i8** %163, align 8
  %scevgep.967 = getelementptr i8, i8* %2606, i64 1
  %scevgep1.968 = getelementptr i8, i8* %scevgep.967, i64 9
  %2607 = load i8, i8* %scevgep1.968, align 1
  %2608 = sext i8 %2607 to i32
  switch i32 %2608, label %.loopexit1 [
    i32 99, label %2629
    i32 100, label %2628
    i32 122, label %2627
    i32 102, label %2626
    i32 116, label %2625
    i32 107, label %2624
    i32 115, label %2623
    i32 113, label %2622
    i32 49, label %2621
    i32 50, label %2620
    i32 51, label %2619
    i32 52, label %2618
    i32 53, label %2617
    i32 54, label %2616
    i32 55, label %2615
    i32 56, label %2614
    i32 57, label %2613
    i32 86, label %2612
    i32 76, label %2612
    i32 118, label %2609
    i32 104, label %.loopexit2
  ]

; <label>:2609:                                   ; preds = %.lr.ph42.969
  %2610 = load i32, i32* @verbosity, align 4
  %2611 = add nsw i32 %2610, 1
  store i32 %2611, i32* @verbosity, align 4
  br label %2630

; <label>:2612:                                   ; preds = %.lr.ph42.969, %.lr.ph42.969
  call void @license()
  br label %2630

; <label>:2613:                                   ; preds = %.lr.ph42.969
  store i32 9, i32* @blockSize100k, align 4
  br label %2630

; <label>:2614:                                   ; preds = %.lr.ph42.969
  store i32 8, i32* @blockSize100k, align 4
  br label %2630

; <label>:2615:                                   ; preds = %.lr.ph42.969
  store i32 7, i32* @blockSize100k, align 4
  br label %2630

; <label>:2616:                                   ; preds = %.lr.ph42.969
  store i32 6, i32* @blockSize100k, align 4
  br label %2630

; <label>:2617:                                   ; preds = %.lr.ph42.969
  store i32 5, i32* @blockSize100k, align 4
  br label %2630

; <label>:2618:                                   ; preds = %.lr.ph42.969
  store i32 4, i32* @blockSize100k, align 4
  br label %2630

; <label>:2619:                                   ; preds = %.lr.ph42.969
  store i32 3, i32* @blockSize100k, align 4
  br label %2630

; <label>:2620:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @blockSize100k, align 4
  br label %2630

; <label>:2621:                                   ; preds = %.lr.ph42.969
  store i32 1, i32* @blockSize100k, align 4
  br label %2630

; <label>:2622:                                   ; preds = %.lr.ph42.969
  store i8 0, i8* @noisy, align 1
  br label %2630

; <label>:2623:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @smallMode, align 1
  br label %2630

; <label>:2624:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @keepInputFiles, align 1
  br label %2630

; <label>:2625:                                   ; preds = %.lr.ph42.969
  store i32 3, i32* @opMode, align 4
  br label %2630

; <label>:2626:                                   ; preds = %.lr.ph42.969
  store i8 1, i8* @forceOverwrite, align 1
  br label %2630

; <label>:2627:                                   ; preds = %.lr.ph42.969
  store i32 1, i32* @opMode, align 4
  br label %2630

; <label>:2628:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @opMode, align 4
  br label %2630

; <label>:2629:                                   ; preds = %.lr.ph42.969
  store i32 2, i32* @srcMode, align 4
  br label %2630

; <label>:2630:                                   ; preds = %2629, %2628, %2627, %2626, %2625, %2624, %2623, %2622, %2621, %2620, %2619, %2618, %2617, %2616, %2615, %2614, %2613, %2612, %2609
  call void @__loop_iteration_test___4()
  %2631 = load i8*, i8** %157, align 8
  %scevgep2.970 = getelementptr i8, i8* %2631, i64 2
  %scevgep3.971 = getelementptr i8, i8* %scevgep2.970, i64 9
  %2632 = load i8, i8* %scevgep3.971, align 1
  %2633 = sext i8 %2632 to i32
  %2634 = icmp ne i32 %2633, 0
  br i1 %2634, label %.lr.ph42.1076, label %._crit_edge43.loopexit

.lr.ph42.1076:                                    ; preds = %2630
  call void @unroll_loop(i32 4)
  %2635 = load i8*, i8** %163, align 8
  %scevgep.1074 = getelementptr i8, i8* %2635, i64 1
  %scevgep1.1075 = getelementptr i8, i8* %scevgep.1074, i64 10
  %2636 = load i8, i8* %scevgep1.1075, align 1
  %2637 = sext i8 %2636 to i32
  switch i32 %2637, label %.loopexit1 [
    i32 99, label %2658
    i32 100, label %2657
    i32 122, label %2656
    i32 102, label %2655
    i32 116, label %2654
    i32 107, label %2653
    i32 115, label %2652
    i32 113, label %2651
    i32 49, label %2650
    i32 50, label %2649
    i32 51, label %2648
    i32 52, label %2647
    i32 53, label %2646
    i32 54, label %2645
    i32 55, label %2644
    i32 56, label %2643
    i32 57, label %2642
    i32 86, label %2641
    i32 76, label %2641
    i32 118, label %2638
    i32 104, label %.loopexit2
  ]

; <label>:2638:                                   ; preds = %.lr.ph42.1076
  %2639 = load i32, i32* @verbosity, align 4
  %2640 = add nsw i32 %2639, 1
  store i32 %2640, i32* @verbosity, align 4
  br label %2659

; <label>:2641:                                   ; preds = %.lr.ph42.1076, %.lr.ph42.1076
  call void @license()
  br label %2659

; <label>:2642:                                   ; preds = %.lr.ph42.1076
  store i32 9, i32* @blockSize100k, align 4
  br label %2659

; <label>:2643:                                   ; preds = %.lr.ph42.1076
  store i32 8, i32* @blockSize100k, align 4
  br label %2659

; <label>:2644:                                   ; preds = %.lr.ph42.1076
  store i32 7, i32* @blockSize100k, align 4
  br label %2659

; <label>:2645:                                   ; preds = %.lr.ph42.1076
  store i32 6, i32* @blockSize100k, align 4
  br label %2659

; <label>:2646:                                   ; preds = %.lr.ph42.1076
  store i32 5, i32* @blockSize100k, align 4
  br label %2659

; <label>:2647:                                   ; preds = %.lr.ph42.1076
  store i32 4, i32* @blockSize100k, align 4
  br label %2659

; <label>:2648:                                   ; preds = %.lr.ph42.1076
  store i32 3, i32* @blockSize100k, align 4
  br label %2659

; <label>:2649:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @blockSize100k, align 4
  br label %2659

; <label>:2650:                                   ; preds = %.lr.ph42.1076
  store i32 1, i32* @blockSize100k, align 4
  br label %2659

; <label>:2651:                                   ; preds = %.lr.ph42.1076
  store i8 0, i8* @noisy, align 1
  br label %2659

; <label>:2652:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @smallMode, align 1
  br label %2659

; <label>:2653:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @keepInputFiles, align 1
  br label %2659

; <label>:2654:                                   ; preds = %.lr.ph42.1076
  store i32 3, i32* @opMode, align 4
  br label %2659

; <label>:2655:                                   ; preds = %.lr.ph42.1076
  store i8 1, i8* @forceOverwrite, align 1
  br label %2659

; <label>:2656:                                   ; preds = %.lr.ph42.1076
  store i32 1, i32* @opMode, align 4
  br label %2659

; <label>:2657:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @opMode, align 4
  br label %2659

; <label>:2658:                                   ; preds = %.lr.ph42.1076
  store i32 2, i32* @srcMode, align 4
  br label %2659

; <label>:2659:                                   ; preds = %2658, %2657, %2656, %2655, %2654, %2653, %2652, %2651, %2650, %2649, %2648, %2647, %2646, %2645, %2644, %2643, %2642, %2641, %2638
  call void @__loop_iteration_test___4()
  %2660 = load i8*, i8** %157, align 8
  %scevgep2.1077 = getelementptr i8, i8* %2660, i64 2
  %scevgep3.1078 = getelementptr i8, i8* %scevgep2.1077, i64 10
  %2661 = load i8, i8* %scevgep3.1078, align 1
  %2662 = sext i8 %2661 to i32
  %2663 = icmp ne i32 %2662, 0
  br i1 %2663, label %.lr.ph42.1183, label %._crit_edge43.loopexit

.lr.ph42.1183:                                    ; preds = %2659
  call void @unroll_loop(i32 4)
  %2664 = load i8*, i8** %163, align 8
  %scevgep.1181 = getelementptr i8, i8* %2664, i64 1
  %scevgep1.1182 = getelementptr i8, i8* %scevgep.1181, i64 11
  %2665 = load i8, i8* %scevgep1.1182, align 1
  %2666 = sext i8 %2665 to i32
  switch i32 %2666, label %.loopexit1 [
    i32 99, label %2687
    i32 100, label %2686
    i32 122, label %2685
    i32 102, label %2684
    i32 116, label %2683
    i32 107, label %2682
    i32 115, label %2681
    i32 113, label %2680
    i32 49, label %2679
    i32 50, label %2678
    i32 51, label %2677
    i32 52, label %2676
    i32 53, label %2675
    i32 54, label %2674
    i32 55, label %2673
    i32 56, label %2672
    i32 57, label %2671
    i32 86, label %2670
    i32 76, label %2670
    i32 118, label %2667
    i32 104, label %.loopexit2
  ]

; <label>:2667:                                   ; preds = %.lr.ph42.1183
  %2668 = load i32, i32* @verbosity, align 4
  %2669 = add nsw i32 %2668, 1
  store i32 %2669, i32* @verbosity, align 4
  br label %2688

; <label>:2670:                                   ; preds = %.lr.ph42.1183, %.lr.ph42.1183
  call void @license()
  br label %2688

; <label>:2671:                                   ; preds = %.lr.ph42.1183
  store i32 9, i32* @blockSize100k, align 4
  br label %2688

; <label>:2672:                                   ; preds = %.lr.ph42.1183
  store i32 8, i32* @blockSize100k, align 4
  br label %2688

; <label>:2673:                                   ; preds = %.lr.ph42.1183
  store i32 7, i32* @blockSize100k, align 4
  br label %2688

; <label>:2674:                                   ; preds = %.lr.ph42.1183
  store i32 6, i32* @blockSize100k, align 4
  br label %2688

; <label>:2675:                                   ; preds = %.lr.ph42.1183
  store i32 5, i32* @blockSize100k, align 4
  br label %2688

; <label>:2676:                                   ; preds = %.lr.ph42.1183
  store i32 4, i32* @blockSize100k, align 4
  br label %2688

; <label>:2677:                                   ; preds = %.lr.ph42.1183
  store i32 3, i32* @blockSize100k, align 4
  br label %2688

; <label>:2678:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @blockSize100k, align 4
  br label %2688

; <label>:2679:                                   ; preds = %.lr.ph42.1183
  store i32 1, i32* @blockSize100k, align 4
  br label %2688

; <label>:2680:                                   ; preds = %.lr.ph42.1183
  store i8 0, i8* @noisy, align 1
  br label %2688

; <label>:2681:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @smallMode, align 1
  br label %2688

; <label>:2682:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @keepInputFiles, align 1
  br label %2688

; <label>:2683:                                   ; preds = %.lr.ph42.1183
  store i32 3, i32* @opMode, align 4
  br label %2688

; <label>:2684:                                   ; preds = %.lr.ph42.1183
  store i8 1, i8* @forceOverwrite, align 1
  br label %2688

; <label>:2685:                                   ; preds = %.lr.ph42.1183
  store i32 1, i32* @opMode, align 4
  br label %2688

; <label>:2686:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @opMode, align 4
  br label %2688

; <label>:2687:                                   ; preds = %.lr.ph42.1183
  store i32 2, i32* @srcMode, align 4
  br label %2688

; <label>:2688:                                   ; preds = %2687, %2686, %2685, %2684, %2683, %2682, %2681, %2680, %2679, %2678, %2677, %2676, %2675, %2674, %2673, %2672, %2671, %2670, %2667
  call void @__loop_iteration_test___4()
  %2689 = load i8*, i8** %157, align 8
  %scevgep2.1184 = getelementptr i8, i8* %2689, i64 2
  %scevgep3.1185 = getelementptr i8, i8* %scevgep2.1184, i64 11
  %2690 = load i8, i8* %scevgep3.1185, align 1
  %2691 = sext i8 %2690 to i32
  %2692 = icmp ne i32 %2691, 0
  br i1 %2692, label %.lr.ph42.1290, label %._crit_edge43.loopexit

.lr.ph42.1290:                                    ; preds = %2688
  call void @unroll_loop(i32 4)
  %2693 = load i8*, i8** %163, align 8
  %scevgep.1288 = getelementptr i8, i8* %2693, i64 1
  %scevgep1.1289 = getelementptr i8, i8* %scevgep.1288, i64 12
  %2694 = load i8, i8* %scevgep1.1289, align 1
  %2695 = sext i8 %2694 to i32
  switch i32 %2695, label %.loopexit1 [
    i32 99, label %2716
    i32 100, label %2715
    i32 122, label %2714
    i32 102, label %2713
    i32 116, label %2712
    i32 107, label %2711
    i32 115, label %2710
    i32 113, label %2709
    i32 49, label %2708
    i32 50, label %2707
    i32 51, label %2706
    i32 52, label %2705
    i32 53, label %2704
    i32 54, label %2703
    i32 55, label %2702
    i32 56, label %2701
    i32 57, label %2700
    i32 86, label %2699
    i32 76, label %2699
    i32 118, label %2696
    i32 104, label %.loopexit2
  ]

; <label>:2696:                                   ; preds = %.lr.ph42.1290
  %2697 = load i32, i32* @verbosity, align 4
  %2698 = add nsw i32 %2697, 1
  store i32 %2698, i32* @verbosity, align 4
  br label %2717

; <label>:2699:                                   ; preds = %.lr.ph42.1290, %.lr.ph42.1290
  call void @license()
  br label %2717

; <label>:2700:                                   ; preds = %.lr.ph42.1290
  store i32 9, i32* @blockSize100k, align 4
  br label %2717

; <label>:2701:                                   ; preds = %.lr.ph42.1290
  store i32 8, i32* @blockSize100k, align 4
  br label %2717

; <label>:2702:                                   ; preds = %.lr.ph42.1290
  store i32 7, i32* @blockSize100k, align 4
  br label %2717

; <label>:2703:                                   ; preds = %.lr.ph42.1290
  store i32 6, i32* @blockSize100k, align 4
  br label %2717

; <label>:2704:                                   ; preds = %.lr.ph42.1290
  store i32 5, i32* @blockSize100k, align 4
  br label %2717

; <label>:2705:                                   ; preds = %.lr.ph42.1290
  store i32 4, i32* @blockSize100k, align 4
  br label %2717

; <label>:2706:                                   ; preds = %.lr.ph42.1290
  store i32 3, i32* @blockSize100k, align 4
  br label %2717

; <label>:2707:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @blockSize100k, align 4
  br label %2717

; <label>:2708:                                   ; preds = %.lr.ph42.1290
  store i32 1, i32* @blockSize100k, align 4
  br label %2717

; <label>:2709:                                   ; preds = %.lr.ph42.1290
  store i8 0, i8* @noisy, align 1
  br label %2717

; <label>:2710:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @smallMode, align 1
  br label %2717

; <label>:2711:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @keepInputFiles, align 1
  br label %2717

; <label>:2712:                                   ; preds = %.lr.ph42.1290
  store i32 3, i32* @opMode, align 4
  br label %2717

; <label>:2713:                                   ; preds = %.lr.ph42.1290
  store i8 1, i8* @forceOverwrite, align 1
  br label %2717

; <label>:2714:                                   ; preds = %.lr.ph42.1290
  store i32 1, i32* @opMode, align 4
  br label %2717

; <label>:2715:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @opMode, align 4
  br label %2717

; <label>:2716:                                   ; preds = %.lr.ph42.1290
  store i32 2, i32* @srcMode, align 4
  br label %2717

; <label>:2717:                                   ; preds = %2716, %2715, %2714, %2713, %2712, %2711, %2710, %2709, %2708, %2707, %2706, %2705, %2704, %2703, %2702, %2701, %2700, %2699, %2696
  call void @__loop_iteration_test___4()
  %2718 = load i8*, i8** %157, align 8
  %scevgep2.1291 = getelementptr i8, i8* %2718, i64 2
  %scevgep3.1292 = getelementptr i8, i8* %scevgep2.1291, i64 12
  %2719 = load i8, i8* %scevgep3.1292, align 1
  %2720 = sext i8 %2719 to i32
  %2721 = icmp ne i32 %2720, 0
  br i1 %2721, label %.lr.ph42.1397, label %._crit_edge43.loopexit

.lr.ph42.1397:                                    ; preds = %2717
  call void @unroll_loop(i32 4)
  %2722 = load i8*, i8** %163, align 8
  %scevgep.1395 = getelementptr i8, i8* %2722, i64 1
  %scevgep1.1396 = getelementptr i8, i8* %scevgep.1395, i64 13
  %2723 = load i8, i8* %scevgep1.1396, align 1
  %2724 = sext i8 %2723 to i32
  switch i32 %2724, label %.loopexit1 [
    i32 99, label %2745
    i32 100, label %2744
    i32 122, label %2743
    i32 102, label %2742
    i32 116, label %2741
    i32 107, label %2740
    i32 115, label %2739
    i32 113, label %2738
    i32 49, label %2737
    i32 50, label %2736
    i32 51, label %2735
    i32 52, label %2734
    i32 53, label %2733
    i32 54, label %2732
    i32 55, label %2731
    i32 56, label %2730
    i32 57, label %2729
    i32 86, label %2728
    i32 76, label %2728
    i32 118, label %2725
    i32 104, label %.loopexit2
  ]

; <label>:2725:                                   ; preds = %.lr.ph42.1397
  %2726 = load i32, i32* @verbosity, align 4
  %2727 = add nsw i32 %2726, 1
  store i32 %2727, i32* @verbosity, align 4
  br label %2746

; <label>:2728:                                   ; preds = %.lr.ph42.1397, %.lr.ph42.1397
  call void @license()
  br label %2746

; <label>:2729:                                   ; preds = %.lr.ph42.1397
  store i32 9, i32* @blockSize100k, align 4
  br label %2746

; <label>:2730:                                   ; preds = %.lr.ph42.1397
  store i32 8, i32* @blockSize100k, align 4
  br label %2746

; <label>:2731:                                   ; preds = %.lr.ph42.1397
  store i32 7, i32* @blockSize100k, align 4
  br label %2746

; <label>:2732:                                   ; preds = %.lr.ph42.1397
  store i32 6, i32* @blockSize100k, align 4
  br label %2746

; <label>:2733:                                   ; preds = %.lr.ph42.1397
  store i32 5, i32* @blockSize100k, align 4
  br label %2746

; <label>:2734:                                   ; preds = %.lr.ph42.1397
  store i32 4, i32* @blockSize100k, align 4
  br label %2746

; <label>:2735:                                   ; preds = %.lr.ph42.1397
  store i32 3, i32* @blockSize100k, align 4
  br label %2746

; <label>:2736:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @blockSize100k, align 4
  br label %2746

; <label>:2737:                                   ; preds = %.lr.ph42.1397
  store i32 1, i32* @blockSize100k, align 4
  br label %2746

; <label>:2738:                                   ; preds = %.lr.ph42.1397
  store i8 0, i8* @noisy, align 1
  br label %2746

; <label>:2739:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @smallMode, align 1
  br label %2746

; <label>:2740:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @keepInputFiles, align 1
  br label %2746

; <label>:2741:                                   ; preds = %.lr.ph42.1397
  store i32 3, i32* @opMode, align 4
  br label %2746

; <label>:2742:                                   ; preds = %.lr.ph42.1397
  store i8 1, i8* @forceOverwrite, align 1
  br label %2746

; <label>:2743:                                   ; preds = %.lr.ph42.1397
  store i32 1, i32* @opMode, align 4
  br label %2746

; <label>:2744:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @opMode, align 4
  br label %2746

; <label>:2745:                                   ; preds = %.lr.ph42.1397
  store i32 2, i32* @srcMode, align 4
  br label %2746

; <label>:2746:                                   ; preds = %2745, %2744, %2743, %2742, %2741, %2740, %2739, %2738, %2737, %2736, %2735, %2734, %2733, %2732, %2731, %2730, %2729, %2728, %2725
  call void @__loop_iteration_test___4()
  %2747 = load i8*, i8** %157, align 8
  %scevgep2.1398 = getelementptr i8, i8* %2747, i64 2
  %scevgep3.1399 = getelementptr i8, i8* %scevgep2.1398, i64 13
  %2748 = load i8, i8* %scevgep3.1399, align 1
  %2749 = sext i8 %2748 to i32
  %2750 = icmp ne i32 %2749, 0
  br i1 %2750, label %.lr.ph42.14104, label %._crit_edge43.loopexit

.lr.ph42.14104:                                   ; preds = %2746
  call void @unroll_loop(i32 4)
  %2751 = load i8*, i8** %163, align 8
  %scevgep.14102 = getelementptr i8, i8* %2751, i64 1
  %scevgep1.14103 = getelementptr i8, i8* %scevgep.14102, i64 14
  %2752 = load i8, i8* %scevgep1.14103, align 1
  %2753 = sext i8 %2752 to i32
  switch i32 %2753, label %.loopexit1 [
    i32 99, label %2774
    i32 100, label %2773
    i32 122, label %2772
    i32 102, label %2771
    i32 116, label %2770
    i32 107, label %2769
    i32 115, label %2768
    i32 113, label %2767
    i32 49, label %2766
    i32 50, label %2765
    i32 51, label %2764
    i32 52, label %2763
    i32 53, label %2762
    i32 54, label %2761
    i32 55, label %2760
    i32 56, label %2759
    i32 57, label %2758
    i32 86, label %2757
    i32 76, label %2757
    i32 118, label %2754
    i32 104, label %.loopexit2
  ]

; <label>:2754:                                   ; preds = %.lr.ph42.14104
  %2755 = load i32, i32* @verbosity, align 4
  %2756 = add nsw i32 %2755, 1
  store i32 %2756, i32* @verbosity, align 4
  br label %2775

; <label>:2757:                                   ; preds = %.lr.ph42.14104, %.lr.ph42.14104
  call void @license()
  br label %2775

; <label>:2758:                                   ; preds = %.lr.ph42.14104
  store i32 9, i32* @blockSize100k, align 4
  br label %2775

; <label>:2759:                                   ; preds = %.lr.ph42.14104
  store i32 8, i32* @blockSize100k, align 4
  br label %2775

; <label>:2760:                                   ; preds = %.lr.ph42.14104
  store i32 7, i32* @blockSize100k, align 4
  br label %2775

; <label>:2761:                                   ; preds = %.lr.ph42.14104
  store i32 6, i32* @blockSize100k, align 4
  br label %2775

; <label>:2762:                                   ; preds = %.lr.ph42.14104
  store i32 5, i32* @blockSize100k, align 4
  br label %2775

; <label>:2763:                                   ; preds = %.lr.ph42.14104
  store i32 4, i32* @blockSize100k, align 4
  br label %2775

; <label>:2764:                                   ; preds = %.lr.ph42.14104
  store i32 3, i32* @blockSize100k, align 4
  br label %2775

; <label>:2765:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @blockSize100k, align 4
  br label %2775

; <label>:2766:                                   ; preds = %.lr.ph42.14104
  store i32 1, i32* @blockSize100k, align 4
  br label %2775

; <label>:2767:                                   ; preds = %.lr.ph42.14104
  store i8 0, i8* @noisy, align 1
  br label %2775

; <label>:2768:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @smallMode, align 1
  br label %2775

; <label>:2769:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @keepInputFiles, align 1
  br label %2775

; <label>:2770:                                   ; preds = %.lr.ph42.14104
  store i32 3, i32* @opMode, align 4
  br label %2775

; <label>:2771:                                   ; preds = %.lr.ph42.14104
  store i8 1, i8* @forceOverwrite, align 1
  br label %2775

; <label>:2772:                                   ; preds = %.lr.ph42.14104
  store i32 1, i32* @opMode, align 4
  br label %2775

; <label>:2773:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @opMode, align 4
  br label %2775

; <label>:2774:                                   ; preds = %.lr.ph42.14104
  store i32 2, i32* @srcMode, align 4
  br label %2775

; <label>:2775:                                   ; preds = %2774, %2773, %2772, %2771, %2770, %2769, %2768, %2767, %2766, %2765, %2764, %2763, %2762, %2761, %2760, %2759, %2758, %2757, %2754
  call void @__loop_iteration_test___4()
  %2776 = load i8*, i8** %157, align 8
  %scevgep2.14105 = getelementptr i8, i8* %2776, i64 2
  %scevgep3.14106 = getelementptr i8, i8* %scevgep2.14105, i64 14
  %2777 = load i8, i8* %scevgep3.14106, align 1
  %2778 = sext i8 %2777 to i32
  %2779 = icmp ne i32 %2778, 0
  br i1 %2779, label %.lr.ph42.15111, label %._crit_edge43.loopexit

.lr.ph42.15111:                                   ; preds = %2775
  call void @unroll_loop(i32 4)
  %2780 = load i8*, i8** %163, align 8
  %scevgep.15109 = getelementptr i8, i8* %2780, i64 1
  %scevgep1.15110 = getelementptr i8, i8* %scevgep.15109, i64 15
  %2781 = load i8, i8* %scevgep1.15110, align 1
  %2782 = sext i8 %2781 to i32
  switch i32 %2782, label %.loopexit1 [
    i32 99, label %2803
    i32 100, label %2802
    i32 122, label %2801
    i32 102, label %2800
    i32 116, label %2799
    i32 107, label %2798
    i32 115, label %2797
    i32 113, label %2796
    i32 49, label %2795
    i32 50, label %2794
    i32 51, label %2793
    i32 52, label %2792
    i32 53, label %2791
    i32 54, label %2790
    i32 55, label %2789
    i32 56, label %2788
    i32 57, label %2787
    i32 86, label %2786
    i32 76, label %2786
    i32 118, label %2783
    i32 104, label %.loopexit2
  ]

; <label>:2783:                                   ; preds = %.lr.ph42.15111
  %2784 = load i32, i32* @verbosity, align 4
  %2785 = add nsw i32 %2784, 1
  store i32 %2785, i32* @verbosity, align 4
  br label %2804

; <label>:2786:                                   ; preds = %.lr.ph42.15111, %.lr.ph42.15111
  call void @license()
  br label %2804

; <label>:2787:                                   ; preds = %.lr.ph42.15111
  store i32 9, i32* @blockSize100k, align 4
  br label %2804

; <label>:2788:                                   ; preds = %.lr.ph42.15111
  store i32 8, i32* @blockSize100k, align 4
  br label %2804

; <label>:2789:                                   ; preds = %.lr.ph42.15111
  store i32 7, i32* @blockSize100k, align 4
  br label %2804

; <label>:2790:                                   ; preds = %.lr.ph42.15111
  store i32 6, i32* @blockSize100k, align 4
  br label %2804

; <label>:2791:                                   ; preds = %.lr.ph42.15111
  store i32 5, i32* @blockSize100k, align 4
  br label %2804

; <label>:2792:                                   ; preds = %.lr.ph42.15111
  store i32 4, i32* @blockSize100k, align 4
  br label %2804

; <label>:2793:                                   ; preds = %.lr.ph42.15111
  store i32 3, i32* @blockSize100k, align 4
  br label %2804

; <label>:2794:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @blockSize100k, align 4
  br label %2804

; <label>:2795:                                   ; preds = %.lr.ph42.15111
  store i32 1, i32* @blockSize100k, align 4
  br label %2804

; <label>:2796:                                   ; preds = %.lr.ph42.15111
  store i8 0, i8* @noisy, align 1
  br label %2804

; <label>:2797:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @smallMode, align 1
  br label %2804

; <label>:2798:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @keepInputFiles, align 1
  br label %2804

; <label>:2799:                                   ; preds = %.lr.ph42.15111
  store i32 3, i32* @opMode, align 4
  br label %2804

; <label>:2800:                                   ; preds = %.lr.ph42.15111
  store i8 1, i8* @forceOverwrite, align 1
  br label %2804

; <label>:2801:                                   ; preds = %.lr.ph42.15111
  store i32 1, i32* @opMode, align 4
  br label %2804

; <label>:2802:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @opMode, align 4
  br label %2804

; <label>:2803:                                   ; preds = %.lr.ph42.15111
  store i32 2, i32* @srcMode, align 4
  br label %2804

; <label>:2804:                                   ; preds = %2803, %2802, %2801, %2800, %2799, %2798, %2797, %2796, %2795, %2794, %2793, %2792, %2791, %2790, %2789, %2788, %2787, %2786, %2783
  call void @__loop_iteration_test___4()
  %2805 = load i8*, i8** %157, align 8
  %scevgep2.15112 = getelementptr i8, i8* %2805, i64 2
  %scevgep3.15113 = getelementptr i8, i8* %scevgep2.15112, i64 15
  %2806 = load i8, i8* %scevgep3.15113, align 1
  %2807 = sext i8 %2806 to i32
  %2808 = icmp ne i32 %2807, 0
  br i1 %2808, label %.lr.ph42.16118, label %._crit_edge43.loopexit

.lr.ph42.16118:                                   ; preds = %2804
  call void @unroll_loop(i32 4)
  %2809 = load i8*, i8** %163, align 8
  %scevgep.16116 = getelementptr i8, i8* %2809, i64 1
  %scevgep1.16117 = getelementptr i8, i8* %scevgep.16116, i64 16
  %2810 = load i8, i8* %scevgep1.16117, align 1
  %2811 = sext i8 %2810 to i32
  switch i32 %2811, label %.loopexit1 [
    i32 99, label %2832
    i32 100, label %2831
    i32 122, label %2830
    i32 102, label %2829
    i32 116, label %2828
    i32 107, label %2827
    i32 115, label %2826
    i32 113, label %2825
    i32 49, label %2824
    i32 50, label %2823
    i32 51, label %2822
    i32 52, label %2821
    i32 53, label %2820
    i32 54, label %2819
    i32 55, label %2818
    i32 56, label %2817
    i32 57, label %2816
    i32 86, label %2815
    i32 76, label %2815
    i32 118, label %2812
    i32 104, label %.loopexit2
  ]

; <label>:2812:                                   ; preds = %.lr.ph42.16118
  %2813 = load i32, i32* @verbosity, align 4
  %2814 = add nsw i32 %2813, 1
  store i32 %2814, i32* @verbosity, align 4
  br label %2833

; <label>:2815:                                   ; preds = %.lr.ph42.16118, %.lr.ph42.16118
  call void @license()
  br label %2833

; <label>:2816:                                   ; preds = %.lr.ph42.16118
  store i32 9, i32* @blockSize100k, align 4
  br label %2833

; <label>:2817:                                   ; preds = %.lr.ph42.16118
  store i32 8, i32* @blockSize100k, align 4
  br label %2833

; <label>:2818:                                   ; preds = %.lr.ph42.16118
  store i32 7, i32* @blockSize100k, align 4
  br label %2833

; <label>:2819:                                   ; preds = %.lr.ph42.16118
  store i32 6, i32* @blockSize100k, align 4
  br label %2833

; <label>:2820:                                   ; preds = %.lr.ph42.16118
  store i32 5, i32* @blockSize100k, align 4
  br label %2833

; <label>:2821:                                   ; preds = %.lr.ph42.16118
  store i32 4, i32* @blockSize100k, align 4
  br label %2833

; <label>:2822:                                   ; preds = %.lr.ph42.16118
  store i32 3, i32* @blockSize100k, align 4
  br label %2833

; <label>:2823:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @blockSize100k, align 4
  br label %2833

; <label>:2824:                                   ; preds = %.lr.ph42.16118
  store i32 1, i32* @blockSize100k, align 4
  br label %2833

; <label>:2825:                                   ; preds = %.lr.ph42.16118
  store i8 0, i8* @noisy, align 1
  br label %2833

; <label>:2826:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @smallMode, align 1
  br label %2833

; <label>:2827:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @keepInputFiles, align 1
  br label %2833

; <label>:2828:                                   ; preds = %.lr.ph42.16118
  store i32 3, i32* @opMode, align 4
  br label %2833

; <label>:2829:                                   ; preds = %.lr.ph42.16118
  store i8 1, i8* @forceOverwrite, align 1
  br label %2833

; <label>:2830:                                   ; preds = %.lr.ph42.16118
  store i32 1, i32* @opMode, align 4
  br label %2833

; <label>:2831:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @opMode, align 4
  br label %2833

; <label>:2832:                                   ; preds = %.lr.ph42.16118
  store i32 2, i32* @srcMode, align 4
  br label %2833

; <label>:2833:                                   ; preds = %2832, %2831, %2830, %2829, %2828, %2827, %2826, %2825, %2824, %2823, %2822, %2821, %2820, %2819, %2818, %2817, %2816, %2815, %2812
  call void @__loop_iteration_test___4()
  %2834 = load i8*, i8** %157, align 8
  %scevgep2.16119 = getelementptr i8, i8* %2834, i64 2
  %scevgep3.16120 = getelementptr i8, i8* %scevgep2.16119, i64 16
  %2835 = load i8, i8* %scevgep3.16120, align 1
  %2836 = sext i8 %2835 to i32
  %2837 = icmp ne i32 %2836, 0
  br i1 %2837, label %.lr.ph42.17125, label %._crit_edge43.loopexit

.lr.ph42.17125:                                   ; preds = %2833
  call void @unroll_loop(i32 4)
  %2838 = load i8*, i8** %163, align 8
  %scevgep.17123 = getelementptr i8, i8* %2838, i64 1
  %scevgep1.17124 = getelementptr i8, i8* %scevgep.17123, i64 17
  %2839 = load i8, i8* %scevgep1.17124, align 1
  %2840 = sext i8 %2839 to i32
  switch i32 %2840, label %.loopexit1 [
    i32 99, label %2861
    i32 100, label %2860
    i32 122, label %2859
    i32 102, label %2858
    i32 116, label %2857
    i32 107, label %2856
    i32 115, label %2855
    i32 113, label %2854
    i32 49, label %2853
    i32 50, label %2852
    i32 51, label %2851
    i32 52, label %2850
    i32 53, label %2849
    i32 54, label %2848
    i32 55, label %2847
    i32 56, label %2846
    i32 57, label %2845
    i32 86, label %2844
    i32 76, label %2844
    i32 118, label %2841
    i32 104, label %.loopexit2
  ]

; <label>:2841:                                   ; preds = %.lr.ph42.17125
  %2842 = load i32, i32* @verbosity, align 4
  %2843 = add nsw i32 %2842, 1
  store i32 %2843, i32* @verbosity, align 4
  br label %2862

; <label>:2844:                                   ; preds = %.lr.ph42.17125, %.lr.ph42.17125
  call void @license()
  br label %2862

; <label>:2845:                                   ; preds = %.lr.ph42.17125
  store i32 9, i32* @blockSize100k, align 4
  br label %2862

; <label>:2846:                                   ; preds = %.lr.ph42.17125
  store i32 8, i32* @blockSize100k, align 4
  br label %2862

; <label>:2847:                                   ; preds = %.lr.ph42.17125
  store i32 7, i32* @blockSize100k, align 4
  br label %2862

; <label>:2848:                                   ; preds = %.lr.ph42.17125
  store i32 6, i32* @blockSize100k, align 4
  br label %2862

; <label>:2849:                                   ; preds = %.lr.ph42.17125
  store i32 5, i32* @blockSize100k, align 4
  br label %2862

; <label>:2850:                                   ; preds = %.lr.ph42.17125
  store i32 4, i32* @blockSize100k, align 4
  br label %2862

; <label>:2851:                                   ; preds = %.lr.ph42.17125
  store i32 3, i32* @blockSize100k, align 4
  br label %2862

; <label>:2852:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @blockSize100k, align 4
  br label %2862

; <label>:2853:                                   ; preds = %.lr.ph42.17125
  store i32 1, i32* @blockSize100k, align 4
  br label %2862

; <label>:2854:                                   ; preds = %.lr.ph42.17125
  store i8 0, i8* @noisy, align 1
  br label %2862

; <label>:2855:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @smallMode, align 1
  br label %2862

; <label>:2856:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @keepInputFiles, align 1
  br label %2862

; <label>:2857:                                   ; preds = %.lr.ph42.17125
  store i32 3, i32* @opMode, align 4
  br label %2862

; <label>:2858:                                   ; preds = %.lr.ph42.17125
  store i8 1, i8* @forceOverwrite, align 1
  br label %2862

; <label>:2859:                                   ; preds = %.lr.ph42.17125
  store i32 1, i32* @opMode, align 4
  br label %2862

; <label>:2860:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @opMode, align 4
  br label %2862

; <label>:2861:                                   ; preds = %.lr.ph42.17125
  store i32 2, i32* @srcMode, align 4
  br label %2862

; <label>:2862:                                   ; preds = %2861, %2860, %2859, %2858, %2857, %2856, %2855, %2854, %2853, %2852, %2851, %2850, %2849, %2848, %2847, %2846, %2845, %2844, %2841
  call void @__loop_iteration_test___4()
  %2863 = load i8*, i8** %157, align 8
  %scevgep2.17126 = getelementptr i8, i8* %2863, i64 2
  %scevgep3.17127 = getelementptr i8, i8* %scevgep2.17126, i64 17
  %2864 = load i8, i8* %scevgep3.17127, align 1
  %2865 = sext i8 %2864 to i32
  %2866 = icmp ne i32 %2865, 0
  br i1 %2866, label %.lr.ph42.18132, label %._crit_edge43.loopexit

.lr.ph42.18132:                                   ; preds = %2862
  call void @unroll_loop(i32 4)
  %2867 = load i8*, i8** %163, align 8
  %scevgep.18130 = getelementptr i8, i8* %2867, i64 1
  %scevgep1.18131 = getelementptr i8, i8* %scevgep.18130, i64 18
  %2868 = load i8, i8* %scevgep1.18131, align 1
  %2869 = sext i8 %2868 to i32
  switch i32 %2869, label %.loopexit1 [
    i32 99, label %2890
    i32 100, label %2889
    i32 122, label %2888
    i32 102, label %2887
    i32 116, label %2886
    i32 107, label %2885
    i32 115, label %2884
    i32 113, label %2883
    i32 49, label %2882
    i32 50, label %2881
    i32 51, label %2880
    i32 52, label %2879
    i32 53, label %2878
    i32 54, label %2877
    i32 55, label %2876
    i32 56, label %2875
    i32 57, label %2874
    i32 86, label %2873
    i32 76, label %2873
    i32 118, label %2870
    i32 104, label %.loopexit2
  ]

; <label>:2870:                                   ; preds = %.lr.ph42.18132
  %2871 = load i32, i32* @verbosity, align 4
  %2872 = add nsw i32 %2871, 1
  store i32 %2872, i32* @verbosity, align 4
  br label %2891

; <label>:2873:                                   ; preds = %.lr.ph42.18132, %.lr.ph42.18132
  call void @license()
  br label %2891

; <label>:2874:                                   ; preds = %.lr.ph42.18132
  store i32 9, i32* @blockSize100k, align 4
  br label %2891

; <label>:2875:                                   ; preds = %.lr.ph42.18132
  store i32 8, i32* @blockSize100k, align 4
  br label %2891

; <label>:2876:                                   ; preds = %.lr.ph42.18132
  store i32 7, i32* @blockSize100k, align 4
  br label %2891

; <label>:2877:                                   ; preds = %.lr.ph42.18132
  store i32 6, i32* @blockSize100k, align 4
  br label %2891

; <label>:2878:                                   ; preds = %.lr.ph42.18132
  store i32 5, i32* @blockSize100k, align 4
  br label %2891

; <label>:2879:                                   ; preds = %.lr.ph42.18132
  store i32 4, i32* @blockSize100k, align 4
  br label %2891

; <label>:2880:                                   ; preds = %.lr.ph42.18132
  store i32 3, i32* @blockSize100k, align 4
  br label %2891

; <label>:2881:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @blockSize100k, align 4
  br label %2891

; <label>:2882:                                   ; preds = %.lr.ph42.18132
  store i32 1, i32* @blockSize100k, align 4
  br label %2891

; <label>:2883:                                   ; preds = %.lr.ph42.18132
  store i8 0, i8* @noisy, align 1
  br label %2891

; <label>:2884:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @smallMode, align 1
  br label %2891

; <label>:2885:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @keepInputFiles, align 1
  br label %2891

; <label>:2886:                                   ; preds = %.lr.ph42.18132
  store i32 3, i32* @opMode, align 4
  br label %2891

; <label>:2887:                                   ; preds = %.lr.ph42.18132
  store i8 1, i8* @forceOverwrite, align 1
  br label %2891

; <label>:2888:                                   ; preds = %.lr.ph42.18132
  store i32 1, i32* @opMode, align 4
  br label %2891

; <label>:2889:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @opMode, align 4
  br label %2891

; <label>:2890:                                   ; preds = %.lr.ph42.18132
  store i32 2, i32* @srcMode, align 4
  br label %2891

; <label>:2891:                                   ; preds = %2890, %2889, %2888, %2887, %2886, %2885, %2884, %2883, %2882, %2881, %2880, %2879, %2878, %2877, %2876, %2875, %2874, %2873, %2870
  call void @__loop_iteration_test___4()
  %2892 = load i8*, i8** %157, align 8
  %scevgep2.18133 = getelementptr i8, i8* %2892, i64 2
  %scevgep3.18134 = getelementptr i8, i8* %scevgep2.18133, i64 18
  %2893 = load i8, i8* %scevgep3.18134, align 1
  %2894 = sext i8 %2893 to i32
  %2895 = icmp ne i32 %2894, 0
  br i1 %2895, label %.lr.ph42.19139, label %._crit_edge43.loopexit

.lr.ph42.19139:                                   ; preds = %2891
  call void @unroll_loop(i32 4)
  %2896 = load i8*, i8** %163, align 8
  %scevgep.19137 = getelementptr i8, i8* %2896, i64 1
  %scevgep1.19138 = getelementptr i8, i8* %scevgep.19137, i64 19
  %2897 = load i8, i8* %scevgep1.19138, align 1
  %2898 = sext i8 %2897 to i32
  switch i32 %2898, label %.loopexit1 [
    i32 99, label %2919
    i32 100, label %2918
    i32 122, label %2917
    i32 102, label %2916
    i32 116, label %2915
    i32 107, label %2914
    i32 115, label %2913
    i32 113, label %2912
    i32 49, label %2911
    i32 50, label %2910
    i32 51, label %2909
    i32 52, label %2908
    i32 53, label %2907
    i32 54, label %2906
    i32 55, label %2905
    i32 56, label %2904
    i32 57, label %2903
    i32 86, label %2902
    i32 76, label %2902
    i32 118, label %2899
    i32 104, label %.loopexit2
  ]

; <label>:2899:                                   ; preds = %.lr.ph42.19139
  %2900 = load i32, i32* @verbosity, align 4
  %2901 = add nsw i32 %2900, 1
  store i32 %2901, i32* @verbosity, align 4
  br label %2920

; <label>:2902:                                   ; preds = %.lr.ph42.19139, %.lr.ph42.19139
  call void @license()
  br label %2920

; <label>:2903:                                   ; preds = %.lr.ph42.19139
  store i32 9, i32* @blockSize100k, align 4
  br label %2920

; <label>:2904:                                   ; preds = %.lr.ph42.19139
  store i32 8, i32* @blockSize100k, align 4
  br label %2920

; <label>:2905:                                   ; preds = %.lr.ph42.19139
  store i32 7, i32* @blockSize100k, align 4
  br label %2920

; <label>:2906:                                   ; preds = %.lr.ph42.19139
  store i32 6, i32* @blockSize100k, align 4
  br label %2920

; <label>:2907:                                   ; preds = %.lr.ph42.19139
  store i32 5, i32* @blockSize100k, align 4
  br label %2920

; <label>:2908:                                   ; preds = %.lr.ph42.19139
  store i32 4, i32* @blockSize100k, align 4
  br label %2920

; <label>:2909:                                   ; preds = %.lr.ph42.19139
  store i32 3, i32* @blockSize100k, align 4
  br label %2920

; <label>:2910:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @blockSize100k, align 4
  br label %2920

; <label>:2911:                                   ; preds = %.lr.ph42.19139
  store i32 1, i32* @blockSize100k, align 4
  br label %2920

; <label>:2912:                                   ; preds = %.lr.ph42.19139
  store i8 0, i8* @noisy, align 1
  br label %2920

; <label>:2913:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @smallMode, align 1
  br label %2920

; <label>:2914:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @keepInputFiles, align 1
  br label %2920

; <label>:2915:                                   ; preds = %.lr.ph42.19139
  store i32 3, i32* @opMode, align 4
  br label %2920

; <label>:2916:                                   ; preds = %.lr.ph42.19139
  store i8 1, i8* @forceOverwrite, align 1
  br label %2920

; <label>:2917:                                   ; preds = %.lr.ph42.19139
  store i32 1, i32* @opMode, align 4
  br label %2920

; <label>:2918:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @opMode, align 4
  br label %2920

; <label>:2919:                                   ; preds = %.lr.ph42.19139
  store i32 2, i32* @srcMode, align 4
  br label %2920

; <label>:2920:                                   ; preds = %2919, %2918, %2917, %2916, %2915, %2914, %2913, %2912, %2911, %2910, %2909, %2908, %2907, %2906, %2905, %2904, %2903, %2902, %2899
  call void @__loop_iteration_test___4()
  %2921 = load i8*, i8** %157, align 8
  %scevgep2.19140 = getelementptr i8, i8* %2921, i64 2
  %scevgep3.19141 = getelementptr i8, i8* %scevgep2.19140, i64 19
  %2922 = load i8, i8* %scevgep3.19141, align 1
  %2923 = sext i8 %2922 to i32
  br label %._crit_edge43.loopexit

.lr.ph39.1:                                       ; preds = %370
  call void @unroll_loop(i32 5)
  %2924 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2925 = load i8*, i8** %2924, align 8
  %2926 = getelementptr [10 x i8], [10 x i8]* @56, i64 0, i64 0
  %2927 = getelementptr [3 x i8], [3 x i8]* @57, i64 0, i64 0
  %2928 = call i32 @strcmp(i8* %2926, i8* %2927) #10
  %2929 = icmp eq i32 1, 0
  br i1 false, label %.loopexit.loopexit, label %2930

; <label>:2930:                                   ; preds = %.lr.ph39.1
  %2931 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2932 = load i8*, i8** %2931, align 8
  %2933 = getelementptr [10 x i8], [10 x i8]* @58, i64 0, i64 0
  %2934 = getelementptr [9 x i8], [9 x i8]* @59, i64 0, i64 0
  %2935 = call i32 @strcmp(i8* %2933, i8* %2934) #10
  %2936 = icmp eq i32 1, 0
  br i1 false, label %3073, label %2937

; <label>:2937:                                   ; preds = %2930
  %2938 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2939 = load i8*, i8** %2938, align 8
  %2940 = getelementptr [10 x i8], [10 x i8]* @60, i64 0, i64 0
  %2941 = getelementptr [13 x i8], [13 x i8]* @61, i64 0, i64 0
  %2942 = call i32 @strcmp(i8* %2940, i8* %2941) #10
  %2943 = icmp eq i32 1, 0
  br i1 false, label %3072, label %2944

; <label>:2944:                                   ; preds = %2937
  %2945 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2946 = load i8*, i8** %2945, align 8
  %2947 = getelementptr [10 x i8], [10 x i8]* @62, i64 0, i64 0
  %2948 = getelementptr [11 x i8], [11 x i8]* @63, i64 0, i64 0
  %2949 = call i32 @strcmp(i8* %2947, i8* %2948) #10
  %2950 = icmp eq i32 1, 0
  br i1 false, label %3071, label %2951

; <label>:2951:                                   ; preds = %2944
  %2952 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2953 = load i8*, i8** %2952, align 8
  %2954 = getelementptr [10 x i8], [10 x i8]* @64, i64 0, i64 0
  %2955 = getelementptr [8 x i8], [8 x i8]* @65, i64 0, i64 0
  %2956 = call i32 @strcmp(i8* %2954, i8* %2955) #10
  %2957 = icmp eq i32 1, 0
  br i1 false, label %3070, label %2958

; <label>:2958:                                   ; preds = %2951
  %2959 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2960 = load i8*, i8** %2959, align 8
  %2961 = getelementptr [10 x i8], [10 x i8]* @66, i64 0, i64 0
  %2962 = getelementptr [7 x i8], [7 x i8]* @67, i64 0, i64 0
  %2963 = call i32 @strcmp(i8* %2961, i8* %2962) #10
  %2964 = icmp eq i32 1, 0
  br i1 false, label %3069, label %2965

; <label>:2965:                                   ; preds = %2958
  %2966 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2967 = load i8*, i8** %2966, align 8
  %2968 = getelementptr [10 x i8], [10 x i8]* @68, i64 0, i64 0
  %2969 = getelementptr [7 x i8], [7 x i8]* @69, i64 0, i64 0
  %2970 = call i32 @strcmp(i8* %2968, i8* %2969) #10
  %2971 = icmp eq i32 1, 0
  br i1 false, label %3068, label %2972

; <label>:2972:                                   ; preds = %2965
  %2973 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2974 = load i8*, i8** %2973, align 8
  %2975 = getelementptr [10 x i8], [10 x i8]* @70, i64 0, i64 0
  %2976 = getelementptr [8 x i8], [8 x i8]* @71, i64 0, i64 0
  %2977 = call i32 @strcmp(i8* %2975, i8* %2976) #10
  %2978 = icmp eq i32 1, 0
  br i1 false, label %3067, label %2979

; <label>:2979:                                   ; preds = %2972
  %2980 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2981 = load i8*, i8** %2980, align 8
  %2982 = getelementptr [10 x i8], [10 x i8]* @72, i64 0, i64 0
  %2983 = getelementptr [8 x i8], [8 x i8]* @73, i64 0, i64 0
  %2984 = call i32 @strcmp(i8* %2982, i8* %2983) #10
  %2985 = icmp eq i32 1, 0
  br i1 false, label %3066, label %2986

; <label>:2986:                                   ; preds = %2979
  %2987 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2988 = load i8*, i8** %2987, align 8
  %2989 = getelementptr [10 x i8], [10 x i8]* @74, i64 0, i64 0
  %2990 = getelementptr [10 x i8], [10 x i8]* @75, i64 0, i64 0
  %2991 = call i32 @strcmp(i8* %2989, i8* %2990) #10
  %2992 = icmp eq i32 1, 0
  br i1 false, label %3065, label %2993

; <label>:2993:                                   ; preds = %2986
  %2994 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %2995 = load i8*, i8** %2994, align 8
  %2996 = getelementptr [10 x i8], [10 x i8]* @76, i64 0, i64 0
  %2997 = getelementptr [10 x i8], [10 x i8]* @77, i64 0, i64 0
  %2998 = call i32 @strcmp(i8* %2996, i8* %2997) #10
  %2999 = icmp eq i32 1, 0
  br i1 false, label %3064, label %3000

; <label>:3000:                                   ; preds = %2993
  %3001 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3002 = load i8*, i8** %3001, align 8
  %3003 = getelementptr [10 x i8], [10 x i8]* @78, i64 0, i64 0
  %3004 = getelementptr [14 x i8], [14 x i8]* @79, i64 0, i64 0
  %3005 = call i32 @strcmp(i8* %3003, i8* %3004) #10
  %3006 = icmp eq i32 1, 0
  br i1 false, label %3063, label %3007

; <label>:3007:                                   ; preds = %3000
  %3008 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3009 = load i8*, i8** %3008, align 8
  %3010 = getelementptr [10 x i8], [10 x i8]* @80, i64 0, i64 0
  %3011 = getelementptr [18 x i8], [18 x i8]* @81, i64 0, i64 0
  %3012 = call i32 @strcmp(i8* %3010, i8* %3011) #10
  %3013 = icmp eq i32 1, 0
  %3014 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3015 = load i8*, i8** %3014, align 8
  br i1 false, label %3062, label %3016

; <label>:3016:                                   ; preds = %3007
  %3017 = getelementptr [10 x i8], [10 x i8]* @82, i64 0, i64 0
  %3018 = getelementptr [18 x i8], [18 x i8]* @83, i64 0, i64 0
  %3019 = call i32 @strcmp(i8* %3017, i8* %3018) #10
  %3020 = icmp eq i32 1, 0
  %3021 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3022 = load i8*, i8** %3021, align 8
  br i1 false, label %3061, label %3023

; <label>:3023:                                   ; preds = %3016
  %3024 = getelementptr [10 x i8], [10 x i8]* @84, i64 0, i64 0
  %3025 = getelementptr [7 x i8], [7 x i8]* @85, i64 0, i64 0
  %3026 = call i32 @strcmp(i8* %3024, i8* %3025) #10
  %3027 = icmp eq i32 1, 0
  br i1 false, label %3060, label %3028

; <label>:3028:                                   ; preds = %3023
  %3029 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3030 = load i8*, i8** %3029, align 8
  %3031 = getelementptr [10 x i8], [10 x i8]* @86, i64 0, i64 0
  %3032 = getelementptr [7 x i8], [7 x i8]* @87, i64 0, i64 0
  %3033 = call i32 @strcmp(i8* %3031, i8* %3032) #10
  %3034 = icmp eq i32 1, 0
  br i1 false, label %3059, label %3035

; <label>:3035:                                   ; preds = %3028
  %3036 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3037 = load i8*, i8** %3036, align 8
  %3038 = getelementptr [10 x i8], [10 x i8]* @88, i64 0, i64 0
  %3039 = getelementptr [10 x i8], [10 x i8]* @89, i64 0, i64 0
  %3040 = call i32 @strcmp(i8* %3038, i8* %3039) #10
  %3041 = icmp eq i32 1, 0
  br i1 false, label %3056, label %3042

; <label>:3042:                                   ; preds = %3035
  %3043 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3044 = load i8*, i8** %3043, align 8
  %3045 = getelementptr [10 x i8], [10 x i8]* @90, i64 0, i64 0
  %3046 = getelementptr [7 x i8], [7 x i8]* @91, i64 0, i64 0
  %3047 = call i32 @strcmp(i8* %3045, i8* %3046) #10
  %3048 = icmp eq i32 1, 0
  br i1 false, label %353, label %3049

; <label>:3049:                                   ; preds = %3042
  %3050 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 0
  %3051 = load i8*, i8** %3050, align 8
  %3052 = getelementptr [10 x i8], [10 x i8]* @92, i64 0, i64 0
  %3053 = getelementptr [3 x i8], [3 x i8]* @93, i64 0, i64 0
  %3054 = call i32 @strncmp(i8* %3052, i8* %3053, i64 2) #10
  %3055 = icmp eq i32 1, 0
  br i1 false, label %362, label %3074

; <label>:3056:                                   ; preds = %3035
  %3057 = load i32, i32* @verbosity, align 4
  %3058 = add nsw i32 %3057, 1
  store i32 %3058, i32* @verbosity, align 4
  br label %3074

; <label>:3059:                                   ; preds = %3028
  store i32 9, i32* @blockSize100k, align 4
  br label %3074

; <label>:3060:                                   ; preds = %3023
  store i32 1, i32* @blockSize100k, align 4
  br label %3074

; <label>:3061:                                   ; preds = %3016
  call void @redundant(i8* %3022)
  br label %3074

; <label>:3062:                                   ; preds = %3007
  call void @redundant(i8* %3015)
  br label %3074

; <label>:3063:                                   ; preds = %3000
  store i32 1, i32* @workFactor, align 4
  br label %3074

; <label>:3064:                                   ; preds = %2993
  call void @license()
  br label %3074

; <label>:3065:                                   ; preds = %2986
  call void @license()
  br label %3074

; <label>:3066:                                   ; preds = %2979
  store i8 0, i8* @noisy, align 1
  br label %3074

; <label>:3067:                                   ; preds = %2972
  store i8 1, i8* @smallMode, align 1
  br label %3074

; <label>:3068:                                   ; preds = %2965
  store i8 1, i8* @keepInputFiles, align 1
  br label %3074

; <label>:3069:                                   ; preds = %2958
  store i32 3, i32* @opMode, align 4
  br label %3074

; <label>:3070:                                   ; preds = %2951
  store i8 1, i8* @forceOverwrite, align 1
  br label %3074

; <label>:3071:                                   ; preds = %2944
  store i32 1, i32* @opMode, align 4
  br label %3074

; <label>:3072:                                   ; preds = %2937
  store i32 2, i32* @opMode, align 4
  br label %3074

; <label>:3073:                                   ; preds = %2930
  store i32 2, i32* @srcMode, align 4
  br label %3074

; <label>:3074:                                   ; preds = %3073, %3072, %3071, %3070, %3069, %3068, %3067, %3066, %3065, %3064, %3063, %3062, %3061, %3060, %3059, %3056, %3049
  call void @__loop_iteration_test___5()
  %3075 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %372, i32 0, i32 1
  %3076 = load %struct.zzzz*, %struct.zzzz** %3075, align 8
  %3077 = icmp ne i64 0, 0
  %3078 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph39.2, label %.loopexit.loopexit

.lr.ph39.2:                                       ; preds = %3074
  call void @unroll_loop(i32 5)
  %3079 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3080 = load i8*, i8** %3079, align 8
  %3081 = call i32 @strcmp(i8* %3080, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3082 = icmp eq i32 %3081, 0
  br i1 %3082, label %.loopexit.loopexit, label %3083

; <label>:3083:                                   ; preds = %.lr.ph39.2
  %3084 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3085 = load i8*, i8** %3084, align 8
  %3086 = call i32 @strcmp(i8* %3085, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3087 = icmp eq i32 %3086, 0
  br i1 %3087, label %3190, label %3088

; <label>:3088:                                   ; preds = %3083
  %3089 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3090 = load i8*, i8** %3089, align 8
  %3091 = call i32 @strcmp(i8* %3090, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3092 = icmp eq i32 %3091, 0
  br i1 %3092, label %3189, label %3093

; <label>:3093:                                   ; preds = %3088
  %3094 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3095 = load i8*, i8** %3094, align 8
  %3096 = call i32 @strcmp(i8* %3095, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3097 = icmp eq i32 %3096, 0
  br i1 %3097, label %3188, label %3098

; <label>:3098:                                   ; preds = %3093
  %3099 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3100 = load i8*, i8** %3099, align 8
  %3101 = call i32 @strcmp(i8* %3100, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3102 = icmp eq i32 %3101, 0
  br i1 %3102, label %3187, label %3103

; <label>:3103:                                   ; preds = %3098
  %3104 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3105 = load i8*, i8** %3104, align 8
  %3106 = call i32 @strcmp(i8* %3105, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3107 = icmp eq i32 %3106, 0
  br i1 %3107, label %3186, label %3108

; <label>:3108:                                   ; preds = %3103
  %3109 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3110 = load i8*, i8** %3109, align 8
  %3111 = call i32 @strcmp(i8* %3110, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3112 = icmp eq i32 %3111, 0
  br i1 %3112, label %3185, label %3113

; <label>:3113:                                   ; preds = %3108
  %3114 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3115 = load i8*, i8** %3114, align 8
  %3116 = call i32 @strcmp(i8* %3115, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3117 = icmp eq i32 %3116, 0
  br i1 %3117, label %3184, label %3118

; <label>:3118:                                   ; preds = %3113
  %3119 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3120 = load i8*, i8** %3119, align 8
  %3121 = call i32 @strcmp(i8* %3120, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3122 = icmp eq i32 %3121, 0
  br i1 %3122, label %3183, label %3123

; <label>:3123:                                   ; preds = %3118
  %3124 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3125 = load i8*, i8** %3124, align 8
  %3126 = call i32 @strcmp(i8* %3125, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3127 = icmp eq i32 %3126, 0
  br i1 %3127, label %3182, label %3128

; <label>:3128:                                   ; preds = %3123
  %3129 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3130 = load i8*, i8** %3129, align 8
  %3131 = call i32 @strcmp(i8* %3130, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3132 = icmp eq i32 %3131, 0
  br i1 %3132, label %3181, label %3133

; <label>:3133:                                   ; preds = %3128
  %3134 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3135 = load i8*, i8** %3134, align 8
  %3136 = call i32 @strcmp(i8* %3135, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3137 = icmp eq i32 %3136, 0
  br i1 %3137, label %3180, label %3138

; <label>:3138:                                   ; preds = %3133
  %3139 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3140 = load i8*, i8** %3139, align 8
  %3141 = call i32 @strcmp(i8* %3140, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3142 = icmp eq i32 %3141, 0
  %3143 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3144 = load i8*, i8** %3143, align 8
  br i1 %3142, label %3179, label %3145

; <label>:3145:                                   ; preds = %3138
  %3146 = call i32 @strcmp(i8* %3144, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3147 = icmp eq i32 %3146, 0
  %3148 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3149 = load i8*, i8** %3148, align 8
  br i1 %3147, label %3178, label %3150

; <label>:3150:                                   ; preds = %3145
  %3151 = call i32 @strcmp(i8* %3149, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3152 = icmp eq i32 %3151, 0
  br i1 %3152, label %3177, label %3153

; <label>:3153:                                   ; preds = %3150
  %3154 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3155 = load i8*, i8** %3154, align 8
  %3156 = call i32 @strcmp(i8* %3155, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3157 = icmp eq i32 %3156, 0
  br i1 %3157, label %3176, label %3158

; <label>:3158:                                   ; preds = %3153
  %3159 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3160 = load i8*, i8** %3159, align 8
  %3161 = call i32 @strcmp(i8* %3160, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3162 = icmp eq i32 %3161, 0
  br i1 %3162, label %3173, label %3163

; <label>:3163:                                   ; preds = %3158
  %3164 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3165 = load i8*, i8** %3164, align 8
  %3166 = call i32 @strcmp(i8* %3165, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3167 = icmp eq i32 %3166, 0
  br i1 %3167, label %353, label %3168

; <label>:3168:                                   ; preds = %3163
  %3169 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %3170 = load i8*, i8** %3169, align 8
  %3171 = call i32 @strncmp(i8* %3170, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3172 = icmp eq i32 %3171, 0
  br i1 %3172, label %362, label %3191

; <label>:3173:                                   ; preds = %3158
  %3174 = load i32, i32* @verbosity, align 4
  %3175 = add nsw i32 %3174, 1
  store i32 %3175, i32* @verbosity, align 4
  br label %3191

; <label>:3176:                                   ; preds = %3153
  store i32 9, i32* @blockSize100k, align 4
  br label %3191

; <label>:3177:                                   ; preds = %3150
  store i32 1, i32* @blockSize100k, align 4
  br label %3191

; <label>:3178:                                   ; preds = %3145
  call void @redundant(i8* %3149)
  br label %3191

; <label>:3179:                                   ; preds = %3138
  call void @redundant(i8* %3144)
  br label %3191

; <label>:3180:                                   ; preds = %3133
  store i32 1, i32* @workFactor, align 4
  br label %3191

; <label>:3181:                                   ; preds = %3128
  call void @license()
  br label %3191

; <label>:3182:                                   ; preds = %3123
  call void @license()
  br label %3191

; <label>:3183:                                   ; preds = %3118
  store i8 0, i8* @noisy, align 1
  br label %3191

; <label>:3184:                                   ; preds = %3113
  store i8 1, i8* @smallMode, align 1
  br label %3191

; <label>:3185:                                   ; preds = %3108
  store i8 1, i8* @keepInputFiles, align 1
  br label %3191

; <label>:3186:                                   ; preds = %3103
  store i32 3, i32* @opMode, align 4
  br label %3191

; <label>:3187:                                   ; preds = %3098
  store i8 1, i8* @forceOverwrite, align 1
  br label %3191

; <label>:3188:                                   ; preds = %3093
  store i32 1, i32* @opMode, align 4
  br label %3191

; <label>:3189:                                   ; preds = %3088
  store i32 2, i32* @opMode, align 4
  br label %3191

; <label>:3190:                                   ; preds = %3083
  store i32 2, i32* @srcMode, align 4
  br label %3191

; <label>:3191:                                   ; preds = %3190, %3189, %3188, %3187, %3186, %3185, %3184, %3183, %3182, %3181, %3180, %3179, %3178, %3177, %3176, %3173, %3168
  call void @__loop_iteration_test___5()
  %3192 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %3193 = load %struct.zzzz*, %struct.zzzz** %3192, align 8
  %3194 = icmp ne %struct.zzzz* %3193, null
  br i1 %3194, label %.lr.ph39.3, label %.loopexit.loopexit

.lr.ph39.3:                                       ; preds = %3191
  call void @unroll_loop(i32 5)
  %3195 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3196 = load i8*, i8** %3195, align 8
  %3197 = call i32 @strcmp(i8* %3196, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3198 = icmp eq i32 %3197, 0
  br i1 %3198, label %.loopexit.loopexit, label %3199

; <label>:3199:                                   ; preds = %.lr.ph39.3
  %3200 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3201 = load i8*, i8** %3200, align 8
  %3202 = call i32 @strcmp(i8* %3201, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3203 = icmp eq i32 %3202, 0
  br i1 %3203, label %3306, label %3204

; <label>:3204:                                   ; preds = %3199
  %3205 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3206 = load i8*, i8** %3205, align 8
  %3207 = call i32 @strcmp(i8* %3206, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3208 = icmp eq i32 %3207, 0
  br i1 %3208, label %3305, label %3209

; <label>:3209:                                   ; preds = %3204
  %3210 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3211 = load i8*, i8** %3210, align 8
  %3212 = call i32 @strcmp(i8* %3211, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3213 = icmp eq i32 %3212, 0
  br i1 %3213, label %3304, label %3214

; <label>:3214:                                   ; preds = %3209
  %3215 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3216 = load i8*, i8** %3215, align 8
  %3217 = call i32 @strcmp(i8* %3216, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3218 = icmp eq i32 %3217, 0
  br i1 %3218, label %3303, label %3219

; <label>:3219:                                   ; preds = %3214
  %3220 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3221 = load i8*, i8** %3220, align 8
  %3222 = call i32 @strcmp(i8* %3221, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3223 = icmp eq i32 %3222, 0
  br i1 %3223, label %3302, label %3224

; <label>:3224:                                   ; preds = %3219
  %3225 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3226 = load i8*, i8** %3225, align 8
  %3227 = call i32 @strcmp(i8* %3226, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3228 = icmp eq i32 %3227, 0
  br i1 %3228, label %3301, label %3229

; <label>:3229:                                   ; preds = %3224
  %3230 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3231 = load i8*, i8** %3230, align 8
  %3232 = call i32 @strcmp(i8* %3231, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3233 = icmp eq i32 %3232, 0
  br i1 %3233, label %3300, label %3234

; <label>:3234:                                   ; preds = %3229
  %3235 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3236 = load i8*, i8** %3235, align 8
  %3237 = call i32 @strcmp(i8* %3236, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3238 = icmp eq i32 %3237, 0
  br i1 %3238, label %3299, label %3239

; <label>:3239:                                   ; preds = %3234
  %3240 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3241 = load i8*, i8** %3240, align 8
  %3242 = call i32 @strcmp(i8* %3241, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3243 = icmp eq i32 %3242, 0
  br i1 %3243, label %3298, label %3244

; <label>:3244:                                   ; preds = %3239
  %3245 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3246 = load i8*, i8** %3245, align 8
  %3247 = call i32 @strcmp(i8* %3246, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3248 = icmp eq i32 %3247, 0
  br i1 %3248, label %3297, label %3249

; <label>:3249:                                   ; preds = %3244
  %3250 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3251 = load i8*, i8** %3250, align 8
  %3252 = call i32 @strcmp(i8* %3251, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3253 = icmp eq i32 %3252, 0
  br i1 %3253, label %3296, label %3254

; <label>:3254:                                   ; preds = %3249
  %3255 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3256 = load i8*, i8** %3255, align 8
  %3257 = call i32 @strcmp(i8* %3256, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3258 = icmp eq i32 %3257, 0
  %3259 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3260 = load i8*, i8** %3259, align 8
  br i1 %3258, label %3295, label %3261

; <label>:3261:                                   ; preds = %3254
  %3262 = call i32 @strcmp(i8* %3260, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3263 = icmp eq i32 %3262, 0
  %3264 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3265 = load i8*, i8** %3264, align 8
  br i1 %3263, label %3294, label %3266

; <label>:3266:                                   ; preds = %3261
  %3267 = call i32 @strcmp(i8* %3265, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3268 = icmp eq i32 %3267, 0
  br i1 %3268, label %3293, label %3269

; <label>:3269:                                   ; preds = %3266
  %3270 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3271 = load i8*, i8** %3270, align 8
  %3272 = call i32 @strcmp(i8* %3271, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3273 = icmp eq i32 %3272, 0
  br i1 %3273, label %3292, label %3274

; <label>:3274:                                   ; preds = %3269
  %3275 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3276 = load i8*, i8** %3275, align 8
  %3277 = call i32 @strcmp(i8* %3276, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3278 = icmp eq i32 %3277, 0
  br i1 %3278, label %3289, label %3279

; <label>:3279:                                   ; preds = %3274
  %3280 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3281 = load i8*, i8** %3280, align 8
  %3282 = call i32 @strcmp(i8* %3281, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3283 = icmp eq i32 %3282, 0
  br i1 %3283, label %353, label %3284

; <label>:3284:                                   ; preds = %3279
  %3285 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 0
  %3286 = load i8*, i8** %3285, align 8
  %3287 = call i32 @strncmp(i8* %3286, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3288 = icmp eq i32 %3287, 0
  br i1 %3288, label %362, label %3307

; <label>:3289:                                   ; preds = %3274
  %3290 = load i32, i32* @verbosity, align 4
  %3291 = add nsw i32 %3290, 1
  store i32 %3291, i32* @verbosity, align 4
  br label %3307

; <label>:3292:                                   ; preds = %3269
  store i32 9, i32* @blockSize100k, align 4
  br label %3307

; <label>:3293:                                   ; preds = %3266
  store i32 1, i32* @blockSize100k, align 4
  br label %3307

; <label>:3294:                                   ; preds = %3261
  call void @redundant(i8* %3265)
  br label %3307

; <label>:3295:                                   ; preds = %3254
  call void @redundant(i8* %3260)
  br label %3307

; <label>:3296:                                   ; preds = %3249
  store i32 1, i32* @workFactor, align 4
  br label %3307

; <label>:3297:                                   ; preds = %3244
  call void @license()
  br label %3307

; <label>:3298:                                   ; preds = %3239
  call void @license()
  br label %3307

; <label>:3299:                                   ; preds = %3234
  store i8 0, i8* @noisy, align 1
  br label %3307

; <label>:3300:                                   ; preds = %3229
  store i8 1, i8* @smallMode, align 1
  br label %3307

; <label>:3301:                                   ; preds = %3224
  store i8 1, i8* @keepInputFiles, align 1
  br label %3307

; <label>:3302:                                   ; preds = %3219
  store i32 3, i32* @opMode, align 4
  br label %3307

; <label>:3303:                                   ; preds = %3214
  store i8 1, i8* @forceOverwrite, align 1
  br label %3307

; <label>:3304:                                   ; preds = %3209
  store i32 1, i32* @opMode, align 4
  br label %3307

; <label>:3305:                                   ; preds = %3204
  store i32 2, i32* @opMode, align 4
  br label %3307

; <label>:3306:                                   ; preds = %3199
  store i32 2, i32* @srcMode, align 4
  br label %3307

; <label>:3307:                                   ; preds = %3306, %3305, %3304, %3303, %3302, %3301, %3300, %3299, %3298, %3297, %3296, %3295, %3294, %3293, %3292, %3289, %3284
  call void @__loop_iteration_test___5()
  %3308 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3193, i32 0, i32 1
  %3309 = load %struct.zzzz*, %struct.zzzz** %3308, align 8
  %3310 = icmp ne %struct.zzzz* %3309, null
  br i1 %3310, label %.lr.ph39.4, label %.loopexit.loopexit

.lr.ph39.4:                                       ; preds = %3307
  call void @unroll_loop(i32 5)
  %3311 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3312 = load i8*, i8** %3311, align 8
  %3313 = call i32 @strcmp(i8* %3312, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3314 = icmp eq i32 %3313, 0
  br i1 %3314, label %.loopexit.loopexit, label %3315

; <label>:3315:                                   ; preds = %.lr.ph39.4
  %3316 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3317 = load i8*, i8** %3316, align 8
  %3318 = call i32 @strcmp(i8* %3317, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3319 = icmp eq i32 %3318, 0
  br i1 %3319, label %3422, label %3320

; <label>:3320:                                   ; preds = %3315
  %3321 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3322 = load i8*, i8** %3321, align 8
  %3323 = call i32 @strcmp(i8* %3322, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3324 = icmp eq i32 %3323, 0
  br i1 %3324, label %3421, label %3325

; <label>:3325:                                   ; preds = %3320
  %3326 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3327 = load i8*, i8** %3326, align 8
  %3328 = call i32 @strcmp(i8* %3327, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3329 = icmp eq i32 %3328, 0
  br i1 %3329, label %3420, label %3330

; <label>:3330:                                   ; preds = %3325
  %3331 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3332 = load i8*, i8** %3331, align 8
  %3333 = call i32 @strcmp(i8* %3332, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3334 = icmp eq i32 %3333, 0
  br i1 %3334, label %3419, label %3335

; <label>:3335:                                   ; preds = %3330
  %3336 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3337 = load i8*, i8** %3336, align 8
  %3338 = call i32 @strcmp(i8* %3337, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3339 = icmp eq i32 %3338, 0
  br i1 %3339, label %3418, label %3340

; <label>:3340:                                   ; preds = %3335
  %3341 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3342 = load i8*, i8** %3341, align 8
  %3343 = call i32 @strcmp(i8* %3342, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3344 = icmp eq i32 %3343, 0
  br i1 %3344, label %3417, label %3345

; <label>:3345:                                   ; preds = %3340
  %3346 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3347 = load i8*, i8** %3346, align 8
  %3348 = call i32 @strcmp(i8* %3347, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3349 = icmp eq i32 %3348, 0
  br i1 %3349, label %3416, label %3350

; <label>:3350:                                   ; preds = %3345
  %3351 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3352 = load i8*, i8** %3351, align 8
  %3353 = call i32 @strcmp(i8* %3352, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3354 = icmp eq i32 %3353, 0
  br i1 %3354, label %3415, label %3355

; <label>:3355:                                   ; preds = %3350
  %3356 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3357 = load i8*, i8** %3356, align 8
  %3358 = call i32 @strcmp(i8* %3357, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3359 = icmp eq i32 %3358, 0
  br i1 %3359, label %3414, label %3360

; <label>:3360:                                   ; preds = %3355
  %3361 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3362 = load i8*, i8** %3361, align 8
  %3363 = call i32 @strcmp(i8* %3362, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3364 = icmp eq i32 %3363, 0
  br i1 %3364, label %3413, label %3365

; <label>:3365:                                   ; preds = %3360
  %3366 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3367 = load i8*, i8** %3366, align 8
  %3368 = call i32 @strcmp(i8* %3367, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3369 = icmp eq i32 %3368, 0
  br i1 %3369, label %3412, label %3370

; <label>:3370:                                   ; preds = %3365
  %3371 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3372 = load i8*, i8** %3371, align 8
  %3373 = call i32 @strcmp(i8* %3372, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3374 = icmp eq i32 %3373, 0
  %3375 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3376 = load i8*, i8** %3375, align 8
  br i1 %3374, label %3411, label %3377

; <label>:3377:                                   ; preds = %3370
  %3378 = call i32 @strcmp(i8* %3376, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3379 = icmp eq i32 %3378, 0
  %3380 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3381 = load i8*, i8** %3380, align 8
  br i1 %3379, label %3410, label %3382

; <label>:3382:                                   ; preds = %3377
  %3383 = call i32 @strcmp(i8* %3381, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3384 = icmp eq i32 %3383, 0
  br i1 %3384, label %3409, label %3385

; <label>:3385:                                   ; preds = %3382
  %3386 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3387 = load i8*, i8** %3386, align 8
  %3388 = call i32 @strcmp(i8* %3387, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3389 = icmp eq i32 %3388, 0
  br i1 %3389, label %3408, label %3390

; <label>:3390:                                   ; preds = %3385
  %3391 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3392 = load i8*, i8** %3391, align 8
  %3393 = call i32 @strcmp(i8* %3392, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3394 = icmp eq i32 %3393, 0
  br i1 %3394, label %3405, label %3395

; <label>:3395:                                   ; preds = %3390
  %3396 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3397 = load i8*, i8** %3396, align 8
  %3398 = call i32 @strcmp(i8* %3397, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3399 = icmp eq i32 %3398, 0
  br i1 %3399, label %353, label %3400

; <label>:3400:                                   ; preds = %3395
  %3401 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 0
  %3402 = load i8*, i8** %3401, align 8
  %3403 = call i32 @strncmp(i8* %3402, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3404 = icmp eq i32 %3403, 0
  br i1 %3404, label %362, label %3423

; <label>:3405:                                   ; preds = %3390
  %3406 = load i32, i32* @verbosity, align 4
  %3407 = add nsw i32 %3406, 1
  store i32 %3407, i32* @verbosity, align 4
  br label %3423

; <label>:3408:                                   ; preds = %3385
  store i32 9, i32* @blockSize100k, align 4
  br label %3423

; <label>:3409:                                   ; preds = %3382
  store i32 1, i32* @blockSize100k, align 4
  br label %3423

; <label>:3410:                                   ; preds = %3377
  call void @redundant(i8* %3381)
  br label %3423

; <label>:3411:                                   ; preds = %3370
  call void @redundant(i8* %3376)
  br label %3423

; <label>:3412:                                   ; preds = %3365
  store i32 1, i32* @workFactor, align 4
  br label %3423

; <label>:3413:                                   ; preds = %3360
  call void @license()
  br label %3423

; <label>:3414:                                   ; preds = %3355
  call void @license()
  br label %3423

; <label>:3415:                                   ; preds = %3350
  store i8 0, i8* @noisy, align 1
  br label %3423

; <label>:3416:                                   ; preds = %3345
  store i8 1, i8* @smallMode, align 1
  br label %3423

; <label>:3417:                                   ; preds = %3340
  store i8 1, i8* @keepInputFiles, align 1
  br label %3423

; <label>:3418:                                   ; preds = %3335
  store i32 3, i32* @opMode, align 4
  br label %3423

; <label>:3419:                                   ; preds = %3330
  store i8 1, i8* @forceOverwrite, align 1
  br label %3423

; <label>:3420:                                   ; preds = %3325
  store i32 1, i32* @opMode, align 4
  br label %3423

; <label>:3421:                                   ; preds = %3320
  store i32 2, i32* @opMode, align 4
  br label %3423

; <label>:3422:                                   ; preds = %3315
  store i32 2, i32* @srcMode, align 4
  br label %3423

; <label>:3423:                                   ; preds = %3422, %3421, %3420, %3419, %3418, %3417, %3416, %3415, %3414, %3413, %3412, %3411, %3410, %3409, %3408, %3405, %3400
  call void @__loop_iteration_test___5()
  %3424 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3309, i32 0, i32 1
  %3425 = load %struct.zzzz*, %struct.zzzz** %3424, align 8
  %3426 = icmp ne %struct.zzzz* %3425, null
  br i1 %3426, label %.lr.ph39.5, label %.loopexit.loopexit

.lr.ph39.5:                                       ; preds = %3423
  call void @unroll_loop(i32 5)
  %3427 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3428 = load i8*, i8** %3427, align 8
  %3429 = call i32 @strcmp(i8* %3428, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3430 = icmp eq i32 %3429, 0
  br i1 %3430, label %.loopexit.loopexit, label %3431

; <label>:3431:                                   ; preds = %.lr.ph39.5
  %3432 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3433 = load i8*, i8** %3432, align 8
  %3434 = call i32 @strcmp(i8* %3433, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3435 = icmp eq i32 %3434, 0
  br i1 %3435, label %3538, label %3436

; <label>:3436:                                   ; preds = %3431
  %3437 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3438 = load i8*, i8** %3437, align 8
  %3439 = call i32 @strcmp(i8* %3438, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3440 = icmp eq i32 %3439, 0
  br i1 %3440, label %3537, label %3441

; <label>:3441:                                   ; preds = %3436
  %3442 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3443 = load i8*, i8** %3442, align 8
  %3444 = call i32 @strcmp(i8* %3443, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3445 = icmp eq i32 %3444, 0
  br i1 %3445, label %3536, label %3446

; <label>:3446:                                   ; preds = %3441
  %3447 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3448 = load i8*, i8** %3447, align 8
  %3449 = call i32 @strcmp(i8* %3448, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3450 = icmp eq i32 %3449, 0
  br i1 %3450, label %3535, label %3451

; <label>:3451:                                   ; preds = %3446
  %3452 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3453 = load i8*, i8** %3452, align 8
  %3454 = call i32 @strcmp(i8* %3453, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3455 = icmp eq i32 %3454, 0
  br i1 %3455, label %3534, label %3456

; <label>:3456:                                   ; preds = %3451
  %3457 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3458 = load i8*, i8** %3457, align 8
  %3459 = call i32 @strcmp(i8* %3458, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3460 = icmp eq i32 %3459, 0
  br i1 %3460, label %3533, label %3461

; <label>:3461:                                   ; preds = %3456
  %3462 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3463 = load i8*, i8** %3462, align 8
  %3464 = call i32 @strcmp(i8* %3463, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3465 = icmp eq i32 %3464, 0
  br i1 %3465, label %3532, label %3466

; <label>:3466:                                   ; preds = %3461
  %3467 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3468 = load i8*, i8** %3467, align 8
  %3469 = call i32 @strcmp(i8* %3468, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3470 = icmp eq i32 %3469, 0
  br i1 %3470, label %3531, label %3471

; <label>:3471:                                   ; preds = %3466
  %3472 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3473 = load i8*, i8** %3472, align 8
  %3474 = call i32 @strcmp(i8* %3473, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3475 = icmp eq i32 %3474, 0
  br i1 %3475, label %3530, label %3476

; <label>:3476:                                   ; preds = %3471
  %3477 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3478 = load i8*, i8** %3477, align 8
  %3479 = call i32 @strcmp(i8* %3478, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3480 = icmp eq i32 %3479, 0
  br i1 %3480, label %3529, label %3481

; <label>:3481:                                   ; preds = %3476
  %3482 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3483 = load i8*, i8** %3482, align 8
  %3484 = call i32 @strcmp(i8* %3483, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3485 = icmp eq i32 %3484, 0
  br i1 %3485, label %3528, label %3486

; <label>:3486:                                   ; preds = %3481
  %3487 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3488 = load i8*, i8** %3487, align 8
  %3489 = call i32 @strcmp(i8* %3488, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3490 = icmp eq i32 %3489, 0
  %3491 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3492 = load i8*, i8** %3491, align 8
  br i1 %3490, label %3527, label %3493

; <label>:3493:                                   ; preds = %3486
  %3494 = call i32 @strcmp(i8* %3492, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3495 = icmp eq i32 %3494, 0
  %3496 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3497 = load i8*, i8** %3496, align 8
  br i1 %3495, label %3526, label %3498

; <label>:3498:                                   ; preds = %3493
  %3499 = call i32 @strcmp(i8* %3497, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3500 = icmp eq i32 %3499, 0
  br i1 %3500, label %3525, label %3501

; <label>:3501:                                   ; preds = %3498
  %3502 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3503 = load i8*, i8** %3502, align 8
  %3504 = call i32 @strcmp(i8* %3503, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3505 = icmp eq i32 %3504, 0
  br i1 %3505, label %3524, label %3506

; <label>:3506:                                   ; preds = %3501
  %3507 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3508 = load i8*, i8** %3507, align 8
  %3509 = call i32 @strcmp(i8* %3508, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3510 = icmp eq i32 %3509, 0
  br i1 %3510, label %3521, label %3511

; <label>:3511:                                   ; preds = %3506
  %3512 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3513 = load i8*, i8** %3512, align 8
  %3514 = call i32 @strcmp(i8* %3513, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3515 = icmp eq i32 %3514, 0
  br i1 %3515, label %353, label %3516

; <label>:3516:                                   ; preds = %3511
  %3517 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 0
  %3518 = load i8*, i8** %3517, align 8
  %3519 = call i32 @strncmp(i8* %3518, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3520 = icmp eq i32 %3519, 0
  br i1 %3520, label %362, label %3539

; <label>:3521:                                   ; preds = %3506
  %3522 = load i32, i32* @verbosity, align 4
  %3523 = add nsw i32 %3522, 1
  store i32 %3523, i32* @verbosity, align 4
  br label %3539

; <label>:3524:                                   ; preds = %3501
  store i32 9, i32* @blockSize100k, align 4
  br label %3539

; <label>:3525:                                   ; preds = %3498
  store i32 1, i32* @blockSize100k, align 4
  br label %3539

; <label>:3526:                                   ; preds = %3493
  call void @redundant(i8* %3497)
  br label %3539

; <label>:3527:                                   ; preds = %3486
  call void @redundant(i8* %3492)
  br label %3539

; <label>:3528:                                   ; preds = %3481
  store i32 1, i32* @workFactor, align 4
  br label %3539

; <label>:3529:                                   ; preds = %3476
  call void @license()
  br label %3539

; <label>:3530:                                   ; preds = %3471
  call void @license()
  br label %3539

; <label>:3531:                                   ; preds = %3466
  store i8 0, i8* @noisy, align 1
  br label %3539

; <label>:3532:                                   ; preds = %3461
  store i8 1, i8* @smallMode, align 1
  br label %3539

; <label>:3533:                                   ; preds = %3456
  store i8 1, i8* @keepInputFiles, align 1
  br label %3539

; <label>:3534:                                   ; preds = %3451
  store i32 3, i32* @opMode, align 4
  br label %3539

; <label>:3535:                                   ; preds = %3446
  store i8 1, i8* @forceOverwrite, align 1
  br label %3539

; <label>:3536:                                   ; preds = %3441
  store i32 1, i32* @opMode, align 4
  br label %3539

; <label>:3537:                                   ; preds = %3436
  store i32 2, i32* @opMode, align 4
  br label %3539

; <label>:3538:                                   ; preds = %3431
  store i32 2, i32* @srcMode, align 4
  br label %3539

; <label>:3539:                                   ; preds = %3538, %3537, %3536, %3535, %3534, %3533, %3532, %3531, %3530, %3529, %3528, %3527, %3526, %3525, %3524, %3521, %3516
  call void @__loop_iteration_test___5()
  %3540 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3425, i32 0, i32 1
  %3541 = load %struct.zzzz*, %struct.zzzz** %3540, align 8
  %3542 = icmp ne %struct.zzzz* %3541, null
  br i1 %3542, label %.lr.ph39.6, label %.loopexit.loopexit

.lr.ph39.6:                                       ; preds = %3539
  call void @unroll_loop(i32 5)
  %3543 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3544 = load i8*, i8** %3543, align 8
  %3545 = call i32 @strcmp(i8* %3544, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3546 = icmp eq i32 %3545, 0
  br i1 %3546, label %.loopexit.loopexit, label %3547

; <label>:3547:                                   ; preds = %.lr.ph39.6
  %3548 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3549 = load i8*, i8** %3548, align 8
  %3550 = call i32 @strcmp(i8* %3549, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3551 = icmp eq i32 %3550, 0
  br i1 %3551, label %3654, label %3552

; <label>:3552:                                   ; preds = %3547
  %3553 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3554 = load i8*, i8** %3553, align 8
  %3555 = call i32 @strcmp(i8* %3554, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3556 = icmp eq i32 %3555, 0
  br i1 %3556, label %3653, label %3557

; <label>:3557:                                   ; preds = %3552
  %3558 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3559 = load i8*, i8** %3558, align 8
  %3560 = call i32 @strcmp(i8* %3559, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3561 = icmp eq i32 %3560, 0
  br i1 %3561, label %3652, label %3562

; <label>:3562:                                   ; preds = %3557
  %3563 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3564 = load i8*, i8** %3563, align 8
  %3565 = call i32 @strcmp(i8* %3564, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3566 = icmp eq i32 %3565, 0
  br i1 %3566, label %3651, label %3567

; <label>:3567:                                   ; preds = %3562
  %3568 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3569 = load i8*, i8** %3568, align 8
  %3570 = call i32 @strcmp(i8* %3569, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3571 = icmp eq i32 %3570, 0
  br i1 %3571, label %3650, label %3572

; <label>:3572:                                   ; preds = %3567
  %3573 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3574 = load i8*, i8** %3573, align 8
  %3575 = call i32 @strcmp(i8* %3574, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3576 = icmp eq i32 %3575, 0
  br i1 %3576, label %3649, label %3577

; <label>:3577:                                   ; preds = %3572
  %3578 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3579 = load i8*, i8** %3578, align 8
  %3580 = call i32 @strcmp(i8* %3579, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3581 = icmp eq i32 %3580, 0
  br i1 %3581, label %3648, label %3582

; <label>:3582:                                   ; preds = %3577
  %3583 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3584 = load i8*, i8** %3583, align 8
  %3585 = call i32 @strcmp(i8* %3584, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3586 = icmp eq i32 %3585, 0
  br i1 %3586, label %3647, label %3587

; <label>:3587:                                   ; preds = %3582
  %3588 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3589 = load i8*, i8** %3588, align 8
  %3590 = call i32 @strcmp(i8* %3589, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3591 = icmp eq i32 %3590, 0
  br i1 %3591, label %3646, label %3592

; <label>:3592:                                   ; preds = %3587
  %3593 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3594 = load i8*, i8** %3593, align 8
  %3595 = call i32 @strcmp(i8* %3594, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3596 = icmp eq i32 %3595, 0
  br i1 %3596, label %3645, label %3597

; <label>:3597:                                   ; preds = %3592
  %3598 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3599 = load i8*, i8** %3598, align 8
  %3600 = call i32 @strcmp(i8* %3599, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3601 = icmp eq i32 %3600, 0
  br i1 %3601, label %3644, label %3602

; <label>:3602:                                   ; preds = %3597
  %3603 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3604 = load i8*, i8** %3603, align 8
  %3605 = call i32 @strcmp(i8* %3604, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3606 = icmp eq i32 %3605, 0
  %3607 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3608 = load i8*, i8** %3607, align 8
  br i1 %3606, label %3643, label %3609

; <label>:3609:                                   ; preds = %3602
  %3610 = call i32 @strcmp(i8* %3608, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3611 = icmp eq i32 %3610, 0
  %3612 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3613 = load i8*, i8** %3612, align 8
  br i1 %3611, label %3642, label %3614

; <label>:3614:                                   ; preds = %3609
  %3615 = call i32 @strcmp(i8* %3613, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3616 = icmp eq i32 %3615, 0
  br i1 %3616, label %3641, label %3617

; <label>:3617:                                   ; preds = %3614
  %3618 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3619 = load i8*, i8** %3618, align 8
  %3620 = call i32 @strcmp(i8* %3619, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3621 = icmp eq i32 %3620, 0
  br i1 %3621, label %3640, label %3622

; <label>:3622:                                   ; preds = %3617
  %3623 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3624 = load i8*, i8** %3623, align 8
  %3625 = call i32 @strcmp(i8* %3624, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3626 = icmp eq i32 %3625, 0
  br i1 %3626, label %3637, label %3627

; <label>:3627:                                   ; preds = %3622
  %3628 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3629 = load i8*, i8** %3628, align 8
  %3630 = call i32 @strcmp(i8* %3629, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3631 = icmp eq i32 %3630, 0
  br i1 %3631, label %353, label %3632

; <label>:3632:                                   ; preds = %3627
  %3633 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 0
  %3634 = load i8*, i8** %3633, align 8
  %3635 = call i32 @strncmp(i8* %3634, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3636 = icmp eq i32 %3635, 0
  br i1 %3636, label %362, label %3655

; <label>:3637:                                   ; preds = %3622
  %3638 = load i32, i32* @verbosity, align 4
  %3639 = add nsw i32 %3638, 1
  store i32 %3639, i32* @verbosity, align 4
  br label %3655

; <label>:3640:                                   ; preds = %3617
  store i32 9, i32* @blockSize100k, align 4
  br label %3655

; <label>:3641:                                   ; preds = %3614
  store i32 1, i32* @blockSize100k, align 4
  br label %3655

; <label>:3642:                                   ; preds = %3609
  call void @redundant(i8* %3613)
  br label %3655

; <label>:3643:                                   ; preds = %3602
  call void @redundant(i8* %3608)
  br label %3655

; <label>:3644:                                   ; preds = %3597
  store i32 1, i32* @workFactor, align 4
  br label %3655

; <label>:3645:                                   ; preds = %3592
  call void @license()
  br label %3655

; <label>:3646:                                   ; preds = %3587
  call void @license()
  br label %3655

; <label>:3647:                                   ; preds = %3582
  store i8 0, i8* @noisy, align 1
  br label %3655

; <label>:3648:                                   ; preds = %3577
  store i8 1, i8* @smallMode, align 1
  br label %3655

; <label>:3649:                                   ; preds = %3572
  store i8 1, i8* @keepInputFiles, align 1
  br label %3655

; <label>:3650:                                   ; preds = %3567
  store i32 3, i32* @opMode, align 4
  br label %3655

; <label>:3651:                                   ; preds = %3562
  store i8 1, i8* @forceOverwrite, align 1
  br label %3655

; <label>:3652:                                   ; preds = %3557
  store i32 1, i32* @opMode, align 4
  br label %3655

; <label>:3653:                                   ; preds = %3552
  store i32 2, i32* @opMode, align 4
  br label %3655

; <label>:3654:                                   ; preds = %3547
  store i32 2, i32* @srcMode, align 4
  br label %3655

; <label>:3655:                                   ; preds = %3654, %3653, %3652, %3651, %3650, %3649, %3648, %3647, %3646, %3645, %3644, %3643, %3642, %3641, %3640, %3637, %3632
  call void @__loop_iteration_test___5()
  %3656 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3541, i32 0, i32 1
  %3657 = load %struct.zzzz*, %struct.zzzz** %3656, align 8
  %3658 = icmp ne %struct.zzzz* %3657, null
  br i1 %3658, label %.lr.ph39.7, label %.loopexit.loopexit

.lr.ph39.7:                                       ; preds = %3655
  call void @unroll_loop(i32 5)
  %3659 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3660 = load i8*, i8** %3659, align 8
  %3661 = call i32 @strcmp(i8* %3660, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3662 = icmp eq i32 %3661, 0
  br i1 %3662, label %.loopexit.loopexit, label %3663

; <label>:3663:                                   ; preds = %.lr.ph39.7
  %3664 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3665 = load i8*, i8** %3664, align 8
  %3666 = call i32 @strcmp(i8* %3665, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3667 = icmp eq i32 %3666, 0
  br i1 %3667, label %3770, label %3668

; <label>:3668:                                   ; preds = %3663
  %3669 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3670 = load i8*, i8** %3669, align 8
  %3671 = call i32 @strcmp(i8* %3670, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3672 = icmp eq i32 %3671, 0
  br i1 %3672, label %3769, label %3673

; <label>:3673:                                   ; preds = %3668
  %3674 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3675 = load i8*, i8** %3674, align 8
  %3676 = call i32 @strcmp(i8* %3675, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3677 = icmp eq i32 %3676, 0
  br i1 %3677, label %3768, label %3678

; <label>:3678:                                   ; preds = %3673
  %3679 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3680 = load i8*, i8** %3679, align 8
  %3681 = call i32 @strcmp(i8* %3680, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3682 = icmp eq i32 %3681, 0
  br i1 %3682, label %3767, label %3683

; <label>:3683:                                   ; preds = %3678
  %3684 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3685 = load i8*, i8** %3684, align 8
  %3686 = call i32 @strcmp(i8* %3685, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3687 = icmp eq i32 %3686, 0
  br i1 %3687, label %3766, label %3688

; <label>:3688:                                   ; preds = %3683
  %3689 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3690 = load i8*, i8** %3689, align 8
  %3691 = call i32 @strcmp(i8* %3690, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3692 = icmp eq i32 %3691, 0
  br i1 %3692, label %3765, label %3693

; <label>:3693:                                   ; preds = %3688
  %3694 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3695 = load i8*, i8** %3694, align 8
  %3696 = call i32 @strcmp(i8* %3695, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3697 = icmp eq i32 %3696, 0
  br i1 %3697, label %3764, label %3698

; <label>:3698:                                   ; preds = %3693
  %3699 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3700 = load i8*, i8** %3699, align 8
  %3701 = call i32 @strcmp(i8* %3700, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3702 = icmp eq i32 %3701, 0
  br i1 %3702, label %3763, label %3703

; <label>:3703:                                   ; preds = %3698
  %3704 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3705 = load i8*, i8** %3704, align 8
  %3706 = call i32 @strcmp(i8* %3705, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3707 = icmp eq i32 %3706, 0
  br i1 %3707, label %3762, label %3708

; <label>:3708:                                   ; preds = %3703
  %3709 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3710 = load i8*, i8** %3709, align 8
  %3711 = call i32 @strcmp(i8* %3710, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3712 = icmp eq i32 %3711, 0
  br i1 %3712, label %3761, label %3713

; <label>:3713:                                   ; preds = %3708
  %3714 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3715 = load i8*, i8** %3714, align 8
  %3716 = call i32 @strcmp(i8* %3715, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3717 = icmp eq i32 %3716, 0
  br i1 %3717, label %3760, label %3718

; <label>:3718:                                   ; preds = %3713
  %3719 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3720 = load i8*, i8** %3719, align 8
  %3721 = call i32 @strcmp(i8* %3720, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3722 = icmp eq i32 %3721, 0
  %3723 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3724 = load i8*, i8** %3723, align 8
  br i1 %3722, label %3759, label %3725

; <label>:3725:                                   ; preds = %3718
  %3726 = call i32 @strcmp(i8* %3724, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3727 = icmp eq i32 %3726, 0
  %3728 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3729 = load i8*, i8** %3728, align 8
  br i1 %3727, label %3758, label %3730

; <label>:3730:                                   ; preds = %3725
  %3731 = call i32 @strcmp(i8* %3729, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3732 = icmp eq i32 %3731, 0
  br i1 %3732, label %3757, label %3733

; <label>:3733:                                   ; preds = %3730
  %3734 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3735 = load i8*, i8** %3734, align 8
  %3736 = call i32 @strcmp(i8* %3735, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3737 = icmp eq i32 %3736, 0
  br i1 %3737, label %3756, label %3738

; <label>:3738:                                   ; preds = %3733
  %3739 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3740 = load i8*, i8** %3739, align 8
  %3741 = call i32 @strcmp(i8* %3740, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3742 = icmp eq i32 %3741, 0
  br i1 %3742, label %3753, label %3743

; <label>:3743:                                   ; preds = %3738
  %3744 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3745 = load i8*, i8** %3744, align 8
  %3746 = call i32 @strcmp(i8* %3745, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3747 = icmp eq i32 %3746, 0
  br i1 %3747, label %353, label %3748

; <label>:3748:                                   ; preds = %3743
  %3749 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 0
  %3750 = load i8*, i8** %3749, align 8
  %3751 = call i32 @strncmp(i8* %3750, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3752 = icmp eq i32 %3751, 0
  br i1 %3752, label %362, label %3771

; <label>:3753:                                   ; preds = %3738
  %3754 = load i32, i32* @verbosity, align 4
  %3755 = add nsw i32 %3754, 1
  store i32 %3755, i32* @verbosity, align 4
  br label %3771

; <label>:3756:                                   ; preds = %3733
  store i32 9, i32* @blockSize100k, align 4
  br label %3771

; <label>:3757:                                   ; preds = %3730
  store i32 1, i32* @blockSize100k, align 4
  br label %3771

; <label>:3758:                                   ; preds = %3725
  call void @redundant(i8* %3729)
  br label %3771

; <label>:3759:                                   ; preds = %3718
  call void @redundant(i8* %3724)
  br label %3771

; <label>:3760:                                   ; preds = %3713
  store i32 1, i32* @workFactor, align 4
  br label %3771

; <label>:3761:                                   ; preds = %3708
  call void @license()
  br label %3771

; <label>:3762:                                   ; preds = %3703
  call void @license()
  br label %3771

; <label>:3763:                                   ; preds = %3698
  store i8 0, i8* @noisy, align 1
  br label %3771

; <label>:3764:                                   ; preds = %3693
  store i8 1, i8* @smallMode, align 1
  br label %3771

; <label>:3765:                                   ; preds = %3688
  store i8 1, i8* @keepInputFiles, align 1
  br label %3771

; <label>:3766:                                   ; preds = %3683
  store i32 3, i32* @opMode, align 4
  br label %3771

; <label>:3767:                                   ; preds = %3678
  store i8 1, i8* @forceOverwrite, align 1
  br label %3771

; <label>:3768:                                   ; preds = %3673
  store i32 1, i32* @opMode, align 4
  br label %3771

; <label>:3769:                                   ; preds = %3668
  store i32 2, i32* @opMode, align 4
  br label %3771

; <label>:3770:                                   ; preds = %3663
  store i32 2, i32* @srcMode, align 4
  br label %3771

; <label>:3771:                                   ; preds = %3770, %3769, %3768, %3767, %3766, %3765, %3764, %3763, %3762, %3761, %3760, %3759, %3758, %3757, %3756, %3753, %3748
  call void @__loop_iteration_test___5()
  %3772 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3657, i32 0, i32 1
  %3773 = load %struct.zzzz*, %struct.zzzz** %3772, align 8
  %3774 = icmp ne %struct.zzzz* %3773, null
  br i1 %3774, label %.lr.ph39.8, label %.loopexit.loopexit

.lr.ph39.8:                                       ; preds = %3771
  call void @unroll_loop(i32 5)
  %3775 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3776 = load i8*, i8** %3775, align 8
  %3777 = call i32 @strcmp(i8* %3776, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3778 = icmp eq i32 %3777, 0
  br i1 %3778, label %.loopexit.loopexit, label %3779

; <label>:3779:                                   ; preds = %.lr.ph39.8
  %3780 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3781 = load i8*, i8** %3780, align 8
  %3782 = call i32 @strcmp(i8* %3781, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3783 = icmp eq i32 %3782, 0
  br i1 %3783, label %3886, label %3784

; <label>:3784:                                   ; preds = %3779
  %3785 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3786 = load i8*, i8** %3785, align 8
  %3787 = call i32 @strcmp(i8* %3786, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3788 = icmp eq i32 %3787, 0
  br i1 %3788, label %3885, label %3789

; <label>:3789:                                   ; preds = %3784
  %3790 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3791 = load i8*, i8** %3790, align 8
  %3792 = call i32 @strcmp(i8* %3791, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3793 = icmp eq i32 %3792, 0
  br i1 %3793, label %3884, label %3794

; <label>:3794:                                   ; preds = %3789
  %3795 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3796 = load i8*, i8** %3795, align 8
  %3797 = call i32 @strcmp(i8* %3796, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3798 = icmp eq i32 %3797, 0
  br i1 %3798, label %3883, label %3799

; <label>:3799:                                   ; preds = %3794
  %3800 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3801 = load i8*, i8** %3800, align 8
  %3802 = call i32 @strcmp(i8* %3801, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3803 = icmp eq i32 %3802, 0
  br i1 %3803, label %3882, label %3804

; <label>:3804:                                   ; preds = %3799
  %3805 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3806 = load i8*, i8** %3805, align 8
  %3807 = call i32 @strcmp(i8* %3806, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3808 = icmp eq i32 %3807, 0
  br i1 %3808, label %3881, label %3809

; <label>:3809:                                   ; preds = %3804
  %3810 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3811 = load i8*, i8** %3810, align 8
  %3812 = call i32 @strcmp(i8* %3811, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3813 = icmp eq i32 %3812, 0
  br i1 %3813, label %3880, label %3814

; <label>:3814:                                   ; preds = %3809
  %3815 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3816 = load i8*, i8** %3815, align 8
  %3817 = call i32 @strcmp(i8* %3816, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3818 = icmp eq i32 %3817, 0
  br i1 %3818, label %3879, label %3819

; <label>:3819:                                   ; preds = %3814
  %3820 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3821 = load i8*, i8** %3820, align 8
  %3822 = call i32 @strcmp(i8* %3821, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3823 = icmp eq i32 %3822, 0
  br i1 %3823, label %3878, label %3824

; <label>:3824:                                   ; preds = %3819
  %3825 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3826 = load i8*, i8** %3825, align 8
  %3827 = call i32 @strcmp(i8* %3826, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3828 = icmp eq i32 %3827, 0
  br i1 %3828, label %3877, label %3829

; <label>:3829:                                   ; preds = %3824
  %3830 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3831 = load i8*, i8** %3830, align 8
  %3832 = call i32 @strcmp(i8* %3831, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3833 = icmp eq i32 %3832, 0
  br i1 %3833, label %3876, label %3834

; <label>:3834:                                   ; preds = %3829
  %3835 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3836 = load i8*, i8** %3835, align 8
  %3837 = call i32 @strcmp(i8* %3836, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3838 = icmp eq i32 %3837, 0
  %3839 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3840 = load i8*, i8** %3839, align 8
  br i1 %3838, label %3875, label %3841

; <label>:3841:                                   ; preds = %3834
  %3842 = call i32 @strcmp(i8* %3840, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3843 = icmp eq i32 %3842, 0
  %3844 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3845 = load i8*, i8** %3844, align 8
  br i1 %3843, label %3874, label %3846

; <label>:3846:                                   ; preds = %3841
  %3847 = call i32 @strcmp(i8* %3845, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3848 = icmp eq i32 %3847, 0
  br i1 %3848, label %3873, label %3849

; <label>:3849:                                   ; preds = %3846
  %3850 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3851 = load i8*, i8** %3850, align 8
  %3852 = call i32 @strcmp(i8* %3851, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3853 = icmp eq i32 %3852, 0
  br i1 %3853, label %3872, label %3854

; <label>:3854:                                   ; preds = %3849
  %3855 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3856 = load i8*, i8** %3855, align 8
  %3857 = call i32 @strcmp(i8* %3856, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3858 = icmp eq i32 %3857, 0
  br i1 %3858, label %3869, label %3859

; <label>:3859:                                   ; preds = %3854
  %3860 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3861 = load i8*, i8** %3860, align 8
  %3862 = call i32 @strcmp(i8* %3861, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3863 = icmp eq i32 %3862, 0
  br i1 %3863, label %353, label %3864

; <label>:3864:                                   ; preds = %3859
  %3865 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 0
  %3866 = load i8*, i8** %3865, align 8
  %3867 = call i32 @strncmp(i8* %3866, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3868 = icmp eq i32 %3867, 0
  br i1 %3868, label %362, label %3887

; <label>:3869:                                   ; preds = %3854
  %3870 = load i32, i32* @verbosity, align 4
  %3871 = add nsw i32 %3870, 1
  store i32 %3871, i32* @verbosity, align 4
  br label %3887

; <label>:3872:                                   ; preds = %3849
  store i32 9, i32* @blockSize100k, align 4
  br label %3887

; <label>:3873:                                   ; preds = %3846
  store i32 1, i32* @blockSize100k, align 4
  br label %3887

; <label>:3874:                                   ; preds = %3841
  call void @redundant(i8* %3845)
  br label %3887

; <label>:3875:                                   ; preds = %3834
  call void @redundant(i8* %3840)
  br label %3887

; <label>:3876:                                   ; preds = %3829
  store i32 1, i32* @workFactor, align 4
  br label %3887

; <label>:3877:                                   ; preds = %3824
  call void @license()
  br label %3887

; <label>:3878:                                   ; preds = %3819
  call void @license()
  br label %3887

; <label>:3879:                                   ; preds = %3814
  store i8 0, i8* @noisy, align 1
  br label %3887

; <label>:3880:                                   ; preds = %3809
  store i8 1, i8* @smallMode, align 1
  br label %3887

; <label>:3881:                                   ; preds = %3804
  store i8 1, i8* @keepInputFiles, align 1
  br label %3887

; <label>:3882:                                   ; preds = %3799
  store i32 3, i32* @opMode, align 4
  br label %3887

; <label>:3883:                                   ; preds = %3794
  store i8 1, i8* @forceOverwrite, align 1
  br label %3887

; <label>:3884:                                   ; preds = %3789
  store i32 1, i32* @opMode, align 4
  br label %3887

; <label>:3885:                                   ; preds = %3784
  store i32 2, i32* @opMode, align 4
  br label %3887

; <label>:3886:                                   ; preds = %3779
  store i32 2, i32* @srcMode, align 4
  br label %3887

; <label>:3887:                                   ; preds = %3886, %3885, %3884, %3883, %3882, %3881, %3880, %3879, %3878, %3877, %3876, %3875, %3874, %3873, %3872, %3869, %3864
  call void @__loop_iteration_test___5()
  %3888 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3773, i32 0, i32 1
  %3889 = load %struct.zzzz*, %struct.zzzz** %3888, align 8
  %3890 = icmp ne %struct.zzzz* %3889, null
  br i1 %3890, label %.lr.ph39.9, label %.loopexit.loopexit

.lr.ph39.9:                                       ; preds = %3887
  call void @unroll_loop(i32 5)
  %3891 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3892 = load i8*, i8** %3891, align 8
  %3893 = call i32 @strcmp(i8* %3892, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %3894 = icmp eq i32 %3893, 0
  br i1 %3894, label %.loopexit.loopexit, label %3895

; <label>:3895:                                   ; preds = %.lr.ph39.9
  %3896 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3897 = load i8*, i8** %3896, align 8
  %3898 = call i32 @strcmp(i8* %3897, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %3899 = icmp eq i32 %3898, 0
  br i1 %3899, label %4002, label %3900

; <label>:3900:                                   ; preds = %3895
  %3901 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3902 = load i8*, i8** %3901, align 8
  %3903 = call i32 @strcmp(i8* %3902, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %3904 = icmp eq i32 %3903, 0
  br i1 %3904, label %4001, label %3905

; <label>:3905:                                   ; preds = %3900
  %3906 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3907 = load i8*, i8** %3906, align 8
  %3908 = call i32 @strcmp(i8* %3907, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %3909 = icmp eq i32 %3908, 0
  br i1 %3909, label %4000, label %3910

; <label>:3910:                                   ; preds = %3905
  %3911 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3912 = load i8*, i8** %3911, align 8
  %3913 = call i32 @strcmp(i8* %3912, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %3914 = icmp eq i32 %3913, 0
  br i1 %3914, label %3999, label %3915

; <label>:3915:                                   ; preds = %3910
  %3916 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3917 = load i8*, i8** %3916, align 8
  %3918 = call i32 @strcmp(i8* %3917, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %3919 = icmp eq i32 %3918, 0
  br i1 %3919, label %3998, label %3920

; <label>:3920:                                   ; preds = %3915
  %3921 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3922 = load i8*, i8** %3921, align 8
  %3923 = call i32 @strcmp(i8* %3922, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %3924 = icmp eq i32 %3923, 0
  br i1 %3924, label %3997, label %3925

; <label>:3925:                                   ; preds = %3920
  %3926 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3927 = load i8*, i8** %3926, align 8
  %3928 = call i32 @strcmp(i8* %3927, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %3929 = icmp eq i32 %3928, 0
  br i1 %3929, label %3996, label %3930

; <label>:3930:                                   ; preds = %3925
  %3931 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3932 = load i8*, i8** %3931, align 8
  %3933 = call i32 @strcmp(i8* %3932, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %3934 = icmp eq i32 %3933, 0
  br i1 %3934, label %3995, label %3935

; <label>:3935:                                   ; preds = %3930
  %3936 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3937 = load i8*, i8** %3936, align 8
  %3938 = call i32 @strcmp(i8* %3937, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %3939 = icmp eq i32 %3938, 0
  br i1 %3939, label %3994, label %3940

; <label>:3940:                                   ; preds = %3935
  %3941 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3942 = load i8*, i8** %3941, align 8
  %3943 = call i32 @strcmp(i8* %3942, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %3944 = icmp eq i32 %3943, 0
  br i1 %3944, label %3993, label %3945

; <label>:3945:                                   ; preds = %3940
  %3946 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3947 = load i8*, i8** %3946, align 8
  %3948 = call i32 @strcmp(i8* %3947, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %3949 = icmp eq i32 %3948, 0
  br i1 %3949, label %3992, label %3950

; <label>:3950:                                   ; preds = %3945
  %3951 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3952 = load i8*, i8** %3951, align 8
  %3953 = call i32 @strcmp(i8* %3952, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %3954 = icmp eq i32 %3953, 0
  %3955 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3956 = load i8*, i8** %3955, align 8
  br i1 %3954, label %3991, label %3957

; <label>:3957:                                   ; preds = %3950
  %3958 = call i32 @strcmp(i8* %3956, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %3959 = icmp eq i32 %3958, 0
  %3960 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3961 = load i8*, i8** %3960, align 8
  br i1 %3959, label %3990, label %3962

; <label>:3962:                                   ; preds = %3957
  %3963 = call i32 @strcmp(i8* %3961, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %3964 = icmp eq i32 %3963, 0
  br i1 %3964, label %3989, label %3965

; <label>:3965:                                   ; preds = %3962
  %3966 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3967 = load i8*, i8** %3966, align 8
  %3968 = call i32 @strcmp(i8* %3967, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %3969 = icmp eq i32 %3968, 0
  br i1 %3969, label %3988, label %3970

; <label>:3970:                                   ; preds = %3965
  %3971 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3972 = load i8*, i8** %3971, align 8
  %3973 = call i32 @strcmp(i8* %3972, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %3974 = icmp eq i32 %3973, 0
  br i1 %3974, label %3985, label %3975

; <label>:3975:                                   ; preds = %3970
  %3976 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3977 = load i8*, i8** %3976, align 8
  %3978 = call i32 @strcmp(i8* %3977, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %3979 = icmp eq i32 %3978, 0
  br i1 %3979, label %353, label %3980

; <label>:3980:                                   ; preds = %3975
  %3981 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 0
  %3982 = load i8*, i8** %3981, align 8
  %3983 = call i32 @strncmp(i8* %3982, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %3984 = icmp eq i32 %3983, 0
  br i1 %3984, label %362, label %4003

; <label>:3985:                                   ; preds = %3970
  %3986 = load i32, i32* @verbosity, align 4
  %3987 = add nsw i32 %3986, 1
  store i32 %3987, i32* @verbosity, align 4
  br label %4003

; <label>:3988:                                   ; preds = %3965
  store i32 9, i32* @blockSize100k, align 4
  br label %4003

; <label>:3989:                                   ; preds = %3962
  store i32 1, i32* @blockSize100k, align 4
  br label %4003

; <label>:3990:                                   ; preds = %3957
  call void @redundant(i8* %3961)
  br label %4003

; <label>:3991:                                   ; preds = %3950
  call void @redundant(i8* %3956)
  br label %4003

; <label>:3992:                                   ; preds = %3945
  store i32 1, i32* @workFactor, align 4
  br label %4003

; <label>:3993:                                   ; preds = %3940
  call void @license()
  br label %4003

; <label>:3994:                                   ; preds = %3935
  call void @license()
  br label %4003

; <label>:3995:                                   ; preds = %3930
  store i8 0, i8* @noisy, align 1
  br label %4003

; <label>:3996:                                   ; preds = %3925
  store i8 1, i8* @smallMode, align 1
  br label %4003

; <label>:3997:                                   ; preds = %3920
  store i8 1, i8* @keepInputFiles, align 1
  br label %4003

; <label>:3998:                                   ; preds = %3915
  store i32 3, i32* @opMode, align 4
  br label %4003

; <label>:3999:                                   ; preds = %3910
  store i8 1, i8* @forceOverwrite, align 1
  br label %4003

; <label>:4000:                                   ; preds = %3905
  store i32 1, i32* @opMode, align 4
  br label %4003

; <label>:4001:                                   ; preds = %3900
  store i32 2, i32* @opMode, align 4
  br label %4003

; <label>:4002:                                   ; preds = %3895
  store i32 2, i32* @srcMode, align 4
  br label %4003

; <label>:4003:                                   ; preds = %4002, %4001, %4000, %3999, %3998, %3997, %3996, %3995, %3994, %3993, %3992, %3991, %3990, %3989, %3988, %3985, %3980
  call void @__loop_iteration_test___5()
  %4004 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %3889, i32 0, i32 1
  %4005 = load %struct.zzzz*, %struct.zzzz** %4004, align 8
  %4006 = icmp ne %struct.zzzz* %4005, null
  br i1 %4006, label %.lr.ph39.10, label %.loopexit.loopexit

.lr.ph39.10:                                      ; preds = %4003
  call void @unroll_loop(i32 5)
  %4007 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4008 = load i8*, i8** %4007, align 8
  %4009 = call i32 @strcmp(i8* %4008, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4010 = icmp eq i32 %4009, 0
  br i1 %4010, label %.loopexit.loopexit, label %4011

; <label>:4011:                                   ; preds = %.lr.ph39.10
  %4012 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4013 = load i8*, i8** %4012, align 8
  %4014 = call i32 @strcmp(i8* %4013, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4015 = icmp eq i32 %4014, 0
  br i1 %4015, label %4118, label %4016

; <label>:4016:                                   ; preds = %4011
  %4017 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4018 = load i8*, i8** %4017, align 8
  %4019 = call i32 @strcmp(i8* %4018, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4020 = icmp eq i32 %4019, 0
  br i1 %4020, label %4117, label %4021

; <label>:4021:                                   ; preds = %4016
  %4022 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4023 = load i8*, i8** %4022, align 8
  %4024 = call i32 @strcmp(i8* %4023, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4025 = icmp eq i32 %4024, 0
  br i1 %4025, label %4116, label %4026

; <label>:4026:                                   ; preds = %4021
  %4027 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4028 = load i8*, i8** %4027, align 8
  %4029 = call i32 @strcmp(i8* %4028, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4030 = icmp eq i32 %4029, 0
  br i1 %4030, label %4115, label %4031

; <label>:4031:                                   ; preds = %4026
  %4032 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4033 = load i8*, i8** %4032, align 8
  %4034 = call i32 @strcmp(i8* %4033, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4035 = icmp eq i32 %4034, 0
  br i1 %4035, label %4114, label %4036

; <label>:4036:                                   ; preds = %4031
  %4037 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4038 = load i8*, i8** %4037, align 8
  %4039 = call i32 @strcmp(i8* %4038, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4040 = icmp eq i32 %4039, 0
  br i1 %4040, label %4113, label %4041

; <label>:4041:                                   ; preds = %4036
  %4042 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4043 = load i8*, i8** %4042, align 8
  %4044 = call i32 @strcmp(i8* %4043, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4045 = icmp eq i32 %4044, 0
  br i1 %4045, label %4112, label %4046

; <label>:4046:                                   ; preds = %4041
  %4047 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4048 = load i8*, i8** %4047, align 8
  %4049 = call i32 @strcmp(i8* %4048, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4050 = icmp eq i32 %4049, 0
  br i1 %4050, label %4111, label %4051

; <label>:4051:                                   ; preds = %4046
  %4052 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4053 = load i8*, i8** %4052, align 8
  %4054 = call i32 @strcmp(i8* %4053, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4055 = icmp eq i32 %4054, 0
  br i1 %4055, label %4110, label %4056

; <label>:4056:                                   ; preds = %4051
  %4057 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4058 = load i8*, i8** %4057, align 8
  %4059 = call i32 @strcmp(i8* %4058, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4060 = icmp eq i32 %4059, 0
  br i1 %4060, label %4109, label %4061

; <label>:4061:                                   ; preds = %4056
  %4062 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4063 = load i8*, i8** %4062, align 8
  %4064 = call i32 @strcmp(i8* %4063, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4065 = icmp eq i32 %4064, 0
  br i1 %4065, label %4108, label %4066

; <label>:4066:                                   ; preds = %4061
  %4067 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4068 = load i8*, i8** %4067, align 8
  %4069 = call i32 @strcmp(i8* %4068, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4070 = icmp eq i32 %4069, 0
  %4071 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4072 = load i8*, i8** %4071, align 8
  br i1 %4070, label %4107, label %4073

; <label>:4073:                                   ; preds = %4066
  %4074 = call i32 @strcmp(i8* %4072, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4075 = icmp eq i32 %4074, 0
  %4076 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4077 = load i8*, i8** %4076, align 8
  br i1 %4075, label %4106, label %4078

; <label>:4078:                                   ; preds = %4073
  %4079 = call i32 @strcmp(i8* %4077, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4080 = icmp eq i32 %4079, 0
  br i1 %4080, label %4105, label %4081

; <label>:4081:                                   ; preds = %4078
  %4082 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4083 = load i8*, i8** %4082, align 8
  %4084 = call i32 @strcmp(i8* %4083, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4085 = icmp eq i32 %4084, 0
  br i1 %4085, label %4104, label %4086

; <label>:4086:                                   ; preds = %4081
  %4087 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4088 = load i8*, i8** %4087, align 8
  %4089 = call i32 @strcmp(i8* %4088, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4090 = icmp eq i32 %4089, 0
  br i1 %4090, label %4101, label %4091

; <label>:4091:                                   ; preds = %4086
  %4092 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4093 = load i8*, i8** %4092, align 8
  %4094 = call i32 @strcmp(i8* %4093, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4095 = icmp eq i32 %4094, 0
  br i1 %4095, label %353, label %4096

; <label>:4096:                                   ; preds = %4091
  %4097 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 0
  %4098 = load i8*, i8** %4097, align 8
  %4099 = call i32 @strncmp(i8* %4098, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4100 = icmp eq i32 %4099, 0
  br i1 %4100, label %362, label %4119

; <label>:4101:                                   ; preds = %4086
  %4102 = load i32, i32* @verbosity, align 4
  %4103 = add nsw i32 %4102, 1
  store i32 %4103, i32* @verbosity, align 4
  br label %4119

; <label>:4104:                                   ; preds = %4081
  store i32 9, i32* @blockSize100k, align 4
  br label %4119

; <label>:4105:                                   ; preds = %4078
  store i32 1, i32* @blockSize100k, align 4
  br label %4119

; <label>:4106:                                   ; preds = %4073
  call void @redundant(i8* %4077)
  br label %4119

; <label>:4107:                                   ; preds = %4066
  call void @redundant(i8* %4072)
  br label %4119

; <label>:4108:                                   ; preds = %4061
  store i32 1, i32* @workFactor, align 4
  br label %4119

; <label>:4109:                                   ; preds = %4056
  call void @license()
  br label %4119

; <label>:4110:                                   ; preds = %4051
  call void @license()
  br label %4119

; <label>:4111:                                   ; preds = %4046
  store i8 0, i8* @noisy, align 1
  br label %4119

; <label>:4112:                                   ; preds = %4041
  store i8 1, i8* @smallMode, align 1
  br label %4119

; <label>:4113:                                   ; preds = %4036
  store i8 1, i8* @keepInputFiles, align 1
  br label %4119

; <label>:4114:                                   ; preds = %4031
  store i32 3, i32* @opMode, align 4
  br label %4119

; <label>:4115:                                   ; preds = %4026
  store i8 1, i8* @forceOverwrite, align 1
  br label %4119

; <label>:4116:                                   ; preds = %4021
  store i32 1, i32* @opMode, align 4
  br label %4119

; <label>:4117:                                   ; preds = %4016
  store i32 2, i32* @opMode, align 4
  br label %4119

; <label>:4118:                                   ; preds = %4011
  store i32 2, i32* @srcMode, align 4
  br label %4119

; <label>:4119:                                   ; preds = %4118, %4117, %4116, %4115, %4114, %4113, %4112, %4111, %4110, %4109, %4108, %4107, %4106, %4105, %4104, %4101, %4096
  call void @__loop_iteration_test___5()
  %4120 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4005, i32 0, i32 1
  %4121 = load %struct.zzzz*, %struct.zzzz** %4120, align 8
  %4122 = icmp ne %struct.zzzz* %4121, null
  br i1 %4122, label %.lr.ph39.11, label %.loopexit.loopexit

.lr.ph39.11:                                      ; preds = %4119
  call void @unroll_loop(i32 5)
  %4123 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4124 = load i8*, i8** %4123, align 8
  %4125 = call i32 @strcmp(i8* %4124, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4126 = icmp eq i32 %4125, 0
  br i1 %4126, label %.loopexit.loopexit, label %4127

; <label>:4127:                                   ; preds = %.lr.ph39.11
  %4128 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4129 = load i8*, i8** %4128, align 8
  %4130 = call i32 @strcmp(i8* %4129, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4131 = icmp eq i32 %4130, 0
  br i1 %4131, label %4234, label %4132

; <label>:4132:                                   ; preds = %4127
  %4133 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4134 = load i8*, i8** %4133, align 8
  %4135 = call i32 @strcmp(i8* %4134, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4136 = icmp eq i32 %4135, 0
  br i1 %4136, label %4233, label %4137

; <label>:4137:                                   ; preds = %4132
  %4138 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4139 = load i8*, i8** %4138, align 8
  %4140 = call i32 @strcmp(i8* %4139, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4141 = icmp eq i32 %4140, 0
  br i1 %4141, label %4232, label %4142

; <label>:4142:                                   ; preds = %4137
  %4143 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4144 = load i8*, i8** %4143, align 8
  %4145 = call i32 @strcmp(i8* %4144, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4146 = icmp eq i32 %4145, 0
  br i1 %4146, label %4231, label %4147

; <label>:4147:                                   ; preds = %4142
  %4148 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4149 = load i8*, i8** %4148, align 8
  %4150 = call i32 @strcmp(i8* %4149, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4151 = icmp eq i32 %4150, 0
  br i1 %4151, label %4230, label %4152

; <label>:4152:                                   ; preds = %4147
  %4153 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4154 = load i8*, i8** %4153, align 8
  %4155 = call i32 @strcmp(i8* %4154, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4156 = icmp eq i32 %4155, 0
  br i1 %4156, label %4229, label %4157

; <label>:4157:                                   ; preds = %4152
  %4158 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4159 = load i8*, i8** %4158, align 8
  %4160 = call i32 @strcmp(i8* %4159, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4161 = icmp eq i32 %4160, 0
  br i1 %4161, label %4228, label %4162

; <label>:4162:                                   ; preds = %4157
  %4163 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4164 = load i8*, i8** %4163, align 8
  %4165 = call i32 @strcmp(i8* %4164, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4166 = icmp eq i32 %4165, 0
  br i1 %4166, label %4227, label %4167

; <label>:4167:                                   ; preds = %4162
  %4168 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4169 = load i8*, i8** %4168, align 8
  %4170 = call i32 @strcmp(i8* %4169, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4171 = icmp eq i32 %4170, 0
  br i1 %4171, label %4226, label %4172

; <label>:4172:                                   ; preds = %4167
  %4173 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4174 = load i8*, i8** %4173, align 8
  %4175 = call i32 @strcmp(i8* %4174, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4176 = icmp eq i32 %4175, 0
  br i1 %4176, label %4225, label %4177

; <label>:4177:                                   ; preds = %4172
  %4178 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4179 = load i8*, i8** %4178, align 8
  %4180 = call i32 @strcmp(i8* %4179, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4181 = icmp eq i32 %4180, 0
  br i1 %4181, label %4224, label %4182

; <label>:4182:                                   ; preds = %4177
  %4183 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4184 = load i8*, i8** %4183, align 8
  %4185 = call i32 @strcmp(i8* %4184, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4186 = icmp eq i32 %4185, 0
  %4187 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4188 = load i8*, i8** %4187, align 8
  br i1 %4186, label %4223, label %4189

; <label>:4189:                                   ; preds = %4182
  %4190 = call i32 @strcmp(i8* %4188, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4191 = icmp eq i32 %4190, 0
  %4192 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4193 = load i8*, i8** %4192, align 8
  br i1 %4191, label %4222, label %4194

; <label>:4194:                                   ; preds = %4189
  %4195 = call i32 @strcmp(i8* %4193, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4196 = icmp eq i32 %4195, 0
  br i1 %4196, label %4221, label %4197

; <label>:4197:                                   ; preds = %4194
  %4198 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4199 = load i8*, i8** %4198, align 8
  %4200 = call i32 @strcmp(i8* %4199, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4201 = icmp eq i32 %4200, 0
  br i1 %4201, label %4220, label %4202

; <label>:4202:                                   ; preds = %4197
  %4203 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4204 = load i8*, i8** %4203, align 8
  %4205 = call i32 @strcmp(i8* %4204, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4206 = icmp eq i32 %4205, 0
  br i1 %4206, label %4217, label %4207

; <label>:4207:                                   ; preds = %4202
  %4208 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4209 = load i8*, i8** %4208, align 8
  %4210 = call i32 @strcmp(i8* %4209, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4211 = icmp eq i32 %4210, 0
  br i1 %4211, label %353, label %4212

; <label>:4212:                                   ; preds = %4207
  %4213 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 0
  %4214 = load i8*, i8** %4213, align 8
  %4215 = call i32 @strncmp(i8* %4214, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4216 = icmp eq i32 %4215, 0
  br i1 %4216, label %362, label %4235

; <label>:4217:                                   ; preds = %4202
  %4218 = load i32, i32* @verbosity, align 4
  %4219 = add nsw i32 %4218, 1
  store i32 %4219, i32* @verbosity, align 4
  br label %4235

; <label>:4220:                                   ; preds = %4197
  store i32 9, i32* @blockSize100k, align 4
  br label %4235

; <label>:4221:                                   ; preds = %4194
  store i32 1, i32* @blockSize100k, align 4
  br label %4235

; <label>:4222:                                   ; preds = %4189
  call void @redundant(i8* %4193)
  br label %4235

; <label>:4223:                                   ; preds = %4182
  call void @redundant(i8* %4188)
  br label %4235

; <label>:4224:                                   ; preds = %4177
  store i32 1, i32* @workFactor, align 4
  br label %4235

; <label>:4225:                                   ; preds = %4172
  call void @license()
  br label %4235

; <label>:4226:                                   ; preds = %4167
  call void @license()
  br label %4235

; <label>:4227:                                   ; preds = %4162
  store i8 0, i8* @noisy, align 1
  br label %4235

; <label>:4228:                                   ; preds = %4157
  store i8 1, i8* @smallMode, align 1
  br label %4235

; <label>:4229:                                   ; preds = %4152
  store i8 1, i8* @keepInputFiles, align 1
  br label %4235

; <label>:4230:                                   ; preds = %4147
  store i32 3, i32* @opMode, align 4
  br label %4235

; <label>:4231:                                   ; preds = %4142
  store i8 1, i8* @forceOverwrite, align 1
  br label %4235

; <label>:4232:                                   ; preds = %4137
  store i32 1, i32* @opMode, align 4
  br label %4235

; <label>:4233:                                   ; preds = %4132
  store i32 2, i32* @opMode, align 4
  br label %4235

; <label>:4234:                                   ; preds = %4127
  store i32 2, i32* @srcMode, align 4
  br label %4235

; <label>:4235:                                   ; preds = %4234, %4233, %4232, %4231, %4230, %4229, %4228, %4227, %4226, %4225, %4224, %4223, %4222, %4221, %4220, %4217, %4212
  call void @__loop_iteration_test___5()
  %4236 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4121, i32 0, i32 1
  %4237 = load %struct.zzzz*, %struct.zzzz** %4236, align 8
  %4238 = icmp ne %struct.zzzz* %4237, null
  br i1 %4238, label %.lr.ph39.12, label %.loopexit.loopexit

.lr.ph39.12:                                      ; preds = %4235
  call void @unroll_loop(i32 5)
  %4239 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4240 = load i8*, i8** %4239, align 8
  %4241 = call i32 @strcmp(i8* %4240, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4242 = icmp eq i32 %4241, 0
  br i1 %4242, label %.loopexit.loopexit, label %4243

; <label>:4243:                                   ; preds = %.lr.ph39.12
  %4244 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4245 = load i8*, i8** %4244, align 8
  %4246 = call i32 @strcmp(i8* %4245, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4247 = icmp eq i32 %4246, 0
  br i1 %4247, label %4350, label %4248

; <label>:4248:                                   ; preds = %4243
  %4249 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4250 = load i8*, i8** %4249, align 8
  %4251 = call i32 @strcmp(i8* %4250, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4252 = icmp eq i32 %4251, 0
  br i1 %4252, label %4349, label %4253

; <label>:4253:                                   ; preds = %4248
  %4254 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4255 = load i8*, i8** %4254, align 8
  %4256 = call i32 @strcmp(i8* %4255, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4257 = icmp eq i32 %4256, 0
  br i1 %4257, label %4348, label %4258

; <label>:4258:                                   ; preds = %4253
  %4259 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4260 = load i8*, i8** %4259, align 8
  %4261 = call i32 @strcmp(i8* %4260, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4262 = icmp eq i32 %4261, 0
  br i1 %4262, label %4347, label %4263

; <label>:4263:                                   ; preds = %4258
  %4264 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4265 = load i8*, i8** %4264, align 8
  %4266 = call i32 @strcmp(i8* %4265, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4267 = icmp eq i32 %4266, 0
  br i1 %4267, label %4346, label %4268

; <label>:4268:                                   ; preds = %4263
  %4269 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4270 = load i8*, i8** %4269, align 8
  %4271 = call i32 @strcmp(i8* %4270, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4272 = icmp eq i32 %4271, 0
  br i1 %4272, label %4345, label %4273

; <label>:4273:                                   ; preds = %4268
  %4274 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4275 = load i8*, i8** %4274, align 8
  %4276 = call i32 @strcmp(i8* %4275, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4277 = icmp eq i32 %4276, 0
  br i1 %4277, label %4344, label %4278

; <label>:4278:                                   ; preds = %4273
  %4279 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4280 = load i8*, i8** %4279, align 8
  %4281 = call i32 @strcmp(i8* %4280, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4282 = icmp eq i32 %4281, 0
  br i1 %4282, label %4343, label %4283

; <label>:4283:                                   ; preds = %4278
  %4284 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4285 = load i8*, i8** %4284, align 8
  %4286 = call i32 @strcmp(i8* %4285, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4287 = icmp eq i32 %4286, 0
  br i1 %4287, label %4342, label %4288

; <label>:4288:                                   ; preds = %4283
  %4289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4290 = load i8*, i8** %4289, align 8
  %4291 = call i32 @strcmp(i8* %4290, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4292 = icmp eq i32 %4291, 0
  br i1 %4292, label %4341, label %4293

; <label>:4293:                                   ; preds = %4288
  %4294 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4295 = load i8*, i8** %4294, align 8
  %4296 = call i32 @strcmp(i8* %4295, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4297 = icmp eq i32 %4296, 0
  br i1 %4297, label %4340, label %4298

; <label>:4298:                                   ; preds = %4293
  %4299 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4300 = load i8*, i8** %4299, align 8
  %4301 = call i32 @strcmp(i8* %4300, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4302 = icmp eq i32 %4301, 0
  %4303 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4304 = load i8*, i8** %4303, align 8
  br i1 %4302, label %4339, label %4305

; <label>:4305:                                   ; preds = %4298
  %4306 = call i32 @strcmp(i8* %4304, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4307 = icmp eq i32 %4306, 0
  %4308 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4309 = load i8*, i8** %4308, align 8
  br i1 %4307, label %4338, label %4310

; <label>:4310:                                   ; preds = %4305
  %4311 = call i32 @strcmp(i8* %4309, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4312 = icmp eq i32 %4311, 0
  br i1 %4312, label %4337, label %4313

; <label>:4313:                                   ; preds = %4310
  %4314 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4315 = load i8*, i8** %4314, align 8
  %4316 = call i32 @strcmp(i8* %4315, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4317 = icmp eq i32 %4316, 0
  br i1 %4317, label %4336, label %4318

; <label>:4318:                                   ; preds = %4313
  %4319 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4320 = load i8*, i8** %4319, align 8
  %4321 = call i32 @strcmp(i8* %4320, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4322 = icmp eq i32 %4321, 0
  br i1 %4322, label %4333, label %4323

; <label>:4323:                                   ; preds = %4318
  %4324 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4325 = load i8*, i8** %4324, align 8
  %4326 = call i32 @strcmp(i8* %4325, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4327 = icmp eq i32 %4326, 0
  br i1 %4327, label %353, label %4328

; <label>:4328:                                   ; preds = %4323
  %4329 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 0
  %4330 = load i8*, i8** %4329, align 8
  %4331 = call i32 @strncmp(i8* %4330, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4332 = icmp eq i32 %4331, 0
  br i1 %4332, label %362, label %4351

; <label>:4333:                                   ; preds = %4318
  %4334 = load i32, i32* @verbosity, align 4
  %4335 = add nsw i32 %4334, 1
  store i32 %4335, i32* @verbosity, align 4
  br label %4351

; <label>:4336:                                   ; preds = %4313
  store i32 9, i32* @blockSize100k, align 4
  br label %4351

; <label>:4337:                                   ; preds = %4310
  store i32 1, i32* @blockSize100k, align 4
  br label %4351

; <label>:4338:                                   ; preds = %4305
  call void @redundant(i8* %4309)
  br label %4351

; <label>:4339:                                   ; preds = %4298
  call void @redundant(i8* %4304)
  br label %4351

; <label>:4340:                                   ; preds = %4293
  store i32 1, i32* @workFactor, align 4
  br label %4351

; <label>:4341:                                   ; preds = %4288
  call void @license()
  br label %4351

; <label>:4342:                                   ; preds = %4283
  call void @license()
  br label %4351

; <label>:4343:                                   ; preds = %4278
  store i8 0, i8* @noisy, align 1
  br label %4351

; <label>:4344:                                   ; preds = %4273
  store i8 1, i8* @smallMode, align 1
  br label %4351

; <label>:4345:                                   ; preds = %4268
  store i8 1, i8* @keepInputFiles, align 1
  br label %4351

; <label>:4346:                                   ; preds = %4263
  store i32 3, i32* @opMode, align 4
  br label %4351

; <label>:4347:                                   ; preds = %4258
  store i8 1, i8* @forceOverwrite, align 1
  br label %4351

; <label>:4348:                                   ; preds = %4253
  store i32 1, i32* @opMode, align 4
  br label %4351

; <label>:4349:                                   ; preds = %4248
  store i32 2, i32* @opMode, align 4
  br label %4351

; <label>:4350:                                   ; preds = %4243
  store i32 2, i32* @srcMode, align 4
  br label %4351

; <label>:4351:                                   ; preds = %4350, %4349, %4348, %4347, %4346, %4345, %4344, %4343, %4342, %4341, %4340, %4339, %4338, %4337, %4336, %4333, %4328
  call void @__loop_iteration_test___5()
  %4352 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4237, i32 0, i32 1
  %4353 = load %struct.zzzz*, %struct.zzzz** %4352, align 8
  %4354 = icmp ne %struct.zzzz* %4353, null
  br i1 %4354, label %.lr.ph39.13, label %.loopexit.loopexit

.lr.ph39.13:                                      ; preds = %4351
  call void @unroll_loop(i32 5)
  %4355 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4356 = load i8*, i8** %4355, align 8
  %4357 = call i32 @strcmp(i8* %4356, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4358 = icmp eq i32 %4357, 0
  br i1 %4358, label %.loopexit.loopexit, label %4359

; <label>:4359:                                   ; preds = %.lr.ph39.13
  %4360 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4361 = load i8*, i8** %4360, align 8
  %4362 = call i32 @strcmp(i8* %4361, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4363 = icmp eq i32 %4362, 0
  br i1 %4363, label %4466, label %4364

; <label>:4364:                                   ; preds = %4359
  %4365 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4366 = load i8*, i8** %4365, align 8
  %4367 = call i32 @strcmp(i8* %4366, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4368 = icmp eq i32 %4367, 0
  br i1 %4368, label %4465, label %4369

; <label>:4369:                                   ; preds = %4364
  %4370 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4371 = load i8*, i8** %4370, align 8
  %4372 = call i32 @strcmp(i8* %4371, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4373 = icmp eq i32 %4372, 0
  br i1 %4373, label %4464, label %4374

; <label>:4374:                                   ; preds = %4369
  %4375 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4376 = load i8*, i8** %4375, align 8
  %4377 = call i32 @strcmp(i8* %4376, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4378 = icmp eq i32 %4377, 0
  br i1 %4378, label %4463, label %4379

; <label>:4379:                                   ; preds = %4374
  %4380 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4381 = load i8*, i8** %4380, align 8
  %4382 = call i32 @strcmp(i8* %4381, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4383 = icmp eq i32 %4382, 0
  br i1 %4383, label %4462, label %4384

; <label>:4384:                                   ; preds = %4379
  %4385 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4386 = load i8*, i8** %4385, align 8
  %4387 = call i32 @strcmp(i8* %4386, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4388 = icmp eq i32 %4387, 0
  br i1 %4388, label %4461, label %4389

; <label>:4389:                                   ; preds = %4384
  %4390 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4391 = load i8*, i8** %4390, align 8
  %4392 = call i32 @strcmp(i8* %4391, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4393 = icmp eq i32 %4392, 0
  br i1 %4393, label %4460, label %4394

; <label>:4394:                                   ; preds = %4389
  %4395 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4396 = load i8*, i8** %4395, align 8
  %4397 = call i32 @strcmp(i8* %4396, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4398 = icmp eq i32 %4397, 0
  br i1 %4398, label %4459, label %4399

; <label>:4399:                                   ; preds = %4394
  %4400 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4401 = load i8*, i8** %4400, align 8
  %4402 = call i32 @strcmp(i8* %4401, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4403 = icmp eq i32 %4402, 0
  br i1 %4403, label %4458, label %4404

; <label>:4404:                                   ; preds = %4399
  %4405 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4406 = load i8*, i8** %4405, align 8
  %4407 = call i32 @strcmp(i8* %4406, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4408 = icmp eq i32 %4407, 0
  br i1 %4408, label %4457, label %4409

; <label>:4409:                                   ; preds = %4404
  %4410 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4411 = load i8*, i8** %4410, align 8
  %4412 = call i32 @strcmp(i8* %4411, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4413 = icmp eq i32 %4412, 0
  br i1 %4413, label %4456, label %4414

; <label>:4414:                                   ; preds = %4409
  %4415 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4416 = load i8*, i8** %4415, align 8
  %4417 = call i32 @strcmp(i8* %4416, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4418 = icmp eq i32 %4417, 0
  %4419 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4420 = load i8*, i8** %4419, align 8
  br i1 %4418, label %4455, label %4421

; <label>:4421:                                   ; preds = %4414
  %4422 = call i32 @strcmp(i8* %4420, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4423 = icmp eq i32 %4422, 0
  %4424 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4425 = load i8*, i8** %4424, align 8
  br i1 %4423, label %4454, label %4426

; <label>:4426:                                   ; preds = %4421
  %4427 = call i32 @strcmp(i8* %4425, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4428 = icmp eq i32 %4427, 0
  br i1 %4428, label %4453, label %4429

; <label>:4429:                                   ; preds = %4426
  %4430 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4431 = load i8*, i8** %4430, align 8
  %4432 = call i32 @strcmp(i8* %4431, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4433 = icmp eq i32 %4432, 0
  br i1 %4433, label %4452, label %4434

; <label>:4434:                                   ; preds = %4429
  %4435 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4436 = load i8*, i8** %4435, align 8
  %4437 = call i32 @strcmp(i8* %4436, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4438 = icmp eq i32 %4437, 0
  br i1 %4438, label %4449, label %4439

; <label>:4439:                                   ; preds = %4434
  %4440 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4441 = load i8*, i8** %4440, align 8
  %4442 = call i32 @strcmp(i8* %4441, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4443 = icmp eq i32 %4442, 0
  br i1 %4443, label %353, label %4444

; <label>:4444:                                   ; preds = %4439
  %4445 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 0
  %4446 = load i8*, i8** %4445, align 8
  %4447 = call i32 @strncmp(i8* %4446, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4448 = icmp eq i32 %4447, 0
  br i1 %4448, label %362, label %4467

; <label>:4449:                                   ; preds = %4434
  %4450 = load i32, i32* @verbosity, align 4
  %4451 = add nsw i32 %4450, 1
  store i32 %4451, i32* @verbosity, align 4
  br label %4467

; <label>:4452:                                   ; preds = %4429
  store i32 9, i32* @blockSize100k, align 4
  br label %4467

; <label>:4453:                                   ; preds = %4426
  store i32 1, i32* @blockSize100k, align 4
  br label %4467

; <label>:4454:                                   ; preds = %4421
  call void @redundant(i8* %4425)
  br label %4467

; <label>:4455:                                   ; preds = %4414
  call void @redundant(i8* %4420)
  br label %4467

; <label>:4456:                                   ; preds = %4409
  store i32 1, i32* @workFactor, align 4
  br label %4467

; <label>:4457:                                   ; preds = %4404
  call void @license()
  br label %4467

; <label>:4458:                                   ; preds = %4399
  call void @license()
  br label %4467

; <label>:4459:                                   ; preds = %4394
  store i8 0, i8* @noisy, align 1
  br label %4467

; <label>:4460:                                   ; preds = %4389
  store i8 1, i8* @smallMode, align 1
  br label %4467

; <label>:4461:                                   ; preds = %4384
  store i8 1, i8* @keepInputFiles, align 1
  br label %4467

; <label>:4462:                                   ; preds = %4379
  store i32 3, i32* @opMode, align 4
  br label %4467

; <label>:4463:                                   ; preds = %4374
  store i8 1, i8* @forceOverwrite, align 1
  br label %4467

; <label>:4464:                                   ; preds = %4369
  store i32 1, i32* @opMode, align 4
  br label %4467

; <label>:4465:                                   ; preds = %4364
  store i32 2, i32* @opMode, align 4
  br label %4467

; <label>:4466:                                   ; preds = %4359
  store i32 2, i32* @srcMode, align 4
  br label %4467

; <label>:4467:                                   ; preds = %4466, %4465, %4464, %4463, %4462, %4461, %4460, %4459, %4458, %4457, %4456, %4455, %4454, %4453, %4452, %4449, %4444
  call void @__loop_iteration_test___5()
  %4468 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4353, i32 0, i32 1
  %4469 = load %struct.zzzz*, %struct.zzzz** %4468, align 8
  %4470 = icmp ne %struct.zzzz* %4469, null
  br i1 %4470, label %.lr.ph39.14, label %.loopexit.loopexit

.lr.ph39.14:                                      ; preds = %4467
  call void @unroll_loop(i32 5)
  %4471 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4472 = load i8*, i8** %4471, align 8
  %4473 = call i32 @strcmp(i8* %4472, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4474 = icmp eq i32 %4473, 0
  br i1 %4474, label %.loopexit.loopexit, label %4475

; <label>:4475:                                   ; preds = %.lr.ph39.14
  %4476 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4477 = load i8*, i8** %4476, align 8
  %4478 = call i32 @strcmp(i8* %4477, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4479 = icmp eq i32 %4478, 0
  br i1 %4479, label %4582, label %4480

; <label>:4480:                                   ; preds = %4475
  %4481 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4482 = load i8*, i8** %4481, align 8
  %4483 = call i32 @strcmp(i8* %4482, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4484 = icmp eq i32 %4483, 0
  br i1 %4484, label %4581, label %4485

; <label>:4485:                                   ; preds = %4480
  %4486 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4487 = load i8*, i8** %4486, align 8
  %4488 = call i32 @strcmp(i8* %4487, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4489 = icmp eq i32 %4488, 0
  br i1 %4489, label %4580, label %4490

; <label>:4490:                                   ; preds = %4485
  %4491 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4492 = load i8*, i8** %4491, align 8
  %4493 = call i32 @strcmp(i8* %4492, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4494 = icmp eq i32 %4493, 0
  br i1 %4494, label %4579, label %4495

; <label>:4495:                                   ; preds = %4490
  %4496 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4497 = load i8*, i8** %4496, align 8
  %4498 = call i32 @strcmp(i8* %4497, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4499 = icmp eq i32 %4498, 0
  br i1 %4499, label %4578, label %4500

; <label>:4500:                                   ; preds = %4495
  %4501 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4502 = load i8*, i8** %4501, align 8
  %4503 = call i32 @strcmp(i8* %4502, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4504 = icmp eq i32 %4503, 0
  br i1 %4504, label %4577, label %4505

; <label>:4505:                                   ; preds = %4500
  %4506 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4507 = load i8*, i8** %4506, align 8
  %4508 = call i32 @strcmp(i8* %4507, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4509 = icmp eq i32 %4508, 0
  br i1 %4509, label %4576, label %4510

; <label>:4510:                                   ; preds = %4505
  %4511 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4512 = load i8*, i8** %4511, align 8
  %4513 = call i32 @strcmp(i8* %4512, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4514 = icmp eq i32 %4513, 0
  br i1 %4514, label %4575, label %4515

; <label>:4515:                                   ; preds = %4510
  %4516 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4517 = load i8*, i8** %4516, align 8
  %4518 = call i32 @strcmp(i8* %4517, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4519 = icmp eq i32 %4518, 0
  br i1 %4519, label %4574, label %4520

; <label>:4520:                                   ; preds = %4515
  %4521 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4522 = load i8*, i8** %4521, align 8
  %4523 = call i32 @strcmp(i8* %4522, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4524 = icmp eq i32 %4523, 0
  br i1 %4524, label %4573, label %4525

; <label>:4525:                                   ; preds = %4520
  %4526 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4527 = load i8*, i8** %4526, align 8
  %4528 = call i32 @strcmp(i8* %4527, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4529 = icmp eq i32 %4528, 0
  br i1 %4529, label %4572, label %4530

; <label>:4530:                                   ; preds = %4525
  %4531 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4532 = load i8*, i8** %4531, align 8
  %4533 = call i32 @strcmp(i8* %4532, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4534 = icmp eq i32 %4533, 0
  %4535 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4536 = load i8*, i8** %4535, align 8
  br i1 %4534, label %4571, label %4537

; <label>:4537:                                   ; preds = %4530
  %4538 = call i32 @strcmp(i8* %4536, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4539 = icmp eq i32 %4538, 0
  %4540 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4541 = load i8*, i8** %4540, align 8
  br i1 %4539, label %4570, label %4542

; <label>:4542:                                   ; preds = %4537
  %4543 = call i32 @strcmp(i8* %4541, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4544 = icmp eq i32 %4543, 0
  br i1 %4544, label %4569, label %4545

; <label>:4545:                                   ; preds = %4542
  %4546 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4547 = load i8*, i8** %4546, align 8
  %4548 = call i32 @strcmp(i8* %4547, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4549 = icmp eq i32 %4548, 0
  br i1 %4549, label %4568, label %4550

; <label>:4550:                                   ; preds = %4545
  %4551 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4552 = load i8*, i8** %4551, align 8
  %4553 = call i32 @strcmp(i8* %4552, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4554 = icmp eq i32 %4553, 0
  br i1 %4554, label %4565, label %4555

; <label>:4555:                                   ; preds = %4550
  %4556 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4557 = load i8*, i8** %4556, align 8
  %4558 = call i32 @strcmp(i8* %4557, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4559 = icmp eq i32 %4558, 0
  br i1 %4559, label %353, label %4560

; <label>:4560:                                   ; preds = %4555
  %4561 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 0
  %4562 = load i8*, i8** %4561, align 8
  %4563 = call i32 @strncmp(i8* %4562, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4564 = icmp eq i32 %4563, 0
  br i1 %4564, label %362, label %4583

; <label>:4565:                                   ; preds = %4550
  %4566 = load i32, i32* @verbosity, align 4
  %4567 = add nsw i32 %4566, 1
  store i32 %4567, i32* @verbosity, align 4
  br label %4583

; <label>:4568:                                   ; preds = %4545
  store i32 9, i32* @blockSize100k, align 4
  br label %4583

; <label>:4569:                                   ; preds = %4542
  store i32 1, i32* @blockSize100k, align 4
  br label %4583

; <label>:4570:                                   ; preds = %4537
  call void @redundant(i8* %4541)
  br label %4583

; <label>:4571:                                   ; preds = %4530
  call void @redundant(i8* %4536)
  br label %4583

; <label>:4572:                                   ; preds = %4525
  store i32 1, i32* @workFactor, align 4
  br label %4583

; <label>:4573:                                   ; preds = %4520
  call void @license()
  br label %4583

; <label>:4574:                                   ; preds = %4515
  call void @license()
  br label %4583

; <label>:4575:                                   ; preds = %4510
  store i8 0, i8* @noisy, align 1
  br label %4583

; <label>:4576:                                   ; preds = %4505
  store i8 1, i8* @smallMode, align 1
  br label %4583

; <label>:4577:                                   ; preds = %4500
  store i8 1, i8* @keepInputFiles, align 1
  br label %4583

; <label>:4578:                                   ; preds = %4495
  store i32 3, i32* @opMode, align 4
  br label %4583

; <label>:4579:                                   ; preds = %4490
  store i8 1, i8* @forceOverwrite, align 1
  br label %4583

; <label>:4580:                                   ; preds = %4485
  store i32 1, i32* @opMode, align 4
  br label %4583

; <label>:4581:                                   ; preds = %4480
  store i32 2, i32* @opMode, align 4
  br label %4583

; <label>:4582:                                   ; preds = %4475
  store i32 2, i32* @srcMode, align 4
  br label %4583

; <label>:4583:                                   ; preds = %4582, %4581, %4580, %4579, %4578, %4577, %4576, %4575, %4574, %4573, %4572, %4571, %4570, %4569, %4568, %4565, %4560
  call void @__loop_iteration_test___5()
  %4584 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4469, i32 0, i32 1
  %4585 = load %struct.zzzz*, %struct.zzzz** %4584, align 8
  %4586 = icmp ne %struct.zzzz* %4585, null
  br i1 %4586, label %.lr.ph39.15, label %.loopexit.loopexit

.lr.ph39.15:                                      ; preds = %4583
  call void @unroll_loop(i32 5)
  %4587 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4588 = load i8*, i8** %4587, align 8
  %4589 = call i32 @strcmp(i8* %4588, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4590 = icmp eq i32 %4589, 0
  br i1 %4590, label %.loopexit.loopexit, label %4591

; <label>:4591:                                   ; preds = %.lr.ph39.15
  %4592 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4593 = load i8*, i8** %4592, align 8
  %4594 = call i32 @strcmp(i8* %4593, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4595 = icmp eq i32 %4594, 0
  br i1 %4595, label %4698, label %4596

; <label>:4596:                                   ; preds = %4591
  %4597 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4598 = load i8*, i8** %4597, align 8
  %4599 = call i32 @strcmp(i8* %4598, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4600 = icmp eq i32 %4599, 0
  br i1 %4600, label %4697, label %4601

; <label>:4601:                                   ; preds = %4596
  %4602 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4603 = load i8*, i8** %4602, align 8
  %4604 = call i32 @strcmp(i8* %4603, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4605 = icmp eq i32 %4604, 0
  br i1 %4605, label %4696, label %4606

; <label>:4606:                                   ; preds = %4601
  %4607 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4608 = load i8*, i8** %4607, align 8
  %4609 = call i32 @strcmp(i8* %4608, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4610 = icmp eq i32 %4609, 0
  br i1 %4610, label %4695, label %4611

; <label>:4611:                                   ; preds = %4606
  %4612 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4613 = load i8*, i8** %4612, align 8
  %4614 = call i32 @strcmp(i8* %4613, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4615 = icmp eq i32 %4614, 0
  br i1 %4615, label %4694, label %4616

; <label>:4616:                                   ; preds = %4611
  %4617 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4618 = load i8*, i8** %4617, align 8
  %4619 = call i32 @strcmp(i8* %4618, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4620 = icmp eq i32 %4619, 0
  br i1 %4620, label %4693, label %4621

; <label>:4621:                                   ; preds = %4616
  %4622 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4623 = load i8*, i8** %4622, align 8
  %4624 = call i32 @strcmp(i8* %4623, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4625 = icmp eq i32 %4624, 0
  br i1 %4625, label %4692, label %4626

; <label>:4626:                                   ; preds = %4621
  %4627 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4628 = load i8*, i8** %4627, align 8
  %4629 = call i32 @strcmp(i8* %4628, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4630 = icmp eq i32 %4629, 0
  br i1 %4630, label %4691, label %4631

; <label>:4631:                                   ; preds = %4626
  %4632 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4633 = load i8*, i8** %4632, align 8
  %4634 = call i32 @strcmp(i8* %4633, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4635 = icmp eq i32 %4634, 0
  br i1 %4635, label %4690, label %4636

; <label>:4636:                                   ; preds = %4631
  %4637 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4638 = load i8*, i8** %4637, align 8
  %4639 = call i32 @strcmp(i8* %4638, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4640 = icmp eq i32 %4639, 0
  br i1 %4640, label %4689, label %4641

; <label>:4641:                                   ; preds = %4636
  %4642 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4643 = load i8*, i8** %4642, align 8
  %4644 = call i32 @strcmp(i8* %4643, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4645 = icmp eq i32 %4644, 0
  br i1 %4645, label %4688, label %4646

; <label>:4646:                                   ; preds = %4641
  %4647 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4648 = load i8*, i8** %4647, align 8
  %4649 = call i32 @strcmp(i8* %4648, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4650 = icmp eq i32 %4649, 0
  %4651 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4652 = load i8*, i8** %4651, align 8
  br i1 %4650, label %4687, label %4653

; <label>:4653:                                   ; preds = %4646
  %4654 = call i32 @strcmp(i8* %4652, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4655 = icmp eq i32 %4654, 0
  %4656 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4657 = load i8*, i8** %4656, align 8
  br i1 %4655, label %4686, label %4658

; <label>:4658:                                   ; preds = %4653
  %4659 = call i32 @strcmp(i8* %4657, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4660 = icmp eq i32 %4659, 0
  br i1 %4660, label %4685, label %4661

; <label>:4661:                                   ; preds = %4658
  %4662 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4663 = load i8*, i8** %4662, align 8
  %4664 = call i32 @strcmp(i8* %4663, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4665 = icmp eq i32 %4664, 0
  br i1 %4665, label %4684, label %4666

; <label>:4666:                                   ; preds = %4661
  %4667 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4668 = load i8*, i8** %4667, align 8
  %4669 = call i32 @strcmp(i8* %4668, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4670 = icmp eq i32 %4669, 0
  br i1 %4670, label %4681, label %4671

; <label>:4671:                                   ; preds = %4666
  %4672 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4673 = load i8*, i8** %4672, align 8
  %4674 = call i32 @strcmp(i8* %4673, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4675 = icmp eq i32 %4674, 0
  br i1 %4675, label %353, label %4676

; <label>:4676:                                   ; preds = %4671
  %4677 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 0
  %4678 = load i8*, i8** %4677, align 8
  %4679 = call i32 @strncmp(i8* %4678, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4680 = icmp eq i32 %4679, 0
  br i1 %4680, label %362, label %4699

; <label>:4681:                                   ; preds = %4666
  %4682 = load i32, i32* @verbosity, align 4
  %4683 = add nsw i32 %4682, 1
  store i32 %4683, i32* @verbosity, align 4
  br label %4699

; <label>:4684:                                   ; preds = %4661
  store i32 9, i32* @blockSize100k, align 4
  br label %4699

; <label>:4685:                                   ; preds = %4658
  store i32 1, i32* @blockSize100k, align 4
  br label %4699

; <label>:4686:                                   ; preds = %4653
  call void @redundant(i8* %4657)
  br label %4699

; <label>:4687:                                   ; preds = %4646
  call void @redundant(i8* %4652)
  br label %4699

; <label>:4688:                                   ; preds = %4641
  store i32 1, i32* @workFactor, align 4
  br label %4699

; <label>:4689:                                   ; preds = %4636
  call void @license()
  br label %4699

; <label>:4690:                                   ; preds = %4631
  call void @license()
  br label %4699

; <label>:4691:                                   ; preds = %4626
  store i8 0, i8* @noisy, align 1
  br label %4699

; <label>:4692:                                   ; preds = %4621
  store i8 1, i8* @smallMode, align 1
  br label %4699

; <label>:4693:                                   ; preds = %4616
  store i8 1, i8* @keepInputFiles, align 1
  br label %4699

; <label>:4694:                                   ; preds = %4611
  store i32 3, i32* @opMode, align 4
  br label %4699

; <label>:4695:                                   ; preds = %4606
  store i8 1, i8* @forceOverwrite, align 1
  br label %4699

; <label>:4696:                                   ; preds = %4601
  store i32 1, i32* @opMode, align 4
  br label %4699

; <label>:4697:                                   ; preds = %4596
  store i32 2, i32* @opMode, align 4
  br label %4699

; <label>:4698:                                   ; preds = %4591
  store i32 2, i32* @srcMode, align 4
  br label %4699

; <label>:4699:                                   ; preds = %4698, %4697, %4696, %4695, %4694, %4693, %4692, %4691, %4690, %4689, %4688, %4687, %4686, %4685, %4684, %4681, %4676
  call void @__loop_iteration_test___5()
  %4700 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4585, i32 0, i32 1
  %4701 = load %struct.zzzz*, %struct.zzzz** %4700, align 8
  %4702 = icmp ne %struct.zzzz* %4701, null
  br i1 %4702, label %.lr.ph39.16, label %.loopexit.loopexit

.lr.ph39.16:                                      ; preds = %4699
  call void @unroll_loop(i32 5)
  %4703 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4704 = load i8*, i8** %4703, align 8
  %4705 = call i32 @strcmp(i8* %4704, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4706 = icmp eq i32 %4705, 0
  br i1 %4706, label %.loopexit.loopexit, label %4707

; <label>:4707:                                   ; preds = %.lr.ph39.16
  %4708 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4709 = load i8*, i8** %4708, align 8
  %4710 = call i32 @strcmp(i8* %4709, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4711 = icmp eq i32 %4710, 0
  br i1 %4711, label %4814, label %4712

; <label>:4712:                                   ; preds = %4707
  %4713 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4714 = load i8*, i8** %4713, align 8
  %4715 = call i32 @strcmp(i8* %4714, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4716 = icmp eq i32 %4715, 0
  br i1 %4716, label %4813, label %4717

; <label>:4717:                                   ; preds = %4712
  %4718 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4719 = load i8*, i8** %4718, align 8
  %4720 = call i32 @strcmp(i8* %4719, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4721 = icmp eq i32 %4720, 0
  br i1 %4721, label %4812, label %4722

; <label>:4722:                                   ; preds = %4717
  %4723 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4724 = load i8*, i8** %4723, align 8
  %4725 = call i32 @strcmp(i8* %4724, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4726 = icmp eq i32 %4725, 0
  br i1 %4726, label %4811, label %4727

; <label>:4727:                                   ; preds = %4722
  %4728 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4729 = load i8*, i8** %4728, align 8
  %4730 = call i32 @strcmp(i8* %4729, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4731 = icmp eq i32 %4730, 0
  br i1 %4731, label %4810, label %4732

; <label>:4732:                                   ; preds = %4727
  %4733 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4734 = load i8*, i8** %4733, align 8
  %4735 = call i32 @strcmp(i8* %4734, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4736 = icmp eq i32 %4735, 0
  br i1 %4736, label %4809, label %4737

; <label>:4737:                                   ; preds = %4732
  %4738 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4739 = load i8*, i8** %4738, align 8
  %4740 = call i32 @strcmp(i8* %4739, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4741 = icmp eq i32 %4740, 0
  br i1 %4741, label %4808, label %4742

; <label>:4742:                                   ; preds = %4737
  %4743 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4744 = load i8*, i8** %4743, align 8
  %4745 = call i32 @strcmp(i8* %4744, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4746 = icmp eq i32 %4745, 0
  br i1 %4746, label %4807, label %4747

; <label>:4747:                                   ; preds = %4742
  %4748 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4749 = load i8*, i8** %4748, align 8
  %4750 = call i32 @strcmp(i8* %4749, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4751 = icmp eq i32 %4750, 0
  br i1 %4751, label %4806, label %4752

; <label>:4752:                                   ; preds = %4747
  %4753 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4754 = load i8*, i8** %4753, align 8
  %4755 = call i32 @strcmp(i8* %4754, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4756 = icmp eq i32 %4755, 0
  br i1 %4756, label %4805, label %4757

; <label>:4757:                                   ; preds = %4752
  %4758 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4759 = load i8*, i8** %4758, align 8
  %4760 = call i32 @strcmp(i8* %4759, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4761 = icmp eq i32 %4760, 0
  br i1 %4761, label %4804, label %4762

; <label>:4762:                                   ; preds = %4757
  %4763 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4764 = load i8*, i8** %4763, align 8
  %4765 = call i32 @strcmp(i8* %4764, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4766 = icmp eq i32 %4765, 0
  %4767 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4768 = load i8*, i8** %4767, align 8
  br i1 %4766, label %4803, label %4769

; <label>:4769:                                   ; preds = %4762
  %4770 = call i32 @strcmp(i8* %4768, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4771 = icmp eq i32 %4770, 0
  %4772 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4773 = load i8*, i8** %4772, align 8
  br i1 %4771, label %4802, label %4774

; <label>:4774:                                   ; preds = %4769
  %4775 = call i32 @strcmp(i8* %4773, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4776 = icmp eq i32 %4775, 0
  br i1 %4776, label %4801, label %4777

; <label>:4777:                                   ; preds = %4774
  %4778 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4779 = load i8*, i8** %4778, align 8
  %4780 = call i32 @strcmp(i8* %4779, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4781 = icmp eq i32 %4780, 0
  br i1 %4781, label %4800, label %4782

; <label>:4782:                                   ; preds = %4777
  %4783 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4784 = load i8*, i8** %4783, align 8
  %4785 = call i32 @strcmp(i8* %4784, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4786 = icmp eq i32 %4785, 0
  br i1 %4786, label %4797, label %4787

; <label>:4787:                                   ; preds = %4782
  %4788 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4789 = load i8*, i8** %4788, align 8
  %4790 = call i32 @strcmp(i8* %4789, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4791 = icmp eq i32 %4790, 0
  br i1 %4791, label %353, label %4792

; <label>:4792:                                   ; preds = %4787
  %4793 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 0
  %4794 = load i8*, i8** %4793, align 8
  %4795 = call i32 @strncmp(i8* %4794, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4796 = icmp eq i32 %4795, 0
  br i1 %4796, label %362, label %4815

; <label>:4797:                                   ; preds = %4782
  %4798 = load i32, i32* @verbosity, align 4
  %4799 = add nsw i32 %4798, 1
  store i32 %4799, i32* @verbosity, align 4
  br label %4815

; <label>:4800:                                   ; preds = %4777
  store i32 9, i32* @blockSize100k, align 4
  br label %4815

; <label>:4801:                                   ; preds = %4774
  store i32 1, i32* @blockSize100k, align 4
  br label %4815

; <label>:4802:                                   ; preds = %4769
  call void @redundant(i8* %4773)
  br label %4815

; <label>:4803:                                   ; preds = %4762
  call void @redundant(i8* %4768)
  br label %4815

; <label>:4804:                                   ; preds = %4757
  store i32 1, i32* @workFactor, align 4
  br label %4815

; <label>:4805:                                   ; preds = %4752
  call void @license()
  br label %4815

; <label>:4806:                                   ; preds = %4747
  call void @license()
  br label %4815

; <label>:4807:                                   ; preds = %4742
  store i8 0, i8* @noisy, align 1
  br label %4815

; <label>:4808:                                   ; preds = %4737
  store i8 1, i8* @smallMode, align 1
  br label %4815

; <label>:4809:                                   ; preds = %4732
  store i8 1, i8* @keepInputFiles, align 1
  br label %4815

; <label>:4810:                                   ; preds = %4727
  store i32 3, i32* @opMode, align 4
  br label %4815

; <label>:4811:                                   ; preds = %4722
  store i8 1, i8* @forceOverwrite, align 1
  br label %4815

; <label>:4812:                                   ; preds = %4717
  store i32 1, i32* @opMode, align 4
  br label %4815

; <label>:4813:                                   ; preds = %4712
  store i32 2, i32* @opMode, align 4
  br label %4815

; <label>:4814:                                   ; preds = %4707
  store i32 2, i32* @srcMode, align 4
  br label %4815

; <label>:4815:                                   ; preds = %4814, %4813, %4812, %4811, %4810, %4809, %4808, %4807, %4806, %4805, %4804, %4803, %4802, %4801, %4800, %4797, %4792
  call void @__loop_iteration_test___5()
  %4816 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4701, i32 0, i32 1
  %4817 = load %struct.zzzz*, %struct.zzzz** %4816, align 8
  %4818 = icmp ne %struct.zzzz* %4817, null
  br i1 %4818, label %.lr.ph39.17, label %.loopexit.loopexit

.lr.ph39.17:                                      ; preds = %4815
  call void @unroll_loop(i32 5)
  %4819 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4820 = load i8*, i8** %4819, align 8
  %4821 = call i32 @strcmp(i8* %4820, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4822 = icmp eq i32 %4821, 0
  br i1 %4822, label %.loopexit.loopexit, label %4823

; <label>:4823:                                   ; preds = %.lr.ph39.17
  %4824 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4825 = load i8*, i8** %4824, align 8
  %4826 = call i32 @strcmp(i8* %4825, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4827 = icmp eq i32 %4826, 0
  br i1 %4827, label %4930, label %4828

; <label>:4828:                                   ; preds = %4823
  %4829 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4830 = load i8*, i8** %4829, align 8
  %4831 = call i32 @strcmp(i8* %4830, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4832 = icmp eq i32 %4831, 0
  br i1 %4832, label %4929, label %4833

; <label>:4833:                                   ; preds = %4828
  %4834 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4835 = load i8*, i8** %4834, align 8
  %4836 = call i32 @strcmp(i8* %4835, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4837 = icmp eq i32 %4836, 0
  br i1 %4837, label %4928, label %4838

; <label>:4838:                                   ; preds = %4833
  %4839 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4840 = load i8*, i8** %4839, align 8
  %4841 = call i32 @strcmp(i8* %4840, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4842 = icmp eq i32 %4841, 0
  br i1 %4842, label %4927, label %4843

; <label>:4843:                                   ; preds = %4838
  %4844 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4845 = load i8*, i8** %4844, align 8
  %4846 = call i32 @strcmp(i8* %4845, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4847 = icmp eq i32 %4846, 0
  br i1 %4847, label %4926, label %4848

; <label>:4848:                                   ; preds = %4843
  %4849 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4850 = load i8*, i8** %4849, align 8
  %4851 = call i32 @strcmp(i8* %4850, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4852 = icmp eq i32 %4851, 0
  br i1 %4852, label %4925, label %4853

; <label>:4853:                                   ; preds = %4848
  %4854 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4855 = load i8*, i8** %4854, align 8
  %4856 = call i32 @strcmp(i8* %4855, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4857 = icmp eq i32 %4856, 0
  br i1 %4857, label %4924, label %4858

; <label>:4858:                                   ; preds = %4853
  %4859 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4860 = load i8*, i8** %4859, align 8
  %4861 = call i32 @strcmp(i8* %4860, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4862 = icmp eq i32 %4861, 0
  br i1 %4862, label %4923, label %4863

; <label>:4863:                                   ; preds = %4858
  %4864 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4865 = load i8*, i8** %4864, align 8
  %4866 = call i32 @strcmp(i8* %4865, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4867 = icmp eq i32 %4866, 0
  br i1 %4867, label %4922, label %4868

; <label>:4868:                                   ; preds = %4863
  %4869 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4870 = load i8*, i8** %4869, align 8
  %4871 = call i32 @strcmp(i8* %4870, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4872 = icmp eq i32 %4871, 0
  br i1 %4872, label %4921, label %4873

; <label>:4873:                                   ; preds = %4868
  %4874 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4875 = load i8*, i8** %4874, align 8
  %4876 = call i32 @strcmp(i8* %4875, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4877 = icmp eq i32 %4876, 0
  br i1 %4877, label %4920, label %4878

; <label>:4878:                                   ; preds = %4873
  %4879 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4880 = load i8*, i8** %4879, align 8
  %4881 = call i32 @strcmp(i8* %4880, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4882 = icmp eq i32 %4881, 0
  %4883 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4884 = load i8*, i8** %4883, align 8
  br i1 %4882, label %4919, label %4885

; <label>:4885:                                   ; preds = %4878
  %4886 = call i32 @strcmp(i8* %4884, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %4887 = icmp eq i32 %4886, 0
  %4888 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4889 = load i8*, i8** %4888, align 8
  br i1 %4887, label %4918, label %4890

; <label>:4890:                                   ; preds = %4885
  %4891 = call i32 @strcmp(i8* %4889, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %4892 = icmp eq i32 %4891, 0
  br i1 %4892, label %4917, label %4893

; <label>:4893:                                   ; preds = %4890
  %4894 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4895 = load i8*, i8** %4894, align 8
  %4896 = call i32 @strcmp(i8* %4895, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %4897 = icmp eq i32 %4896, 0
  br i1 %4897, label %4916, label %4898

; <label>:4898:                                   ; preds = %4893
  %4899 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4900 = load i8*, i8** %4899, align 8
  %4901 = call i32 @strcmp(i8* %4900, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %4902 = icmp eq i32 %4901, 0
  br i1 %4902, label %4913, label %4903

; <label>:4903:                                   ; preds = %4898
  %4904 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4905 = load i8*, i8** %4904, align 8
  %4906 = call i32 @strcmp(i8* %4905, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %4907 = icmp eq i32 %4906, 0
  br i1 %4907, label %353, label %4908

; <label>:4908:                                   ; preds = %4903
  %4909 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 0
  %4910 = load i8*, i8** %4909, align 8
  %4911 = call i32 @strncmp(i8* %4910, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %4912 = icmp eq i32 %4911, 0
  br i1 %4912, label %362, label %4931

; <label>:4913:                                   ; preds = %4898
  %4914 = load i32, i32* @verbosity, align 4
  %4915 = add nsw i32 %4914, 1
  store i32 %4915, i32* @verbosity, align 4
  br label %4931

; <label>:4916:                                   ; preds = %4893
  store i32 9, i32* @blockSize100k, align 4
  br label %4931

; <label>:4917:                                   ; preds = %4890
  store i32 1, i32* @blockSize100k, align 4
  br label %4931

; <label>:4918:                                   ; preds = %4885
  call void @redundant(i8* %4889)
  br label %4931

; <label>:4919:                                   ; preds = %4878
  call void @redundant(i8* %4884)
  br label %4931

; <label>:4920:                                   ; preds = %4873
  store i32 1, i32* @workFactor, align 4
  br label %4931

; <label>:4921:                                   ; preds = %4868
  call void @license()
  br label %4931

; <label>:4922:                                   ; preds = %4863
  call void @license()
  br label %4931

; <label>:4923:                                   ; preds = %4858
  store i8 0, i8* @noisy, align 1
  br label %4931

; <label>:4924:                                   ; preds = %4853
  store i8 1, i8* @smallMode, align 1
  br label %4931

; <label>:4925:                                   ; preds = %4848
  store i8 1, i8* @keepInputFiles, align 1
  br label %4931

; <label>:4926:                                   ; preds = %4843
  store i32 3, i32* @opMode, align 4
  br label %4931

; <label>:4927:                                   ; preds = %4838
  store i8 1, i8* @forceOverwrite, align 1
  br label %4931

; <label>:4928:                                   ; preds = %4833
  store i32 1, i32* @opMode, align 4
  br label %4931

; <label>:4929:                                   ; preds = %4828
  store i32 2, i32* @opMode, align 4
  br label %4931

; <label>:4930:                                   ; preds = %4823
  store i32 2, i32* @srcMode, align 4
  br label %4931

; <label>:4931:                                   ; preds = %4930, %4929, %4928, %4927, %4926, %4925, %4924, %4923, %4922, %4921, %4920, %4919, %4918, %4917, %4916, %4913, %4908
  call void @__loop_iteration_test___5()
  %4932 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4817, i32 0, i32 1
  %4933 = load %struct.zzzz*, %struct.zzzz** %4932, align 8
  %4934 = icmp ne %struct.zzzz* %4933, null
  br i1 %4934, label %.lr.ph39.18, label %.loopexit.loopexit

.lr.ph39.18:                                      ; preds = %4931
  call void @unroll_loop(i32 5)
  %4935 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4936 = load i8*, i8** %4935, align 8
  %4937 = call i32 @strcmp(i8* %4936, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %4938 = icmp eq i32 %4937, 0
  br i1 %4938, label %.loopexit.loopexit, label %4939

; <label>:4939:                                   ; preds = %.lr.ph39.18
  %4940 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4941 = load i8*, i8** %4940, align 8
  %4942 = call i32 @strcmp(i8* %4941, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %4943 = icmp eq i32 %4942, 0
  br i1 %4943, label %5046, label %4944

; <label>:4944:                                   ; preds = %4939
  %4945 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4946 = load i8*, i8** %4945, align 8
  %4947 = call i32 @strcmp(i8* %4946, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %4948 = icmp eq i32 %4947, 0
  br i1 %4948, label %5045, label %4949

; <label>:4949:                                   ; preds = %4944
  %4950 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4951 = load i8*, i8** %4950, align 8
  %4952 = call i32 @strcmp(i8* %4951, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %4953 = icmp eq i32 %4952, 0
  br i1 %4953, label %5044, label %4954

; <label>:4954:                                   ; preds = %4949
  %4955 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4956 = load i8*, i8** %4955, align 8
  %4957 = call i32 @strcmp(i8* %4956, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %4958 = icmp eq i32 %4957, 0
  br i1 %4958, label %5043, label %4959

; <label>:4959:                                   ; preds = %4954
  %4960 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4961 = load i8*, i8** %4960, align 8
  %4962 = call i32 @strcmp(i8* %4961, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %4963 = icmp eq i32 %4962, 0
  br i1 %4963, label %5042, label %4964

; <label>:4964:                                   ; preds = %4959
  %4965 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4966 = load i8*, i8** %4965, align 8
  %4967 = call i32 @strcmp(i8* %4966, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %4968 = icmp eq i32 %4967, 0
  br i1 %4968, label %5041, label %4969

; <label>:4969:                                   ; preds = %4964
  %4970 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4971 = load i8*, i8** %4970, align 8
  %4972 = call i32 @strcmp(i8* %4971, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %4973 = icmp eq i32 %4972, 0
  br i1 %4973, label %5040, label %4974

; <label>:4974:                                   ; preds = %4969
  %4975 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4976 = load i8*, i8** %4975, align 8
  %4977 = call i32 @strcmp(i8* %4976, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %4978 = icmp eq i32 %4977, 0
  br i1 %4978, label %5039, label %4979

; <label>:4979:                                   ; preds = %4974
  %4980 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4981 = load i8*, i8** %4980, align 8
  %4982 = call i32 @strcmp(i8* %4981, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %4983 = icmp eq i32 %4982, 0
  br i1 %4983, label %5038, label %4984

; <label>:4984:                                   ; preds = %4979
  %4985 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4986 = load i8*, i8** %4985, align 8
  %4987 = call i32 @strcmp(i8* %4986, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %4988 = icmp eq i32 %4987, 0
  br i1 %4988, label %5037, label %4989

; <label>:4989:                                   ; preds = %4984
  %4990 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4991 = load i8*, i8** %4990, align 8
  %4992 = call i32 @strcmp(i8* %4991, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %4993 = icmp eq i32 %4992, 0
  br i1 %4993, label %5036, label %4994

; <label>:4994:                                   ; preds = %4989
  %4995 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %4996 = load i8*, i8** %4995, align 8
  %4997 = call i32 @strcmp(i8* %4996, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %4998 = icmp eq i32 %4997, 0
  %4999 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %5000 = load i8*, i8** %4999, align 8
  br i1 %4998, label %5035, label %5001

; <label>:5001:                                   ; preds = %4994
  %5002 = call i32 @strcmp(i8* %5000, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %5003 = icmp eq i32 %5002, 0
  %5004 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %5005 = load i8*, i8** %5004, align 8
  br i1 %5003, label %5034, label %5006

; <label>:5006:                                   ; preds = %5001
  %5007 = call i32 @strcmp(i8* %5005, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %5008 = icmp eq i32 %5007, 0
  br i1 %5008, label %5033, label %5009

; <label>:5009:                                   ; preds = %5006
  %5010 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %5011 = load i8*, i8** %5010, align 8
  %5012 = call i32 @strcmp(i8* %5011, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %5013 = icmp eq i32 %5012, 0
  br i1 %5013, label %5032, label %5014

; <label>:5014:                                   ; preds = %5009
  %5015 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %5016 = load i8*, i8** %5015, align 8
  %5017 = call i32 @strcmp(i8* %5016, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %5018 = icmp eq i32 %5017, 0
  br i1 %5018, label %5029, label %5019

; <label>:5019:                                   ; preds = %5014
  %5020 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %5021 = load i8*, i8** %5020, align 8
  %5022 = call i32 @strcmp(i8* %5021, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %5023 = icmp eq i32 %5022, 0
  br i1 %5023, label %353, label %5024

; <label>:5024:                                   ; preds = %5019
  %5025 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 0
  %5026 = load i8*, i8** %5025, align 8
  %5027 = call i32 @strncmp(i8* %5026, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %5028 = icmp eq i32 %5027, 0
  br i1 %5028, label %362, label %5047

; <label>:5029:                                   ; preds = %5014
  %5030 = load i32, i32* @verbosity, align 4
  %5031 = add nsw i32 %5030, 1
  store i32 %5031, i32* @verbosity, align 4
  br label %5047

; <label>:5032:                                   ; preds = %5009
  store i32 9, i32* @blockSize100k, align 4
  br label %5047

; <label>:5033:                                   ; preds = %5006
  store i32 1, i32* @blockSize100k, align 4
  br label %5047

; <label>:5034:                                   ; preds = %5001
  call void @redundant(i8* %5005)
  br label %5047

; <label>:5035:                                   ; preds = %4994
  call void @redundant(i8* %5000)
  br label %5047

; <label>:5036:                                   ; preds = %4989
  store i32 1, i32* @workFactor, align 4
  br label %5047

; <label>:5037:                                   ; preds = %4984
  call void @license()
  br label %5047

; <label>:5038:                                   ; preds = %4979
  call void @license()
  br label %5047

; <label>:5039:                                   ; preds = %4974
  store i8 0, i8* @noisy, align 1
  br label %5047

; <label>:5040:                                   ; preds = %4969
  store i8 1, i8* @smallMode, align 1
  br label %5047

; <label>:5041:                                   ; preds = %4964
  store i8 1, i8* @keepInputFiles, align 1
  br label %5047

; <label>:5042:                                   ; preds = %4959
  store i32 3, i32* @opMode, align 4
  br label %5047

; <label>:5043:                                   ; preds = %4954
  store i8 1, i8* @forceOverwrite, align 1
  br label %5047

; <label>:5044:                                   ; preds = %4949
  store i32 1, i32* @opMode, align 4
  br label %5047

; <label>:5045:                                   ; preds = %4944
  store i32 2, i32* @opMode, align 4
  br label %5047

; <label>:5046:                                   ; preds = %4939
  store i32 2, i32* @srcMode, align 4
  br label %5047

; <label>:5047:                                   ; preds = %5046, %5045, %5044, %5043, %5042, %5041, %5040, %5039, %5038, %5037, %5036, %5035, %5034, %5033, %5032, %5029, %5024
  call void @__loop_iteration_test___5()
  %5048 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %4933, i32 0, i32 1
  %5049 = load %struct.zzzz*, %struct.zzzz** %5048, align 8
  %5050 = icmp ne %struct.zzzz* %5049, null
  br i1 %5050, label %.lr.ph39.19, label %.loopexit.loopexit

.lr.ph39.19:                                      ; preds = %5047
  call void @unroll_loop(i32 5)
  %5051 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5052 = load i8*, i8** %5051, align 8
  %5053 = call i32 @strcmp(i8* %5052, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5054 = icmp eq i32 %5053, 0
  br i1 %5054, label %.loopexit.loopexit, label %5055

; <label>:5055:                                   ; preds = %.lr.ph39.19
  %5056 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5057 = load i8*, i8** %5056, align 8
  %5058 = call i32 @strcmp(i8* %5057, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0)) #10
  %5059 = icmp eq i32 %5058, 0
  br i1 %5059, label %5162, label %5060

; <label>:5060:                                   ; preds = %5055
  %5061 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5062 = load i8*, i8** %5061, align 8
  %5063 = call i32 @strcmp(i8* %5062, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #10
  %5064 = icmp eq i32 %5063, 0
  br i1 %5064, label %5161, label %5065

; <label>:5065:                                   ; preds = %5060
  %5066 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5067 = load i8*, i8** %5066, align 8
  %5068 = call i32 @strcmp(i8* %5067, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #10
  %5069 = icmp eq i32 %5068, 0
  br i1 %5069, label %5160, label %5070

; <label>:5070:                                   ; preds = %5065
  %5071 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5072 = load i8*, i8** %5071, align 8
  %5073 = call i32 @strcmp(i8* %5072, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0)) #10
  %5074 = icmp eq i32 %5073, 0
  br i1 %5074, label %5159, label %5075

; <label>:5075:                                   ; preds = %5070
  %5076 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5077 = load i8*, i8** %5076, align 8
  %5078 = call i32 @strcmp(i8* %5077, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #10
  %5079 = icmp eq i32 %5078, 0
  br i1 %5079, label %5158, label %5080

; <label>:5080:                                   ; preds = %5075
  %5081 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5082 = load i8*, i8** %5081, align 8
  %5083 = call i32 @strcmp(i8* %5082, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0)) #10
  %5084 = icmp eq i32 %5083, 0
  br i1 %5084, label %5157, label %5085

; <label>:5085:                                   ; preds = %5080
  %5086 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5087 = load i8*, i8** %5086, align 8
  %5088 = call i32 @strcmp(i8* %5087, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0)) #10
  %5089 = icmp eq i32 %5088, 0
  br i1 %5089, label %5156, label %5090

; <label>:5090:                                   ; preds = %5085
  %5091 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5092 = load i8*, i8** %5091, align 8
  %5093 = call i32 @strcmp(i8* %5092, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0)) #10
  %5094 = icmp eq i32 %5093, 0
  br i1 %5094, label %5155, label %5095

; <label>:5095:                                   ; preds = %5090
  %5096 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5097 = load i8*, i8** %5096, align 8
  %5098 = call i32 @strcmp(i8* %5097, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0)) #10
  %5099 = icmp eq i32 %5098, 0
  br i1 %5099, label %5154, label %5100

; <label>:5100:                                   ; preds = %5095
  %5101 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5102 = load i8*, i8** %5101, align 8
  %5103 = call i32 @strcmp(i8* %5102, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0)) #10
  %5104 = icmp eq i32 %5103, 0
  br i1 %5104, label %5153, label %5105

; <label>:5105:                                   ; preds = %5100
  %5106 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5107 = load i8*, i8** %5106, align 8
  %5108 = call i32 @strcmp(i8* %5107, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0)) #10
  %5109 = icmp eq i32 %5108, 0
  br i1 %5109, label %5152, label %5110

; <label>:5110:                                   ; preds = %5105
  %5111 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5112 = load i8*, i8** %5111, align 8
  %5113 = call i32 @strcmp(i8* %5112, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0)) #10
  %5114 = icmp eq i32 %5113, 0
  %5115 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5116 = load i8*, i8** %5115, align 8
  br i1 %5114, label %5151, label %5117

; <label>:5117:                                   ; preds = %5110
  %5118 = call i32 @strcmp(i8* %5116, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.29, i64 0, i64 0)) #10
  %5119 = icmp eq i32 %5118, 0
  %5120 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5121 = load i8*, i8** %5120, align 8
  br i1 %5119, label %5150, label %5122

; <label>:5122:                                   ; preds = %5117
  %5123 = call i32 @strcmp(i8* %5121, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0)) #10
  %5124 = icmp eq i32 %5123, 0
  br i1 %5124, label %5149, label %5125

; <label>:5125:                                   ; preds = %5122
  %5126 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5127 = load i8*, i8** %5126, align 8
  %5128 = call i32 @strcmp(i8* %5127, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0)) #10
  %5129 = icmp eq i32 %5128, 0
  br i1 %5129, label %5148, label %5130

; <label>:5130:                                   ; preds = %5125
  %5131 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5132 = load i8*, i8** %5131, align 8
  %5133 = call i32 @strcmp(i8* %5132, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #10
  %5134 = icmp eq i32 %5133, 0
  br i1 %5134, label %5145, label %5135

; <label>:5135:                                   ; preds = %5130
  %5136 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5137 = load i8*, i8** %5136, align 8
  %5138 = call i32 @strcmp(i8* %5137, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i64 0, i64 0)) #10
  %5139 = icmp eq i32 %5138, 0
  br i1 %5139, label %353, label %5140

; <label>:5140:                                   ; preds = %5135
  %5141 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 0
  %5142 = load i8*, i8** %5141, align 8
  %5143 = call i32 @strncmp(i8* %5142, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #10
  %5144 = icmp eq i32 %5143, 0
  br i1 %5144, label %362, label %5163

; <label>:5145:                                   ; preds = %5130
  %5146 = load i32, i32* @verbosity, align 4
  %5147 = add nsw i32 %5146, 1
  store i32 %5147, i32* @verbosity, align 4
  br label %5163

; <label>:5148:                                   ; preds = %5125
  store i32 9, i32* @blockSize100k, align 4
  br label %5163

; <label>:5149:                                   ; preds = %5122
  store i32 1, i32* @blockSize100k, align 4
  br label %5163

; <label>:5150:                                   ; preds = %5117
  call void @redundant(i8* %5121)
  br label %5163

; <label>:5151:                                   ; preds = %5110
  call void @redundant(i8* %5116)
  br label %5163

; <label>:5152:                                   ; preds = %5105
  store i32 1, i32* @workFactor, align 4
  br label %5163

; <label>:5153:                                   ; preds = %5100
  call void @license()
  br label %5163

; <label>:5154:                                   ; preds = %5095
  call void @license()
  br label %5163

; <label>:5155:                                   ; preds = %5090
  store i8 0, i8* @noisy, align 1
  br label %5163

; <label>:5156:                                   ; preds = %5085
  store i8 1, i8* @smallMode, align 1
  br label %5163

; <label>:5157:                                   ; preds = %5080
  store i8 1, i8* @keepInputFiles, align 1
  br label %5163

; <label>:5158:                                   ; preds = %5075
  store i32 3, i32* @opMode, align 4
  br label %5163

; <label>:5159:                                   ; preds = %5070
  store i8 1, i8* @forceOverwrite, align 1
  br label %5163

; <label>:5160:                                   ; preds = %5065
  store i32 1, i32* @opMode, align 4
  br label %5163

; <label>:5161:                                   ; preds = %5060
  store i32 2, i32* @opMode, align 4
  br label %5163

; <label>:5162:                                   ; preds = %5055
  store i32 2, i32* @srcMode, align 4
  br label %5163

; <label>:5163:                                   ; preds = %5162, %5161, %5160, %5159, %5158, %5157, %5156, %5155, %5154, %5153, %5152, %5151, %5150, %5149, %5148, %5145, %5140
  call void @__loop_iteration_test___5()
  %5164 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5049, i32 0, i32 1
  %5165 = load %struct.zzzz*, %struct.zzzz** %5164, align 8
  br label %.loopexit.loopexit

.lr.ph23.1:                                       ; preds = %443
  call void @unroll_loop(i32 6)
  %5166 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %445, i32 0, i32 0
  %5167 = load i8*, i8** %5166, align 8
  %5168 = getelementptr [10 x i8], [10 x i8]* @96, i64 0, i64 0
  %5169 = getelementptr [3 x i8], [3 x i8]* @97, i64 0, i64 0
  %5170 = call i32 @strcmp(i8* %5168, i8* %5169) #10
  %5171 = icmp eq i32 1, 0
  br i1 false, label %5185, label %5172

; <label>:5172:                                   ; preds = %.lr.ph23.1
  %5173 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %445, i32 0, i32 0
  %5174 = load i8*, i8** %5173, align 8
  %5175 = load i8, i8* %5174, align 1
  %5176 = sext i8 104 to i32
  %5177 = icmp eq i32 104, 45
  %5178 = zext i8 1 to i32
  %5179 = icmp ne i32 1, 0
  %or.cond9.1 = and i1 false, true
  br i1 false, label %5185, label %5180

; <label>:5180:                                   ; preds = %5172
  %5181 = load i32, i32* @numFilesProcessed, align 4
  %5182 = add nsw i32 0, 1
  store i32 1, i32* @numFilesProcessed, align 4
  %5183 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %445, i32 0, i32 0
  %5184 = load i8*, i8** %5183, align 8
  call void @compress_clone(i8* %5184)
  br label %5185

; <label>:5185:                                   ; preds = %5180, %5172, %.lr.ph23.1
  %.3.1 = phi i8 [ 1, %5180 ], [ 0, %.lr.ph23.1 ], [ 1, %5172 ]
  call void @__loop_iteration_test___6()
  %5186 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %445, i32 0, i32 1
  %5187 = load %struct.zzzz*, %struct.zzzz** %5186, align 8
  %5188 = icmp ne i64 0, 0
  %5189 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph23.2, label %._crit_edge24.loopexit

.lr.ph23.2:                                       ; preds = %5185
  call void @unroll_loop(i32 6)
  %5190 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %5191 = load i8*, i8** %5190, align 8
  %5192 = call i32 @strcmp(i8* %5191, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5193 = icmp eq i32 %5192, 0
  br i1 %5193, label %5207, label %5194

; <label>:5194:                                   ; preds = %.lr.ph23.2
  %5195 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %5196 = load i8*, i8** %5195, align 8
  %5197 = load i8, i8* %5196, align 1
  %5198 = sext i8 %5197 to i32
  %5199 = icmp eq i32 %5198, 45
  %5200 = zext i8 1 to i32
  %5201 = icmp ne i32 %5200, 0
  %or.cond9.2 = and i1 %5199, %5201
  br i1 %or.cond9.2, label %5207, label %5202

; <label>:5202:                                   ; preds = %5194
  %5203 = load i32, i32* @numFilesProcessed, align 4
  %5204 = add nsw i32 %5203, 1
  store i32 %5204, i32* @numFilesProcessed, align 4
  %5205 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %5206 = load i8*, i8** %5205, align 8
  call void @compress(i8* %5206)
  br label %5207

; <label>:5207:                                   ; preds = %5202, %5194, %.lr.ph23.2
  %.3.2 = phi i8 [ 1, %5202 ], [ 0, %.lr.ph23.2 ], [ 1, %5194 ]
  call void @__loop_iteration_test___6()
  %5208 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %5209 = load %struct.zzzz*, %struct.zzzz** %5208, align 8
  %5210 = icmp ne %struct.zzzz* %5209, null
  br i1 %5210, label %.lr.ph23.3, label %._crit_edge24.loopexit

.lr.ph23.3:                                       ; preds = %5207
  call void @unroll_loop(i32 6)
  %5211 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5209, i32 0, i32 0
  %5212 = load i8*, i8** %5211, align 8
  %5213 = call i32 @strcmp(i8* %5212, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5214 = icmp eq i32 %5213, 0
  br i1 %5214, label %5228, label %5215

; <label>:5215:                                   ; preds = %.lr.ph23.3
  %5216 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5209, i32 0, i32 0
  %5217 = load i8*, i8** %5216, align 8
  %5218 = load i8, i8* %5217, align 1
  %5219 = sext i8 %5218 to i32
  %5220 = icmp eq i32 %5219, 45
  %5221 = zext i8 %.3.2 to i32
  %5222 = icmp ne i32 %5221, 0
  %or.cond9.3 = and i1 %5220, %5222
  br i1 %or.cond9.3, label %5228, label %5223

; <label>:5223:                                   ; preds = %5215
  %5224 = load i32, i32* @numFilesProcessed, align 4
  %5225 = add nsw i32 %5224, 1
  store i32 %5225, i32* @numFilesProcessed, align 4
  %5226 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5209, i32 0, i32 0
  %5227 = load i8*, i8** %5226, align 8
  call void @compress(i8* %5227)
  br label %5228

; <label>:5228:                                   ; preds = %5223, %5215, %.lr.ph23.3
  %.3.3 = phi i8 [ %.3.2, %5223 ], [ 0, %.lr.ph23.3 ], [ %.3.2, %5215 ]
  call void @__loop_iteration_test___6()
  %5229 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5209, i32 0, i32 1
  %5230 = load %struct.zzzz*, %struct.zzzz** %5229, align 8
  %5231 = icmp ne %struct.zzzz* %5230, null
  br i1 %5231, label %.lr.ph23.4, label %._crit_edge24.loopexit

.lr.ph23.4:                                       ; preds = %5228
  call void @unroll_loop(i32 6)
  %5232 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5230, i32 0, i32 0
  %5233 = load i8*, i8** %5232, align 8
  %5234 = call i32 @strcmp(i8* %5233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5235 = icmp eq i32 %5234, 0
  br i1 %5235, label %5249, label %5236

; <label>:5236:                                   ; preds = %.lr.ph23.4
  %5237 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5230, i32 0, i32 0
  %5238 = load i8*, i8** %5237, align 8
  %5239 = load i8, i8* %5238, align 1
  %5240 = sext i8 %5239 to i32
  %5241 = icmp eq i32 %5240, 45
  %5242 = zext i8 %.3.3 to i32
  %5243 = icmp ne i32 %5242, 0
  %or.cond9.4 = and i1 %5241, %5243
  br i1 %or.cond9.4, label %5249, label %5244

; <label>:5244:                                   ; preds = %5236
  %5245 = load i32, i32* @numFilesProcessed, align 4
  %5246 = add nsw i32 %5245, 1
  store i32 %5246, i32* @numFilesProcessed, align 4
  %5247 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5230, i32 0, i32 0
  %5248 = load i8*, i8** %5247, align 8
  call void @compress(i8* %5248)
  br label %5249

; <label>:5249:                                   ; preds = %5244, %5236, %.lr.ph23.4
  %.3.4 = phi i8 [ %.3.3, %5244 ], [ 0, %.lr.ph23.4 ], [ %.3.3, %5236 ]
  call void @__loop_iteration_test___6()
  %5250 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5230, i32 0, i32 1
  %5251 = load %struct.zzzz*, %struct.zzzz** %5250, align 8
  %5252 = icmp ne %struct.zzzz* %5251, null
  br i1 %5252, label %.lr.ph23.5, label %._crit_edge24.loopexit

.lr.ph23.5:                                       ; preds = %5249
  call void @unroll_loop(i32 6)
  %5253 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5251, i32 0, i32 0
  %5254 = load i8*, i8** %5253, align 8
  %5255 = call i32 @strcmp(i8* %5254, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5256 = icmp eq i32 %5255, 0
  br i1 %5256, label %5270, label %5257

; <label>:5257:                                   ; preds = %.lr.ph23.5
  %5258 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5251, i32 0, i32 0
  %5259 = load i8*, i8** %5258, align 8
  %5260 = load i8, i8* %5259, align 1
  %5261 = sext i8 %5260 to i32
  %5262 = icmp eq i32 %5261, 45
  %5263 = zext i8 %.3.4 to i32
  %5264 = icmp ne i32 %5263, 0
  %or.cond9.5 = and i1 %5262, %5264
  br i1 %or.cond9.5, label %5270, label %5265

; <label>:5265:                                   ; preds = %5257
  %5266 = load i32, i32* @numFilesProcessed, align 4
  %5267 = add nsw i32 %5266, 1
  store i32 %5267, i32* @numFilesProcessed, align 4
  %5268 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5251, i32 0, i32 0
  %5269 = load i8*, i8** %5268, align 8
  call void @compress(i8* %5269)
  br label %5270

; <label>:5270:                                   ; preds = %5265, %5257, %.lr.ph23.5
  %.3.5 = phi i8 [ %.3.4, %5265 ], [ 0, %.lr.ph23.5 ], [ %.3.4, %5257 ]
  call void @__loop_iteration_test___6()
  %5271 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5251, i32 0, i32 1
  %5272 = load %struct.zzzz*, %struct.zzzz** %5271, align 8
  %5273 = icmp ne %struct.zzzz* %5272, null
  br i1 %5273, label %.lr.ph23.6, label %._crit_edge24.loopexit

.lr.ph23.6:                                       ; preds = %5270
  call void @unroll_loop(i32 6)
  %5274 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5272, i32 0, i32 0
  %5275 = load i8*, i8** %5274, align 8
  %5276 = call i32 @strcmp(i8* %5275, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5277 = icmp eq i32 %5276, 0
  br i1 %5277, label %5291, label %5278

; <label>:5278:                                   ; preds = %.lr.ph23.6
  %5279 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5272, i32 0, i32 0
  %5280 = load i8*, i8** %5279, align 8
  %5281 = load i8, i8* %5280, align 1
  %5282 = sext i8 %5281 to i32
  %5283 = icmp eq i32 %5282, 45
  %5284 = zext i8 %.3.5 to i32
  %5285 = icmp ne i32 %5284, 0
  %or.cond9.6 = and i1 %5283, %5285
  br i1 %or.cond9.6, label %5291, label %5286

; <label>:5286:                                   ; preds = %5278
  %5287 = load i32, i32* @numFilesProcessed, align 4
  %5288 = add nsw i32 %5287, 1
  store i32 %5288, i32* @numFilesProcessed, align 4
  %5289 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5272, i32 0, i32 0
  %5290 = load i8*, i8** %5289, align 8
  call void @compress(i8* %5290)
  br label %5291

; <label>:5291:                                   ; preds = %5286, %5278, %.lr.ph23.6
  %.3.6 = phi i8 [ %.3.5, %5286 ], [ 0, %.lr.ph23.6 ], [ %.3.5, %5278 ]
  call void @__loop_iteration_test___6()
  %5292 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5272, i32 0, i32 1
  %5293 = load %struct.zzzz*, %struct.zzzz** %5292, align 8
  %5294 = icmp ne %struct.zzzz* %5293, null
  br i1 %5294, label %.lr.ph23.7, label %._crit_edge24.loopexit

.lr.ph23.7:                                       ; preds = %5291
  call void @unroll_loop(i32 6)
  %5295 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5293, i32 0, i32 0
  %5296 = load i8*, i8** %5295, align 8
  %5297 = call i32 @strcmp(i8* %5296, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5298 = icmp eq i32 %5297, 0
  br i1 %5298, label %5312, label %5299

; <label>:5299:                                   ; preds = %.lr.ph23.7
  %5300 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5293, i32 0, i32 0
  %5301 = load i8*, i8** %5300, align 8
  %5302 = load i8, i8* %5301, align 1
  %5303 = sext i8 %5302 to i32
  %5304 = icmp eq i32 %5303, 45
  %5305 = zext i8 %.3.6 to i32
  %5306 = icmp ne i32 %5305, 0
  %or.cond9.7 = and i1 %5304, %5306
  br i1 %or.cond9.7, label %5312, label %5307

; <label>:5307:                                   ; preds = %5299
  %5308 = load i32, i32* @numFilesProcessed, align 4
  %5309 = add nsw i32 %5308, 1
  store i32 %5309, i32* @numFilesProcessed, align 4
  %5310 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5293, i32 0, i32 0
  %5311 = load i8*, i8** %5310, align 8
  call void @compress(i8* %5311)
  br label %5312

; <label>:5312:                                   ; preds = %5307, %5299, %.lr.ph23.7
  %.3.7 = phi i8 [ %.3.6, %5307 ], [ 0, %.lr.ph23.7 ], [ %.3.6, %5299 ]
  call void @__loop_iteration_test___6()
  %5313 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5293, i32 0, i32 1
  %5314 = load %struct.zzzz*, %struct.zzzz** %5313, align 8
  %5315 = icmp ne %struct.zzzz* %5314, null
  br i1 %5315, label %.lr.ph23.8, label %._crit_edge24.loopexit

.lr.ph23.8:                                       ; preds = %5312
  call void @unroll_loop(i32 6)
  %5316 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5314, i32 0, i32 0
  %5317 = load i8*, i8** %5316, align 8
  %5318 = call i32 @strcmp(i8* %5317, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5319 = icmp eq i32 %5318, 0
  br i1 %5319, label %5333, label %5320

; <label>:5320:                                   ; preds = %.lr.ph23.8
  %5321 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5314, i32 0, i32 0
  %5322 = load i8*, i8** %5321, align 8
  %5323 = load i8, i8* %5322, align 1
  %5324 = sext i8 %5323 to i32
  %5325 = icmp eq i32 %5324, 45
  %5326 = zext i8 %.3.7 to i32
  %5327 = icmp ne i32 %5326, 0
  %or.cond9.8 = and i1 %5325, %5327
  br i1 %or.cond9.8, label %5333, label %5328

; <label>:5328:                                   ; preds = %5320
  %5329 = load i32, i32* @numFilesProcessed, align 4
  %5330 = add nsw i32 %5329, 1
  store i32 %5330, i32* @numFilesProcessed, align 4
  %5331 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5314, i32 0, i32 0
  %5332 = load i8*, i8** %5331, align 8
  call void @compress(i8* %5332)
  br label %5333

; <label>:5333:                                   ; preds = %5328, %5320, %.lr.ph23.8
  %.3.8 = phi i8 [ %.3.7, %5328 ], [ 0, %.lr.ph23.8 ], [ %.3.7, %5320 ]
  call void @__loop_iteration_test___6()
  %5334 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5314, i32 0, i32 1
  %5335 = load %struct.zzzz*, %struct.zzzz** %5334, align 8
  %5336 = icmp ne %struct.zzzz* %5335, null
  br i1 %5336, label %.lr.ph23.9, label %._crit_edge24.loopexit

.lr.ph23.9:                                       ; preds = %5333
  call void @unroll_loop(i32 6)
  %5337 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5335, i32 0, i32 0
  %5338 = load i8*, i8** %5337, align 8
  %5339 = call i32 @strcmp(i8* %5338, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5340 = icmp eq i32 %5339, 0
  br i1 %5340, label %5354, label %5341

; <label>:5341:                                   ; preds = %.lr.ph23.9
  %5342 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5335, i32 0, i32 0
  %5343 = load i8*, i8** %5342, align 8
  %5344 = load i8, i8* %5343, align 1
  %5345 = sext i8 %5344 to i32
  %5346 = icmp eq i32 %5345, 45
  %5347 = zext i8 %.3.8 to i32
  %5348 = icmp ne i32 %5347, 0
  %or.cond9.9 = and i1 %5346, %5348
  br i1 %or.cond9.9, label %5354, label %5349

; <label>:5349:                                   ; preds = %5341
  %5350 = load i32, i32* @numFilesProcessed, align 4
  %5351 = add nsw i32 %5350, 1
  store i32 %5351, i32* @numFilesProcessed, align 4
  %5352 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5335, i32 0, i32 0
  %5353 = load i8*, i8** %5352, align 8
  call void @compress(i8* %5353)
  br label %5354

; <label>:5354:                                   ; preds = %5349, %5341, %.lr.ph23.9
  %.3.9 = phi i8 [ %.3.8, %5349 ], [ 0, %.lr.ph23.9 ], [ %.3.8, %5341 ]
  call void @__loop_iteration_test___6()
  %5355 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5335, i32 0, i32 1
  %5356 = load %struct.zzzz*, %struct.zzzz** %5355, align 8
  %5357 = icmp ne %struct.zzzz* %5356, null
  br i1 %5357, label %.lr.ph23.10, label %._crit_edge24.loopexit

.lr.ph23.10:                                      ; preds = %5354
  call void @unroll_loop(i32 6)
  %5358 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5356, i32 0, i32 0
  %5359 = load i8*, i8** %5358, align 8
  %5360 = call i32 @strcmp(i8* %5359, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5361 = icmp eq i32 %5360, 0
  br i1 %5361, label %5375, label %5362

; <label>:5362:                                   ; preds = %.lr.ph23.10
  %5363 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5356, i32 0, i32 0
  %5364 = load i8*, i8** %5363, align 8
  %5365 = load i8, i8* %5364, align 1
  %5366 = sext i8 %5365 to i32
  %5367 = icmp eq i32 %5366, 45
  %5368 = zext i8 %.3.9 to i32
  %5369 = icmp ne i32 %5368, 0
  %or.cond9.10 = and i1 %5367, %5369
  br i1 %or.cond9.10, label %5375, label %5370

; <label>:5370:                                   ; preds = %5362
  %5371 = load i32, i32* @numFilesProcessed, align 4
  %5372 = add nsw i32 %5371, 1
  store i32 %5372, i32* @numFilesProcessed, align 4
  %5373 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5356, i32 0, i32 0
  %5374 = load i8*, i8** %5373, align 8
  call void @compress(i8* %5374)
  br label %5375

; <label>:5375:                                   ; preds = %5370, %5362, %.lr.ph23.10
  %.3.10 = phi i8 [ %.3.9, %5370 ], [ 0, %.lr.ph23.10 ], [ %.3.9, %5362 ]
  call void @__loop_iteration_test___6()
  %5376 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5356, i32 0, i32 1
  %5377 = load %struct.zzzz*, %struct.zzzz** %5376, align 8
  %5378 = icmp ne %struct.zzzz* %5377, null
  br i1 %5378, label %.lr.ph23.11, label %._crit_edge24.loopexit

.lr.ph23.11:                                      ; preds = %5375
  call void @unroll_loop(i32 6)
  %5379 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5377, i32 0, i32 0
  %5380 = load i8*, i8** %5379, align 8
  %5381 = call i32 @strcmp(i8* %5380, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5382 = icmp eq i32 %5381, 0
  br i1 %5382, label %5396, label %5383

; <label>:5383:                                   ; preds = %.lr.ph23.11
  %5384 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5377, i32 0, i32 0
  %5385 = load i8*, i8** %5384, align 8
  %5386 = load i8, i8* %5385, align 1
  %5387 = sext i8 %5386 to i32
  %5388 = icmp eq i32 %5387, 45
  %5389 = zext i8 %.3.10 to i32
  %5390 = icmp ne i32 %5389, 0
  %or.cond9.11 = and i1 %5388, %5390
  br i1 %or.cond9.11, label %5396, label %5391

; <label>:5391:                                   ; preds = %5383
  %5392 = load i32, i32* @numFilesProcessed, align 4
  %5393 = add nsw i32 %5392, 1
  store i32 %5393, i32* @numFilesProcessed, align 4
  %5394 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5377, i32 0, i32 0
  %5395 = load i8*, i8** %5394, align 8
  call void @compress(i8* %5395)
  br label %5396

; <label>:5396:                                   ; preds = %5391, %5383, %.lr.ph23.11
  %.3.11 = phi i8 [ %.3.10, %5391 ], [ 0, %.lr.ph23.11 ], [ %.3.10, %5383 ]
  call void @__loop_iteration_test___6()
  %5397 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5377, i32 0, i32 1
  %5398 = load %struct.zzzz*, %struct.zzzz** %5397, align 8
  %5399 = icmp ne %struct.zzzz* %5398, null
  br i1 %5399, label %.lr.ph23.12, label %._crit_edge24.loopexit

.lr.ph23.12:                                      ; preds = %5396
  call void @unroll_loop(i32 6)
  %5400 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5398, i32 0, i32 0
  %5401 = load i8*, i8** %5400, align 8
  %5402 = call i32 @strcmp(i8* %5401, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5403 = icmp eq i32 %5402, 0
  br i1 %5403, label %5417, label %5404

; <label>:5404:                                   ; preds = %.lr.ph23.12
  %5405 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5398, i32 0, i32 0
  %5406 = load i8*, i8** %5405, align 8
  %5407 = load i8, i8* %5406, align 1
  %5408 = sext i8 %5407 to i32
  %5409 = icmp eq i32 %5408, 45
  %5410 = zext i8 %.3.11 to i32
  %5411 = icmp ne i32 %5410, 0
  %or.cond9.12 = and i1 %5409, %5411
  br i1 %or.cond9.12, label %5417, label %5412

; <label>:5412:                                   ; preds = %5404
  %5413 = load i32, i32* @numFilesProcessed, align 4
  %5414 = add nsw i32 %5413, 1
  store i32 %5414, i32* @numFilesProcessed, align 4
  %5415 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5398, i32 0, i32 0
  %5416 = load i8*, i8** %5415, align 8
  call void @compress(i8* %5416)
  br label %5417

; <label>:5417:                                   ; preds = %5412, %5404, %.lr.ph23.12
  %.3.12 = phi i8 [ %.3.11, %5412 ], [ 0, %.lr.ph23.12 ], [ %.3.11, %5404 ]
  call void @__loop_iteration_test___6()
  %5418 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5398, i32 0, i32 1
  %5419 = load %struct.zzzz*, %struct.zzzz** %5418, align 8
  %5420 = icmp ne %struct.zzzz* %5419, null
  br i1 %5420, label %.lr.ph23.13, label %._crit_edge24.loopexit

.lr.ph23.13:                                      ; preds = %5417
  call void @unroll_loop(i32 6)
  %5421 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5419, i32 0, i32 0
  %5422 = load i8*, i8** %5421, align 8
  %5423 = call i32 @strcmp(i8* %5422, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5424 = icmp eq i32 %5423, 0
  br i1 %5424, label %5438, label %5425

; <label>:5425:                                   ; preds = %.lr.ph23.13
  %5426 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5419, i32 0, i32 0
  %5427 = load i8*, i8** %5426, align 8
  %5428 = load i8, i8* %5427, align 1
  %5429 = sext i8 %5428 to i32
  %5430 = icmp eq i32 %5429, 45
  %5431 = zext i8 %.3.12 to i32
  %5432 = icmp ne i32 %5431, 0
  %or.cond9.13 = and i1 %5430, %5432
  br i1 %or.cond9.13, label %5438, label %5433

; <label>:5433:                                   ; preds = %5425
  %5434 = load i32, i32* @numFilesProcessed, align 4
  %5435 = add nsw i32 %5434, 1
  store i32 %5435, i32* @numFilesProcessed, align 4
  %5436 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5419, i32 0, i32 0
  %5437 = load i8*, i8** %5436, align 8
  call void @compress(i8* %5437)
  br label %5438

; <label>:5438:                                   ; preds = %5433, %5425, %.lr.ph23.13
  %.3.13 = phi i8 [ %.3.12, %5433 ], [ 0, %.lr.ph23.13 ], [ %.3.12, %5425 ]
  call void @__loop_iteration_test___6()
  %5439 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5419, i32 0, i32 1
  %5440 = load %struct.zzzz*, %struct.zzzz** %5439, align 8
  %5441 = icmp ne %struct.zzzz* %5440, null
  br i1 %5441, label %.lr.ph23.14, label %._crit_edge24.loopexit

.lr.ph23.14:                                      ; preds = %5438
  call void @unroll_loop(i32 6)
  %5442 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5440, i32 0, i32 0
  %5443 = load i8*, i8** %5442, align 8
  %5444 = call i32 @strcmp(i8* %5443, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5445 = icmp eq i32 %5444, 0
  br i1 %5445, label %5459, label %5446

; <label>:5446:                                   ; preds = %.lr.ph23.14
  %5447 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5440, i32 0, i32 0
  %5448 = load i8*, i8** %5447, align 8
  %5449 = load i8, i8* %5448, align 1
  %5450 = sext i8 %5449 to i32
  %5451 = icmp eq i32 %5450, 45
  %5452 = zext i8 %.3.13 to i32
  %5453 = icmp ne i32 %5452, 0
  %or.cond9.14 = and i1 %5451, %5453
  br i1 %or.cond9.14, label %5459, label %5454

; <label>:5454:                                   ; preds = %5446
  %5455 = load i32, i32* @numFilesProcessed, align 4
  %5456 = add nsw i32 %5455, 1
  store i32 %5456, i32* @numFilesProcessed, align 4
  %5457 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5440, i32 0, i32 0
  %5458 = load i8*, i8** %5457, align 8
  call void @compress(i8* %5458)
  br label %5459

; <label>:5459:                                   ; preds = %5454, %5446, %.lr.ph23.14
  %.3.14 = phi i8 [ %.3.13, %5454 ], [ 0, %.lr.ph23.14 ], [ %.3.13, %5446 ]
  call void @__loop_iteration_test___6()
  %5460 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5440, i32 0, i32 1
  %5461 = load %struct.zzzz*, %struct.zzzz** %5460, align 8
  %5462 = icmp ne %struct.zzzz* %5461, null
  br i1 %5462, label %.lr.ph23.15, label %._crit_edge24.loopexit

.lr.ph23.15:                                      ; preds = %5459
  call void @unroll_loop(i32 6)
  %5463 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5461, i32 0, i32 0
  %5464 = load i8*, i8** %5463, align 8
  %5465 = call i32 @strcmp(i8* %5464, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5466 = icmp eq i32 %5465, 0
  br i1 %5466, label %5480, label %5467

; <label>:5467:                                   ; preds = %.lr.ph23.15
  %5468 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5461, i32 0, i32 0
  %5469 = load i8*, i8** %5468, align 8
  %5470 = load i8, i8* %5469, align 1
  %5471 = sext i8 %5470 to i32
  %5472 = icmp eq i32 %5471, 45
  %5473 = zext i8 %.3.14 to i32
  %5474 = icmp ne i32 %5473, 0
  %or.cond9.15 = and i1 %5472, %5474
  br i1 %or.cond9.15, label %5480, label %5475

; <label>:5475:                                   ; preds = %5467
  %5476 = load i32, i32* @numFilesProcessed, align 4
  %5477 = add nsw i32 %5476, 1
  store i32 %5477, i32* @numFilesProcessed, align 4
  %5478 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5461, i32 0, i32 0
  %5479 = load i8*, i8** %5478, align 8
  call void @compress(i8* %5479)
  br label %5480

; <label>:5480:                                   ; preds = %5475, %5467, %.lr.ph23.15
  %.3.15 = phi i8 [ %.3.14, %5475 ], [ 0, %.lr.ph23.15 ], [ %.3.14, %5467 ]
  call void @__loop_iteration_test___6()
  %5481 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5461, i32 0, i32 1
  %5482 = load %struct.zzzz*, %struct.zzzz** %5481, align 8
  %5483 = icmp ne %struct.zzzz* %5482, null
  br i1 %5483, label %.lr.ph23.16, label %._crit_edge24.loopexit

.lr.ph23.16:                                      ; preds = %5480
  call void @unroll_loop(i32 6)
  %5484 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5482, i32 0, i32 0
  %5485 = load i8*, i8** %5484, align 8
  %5486 = call i32 @strcmp(i8* %5485, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5487 = icmp eq i32 %5486, 0
  br i1 %5487, label %5501, label %5488

; <label>:5488:                                   ; preds = %.lr.ph23.16
  %5489 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5482, i32 0, i32 0
  %5490 = load i8*, i8** %5489, align 8
  %5491 = load i8, i8* %5490, align 1
  %5492 = sext i8 %5491 to i32
  %5493 = icmp eq i32 %5492, 45
  %5494 = zext i8 %.3.15 to i32
  %5495 = icmp ne i32 %5494, 0
  %or.cond9.16 = and i1 %5493, %5495
  br i1 %or.cond9.16, label %5501, label %5496

; <label>:5496:                                   ; preds = %5488
  %5497 = load i32, i32* @numFilesProcessed, align 4
  %5498 = add nsw i32 %5497, 1
  store i32 %5498, i32* @numFilesProcessed, align 4
  %5499 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5482, i32 0, i32 0
  %5500 = load i8*, i8** %5499, align 8
  call void @compress(i8* %5500)
  br label %5501

; <label>:5501:                                   ; preds = %5496, %5488, %.lr.ph23.16
  %.3.16 = phi i8 [ %.3.15, %5496 ], [ 0, %.lr.ph23.16 ], [ %.3.15, %5488 ]
  call void @__loop_iteration_test___6()
  %5502 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5482, i32 0, i32 1
  %5503 = load %struct.zzzz*, %struct.zzzz** %5502, align 8
  %5504 = icmp ne %struct.zzzz* %5503, null
  br i1 %5504, label %.lr.ph23.17, label %._crit_edge24.loopexit

.lr.ph23.17:                                      ; preds = %5501
  call void @unroll_loop(i32 6)
  %5505 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5503, i32 0, i32 0
  %5506 = load i8*, i8** %5505, align 8
  %5507 = call i32 @strcmp(i8* %5506, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5508 = icmp eq i32 %5507, 0
  br i1 %5508, label %5522, label %5509

; <label>:5509:                                   ; preds = %.lr.ph23.17
  %5510 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5503, i32 0, i32 0
  %5511 = load i8*, i8** %5510, align 8
  %5512 = load i8, i8* %5511, align 1
  %5513 = sext i8 %5512 to i32
  %5514 = icmp eq i32 %5513, 45
  %5515 = zext i8 %.3.16 to i32
  %5516 = icmp ne i32 %5515, 0
  %or.cond9.17 = and i1 %5514, %5516
  br i1 %or.cond9.17, label %5522, label %5517

; <label>:5517:                                   ; preds = %5509
  %5518 = load i32, i32* @numFilesProcessed, align 4
  %5519 = add nsw i32 %5518, 1
  store i32 %5519, i32* @numFilesProcessed, align 4
  %5520 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5503, i32 0, i32 0
  %5521 = load i8*, i8** %5520, align 8
  call void @compress(i8* %5521)
  br label %5522

; <label>:5522:                                   ; preds = %5517, %5509, %.lr.ph23.17
  %.3.17 = phi i8 [ %.3.16, %5517 ], [ 0, %.lr.ph23.17 ], [ %.3.16, %5509 ]
  call void @__loop_iteration_test___6()
  %5523 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5503, i32 0, i32 1
  %5524 = load %struct.zzzz*, %struct.zzzz** %5523, align 8
  %5525 = icmp ne %struct.zzzz* %5524, null
  br i1 %5525, label %.lr.ph23.18, label %._crit_edge24.loopexit

.lr.ph23.18:                                      ; preds = %5522
  call void @unroll_loop(i32 6)
  %5526 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5524, i32 0, i32 0
  %5527 = load i8*, i8** %5526, align 8
  %5528 = call i32 @strcmp(i8* %5527, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5529 = icmp eq i32 %5528, 0
  br i1 %5529, label %5543, label %5530

; <label>:5530:                                   ; preds = %.lr.ph23.18
  %5531 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5524, i32 0, i32 0
  %5532 = load i8*, i8** %5531, align 8
  %5533 = load i8, i8* %5532, align 1
  %5534 = sext i8 %5533 to i32
  %5535 = icmp eq i32 %5534, 45
  %5536 = zext i8 %.3.17 to i32
  %5537 = icmp ne i32 %5536, 0
  %or.cond9.18 = and i1 %5535, %5537
  br i1 %or.cond9.18, label %5543, label %5538

; <label>:5538:                                   ; preds = %5530
  %5539 = load i32, i32* @numFilesProcessed, align 4
  %5540 = add nsw i32 %5539, 1
  store i32 %5540, i32* @numFilesProcessed, align 4
  %5541 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5524, i32 0, i32 0
  %5542 = load i8*, i8** %5541, align 8
  call void @compress(i8* %5542)
  br label %5543

; <label>:5543:                                   ; preds = %5538, %5530, %.lr.ph23.18
  %.3.18 = phi i8 [ %.3.17, %5538 ], [ 0, %.lr.ph23.18 ], [ %.3.17, %5530 ]
  call void @__loop_iteration_test___6()
  %5544 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5524, i32 0, i32 1
  %5545 = load %struct.zzzz*, %struct.zzzz** %5544, align 8
  %5546 = icmp ne %struct.zzzz* %5545, null
  br i1 %5546, label %.lr.ph23.19, label %._crit_edge24.loopexit

.lr.ph23.19:                                      ; preds = %5543
  call void @unroll_loop(i32 6)
  %5547 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5545, i32 0, i32 0
  %5548 = load i8*, i8** %5547, align 8
  %5549 = call i32 @strcmp(i8* %5548, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #10
  %5550 = icmp eq i32 %5549, 0
  br i1 %5550, label %5564, label %5551

; <label>:5551:                                   ; preds = %.lr.ph23.19
  %5552 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5545, i32 0, i32 0
  %5553 = load i8*, i8** %5552, align 8
  %5554 = load i8, i8* %5553, align 1
  %5555 = sext i8 %5554 to i32
  %5556 = icmp eq i32 %5555, 45
  %5557 = zext i8 %.3.18 to i32
  %5558 = icmp ne i32 %5557, 0
  %or.cond9.19 = and i1 %5556, %5558
  br i1 %or.cond9.19, label %5564, label %5559

; <label>:5559:                                   ; preds = %5551
  %5560 = load i32, i32* @numFilesProcessed, align 4
  %5561 = add nsw i32 %5560, 1
  store i32 %5561, i32* @numFilesProcessed, align 4
  %5562 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5545, i32 0, i32 0
  %5563 = load i8*, i8** %5562, align 8
  call void @compress(i8* %5563)
  br label %5564

; <label>:5564:                                   ; preds = %5559, %5551, %.lr.ph23.19
  call void @__loop_iteration_test___6()
  %5565 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5545, i32 0, i32 1
  %5566 = load %struct.zzzz*, %struct.zzzz** %5565, align 8
  br label %._crit_edge24.loopexit

.lr.ph.1:                                         ; preds = %537
  call void @unroll_loop(i32 9)
  %5567 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %529, i32 0, i32 1
  %5568 = load %struct.zzzz*, %struct.zzzz** %5567, align 8
  %5569 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %529, i32 0, i32 0
  %5570 = load i8*, i8** %5569, align 8
  %5571 = icmp ne i64 10000607, 0
  %5572 = icmp ne i8* %5570, null
  br i1 true, label %5573, label %5576

; <label>:5573:                                   ; preds = %.lr.ph.1
  %5574 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %529, i32 0, i32 0
  %5575 = load i8*, i8** %5574, align 8
  call void @free(i8* %5575) #9
  br label %5576

; <label>:5576:                                   ; preds = %5573, %.lr.ph.1
  call void @__loop_iteration_test___7()
  %5577 = bitcast %struct.zzzz* %529 to i8*
  call void @free(i8* %5577) #9
  %5578 = icmp ne i64 0, 0
  %5579 = icmp ne %struct.zzzz* null, null
  br i1 false, label %.lr.ph.2, label %._crit_edge.loopexit

.lr.ph.2:                                         ; preds = %5576
  call void @unroll_loop(i32 9)
  %5580 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 1
  %5581 = load %struct.zzzz*, %struct.zzzz** %5580, align 8
  %5582 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %5583 = load i8*, i8** %5582, align 8
  %5584 = icmp ne i8* %5583, null
  br i1 %5584, label %5585, label %5588

; <label>:5585:                                   ; preds = %.lr.ph.2
  %5586 = getelementptr inbounds %struct.zzzz, %struct.zzzz* null, i32 0, i32 0
  %5587 = load i8*, i8** %5586, align 8
  call void @free(i8* %5587) #9
  br label %5588

; <label>:5588:                                   ; preds = %5585, %.lr.ph.2
  call void @__loop_iteration_test___7()
  %5589 = bitcast %struct.zzzz* null to i8*
  call void @free(i8* %5589) #9
  %5590 = icmp ne %struct.zzzz* %5581, null
  br i1 %5590, label %.lr.ph.3, label %._crit_edge.loopexit

.lr.ph.3:                                         ; preds = %5588
  call void @unroll_loop(i32 9)
  %5591 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5581, i32 0, i32 1
  %5592 = load %struct.zzzz*, %struct.zzzz** %5591, align 8
  %5593 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5581, i32 0, i32 0
  %5594 = load i8*, i8** %5593, align 8
  %5595 = icmp ne i8* %5594, null
  br i1 %5595, label %5596, label %5599

; <label>:5596:                                   ; preds = %.lr.ph.3
  %5597 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5581, i32 0, i32 0
  %5598 = load i8*, i8** %5597, align 8
  call void @free(i8* %5598) #9
  br label %5599

; <label>:5599:                                   ; preds = %5596, %.lr.ph.3
  call void @__loop_iteration_test___7()
  %5600 = bitcast %struct.zzzz* %5581 to i8*
  call void @free(i8* %5600) #9
  %5601 = icmp ne %struct.zzzz* %5592, null
  br i1 %5601, label %.lr.ph.4, label %._crit_edge.loopexit

.lr.ph.4:                                         ; preds = %5599
  call void @unroll_loop(i32 9)
  %5602 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5592, i32 0, i32 1
  %5603 = load %struct.zzzz*, %struct.zzzz** %5602, align 8
  %5604 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5592, i32 0, i32 0
  %5605 = load i8*, i8** %5604, align 8
  %5606 = icmp ne i8* %5605, null
  br i1 %5606, label %5607, label %5610

; <label>:5607:                                   ; preds = %.lr.ph.4
  %5608 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5592, i32 0, i32 0
  %5609 = load i8*, i8** %5608, align 8
  call void @free(i8* %5609) #9
  br label %5610

; <label>:5610:                                   ; preds = %5607, %.lr.ph.4
  call void @__loop_iteration_test___7()
  %5611 = bitcast %struct.zzzz* %5592 to i8*
  call void @free(i8* %5611) #9
  %5612 = icmp ne %struct.zzzz* %5603, null
  br i1 %5612, label %.lr.ph.5, label %._crit_edge.loopexit

.lr.ph.5:                                         ; preds = %5610
  call void @unroll_loop(i32 9)
  %5613 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5603, i32 0, i32 1
  %5614 = load %struct.zzzz*, %struct.zzzz** %5613, align 8
  %5615 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5603, i32 0, i32 0
  %5616 = load i8*, i8** %5615, align 8
  %5617 = icmp ne i8* %5616, null
  br i1 %5617, label %5618, label %5621

; <label>:5618:                                   ; preds = %.lr.ph.5
  %5619 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5603, i32 0, i32 0
  %5620 = load i8*, i8** %5619, align 8
  call void @free(i8* %5620) #9
  br label %5621

; <label>:5621:                                   ; preds = %5618, %.lr.ph.5
  call void @__loop_iteration_test___7()
  %5622 = bitcast %struct.zzzz* %5603 to i8*
  call void @free(i8* %5622) #9
  %5623 = icmp ne %struct.zzzz* %5614, null
  br i1 %5623, label %.lr.ph.6, label %._crit_edge.loopexit

.lr.ph.6:                                         ; preds = %5621
  call void @unroll_loop(i32 9)
  %5624 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5614, i32 0, i32 1
  %5625 = load %struct.zzzz*, %struct.zzzz** %5624, align 8
  %5626 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5614, i32 0, i32 0
  %5627 = load i8*, i8** %5626, align 8
  %5628 = icmp ne i8* %5627, null
  br i1 %5628, label %5629, label %5632

; <label>:5629:                                   ; preds = %.lr.ph.6
  %5630 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5614, i32 0, i32 0
  %5631 = load i8*, i8** %5630, align 8
  call void @free(i8* %5631) #9
  br label %5632

; <label>:5632:                                   ; preds = %5629, %.lr.ph.6
  call void @__loop_iteration_test___7()
  %5633 = bitcast %struct.zzzz* %5614 to i8*
  call void @free(i8* %5633) #9
  %5634 = icmp ne %struct.zzzz* %5625, null
  br i1 %5634, label %.lr.ph.7, label %._crit_edge.loopexit

.lr.ph.7:                                         ; preds = %5632
  call void @unroll_loop(i32 9)
  %5635 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5625, i32 0, i32 1
  %5636 = load %struct.zzzz*, %struct.zzzz** %5635, align 8
  %5637 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5625, i32 0, i32 0
  %5638 = load i8*, i8** %5637, align 8
  %5639 = icmp ne i8* %5638, null
  br i1 %5639, label %5640, label %5643

; <label>:5640:                                   ; preds = %.lr.ph.7
  %5641 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5625, i32 0, i32 0
  %5642 = load i8*, i8** %5641, align 8
  call void @free(i8* %5642) #9
  br label %5643

; <label>:5643:                                   ; preds = %5640, %.lr.ph.7
  call void @__loop_iteration_test___7()
  %5644 = bitcast %struct.zzzz* %5625 to i8*
  call void @free(i8* %5644) #9
  %5645 = icmp ne %struct.zzzz* %5636, null
  br i1 %5645, label %.lr.ph.8, label %._crit_edge.loopexit

.lr.ph.8:                                         ; preds = %5643
  call void @unroll_loop(i32 9)
  %5646 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5636, i32 0, i32 1
  %5647 = load %struct.zzzz*, %struct.zzzz** %5646, align 8
  %5648 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5636, i32 0, i32 0
  %5649 = load i8*, i8** %5648, align 8
  %5650 = icmp ne i8* %5649, null
  br i1 %5650, label %5651, label %5654

; <label>:5651:                                   ; preds = %.lr.ph.8
  %5652 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5636, i32 0, i32 0
  %5653 = load i8*, i8** %5652, align 8
  call void @free(i8* %5653) #9
  br label %5654

; <label>:5654:                                   ; preds = %5651, %.lr.ph.8
  call void @__loop_iteration_test___7()
  %5655 = bitcast %struct.zzzz* %5636 to i8*
  call void @free(i8* %5655) #9
  %5656 = icmp ne %struct.zzzz* %5647, null
  br i1 %5656, label %.lr.ph.9, label %._crit_edge.loopexit

.lr.ph.9:                                         ; preds = %5654
  call void @unroll_loop(i32 9)
  %5657 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5647, i32 0, i32 1
  %5658 = load %struct.zzzz*, %struct.zzzz** %5657, align 8
  %5659 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5647, i32 0, i32 0
  %5660 = load i8*, i8** %5659, align 8
  %5661 = icmp ne i8* %5660, null
  br i1 %5661, label %5662, label %5665

; <label>:5662:                                   ; preds = %.lr.ph.9
  %5663 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5647, i32 0, i32 0
  %5664 = load i8*, i8** %5663, align 8
  call void @free(i8* %5664) #9
  br label %5665

; <label>:5665:                                   ; preds = %5662, %.lr.ph.9
  call void @__loop_iteration_test___7()
  %5666 = bitcast %struct.zzzz* %5647 to i8*
  call void @free(i8* %5666) #9
  %5667 = icmp ne %struct.zzzz* %5658, null
  br i1 %5667, label %.lr.ph.10, label %._crit_edge.loopexit

.lr.ph.10:                                        ; preds = %5665
  call void @unroll_loop(i32 9)
  %5668 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5658, i32 0, i32 1
  %5669 = load %struct.zzzz*, %struct.zzzz** %5668, align 8
  %5670 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5658, i32 0, i32 0
  %5671 = load i8*, i8** %5670, align 8
  %5672 = icmp ne i8* %5671, null
  br i1 %5672, label %5673, label %5676

; <label>:5673:                                   ; preds = %.lr.ph.10
  %5674 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5658, i32 0, i32 0
  %5675 = load i8*, i8** %5674, align 8
  call void @free(i8* %5675) #9
  br label %5676

; <label>:5676:                                   ; preds = %5673, %.lr.ph.10
  call void @__loop_iteration_test___7()
  %5677 = bitcast %struct.zzzz* %5658 to i8*
  call void @free(i8* %5677) #9
  %5678 = icmp ne %struct.zzzz* %5669, null
  br i1 %5678, label %.lr.ph.11, label %._crit_edge.loopexit

.lr.ph.11:                                        ; preds = %5676
  call void @unroll_loop(i32 9)
  %5679 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5669, i32 0, i32 1
  %5680 = load %struct.zzzz*, %struct.zzzz** %5679, align 8
  %5681 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5669, i32 0, i32 0
  %5682 = load i8*, i8** %5681, align 8
  %5683 = icmp ne i8* %5682, null
  br i1 %5683, label %5684, label %5687

; <label>:5684:                                   ; preds = %.lr.ph.11
  %5685 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5669, i32 0, i32 0
  %5686 = load i8*, i8** %5685, align 8
  call void @free(i8* %5686) #9
  br label %5687

; <label>:5687:                                   ; preds = %5684, %.lr.ph.11
  call void @__loop_iteration_test___7()
  %5688 = bitcast %struct.zzzz* %5669 to i8*
  call void @free(i8* %5688) #9
  %5689 = icmp ne %struct.zzzz* %5680, null
  br i1 %5689, label %.lr.ph.12, label %._crit_edge.loopexit

.lr.ph.12:                                        ; preds = %5687
  call void @unroll_loop(i32 9)
  %5690 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5680, i32 0, i32 1
  %5691 = load %struct.zzzz*, %struct.zzzz** %5690, align 8
  %5692 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5680, i32 0, i32 0
  %5693 = load i8*, i8** %5692, align 8
  %5694 = icmp ne i8* %5693, null
  br i1 %5694, label %5695, label %5698

; <label>:5695:                                   ; preds = %.lr.ph.12
  %5696 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5680, i32 0, i32 0
  %5697 = load i8*, i8** %5696, align 8
  call void @free(i8* %5697) #9
  br label %5698

; <label>:5698:                                   ; preds = %5695, %.lr.ph.12
  call void @__loop_iteration_test___7()
  %5699 = bitcast %struct.zzzz* %5680 to i8*
  call void @free(i8* %5699) #9
  %5700 = icmp ne %struct.zzzz* %5691, null
  br i1 %5700, label %.lr.ph.13, label %._crit_edge.loopexit

.lr.ph.13:                                        ; preds = %5698
  call void @unroll_loop(i32 9)
  %5701 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5691, i32 0, i32 1
  %5702 = load %struct.zzzz*, %struct.zzzz** %5701, align 8
  %5703 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5691, i32 0, i32 0
  %5704 = load i8*, i8** %5703, align 8
  %5705 = icmp ne i8* %5704, null
  br i1 %5705, label %5706, label %5709

; <label>:5706:                                   ; preds = %.lr.ph.13
  %5707 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5691, i32 0, i32 0
  %5708 = load i8*, i8** %5707, align 8
  call void @free(i8* %5708) #9
  br label %5709

; <label>:5709:                                   ; preds = %5706, %.lr.ph.13
  call void @__loop_iteration_test___7()
  %5710 = bitcast %struct.zzzz* %5691 to i8*
  call void @free(i8* %5710) #9
  %5711 = icmp ne %struct.zzzz* %5702, null
  br i1 %5711, label %.lr.ph.14, label %._crit_edge.loopexit

.lr.ph.14:                                        ; preds = %5709
  call void @unroll_loop(i32 9)
  %5712 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5702, i32 0, i32 1
  %5713 = load %struct.zzzz*, %struct.zzzz** %5712, align 8
  %5714 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5702, i32 0, i32 0
  %5715 = load i8*, i8** %5714, align 8
  %5716 = icmp ne i8* %5715, null
  br i1 %5716, label %5717, label %5720

; <label>:5717:                                   ; preds = %.lr.ph.14
  %5718 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5702, i32 0, i32 0
  %5719 = load i8*, i8** %5718, align 8
  call void @free(i8* %5719) #9
  br label %5720

; <label>:5720:                                   ; preds = %5717, %.lr.ph.14
  call void @__loop_iteration_test___7()
  %5721 = bitcast %struct.zzzz* %5702 to i8*
  call void @free(i8* %5721) #9
  %5722 = icmp ne %struct.zzzz* %5713, null
  br i1 %5722, label %.lr.ph.15, label %._crit_edge.loopexit

.lr.ph.15:                                        ; preds = %5720
  call void @unroll_loop(i32 9)
  %5723 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5713, i32 0, i32 1
  %5724 = load %struct.zzzz*, %struct.zzzz** %5723, align 8
  %5725 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5713, i32 0, i32 0
  %5726 = load i8*, i8** %5725, align 8
  %5727 = icmp ne i8* %5726, null
  br i1 %5727, label %5728, label %5731

; <label>:5728:                                   ; preds = %.lr.ph.15
  %5729 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5713, i32 0, i32 0
  %5730 = load i8*, i8** %5729, align 8
  call void @free(i8* %5730) #9
  br label %5731

; <label>:5731:                                   ; preds = %5728, %.lr.ph.15
  call void @__loop_iteration_test___7()
  %5732 = bitcast %struct.zzzz* %5713 to i8*
  call void @free(i8* %5732) #9
  %5733 = icmp ne %struct.zzzz* %5724, null
  br i1 %5733, label %.lr.ph.16, label %._crit_edge.loopexit

.lr.ph.16:                                        ; preds = %5731
  call void @unroll_loop(i32 9)
  %5734 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5724, i32 0, i32 1
  %5735 = load %struct.zzzz*, %struct.zzzz** %5734, align 8
  %5736 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5724, i32 0, i32 0
  %5737 = load i8*, i8** %5736, align 8
  %5738 = icmp ne i8* %5737, null
  br i1 %5738, label %5739, label %5742

; <label>:5739:                                   ; preds = %.lr.ph.16
  %5740 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5724, i32 0, i32 0
  %5741 = load i8*, i8** %5740, align 8
  call void @free(i8* %5741) #9
  br label %5742

; <label>:5742:                                   ; preds = %5739, %.lr.ph.16
  call void @__loop_iteration_test___7()
  %5743 = bitcast %struct.zzzz* %5724 to i8*
  call void @free(i8* %5743) #9
  %5744 = icmp ne %struct.zzzz* %5735, null
  br i1 %5744, label %.lr.ph.17, label %._crit_edge.loopexit

.lr.ph.17:                                        ; preds = %5742
  call void @unroll_loop(i32 9)
  %5745 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5735, i32 0, i32 1
  %5746 = load %struct.zzzz*, %struct.zzzz** %5745, align 8
  %5747 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5735, i32 0, i32 0
  %5748 = load i8*, i8** %5747, align 8
  %5749 = icmp ne i8* %5748, null
  br i1 %5749, label %5750, label %5753

; <label>:5750:                                   ; preds = %.lr.ph.17
  %5751 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5735, i32 0, i32 0
  %5752 = load i8*, i8** %5751, align 8
  call void @free(i8* %5752) #9
  br label %5753

; <label>:5753:                                   ; preds = %5750, %.lr.ph.17
  call void @__loop_iteration_test___7()
  %5754 = bitcast %struct.zzzz* %5735 to i8*
  call void @free(i8* %5754) #9
  %5755 = icmp ne %struct.zzzz* %5746, null
  br i1 %5755, label %.lr.ph.18, label %._crit_edge.loopexit

.lr.ph.18:                                        ; preds = %5753
  call void @unroll_loop(i32 9)
  %5756 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5746, i32 0, i32 1
  %5757 = load %struct.zzzz*, %struct.zzzz** %5756, align 8
  %5758 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5746, i32 0, i32 0
  %5759 = load i8*, i8** %5758, align 8
  %5760 = icmp ne i8* %5759, null
  br i1 %5760, label %5761, label %5764

; <label>:5761:                                   ; preds = %.lr.ph.18
  %5762 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5746, i32 0, i32 0
  %5763 = load i8*, i8** %5762, align 8
  call void @free(i8* %5763) #9
  br label %5764

; <label>:5764:                                   ; preds = %5761, %.lr.ph.18
  call void @__loop_iteration_test___7()
  %5765 = bitcast %struct.zzzz* %5746 to i8*
  call void @free(i8* %5765) #9
  %5766 = icmp ne %struct.zzzz* %5757, null
  br i1 %5766, label %.lr.ph.19, label %._crit_edge.loopexit

.lr.ph.19:                                        ; preds = %5764
  call void @unroll_loop(i32 9)
  %5767 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5757, i32 0, i32 1
  %5768 = load %struct.zzzz*, %struct.zzzz** %5767, align 8
  %5769 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5757, i32 0, i32 0
  %5770 = load i8*, i8** %5769, align 8
  %5771 = icmp ne i8* %5770, null
  br i1 %5771, label %5772, label %5775

; <label>:5772:                                   ; preds = %.lr.ph.19
  %5773 = getelementptr inbounds %struct.zzzz, %struct.zzzz* %5757, i32 0, i32 0
  %5774 = load i8*, i8** %5773, align 8
  call void @free(i8* %5774) #9
  br label %5775

; <label>:5775:                                   ; preds = %5772, %.lr.ph.19
  call void @__loop_iteration_test___7()
  %5776 = bitcast %struct.zzzz* %5757 to i8*
  call void @free(i8* %5776) #9
  br label %._crit_edge.loopexit
}

declare void @__loop_termination_test___7()

declare void @__loop_iteration_test___7()

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "track_func"="true" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }
attributes #13 = { nounwind readnone }

!llvm.ident = !{!7, !7, !7, !7, !7, !7, !7, !7}
!llvm.module.flags = !{!8}

!0 = !{i64 13}
!1 = !{i64 17}
!2 = !{i64 44}
!3 = !{i64 43}
!4 = !{i64 14}
!5 = !{i64 3}
!6 = !{i64 0}
!7 = !{!"clang version 7.0.0 (tags/RELEASE_700/final)"}
!8 = !{i32 1, !"wchar_size", i32 4}
!9 = !{i64 2}
!10 = !{!"1"}
!11 = !{i64 39}
!12 = !{i64 38}
!13 = !{i64 37}
!14 = !{i64 36}
!15 = !{i64 35}
!16 = !{i64 34}
!17 = !{i64 28}
!18 = !{i64 33}
!19 = !{i64 19}
!20 = !{i64 31}
!21 = !{i64 29}
!22 = !{i64 27}
!23 = !{i64 30}
!24 = !{i64 45}
!25 = !{i64 32}
!26 = !{i64 65}
!27 = !{i64 25}
!28 = !{i64 64}
!29 = !{i64 55}
!30 = !{i64 63}
!31 = !{i64 62}
!32 = !{i64 1}
!33 = !{i64 61}
!34 = !{i64 60}
!35 = !{i64 18}
!36 = !{i64 59}
!37 = !{i64 58}
!38 = !{i64 57}
!39 = !{i64 56}
!40 = !{i64 66}
!41 = !{i64 54}
!42 = !{i64 20}
!43 = !{i64 53}
!44 = !{i64 52}
!45 = !{i64 22}
!46 = !{i64 26}
!47 = !{i64 51}
!48 = !{i64 50}
!49 = !{i64 23}
!50 = !{i64 24}
!51 = !{i64 49}
!52 = !{i64 48}
!53 = !{i64 47}
!54 = !{i64 46}
!55 = !{i64 21}
!56 = !{i64 7}
!57 = !{i64 6}
!58 = !{i64 4}
!59 = !{i64 8}
!60 = !{i64 40}
!61 = !{i64 41}
!62 = !{i64 15}
!63 = !{i64 42}
!64 = !{i64 9}
!65 = !{i64 10}
!66 = !{i64 16}
!67 = !{i64 12}
!68 = !{i64 11}
!69 = !{i64 5}
